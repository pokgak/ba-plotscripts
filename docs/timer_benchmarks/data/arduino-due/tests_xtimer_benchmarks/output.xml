<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:33:41.336" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.985" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:44.994" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:46.167" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:44.984" endtime="20201110 08:33:46.169"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.174" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:33:46.171" endtime="20201110 08:33:49.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.982" endtime="20201110 08:33:49.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.186" endtime="20201110 08:33:49.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.179" endtime="20201110 08:33:49.377"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.390" endtime="20201110 08:33:52.412"></status>
</kw>
<msg timestamp="20201110 08:33:52.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.388" endtime="20201110 08:33:52.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.415" endtime="20201110 08:33:52.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.424" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:52.420" endtime="20201110 08:33:52.425"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:49.386" endtime="20201110 08:33:52.427"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:49.383" endtime="20201110 08:33:52.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.382" endtime="20201110 08:33:52.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:52.436" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:52.435" endtime="20201110 08:33:52.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.430" endtime="20201110 08:33:52.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.381" endtime="20201110 08:33:52.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.381" endtime="20201110 08:33:52.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.441" endtime="20201110 08:33:52.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.379" endtime="20201110 08:33:52.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.447" endtime="20201110 08:33:52.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.378" endtime="20201110 08:33:52.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.981" endtime="20201110 08:33:52.452"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.464" endtime="20201110 08:33:52.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.461" endtime="20201110 08:33:52.487"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.514" endtime="20201110 08:33:55.537"></status>
</kw>
<msg timestamp="20201110 08:33:55.538" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.511" endtime="20201110 08:33:55.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.543" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.540" endtime="20201110 08:33:55.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.549" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:55.545" endtime="20201110 08:33:55.550"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:52.505" endtime="20201110 08:33:55.551"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:52.500" endtime="20201110 08:33:55.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.497" endtime="20201110 08:33:55.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:55.560" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:55.559" endtime="20201110 08:33:55.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.555" endtime="20201110 08:33:55.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.495" endtime="20201110 08:33:55.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.494" endtime="20201110 08:33:55.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.564" endtime="20201110 08:33:55.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.491" endtime="20201110 08:33:55.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.488" endtime="20201110 08:33:55.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.458" endtime="20201110 08:33:55.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.585" endtime="20201110 08:33:55.595"></status>
</kw>
<msg timestamp="20201110 08:33:55.596" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.580" endtime="20201110 08:33:55.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.598" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.597" endtime="20201110 08:33:55.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.599" endtime="20201110 08:33:55.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.575" endtime="20201110 08:33:55.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.571" endtime="20201110 08:33:55.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.606" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:33:55.605" endtime="20201110 08:33:55.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.608" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201110 08:33:55.607" endtime="20201110 08:33:55.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.602" endtime="20201110 08:33:55.609"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:52.452" endtime="20201110 08:33:55.609" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:41.462" endtime="20201110 08:33:55.612"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.665" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:55.673" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:56.773" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:55.664" endtime="20201110 08:33:56.773"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.776" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:33:56.774" endtime="20201110 08:33:59.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.662" endtime="20201110 08:33:59.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.783" endtime="20201110 08:34:00.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.780" endtime="20201110 08:34:00.064"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.076" endtime="20201110 08:34:03.097"></status>
</kw>
<msg timestamp="20201110 08:34:03.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.074" endtime="20201110 08:34:03.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.101" endtime="20201110 08:34:03.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.110" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:03.106" endtime="20201110 08:34:03.110"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:00.072" endtime="20201110 08:34:03.112"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:00.070" endtime="20201110 08:34:03.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.069" endtime="20201110 08:34:03.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:03.121" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:03.120" endtime="20201110 08:34:03.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.115" endtime="20201110 08:34:03.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.068" endtime="20201110 08:34:03.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.067" endtime="20201110 08:34:03.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.125" endtime="20201110 08:34:03.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.066" endtime="20201110 08:34:03.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.130" endtime="20201110 08:34:03.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.064" endtime="20201110 08:34:03.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.661" endtime="20201110 08:34:03.135"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.148" endtime="20201110 08:34:03.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.143" endtime="20201110 08:34:03.169"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.182" endtime="20201110 08:34:06.203"></status>
</kw>
<msg timestamp="20201110 08:34:06.204" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.180" endtime="20201110 08:34:06.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.207" endtime="20201110 08:34:06.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.216" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:06.212" endtime="20201110 08:34:06.217"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:03.178" endtime="20201110 08:34:06.218"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:03.175" endtime="20201110 08:34:06.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.174" endtime="20201110 08:34:06.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:06.228" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:06.226" endtime="20201110 08:34:06.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.222" endtime="20201110 08:34:06.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.173" endtime="20201110 08:34:06.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.173" endtime="20201110 08:34:06.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.231" endtime="20201110 08:34:06.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.171" endtime="20201110 08:34:06.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.170" endtime="20201110 08:34:06.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.141" endtime="20201110 08:34:06.237"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:34:06.241" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.257" endtime="20201110 08:34:06.274"></status>
</kw>
<msg timestamp="20201110 08:34:06.275" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.253" endtime="20201110 08:34:06.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.280" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.277" endtime="20201110 08:34:06.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.282" endtime="20201110 08:34:06.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.248" endtime="20201110 08:34:06.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.244" endtime="20201110 08:34:06.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.301" endtime="20201110 08:34:06.576"></status>
</kw>
<msg timestamp="20201110 08:34:06.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10013775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100143097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:06.298" endtime="20201110 08:34:06.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10013775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100143097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:06.579" endtime="20201110 08:34:06.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.587" endtime="20201110 08:34:06.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.292" endtime="20201110 08:34:06.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.289" endtime="20201110 08:34:06.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.593" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:06.592" endtime="20201110 08:34:06.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.597" level="INFO">VALUE: [{'time': 3.10013775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100143097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000099911e-06, 'source_diff': 5.347000000099911e-06}, {'time': 3.100147014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.91699999990891e-06, 'source_diff': 3.91699999990891e-06}, {'time': 3.100150986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000018738e-06, 'source_diff': 3.972000000018738e-06}, {'time': 3.100154514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.528000000141418e-06, 'source_diff': 3.528000000141418e-06}, {'time': 3.100157681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.167000000026121e-06, 'source_diff': 3.167000000026121e-06}, {'time': 3.100163528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8469999997257105e-06, 'source_diff': 5.8469999997257105e-06}, {'time': 3.100168667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000209393e-06, 'source_diff': 5.139000000209393e-06}, {'time': 3.100171111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.443999999712787e-06, 'source_diff': 2.443999999712787e-06}, {'time': 3.100177194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000156602e-06, 'source_diff': 6.083000000156602e-06}, {'time': 3.100181847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652999999965601e-06, 'source_diff': 4.652999999965601e-06}, {'time': 3.100186819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000158516e-06, 'source_diff': 4.972000000158516e-06}, {'time': 3.100192597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.777999999789785e-06, 'source_diff': 5.777999999789785e-06}, {'time': 3.100195806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208999999948503e-06, 'source_diff': 3.208999999948503e-06}, {'time': 3.100199583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7770000003156667e-06, 'source_diff': 3.7770000003156667e-06}, {'time': 3.100205486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.902999999918279e-06, 'source_diff': 5.902999999918279e-06}, {'time': 3.100211042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000073169e-06, 'source_diff': 5.556000000073169e-06}, {'time': 3.100213708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6659999998734918e-06, 'source_diff': 2.6659999998734918e-06}, {'time': 3.100216972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2640000000583314e-06, 'source_diff': 3.2640000000583314e-06}, {'time': 3.100222833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 3.100226917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0839999999597865e-06, 'source_diff': 4.0839999999597865e-06}, {'time': 3.100231639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999901527e-06, 'source_diff': 4.721999999901527e-06}, {'time': 3.100234111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4719999998090714e-06, 'source_diff': 2.4719999998090714e-06}, {'time': 3.100239042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.931000000318875e-06, 'source_diff': 4.931000000318875e-06}, {'time': 3.100243694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.651999999882861e-06, 'source_diff': 4.651999999882861e-06}, {'time': 3.100246514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.820000000181011e-06, 'source_diff': 2.820000000181011e-06}, {'time': 3.100248958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.443999999712787e-06, 'source_diff': 2.443999999712787e-06}, {'time': 3.100252958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000115023e-06, 'source_diff': 4.000000000115023e-06}, {'time': 3.100257167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000088281e-06, 'source_diff': 4.209000000088281e-06}, {'time': 3.100263278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999808797e-06, 'source_diff': 6.110999999808797e-06}, {'time': 3.100268417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000209393e-06, 'source_diff': 5.139000000209393e-06}, {'time': 3.100271278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8610000000206526e-06, 'source_diff': 2.8610000000206526e-06}, {'time': 3.100277028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7499999996935e-06, 'source_diff': 5.7499999996935e-06}, {'time': 3.100279514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.486000000079258e-06, 'source_diff': 2.486000000079258e-06}, {'time': 3.10028525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736000000311492e-06, 'source_diff': 5.736000000311492e-06}, {'time': 3.1002905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.249999999623611e-06, 'source_diff': 5.249999999623611e-06}, {'time': 3.100296403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000362368e-06, 'source_diff': 5.903000000362368e-06}, {'time': 3.100299931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.527999999697329e-06, 'source_diff': 3.527999999697329e-06}, {'time': 3.100305597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000292826e-06, 'source_diff': 5.666000000292826e-06}, {'time': 3.100308639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0419999998976266e-06, 'source_diff': 3.0419999998976266e-06}, {'time': 3.100313889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2500000000677005e-06, 'source_diff': 5.2500000000677005e-06}, {'time': 3.100317778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999812626e-06, 'source_diff': 3.888999999812626e-06}, {'time': 3.100321236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4580000001227518e-06, 'source_diff': 3.4580000001227518e-06}, {'time': 3.100326069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999759835e-06, 'source_diff': 4.832999999759835e-06}, {'time': 3.100332042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.972999999936945e-06, 'source_diff': 5.972999999936945e-06}, {'time': 3.100337639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5970000003569e-06, 'source_diff': 5.5970000003569e-06}, {'time': 3.100342319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999979145e-06, 'source_diff': 4.679999999979145e-06}, {'time': 3.100346125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8060000000506022e-06, 'source_diff': 3.8060000000506022e-06}, {'time': 3.100350125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999996709334e-06, 'source_diff': 3.9999999996709334e-06}, {'time': 3.100354361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000101825e-06, 'source_diff': 4.236000000101825e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:06.594" endtime="20201110 08:34:06.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.590" endtime="20201110 08:34:06.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:06.612" level="INFO">${debug-compressed} = {'source_diff': [0, 5.347000000099911e-06, 3.91699999990891e-06, 3.972000000018738e-06, 3.528000000141418e-06, 3.167000000026121e-06, 5.8469999997257105e-06, 5.139000000209393e-06, 2.443999999712787e-...</msg>
<status status="PASS" starttime="20201110 08:34:06.599" endtime="20201110 08:34:06.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.616" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:06.615" endtime="20201110 08:34:06.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.619" level="INFO">VALUE: {'source_diff': [0, 5.347000000099911e-06, 3.91699999990891e-06, 3.972000000018738e-06, 3.528000000141418e-06, 3.167000000026121e-06, 5.8469999997257105e-06, 5.139000000209393e-06, 2.443999999712787e-06, 6.083000000156602e-06, 4.652999999965601e-06, 4.972000000158516e-06, 5.777999999789785e-06, 3.208999999948503e-06, 3.7770000003156667e-06, 5.902999999918279e-06, 5.556000000073169e-06, 2.6659999998734918e-06, 3.2640000000583314e-06, 5.860999999995897e-06, 4.0839999999597865e-06, 4.721999999901527e-06, 2.4719999998090714e-06, 4.931000000318875e-06, 4.651999999882861e-06, 2.820000000181011e-06, 2.443999999712787e-06, 4.000000000115023e-06, 4.209000000088281e-06, 6.110999999808797e-06, 5.139000000209393e-06, 2.8610000000206526e-06, 5.7499999996935e-06, 2.486000000079258e-06, 5.736000000311492e-06, 5.249999999623611e-06, 5.903000000362368e-06, 3.527999999697329e-06, 5.666000000292826e-06, 3.0419999998976266e-06, 5.2500000000677005e-06, 3.888999999812626e-06, 3.4580000001227518e-06, 4.832999999759835e-06, 5.972999999936945e-06, 5.5970000003569e-06, 4.679999999979145e-06, 3.8060000000506022e-06, 3.9999999996709334e-06, 4.236000000101825e-06], 'diff': [0, 5.347000000099911e-06, 3.91699999990891e-06, 3.972000000018738e-06, 3.528000000141418e-06, 3.167000000026121e-06, 5.8469999997257105e-06, 5.139000000209393e-06, 2.443999999712787e-06, 6.083000000156602e-06, 4.652999999965601e-06, 4.972000000158516e-06, 5.777999999789785e-06, 3.208999999948503e-06, 3.7770000003156667e-06, 5.902999999918279e-06, 5.556000000073169e-06, 2.6659999998734918e-06, 3.2640000000583314e-06, 5.860999999995897e-06, 4.0839999999597865e-06, 4.721999999901527e-06, 2.4719999998090714e-06, 4.931000000318875e-06, 4.651999999882861e-06, 2.820000000181011e-06, 2.443999999712787e-06, 4.000000000115023e-06, 4.209000000088281e-06, 6.110999999808797e-06, 5.139000000209393e-06, 2.8610000000206526e-06, 5.7499999996935e-06, 2.486000000079258e-06, 5.736000000311492e-06, 5.249999999623611e-06, 5.903000000362368e-06, 3.527999999697329e-06, 5.666000000292826e-06, 3.0419999998976266e-06, 5.2500000000677005e-06, 3.888999999812626e-06, 3.4580000001227518e-06, 4.832999999759835e-06, 5.972999999936945e-06, 5.5970000003569e-06, 4.679999999979145e-06, 3.8060000000506022e-06, 3.9999999996709334e-06, 4.236000000101825e-06], 'time': [3.10013775, 3.100143097, 3.100147014, 3.100150986, 3.100154514, 3.100157681, 3.100163528, 3.100168667, 3.100171111, 3.100177194, 3.100181847, 3.100186819, 3.100192597, 3.100195806, 3.100199583, 3.100205486, 3.100211042, 3.100213708, 3.100216972, 3.100222833, 3.100226917, 3.100231639, 3.100234111, 3.100239042, 3.100243694, 3.100246514, 3.100248958, 3.100252958, 3.100257167, 3.100263278, 3.100268417, 3.100271278, 3.100277028, 3.100279514, 3.10028525, 3.1002905, 3.100296403, 3.100299931, 3.100305597, 3.100308639, 3.100313889, 3.100317778, 3.100321236, 3.100326069, 3.100332042, 3.100337639, 3.100342319, 3.100346125, 3.100350125, 3.100354361], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:06.617" endtime="20201110 08:34:06.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.613" endtime="20201110 08:34:06.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.624" level="INFO">${RESULT} = [{'time': 3.100143097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000099911e-06, 'source_diff': 5.347000000099911e-06}, {'time': 3.100150986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.621" endtime="20201110 08:34:06.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:06.632" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.347000000099911e-06, 3.972000000018738e-06, 3.167000000026121e-06, 5.139000000209393e-06, 6.083000000156602e-06, 4.972000000158516e-06, 3.208999999948503e-06, 5.902999999918279e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:06.625" endtime="20201110 08:34:06.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.636" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:06.635" endtime="20201110 08:34:06.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.638" level="INFO">VALUE: [5.347000000099911e-06, 3.972000000018738e-06, 3.167000000026121e-06, 5.139000000209393e-06, 6.083000000156602e-06, 4.972000000158516e-06, 3.208999999948503e-06, 5.902999999918279e-06, 2.6659999998734918e-06, 5.860999999995897e-06, 4.721999999901527e-06, 4.931000000318875e-06, 2.820000000181011e-06, 4.000000000115023e-06, 6.110999999808797e-06, 2.8610000000206526e-06, 2.486000000079258e-06, 5.249999999623611e-06, 3.527999999697329e-06, 3.0419999998976266e-06, 3.888999999812626e-06, 4.832999999759835e-06, 5.5970000003569e-06, 3.8060000000506022e-06, 4.236000000101825e-06]</msg>
<status status="PASS" starttime="20201110 08:34:06.637" endtime="20201110 08:34:06.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.632" endtime="20201110 08:34:06.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.641" endtime="20201110 08:34:06.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.645" endtime="20201110 08:34:06.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.643" endtime="20201110 08:34:06.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.640" endtime="20201110 08:34:06.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.242" endtime="20201110 08:34:06.666"></status>
</kw>
<msg timestamp="20201110 08:34:06.666" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.674" endtime="20201110 08:34:06.686"></status>
</kw>
<msg timestamp="20201110 08:34:06.687" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.673" endtime="20201110 08:34:06.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.689" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.688" endtime="20201110 08:34:06.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.690" endtime="20201110 08:34:06.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.669" endtime="20201110 08:34:06.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.668" endtime="20201110 08:34:06.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.699" endtime="20201110 08:34:06.971"></status>
</kw>
<msg timestamp="20201110 08:34:06.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018918417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018923556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.698" endtime="20201110 08:34:06.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018918417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018923556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.973" endtime="20201110 08:34:06.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.979" endtime="20201110 08:34:06.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.695" endtime="20201110 08:34:06.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.693" endtime="20201110 08:34:06.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.986" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:06.985" endtime="20201110 08:34:06.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.989" level="INFO">VALUE: [{'time': 0.018918417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018923556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018929208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.018931736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.018937111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018940264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018942736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4720000000033604e-06, 'source_diff': 2.4720000000033604e-06}, {'time': 0.018946708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.018949417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.018953042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018959083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.018962125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.018966653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018971861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018977569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018982944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.018986069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.018991181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.11199999999809e-06, 'source_diff': 5.11199999999809e-06}, {'time': 0.018994917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018998111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.194000000001501e-06, 'source_diff': 3.194000000001501e-06}, {'time': 0.019002667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.019007958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.019010653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.695000000000475e-06, 'source_diff': 2.695000000000475e-06}, {'time': 0.019016264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.019018764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.019024917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.019030139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.019032611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.019035361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.019041458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.019044083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.019047611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.019053181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.019057639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.019060028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.019065375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.01906825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.019073264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.019079347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.01908525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.019090083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.019093986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.019096667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019101611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.019106389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.019111597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.019114347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.01912025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.019123042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.019128889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:06.987" endtime="20201110 08:34:06.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.982" endtime="20201110 08:34:06.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:07.004" level="INFO">${debug-compressed} = {'source_diff': [0, 5.139000000001226e-06, 5.651999999998353e-06, 2.52800000000164e-06, 5.374999999998437e-06, 3.1529999999987957e-06, 2.4720000000033604e-06, 3.971999999997922e-06, 2.7090000000000447...</msg>
<status status="PASS" starttime="20201110 08:34:06.991" endtime="20201110 08:34:07.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.008" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:07.007" endtime="20201110 08:34:07.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.011" level="INFO">VALUE: {'source_diff': [0, 5.139000000001226e-06, 5.651999999998353e-06, 2.52800000000164e-06, 5.374999999998437e-06, 3.1529999999987957e-06, 2.4720000000033604e-06, 3.971999999997922e-06, 2.7090000000000447e-06, 3.625000000000156e-06, 6.041000000001767e-06, 3.0419999999982406e-06, 4.528000000000171e-06, 5.207999999999602e-06, 5.708000000000102e-06, 5.375000000001906e-06, 3.124999999999656e-06, 5.11199999999809e-06, 3.736000000000711e-06, 3.194000000001501e-06, 4.555999999999311e-06, 5.290999999997548e-06, 2.695000000000475e-06, 5.611000000002586e-06, 2.4999999999990308e-06, 6.1529999999983265e-06, 5.222000000002641e-06, 2.471999999999891e-06, 2.749999999999281e-06, 6.097000000000047e-06, 2.6249999999991558e-06, 3.5279999999991707e-06, 5.569999999999881e-06, 4.458000000002321e-06, 2.3889999999984757e-06, 5.346999999999297e-06, 2.874999999999406e-06, 5.014000000001101e-06, 6.083000000000477e-06, 5.903000000001546e-06, 4.832999999999227e-06, 3.902999999999546e-06, 2.681000000000905e-06, 4.943999999999782e-06, 4.778000000000421e-06, 5.207999999999602e-06, 2.749999999999281e-06, 5.9029999999980765e-06, 2.79200000000146e-06, 5.846999999999797e-06], 'diff': [0, 5.139000000001226e-06, 5.651999999998353e-06, 2.52800000000164e-06, 5.374999999998437e-06, 3.1529999999987957e-06, 2.4720000000033604e-06, 3.971999999997922e-06, 2.7090000000000447e-06, 3.625000000000156e-06, 6.041000000001767e-06, 3.0419999999982406e-06, 4.528000000000171e-06, 5.207999999999602e-06, 5.708000000000102e-06, 5.375000000001906e-06, 3.124999999999656e-06, 5.11199999999809e-06, 3.736000000000711e-06, 3.194000000001501e-06, 4.555999999999311e-06, 5.290999999997548e-06, 2.695000000000475e-06, 5.611000000002586e-06, 2.4999999999990308e-06, 6.1529999999983265e-06, 5.222000000002641e-06, 2.471999999999891e-06, 2.749999999999281e-06, 6.097000000000047e-06, 2.6249999999991558e-06, 3.5279999999991707e-06, 5.569999999999881e-06, 4.458000000002321e-06, 2.3889999999984757e-06, 5.346999999999297e-06, 2.874999999999406e-06, 5.014000000001101e-06, 6.083000000000477e-06, 5.903000000001546e-06, 4.832999999999227e-06, 3.902999999999546e-06, 2.681000000000905e-06, 4.943999999999782e-06, 4.778000000000421e-06, 5.207999999999602e-06, 2.749999999999281e-06, 5.9029999999980765e-06, 2.79200000000146e-06, 5.846999999999797e-06], 'time': [0.018918417, 0.018923556, 0.018929208, 0.018931736, 0.018937111, 0.018940264, 0.018942736, 0.018946708, 0.018949417, 0.018953042, 0.018959083, 0.018962125, 0.018966653, 0.018971861, 0.018977569, 0.018982944, 0.018986069, 0.018991181, 0.018994917, 0.018998111, 0.019002667, 0.019007958, 0.019010653, 0.019016264, 0.019018764, 0.019024917, 0.019030139, 0.019032611, 0.019035361, 0.019041458, 0.019044083, 0.019047611, 0.019053181, 0.019057639, 0.019060028, 0.019065375, 0.01906825, 0.019073264, 0.019079347, 0.01908525, 0.019090083, 0.019093986, 0.019096667, 0.019101611, 0.019106389, 0.019111597, 0.019114347, 0.01912025, 0.019123042, 0.019128889], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:07.009" endtime="20201110 08:34:07.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.005" endtime="20201110 08:34:07.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.016" level="INFO">${RESULT} = [{'time': 0.018923556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018931736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.013" endtime="20201110 08:34:07.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:07.024" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.139000000001226e-06, 2.52800000000164e-06, 3.1529999999987957e-06, 3.971999999997922e-06, 3.625000000000156e-06, 3.0419999999982406e-06, 5.207999999999602e-06, 5.375000000001906e-06...</msg>
<status status="PASS" starttime="20201110 08:34:07.017" endtime="20201110 08:34:07.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.029" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:07.028" endtime="20201110 08:34:07.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.031" level="INFO">VALUE: [5.139000000001226e-06, 2.52800000000164e-06, 3.1529999999987957e-06, 3.971999999997922e-06, 3.625000000000156e-06, 3.0419999999982406e-06, 5.207999999999602e-06, 5.375000000001906e-06, 5.11199999999809e-06, 3.194000000001501e-06, 5.290999999997548e-06, 5.611000000002586e-06, 6.1529999999983265e-06, 2.471999999999891e-06, 6.097000000000047e-06, 3.5279999999991707e-06, 4.458000000002321e-06, 5.346999999999297e-06, 5.014000000001101e-06, 5.903000000001546e-06, 3.902999999999546e-06, 4.943999999999782e-06, 5.207999999999602e-06, 5.9029999999980765e-06, 5.846999999999797e-06]</msg>
<status status="PASS" starttime="20201110 08:34:07.030" endtime="20201110 08:34:07.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.025" endtime="20201110 08:34:07.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.034" endtime="20201110 08:34:07.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.037" endtime="20201110 08:34:07.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.036" endtime="20201110 08:34:07.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.032" endtime="20201110 08:34:07.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.666" endtime="20201110 08:34:07.059"></status>
</kw>
<msg timestamp="20201110 08:34:07.059" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.067" endtime="20201110 08:34:07.079"></status>
</kw>
<msg timestamp="20201110 08:34:07.079" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.065" endtime="20201110 08:34:07.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.082" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.081" endtime="20201110 08:34:07.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.083" endtime="20201110 08:34:07.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.063" endtime="20201110 08:34:07.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.061" endtime="20201110 08:34:07.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.093" endtime="20201110 08:34:07.363"></status>
</kw>
<msg timestamp="20201110 08:34:07.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017695403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.091" endtime="20201110 08:34:07.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017695403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.366" endtime="20201110 08:34:07.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.371" endtime="20201110 08:34:07.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.089" endtime="20201110 08:34:07.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.087" endtime="20201110 08:34:07.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.377" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:07.376" endtime="20201110 08:34:07.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.381" level="INFO">VALUE: [{'time': 0.017690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017695403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.017699403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017703681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017708306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.017713667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017717153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017722444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.017724819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017730958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.017734014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0559999999978105e-06, 'source_diff': 3.0559999999978105e-06}, {'time': 0.017738056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.017743694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.638000000002252e-06, 'source_diff': 5.638000000002252e-06}, {'time': 0.017747806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.017751028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.017756333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.0177595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.017764472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017767264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.017772278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.017777417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.01778225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017786556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017791681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.017797222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.017803139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.017807542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017813403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017817153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017821819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.017825514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.017831306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017835833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.017838403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}, {'time': 0.017840903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.017844333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.017848917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.017855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017860264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.017864319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.017868917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.017873667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.017877764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017883472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.017887722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.017890903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.017894347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4440000000017512e-06, 'source_diff': 3.4440000000017512e-06}, {'time': 0.017897028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.017903056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017907056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:07.379" endtime="20201110 08:34:07.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.374" endtime="20201110 08:34:07.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:07.396" level="INFO">${debug-compressed} = {'source_diff': [0, 4.9589999999988255e-06, 4.000000000000531e-06, 4.277999999999921e-06, 4.625000000001156e-06, 5.360999999998867e-06, 3.486000000000461e-06, 5.291000000001017e-06, 2.3749999999989058...</msg>
<status status="PASS" starttime="20201110 08:34:07.383" endtime="20201110 08:34:07.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.400" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:07.399" endtime="20201110 08:34:07.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.403" level="INFO">VALUE: {'source_diff': [0, 4.9589999999988255e-06, 4.000000000000531e-06, 4.277999999999921e-06, 4.625000000001156e-06, 5.360999999998867e-06, 3.486000000000461e-06, 5.291000000001017e-06, 2.3749999999989058e-06, 6.139000000002226e-06, 3.0559999999978105e-06, 4.041999999999241e-06, 5.638000000002252e-06, 4.11200000000056e-06, 3.2219999999971716e-06, 5.305000000000587e-06, 3.167000000001835e-06, 4.971999999998922e-06, 2.79200000000146e-06, 5.0139999999976315e-06, 5.139000000001226e-06, 4.832999999999227e-06, 4.305999999999061e-06, 5.125000000001656e-06, 5.541000000001267e-06, 5.916999999997646e-06, 4.403000000000046e-06, 5.860999999999367e-06, 3.750000000000281e-06, 4.666000000000392e-06, 3.695000000001475e-06, 5.792000000000991e-06, 4.526999999997228e-06, 2.5700000000003498e-06, 2.5000000000025002e-06, 3.429999999998712e-06, 4.5839999999984504e-06, 6.083000000000477e-06, 5.264000000001351e-06, 4.054999999999337e-06, 4.59800000000149e-06, 4.7499999999978115e-06, 4.097000000001516e-06, 5.708000000000102e-06, 4.250000000000781e-06, 3.1809999999979355e-06, 3.4440000000017512e-06, 2.6809999999974354e-06, 6.028000000001671e-06, 4.000000000000531e-06], 'diff': [0, 4.9589999999988255e-06, 4.000000000000531e-06, 4.277999999999921e-06, 4.625000000001156e-06, 5.360999999998867e-06, 3.486000000000461e-06, 5.291000000001017e-06, 2.3749999999989058e-06, 6.139000000002226e-06, 3.0559999999978105e-06, 4.041999999999241e-06, 5.638000000002252e-06, 4.11200000000056e-06, 3.2219999999971716e-06, 5.305000000000587e-06, 3.167000000001835e-06, 4.971999999998922e-06, 2.79200000000146e-06, 5.0139999999976315e-06, 5.139000000001226e-06, 4.832999999999227e-06, 4.305999999999061e-06, 5.125000000001656e-06, 5.541000000001267e-06, 5.916999999997646e-06, 4.403000000000046e-06, 5.860999999999367e-06, 3.750000000000281e-06, 4.666000000000392e-06, 3.695000000001475e-06, 5.792000000000991e-06, 4.526999999997228e-06, 2.5700000000003498e-06, 2.5000000000025002e-06, 3.429999999998712e-06, 4.5839999999984504e-06, 6.083000000000477e-06, 5.264000000001351e-06, 4.054999999999337e-06, 4.59800000000149e-06, 4.7499999999978115e-06, 4.097000000001516e-06, 5.708000000000102e-06, 4.250000000000781e-06, 3.1809999999979355e-06, 3.4440000000017512e-06, 2.6809999999974354e-06, 6.028000000001671e-06, 4.000000000000531e-06], 'time': [0.017690444, 0.017695403, 0.017699403, 0.017703681, 0.017708306, 0.017713667, 0.017717153, 0.017722444, 0.017724819, 0.017730958, 0.017734014, 0.017738056, 0.017743694, 0.017747806, 0.017751028, 0.017756333, 0.0177595, 0.017764472, 0.017767264, 0.017772278, 0.017777417, 0.01778225, 0.017786556, 0.017791681, 0.017797222, 0.017803139, 0.017807542, 0.017813403, 0.017817153, 0.017821819, 0.017825514, 0.017831306, 0.017835833, 0.017838403, 0.017840903, 0.017844333, 0.017848917, 0.017855, 0.017860264, 0.017864319, 0.017868917, 0.017873667, 0.017877764, 0.017883472, 0.017887722, 0.017890903, 0.017894347, 0.017897028, 0.017903056, 0.017907056], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:07.401" endtime="20201110 08:34:07.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.397" endtime="20201110 08:34:07.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.408" level="INFO">${RESULT} = [{'time': 0.017695403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.017703681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:07.405" endtime="20201110 08:34:07.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:07.416" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.9589999999988255e-06, 4.277999999999921e-06, 5.360999999998867e-06, 5.291000000001017e-06, 6.139000000002226e-06, 4.041999999999241e-06, 4.11200000000056e-06, 5.305000000000587e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:07.408" endtime="20201110 08:34:07.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.420" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:07.419" endtime="20201110 08:34:07.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.422" level="INFO">VALUE: [4.9589999999988255e-06, 4.277999999999921e-06, 5.360999999998867e-06, 5.291000000001017e-06, 6.139000000002226e-06, 4.041999999999241e-06, 4.11200000000056e-06, 5.305000000000587e-06, 4.971999999998922e-06, 5.0139999999976315e-06, 4.832999999999227e-06, 5.125000000001656e-06, 5.916999999997646e-06, 5.860999999999367e-06, 4.666000000000392e-06, 5.792000000000991e-06, 2.5700000000003498e-06, 3.429999999998712e-06, 6.083000000000477e-06, 4.054999999999337e-06, 4.7499999999978115e-06, 5.708000000000102e-06, 3.1809999999979355e-06, 2.6809999999974354e-06, 4.000000000000531e-06]</msg>
<status status="PASS" starttime="20201110 08:34:07.421" endtime="20201110 08:34:07.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.417" endtime="20201110 08:34:07.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.426" endtime="20201110 08:34:07.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.429" endtime="20201110 08:34:07.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.428" endtime="20201110 08:34:07.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.424" endtime="20201110 08:34:07.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.060" endtime="20201110 08:34:07.450"></status>
</kw>
<msg timestamp="20201110 08:34:07.450" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.458" endtime="20201110 08:34:07.469"></status>
</kw>
<msg timestamp="20201110 08:34:07.470" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.456" endtime="20201110 08:34:07.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.471" endtime="20201110 08:34:07.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.473" endtime="20201110 08:34:07.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.453" endtime="20201110 08:34:07.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.452" endtime="20201110 08:34:07.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.482" endtime="20201110 08:34:07.749"></status>
</kw>
<msg timestamp="20201110 08:34:07.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017571833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017576139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.480" endtime="20201110 08:34:07.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017571833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017576139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.752" endtime="20201110 08:34:07.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.757" endtime="20201110 08:34:07.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.478" endtime="20201110 08:34:07.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.476" endtime="20201110 08:34:07.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.764" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:07.763" endtime="20201110 08:34:07.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.767" level="INFO">VALUE: [{'time': 0.017571833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017576139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.017579375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017585389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.017588875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017594278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017600125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017604389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017610458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.017613681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.017618028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.017620833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.804999999998087e-06, 'source_diff': 2.804999999998087e-06}, {'time': 0.017626972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.017631653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.017634514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.0176395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.017642403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.017647708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.017653722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.0176585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017661556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0559999999978105e-06, 'source_diff': 3.0559999999978105e-06}, {'time': 0.017667444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.888000000002502e-06, 'source_diff': 5.888000000002502e-06}, {'time': 0.017672278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017678083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.017683319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017687431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.017690194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.762999999999377e-06, 'source_diff': 2.762999999999377e-06}, {'time': 0.017692694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.017696639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.017700292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017703889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017709778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.017714611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.017717056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4449999999967553e-06, 'source_diff': 2.4449999999967553e-06}, {'time': 0.017720111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.017723222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017728764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017734556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.017738792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017741681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.017746667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.017751264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017756694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.017759681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9869999999994346e-06, 'source_diff': 2.9869999999994346e-06}, {'time': 0.017763764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.017769236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017772208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017777528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.017782069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017784639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:07.765" endtime="20201110 08:34:07.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.761" endtime="20201110 08:34:07.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:07.789" level="INFO">${debug-compressed} = {'source_diff': [0, 4.30600000000253e-06, 3.236000000000211e-06, 6.0139999999986316e-06, 3.486000000000461e-06, 5.403000000001046e-06, 5.846999999999797e-06, 4.264000000000351e-06, 6.0689999999974376e...</msg>
<status status="PASS" starttime="20201110 08:34:07.776" endtime="20201110 08:34:07.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.793" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:07.792" endtime="20201110 08:34:07.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.796" level="INFO">VALUE: {'source_diff': [0, 4.30600000000253e-06, 3.236000000000211e-06, 6.0139999999986316e-06, 3.486000000000461e-06, 5.403000000001046e-06, 5.846999999999797e-06, 4.264000000000351e-06, 6.0689999999974376e-06, 3.2230000000001147e-06, 4.347000000001766e-06, 2.804999999998087e-06, 6.139000000002226e-06, 4.680999999999436e-06, 2.860999999999836e-06, 4.985999999998492e-06, 2.903000000002015e-06, 5.305000000000587e-06, 6.0139999999986316e-06, 4.778000000000421e-06, 3.0559999999978105e-06, 5.888000000002502e-06, 4.8339999999987004e-06, 5.805000000001087e-06, 5.235999999998742e-06, 4.11200000000056e-06, 2.762999999999377e-06, 2.4999999999990308e-06, 3.945000000001725e-06, 3.6529999999992957e-06, 3.597000000001016e-06, 5.8889999999985065e-06, 4.833000000002696e-06, 2.4449999999967553e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 5.542000000000741e-06, 5.791999999997521e-06, 4.236000000001211e-06, 2.8889999999989757e-06, 4.986000000001961e-06, 4.596999999998547e-06, 5.430000000000712e-06, 2.9869999999994346e-06, 4.083000000001946e-06, 5.471999999999422e-06, 2.972000000000391e-06, 5.319999999999631e-06, 4.541000000000267e-06, 2.5700000000003498e-06], 'diff': [0, 4.30600000000253e-06, 3.236000000000211e-06, 6.0139999999986316e-06, 3.486000000000461e-06, 5.403000000001046e-06, 5.846999999999797e-06, 4.264000000000351e-06, 6.0689999999974376e-06, 3.2230000000001147e-06, 4.347000000001766e-06, 2.804999999998087e-06, 6.139000000002226e-06, 4.680999999999436e-06, 2.860999999999836e-06, 4.985999999998492e-06, 2.903000000002015e-06, 5.305000000000587e-06, 6.0139999999986316e-06, 4.778000000000421e-06, 3.0559999999978105e-06, 5.888000000002502e-06, 4.8339999999987004e-06, 5.805000000001087e-06, 5.235999999998742e-06, 4.11200000000056e-06, 2.762999999999377e-06, 2.4999999999990308e-06, 3.945000000001725e-06, 3.6529999999992957e-06, 3.597000000001016e-06, 5.8889999999985065e-06, 4.833000000002696e-06, 2.4449999999967553e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 5.542000000000741e-06, 5.791999999997521e-06, 4.236000000001211e-06, 2.8889999999989757e-06, 4.986000000001961e-06, 4.596999999998547e-06, 5.430000000000712e-06, 2.9869999999994346e-06, 4.083000000001946e-06, 5.471999999999422e-06, 2.972000000000391e-06, 5.319999999999631e-06, 4.541000000000267e-06, 2.5700000000003498e-06], 'time': [0.017571833, 0.017576139, 0.017579375, 0.017585389, 0.017588875, 0.017594278, 0.017600125, 0.017604389, 0.017610458, 0.017613681, 0.017618028, 0.017620833, 0.017626972, 0.017631653, 0.017634514, 0.0176395, 0.017642403, 0.017647708, 0.017653722, 0.0176585, 0.017661556, 0.017667444, 0.017672278, 0.017678083, 0.017683319, 0.017687431, 0.017690194, 0.017692694, 0.017696639, 0.017700292, 0.017703889, 0.017709778, 0.017714611, 0.017717056, 0.017720111, 0.017723222, 0.017728764, 0.017734556, 0.017738792, 0.017741681, 0.017746667, 0.017751264, 0.017756694, 0.017759681, 0.017763764, 0.017769236, 0.017772208, 0.017777528, 0.017782069, 0.017784639], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:07.794" endtime="20201110 08:34:07.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.790" endtime="20201110 08:34:07.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.800" level="INFO">${RESULT} = [{'time': 0.017576139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.017585389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:07.798" endtime="20201110 08:34:07.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:07.808" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.30600000000253e-06, 6.0139999999986316e-06, 5.403000000001046e-06, 4.264000000000351e-06, 3.2230000000001147e-06, 2.804999999998087e-06, 4.680999999999436e-06, 4.985999999998492e-06...</msg>
<status status="PASS" starttime="20201110 08:34:07.801" endtime="20201110 08:34:07.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.812" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:07.811" endtime="20201110 08:34:07.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.815" level="INFO">VALUE: [4.30600000000253e-06, 6.0139999999986316e-06, 5.403000000001046e-06, 4.264000000000351e-06, 3.2230000000001147e-06, 2.804999999998087e-06, 4.680999999999436e-06, 4.985999999998492e-06, 5.305000000000587e-06, 4.778000000000421e-06, 5.888000000002502e-06, 5.805000000001087e-06, 4.11200000000056e-06, 2.4999999999990308e-06, 3.6529999999992957e-06, 5.8889999999985065e-06, 2.4449999999967553e-06, 3.111000000000086e-06, 5.791999999997521e-06, 2.8889999999989757e-06, 4.596999999998547e-06, 2.9869999999994346e-06, 5.471999999999422e-06, 5.319999999999631e-06, 2.5700000000003498e-06]</msg>
<status status="PASS" starttime="20201110 08:34:07.814" endtime="20201110 08:34:07.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.809" endtime="20201110 08:34:07.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.818" endtime="20201110 08:34:07.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.821" endtime="20201110 08:34:07.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.820" endtime="20201110 08:34:07.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.817" endtime="20201110 08:34:07.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.451" endtime="20201110 08:34:07.842"></status>
</kw>
<msg timestamp="20201110 08:34:07.842" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.850" endtime="20201110 08:34:07.862"></status>
</kw>
<msg timestamp="20201110 08:34:07.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.849" endtime="20201110 08:34:07.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.865" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.864" endtime="20201110 08:34:07.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.866" endtime="20201110 08:34:07.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.846" endtime="20201110 08:34:07.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.844" endtime="20201110 08:34:07.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.875" endtime="20201110 08:34:08.141"></status>
</kw>
<msg timestamp="20201110 08:34:08.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018185111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018188444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.874" endtime="20201110 08:34:08.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018185111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018188444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.144" endtime="20201110 08:34:08.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.149" endtime="20201110 08:34:08.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.871" endtime="20201110 08:34:08.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.869" endtime="20201110 08:34:08.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.157" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:08.156" endtime="20201110 08:34:08.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.160" level="INFO">VALUE: [{'time': 0.018185111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018188444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.018192458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018197347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8889999999975065e-06, 'source_diff': 4.8889999999975065e-06}, {'time': 0.018201403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.05600000000228e-06, 'source_diff': 4.05600000000228e-06}, {'time': 0.018207236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018212028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018215069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.018217514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.018222889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018225653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.018230944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.018235903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.959000000002295e-06, 'source_diff': 4.959000000002295e-06}, {'time': 0.018241167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.018244931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018248611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6800000000024313e-06, 'source_diff': 3.6800000000024313e-06}, {'time': 0.018252139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018256792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018261222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018266764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018269847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0829999999974766e-06, 'source_diff': 3.0829999999974766e-06}, {'time': 0.018274819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018278042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.01828175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.018285208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.018287847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.018293222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.018297528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.018301583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.018307014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.018310167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018315778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.018320139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.0183235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018328236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.018333819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018339889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.018343417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018348125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018350819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.018353806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9869999999994346e-06, 'source_diff': 2.9869999999994346e-06}, {'time': 0.018356986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.018360931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.018366569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.637999999998783e-06, 'source_diff': 5.637999999998783e-06}, {'time': 0.018370167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.018375875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018380667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018383361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.018387708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018392319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:08.158" endtime="20201110 08:34:08.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.153" endtime="20201110 08:34:08.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:08.176" level="INFO">${debug-compressed} = {'source_diff': [0, 3.333000000001196e-06, 4.014000000000101e-06, 4.8889999999975065e-06, 4.05600000000228e-06, 5.833000000000227e-06, 4.791999999999991e-06, 3.040999999998767e-06, 2.4450000000002248e...</msg>
<status status="PASS" starttime="20201110 08:34:08.163" endtime="20201110 08:34:08.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.180" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:08.179" endtime="20201110 08:34:08.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.183" level="INFO">VALUE: {'source_diff': [0, 3.333000000001196e-06, 4.014000000000101e-06, 4.8889999999975065e-06, 4.05600000000228e-06, 5.833000000000227e-06, 4.791999999999991e-06, 3.040999999998767e-06, 2.4450000000002248e-06, 5.374999999998437e-06, 2.76400000000232e-06, 5.290999999997548e-06, 4.959000000002295e-06, 5.2639999999978815e-06, 3.763999999999851e-06, 3.6800000000024313e-06, 3.5279999999991707e-06, 4.653000000000296e-06, 4.429999999999712e-06, 5.542000000000741e-06, 3.0829999999974766e-06, 4.972000000002391e-06, 3.2230000000001147e-06, 3.7079999999981017e-06, 3.458000000001321e-06, 2.6389999999987257e-06, 5.375000000001906e-06, 4.305999999999061e-06, 4.054999999999337e-06, 5.431000000000186e-06, 3.1529999999987957e-06, 5.611000000002586e-06, 4.360999999997867e-06, 3.361000000000336e-06, 4.736000000001711e-06, 5.582999999999977e-06, 6.070000000000381e-06, 3.5279999999991707e-06, 4.707999999999102e-06, 2.694000000001001e-06, 2.9869999999994346e-06, 3.179999999998462e-06, 3.945000000001725e-06, 5.637999999998783e-06, 3.5980000000004897e-06, 5.708000000000102e-06, 4.791999999999991e-06, 2.694000000001001e-06, 4.346999999998297e-06, 4.611000000001586e-06], 'diff': [0, 3.333000000001196e-06, 4.014000000000101e-06, 4.8889999999975065e-06, 4.05600000000228e-06, 5.833000000000227e-06, 4.791999999999991e-06, 3.040999999998767e-06, 2.4450000000002248e-06, 5.374999999998437e-06, 2.76400000000232e-06, 5.290999999997548e-06, 4.959000000002295e-06, 5.2639999999978815e-06, 3.763999999999851e-06, 3.6800000000024313e-06, 3.5279999999991707e-06, 4.653000000000296e-06, 4.429999999999712e-06, 5.542000000000741e-06, 3.0829999999974766e-06, 4.972000000002391e-06, 3.2230000000001147e-06, 3.7079999999981017e-06, 3.458000000001321e-06, 2.6389999999987257e-06, 5.375000000001906e-06, 4.305999999999061e-06, 4.054999999999337e-06, 5.431000000000186e-06, 3.1529999999987957e-06, 5.611000000002586e-06, 4.360999999997867e-06, 3.361000000000336e-06, 4.736000000001711e-06, 5.582999999999977e-06, 6.070000000000381e-06, 3.5279999999991707e-06, 4.707999999999102e-06, 2.694000000001001e-06, 2.9869999999994346e-06, 3.179999999998462e-06, 3.945000000001725e-06, 5.637999999998783e-06, 3.5980000000004897e-06, 5.708000000000102e-06, 4.791999999999991e-06, 2.694000000001001e-06, 4.346999999998297e-06, 4.611000000001586e-06], 'time': [0.018185111, 0.018188444, 0.018192458, 0.018197347, 0.018201403, 0.018207236, 0.018212028, 0.018215069, 0.018217514, 0.018222889, 0.018225653, 0.018230944, 0.018235903, 0.018241167, 0.018244931, 0.018248611, 0.018252139, 0.018256792, 0.018261222, 0.018266764, 0.018269847, 0.018274819, 0.018278042, 0.01828175, 0.018285208, 0.018287847, 0.018293222, 0.018297528, 0.018301583, 0.018307014, 0.018310167, 0.018315778, 0.018320139, 0.0183235, 0.018328236, 0.018333819, 0.018339889, 0.018343417, 0.018348125, 0.018350819, 0.018353806, 0.018356986, 0.018360931, 0.018366569, 0.018370167, 0.018375875, 0.018380667, 0.018383361, 0.018387708, 0.018392319], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:08.181" endtime="20201110 08:34:08.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.177" endtime="20201110 08:34:08.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.187" level="INFO">${RESULT} = [{'time': 0.018188444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.018197347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.184" endtime="20201110 08:34:08.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:08.195" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.333000000001196e-06, 4.8889999999975065e-06, 5.833000000000227e-06, 3.040999999998767e-06, 5.374999999998437e-06, 5.290999999997548e-06, 5.2639999999978815e-06, 3.6800000000024313e-...</msg>
<status status="PASS" starttime="20201110 08:34:08.188" endtime="20201110 08:34:08.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.199" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:08.198" endtime="20201110 08:34:08.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.201" level="INFO">VALUE: [3.333000000001196e-06, 4.8889999999975065e-06, 5.833000000000227e-06, 3.040999999998767e-06, 5.374999999998437e-06, 5.290999999997548e-06, 5.2639999999978815e-06, 3.6800000000024313e-06, 4.653000000000296e-06, 5.542000000000741e-06, 4.972000000002391e-06, 3.7079999999981017e-06, 2.6389999999987257e-06, 4.305999999999061e-06, 5.431000000000186e-06, 5.611000000002586e-06, 3.361000000000336e-06, 5.582999999999977e-06, 3.5279999999991707e-06, 2.694000000001001e-06, 3.179999999998462e-06, 5.637999999998783e-06, 5.708000000000102e-06, 2.694000000001001e-06, 4.611000000001586e-06]</msg>
<status status="PASS" starttime="20201110 08:34:08.200" endtime="20201110 08:34:08.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.196" endtime="20201110 08:34:08.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.205" endtime="20201110 08:34:08.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.208" endtime="20201110 08:34:08.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.207" endtime="20201110 08:34:08.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.203" endtime="20201110 08:34:08.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.843" endtime="20201110 08:34:08.229"></status>
</kw>
<msg timestamp="20201110 08:34:08.229" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.237" endtime="20201110 08:34:08.247"></status>
</kw>
<msg timestamp="20201110 08:34:08.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.235" endtime="20201110 08:34:08.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.250" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.248" endtime="20201110 08:34:08.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.251" endtime="20201110 08:34:08.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.233" endtime="20201110 08:34:08.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.231" endtime="20201110 08:34:08.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.261" endtime="20201110 08:34:08.525"></status>
</kw>
<msg timestamp="20201110 08:34:08.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017365611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017368472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.259" endtime="20201110 08:34:08.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017365611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017368472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.528" endtime="20201110 08:34:08.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.533" endtime="20201110 08:34:08.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.256" endtime="20201110 08:34:08.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.254" endtime="20201110 08:34:08.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.540" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:08.539" endtime="20201110 08:34:08.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.544" level="INFO">VALUE: [{'time': 0.017365611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017368472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017371944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017376542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.59799999999802e-06, 'source_diff': 4.59799999999802e-06}, {'time': 0.017379389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017384125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017387056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.017389625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5689999999974067e-06, 'source_diff': 2.5689999999974067e-06}, {'time': 0.017392569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.017396792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.017401625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.01740425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017408375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017413389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017418417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.017423014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017426931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.01743225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.017437972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017441444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017444903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.017450514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017456375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017462208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017468292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017472306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.017475167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017479333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.017484583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.017487097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017492292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.017496347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.017501542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.0175075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017510861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017514097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017517958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017523806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.017528278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.01753175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.017537472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017539986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.017543569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.017547806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.017550375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.017553194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.017557625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.017562264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017565014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017568292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:08.541" endtime="20201110 08:34:08.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.537" endtime="20201110 08:34:08.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:08.559" level="INFO">${debug-compressed} = {'source_diff': [0, 2.860999999999836e-06, 3.472000000000891e-06, 4.59799999999802e-06, 2.847000000000266e-06, 4.736000000001711e-06, 2.931000000001155e-06, 2.5689999999974067e-06, 2.944000000001251e-...</msg>
<status status="PASS" starttime="20201110 08:34:08.546" endtime="20201110 08:34:08.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.563" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:08.562" endtime="20201110 08:34:08.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.566" level="INFO">VALUE: {'source_diff': [0, 2.860999999999836e-06, 3.472000000000891e-06, 4.59799999999802e-06, 2.847000000000266e-06, 4.736000000001711e-06, 2.931000000001155e-06, 2.5689999999974067e-06, 2.944000000001251e-06, 4.223000000001115e-06, 4.832999999999227e-06, 2.6249999999991558e-06, 4.125000000000656e-06, 5.014000000001101e-06, 5.027999999997201e-06, 4.597000000002016e-06, 3.916999999999116e-06, 5.319000000000157e-06, 5.721999999999672e-06, 3.472000000000891e-06, 3.4590000000007948e-06, 5.610999999999117e-06, 5.860999999999367e-06, 5.833000000000227e-06, 6.0839999999999506e-06, 4.014000000000101e-06, 2.860999999999836e-06, 4.165999999999892e-06, 5.250000000001781e-06, 2.5139999999986007e-06, 5.1949999999995056e-06, 4.054999999999337e-06, 5.1949999999995056e-06, 5.958000000000352e-06, 3.361000000000336e-06, 3.236000000000211e-06, 3.861000000000836e-06, 5.8479999999992704e-06, 4.472000000001891e-06, 3.4719999999974216e-06, 5.721999999999672e-06, 2.51400000000207e-06, 3.5829999999979767e-06, 4.237000000000685e-06, 2.569000000000876e-06, 2.819000000001126e-06, 4.430999999999186e-06, 4.639000000000726e-06, 2.749999999999281e-06, 3.2779999999989207e-06], 'diff': [0, 2.860999999999836e-06, 3.472000000000891e-06, 4.59799999999802e-06, 2.847000000000266e-06, 4.736000000001711e-06, 2.931000000001155e-06, 2.5689999999974067e-06, 2.944000000001251e-06, 4.223000000001115e-06, 4.832999999999227e-06, 2.6249999999991558e-06, 4.125000000000656e-06, 5.014000000001101e-06, 5.027999999997201e-06, 4.597000000002016e-06, 3.916999999999116e-06, 5.319000000000157e-06, 5.721999999999672e-06, 3.472000000000891e-06, 3.4590000000007948e-06, 5.610999999999117e-06, 5.860999999999367e-06, 5.833000000000227e-06, 6.0839999999999506e-06, 4.014000000000101e-06, 2.860999999999836e-06, 4.165999999999892e-06, 5.250000000001781e-06, 2.5139999999986007e-06, 5.1949999999995056e-06, 4.054999999999337e-06, 5.1949999999995056e-06, 5.958000000000352e-06, 3.361000000000336e-06, 3.236000000000211e-06, 3.861000000000836e-06, 5.8479999999992704e-06, 4.472000000001891e-06, 3.4719999999974216e-06, 5.721999999999672e-06, 2.51400000000207e-06, 3.5829999999979767e-06, 4.237000000000685e-06, 2.569000000000876e-06, 2.819000000001126e-06, 4.430999999999186e-06, 4.639000000000726e-06, 2.749999999999281e-06, 3.2779999999989207e-06], 'time': [0.017365611, 0.017368472, 0.017371944, 0.017376542, 0.017379389, 0.017384125, 0.017387056, 0.017389625, 0.017392569, 0.017396792, 0.017401625, 0.01740425, 0.017408375, 0.017413389, 0.017418417, 0.017423014, 0.017426931, 0.01743225, 0.017437972, 0.017441444, 0.017444903, 0.017450514, 0.017456375, 0.017462208, 0.017468292, 0.017472306, 0.017475167, 0.017479333, 0.017484583, 0.017487097, 0.017492292, 0.017496347, 0.017501542, 0.0175075, 0.017510861, 0.017514097, 0.017517958, 0.017523806, 0.017528278, 0.01753175, 0.017537472, 0.017539986, 0.017543569, 0.017547806, 0.017550375, 0.017553194, 0.017557625, 0.017562264, 0.017565014, 0.017568292], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:08.564" endtime="20201110 08:34:08.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.560" endtime="20201110 08:34:08.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.570" level="INFO">${RESULT} = [{'time': 0.017368472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017376542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.567" endtime="20201110 08:34:08.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:08.578" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.860999999999836e-06, 4.59799999999802e-06, 4.736000000001711e-06, 2.5689999999974067e-06, 4.223000000001115e-06, 2.6249999999991558e-06, 5.014000000001101e-06, 4.597000000002016e-06...</msg>
<status status="PASS" starttime="20201110 08:34:08.571" endtime="20201110 08:34:08.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.582" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:08.581" endtime="20201110 08:34:08.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.585" level="INFO">VALUE: [2.860999999999836e-06, 4.59799999999802e-06, 4.736000000001711e-06, 2.5689999999974067e-06, 4.223000000001115e-06, 2.6249999999991558e-06, 5.014000000001101e-06, 4.597000000002016e-06, 5.319000000000157e-06, 3.472000000000891e-06, 5.610999999999117e-06, 5.833000000000227e-06, 4.014000000000101e-06, 4.165999999999892e-06, 2.5139999999986007e-06, 4.054999999999337e-06, 5.958000000000352e-06, 3.236000000000211e-06, 5.8479999999992704e-06, 3.4719999999974216e-06, 2.51400000000207e-06, 4.237000000000685e-06, 2.819000000001126e-06, 4.639000000000726e-06, 3.2779999999989207e-06]</msg>
<status status="PASS" starttime="20201110 08:34:08.583" endtime="20201110 08:34:08.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.579" endtime="20201110 08:34:08.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.588" endtime="20201110 08:34:08.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.592" endtime="20201110 08:34:08.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.590" endtime="20201110 08:34:08.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.587" endtime="20201110 08:34:08.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.230" endtime="20201110 08:34:08.612"></status>
</kw>
<msg timestamp="20201110 08:34:08.613" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.620" endtime="20201110 08:34:08.632"></status>
</kw>
<msg timestamp="20201110 08:34:08.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.619" endtime="20201110 08:34:08.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.633" endtime="20201110 08:34:08.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.636" endtime="20201110 08:34:08.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.616" endtime="20201110 08:34:08.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.614" endtime="20201110 08:34:08.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.645" endtime="20201110 08:34:08.909"></status>
</kw>
<msg timestamp="20201110 08:34:08.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018188264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.643" endtime="20201110 08:34:08.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018188264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.912" endtime="20201110 08:34:08.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.918" endtime="20201110 08:34:08.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.641" endtime="20201110 08:34:08.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.639" endtime="20201110 08:34:08.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.927" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:08.924" endtime="20201110 08:34:08.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.932" level="INFO">VALUE: [{'time': 0.018188264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018194444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018198403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.018201944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.018207014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.018209514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018214639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018219125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018224153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018228667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018232194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.526999999999697e-06, 'source_diff': 3.526999999999697e-06}, {'time': 0.018234708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.018237875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.018241639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018245875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018250431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.018253167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018258347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018263597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.018266889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.018272972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.018278764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018283417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018288958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.0182935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018298347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018304181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.018308361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018312861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018315764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018319944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.180000000002931e-06, 'source_diff': 4.180000000002931e-06}, {'time': 0.018324306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.36199999999734e-06, 'source_diff': 4.36199999999734e-06}, {'time': 0.018329556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018332083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.526999999998697e-06, 'source_diff': 2.526999999998697e-06}, {'time': 0.018334486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018338917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.018342694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.018346569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.0183505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.018355597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018359819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018364847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018369069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018373361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.018377903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018380417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.018384708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018390681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.018395097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018400403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:08.928" endtime="20201110 08:34:08.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.921" endtime="20201110 08:34:08.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:08.952" level="INFO">${debug-compressed} = {'source_diff': [0, 6.180000000001462e-06, 3.958999999997825e-06, 3.5410000000027364e-06, 5.0699999999993806e-06, 2.4999999999990308e-06, 5.125000000001656e-06, 4.485999999997992e-06, 5.02800000000067...</msg>
<status status="PASS" starttime="20201110 08:34:08.935" endtime="20201110 08:34:08.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.956" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:08.955" endtime="20201110 08:34:08.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.959" level="INFO">VALUE: {'source_diff': [0, 6.180000000001462e-06, 3.958999999997825e-06, 3.5410000000027364e-06, 5.0699999999993806e-06, 2.4999999999990308e-06, 5.125000000001656e-06, 4.485999999997992e-06, 5.028000000000671e-06, 4.514000000000601e-06, 3.526999999999697e-06, 2.5139999999986007e-06, 3.167000000001835e-06, 3.763999999999851e-06, 4.236000000001211e-06, 4.555999999999311e-06, 2.735999999999711e-06, 5.180000000000462e-06, 5.2499999999983116e-06, 3.29200000000196e-06, 6.0829999999970075e-06, 5.792000000000991e-06, 4.653000000000296e-06, 5.541000000001267e-06, 4.541999999999741e-06, 4.846999999998797e-06, 5.8339999999997005e-06, 4.179999999999462e-06, 4.500000000001031e-06, 2.9029999999985456e-06, 4.180000000002931e-06, 4.36199999999734e-06, 5.250000000001781e-06, 2.526999999998697e-06, 2.403000000001515e-06, 4.430999999999186e-06, 3.776999999999947e-06, 3.875000000000406e-06, 3.9309999999986855e-06, 5.097000000002516e-06, 4.221999999998172e-06, 5.028000000000671e-06, 4.221999999998172e-06, 4.29200000000296e-06, 4.541999999999741e-06, 2.5139999999986007e-06, 4.291000000000017e-06, 5.9729999999993955e-06, 4.416000000000142e-06, 5.306000000000061e-06], 'diff': [0, 6.180000000001462e-06, 3.958999999997825e-06, 3.5410000000027364e-06, 5.0699999999993806e-06, 2.4999999999990308e-06, 5.125000000001656e-06, 4.485999999997992e-06, 5.028000000000671e-06, 4.514000000000601e-06, 3.526999999999697e-06, 2.5139999999986007e-06, 3.167000000001835e-06, 3.763999999999851e-06, 4.236000000001211e-06, 4.555999999999311e-06, 2.735999999999711e-06, 5.180000000000462e-06, 5.2499999999983116e-06, 3.29200000000196e-06, 6.0829999999970075e-06, 5.792000000000991e-06, 4.653000000000296e-06, 5.541000000001267e-06, 4.541999999999741e-06, 4.846999999998797e-06, 5.8339999999997005e-06, 4.179999999999462e-06, 4.500000000001031e-06, 2.9029999999985456e-06, 4.180000000002931e-06, 4.36199999999734e-06, 5.250000000001781e-06, 2.526999999998697e-06, 2.403000000001515e-06, 4.430999999999186e-06, 3.776999999999947e-06, 3.875000000000406e-06, 3.9309999999986855e-06, 5.097000000002516e-06, 4.221999999998172e-06, 5.028000000000671e-06, 4.221999999998172e-06, 4.29200000000296e-06, 4.541999999999741e-06, 2.5139999999986007e-06, 4.291000000000017e-06, 5.9729999999993955e-06, 4.416000000000142e-06, 5.306000000000061e-06], 'time': [0.018188264, 0.018194444, 0.018198403, 0.018201944, 0.018207014, 0.018209514, 0.018214639, 0.018219125, 0.018224153, 0.018228667, 0.018232194, 0.018234708, 0.018237875, 0.018241639, 0.018245875, 0.018250431, 0.018253167, 0.018258347, 0.018263597, 0.018266889, 0.018272972, 0.018278764, 0.018283417, 0.018288958, 0.0182935, 0.018298347, 0.018304181, 0.018308361, 0.018312861, 0.018315764, 0.018319944, 0.018324306, 0.018329556, 0.018332083, 0.018334486, 0.018338917, 0.018342694, 0.018346569, 0.0183505, 0.018355597, 0.018359819, 0.018364847, 0.018369069, 0.018373361, 0.018377903, 0.018380417, 0.018384708, 0.018390681, 0.018395097, 0.018400403], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:08.957" endtime="20201110 08:34:08.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.953" endtime="20201110 08:34:08.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.963" level="INFO">${RESULT} = [{'time': 0.018194444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018201944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.961" endtime="20201110 08:34:08.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:08.971" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [6.180000000001462e-06, 3.5410000000027364e-06, 2.4999999999990308e-06, 4.485999999997992e-06, 4.514000000000601e-06, 2.5139999999986007e-06, 3.763999999999851e-06, 4.555999999999311e-...</msg>
<status status="PASS" starttime="20201110 08:34:08.964" endtime="20201110 08:34:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.975" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:08.974" endtime="20201110 08:34:08.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.978" level="INFO">VALUE: [6.180000000001462e-06, 3.5410000000027364e-06, 2.4999999999990308e-06, 4.485999999997992e-06, 4.514000000000601e-06, 2.5139999999986007e-06, 3.763999999999851e-06, 4.555999999999311e-06, 5.180000000000462e-06, 3.29200000000196e-06, 5.792000000000991e-06, 5.541000000001267e-06, 4.846999999998797e-06, 4.179999999999462e-06, 2.9029999999985456e-06, 4.36199999999734e-06, 2.526999999998697e-06, 4.430999999999186e-06, 3.875000000000406e-06, 5.097000000002516e-06, 5.028000000000671e-06, 4.29200000000296e-06, 2.5139999999986007e-06, 5.9729999999993955e-06, 5.306000000000061e-06]</msg>
<status status="PASS" starttime="20201110 08:34:08.976" endtime="20201110 08:34:08.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.972" endtime="20201110 08:34:08.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.981" endtime="20201110 08:34:08.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.984" endtime="20201110 08:34:09.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.983" endtime="20201110 08:34:09.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.979" endtime="20201110 08:34:09.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.613" endtime="20201110 08:34:09.005"></status>
</kw>
<msg timestamp="20201110 08:34:09.006" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.014" endtime="20201110 08:34:09.025"></status>
</kw>
<msg timestamp="20201110 08:34:09.026" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.013" endtime="20201110 08:34:09.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.028" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.027" endtime="20201110 08:34:09.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.029" endtime="20201110 08:34:09.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.009" endtime="20201110 08:34:09.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.007" endtime="20201110 08:34:09.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.038" endtime="20201110 08:34:09.306"></status>
</kw>
<msg timestamp="20201110 08:34:09.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018635681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018639514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.036" endtime="20201110 08:34:09.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018635681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018639514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.309" endtime="20201110 08:34:09.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.314" endtime="20201110 08:34:09.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.034" endtime="20201110 08:34:09.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.032" endtime="20201110 08:34:09.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.321" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:09.320" endtime="20201110 08:34:09.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.324" level="INFO">VALUE: [{'time': 0.018635681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018639514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.018643681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018649833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.152000000002322e-06, 'source_diff': 6.152000000002322e-06}, {'time': 0.018653597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018657472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018659986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.018664708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018675736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.018679917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.181000000002405e-06, 'source_diff': 4.181000000002405e-06}, {'time': 0.018685056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.018688625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.018694736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018697819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.018700583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.018703444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018706528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.018709792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.018713292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.018717292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018723139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018725708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.018729653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.018735389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.018740403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.018745681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018749222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018751806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5839999999999197e-06, 'source_diff': 2.5839999999999197e-06}, {'time': 0.018757806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018763611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.018768208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018771611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018774597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018777528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018782125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018787847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018790722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018796028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018801875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018807361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.018811958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018817042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0839999999989505e-06, 'source_diff': 5.0839999999989505e-06}, {'time': 0.018820264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018824556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018830597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.018834403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.018839236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018841889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.018847778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:09.322" endtime="20201110 08:34:09.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.317" endtime="20201110 08:34:09.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:09.340" level="INFO">${debug-compressed} = {'source_diff': [0, 3.832999999998227e-06, 4.166999999999366e-06, 6.152000000002322e-06, 3.763999999999851e-06, 3.875000000000406e-06, 2.5139999999986007e-06, 4.721999999998672e-06, 6.0839999999999506...</msg>
<status status="PASS" starttime="20201110 08:34:09.327" endtime="20201110 08:34:09.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.344" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:09.343" endtime="20201110 08:34:09.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.347" level="INFO">VALUE: {'source_diff': [0, 3.832999999998227e-06, 4.166999999999366e-06, 6.152000000002322e-06, 3.763999999999851e-06, 3.875000000000406e-06, 2.5139999999986007e-06, 4.721999999998672e-06, 6.0839999999999506e-06, 4.943999999999782e-06, 4.181000000002405e-06, 5.1389999999977565e-06, 3.5690000000018762e-06, 6.110999999999617e-06, 3.083000000000946e-06, 2.7639999999988507e-06, 2.860999999999836e-06, 3.0840000000004197e-06, 3.2639999999993508e-06, 3.500000000000031e-06, 4.000000000000531e-06, 5.846999999999797e-06, 2.569000000000876e-06, 3.9449999999982555e-06, 5.736000000002711e-06, 5.0139999999976315e-06, 5.278000000000921e-06, 3.540999999999267e-06, 2.5839999999999197e-06, 5.999999999999062e-06, 5.805000000001087e-06, 4.597000000002016e-06, 3.4029999999990457e-06, 2.985999999999961e-06, 2.931000000001155e-06, 4.596999999998547e-06, 5.721999999999672e-06, 2.874999999999406e-06, 5.306000000000061e-06, 5.846999999999797e-06, 5.486000000002461e-06, 4.596999999998547e-06, 5.0839999999989505e-06, 3.222000000000641e-06, 4.291999999999491e-06, 6.041000000001767e-06, 3.8059999999985605e-06, 4.832999999999227e-06, 2.653000000001765e-06, 5.8889999999985065e-06], 'diff': [0, 3.832999999998227e-06, 4.166999999999366e-06, 6.152000000002322e-06, 3.763999999999851e-06, 3.875000000000406e-06, 2.5139999999986007e-06, 4.721999999998672e-06, 6.0839999999999506e-06, 4.943999999999782e-06, 4.181000000002405e-06, 5.1389999999977565e-06, 3.5690000000018762e-06, 6.110999999999617e-06, 3.083000000000946e-06, 2.7639999999988507e-06, 2.860999999999836e-06, 3.0840000000004197e-06, 3.2639999999993508e-06, 3.500000000000031e-06, 4.000000000000531e-06, 5.846999999999797e-06, 2.569000000000876e-06, 3.9449999999982555e-06, 5.736000000002711e-06, 5.0139999999976315e-06, 5.278000000000921e-06, 3.540999999999267e-06, 2.5839999999999197e-06, 5.999999999999062e-06, 5.805000000001087e-06, 4.597000000002016e-06, 3.4029999999990457e-06, 2.985999999999961e-06, 2.931000000001155e-06, 4.596999999998547e-06, 5.721999999999672e-06, 2.874999999999406e-06, 5.306000000000061e-06, 5.846999999999797e-06, 5.486000000002461e-06, 4.596999999998547e-06, 5.0839999999989505e-06, 3.222000000000641e-06, 4.291999999999491e-06, 6.041000000001767e-06, 3.8059999999985605e-06, 4.832999999999227e-06, 2.653000000001765e-06, 5.8889999999985065e-06], 'time': [0.018635681, 0.018639514, 0.018643681, 0.018649833, 0.018653597, 0.018657472, 0.018659986, 0.018664708, 0.018670792, 0.018675736, 0.018679917, 0.018685056, 0.018688625, 0.018694736, 0.018697819, 0.018700583, 0.018703444, 0.018706528, 0.018709792, 0.018713292, 0.018717292, 0.018723139, 0.018725708, 0.018729653, 0.018735389, 0.018740403, 0.018745681, 0.018749222, 0.018751806, 0.018757806, 0.018763611, 0.018768208, 0.018771611, 0.018774597, 0.018777528, 0.018782125, 0.018787847, 0.018790722, 0.018796028, 0.018801875, 0.018807361, 0.018811958, 0.018817042, 0.018820264, 0.018824556, 0.018830597, 0.018834403, 0.018839236, 0.018841889, 0.018847778], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:09.345" endtime="20201110 08:34:09.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.341" endtime="20201110 08:34:09.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.351" level="INFO">${RESULT} = [{'time': 0.018639514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.018649833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.349" endtime="20201110 08:34:09.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:09.359" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.832999999998227e-06, 6.152000000002322e-06, 3.875000000000406e-06, 4.721999999998672e-06, 4.943999999999782e-06, 5.1389999999977565e-06, 6.110999999999617e-06, 2.7639999999988507e-0...</msg>
<status status="PASS" starttime="20201110 08:34:09.352" endtime="20201110 08:34:09.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.364" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:09.363" endtime="20201110 08:34:09.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.366" level="INFO">VALUE: [3.832999999998227e-06, 6.152000000002322e-06, 3.875000000000406e-06, 4.721999999998672e-06, 4.943999999999782e-06, 5.1389999999977565e-06, 6.110999999999617e-06, 2.7639999999988507e-06, 3.0840000000004197e-06, 3.500000000000031e-06, 5.846999999999797e-06, 3.9449999999982555e-06, 5.0139999999976315e-06, 3.540999999999267e-06, 5.999999999999062e-06, 4.597000000002016e-06, 2.985999999999961e-06, 4.596999999998547e-06, 2.874999999999406e-06, 5.846999999999797e-06, 4.596999999998547e-06, 3.222000000000641e-06, 6.041000000001767e-06, 4.832999999999227e-06, 5.8889999999985065e-06]</msg>
<status status="PASS" starttime="20201110 08:34:09.365" endtime="20201110 08:34:09.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.360" endtime="20201110 08:34:09.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.369" endtime="20201110 08:34:09.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.373" endtime="20201110 08:34:09.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.371" endtime="20201110 08:34:09.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.368" endtime="20201110 08:34:09.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.006" endtime="20201110 08:34:09.394"></status>
</kw>
<msg timestamp="20201110 08:34:09.394" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.402" endtime="20201110 08:34:09.414"></status>
</kw>
<msg timestamp="20201110 08:34:09.415" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.400" endtime="20201110 08:34:09.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.417" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.416" endtime="20201110 08:34:09.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.418" endtime="20201110 08:34:09.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.398" endtime="20201110 08:34:09.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.396" endtime="20201110 08:34:09.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.427" endtime="20201110 08:34:09.695"></status>
</kw>
<msg timestamp="20201110 08:34:09.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017998333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.426" endtime="20201110 08:34:09.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017998333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.698" endtime="20201110 08:34:09.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.704" endtime="20201110 08:34:09.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.423" endtime="20201110 08:34:09.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.421" endtime="20201110 08:34:09.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.710" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:09.709" endtime="20201110 08:34:09.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.714" level="INFO">VALUE: [{'time': 0.017998333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018006861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.018010208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018015347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018019819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018023819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018029417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018035333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.018040944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018043819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018046958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018051208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018054194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018059389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018062931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.018068167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018073417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018075875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018080708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018085708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.018088639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018091514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018094444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.018098208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018102083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018105431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018107806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.018113236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.018115986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018121833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018127347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.018133486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.018139014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.018144986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018147861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8750000000028753e-06, 'source_diff': 2.8750000000028753e-06}, {'time': 0.018150639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.018155208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018157944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018160639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.695000000000475e-06, 'source_diff': 2.695000000000475e-06}, {'time': 0.018163806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.018168069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.262999999997408e-06, 'source_diff': 4.262999999997408e-06}, {'time': 0.018173722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018177528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.018180403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8750000000028753e-06, 'source_diff': 2.8750000000028753e-06}, {'time': 0.018184583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018188167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5840000000009198e-06, 'source_diff': 3.5840000000009198e-06}, {'time': 0.018192944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.018197292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.018200819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.526999999999697e-06, 'source_diff': 3.526999999999697e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:09.711" endtime="20201110 08:34:09.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.707" endtime="20201110 08:34:09.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:09.729" level="INFO">${debug-compressed} = {'source_diff': [0, 2.403000000001515e-06, 6.124999999999187e-06, 3.347000000000766e-06, 5.139000000001226e-06, 4.471999999998422e-06, 4.000000000000531e-06, 5.5979999999990204e-06, 5.916000000001642e...</msg>
<status status="PASS" starttime="20201110 08:34:09.716" endtime="20201110 08:34:09.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.733" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:09.732" endtime="20201110 08:34:09.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.736" level="INFO">VALUE: {'source_diff': [0, 2.403000000001515e-06, 6.124999999999187e-06, 3.347000000000766e-06, 5.139000000001226e-06, 4.471999999998422e-06, 4.000000000000531e-06, 5.5979999999990204e-06, 5.916000000001642e-06, 5.610999999999117e-06, 2.874999999999406e-06, 3.1389999999992257e-06, 4.250000000000781e-06, 2.985999999999961e-06, 5.1949999999995056e-06, 3.54200000000221e-06, 5.235999999998742e-06, 5.250000000001781e-06, 2.458000000000321e-06, 4.832999999999227e-06, 4.9999999999980616e-06, 2.931000000001155e-06, 2.874999999999406e-06, 2.9300000000016813e-06, 3.763999999999851e-06, 3.875000000000406e-06, 3.3480000000002397e-06, 2.3749999999989058e-06, 5.430000000000712e-06, 2.749999999999281e-06, 5.846999999999797e-06, 5.5139999999981315e-06, 6.139000000002226e-06, 5.527999999997701e-06, 5.971999999999922e-06, 2.8750000000028753e-06, 2.7779999999984206e-06, 4.568999999999407e-06, 2.735999999999711e-06, 2.695000000000475e-06, 3.167000000001835e-06, 4.262999999997408e-06, 5.653000000001296e-06, 3.8059999999985605e-06, 2.8750000000028753e-06, 4.179999999999462e-06, 3.5840000000009198e-06, 4.776999999997478e-06, 4.34800000000124e-06, 3.526999999999697e-06], 'diff': [0, 2.403000000001515e-06, 6.124999999999187e-06, 3.347000000000766e-06, 5.139000000001226e-06, 4.471999999998422e-06, 4.000000000000531e-06, 5.5979999999990204e-06, 5.916000000001642e-06, 5.610999999999117e-06, 2.874999999999406e-06, 3.1389999999992257e-06, 4.250000000000781e-06, 2.985999999999961e-06, 5.1949999999995056e-06, 3.54200000000221e-06, 5.235999999998742e-06, 5.250000000001781e-06, 2.458000000000321e-06, 4.832999999999227e-06, 4.9999999999980616e-06, 2.931000000001155e-06, 2.874999999999406e-06, 2.9300000000016813e-06, 3.763999999999851e-06, 3.875000000000406e-06, 3.3480000000002397e-06, 2.3749999999989058e-06, 5.430000000000712e-06, 2.749999999999281e-06, 5.846999999999797e-06, 5.5139999999981315e-06, 6.139000000002226e-06, 5.527999999997701e-06, 5.971999999999922e-06, 2.8750000000028753e-06, 2.7779999999984206e-06, 4.568999999999407e-06, 2.735999999999711e-06, 2.695000000000475e-06, 3.167000000001835e-06, 4.262999999997408e-06, 5.653000000001296e-06, 3.8059999999985605e-06, 2.8750000000028753e-06, 4.179999999999462e-06, 3.5840000000009198e-06, 4.776999999997478e-06, 4.34800000000124e-06, 3.526999999999697e-06], 'time': [0.017998333, 0.018000736, 0.018006861, 0.018010208, 0.018015347, 0.018019819, 0.018023819, 0.018029417, 0.018035333, 0.018040944, 0.018043819, 0.018046958, 0.018051208, 0.018054194, 0.018059389, 0.018062931, 0.018068167, 0.018073417, 0.018075875, 0.018080708, 0.018085708, 0.018088639, 0.018091514, 0.018094444, 0.018098208, 0.018102083, 0.018105431, 0.018107806, 0.018113236, 0.018115986, 0.018121833, 0.018127347, 0.018133486, 0.018139014, 0.018144986, 0.018147861, 0.018150639, 0.018155208, 0.018157944, 0.018160639, 0.018163806, 0.018168069, 0.018173722, 0.018177528, 0.018180403, 0.018184583, 0.018188167, 0.018192944, 0.018197292, 0.018200819], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:09.734" endtime="20201110 08:34:09.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.730" endtime="20201110 08:34:09.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.740" level="INFO">${RESULT} = [{'time': 0.018000736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018010208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.738" endtime="20201110 08:34:09.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:09.748" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.403000000001515e-06, 3.347000000000766e-06, 4.471999999998422e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 3.1389999999992257e-06, 2.985999999999961e-06, 3.54200000000221e-06...</msg>
<status status="PASS" starttime="20201110 08:34:09.741" endtime="20201110 08:34:09.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.753" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:09.752" endtime="20201110 08:34:09.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.755" level="INFO">VALUE: [2.403000000001515e-06, 3.347000000000766e-06, 4.471999999998422e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 3.1389999999992257e-06, 2.985999999999961e-06, 3.54200000000221e-06, 5.250000000001781e-06, 4.832999999999227e-06, 2.931000000001155e-06, 2.9300000000016813e-06, 3.875000000000406e-06, 2.3749999999989058e-06, 2.749999999999281e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 2.8750000000028753e-06, 4.568999999999407e-06, 2.695000000000475e-06, 4.262999999997408e-06, 3.8059999999985605e-06, 4.179999999999462e-06, 4.776999999997478e-06, 3.526999999999697e-06]</msg>
<status status="PASS" starttime="20201110 08:34:09.754" endtime="20201110 08:34:09.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.749" endtime="20201110 08:34:09.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.758" endtime="20201110 08:34:09.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.762" endtime="20201110 08:34:09.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.760" endtime="20201110 08:34:09.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.757" endtime="20201110 08:34:09.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.395" endtime="20201110 08:34:09.783"></status>
</kw>
<msg timestamp="20201110 08:34:09.783" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.790" endtime="20201110 08:34:09.801"></status>
</kw>
<msg timestamp="20201110 08:34:09.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.789" endtime="20201110 08:34:09.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.804" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.802" endtime="20201110 08:34:09.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.805" endtime="20201110 08:34:09.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.786" endtime="20201110 08:34:09.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.785" endtime="20201110 08:34:09.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.814" endtime="20201110 08:34:10.080"></status>
</kw>
<msg timestamp="20201110 08:34:10.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017350792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017353708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.812" endtime="20201110 08:34:10.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017350792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017353708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.083" endtime="20201110 08:34:10.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.089" endtime="20201110 08:34:10.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.810" endtime="20201110 08:34:10.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.808" endtime="20201110 08:34:10.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.095" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:10.094" endtime="20201110 08:34:10.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.099" level="INFO">VALUE: [{'time': 0.017350792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017353708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.017357639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.017361347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.017365417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.017368208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.017373222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.01737675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017381125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017385597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017391722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.017394472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.017399014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017401833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8189999999976567e-06, 'source_diff': 2.8189999999976567e-06}, {'time': 0.017406194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017408569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017412097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017415375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}, {'time': 0.017419208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.017423486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017428639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.017434361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017436986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.017442486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.017447181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.017452556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.0174555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9439999999977817e-06, 'source_diff': 2.9439999999977817e-06}, {'time': 0.017458778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.017461875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017464458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5829999999969766e-06, 'source_diff': 2.5829999999969766e-06}, {'time': 0.017468389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.017474292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.017477708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}, {'time': 0.017480875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.017485889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017491194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.017494722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017498361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017501917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.017507903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017513403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.017518306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017520667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017523056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.017528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.017533667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.017539236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.017544042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.017547167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.017551667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:10.097" endtime="20201110 08:34:10.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.092" endtime="20201110 08:34:10.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:10.115" level="INFO">${debug-compressed} = {'source_diff': [0, 2.915999999998642e-06, 3.931000000002155e-06, 3.7079999999981017e-06, 4.07000000000185e-06, 2.790999999998517e-06, 5.014000000001101e-06, 3.5279999999991707e-06, 4.375000000000906e...</msg>
<status status="PASS" starttime="20201110 08:34:10.102" endtime="20201110 08:34:10.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.119" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:10.118" endtime="20201110 08:34:10.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.123" level="INFO">VALUE: {'source_diff': [0, 2.915999999998642e-06, 3.931000000002155e-06, 3.7079999999981017e-06, 4.07000000000185e-06, 2.790999999998517e-06, 5.014000000001101e-06, 3.5279999999991707e-06, 4.375000000000906e-06, 4.471999999998422e-06, 6.124999999999187e-06, 2.7500000000027502e-06, 4.541999999999741e-06, 2.8189999999976567e-06, 4.361000000001336e-06, 2.3749999999989058e-06, 3.52800000000264e-06, 3.2779999999989207e-06, 3.832999999998227e-06, 4.277999999999921e-06, 5.153000000000796e-06, 5.721999999999672e-06, 2.6250000000026252e-06, 5.499999999998562e-06, 4.6949999999990055e-06, 5.375000000001906e-06, 2.9439999999977817e-06, 3.27800000000239e-06, 3.097000000000516e-06, 2.5829999999969766e-06, 3.931000000002155e-06, 5.9029999999980765e-06, 3.4160000000026114e-06, 3.1669999999983656e-06, 5.014000000001101e-06, 5.305000000000587e-06, 3.5279999999991707e-06, 3.6389999999997258e-06, 3.5559999999983105e-06, 5.985999999999492e-06, 5.500000000002031e-06, 4.903000000000546e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 4.943999999999782e-06, 5.667000000000866e-06, 5.569000000000407e-06, 4.805999999999561e-06, 3.124999999999656e-06, 4.500000000001031e-06], 'diff': [0, 2.915999999998642e-06, 3.931000000002155e-06, 3.7079999999981017e-06, 4.07000000000185e-06, 2.790999999998517e-06, 5.014000000001101e-06, 3.5279999999991707e-06, 4.375000000000906e-06, 4.471999999998422e-06, 6.124999999999187e-06, 2.7500000000027502e-06, 4.541999999999741e-06, 2.8189999999976567e-06, 4.361000000001336e-06, 2.3749999999989058e-06, 3.52800000000264e-06, 3.2779999999989207e-06, 3.832999999998227e-06, 4.277999999999921e-06, 5.153000000000796e-06, 5.721999999999672e-06, 2.6250000000026252e-06, 5.499999999998562e-06, 4.6949999999990055e-06, 5.375000000001906e-06, 2.9439999999977817e-06, 3.27800000000239e-06, 3.097000000000516e-06, 2.5829999999969766e-06, 3.931000000002155e-06, 5.9029999999980765e-06, 3.4160000000026114e-06, 3.1669999999983656e-06, 5.014000000001101e-06, 5.305000000000587e-06, 3.5279999999991707e-06, 3.6389999999997258e-06, 3.5559999999983105e-06, 5.985999999999492e-06, 5.500000000002031e-06, 4.903000000000546e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 4.943999999999782e-06, 5.667000000000866e-06, 5.569000000000407e-06, 4.805999999999561e-06, 3.124999999999656e-06, 4.500000000001031e-06], 'time': [0.017350792, 0.017353708, 0.017357639, 0.017361347, 0.017365417, 0.017368208, 0.017373222, 0.01737675, 0.017381125, 0.017385597, 0.017391722, 0.017394472, 0.017399014, 0.017401833, 0.017406194, 0.017408569, 0.017412097, 0.017415375, 0.017419208, 0.017423486, 0.017428639, 0.017434361, 0.017436986, 0.017442486, 0.017447181, 0.017452556, 0.0174555, 0.017458778, 0.017461875, 0.017464458, 0.017468389, 0.017474292, 0.017477708, 0.017480875, 0.017485889, 0.017491194, 0.017494722, 0.017498361, 0.017501917, 0.017507903, 0.017513403, 0.017518306, 0.017520667, 0.017523056, 0.017528, 0.017533667, 0.017539236, 0.017544042, 0.017547167, 0.017551667], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:10.120" endtime="20201110 08:34:10.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.116" endtime="20201110 08:34:10.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.128" level="INFO">${RESULT} = [{'time': 0.017353708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.017361347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.125" endtime="20201110 08:34:10.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:10.137" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.915999999998642e-06, 3.7079999999981017e-06, 2.790999999998517e-06, 3.5279999999991707e-06, 4.471999999998422e-06, 2.7500000000027502e-06, 2.8189999999976567e-06, 2.3749999999989058...</msg>
<status status="PASS" starttime="20201110 08:34:10.129" endtime="20201110 08:34:10.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.141" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:10.140" endtime="20201110 08:34:10.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.143" level="INFO">VALUE: [2.915999999998642e-06, 3.7079999999981017e-06, 2.790999999998517e-06, 3.5279999999991707e-06, 4.471999999998422e-06, 2.7500000000027502e-06, 2.8189999999976567e-06, 2.3749999999989058e-06, 3.2779999999989207e-06, 4.277999999999921e-06, 5.721999999999672e-06, 5.499999999998562e-06, 5.375000000001906e-06, 3.27800000000239e-06, 2.5829999999969766e-06, 5.9029999999980765e-06, 3.1669999999983656e-06, 5.305000000000587e-06, 3.6389999999997258e-06, 5.985999999999492e-06, 4.903000000000546e-06, 2.3889999999984757e-06, 5.667000000000866e-06, 4.805999999999561e-06, 4.500000000001031e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.142" endtime="20201110 08:34:10.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.138" endtime="20201110 08:34:10.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.147" endtime="20201110 08:34:10.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.151" endtime="20201110 08:34:10.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.149" endtime="20201110 08:34:10.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.145" endtime="20201110 08:34:10.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.783" endtime="20201110 08:34:10.172"></status>
</kw>
<msg timestamp="20201110 08:34:10.172" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.180" endtime="20201110 08:34:10.191"></status>
</kw>
<msg timestamp="20201110 08:34:10.192" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.178" endtime="20201110 08:34:10.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.194" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.193" endtime="20201110 08:34:10.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.195" endtime="20201110 08:34:10.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.176" endtime="20201110 08:34:10.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.174" endtime="20201110 08:34:10.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.205" endtime="20201110 08:34:10.473"></status>
</kw>
<msg timestamp="20201110 08:34:10.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018031944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.203" endtime="20201110 08:34:10.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018031944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.476" endtime="20201110 08:34:10.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.481" endtime="20201110 08:34:10.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.200" endtime="20201110 08:34:10.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.199" endtime="20201110 08:34:10.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.488" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:10.487" endtime="20201110 08:34:10.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.492" level="INFO">VALUE: [{'time': 0.018031944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018037556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.018042333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000000947e-06, 'source_diff': 4.777000000000947e-06}, {'time': 0.018045444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.018048431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9869999999994346e-06, 'source_diff': 2.9869999999994346e-06}, {'time': 0.018052194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763000000000377e-06, 'source_diff': 3.763000000000377e-06}, {'time': 0.018055833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.0180615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018067222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018070097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018073681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5840000000009198e-06, 'source_diff': 3.5840000000009198e-06}, {'time': 0.018078153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018082222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.018085819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.018088375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.018091236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018094764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018099958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018105389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.018110847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018113931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.018117458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.526999999999697e-06, 'source_diff': 3.526999999999697e-06}, {'time': 0.0181205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018124097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.018128833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.018132611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.018138278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018141097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8189999999976567e-06, 'source_diff': 2.8189999999976567e-06}, {'time': 0.018147236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.018152903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018156667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018160486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.018165861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018168319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018171889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.018175722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.018178111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.018183472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018188472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.018191347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018196597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.018202097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.018206875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018209431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.018214208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.018219097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018225069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018229125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.018232889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018237014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:10.489" endtime="20201110 08:34:10.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.485" endtime="20201110 08:34:10.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:10.508" level="INFO">${debug-compressed} = {'source_diff': [0, 5.61199999999859e-06, 4.777000000000947e-06, 3.111000000000086e-06, 2.9869999999994346e-06, 3.763000000000377e-06, 3.6389999999997258e-06, 5.667000000000866e-06, 5.721999999999672e...</msg>
<status status="PASS" starttime="20201110 08:34:10.494" endtime="20201110 08:34:10.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.512" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:10.511" endtime="20201110 08:34:10.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.516" level="INFO">VALUE: {'source_diff': [0, 5.61199999999859e-06, 4.777000000000947e-06, 3.111000000000086e-06, 2.9869999999994346e-06, 3.763000000000377e-06, 3.6389999999997258e-06, 5.667000000000866e-06, 5.721999999999672e-06, 2.874999999999406e-06, 3.5840000000009198e-06, 4.471999999998422e-06, 4.068999999998907e-06, 3.597000000001016e-06, 2.55600000000078e-06, 2.860999999999836e-06, 3.5279999999991707e-06, 5.194000000000032e-06, 5.431000000000186e-06, 5.457999999999852e-06, 3.0840000000004197e-06, 3.526999999999697e-06, 3.04200000000171e-06, 3.5969999999975466e-06, 4.736000000001711e-06, 3.7779999999994207e-06, 5.667000000000866e-06, 2.8189999999976567e-06, 6.139000000002226e-06, 5.667000000000866e-06, 3.763999999999851e-06, 3.818999999998657e-06, 5.374999999998437e-06, 2.458000000000321e-06, 3.57000000000135e-06, 3.832999999998227e-06, 2.389000000001945e-06, 5.360999999998867e-06, 5.000000000001531e-06, 2.874999999999406e-06, 5.2499999999983116e-06, 5.500000000002031e-06, 4.778000000000421e-06, 2.55600000000078e-06, 4.776999999997478e-06, 4.889000000000976e-06, 5.971999999999922e-06, 4.0559999999988106e-06, 3.763999999999851e-06, 4.125000000000656e-06], 'diff': [0, 5.61199999999859e-06, 4.777000000000947e-06, 3.111000000000086e-06, 2.9869999999994346e-06, 3.763000000000377e-06, 3.6389999999997258e-06, 5.667000000000866e-06, 5.721999999999672e-06, 2.874999999999406e-06, 3.5840000000009198e-06, 4.471999999998422e-06, 4.068999999998907e-06, 3.597000000001016e-06, 2.55600000000078e-06, 2.860999999999836e-06, 3.5279999999991707e-06, 5.194000000000032e-06, 5.431000000000186e-06, 5.457999999999852e-06, 3.0840000000004197e-06, 3.526999999999697e-06, 3.04200000000171e-06, 3.5969999999975466e-06, 4.736000000001711e-06, 3.7779999999994207e-06, 5.667000000000866e-06, 2.8189999999976567e-06, 6.139000000002226e-06, 5.667000000000866e-06, 3.763999999999851e-06, 3.818999999998657e-06, 5.374999999998437e-06, 2.458000000000321e-06, 3.57000000000135e-06, 3.832999999998227e-06, 2.389000000001945e-06, 5.360999999998867e-06, 5.000000000001531e-06, 2.874999999999406e-06, 5.2499999999983116e-06, 5.500000000002031e-06, 4.778000000000421e-06, 2.55600000000078e-06, 4.776999999997478e-06, 4.889000000000976e-06, 5.971999999999922e-06, 4.0559999999988106e-06, 3.763999999999851e-06, 4.125000000000656e-06], 'time': [0.018031944, 0.018037556, 0.018042333, 0.018045444, 0.018048431, 0.018052194, 0.018055833, 0.0180615, 0.018067222, 0.018070097, 0.018073681, 0.018078153, 0.018082222, 0.018085819, 0.018088375, 0.018091236, 0.018094764, 0.018099958, 0.018105389, 0.018110847, 0.018113931, 0.018117458, 0.0181205, 0.018124097, 0.018128833, 0.018132611, 0.018138278, 0.018141097, 0.018147236, 0.018152903, 0.018156667, 0.018160486, 0.018165861, 0.018168319, 0.018171889, 0.018175722, 0.018178111, 0.018183472, 0.018188472, 0.018191347, 0.018196597, 0.018202097, 0.018206875, 0.018209431, 0.018214208, 0.018219097, 0.018225069, 0.018229125, 0.018232889, 0.018237014], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:10.513" endtime="20201110 08:34:10.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.509" endtime="20201110 08:34:10.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.520" level="INFO">${RESULT} = [{'time': 0.018037556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.018045444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:10.517" endtime="20201110 08:34:10.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:10.528" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.61199999999859e-06, 3.111000000000086e-06, 3.763000000000377e-06, 5.667000000000866e-06, 2.874999999999406e-06, 4.471999999998422e-06, 3.597000000001016e-06, 2.860999999999836e-06, ...</msg>
<status status="PASS" starttime="20201110 08:34:10.521" endtime="20201110 08:34:10.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.533" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:10.531" endtime="20201110 08:34:10.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.535" level="INFO">VALUE: [5.61199999999859e-06, 3.111000000000086e-06, 3.763000000000377e-06, 5.667000000000866e-06, 2.874999999999406e-06, 4.471999999998422e-06, 3.597000000001016e-06, 2.860999999999836e-06, 5.194000000000032e-06, 5.457999999999852e-06, 3.526999999999697e-06, 3.5969999999975466e-06, 3.7779999999994207e-06, 2.8189999999976567e-06, 5.667000000000866e-06, 3.818999999998657e-06, 2.458000000000321e-06, 3.832999999998227e-06, 5.360999999998867e-06, 2.874999999999406e-06, 5.500000000002031e-06, 2.55600000000078e-06, 4.889000000000976e-06, 4.0559999999988106e-06, 4.125000000000656e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.534" endtime="20201110 08:34:10.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.529" endtime="20201110 08:34:10.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.539" endtime="20201110 08:34:10.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.542" endtime="20201110 08:34:10.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.541" endtime="20201110 08:34:10.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.537" endtime="20201110 08:34:10.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.172" endtime="20201110 08:34:10.567"></status>
</kw>
<msg timestamp="20201110 08:34:10.567" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.584" endtime="20201110 08:34:10.599"></status>
</kw>
<msg timestamp="20201110 08:34:10.600" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.581" endtime="20201110 08:34:10.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.606" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.602" endtime="20201110 08:34:10.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.608" endtime="20201110 08:34:10.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.575" endtime="20201110 08:34:10.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.571" endtime="20201110 08:34:10.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.630" endtime="20201110 08:34:10.902"></status>
</kw>
<msg timestamp="20201110 08:34:10.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032487333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.627" endtime="20201110 08:34:10.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032487333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.905" endtime="20201110 08:34:10.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.910" endtime="20201110 08:34:10.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.619" endtime="20201110 08:34:10.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.615" endtime="20201110 08:34:10.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.917" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:10.916" endtime="20201110 08:34:10.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.921" level="INFO">VALUE: [{'time': 0.032482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032487333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.032492292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.032497486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.032502569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083000000002946e-06, 'source_diff': 5.083000000002946e-06}, {'time': 0.032506097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999957012e-06, 'source_diff': 3.5279999999957012e-06}, {'time': 0.032512222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.032516403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.032519861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.032525111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2500000000052505e-06, 'source_diff': 5.2500000000052505e-06}, {'time': 0.032529361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.032533833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.032537236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.032543278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.04200000000471e-06, 'source_diff': 6.04200000000471e-06}, {'time': 0.032549181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.032554667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.032558194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5269999999962276e-06, 'source_diff': 3.5269999999962276e-06}, {'time': 0.032562236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.032564986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7499999999958114e-06, 'source_diff': 2.7499999999958114e-06}, {'time': 0.032567847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.032571681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.83400000000117e-06, 'source_diff': 3.83400000000117e-06}, {'time': 0.032577583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.032580583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.032585431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847999999994801e-06, 'source_diff': 4.847999999994801e-06}, {'time': 0.032588931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5000000000035003e-06, 'source_diff': 3.5000000000035003e-06}, {'time': 0.032592389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.032596944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.032601764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.819999999995661e-06, 'source_diff': 4.819999999995661e-06}, {'time': 0.032605014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2500000000032503e-06, 'source_diff': 3.2500000000032503e-06}, {'time': 0.032609111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.032613292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.032617111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999995187e-06, 'source_diff': 3.818999999995187e-06}, {'time': 0.032620528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4170000000055545e-06, 'source_diff': 3.4170000000055545e-06}, {'time': 0.032623389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.032626861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.032631889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.032636819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.032641236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.032644944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7080000000050406e-06, 'source_diff': 3.7080000000050406e-06}, {'time': 0.032650736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.032654903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.032658722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.819000000002126e-06, 'source_diff': 3.819000000002126e-06}, {'time': 0.032662972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.032666375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.032672458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000003946e-06, 'source_diff': 6.083000000003946e-06}, {'time': 0.0326785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.032682125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.032687083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.032689528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000036942e-06, 'source_diff': 2.4450000000036942e-06}, {'time': 0.032692458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:10.918" endtime="20201110 08:34:10.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.914" endtime="20201110 08:34:10.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:10.936" level="INFO">${debug-compressed} = {'source_diff': [0, 4.889000000000976e-06, 4.9589999999988255e-06, 5.194000000000032e-06, 5.083000000002946e-06, 3.5279999999957012e-06, 6.125000000002656e-06, 4.1809999999989356e-06, 3.45799999999785...</msg>
<status status="PASS" starttime="20201110 08:34:10.923" endtime="20201110 08:34:10.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.940" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:10.939" endtime="20201110 08:34:10.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.944" level="INFO">VALUE: {'source_diff': [0, 4.889000000000976e-06, 4.9589999999988255e-06, 5.194000000000032e-06, 5.083000000002946e-06, 3.5279999999957012e-06, 6.125000000002656e-06, 4.1809999999989356e-06, 3.4579999999978517e-06, 5.2500000000052505e-06, 4.2499999999973115e-06, 4.471999999998422e-06, 3.4029999999990457e-06, 6.04200000000471e-06, 5.903000000001546e-06, 5.485999999998992e-06, 3.5269999999962276e-06, 4.04200000000271e-06, 2.7499999999958114e-06, 2.860999999999836e-06, 3.83400000000117e-06, 5.902000000002072e-06, 3.0000000000030003e-06, 4.847999999994801e-06, 3.5000000000035003e-06, 3.4579999999978517e-06, 4.555000000003306e-06, 4.819999999995661e-06, 3.2500000000032503e-06, 4.097000000001516e-06, 4.1809999999989356e-06, 3.818999999995187e-06, 3.4170000000055545e-06, 2.860999999999836e-06, 3.4719999999974216e-06, 5.027999999997201e-06, 4.930000000000212e-06, 4.416999999999616e-06, 3.7080000000050406e-06, 5.791999999997521e-06, 4.166999999999366e-06, 3.819000000002126e-06, 4.2499999999973115e-06, 3.4029999999990457e-06, 6.083000000003946e-06, 6.041999999997771e-06, 3.625000000000156e-06, 4.957999999999352e-06, 2.4450000000036942e-06, 2.929999999998212e-06], 'diff': [0, 4.889000000000976e-06, 4.9589999999988255e-06, 5.194000000000032e-06, 5.083000000002946e-06, 3.5279999999957012e-06, 6.125000000002656e-06, 4.1809999999989356e-06, 3.4579999999978517e-06, 5.2500000000052505e-06, 4.2499999999973115e-06, 4.471999999998422e-06, 3.4029999999990457e-06, 6.04200000000471e-06, 5.903000000001546e-06, 5.485999999998992e-06, 3.5269999999962276e-06, 4.04200000000271e-06, 2.7499999999958114e-06, 2.860999999999836e-06, 3.83400000000117e-06, 5.902000000002072e-06, 3.0000000000030003e-06, 4.847999999994801e-06, 3.5000000000035003e-06, 3.4579999999978517e-06, 4.555000000003306e-06, 4.819999999995661e-06, 3.2500000000032503e-06, 4.097000000001516e-06, 4.1809999999989356e-06, 3.818999999995187e-06, 3.4170000000055545e-06, 2.860999999999836e-06, 3.4719999999974216e-06, 5.027999999997201e-06, 4.930000000000212e-06, 4.416999999999616e-06, 3.7080000000050406e-06, 5.791999999997521e-06, 4.166999999999366e-06, 3.819000000002126e-06, 4.2499999999973115e-06, 3.4029999999990457e-06, 6.083000000003946e-06, 6.041999999997771e-06, 3.625000000000156e-06, 4.957999999999352e-06, 2.4450000000036942e-06, 2.929999999998212e-06], 'time': [0.032482444, 0.032487333, 0.032492292, 0.032497486, 0.032502569, 0.032506097, 0.032512222, 0.032516403, 0.032519861, 0.032525111, 0.032529361, 0.032533833, 0.032537236, 0.032543278, 0.032549181, 0.032554667, 0.032558194, 0.032562236, 0.032564986, 0.032567847, 0.032571681, 0.032577583, 0.032580583, 0.032585431, 0.032588931, 0.032592389, 0.032596944, 0.032601764, 0.032605014, 0.032609111, 0.032613292, 0.032617111, 0.032620528, 0.032623389, 0.032626861, 0.032631889, 0.032636819, 0.032641236, 0.032644944, 0.032650736, 0.032654903, 0.032658722, 0.032662972, 0.032666375, 0.032672458, 0.0326785, 0.032682125, 0.032687083, 0.032689528, 0.032692458], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:10.941" endtime="20201110 08:34:10.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.937" endtime="20201110 08:34:10.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.948" level="INFO">${RESULT} = [{'time': 0.032487333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.032497486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.945" endtime="20201110 08:34:10.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:10.956" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.889000000000976e-06, 5.194000000000032e-06, 3.5279999999957012e-06, 4.1809999999989356e-06, 5.2500000000052505e-06, 4.471999999998422e-06, 6.04200000000471e-06, 5.485999999998992e-0...</msg>
<status status="PASS" starttime="20201110 08:34:10.949" endtime="20201110 08:34:10.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.961" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:10.960" endtime="20201110 08:34:10.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.963" level="INFO">VALUE: [4.889000000000976e-06, 5.194000000000032e-06, 3.5279999999957012e-06, 4.1809999999989356e-06, 5.2500000000052505e-06, 4.471999999998422e-06, 6.04200000000471e-06, 5.485999999998992e-06, 4.04200000000271e-06, 2.860999999999836e-06, 5.902000000002072e-06, 4.847999999994801e-06, 3.4579999999978517e-06, 4.819999999995661e-06, 4.097000000001516e-06, 3.818999999995187e-06, 2.860999999999836e-06, 5.027999999997201e-06, 4.416999999999616e-06, 5.791999999997521e-06, 3.819000000002126e-06, 3.4029999999990457e-06, 6.041999999997771e-06, 4.957999999999352e-06, 2.929999999998212e-06]</msg>
<status status="PASS" starttime="20201110 08:34:10.962" endtime="20201110 08:34:10.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.957" endtime="20201110 08:34:10.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.967" endtime="20201110 08:34:10.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.970" endtime="20201110 08:34:10.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.969" endtime="20201110 08:34:10.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.965" endtime="20201110 08:34:10.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.568" endtime="20201110 08:34:10.991"></status>
</kw>
<msg timestamp="20201110 08:34:10.991" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.999" endtime="20201110 08:34:11.012"></status>
</kw>
<msg timestamp="20201110 08:34:11.012" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.998" endtime="20201110 08:34:11.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.015" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.013" endtime="20201110 08:34:11.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.016" endtime="20201110 08:34:11.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.995" endtime="20201110 08:34:11.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.993" endtime="20201110 08:34:11.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.025" endtime="20201110 08:34:11.295"></status>
</kw>
<msg timestamp="20201110 08:34:11.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018767917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.024" endtime="20201110 08:34:11.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018767917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.298" endtime="20201110 08:34:11.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.303" endtime="20201110 08:34:11.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.021" endtime="20201110 08:34:11.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.019" endtime="20201110 08:34:11.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.309" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:11.308" endtime="20201110 08:34:11.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.313" level="INFO">VALUE: [{'time': 0.018765069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018767917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.018772236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.018775181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.018779542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018785431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018789139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018791903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.018794806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.018798694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.018803222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018809319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.01881375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.018816486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018821375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018826625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.018830806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.018836653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018841667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018846319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018849792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.018854014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018857681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.018862194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.512999999997658e-06, 'source_diff': 4.512999999997658e-06}, {'time': 0.018866319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018868833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.018873361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018876361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.018879417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0559999999978105e-06, 'source_diff': 3.0559999999978105e-06}, {'time': 0.018883458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018886514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.018891292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018895347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.018898694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018904611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018909972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018914083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018919875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.018924347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018929542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018935389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018939167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.018944931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018947861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.018952875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018958181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018961069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.887999999999502e-06, 'source_diff': 2.887999999999502e-06}, {'time': 0.018966125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018971917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018975736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:11.310" endtime="20201110 08:34:11.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.306" endtime="20201110 08:34:11.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:11.328" level="INFO">${debug-compressed} = {'source_diff': [0, 2.8479999999997396e-06, 4.319000000002626e-06, 2.9449999999972554e-06, 4.361000000001336e-06, 5.8889999999985065e-06, 3.708000000001571e-06, 2.7639999999988507e-06, 2.9030000000020...</msg>
<status status="PASS" starttime="20201110 08:34:11.316" endtime="20201110 08:34:11.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.332" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:11.331" endtime="20201110 08:34:11.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.335" level="INFO">VALUE: {'source_diff': [0, 2.8479999999997396e-06, 4.319000000002626e-06, 2.9449999999972554e-06, 4.361000000001336e-06, 5.8889999999985065e-06, 3.708000000001571e-06, 2.7639999999988507e-06, 2.903000000002015e-06, 3.888000000000502e-06, 4.528000000000171e-06, 6.097000000000047e-06, 4.430999999999186e-06, 2.735999999999711e-06, 4.889000000000976e-06, 5.2499999999983116e-06, 4.1809999999989356e-06, 5.846999999999797e-06, 5.014000000001101e-06, 4.652000000000822e-06, 3.4730000000003647e-06, 4.221999999998172e-06, 3.667000000002335e-06, 4.512999999997658e-06, 4.125000000000656e-06, 2.51400000000207e-06, 4.528000000000171e-06, 2.999999999999531e-06, 3.0559999999978105e-06, 4.040999999999767e-06, 3.05600000000128e-06, 4.778000000000421e-06, 4.054999999999337e-06, 3.347000000000766e-06, 5.917000000001116e-06, 5.360999999998867e-06, 4.111000000001086e-06, 5.791999999997521e-06, 4.472000000001891e-06, 5.1949999999995056e-06, 5.846999999999797e-06, 3.7779999999994207e-06, 5.764000000001851e-06, 2.929999999998212e-06, 5.014000000001101e-06, 5.306000000000061e-06, 2.887999999999502e-06, 5.055999999999811e-06, 5.792000000000991e-06, 3.818999999998657e-06], 'diff': [0, 2.8479999999997396e-06, 4.319000000002626e-06, 2.9449999999972554e-06, 4.361000000001336e-06, 5.8889999999985065e-06, 3.708000000001571e-06, 2.7639999999988507e-06, 2.903000000002015e-06, 3.888000000000502e-06, 4.528000000000171e-06, 6.097000000000047e-06, 4.430999999999186e-06, 2.735999999999711e-06, 4.889000000000976e-06, 5.2499999999983116e-06, 4.1809999999989356e-06, 5.846999999999797e-06, 5.014000000001101e-06, 4.652000000000822e-06, 3.4730000000003647e-06, 4.221999999998172e-06, 3.667000000002335e-06, 4.512999999997658e-06, 4.125000000000656e-06, 2.51400000000207e-06, 4.528000000000171e-06, 2.999999999999531e-06, 3.0559999999978105e-06, 4.040999999999767e-06, 3.05600000000128e-06, 4.778000000000421e-06, 4.054999999999337e-06, 3.347000000000766e-06, 5.917000000001116e-06, 5.360999999998867e-06, 4.111000000001086e-06, 5.791999999997521e-06, 4.472000000001891e-06, 5.1949999999995056e-06, 5.846999999999797e-06, 3.7779999999994207e-06, 5.764000000001851e-06, 2.929999999998212e-06, 5.014000000001101e-06, 5.306000000000061e-06, 2.887999999999502e-06, 5.055999999999811e-06, 5.792000000000991e-06, 3.818999999998657e-06], 'time': [0.018765069, 0.018767917, 0.018772236, 0.018775181, 0.018779542, 0.018785431, 0.018789139, 0.018791903, 0.018794806, 0.018798694, 0.018803222, 0.018809319, 0.01881375, 0.018816486, 0.018821375, 0.018826625, 0.018830806, 0.018836653, 0.018841667, 0.018846319, 0.018849792, 0.018854014, 0.018857681, 0.018862194, 0.018866319, 0.018868833, 0.018873361, 0.018876361, 0.018879417, 0.018883458, 0.018886514, 0.018891292, 0.018895347, 0.018898694, 0.018904611, 0.018909972, 0.018914083, 0.018919875, 0.018924347, 0.018929542, 0.018935389, 0.018939167, 0.018944931, 0.018947861, 0.018952875, 0.018958181, 0.018961069, 0.018966125, 0.018971917, 0.018975736], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:34:11.333" endtime="20201110 08:34:11.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.329" endtime="20201110 08:34:11.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.339" level="INFO">${RESULT} = [{'time': 0.018767917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.018775181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:11.337" endtime="20201110 08:34:11.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:11.347" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.8479999999997396e-06, 2.9449999999972554e-06, 5.8889999999985065e-06, 2.7639999999988507e-06, 3.888000000000502e-06, 6.097000000000047e-06, 2.735999999999711e-06, 5.2499999999983116...</msg>
<status status="PASS" starttime="20201110 08:34:11.340" endtime="20201110 08:34:11.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.353" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:11.351" endtime="20201110 08:34:11.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.361" level="INFO">VALUE: [2.8479999999997396e-06, 2.9449999999972554e-06, 5.8889999999985065e-06, 2.7639999999988507e-06, 3.888000000000502e-06, 6.097000000000047e-06, 2.735999999999711e-06, 5.2499999999983116e-06, 5.846999999999797e-06, 4.652000000000822e-06, 4.221999999998172e-06, 4.512999999997658e-06, 2.51400000000207e-06, 2.999999999999531e-06, 4.040999999999767e-06, 4.778000000000421e-06, 3.347000000000766e-06, 5.360999999998867e-06, 5.791999999997521e-06, 5.1949999999995056e-06, 3.7779999999994207e-06, 2.929999999998212e-06, 5.306000000000061e-06, 5.055999999999811e-06, 3.818999999998657e-06]</msg>
<status status="PASS" starttime="20201110 08:34:11.355" endtime="20201110 08:34:11.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.349" endtime="20201110 08:34:11.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.369" endtime="20201110 08:34:11.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.378" endtime="20201110 08:34:11.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.374" endtime="20201110 08:34:11.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.365" endtime="20201110 08:34:11.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.992" endtime="20201110 08:34:11.405"></status>
</kw>
<msg timestamp="20201110 08:34:11.406" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.423" endtime="20201110 08:34:11.438"></status>
</kw>
<msg timestamp="20201110 08:34:11.439" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.420" endtime="20201110 08:34:11.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.444" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.441" endtime="20201110 08:34:11.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.446" endtime="20201110 08:34:11.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.413" endtime="20201110 08:34:11.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.410" endtime="20201110 08:34:11.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.460" endtime="20201110 08:34:11.728"></status>
</kw>
<msg timestamp="20201110 08:34:11.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033951194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033956431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.459" endtime="20201110 08:34:11.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033951194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033956431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.731" endtime="20201110 08:34:11.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.736" endtime="20201110 08:34:11.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.456" endtime="20201110 08:34:11.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.453" endtime="20201110 08:34:11.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.743" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:11.742" endtime="20201110 08:34:11.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.747" level="INFO">VALUE: [{'time': 0.033951194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033956431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.237000000005154e-06, 'source_diff': 5.237000000005154e-06}, {'time': 0.033960306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.033964903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.033968264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.033974306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.04200000000471e-06, 'source_diff': 6.04200000000471e-06}, {'time': 0.033979167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999994897e-06, 'source_diff': 4.860999999994897e-06}, {'time': 0.033984306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.033987292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9860000000034304e-06, 'source_diff': 2.9860000000034304e-06}, {'time': 0.033990694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.033996014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999996161e-06, 'source_diff': 5.319999999996161e-06}, {'time': 0.033999417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.034001917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.034007833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.034011083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2499999999963114e-06, 'source_diff': 3.2499999999963114e-06}, {'time': 0.034017222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.034023347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.034028347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.034032431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.0340385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.034044167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.034047931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.034050917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9860000000034304e-06, 'source_diff': 2.9860000000034304e-06}, {'time': 0.034054333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.034056708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.034060542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.83400000000117e-06, 'source_diff': 3.83400000000117e-06}, {'time': 0.034062972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.03406775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.034072347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.034077236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.888999999994037e-06, 'source_diff': 4.888999999994037e-06}, {'time': 0.034083028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.034087375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.034090847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.0340955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.034101236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.034104931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6949999999980054e-06, 'source_diff': 3.6949999999980054e-06}, {'time': 0.034110083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.034114736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.034120097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.034124097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.034128806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7089999999985754e-06, 'source_diff': 4.7089999999985754e-06}, {'time': 0.034134292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.034140375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000003946e-06, 'source_diff': 6.083000000003946e-06}, {'time': 0.034144264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.034148083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.819000000002126e-06, 'source_diff': 3.819000000002126e-06}, {'time': 0.034154167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083999999996481e-06, 'source_diff': 6.083999999996481e-06}, {'time': 0.034159597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.034163, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.034167069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.03417275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:11.744" endtime="20201110 08:34:11.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.739" endtime="20201110 08:34:11.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:11.763" level="INFO">${debug-compressed} = {'source_diff': [0, 5.237000000005154e-06, 3.875000000000406e-06, 4.596999999995077e-06, 3.361000000000336e-06, 6.04200000000471e-06, 4.860999999994897e-06, 5.139000000001226e-06, 2.9860000000034304e-...</msg>
<status status="PASS" starttime="20201110 08:34:11.749" endtime="20201110 08:34:11.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.767" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:11.766" endtime="20201110 08:34:11.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.770" level="INFO">VALUE: {'source_diff': [0, 5.237000000005154e-06, 3.875000000000406e-06, 4.596999999995077e-06, 3.361000000000336e-06, 6.04200000000471e-06, 4.860999999994897e-06, 5.139000000001226e-06, 2.9860000000034304e-06, 3.401999999999572e-06, 5.319999999996161e-06, 3.4029999999990457e-06, 2.5000000000025002e-06, 5.916000000001642e-06, 3.2499999999963114e-06, 6.139000000002226e-06, 6.125000000002656e-06, 4.9999999999980616e-06, 4.08400000000142e-06, 6.0689999999974376e-06, 5.667000000000866e-06, 3.7639999999963814e-06, 2.9860000000034304e-06, 3.415999999999142e-06, 2.3749999999989058e-06, 3.83400000000117e-06, 2.4299999999977118e-06, 4.77800000000389e-06, 4.597000000002016e-06, 4.888999999994037e-06, 5.79200000000446e-06, 4.347000000001766e-06, 3.4719999999974216e-06, 4.653000000000296e-06, 5.735999999999242e-06, 3.6949999999980054e-06, 5.152000000001322e-06, 4.653000000000296e-06, 5.361000000002336e-06, 3.9999999999970615e-06, 4.7089999999985754e-06, 5.485999999998992e-06, 6.083000000003946e-06, 3.888999999999976e-06, 3.819000000002126e-06, 6.083999999996481e-06, 5.430000000000712e-06, 3.4029999999990457e-06, 4.069000000002376e-06, 5.681000000000436e-06], 'diff': [0, 5.237000000005154e-06, 3.875000000000406e-06, 4.596999999995077e-06, 3.361000000000336e-06, 6.04200000000471e-06, 4.860999999994897e-06, 5.139000000001226e-06, 2.9860000000034304e-06, 3.401999999999572e-06, 5.319999999996161e-06, 3.4029999999990457e-06, 2.5000000000025002e-06, 5.916000000001642e-06, 3.2499999999963114e-06, 6.139000000002226e-06, 6.125000000002656e-06, 4.9999999999980616e-06, 4.08400000000142e-06, 6.0689999999974376e-06, 5.667000000000866e-06, 3.7639999999963814e-06, 2.9860000000034304e-06, 3.415999999999142e-06, 2.3749999999989058e-06, 3.83400000000117e-06, 2.4299999999977118e-06, 4.77800000000389e-06, 4.597000000002016e-06, 4.888999999994037e-06, 5.79200000000446e-06, 4.347000000001766e-06, 3.4719999999974216e-06, 4.653000000000296e-06, 5.735999999999242e-06, 3.6949999999980054e-06, 5.152000000001322e-06, 4.653000000000296e-06, 5.361000000002336e-06, 3.9999999999970615e-06, 4.7089999999985754e-06, 5.485999999998992e-06, 6.083000000003946e-06, 3.888999999999976e-06, 3.819000000002126e-06, 6.083999999996481e-06, 5.430000000000712e-06, 3.4029999999990457e-06, 4.069000000002376e-06, 5.681000000000436e-06], 'time': [0.033951194, 0.033956431, 0.033960306, 0.033964903, 0.033968264, 0.033974306, 0.033979167, 0.033984306, 0.033987292, 0.033990694, 0.033996014, 0.033999417, 0.034001917, 0.034007833, 0.034011083, 0.034017222, 0.034023347, 0.034028347, 0.034032431, 0.0340385, 0.034044167, 0.034047931, 0.034050917, 0.034054333, 0.034056708, 0.034060542, 0.034062972, 0.03406775, 0.034072347, 0.034077236, 0.034083028, 0.034087375, 0.034090847, 0.0340955, 0.034101236, 0.034104931, 0.034110083, 0.034114736, 0.034120097, 0.034124097, 0.034128806, 0.034134292, 0.034140375, 0.034144264, 0.034148083, 0.034154167, 0.034159597, 0.034163, 0.034167069, 0.03417275], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:11.768" endtime="20201110 08:34:11.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.764" endtime="20201110 08:34:11.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.775" level="INFO">${RESULT} = [{'time': 0.033956431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.237000000005154e-06, 'source_diff': 5.237000000005154e-06}, {'time': 0.033964903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.772" endtime="20201110 08:34:11.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:11.783" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.237000000005154e-06, 4.596999999995077e-06, 6.04200000000471e-06, 5.139000000001226e-06, 3.401999999999572e-06, 3.4029999999990457e-06, 5.916000000001642e-06, 6.139000000002226e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:11.776" endtime="20201110 08:34:11.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.788" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:11.787" endtime="20201110 08:34:11.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.790" level="INFO">VALUE: [5.237000000005154e-06, 4.596999999995077e-06, 6.04200000000471e-06, 5.139000000001226e-06, 3.401999999999572e-06, 3.4029999999990457e-06, 5.916000000001642e-06, 6.139000000002226e-06, 4.9999999999980616e-06, 6.0689999999974376e-06, 3.7639999999963814e-06, 3.415999999999142e-06, 3.83400000000117e-06, 4.77800000000389e-06, 4.888999999994037e-06, 4.347000000001766e-06, 4.653000000000296e-06, 3.6949999999980054e-06, 4.653000000000296e-06, 3.9999999999970615e-06, 5.485999999998992e-06, 3.888999999999976e-06, 6.083999999996481e-06, 3.4029999999990457e-06, 5.681000000000436e-06]</msg>
<status status="PASS" starttime="20201110 08:34:11.789" endtime="20201110 08:34:11.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.784" endtime="20201110 08:34:11.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.794" endtime="20201110 08:34:11.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.797" endtime="20201110 08:34:11.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.796" endtime="20201110 08:34:11.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.792" endtime="20201110 08:34:11.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.407" endtime="20201110 08:34:11.819"></status>
</kw>
<msg timestamp="20201110 08:34:11.819" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.827" endtime="20201110 08:34:11.839"></status>
</kw>
<msg timestamp="20201110 08:34:11.840" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.825" endtime="20201110 08:34:11.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.841" endtime="20201110 08:34:11.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.843" endtime="20201110 08:34:11.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.823" endtime="20201110 08:34:11.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.821" endtime="20201110 08:34:11.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.853" endtime="20201110 08:34:12.121"></status>
</kw>
<msg timestamp="20201110 08:34:12.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018714194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.851" endtime="20201110 08:34:12.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018714194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.124" endtime="20201110 08:34:12.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.130" endtime="20201110 08:34:12.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.849" endtime="20201110 08:34:12.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.847" endtime="20201110 08:34:12.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.136" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:12.135" endtime="20201110 08:34:12.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.140" level="INFO">VALUE: [{'time': 0.018714194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018722361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.018726194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.018729, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8059999999975604e-06, 'source_diff': 2.8059999999975604e-06}, {'time': 0.018732, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.018735708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018740042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.018746125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018749306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.181000000001405e-06, 'source_diff': 3.181000000001405e-06}, {'time': 0.018755264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018759917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018764583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018768931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34799999999777e-06, 'source_diff': 4.34799999999777e-06}, {'time': 0.018773583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018777583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018781944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018787625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018792681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018797333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018803222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.018807125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018809875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018816014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.018818764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.018824431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.018828681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018831431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.01883425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.018839722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018843403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.681000000001905e-06, 'source_diff': 3.681000000001905e-06}, {'time': 0.018848319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.915999999997173e-06, 'source_diff': 4.915999999997173e-06}, {'time': 0.018854042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.723000000002615e-06, 'source_diff': 5.723000000002615e-06}, {'time': 0.018860014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.01886575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.018868222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018871833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.018876556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.018880306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018884889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018890278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.018896069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791000000001517e-06, 'source_diff': 5.791000000001517e-06}, {'time': 0.018902028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.018905319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.290999999999017e-06, 'source_diff': 3.290999999999017e-06}, {'time': 0.018908542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018913194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018917972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018920486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.018924778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018930028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:12.138" endtime="20201110 08:34:12.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.133" endtime="20201110 08:34:12.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:12.156" level="INFO">${debug-compressed} = {'source_diff': [0, 3.4169999999986156e-06, 4.750000000001281e-06, 3.833000000001696e-06, 2.8059999999975604e-06, 2.999999999999531e-06, 3.708000000001571e-06, 4.3339999999982e-06, 6.083000000000477e-...</msg>
<status status="PASS" starttime="20201110 08:34:12.143" endtime="20201110 08:34:12.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.161" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:12.159" endtime="20201110 08:34:12.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.164" level="INFO">VALUE: {'source_diff': [0, 3.4169999999986156e-06, 4.750000000001281e-06, 3.833000000001696e-06, 2.8059999999975604e-06, 2.999999999999531e-06, 3.708000000001571e-06, 4.3339999999982e-06, 6.083000000000477e-06, 3.181000000001405e-06, 5.958000000000352e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.34799999999777e-06, 4.652000000000822e-06, 4.000000000000531e-06, 4.360999999997867e-06, 5.681000000000436e-06, 5.055999999999811e-06, 4.652000000000822e-06, 5.889000000001976e-06, 3.902999999999546e-06, 2.749999999999281e-06, 6.1389999999987566e-06, 2.7500000000027502e-06, 5.666999999997396e-06, 4.250000000000781e-06, 2.749999999999281e-06, 2.819000000001126e-06, 5.471999999999422e-06, 3.681000000001905e-06, 4.915999999997173e-06, 5.723000000002615e-06, 5.971999999999922e-06, 5.735999999999242e-06, 2.471999999999891e-06, 3.611000000000586e-06, 4.722999999998145e-06, 3.750000000000281e-06, 4.582999999998977e-06, 5.389000000001476e-06, 5.791000000001517e-06, 5.9589999999998255e-06, 3.290999999999017e-06, 3.2230000000001147e-06, 4.652000000000822e-06, 4.778000000000421e-06, 2.5139999999986007e-06, 4.291999999999491e-06, 5.250000000001781e-06], 'diff': [0, 3.4169999999986156e-06, 4.750000000001281e-06, 3.833000000001696e-06, 2.8059999999975604e-06, 2.999999999999531e-06, 3.708000000001571e-06, 4.3339999999982e-06, 6.083000000000477e-06, 3.181000000001405e-06, 5.958000000000352e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.34799999999777e-06, 4.652000000000822e-06, 4.000000000000531e-06, 4.360999999997867e-06, 5.681000000000436e-06, 5.055999999999811e-06, 4.652000000000822e-06, 5.889000000001976e-06, 3.902999999999546e-06, 2.749999999999281e-06, 6.1389999999987566e-06, 2.7500000000027502e-06, 5.666999999997396e-06, 4.250000000000781e-06, 2.749999999999281e-06, 2.819000000001126e-06, 5.471999999999422e-06, 3.681000000001905e-06, 4.915999999997173e-06, 5.723000000002615e-06, 5.971999999999922e-06, 5.735999999999242e-06, 2.471999999999891e-06, 3.611000000000586e-06, 4.722999999998145e-06, 3.750000000000281e-06, 4.582999999998977e-06, 5.389000000001476e-06, 5.791000000001517e-06, 5.9589999999998255e-06, 3.290999999999017e-06, 3.2230000000001147e-06, 4.652000000000822e-06, 4.778000000000421e-06, 2.5139999999986007e-06, 4.291999999999491e-06, 5.250000000001781e-06], 'time': [0.018714194, 0.018717611, 0.018722361, 0.018726194, 0.018729, 0.018732, 0.018735708, 0.018740042, 0.018746125, 0.018749306, 0.018755264, 0.018759917, 0.018764583, 0.018768931, 0.018773583, 0.018777583, 0.018781944, 0.018787625, 0.018792681, 0.018797333, 0.018803222, 0.018807125, 0.018809875, 0.018816014, 0.018818764, 0.018824431, 0.018828681, 0.018831431, 0.01883425, 0.018839722, 0.018843403, 0.018848319, 0.018854042, 0.018860014, 0.01886575, 0.018868222, 0.018871833, 0.018876556, 0.018880306, 0.018884889, 0.018890278, 0.018896069, 0.018902028, 0.018905319, 0.018908542, 0.018913194, 0.018917972, 0.018920486, 0.018924778, 0.018930028], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:12.162" endtime="20201110 08:34:12.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.157" endtime="20201110 08:34:12.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.169" level="INFO">${RESULT} = [{'time': 0.018717611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018726194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:12.166" endtime="20201110 08:34:12.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:12.178" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.4169999999986156e-06, 3.833000000001696e-06, 2.999999999999531e-06, 4.3339999999982e-06, 3.181000000001405e-06, 4.653000000000296e-06, 4.34799999999777e-06, 4.000000000000531e-06, 5...</msg>
<status status="PASS" starttime="20201110 08:34:12.170" endtime="20201110 08:34:12.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.182" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:12.181" endtime="20201110 08:34:12.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.184" level="INFO">VALUE: [3.4169999999986156e-06, 3.833000000001696e-06, 2.999999999999531e-06, 4.3339999999982e-06, 3.181000000001405e-06, 4.653000000000296e-06, 4.34799999999777e-06, 4.000000000000531e-06, 5.681000000000436e-06, 4.652000000000822e-06, 3.902999999999546e-06, 6.1389999999987566e-06, 5.666999999997396e-06, 2.749999999999281e-06, 5.471999999999422e-06, 4.915999999997173e-06, 5.971999999999922e-06, 2.471999999999891e-06, 4.722999999998145e-06, 4.582999999998977e-06, 5.791000000001517e-06, 3.290999999999017e-06, 4.652000000000822e-06, 2.5139999999986007e-06, 5.250000000001781e-06]</msg>
<status status="PASS" starttime="20201110 08:34:12.183" endtime="20201110 08:34:12.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.178" endtime="20201110 08:34:12.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.188" endtime="20201110 08:34:12.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.191" endtime="20201110 08:34:12.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.190" endtime="20201110 08:34:12.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.186" endtime="20201110 08:34:12.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.820" endtime="20201110 08:34:12.212"></status>
</kw>
<msg timestamp="20201110 08:34:12.213" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.221" endtime="20201110 08:34:12.232"></status>
</kw>
<msg timestamp="20201110 08:34:12.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.219" endtime="20201110 08:34:12.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.235" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.234" endtime="20201110 08:34:12.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.236" endtime="20201110 08:34:12.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.216" endtime="20201110 08:34:12.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.215" endtime="20201110 08:34:12.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.246" endtime="20201110 08:34:12.515"></status>
</kw>
<msg timestamp="20201110 08:34:12.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017990556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.244" endtime="20201110 08:34:12.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017990556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.518" endtime="20201110 08:34:12.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.523" endtime="20201110 08:34:12.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.241" endtime="20201110 08:34:12.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.240" endtime="20201110 08:34:12.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.530" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:12.529" endtime="20201110 08:34:12.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.534" level="INFO">VALUE: [{'time': 0.017987903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017990556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.017994972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018000389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.018005708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018009694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018014611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018018944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018023806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.86200000000131e-06, 'source_diff': 4.86200000000131e-06}, {'time': 0.018029681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018033028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018037458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018040333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018043667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.018047931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018050806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018053222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4160000000016113e-06, 'source_diff': 2.4160000000016113e-06}, {'time': 0.018056583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018060153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5699999999978804e-06, 'source_diff': 3.5699999999978804e-06}, {'time': 0.018063875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018067694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.018071736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.018075153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.01808125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018083639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.018088083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.444000000002751e-06, 'source_diff': 4.444000000002751e-06}, {'time': 0.018093931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.018098708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777000000000947e-06, 'source_diff': 4.777000000000947e-06}, {'time': 0.018104014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018108014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.018111542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.018114333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.018120139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.018123597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.018128417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.018132917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.018137097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.180000000002931e-06, 'source_diff': 4.180000000002931e-06}, {'time': 0.018141069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.018146111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018151056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.018154819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763000000000377e-06, 'source_diff': 3.763000000000377e-06}, {'time': 0.018158528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.018162528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018165625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018171583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018176431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.018182097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.018186042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.018189681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.018194694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.013000000001627e-06, 'source_diff': 5.013000000001627e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:12.531" endtime="20201110 08:34:12.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.527" endtime="20201110 08:34:12.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:12.550" level="INFO">${debug-compressed} = {'source_diff': [0, 2.653000000001765e-06, 4.416000000000142e-06, 5.416999999997146e-06, 5.319000000000157e-06, 3.986000000000961e-06, 4.917000000000116e-06, 4.332999999998727e-06, 4.86200000000131e-0...</msg>
<status status="PASS" starttime="20201110 08:34:12.536" endtime="20201110 08:34:12.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.554" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:12.553" endtime="20201110 08:34:12.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.557" level="INFO">VALUE: {'source_diff': [0, 2.653000000001765e-06, 4.416000000000142e-06, 5.416999999997146e-06, 5.319000000000157e-06, 3.986000000000961e-06, 4.917000000000116e-06, 4.332999999998727e-06, 4.86200000000131e-06, 5.874999999998937e-06, 3.347000000000766e-06, 4.429999999999712e-06, 2.874999999999406e-06, 3.3340000000006698e-06, 4.264000000000351e-06, 2.874999999999406e-06, 2.4160000000016113e-06, 3.361000000000336e-06, 3.5699999999978804e-06, 3.722000000001141e-06, 3.818999999998657e-06, 4.04200000000271e-06, 3.4169999999986156e-06, 6.097000000000047e-06, 2.3889999999984757e-06, 4.444000000002751e-06, 5.8479999999992704e-06, 4.777000000000947e-06, 5.306000000000061e-06, 3.9999999999970615e-06, 3.52800000000264e-06, 2.790999999998517e-06, 5.806000000000561e-06, 3.458000000001321e-06, 4.8199999999991305e-06, 4.4999999999975615e-06, 4.180000000002931e-06, 3.971999999997922e-06, 5.042000000000241e-06, 4.9449999999992555e-06, 3.763000000000377e-06, 3.709000000001045e-06, 4.000000000000531e-06, 3.097000000000516e-06, 5.958000000000352e-06, 4.84799999999827e-06, 5.666000000001392e-06, 3.9449999999982555e-06, 3.6389999999997258e-06, 5.013000000001627e-06], 'diff': [0, 2.653000000001765e-06, 4.416000000000142e-06, 5.416999999997146e-06, 5.319000000000157e-06, 3.986000000000961e-06, 4.917000000000116e-06, 4.332999999998727e-06, 4.86200000000131e-06, 5.874999999998937e-06, 3.347000000000766e-06, 4.429999999999712e-06, 2.874999999999406e-06, 3.3340000000006698e-06, 4.264000000000351e-06, 2.874999999999406e-06, 2.4160000000016113e-06, 3.361000000000336e-06, 3.5699999999978804e-06, 3.722000000001141e-06, 3.818999999998657e-06, 4.04200000000271e-06, 3.4169999999986156e-06, 6.097000000000047e-06, 2.3889999999984757e-06, 4.444000000002751e-06, 5.8479999999992704e-06, 4.777000000000947e-06, 5.306000000000061e-06, 3.9999999999970615e-06, 3.52800000000264e-06, 2.790999999998517e-06, 5.806000000000561e-06, 3.458000000001321e-06, 4.8199999999991305e-06, 4.4999999999975615e-06, 4.180000000002931e-06, 3.971999999997922e-06, 5.042000000000241e-06, 4.9449999999992555e-06, 3.763000000000377e-06, 3.709000000001045e-06, 4.000000000000531e-06, 3.097000000000516e-06, 5.958000000000352e-06, 4.84799999999827e-06, 5.666000000001392e-06, 3.9449999999982555e-06, 3.6389999999997258e-06, 5.013000000001627e-06], 'time': [0.017987903, 0.017990556, 0.017994972, 0.018000389, 0.018005708, 0.018009694, 0.018014611, 0.018018944, 0.018023806, 0.018029681, 0.018033028, 0.018037458, 0.018040333, 0.018043667, 0.018047931, 0.018050806, 0.018053222, 0.018056583, 0.018060153, 0.018063875, 0.018067694, 0.018071736, 0.018075153, 0.01808125, 0.018083639, 0.018088083, 0.018093931, 0.018098708, 0.018104014, 0.018108014, 0.018111542, 0.018114333, 0.018120139, 0.018123597, 0.018128417, 0.018132917, 0.018137097, 0.018141069, 0.018146111, 0.018151056, 0.018154819, 0.018158528, 0.018162528, 0.018165625, 0.018171583, 0.018176431, 0.018182097, 0.018186042, 0.018189681, 0.018194694], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:12.555" endtime="20201110 08:34:12.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.551" endtime="20201110 08:34:12.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.562" level="INFO">${RESULT} = [{'time': 0.017990556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.018000389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:12.559" endtime="20201110 08:34:12.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:12.570" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.653000000001765e-06, 5.416999999997146e-06, 3.986000000000961e-06, 4.332999999998727e-06, 5.874999999998937e-06, 4.429999999999712e-06, 3.3340000000006698e-06, 2.874999999999406e-06...</msg>
<status status="PASS" starttime="20201110 08:34:12.563" endtime="20201110 08:34:12.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.574" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:12.573" endtime="20201110 08:34:12.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.577" level="INFO">VALUE: [2.653000000001765e-06, 5.416999999997146e-06, 3.986000000000961e-06, 4.332999999998727e-06, 5.874999999998937e-06, 4.429999999999712e-06, 3.3340000000006698e-06, 2.874999999999406e-06, 3.361000000000336e-06, 3.722000000001141e-06, 4.04200000000271e-06, 6.097000000000047e-06, 4.444000000002751e-06, 4.777000000000947e-06, 3.9999999999970615e-06, 2.790999999998517e-06, 3.458000000001321e-06, 4.4999999999975615e-06, 3.971999999997922e-06, 4.9449999999992555e-06, 3.709000000001045e-06, 3.097000000000516e-06, 4.84799999999827e-06, 3.9449999999982555e-06, 5.013000000001627e-06]</msg>
<status status="PASS" starttime="20201110 08:34:12.576" endtime="20201110 08:34:12.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.571" endtime="20201110 08:34:12.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.580" endtime="20201110 08:34:12.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.584" endtime="20201110 08:34:12.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.582" endtime="20201110 08:34:12.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.579" endtime="20201110 08:34:12.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.213" endtime="20201110 08:34:12.605"></status>
</kw>
<msg timestamp="20201110 08:34:12.605" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.613" endtime="20201110 08:34:12.625"></status>
</kw>
<msg timestamp="20201110 08:34:12.626" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.612" endtime="20201110 08:34:12.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.627" endtime="20201110 08:34:12.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.629" endtime="20201110 08:34:12.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.609" endtime="20201110 08:34:12.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.607" endtime="20201110 08:34:12.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.639" endtime="20201110 08:34:12.906"></status>
</kw>
<msg timestamp="20201110 08:34:12.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018464667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.637" endtime="20201110 08:34:12.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018464667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.909" endtime="20201110 08:34:12.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.915" endtime="20201110 08:34:12.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.635" endtime="20201110 08:34:12.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.633" endtime="20201110 08:34:12.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.921" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:12.920" endtime="20201110 08:34:12.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.925" level="INFO">VALUE: [{'time': 0.018464667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.018474764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018478986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018483125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.018488361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018491403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018496361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.018500069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018502875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8059999999975604e-06, 'source_diff': 2.8059999999975604e-06}, {'time': 0.018506764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018512306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018517083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000000947e-06, 'source_diff': 4.777000000000947e-06}, {'time': 0.018521028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.018524903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018528778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018534569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791000000001517e-06, 'source_diff': 5.791000000001517e-06}, {'time': 0.018538625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.018544653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018549125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018554028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018559694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.018562611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018566278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.018572042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018575458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018577958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018582792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.018587639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018591889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018596542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018600111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5689999999984068e-06, 'source_diff': 3.5689999999984068e-06}, {'time': 0.018605236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018608764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018611333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.018616236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018621375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.01862625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018630806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.018634667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018637722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.018640292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}, {'time': 0.018645597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.018650194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018653542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018657125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.018660056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018666028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018671097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.018674083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:12.922" endtime="20201110 08:34:12.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.918" endtime="20201110 08:34:12.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:12.941" level="INFO">${debug-compressed} = {'source_diff': [0, 4.139000000000226e-06, 5.958000000000352e-06, 4.221999999998172e-06, 4.139000000000226e-06, 5.235999999998742e-06, 3.04200000000171e-06, 4.957999999999352e-06, 3.708000000001571e-0...</msg>
<status status="PASS" starttime="20201110 08:34:12.928" endtime="20201110 08:34:12.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.945" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:12.943" endtime="20201110 08:34:12.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.948" level="INFO">VALUE: {'source_diff': [0, 4.139000000000226e-06, 5.958000000000352e-06, 4.221999999998172e-06, 4.139000000000226e-06, 5.235999999998742e-06, 3.04200000000171e-06, 4.957999999999352e-06, 3.708000000001571e-06, 2.8059999999975604e-06, 3.888999999999976e-06, 5.542000000000741e-06, 4.777000000000947e-06, 3.9449999999982555e-06, 3.875000000000406e-06, 3.875000000000406e-06, 5.791000000001517e-06, 4.0559999999988106e-06, 6.028000000001671e-06, 4.471999999998422e-06, 4.903000000000546e-06, 5.666000000001392e-06, 2.9169999999981155e-06, 3.6669999999988656e-06, 5.764000000001851e-06, 3.415999999999142e-06, 2.4999999999990308e-06, 4.83400000000217e-06, 4.846999999998797e-06, 4.250000000000781e-06, 4.653000000000296e-06, 3.5689999999984068e-06, 5.125000000001656e-06, 3.5279999999991707e-06, 2.569000000000876e-06, 4.903000000000546e-06, 5.1389999999977565e-06, 4.875000000001406e-06, 4.555999999999311e-06, 3.861000000000836e-06, 3.054999999998337e-06, 2.5700000000003498e-06, 5.305000000000587e-06, 4.596999999998547e-06, 3.3480000000002397e-06, 3.583000000001446e-06, 2.931000000001155e-06, 5.971999999999922e-06, 5.068999999999907e-06, 2.985999999999961e-06], 'diff': [0, 4.139000000000226e-06, 5.958000000000352e-06, 4.221999999998172e-06, 4.139000000000226e-06, 5.235999999998742e-06, 3.04200000000171e-06, 4.957999999999352e-06, 3.708000000001571e-06, 2.8059999999975604e-06, 3.888999999999976e-06, 5.542000000000741e-06, 4.777000000000947e-06, 3.9449999999982555e-06, 3.875000000000406e-06, 3.875000000000406e-06, 5.791000000001517e-06, 4.0559999999988106e-06, 6.028000000001671e-06, 4.471999999998422e-06, 4.903000000000546e-06, 5.666000000001392e-06, 2.9169999999981155e-06, 3.6669999999988656e-06, 5.764000000001851e-06, 3.415999999999142e-06, 2.4999999999990308e-06, 4.83400000000217e-06, 4.846999999998797e-06, 4.250000000000781e-06, 4.653000000000296e-06, 3.5689999999984068e-06, 5.125000000001656e-06, 3.5279999999991707e-06, 2.569000000000876e-06, 4.903000000000546e-06, 5.1389999999977565e-06, 4.875000000001406e-06, 4.555999999999311e-06, 3.861000000000836e-06, 3.054999999998337e-06, 2.5700000000003498e-06, 5.305000000000587e-06, 4.596999999998547e-06, 3.3480000000002397e-06, 3.583000000001446e-06, 2.931000000001155e-06, 5.971999999999922e-06, 5.068999999999907e-06, 2.985999999999961e-06], 'time': [0.018464667, 0.018468806, 0.018474764, 0.018478986, 0.018483125, 0.018488361, 0.018491403, 0.018496361, 0.018500069, 0.018502875, 0.018506764, 0.018512306, 0.018517083, 0.018521028, 0.018524903, 0.018528778, 0.018534569, 0.018538625, 0.018544653, 0.018549125, 0.018554028, 0.018559694, 0.018562611, 0.018566278, 0.018572042, 0.018575458, 0.018577958, 0.018582792, 0.018587639, 0.018591889, 0.018596542, 0.018600111, 0.018605236, 0.018608764, 0.018611333, 0.018616236, 0.018621375, 0.01862625, 0.018630806, 0.018634667, 0.018637722, 0.018640292, 0.018645597, 0.018650194, 0.018653542, 0.018657125, 0.018660056, 0.018666028, 0.018671097, 0.018674083], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:12.946" endtime="20201110 08:34:12.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.941" endtime="20201110 08:34:12.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.956" level="INFO">${RESULT} = [{'time': 0.018468806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.018478986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:12.950" endtime="20201110 08:34:12.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:12.964" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.139000000000226e-06, 4.221999999998172e-06, 5.235999999998742e-06, 4.957999999999352e-06, 2.8059999999975604e-06, 5.542000000000741e-06, 3.9449999999982555e-06, 3.875000000000406e-0...</msg>
<status status="PASS" starttime="20201110 08:34:12.957" endtime="20201110 08:34:12.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.970" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:12.968" endtime="20201110 08:34:12.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.973" level="INFO">VALUE: [4.139000000000226e-06, 4.221999999998172e-06, 5.235999999998742e-06, 4.957999999999352e-06, 2.8059999999975604e-06, 5.542000000000741e-06, 3.9449999999982555e-06, 3.875000000000406e-06, 4.0559999999988106e-06, 4.471999999998422e-06, 5.666000000001392e-06, 3.6669999999988656e-06, 3.415999999999142e-06, 4.83400000000217e-06, 4.250000000000781e-06, 3.5689999999984068e-06, 3.5279999999991707e-06, 4.903000000000546e-06, 4.875000000001406e-06, 3.861000000000836e-06, 2.5700000000003498e-06, 4.596999999998547e-06, 3.583000000001446e-06, 5.971999999999922e-06, 2.985999999999961e-06]</msg>
<status status="PASS" starttime="20201110 08:34:12.971" endtime="20201110 08:34:12.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.966" endtime="20201110 08:34:12.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.977" endtime="20201110 08:34:12.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.982" endtime="20201110 08:34:13.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.980" endtime="20201110 08:34:13.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.975" endtime="20201110 08:34:13.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.606" endtime="20201110 08:34:13.003"></status>
</kw>
<msg timestamp="20201110 08:34:13.003" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.011" endtime="20201110 08:34:13.022"></status>
</kw>
<msg timestamp="20201110 08:34:13.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.009" endtime="20201110 08:34:13.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.025" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.024" endtime="20201110 08:34:13.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.026" endtime="20201110 08:34:13.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.007" endtime="20201110 08:34:13.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.005" endtime="20201110 08:34:13.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.036" endtime="20201110 08:34:13.305"></status>
</kw>
<msg timestamp="20201110 08:34:13.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017717694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.035" endtime="20201110 08:34:13.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017717694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.308" endtime="20201110 08:34:13.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.313" endtime="20201110 08:34:13.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.031" endtime="20201110 08:34:13.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.029" endtime="20201110 08:34:13.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.320" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:13.319" endtime="20201110 08:34:13.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.323" level="INFO">VALUE: [{'time': 0.017717694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017721444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017725875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.017731403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017735486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.017741306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.017745569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.263000000000877e-06, 'source_diff': 4.263000000000877e-06}, {'time': 0.017749847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017752889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.017756986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017761736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.017764958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017769194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.017773556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.017776833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.0177815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017784125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.017788361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.017793792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.017799097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.017804111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017808361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.017813958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017818153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.017821486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.017825194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.017828431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2369999999996846e-06, 'source_diff': 3.2369999999996846e-06}, {'time': 0.0178335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017837306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.80600000000203e-06, 'source_diff': 3.80600000000203e-06}, {'time': 0.017840361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.017842806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.017847958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.017852236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017857778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017862861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017867111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.017869681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5699999999968803e-06, 'source_diff': 2.5699999999968803e-06}, {'time': 0.017873611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.930000000002681e-06, 'source_diff': 3.930000000002681e-06}, {'time': 0.01787975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.017883139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017885667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017888069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.017892014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.017897069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017901556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486999999997465e-06, 'source_diff': 4.486999999997465e-06}, {'time': 0.017904, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017906569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.017912069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.017914986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.017920292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:13.321" endtime="20201110 08:34:13.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.316" endtime="20201110 08:34:13.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:13.339" level="INFO">${debug-compressed} = {'source_diff': [0, 3.750000000000281e-06, 4.430999999999186e-06, 5.528000000001171e-06, 4.083000000001946e-06, 5.819999999996661e-06, 4.263000000000877e-06, 4.277999999999921e-06, 3.04200000000171e-0...</msg>
<status status="PASS" starttime="20201110 08:34:13.326" endtime="20201110 08:34:13.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.343" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:13.342" endtime="20201110 08:34:13.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.347" level="INFO">VALUE: {'source_diff': [0, 3.750000000000281e-06, 4.430999999999186e-06, 5.528000000001171e-06, 4.083000000001946e-06, 5.819999999996661e-06, 4.263000000000877e-06, 4.277999999999921e-06, 3.04200000000171e-06, 4.096999999998047e-06, 4.750000000001281e-06, 3.222000000000641e-06, 4.2359999999977416e-06, 4.36200000000081e-06, 3.276999999999447e-06, 4.666999999999866e-06, 2.6250000000026252e-06, 4.2359999999977416e-06, 5.431000000000186e-06, 5.305000000000587e-06, 5.014000000001101e-06, 4.250000000000781e-06, 5.596999999999547e-06, 4.1949999999985055e-06, 3.333000000001196e-06, 3.7079999999981017e-06, 3.2369999999996846e-06, 5.068999999999907e-06, 3.80600000000203e-06, 3.054999999998337e-06, 2.4450000000002248e-06, 5.152000000001322e-06, 4.277999999999921e-06, 5.542000000000741e-06, 5.082999999999477e-06, 4.250000000000781e-06, 2.5699999999968803e-06, 3.930000000002681e-06, 6.1389999999987566e-06, 3.3889999999994758e-06, 2.52800000000164e-06, 2.401999999998572e-06, 3.945000000001725e-06, 5.055000000000337e-06, 4.486999999997465e-06, 2.444000000000751e-06, 2.569000000000876e-06, 5.499999999998562e-06, 2.917000000001585e-06, 5.306000000000061e-06], 'diff': [0, 3.750000000000281e-06, 4.430999999999186e-06, 5.528000000001171e-06, 4.083000000001946e-06, 5.819999999996661e-06, 4.263000000000877e-06, 4.277999999999921e-06, 3.04200000000171e-06, 4.096999999998047e-06, 4.750000000001281e-06, 3.222000000000641e-06, 4.2359999999977416e-06, 4.36200000000081e-06, 3.276999999999447e-06, 4.666999999999866e-06, 2.6250000000026252e-06, 4.2359999999977416e-06, 5.431000000000186e-06, 5.305000000000587e-06, 5.014000000001101e-06, 4.250000000000781e-06, 5.596999999999547e-06, 4.1949999999985055e-06, 3.333000000001196e-06, 3.7079999999981017e-06, 3.2369999999996846e-06, 5.068999999999907e-06, 3.80600000000203e-06, 3.054999999998337e-06, 2.4450000000002248e-06, 5.152000000001322e-06, 4.277999999999921e-06, 5.542000000000741e-06, 5.082999999999477e-06, 4.250000000000781e-06, 2.5699999999968803e-06, 3.930000000002681e-06, 6.1389999999987566e-06, 3.3889999999994758e-06, 2.52800000000164e-06, 2.401999999998572e-06, 3.945000000001725e-06, 5.055000000000337e-06, 4.486999999997465e-06, 2.444000000000751e-06, 2.569000000000876e-06, 5.499999999998562e-06, 2.917000000001585e-06, 5.306000000000061e-06], 'time': [0.017717694, 0.017721444, 0.017725875, 0.017731403, 0.017735486, 0.017741306, 0.017745569, 0.017749847, 0.017752889, 0.017756986, 0.017761736, 0.017764958, 0.017769194, 0.017773556, 0.017776833, 0.0177815, 0.017784125, 0.017788361, 0.017793792, 0.017799097, 0.017804111, 0.017808361, 0.017813958, 0.017818153, 0.017821486, 0.017825194, 0.017828431, 0.0178335, 0.017837306, 0.017840361, 0.017842806, 0.017847958, 0.017852236, 0.017857778, 0.017862861, 0.017867111, 0.017869681, 0.017873611, 0.01787975, 0.017883139, 0.017885667, 0.017888069, 0.017892014, 0.017897069, 0.017901556, 0.017904, 0.017906569, 0.017912069, 0.017914986, 0.017920292], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:13.345" endtime="20201110 08:34:13.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.340" endtime="20201110 08:34:13.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.351" level="INFO">${RESULT} = [{'time': 0.017721444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017731403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:13.349" endtime="20201110 08:34:13.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:13.359" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.750000000000281e-06, 5.528000000001171e-06, 5.819999999996661e-06, 4.277999999999921e-06, 4.096999999998047e-06, 3.222000000000641e-06, 4.36200000000081e-06, 4.666999999999866e-06, ...</msg>
<status status="PASS" starttime="20201110 08:34:13.352" endtime="20201110 08:34:13.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.363" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:13.362" endtime="20201110 08:34:13.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.366" level="INFO">VALUE: [3.750000000000281e-06, 5.528000000001171e-06, 5.819999999996661e-06, 4.277999999999921e-06, 4.096999999998047e-06, 3.222000000000641e-06, 4.36200000000081e-06, 4.666999999999866e-06, 4.2359999999977416e-06, 5.305000000000587e-06, 4.250000000000781e-06, 4.1949999999985055e-06, 3.7079999999981017e-06, 5.068999999999907e-06, 3.054999999998337e-06, 5.152000000001322e-06, 5.542000000000741e-06, 4.250000000000781e-06, 3.930000000002681e-06, 3.3889999999994758e-06, 2.401999999998572e-06, 5.055000000000337e-06, 2.444000000000751e-06, 5.499999999998562e-06, 5.306000000000061e-06]</msg>
<status status="PASS" starttime="20201110 08:34:13.364" endtime="20201110 08:34:13.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.360" endtime="20201110 08:34:13.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.369" endtime="20201110 08:34:13.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.373" endtime="20201110 08:34:13.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.371" endtime="20201110 08:34:13.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.367" endtime="20201110 08:34:13.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.004" endtime="20201110 08:34:13.393"></status>
</kw>
<msg timestamp="20201110 08:34:13.394" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.401" endtime="20201110 08:34:13.412"></status>
</kw>
<msg timestamp="20201110 08:34:13.413" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.400" endtime="20201110 08:34:13.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.415" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.414" endtime="20201110 08:34:13.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.416" endtime="20201110 08:34:13.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.397" endtime="20201110 08:34:13.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.395" endtime="20201110 08:34:13.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.426" endtime="20201110 08:34:13.703"></status>
</kw>
<msg timestamp="20201110 08:34:13.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018166542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.424" endtime="20201110 08:34:13.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018166542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.706" endtime="20201110 08:34:13.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.711" endtime="20201110 08:34:13.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.421" endtime="20201110 08:34:13.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.420" endtime="20201110 08:34:13.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.718" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:13.717" endtime="20201110 08:34:13.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.721" level="INFO">VALUE: [{'time': 0.018166542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018177597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018183722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.018188139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018192319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018198458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.018202875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018206167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.018208681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.018212861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018217153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018220208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.018225042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.018230528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018233278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018238125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018241986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018247722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.018253819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018259944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.018266028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018271514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018275583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.018279653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0699999999983805e-06, 'source_diff': 4.0699999999983805e-06}, {'time': 0.01828525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018290569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018295569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.018301194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018305542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.01830925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.018312778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018317708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.018321958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018326361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018328694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.018331208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.018333875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.018336889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.018342722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018346431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.018348889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.0183545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018359042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018361486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.018363875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.018369667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.018375194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527000000001697e-06, 'source_diff': 5.527000000001697e-06}, {'time': 0.018379431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.018383264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:13.719" endtime="20201110 08:34:13.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.714" endtime="20201110 08:34:13.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:13.736" level="INFO">${debug-compressed} = {'source_diff': [0, 6.083000000000477e-06, 4.971999999998922e-06, 6.124999999999187e-06, 4.416999999999616e-06, 4.179999999999462e-06, 6.139000000002226e-06, 4.416999999999616e-06, 3.2919999999984906e...</msg>
<status status="PASS" starttime="20201110 08:34:13.724" endtime="20201110 08:34:13.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.740" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:13.739" endtime="20201110 08:34:13.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.743" level="INFO">VALUE: {'source_diff': [0, 6.083000000000477e-06, 4.971999999998922e-06, 6.124999999999187e-06, 4.416999999999616e-06, 4.179999999999462e-06, 6.139000000002226e-06, 4.416999999999616e-06, 3.2919999999984906e-06, 2.51400000000207e-06, 4.179999999999462e-06, 4.291999999999491e-06, 3.0550000000018063e-06, 4.8339999999987004e-06, 5.485999999998992e-06, 2.749999999999281e-06, 4.847000000002266e-06, 3.861000000000836e-06, 5.735999999999242e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 5.485999999998992e-06, 4.069000000002376e-06, 4.0699999999983805e-06, 5.596999999999547e-06, 5.319000000000157e-06, 5.000000000001531e-06, 5.624999999998687e-06, 4.34800000000124e-06, 3.7079999999981017e-06, 3.5279999999991707e-06, 4.930000000000212e-06, 4.250000000000781e-06, 4.403000000000046e-06, 2.333000000000196e-06, 2.51400000000207e-06, 2.6669999999978655e-06, 3.0139999999991007e-06, 5.833000000000227e-06, 3.709000000001045e-06, 2.458000000000321e-06, 5.610999999999117e-06, 4.541999999999741e-06, 2.444000000000751e-06, 2.389000000001945e-06, 5.791999999997521e-06, 5.527000000001697e-06, 4.237000000000685e-06, 3.832999999998227e-06], 'diff': [0, 6.083000000000477e-06, 4.971999999998922e-06, 6.124999999999187e-06, 4.416999999999616e-06, 4.179999999999462e-06, 6.139000000002226e-06, 4.416999999999616e-06, 3.2919999999984906e-06, 2.51400000000207e-06, 4.179999999999462e-06, 4.291999999999491e-06, 3.0550000000018063e-06, 4.8339999999987004e-06, 5.485999999998992e-06, 2.749999999999281e-06, 4.847000000002266e-06, 3.861000000000836e-06, 5.735999999999242e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 5.485999999998992e-06, 4.069000000002376e-06, 4.0699999999983805e-06, 5.596999999999547e-06, 5.319000000000157e-06, 5.000000000001531e-06, 5.624999999998687e-06, 4.34800000000124e-06, 3.7079999999981017e-06, 3.5279999999991707e-06, 4.930000000000212e-06, 4.250000000000781e-06, 4.403000000000046e-06, 2.333000000000196e-06, 2.51400000000207e-06, 2.6669999999978655e-06, 3.0139999999991007e-06, 5.833000000000227e-06, 3.709000000001045e-06, 2.458000000000321e-06, 5.610999999999117e-06, 4.541999999999741e-06, 2.444000000000751e-06, 2.389000000001945e-06, 5.791999999997521e-06, 5.527000000001697e-06, 4.237000000000685e-06, 3.832999999998227e-06], 'time': [0.018166542, 0.018172625, 0.018177597, 0.018183722, 0.018188139, 0.018192319, 0.018198458, 0.018202875, 0.018206167, 0.018208681, 0.018212861, 0.018217153, 0.018220208, 0.018225042, 0.018230528, 0.018233278, 0.018238125, 0.018241986, 0.018247722, 0.018253819, 0.018259944, 0.018266028, 0.018271514, 0.018275583, 0.018279653, 0.01828525, 0.018290569, 0.018295569, 0.018301194, 0.018305542, 0.01830925, 0.018312778, 0.018317708, 0.018321958, 0.018326361, 0.018328694, 0.018331208, 0.018333875, 0.018336889, 0.018342722, 0.018346431, 0.018348889, 0.0183545, 0.018359042, 0.018361486, 0.018363875, 0.018369667, 0.018375194, 0.018379431, 0.018383264], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:13.741" endtime="20201110 08:34:13.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.737" endtime="20201110 08:34:13.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.748" level="INFO">${RESULT} = [{'time': 0.018172625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018183722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:13.745" endtime="20201110 08:34:13.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:13.756" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [6.083000000000477e-06, 6.124999999999187e-06, 4.179999999999462e-06, 4.416999999999616e-06, 2.51400000000207e-06, 4.291999999999491e-06, 4.8339999999987004e-06, 2.749999999999281e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:13.749" endtime="20201110 08:34:13.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.760" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:13.759" endtime="20201110 08:34:13.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.762" level="INFO">VALUE: [6.083000000000477e-06, 6.124999999999187e-06, 4.179999999999462e-06, 4.416999999999616e-06, 2.51400000000207e-06, 4.291999999999491e-06, 4.8339999999987004e-06, 2.749999999999281e-06, 3.861000000000836e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 4.069000000002376e-06, 5.596999999999547e-06, 5.000000000001531e-06, 4.34800000000124e-06, 3.5279999999991707e-06, 4.250000000000781e-06, 2.333000000000196e-06, 2.6669999999978655e-06, 5.833000000000227e-06, 2.458000000000321e-06, 4.541999999999741e-06, 2.389000000001945e-06, 5.527000000001697e-06, 3.832999999998227e-06]</msg>
<status status="PASS" starttime="20201110 08:34:13.761" endtime="20201110 08:34:13.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.756" endtime="20201110 08:34:13.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.765" endtime="20201110 08:34:13.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.769" endtime="20201110 08:34:13.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.767" endtime="20201110 08:34:13.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.764" endtime="20201110 08:34:13.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.394" endtime="20201110 08:34:13.790"></status>
</kw>
<msg timestamp="20201110 08:34:13.790" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.799" endtime="20201110 08:34:13.810"></status>
</kw>
<msg timestamp="20201110 08:34:13.811" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.797" endtime="20201110 08:34:13.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.812" endtime="20201110 08:34:13.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.814" endtime="20201110 08:34:13.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.793" endtime="20201110 08:34:13.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.792" endtime="20201110 08:34:13.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.823" endtime="20201110 08:34:14.091"></status>
</kw>
<msg timestamp="20201110 08:34:14.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018956736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018961514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.822" endtime="20201110 08:34:14.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018956736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018961514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.093" endtime="20201110 08:34:14.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.099" endtime="20201110 08:34:14.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.819" endtime="20201110 08:34:14.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.817" endtime="20201110 08:34:14.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.105" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:34:14.104" endtime="20201110 08:34:14.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.109" level="INFO">VALUE: [{'time': 0.018956736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018961514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018967222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018972222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.018976458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018979806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3479999999967702e-06, 'source_diff': 3.3479999999967702e-06}, {'time': 0.018985653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.018991708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.018994847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018997361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.019000417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0559999999978105e-06, 'source_diff': 3.0559999999978105e-06}, {'time': 0.019006292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.019009722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.019015153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.019019139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.019022431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.019025486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.019027931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.019031819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.887999999997033e-06, 'source_diff': 3.887999999997033e-06}, {'time': 0.019036, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.181000000002405e-06, 'source_diff': 4.181000000002405e-06}, {'time': 0.019039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.019045694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.019048042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.348000000002709e-06, 'source_diff': 2.348000000002709e-06}, {'time': 0.019052819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.019055264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.019061, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.019063681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.019068833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.019072056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.019074611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.019080458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019083153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.019087347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.019092181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.019094931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.019097583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6520000000022914e-06, 'source_diff': 2.6520000000022914e-06}, {'time': 0.019103042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.019105667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.019110319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.019116125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.019119514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.019123944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.019128056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.019131694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.638000000000252e-06, 'source_diff': 3.638000000000252e-06}, {'time': 0.019135403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7089999999975753e-06, 'source_diff': 3.7089999999975753e-06}, {'time': 0.019139528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019143333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.019148653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3200000000031e-06, 'source_diff': 5.3200000000031e-06}, {'time': 0.019152472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.019155917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.445000000001225e-06, 'source_diff': 3.445000000001225e-06}]</msg>
<status status="PASS" starttime="20201110 08:34:14.106" endtime="20201110 08:34:14.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.102" endtime="20201110 08:34:14.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:34:14.124" level="INFO">${debug-compressed} = {'source_diff': [0, 4.778000000000421e-06, 5.708000000000102e-06, 5.000000000001531e-06, 4.236000000001211e-06, 3.3479999999967702e-06, 5.847000000003266e-06, 6.054999999997868e-06, 3.1389999999992257...</msg>
<status status="PASS" starttime="20201110 08:34:14.111" endtime="20201110 08:34:14.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.128" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:34:14.127" endtime="20201110 08:34:14.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.131" level="INFO">VALUE: {'source_diff': [0, 4.778000000000421e-06, 5.708000000000102e-06, 5.000000000001531e-06, 4.236000000001211e-06, 3.3479999999967702e-06, 5.847000000003266e-06, 6.054999999997868e-06, 3.1389999999992257e-06, 2.51400000000207e-06, 3.0559999999978105e-06, 5.875000000002406e-06, 3.429999999998712e-06, 5.431000000000186e-06, 3.986000000000961e-06, 3.2919999999984906e-06, 3.0550000000018063e-06, 2.4450000000002248e-06, 3.887999999997033e-06, 4.181000000002405e-06, 3.5829999999979767e-06, 6.110999999999617e-06, 2.348000000002709e-06, 4.776999999997478e-06, 2.4450000000002248e-06, 5.736000000002711e-06, 2.6809999999974354e-06, 5.152000000001322e-06, 3.2230000000001147e-06, 2.5550000000013062e-06, 5.846999999999797e-06, 2.6949999999970053e-06, 4.194000000002501e-06, 4.8339999999987004e-06, 2.749999999999281e-06, 2.6520000000022914e-06, 5.4589999999993255e-06, 2.6249999999991558e-06, 4.652000000000822e-06, 5.806000000000561e-06, 3.3889999999994758e-06, 4.429999999999712e-06, 4.11200000000056e-06, 3.638000000000252e-06, 3.7089999999975753e-06, 4.125000000000656e-06, 3.804999999999087e-06, 5.3200000000031e-06, 3.818999999998657e-06, 3.445000000001225e-06], 'diff': [0, 4.778000000000421e-06, 5.708000000000102e-06, 5.000000000001531e-06, 4.236000000001211e-06, 3.3479999999967702e-06, 5.847000000003266e-06, 6.054999999997868e-06, 3.1389999999992257e-06, 2.51400000000207e-06, 3.0559999999978105e-06, 5.875000000002406e-06, 3.429999999998712e-06, 5.431000000000186e-06, 3.986000000000961e-06, 3.2919999999984906e-06, 3.0550000000018063e-06, 2.4450000000002248e-06, 3.887999999997033e-06, 4.181000000002405e-06, 3.5829999999979767e-06, 6.110999999999617e-06, 2.348000000002709e-06, 4.776999999997478e-06, 2.4450000000002248e-06, 5.736000000002711e-06, 2.6809999999974354e-06, 5.152000000001322e-06, 3.2230000000001147e-06, 2.5550000000013062e-06, 5.846999999999797e-06, 2.6949999999970053e-06, 4.194000000002501e-06, 4.8339999999987004e-06, 2.749999999999281e-06, 2.6520000000022914e-06, 5.4589999999993255e-06, 2.6249999999991558e-06, 4.652000000000822e-06, 5.806000000000561e-06, 3.3889999999994758e-06, 4.429999999999712e-06, 4.11200000000056e-06, 3.638000000000252e-06, 3.7089999999975753e-06, 4.125000000000656e-06, 3.804999999999087e-06, 5.3200000000031e-06, 3.818999999998657e-06, 3.445000000001225e-06], 'time': [0.018956736, 0.018961514, 0.018967222, 0.018972222, 0.018976458, 0.018979806, 0.018985653, 0.018991708, 0.018994847, 0.018997361, 0.019000417, 0.019006292, 0.019009722, 0.019015153, 0.019019139, 0.019022431, 0.019025486, 0.019027931, 0.019031819, 0.019036, 0.019039583, 0.019045694, 0.019048042, 0.019052819, 0.019055264, 0.019061, 0.019063681, 0.019068833, 0.019072056, 0.019074611, 0.019080458, 0.019083153, 0.019087347, 0.019092181, 0.019094931, 0.019097583, 0.019103042, 0.019105667, 0.019110319, 0.019116125, 0.019119514, 0.019123944, 0.019128056, 0.019131694, 0.019135403, 0.019139528, 0.019143333, 0.019148653, 0.019152472, 0.019155917], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:34:14.129" endtime="20201110 08:34:14.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.125" endtime="20201110 08:34:14.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.135" level="INFO">${RESULT} = [{'time': 0.018961514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018972222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:14.133" endtime="20201110 08:34:14.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:14.143" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.778000000000421e-06, 5.000000000001531e-06, 3.3479999999967702e-06, 6.054999999997868e-06, 2.51400000000207e-06, 5.875000000002406e-06, 5.431000000000186e-06, 3.2919999999984906e-06...</msg>
<status status="PASS" starttime="20201110 08:34:14.136" endtime="20201110 08:34:14.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.147" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:34:14.146" endtime="20201110 08:34:14.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.150" level="INFO">VALUE: [4.778000000000421e-06, 5.000000000001531e-06, 3.3479999999967702e-06, 6.054999999997868e-06, 2.51400000000207e-06, 5.875000000002406e-06, 5.431000000000186e-06, 3.2919999999984906e-06, 2.4450000000002248e-06, 4.181000000002405e-06, 6.110999999999617e-06, 4.776999999997478e-06, 5.736000000002711e-06, 5.152000000001322e-06, 2.5550000000013062e-06, 2.6949999999970053e-06, 4.8339999999987004e-06, 2.6520000000022914e-06, 2.6249999999991558e-06, 5.806000000000561e-06, 4.429999999999712e-06, 3.638000000000252e-06, 4.125000000000656e-06, 5.3200000000031e-06, 3.445000000001225e-06]</msg>
<status status="PASS" starttime="20201110 08:34:14.149" endtime="20201110 08:34:14.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.144" endtime="20201110 08:34:14.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.153" endtime="20201110 08:34:14.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.157" endtime="20201110 08:34:14.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.155" endtime="20201110 08:34:14.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.151" endtime="20201110 08:34:14.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.790" endtime="20201110 08:34:14.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.239" endtime="20201110 08:34:14.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.182" endtime="20201110 08:34:14.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.180" endtime="20201110 08:34:14.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.179" endtime="20201110 08:34:14.202"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:03.136" endtime="20201110 08:34:14.203" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.210" endtime="20201110 08:34:14.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.208" endtime="20201110 08:34:14.230"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.243" endtime="20201110 08:34:17.261"></status>
</kw>
<msg timestamp="20201110 08:34:17.262" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.241" endtime="20201110 08:34:17.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.263" endtime="20201110 08:34:17.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.268" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:17.266" endtime="20201110 08:34:17.268"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:14.239" endtime="20201110 08:34:17.269"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:14.237" endtime="20201110 08:34:17.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.235" endtime="20201110 08:34:17.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:17.274" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:17.273" endtime="20201110 08:34:17.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.271" endtime="20201110 08:34:17.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.235" endtime="20201110 08:34:17.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.234" endtime="20201110 08:34:17.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.276" endtime="20201110 08:34:17.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.233" endtime="20201110 08:34:17.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.231" endtime="20201110 08:34:17.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.207" endtime="20201110 08:34:17.279"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:34:17.280" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.289" endtime="20201110 08:34:17.301"></status>
</kw>
<msg timestamp="20201110 08:34:17.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.286" endtime="20201110 08:34:17.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.303" endtime="20201110 08:34:17.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.305" endtime="20201110 08:34:17.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.284" endtime="20201110 08:34:17.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.282" endtime="20201110 08:34:17.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.314" endtime="20201110 08:34:17.608"></status>
</kw>
<msg timestamp="20201110 08:34:17.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.069072306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.069073875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.312" endtime="20201110 08:34:17.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.069072306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.069073875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.613" endtime="20201110 08:34:17.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.622" endtime="20201110 08:34:17.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.310" endtime="20201110 08:34:17.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.308" endtime="20201110 08:34:17.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.629" level="INFO">${RESULT} = [{'time': 3.069073875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5690000001455928e-06, 'source_diff': 1.5690000001455928e-06}, {'time': 3.069077861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:17.625" endtime="20201110 08:34:17.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:17.644" level="INFO">${OVERHEAD} = {'source_diff': [1.5690000001455928e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5550000003194953e-06, 1.569999999784244e-06, 1.5689999997015036e-06, 1.584000000054430...</msg>
<status status="PASS" starttime="20201110 08:34:17.630" endtime="20201110 08:34:17.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.648" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:17.647" endtime="20201110 08:34:17.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.652" level="INFO">VALUE: [1.5690000001455928e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5550000003194953e-06, 1.569999999784244e-06, 1.5689999997015036e-06, 1.5840000000544308e-06, 1.5700000002283332e-06, 1.5840000000544308e-06, 1.5829999999716904e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5829999999716904e-06, 1.5840000000544308e-06, 1.5829999999716904e-06, 1.569999999784244e-06, 1.5700000002283332e-06, 1.5829999999716904e-06, 1.5829999999716904e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5700000002283332e-06, 1.5829999999716904e-06, 1.596999999797788e-06, 1.5560000004022356e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5970000002418772e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.5840000000544308e-06, 1.5980000003246175e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.4860000003835694e-06]</msg>
<status status="PASS" starttime="20201110 08:34:17.650" endtime="20201110 08:34:17.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.645" endtime="20201110 08:34:17.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.656" endtime="20201110 08:34:17.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.659" endtime="20201110 08:34:17.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.658" endtime="20201110 08:34:17.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.654" endtime="20201110 08:34:17.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.281" endtime="20201110 08:34:17.680"></status>
</kw>
<msg timestamp="20201110 08:34:17.680" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.688" endtime="20201110 08:34:17.701"></status>
</kw>
<msg timestamp="20201110 08:34:17.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.687" endtime="20201110 08:34:17.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.703" endtime="20201110 08:34:17.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.705" endtime="20201110 08:34:17.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.684" endtime="20201110 08:34:17.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.683" endtime="20201110 08:34:17.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.715" endtime="20201110 08:34:18.011"></status>
</kw>
<msg timestamp="20201110 08:34:18.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019046736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019048319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.713" endtime="20201110 08:34:18.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019046736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019048319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.015" endtime="20201110 08:34:18.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.023" endtime="20201110 08:34:18.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.710" endtime="20201110 08:34:18.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.708" endtime="20201110 08:34:18.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.030" level="INFO">${RESULT} = [{'time': 0.019048319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019054958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.026" endtime="20201110 08:34:18.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:18.043" level="INFO">${OVERHEAD} = {'source_diff': [1.582999999999446e-06, 1.6250000000016251e-06, 1.5699999999993497e-06, 1.5830000000029154e-06, 1.584000000002389e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5699999999993497e...</msg>
<status status="PASS" starttime="20201110 08:34:18.031" endtime="20201110 08:34:18.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.047" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:18.046" endtime="20201110 08:34:18.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.050" level="INFO">VALUE: [1.582999999999446e-06, 1.6250000000016251e-06, 1.5699999999993497e-06, 1.5830000000029154e-06, 1.584000000002389e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.584000000002389e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.5970000000024853e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5970000000024853e-06, 1.5969999999990159e-06, 1.5830000000029154e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5549999999968367e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.584000000002389e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5970000000024853e-06, 1.582999999999446e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201110 08:34:18.048" endtime="20201110 08:34:18.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.044" endtime="20201110 08:34:18.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.053" endtime="20201110 08:34:18.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.057" endtime="20201110 08:34:18.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.055" endtime="20201110 08:34:18.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.051" endtime="20201110 08:34:18.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.681" endtime="20201110 08:34:18.078"></status>
</kw>
<msg timestamp="20201110 08:34:18.078" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.086" endtime="20201110 08:34:18.098"></status>
</kw>
<msg timestamp="20201110 08:34:18.098" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.084" endtime="20201110 08:34:18.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.101" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.099" endtime="20201110 08:34:18.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.102" endtime="20201110 08:34:18.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.082" endtime="20201110 08:34:18.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.080" endtime="20201110 08:34:18.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.112" endtime="20201110 08:34:18.398"></status>
</kw>
<msg timestamp="20201110 08:34:18.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018457472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018459056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.109" endtime="20201110 08:34:18.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018457472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018459056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.402" endtime="20201110 08:34:18.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.412" endtime="20201110 08:34:18.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.107" endtime="20201110 08:34:18.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.105" endtime="20201110 08:34:18.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.420" level="INFO">${RESULT} = [{'time': 0.018459056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018466431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.416" endtime="20201110 08:34:18.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:18.436" level="INFO">${OVERHEAD} = {'source_diff': [1.584000000002389e-06, 1.5559999999997798e-06, 1.4860000000019302e-06, 1.5550000000003061e-06, 1.584000000002389e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.569999999999349...</msg>
<status status="PASS" starttime="20201110 08:34:18.421" endtime="20201110 08:34:18.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.440" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:18.439" endtime="20201110 08:34:18.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.443" level="INFO">VALUE: [1.584000000002389e-06, 1.5559999999997798e-06, 1.4860000000019302e-06, 1.5550000000003061e-06, 1.584000000002389e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5549999999968367e-06, 1.5700000000028191e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.5699999999993497e-06, 1.4859999999984608e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.5699999999993497e-06, 1.5279999999971705e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201110 08:34:18.441" endtime="20201110 08:34:18.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.437" endtime="20201110 08:34:18.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.446" endtime="20201110 08:34:18.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.450" endtime="20201110 08:34:18.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.448" endtime="20201110 08:34:18.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.445" endtime="20201110 08:34:18.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.079" endtime="20201110 08:34:18.470"></status>
</kw>
<msg timestamp="20201110 08:34:18.471" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.478" endtime="20201110 08:34:18.491"></status>
</kw>
<msg timestamp="20201110 08:34:18.491" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.477" endtime="20201110 08:34:18.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.494" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.492" endtime="20201110 08:34:18.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.495" endtime="20201110 08:34:18.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.474" endtime="20201110 08:34:18.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.473" endtime="20201110 08:34:18.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.504" endtime="20201110 08:34:18.794"></status>
</kw>
<msg timestamp="20201110 08:34:18.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018620028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018621611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.502" endtime="20201110 08:34:18.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018620028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018621611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.798" endtime="20201110 08:34:18.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.806" endtime="20201110 08:34:18.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.500" endtime="20201110 08:34:18.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.498" endtime="20201110 08:34:18.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.813" level="INFO">${RESULT} = [{'time': 0.018621611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018625403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.810" endtime="20201110 08:34:18.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:18.826" level="INFO">${OVERHEAD} = {'source_diff': [1.582999999999446e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.4999999999980307e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5550000000003061e-...</msg>
<status status="PASS" starttime="20201110 08:34:18.814" endtime="20201110 08:34:18.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.831" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:18.830" endtime="20201110 08:34:18.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.833" level="INFO">VALUE: [1.582999999999446e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.4999999999980307e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5830000000029154e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5830000000029154e-06, 1.5839999999989196e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5969999999990159e-06]</msg>
<status status="PASS" starttime="20201110 08:34:18.832" endtime="20201110 08:34:18.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.827" endtime="20201110 08:34:18.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.837" endtime="20201110 08:34:18.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.840" endtime="20201110 08:34:18.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.838" endtime="20201110 08:34:18.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.835" endtime="20201110 08:34:18.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.471" endtime="20201110 08:34:18.861"></status>
</kw>
<msg timestamp="20201110 08:34:18.861" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.868" endtime="20201110 08:34:18.881"></status>
</kw>
<msg timestamp="20201110 08:34:18.882" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.867" endtime="20201110 08:34:18.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.883" endtime="20201110 08:34:18.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.885" endtime="20201110 08:34:18.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.864" endtime="20201110 08:34:18.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.863" endtime="20201110 08:34:18.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.894" endtime="20201110 08:34:19.183"></status>
</kw>
<msg timestamp="20201110 08:34:19.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018543639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018545236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.892" endtime="20201110 08:34:19.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018543639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018545236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.187" endtime="20201110 08:34:19.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.196" endtime="20201110 08:34:19.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.890" endtime="20201110 08:34:19.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.888" endtime="20201110 08:34:19.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.202" level="INFO">${RESULT} = [{'time': 0.018545236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018550278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.199" endtime="20201110 08:34:19.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:19.215" level="INFO">${OVERHEAD} = {'source_diff': [1.5969999999990159e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.56899999999987...</msg>
<status status="PASS" starttime="20201110 08:34:19.203" endtime="20201110 08:34:19.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.220" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:19.219" endtime="20201110 08:34:19.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.222" level="INFO">VALUE: [1.5969999999990159e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.584000000002389e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5839999999989196e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5979999999984895e-06, 1.5699999999993497e-06, 1.5969999999990159e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5700000000028191e-06, 1.5839999999989196e-06, 1.5830000000029154e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201110 08:34:19.221" endtime="20201110 08:34:19.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.216" endtime="20201110 08:34:19.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.226" endtime="20201110 08:34:19.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.229" endtime="20201110 08:34:19.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.228" endtime="20201110 08:34:19.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.224" endtime="20201110 08:34:19.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.861" endtime="20201110 08:34:19.250"></status>
</kw>
<msg timestamp="20201110 08:34:19.250" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.258" endtime="20201110 08:34:19.270"></status>
</kw>
<msg timestamp="20201110 08:34:19.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.256" endtime="20201110 08:34:19.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.273" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.272" endtime="20201110 08:34:19.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.274" endtime="20201110 08:34:19.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.253" endtime="20201110 08:34:19.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.252" endtime="20201110 08:34:19.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.283" endtime="20201110 08:34:19.574"></status>
</kw>
<msg timestamp="20201110 08:34:19.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017928625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017930208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.282" endtime="20201110 08:34:19.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017928625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017930208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.578" endtime="20201110 08:34:19.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.586" endtime="20201110 08:34:19.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.279" endtime="20201110 08:34:19.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.277" endtime="20201110 08:34:19.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.593" level="INFO">${RESULT} = [{'time': 0.017930208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.017936986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:19.590" endtime="20201110 08:34:19.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:19.606" level="INFO">${OVERHEAD} = {'source_diff': [1.582999999999446e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e...</msg>
<status status="PASS" starttime="20201110 08:34:19.594" endtime="20201110 08:34:19.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.610" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:19.609" endtime="20201110 08:34:19.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.613" level="INFO">VALUE: [1.582999999999446e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5970000000024853e-06, 1.5839999999989196e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5970000000024853e-06, 1.5699999999993497e-06, 1.598000000001959e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5279999999971705e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.5550000000003061e-06, 1.5270000000011663e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.584000000002389e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5560000000032492e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.4999999999980307e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.51400000000107e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201110 08:34:19.611" endtime="20201110 08:34:19.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.607" endtime="20201110 08:34:19.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.616" endtime="20201110 08:34:19.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.620" endtime="20201110 08:34:19.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.618" endtime="20201110 08:34:19.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.615" endtime="20201110 08:34:19.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.251" endtime="20201110 08:34:19.640"></status>
</kw>
<msg timestamp="20201110 08:34:19.641" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.648" endtime="20201110 08:34:19.660"></status>
</kw>
<msg timestamp="20201110 08:34:19.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.647" endtime="20201110 08:34:19.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.663" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.662" endtime="20201110 08:34:19.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.664" endtime="20201110 08:34:19.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.644" endtime="20201110 08:34:19.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.642" endtime="20201110 08:34:19.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.673" endtime="20201110 08:34:19.963"></status>
</kw>
<msg timestamp="20201110 08:34:19.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017875847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017877347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.671" endtime="20201110 08:34:19.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017875847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017877347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.968" endtime="20201110 08:34:19.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.976" endtime="20201110 08:34:19.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.669" endtime="20201110 08:34:19.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.667" endtime="20201110 08:34:19.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.983" level="INFO">${RESULT} = [{'time': 0.017877347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.017881222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.979" endtime="20201110 08:34:19.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:19.997" level="INFO">${OVERHEAD} = {'source_diff': [1.4999999999980307e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5700000000028191e-06, 1.568999999999876e-...</msg>
<status status="PASS" starttime="20201110 08:34:19.984" endtime="20201110 08:34:19.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.001" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:20.000" endtime="20201110 08:34:20.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.004" level="INFO">VALUE: [1.4999999999980307e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5409999999972668e-06, 1.6250000000016251e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5839999999989196e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5549999999968367e-06, 1.5410000000007362e-06, 1.5970000000024853e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5270000000011663e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.5970000000024853e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201110 08:34:20.002" endtime="20201110 08:34:20.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.998" endtime="20201110 08:34:20.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.007" endtime="20201110 08:34:20.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.011" endtime="20201110 08:34:20.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.009" endtime="20201110 08:34:20.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.006" endtime="20201110 08:34:20.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.641" endtime="20201110 08:34:20.031"></status>
</kw>
<msg timestamp="20201110 08:34:20.032" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.039" endtime="20201110 08:34:20.051"></status>
</kw>
<msg timestamp="20201110 08:34:20.052" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.038" endtime="20201110 08:34:20.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.053" endtime="20201110 08:34:20.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.055" endtime="20201110 08:34:20.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.035" endtime="20201110 08:34:20.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.034" endtime="20201110 08:34:20.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.064" endtime="20201110 08:34:20.353"></status>
</kw>
<msg timestamp="20201110 08:34:20.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017943472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017945056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.062" endtime="20201110 08:34:20.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017943472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017945056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.358" endtime="20201110 08:34:20.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.366" endtime="20201110 08:34:20.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.060" endtime="20201110 08:34:20.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.058" endtime="20201110 08:34:20.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.373" level="INFO">${RESULT} = [{'time': 0.017945056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.017949125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.369" endtime="20201110 08:34:20.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:20.386" level="INFO">${OVERHEAD} = {'source_diff': [1.584000000002389e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5969999999990159...</msg>
<status status="PASS" starttime="20201110 08:34:20.374" endtime="20201110 08:34:20.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.390" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:20.389" endtime="20201110 08:34:20.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.392" level="INFO">VALUE: [1.584000000002389e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5690000000033455e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5970000000024853e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5279999999971705e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5839999999989196e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.584000000002389e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5560000000032492e-06]</msg>
<status status="PASS" starttime="20201110 08:34:20.391" endtime="20201110 08:34:20.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.387" endtime="20201110 08:34:20.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.396" endtime="20201110 08:34:20.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.399" endtime="20201110 08:34:20.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.398" endtime="20201110 08:34:20.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.394" endtime="20201110 08:34:20.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.032" endtime="20201110 08:34:20.420"></status>
</kw>
<msg timestamp="20201110 08:34:20.420" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.428" endtime="20201110 08:34:20.440"></status>
</kw>
<msg timestamp="20201110 08:34:20.441" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.426" endtime="20201110 08:34:20.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.445" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.443" endtime="20201110 08:34:20.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.446" endtime="20201110 08:34:20.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.424" endtime="20201110 08:34:20.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.422" endtime="20201110 08:34:20.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.457" endtime="20201110 08:34:20.747"></status>
</kw>
<msg timestamp="20201110 08:34:20.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.455" endtime="20201110 08:34:20.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.751" endtime="20201110 08:34:20.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.760" endtime="20201110 08:34:20.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.452" endtime="20201110 08:34:20.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.450" endtime="20201110 08:34:20.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.766" level="INFO">${RESULT} = [{'time': 0.017797708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.017802528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.763" endtime="20201110 08:34:20.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:20.779" level="INFO">${OVERHEAD} = {'source_diff': [1.582999999999446e-06, 1.584000000002389e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5700000000028191e-06, 1.5410000000007362e...</msg>
<status status="PASS" starttime="20201110 08:34:20.767" endtime="20201110 08:34:20.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.784" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:20.782" endtime="20201110 08:34:20.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.786" level="INFO">VALUE: [1.582999999999446e-06, 1.584000000002389e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5700000000028191e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.5830000000029154e-06, 1.5549999999968367e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5690000000033455e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.584000000002389e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201110 08:34:20.785" endtime="20201110 08:34:20.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.780" endtime="20201110 08:34:20.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.790" endtime="20201110 08:34:20.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.793" endtime="20201110 08:34:20.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.792" endtime="20201110 08:34:20.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.788" endtime="20201110 08:34:20.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.421" endtime="20201110 08:34:20.814"></status>
</kw>
<msg timestamp="20201110 08:34:20.814" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.822" endtime="20201110 08:34:20.834"></status>
</kw>
<msg timestamp="20201110 08:34:20.835" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.820" endtime="20201110 08:34:20.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.836" endtime="20201110 08:34:20.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.838" endtime="20201110 08:34:20.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.818" endtime="20201110 08:34:20.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.816" endtime="20201110 08:34:20.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.847" endtime="20201110 08:34:21.128"></status>
</kw>
<msg timestamp="20201110 08:34:21.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018211764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018213347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.846" endtime="20201110 08:34:21.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018211764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018213347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.132" endtime="20201110 08:34:21.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.140" endtime="20201110 08:34:21.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.843" endtime="20201110 08:34:21.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.841" endtime="20201110 08:34:21.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.147" level="INFO">${RESULT} = [{'time': 0.018213347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018217569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:21.144" endtime="20201110 08:34:21.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:21.160" level="INFO">${OVERHEAD} = {'source_diff': [1.5830000000029154e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e...</msg>
<status status="PASS" starttime="20201110 08:34:21.148" endtime="20201110 08:34:21.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.164" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:21.163" endtime="20201110 08:34:21.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.167" level="INFO">VALUE: [1.5830000000029154e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5549999999968367e-06, 1.5699999999993497e-06, 1.5970000000024853e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.5830000000029154e-06, 1.568999999999876e-06, 1.5690000000033455e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5969999999990159e-06, 1.5839999999989196e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5830000000029154e-06, 1.5830000000029154e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5830000000029154e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.582999999999446e-06]</msg>
<status status="PASS" starttime="20201110 08:34:21.166" endtime="20201110 08:34:21.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.161" endtime="20201110 08:34:21.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.170" endtime="20201110 08:34:21.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.174" endtime="20201110 08:34:21.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.172" endtime="20201110 08:34:21.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.169" endtime="20201110 08:34:21.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.815" endtime="20201110 08:34:21.195"></status>
</kw>
<msg timestamp="20201110 08:34:21.195" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.202" endtime="20201110 08:34:21.215"></status>
</kw>
<msg timestamp="20201110 08:34:21.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.201" endtime="20201110 08:34:21.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.216" endtime="20201110 08:34:21.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.219" endtime="20201110 08:34:21.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.198" endtime="20201110 08:34:21.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.197" endtime="20201110 08:34:21.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.227" endtime="20201110 08:34:21.511"></status>
</kw>
<msg timestamp="20201110 08:34:21.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018080569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018082139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.226" endtime="20201110 08:34:21.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018080569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018082139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.516" endtime="20201110 08:34:21.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.524" endtime="20201110 08:34:21.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.223" endtime="20201110 08:34:21.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.222" endtime="20201110 08:34:21.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.531" level="INFO">${RESULT} = [{'time': 0.018082139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018087194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:21.527" endtime="20201110 08:34:21.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:21.545" level="INFO">${OVERHEAD} = {'source_diff': [1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5700000000028191e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.568999999999876e...</msg>
<status status="PASS" starttime="20201110 08:34:21.531" endtime="20201110 08:34:21.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.549" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:21.548" endtime="20201110 08:34:21.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.552" level="INFO">VALUE: [1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5700000000028191e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.584000000002389e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5549999999968367e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.4859999999984608e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5839999999989196e-06]</msg>
<status status="PASS" starttime="20201110 08:34:21.550" endtime="20201110 08:34:21.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.546" endtime="20201110 08:34:21.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.555" endtime="20201110 08:34:21.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.559" endtime="20201110 08:34:21.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.557" endtime="20201110 08:34:21.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.553" endtime="20201110 08:34:21.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.195" endtime="20201110 08:34:21.579"></status>
</kw>
<msg timestamp="20201110 08:34:21.580" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.588" endtime="20201110 08:34:21.601"></status>
</kw>
<msg timestamp="20201110 08:34:21.601" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.586" endtime="20201110 08:34:21.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.604" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.602" endtime="20201110 08:34:21.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.605" endtime="20201110 08:34:21.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.583" endtime="20201110 08:34:21.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.581" endtime="20201110 08:34:21.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.614" endtime="20201110 08:34:21.895"></status>
</kw>
<msg timestamp="20201110 08:34:21.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019184944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019186514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.612" endtime="20201110 08:34:21.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019184944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019186514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.900" endtime="20201110 08:34:21.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.908" endtime="20201110 08:34:21.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.610" endtime="20201110 08:34:21.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.608" endtime="20201110 08:34:21.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.914" level="INFO">${RESULT} = [{'time': 0.019186514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.019193014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:21.911" endtime="20201110 08:34:21.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:21.928" level="INFO">${OVERHEAD} = {'source_diff': [1.5700000000028191e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.653000000000765e-06, 1.5699999999993497e-06, 1.5560000000032492e-06, 1.568999999999876e-06, 1.570000000002819...</msg>
<status status="PASS" starttime="20201110 08:34:21.915" endtime="20201110 08:34:21.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.932" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:21.931" endtime="20201110 08:34:21.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.934" level="INFO">VALUE: [1.5700000000028191e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.653000000000765e-06, 1.5699999999993497e-06, 1.5560000000032492e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5979999999984895e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.4999999999980307e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5979999999984895e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.6389999999977256e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5270000000011663e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5830000000029154e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.584000000002389e-06, 1.5699999999993497e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201110 08:34:21.933" endtime="20201110 08:34:21.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.928" endtime="20201110 08:34:21.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.938" endtime="20201110 08:34:21.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.941" endtime="20201110 08:34:21.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.940" endtime="20201110 08:34:21.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.936" endtime="20201110 08:34:21.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.580" endtime="20201110 08:34:21.962"></status>
</kw>
<msg timestamp="20201110 08:34:21.962" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.970" endtime="20201110 08:34:21.981"></status>
</kw>
<msg timestamp="20201110 08:34:21.982" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.968" endtime="20201110 08:34:21.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.984" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.983" endtime="20201110 08:34:21.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.985" endtime="20201110 08:34:21.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.966" endtime="20201110 08:34:21.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.964" endtime="20201110 08:34:21.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.994" endtime="20201110 08:34:22.285"></status>
</kw>
<msg timestamp="20201110 08:34:22.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017855875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017857375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.993" endtime="20201110 08:34:22.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017855875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017857375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.289" endtime="20201110 08:34:22.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.297" endtime="20201110 08:34:22.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.990" endtime="20201110 08:34:22.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.989" endtime="20201110 08:34:22.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.304" level="INFO">${RESULT} = [{'time': 0.017857375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.017861722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:22.301" endtime="20201110 08:34:22.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:22.317" level="INFO">${OVERHEAD} = {'source_diff': [1.5000000000015001e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5970000000024853e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e...</msg>
<status status="PASS" starttime="20201110 08:34:22.305" endtime="20201110 08:34:22.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.321" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:22.320" endtime="20201110 08:34:22.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.324" level="INFO">VALUE: [1.5000000000015001e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5970000000024853e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.584000000002389e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5970000000024853e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5549999999968367e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5690000000033455e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201110 08:34:22.322" endtime="20201110 08:34:22.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.318" endtime="20201110 08:34:22.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.327" endtime="20201110 08:34:22.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.331" endtime="20201110 08:34:22.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.329" endtime="20201110 08:34:22.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.326" endtime="20201110 08:34:22.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.963" endtime="20201110 08:34:22.352"></status>
</kw>
<msg timestamp="20201110 08:34:22.352" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.360" endtime="20201110 08:34:22.372"></status>
</kw>
<msg timestamp="20201110 08:34:22.372" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.358" endtime="20201110 08:34:22.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.375" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.373" endtime="20201110 08:34:22.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.376" endtime="20201110 08:34:22.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.356" endtime="20201110 08:34:22.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.354" endtime="20201110 08:34:22.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.385" endtime="20201110 08:34:22.672"></status>
</kw>
<msg timestamp="20201110 08:34:22.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018911056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018912611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.383" endtime="20201110 08:34:22.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018911056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018912611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.676" endtime="20201110 08:34:22.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.684" endtime="20201110 08:34:22.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.381" endtime="20201110 08:34:22.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.379" endtime="20201110 08:34:22.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.691" level="INFO">${RESULT} = [{'time': 0.018912611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018916458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:22.688" endtime="20201110 08:34:22.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:22.704" level="INFO">${OVERHEAD} = {'source_diff': [1.5550000000003061e-06, 1.582999999999446e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e...</msg>
<status status="PASS" starttime="20201110 08:34:22.692" endtime="20201110 08:34:22.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.708" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:22.707" endtime="20201110 08:34:22.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.711" level="INFO">VALUE: [1.5550000000003061e-06, 1.582999999999446e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5970000000024853e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5839999999989196e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5839999999989196e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5979999999984895e-06, 1.568999999999876e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201110 08:34:22.709" endtime="20201110 08:34:22.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.705" endtime="20201110 08:34:22.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.714" endtime="20201110 08:34:22.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.718" endtime="20201110 08:34:22.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.716" endtime="20201110 08:34:22.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.713" endtime="20201110 08:34:22.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.352" endtime="20201110 08:34:22.739"></status>
</kw>
<msg timestamp="20201110 08:34:22.739" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.746" endtime="20201110 08:34:22.759"></status>
</kw>
<msg timestamp="20201110 08:34:22.760" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.745" endtime="20201110 08:34:22.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.762" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.761" endtime="20201110 08:34:22.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.763" endtime="20201110 08:34:22.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.742" endtime="20201110 08:34:22.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.741" endtime="20201110 08:34:22.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.772" endtime="20201110 08:34:23.063"></status>
</kw>
<msg timestamp="20201110 08:34:23.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017910583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017912153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.771" endtime="20201110 08:34:23.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017910583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017912153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.067" endtime="20201110 08:34:23.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.076" endtime="20201110 08:34:23.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.768" endtime="20201110 08:34:23.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.766" endtime="20201110 08:34:23.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.083" level="INFO">${RESULT} = [{'time': 0.017912153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.017918694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:23.080" endtime="20201110 08:34:23.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:23.098" level="INFO">${OVERHEAD} = {'source_diff': [1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.555999999999779...</msg>
<status status="PASS" starttime="20201110 08:34:23.084" endtime="20201110 08:34:23.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.102" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:23.101" endtime="20201110 08:34:23.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.105" level="INFO">VALUE: [1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, 1.5830000000029154e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.6389999999977256e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5830000000029154e-06, 1.5839999999989196e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201110 08:34:23.103" endtime="20201110 08:34:23.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.099" endtime="20201110 08:34:23.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.114" endtime="20201110 08:34:23.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.118" endtime="20201110 08:34:23.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.116" endtime="20201110 08:34:23.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.112" endtime="20201110 08:34:23.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.739" endtime="20201110 08:34:23.138"></status>
</kw>
<msg timestamp="20201110 08:34:23.139" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.147" endtime="20201110 08:34:23.158"></status>
</kw>
<msg timestamp="20201110 08:34:23.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.145" endtime="20201110 08:34:23.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.161" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.159" endtime="20201110 08:34:23.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.162" endtime="20201110 08:34:23.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.142" endtime="20201110 08:34:23.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.141" endtime="20201110 08:34:23.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.171" endtime="20201110 08:34:23.458"></status>
</kw>
<msg timestamp="20201110 08:34:23.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018393139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018394639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.170" endtime="20201110 08:34:23.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018393139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018394639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.462" endtime="20201110 08:34:23.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.470" endtime="20201110 08:34:23.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.167" endtime="20201110 08:34:23.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.165" endtime="20201110 08:34:23.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.477" level="INFO">${RESULT} = [{'time': 0.018394639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018399944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:23.474" endtime="20201110 08:34:23.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:23.491" level="INFO">${OVERHEAD} = {'source_diff': [1.5000000000015001e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5700000000028191e...</msg>
<status status="PASS" starttime="20201110 08:34:23.478" endtime="20201110 08:34:23.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.496" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:23.495" endtime="20201110 08:34:23.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.498" level="INFO">VALUE: [1.5000000000015001e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5839999999989196e-06, 1.5830000000029154e-06, 1.582999999999446e-06, 1.5549999999968367e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.637999999998252e-06, 1.568999999999876e-06, 1.5970000000024853e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5970000000024853e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.6120000000015289e-06, 1.5550000000003061e-06, 1.5409999999972668e-06, 1.568999999999876e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201110 08:34:23.497" endtime="20201110 08:34:23.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.492" endtime="20201110 08:34:23.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.502" endtime="20201110 08:34:23.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.506" endtime="20201110 08:34:23.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.504" endtime="20201110 08:34:23.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.500" endtime="20201110 08:34:23.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.139" endtime="20201110 08:34:23.527"></status>
</kw>
<msg timestamp="20201110 08:34:23.527" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.535" endtime="20201110 08:34:23.546"></status>
</kw>
<msg timestamp="20201110 08:34:23.547" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.533" endtime="20201110 08:34:23.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.548" endtime="20201110 08:34:23.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.550" endtime="20201110 08:34:23.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.530" endtime="20201110 08:34:23.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.529" endtime="20201110 08:34:23.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.560" endtime="20201110 08:34:23.846"></status>
</kw>
<msg timestamp="20201110 08:34:23.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018434583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018436167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.558" endtime="20201110 08:34:23.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018434583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018436167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.851" endtime="20201110 08:34:23.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.859" endtime="20201110 08:34:23.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.556" endtime="20201110 08:34:23.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.554" endtime="20201110 08:34:23.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.866" level="INFO">${RESULT} = [{'time': 0.018436167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.0184405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.863" endtime="20201110 08:34:23.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:23.880" level="INFO">${OVERHEAD} = {'source_diff': [1.5839999999989196e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.56899999999987...</msg>
<status status="PASS" starttime="20201110 08:34:23.867" endtime="20201110 08:34:23.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.884" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:23.883" endtime="20201110 08:34:23.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.887" level="INFO">VALUE: [1.5839999999989196e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.639000000001195e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5700000000028191e-06, 1.582999999999446e-06, 1.584000000002389e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.4999999999980307e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.4859999999984608e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201110 08:34:23.885" endtime="20201110 08:34:23.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.881" endtime="20201110 08:34:23.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.891" endtime="20201110 08:34:23.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.894" endtime="20201110 08:34:23.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.893" endtime="20201110 08:34:23.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.889" endtime="20201110 08:34:23.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.527" endtime="20201110 08:34:23.915"></status>
</kw>
<msg timestamp="20201110 08:34:23.915" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.923" endtime="20201110 08:34:23.935"></status>
</kw>
<msg timestamp="20201110 08:34:23.936" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.922" endtime="20201110 08:34:23.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.938" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.937" endtime="20201110 08:34:23.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.940" endtime="20201110 08:34:23.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.919" endtime="20201110 08:34:23.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.917" endtime="20201110 08:34:23.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.949" endtime="20201110 08:34:24.237"></status>
</kw>
<msg timestamp="20201110 08:34:24.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018479597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.947" endtime="20201110 08:34:24.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018479597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.241" endtime="20201110 08:34:24.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.250" endtime="20201110 08:34:24.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.945" endtime="20201110 08:34:24.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.943" endtime="20201110 08:34:24.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.257" level="INFO">${RESULT} = [{'time': 0.018481194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018486444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:24.253" endtime="20201110 08:34:24.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:24.271" level="INFO">${OVERHEAD} = {'source_diff': [1.5969999999990159e-06, 1.5970000000024853e-06, 1.582999999999446e-06, 1.5969999999990159e-06, 1.5830000000029154e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.555999999999779...</msg>
<status status="PASS" starttime="20201110 08:34:24.258" endtime="20201110 08:34:24.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.275" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:24.274" endtime="20201110 08:34:24.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.278" level="INFO">VALUE: [1.5969999999990159e-06, 1.5970000000024853e-06, 1.582999999999446e-06, 1.5969999999990159e-06, 1.5830000000029154e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5690000000033455e-06, 1.5700000000028191e-06, 1.52800000000064e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.5700000000028191e-06, 1.5279999999971705e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5139999999976006e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5690000000033455e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5830000000029154e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.584000000002389e-06, 1.598000000001959e-06]</msg>
<status status="PASS" starttime="20201110 08:34:24.276" endtime="20201110 08:34:24.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.272" endtime="20201110 08:34:24.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.281" endtime="20201110 08:34:24.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.285" endtime="20201110 08:34:24.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.283" endtime="20201110 08:34:24.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.280" endtime="20201110 08:34:24.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.916" endtime="20201110 08:34:24.306"></status>
</kw>
<msg timestamp="20201110 08:34:24.306" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.314" endtime="20201110 08:34:24.326"></status>
</kw>
<msg timestamp="20201110 08:34:24.326" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.313" endtime="20201110 08:34:24.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.329" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.327" endtime="20201110 08:34:24.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.330" endtime="20201110 08:34:24.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.310" endtime="20201110 08:34:24.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.308" endtime="20201110 08:34:24.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.339" endtime="20201110 08:34:24.627"></status>
</kw>
<msg timestamp="20201110 08:34:24.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018451875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018453444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.337" endtime="20201110 08:34:24.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018451875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018453444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.631" endtime="20201110 08:34:24.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.640" endtime="20201110 08:34:24.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.335" endtime="20201110 08:34:24.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.333" endtime="20201110 08:34:24.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.646" level="INFO">${RESULT} = [{'time': 0.018453444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018458917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:24.643" endtime="20201110 08:34:24.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:24.661" level="INFO">${OVERHEAD} = {'source_diff': [1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5969999999990159...</msg>
<status status="PASS" starttime="20201110 08:34:24.647" endtime="20201110 08:34:24.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.665" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:24.664" endtime="20201110 08:34:24.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.668" level="INFO">VALUE: [1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5969999999990159e-06, 1.5270000000011663e-06, 1.582999999999446e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5700000000028191e-06, 1.5970000000024853e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.584000000002389e-06, 1.5690000000033455e-06, 1.6249999999981557e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.6380000000017214e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201110 08:34:24.667" endtime="20201110 08:34:24.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.662" endtime="20201110 08:34:24.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.672" endtime="20201110 08:34:24.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.676" endtime="20201110 08:34:24.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.674" endtime="20201110 08:34:24.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.670" endtime="20201110 08:34:24.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.307" endtime="20201110 08:34:24.697"></status>
</kw>
<msg timestamp="20201110 08:34:24.697" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.705" endtime="20201110 08:34:24.718"></status>
</kw>
<msg timestamp="20201110 08:34:24.718" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.703" endtime="20201110 08:34:24.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.721" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.719" endtime="20201110 08:34:24.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.722" endtime="20201110 08:34:24.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.701" endtime="20201110 08:34:24.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.699" endtime="20201110 08:34:24.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.731" endtime="20201110 08:34:25.021"></status>
</kw>
<msg timestamp="20201110 08:34:25.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019061181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01906275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:24.729" endtime="20201110 08:34:25.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019061181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01906275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:25.030" endtime="20201110 08:34:25.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.049" endtime="20201110 08:34:25.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.727" endtime="20201110 08:34:25.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.725" endtime="20201110 08:34:25.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.064" level="INFO">${RESULT} = [{'time': 0.01906275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019068708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:25.056" endtime="20201110 08:34:25.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:25.093" level="INFO">${OVERHEAD} = {'source_diff': [1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-0...</msg>
<status status="PASS" starttime="20201110 08:34:25.066" endtime="20201110 08:34:25.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.098" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:34:25.097" endtime="20201110 08:34:25.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.100" level="INFO">VALUE: [1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5839999999989196e-06, 1.5420000000002099e-06, 1.5979999999984895e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5970000000024853e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5839999999989196e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5560000000032492e-06, 1.5269999999976969e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201110 08:34:25.099" endtime="20201110 08:34:25.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.094" endtime="20201110 08:34:25.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.104" endtime="20201110 08:34:25.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.107" endtime="20201110 08:34:25.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.106" endtime="20201110 08:34:25.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.102" endtime="20201110 08:34:25.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.698" endtime="20201110 08:34:25.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.280" endtime="20201110 08:34:25.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.132" endtime="20201110 08:34:25.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.131" endtime="20201110 08:34:25.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.129" endtime="20201110 08:34:25.152"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:14.204" endtime="20201110 08:34:25.153" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.159" endtime="20201110 08:34:25.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.158" endtime="20201110 08:34:25.180"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.193" endtime="20201110 08:34:28.215"></status>
</kw>
<msg timestamp="20201110 08:34:28.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.191" endtime="20201110 08:34:28.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.221" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.218" endtime="20201110 08:34:28.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:28.223" endtime="20201110 08:34:28.228"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:25.188" endtime="20201110 08:34:28.229"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:25.186" endtime="20201110 08:34:28.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.185" endtime="20201110 08:34:28.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:28.239" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:28.237" endtime="20201110 08:34:28.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.233" endtime="20201110 08:34:28.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.184" endtime="20201110 08:34:28.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.183" endtime="20201110 08:34:28.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.242" endtime="20201110 08:34:28.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.182" endtime="20201110 08:34:28.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.180" endtime="20201110 08:34:28.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.157" endtime="20201110 08:34:28.248"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.266" endtime="20201110 08:34:28.290"></status>
</kw>
<msg timestamp="20201110 08:34:28.290" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.262" endtime="20201110 08:34:28.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.293" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.291" endtime="20201110 08:34:28.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.294" endtime="20201110 08:34:28.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.257" endtime="20201110 08:34:28.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.253" endtime="20201110 08:34:28.297"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.299" endtime="20201110 08:34:28.300"></status>
</kw>
<msg timestamp="20201110 08:34:28.301" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:34:28.297" endtime="20201110 08:34:28.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.305" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:28.304" endtime="20201110 08:34:28.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.307" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:28.306" endtime="20201110 08:34:28.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.302" endtime="20201110 08:34:28.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.312" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:28.311" endtime="20201110 08:34:28.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.314" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:28.313" endtime="20201110 08:34:28.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.308" endtime="20201110 08:34:28.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.321" endtime="20201110 08:34:28.618"></status>
</kw>
<msg timestamp="20201110 08:34:28.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102228222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102233167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.319" endtime="20201110 08:34:28.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102228222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102233167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.622" endtime="20201110 08:34:28.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.630" endtime="20201110 08:34:28.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.317" endtime="20201110 08:34:28.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.315" endtime="20201110 08:34:28.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.637" level="INFO">${RESULT} = [{'time': 3.102233167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.945000000144972e-06, 'source_diff': 4.945000000144972e-06}, {'time': 3.102243708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.634" endtime="20201110 08:34:28.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:28.650" level="INFO">${OVERHEAD} = {'source_diff': [4.945000000144972e-06, 5.026999999824255e-06, 5.041000000094442e-06, 5.027999999906996e-06, 5.028000000351085e-06, 5.028000000351085e-06, 5.028000000351085e-06, 5.014000000080898e-06,...</msg>
<status status="PASS" starttime="20201110 08:34:28.638" endtime="20201110 08:34:28.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.655" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:34:28.654" endtime="20201110 08:34:28.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.658" level="INFO">VALUE: [4.945000000144972e-06, 5.026999999824255e-06, 5.041000000094442e-06, 5.027999999906996e-06, 5.028000000351085e-06, 5.028000000351085e-06, 5.028000000351085e-06, 5.014000000080898e-06, 5.041999999733093e-06, 5.05499999992054e-06, 5.05600000000328e-06, 5.041000000094442e-06, 5.0420000001771825e-06, 5.05499999992054e-06, 5.041000000094442e-06, 5.0420000001771825e-06, 5.0420000001771825e-06, 5.026999999824255e-06, 5.027999999906996e-06, 5.041999999733093e-06, 5.0420000001771825e-06, 4.972000000158516e-06, 5.040999999650353e-06, 5.041000000094442e-06, 5.0420000001771825e-06, 5.041000000094442e-06, 5.05600000000328e-06, 5.013999999636809e-06, 5.028000000351085e-06, 5.027999999906996e-06, 5.0420000001771825e-06, 5.0690000001907265e-06, 4.971999999714427e-06, 5.083000000016824e-06, 5.027999999906996e-06, 5.026999999824255e-06, 5.028000000351085e-06, 5.027999999906996e-06, 5.041999999733093e-06, 5.0420000001771825e-06, 5.0420000001771825e-06, 5.05499999992054e-06, 5.055000000364629e-06, 5.110999999669019e-06, 5.0420000001771825e-06, 5.027000000268345e-06, 5.0420000001771825e-06, 5.000000000254801e-06, 5.0420000001771825e-06, 5.028000000351085e-06]</msg>
<status status="PASS" starttime="20201110 08:34:28.656" endtime="20201110 08:34:28.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.651" endtime="20201110 08:34:28.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.661" endtime="20201110 08:34:28.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.664" endtime="20201110 08:34:28.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.663" endtime="20201110 08:34:28.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.659" endtime="20201110 08:34:28.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.249" endtime="20201110 08:34:28.685"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:25.154" endtime="20201110 08:34:28.686" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.692" endtime="20201110 08:34:28.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.691" endtime="20201110 08:34:28.712"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.726" endtime="20201110 08:34:31.748"></status>
</kw>
<msg timestamp="20201110 08:34:31.749" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.724" endtime="20201110 08:34:31.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.754" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.751" endtime="20201110 08:34:31.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.760" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:31.757" endtime="20201110 08:34:31.761"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:28.721" endtime="20201110 08:34:31.762"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:28.719" endtime="20201110 08:34:31.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.717" endtime="20201110 08:34:31.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:31.772" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:31.770" endtime="20201110 08:34:31.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.766" endtime="20201110 08:34:31.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.716" endtime="20201110 08:34:31.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.716" endtime="20201110 08:34:31.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.775" endtime="20201110 08:34:31.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.714" endtime="20201110 08:34:31.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.713" endtime="20201110 08:34:31.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.689" endtime="20201110 08:34:31.781"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.799" endtime="20201110 08:34:31.872"></status>
</kw>
<msg timestamp="20201110 08:34:31.873" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.796" endtime="20201110 08:34:31.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.875" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.874" endtime="20201110 08:34:31.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.876" endtime="20201110 08:34:31.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.790" endtime="20201110 08:34:31.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.785" endtime="20201110 08:34:31.879"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.881" endtime="20201110 08:34:31.882"></status>
</kw>
<msg timestamp="20201110 08:34:31.883" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:34:31.880" endtime="20201110 08:34:31.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.887" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:31.886" endtime="20201110 08:34:31.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.889" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:31.888" endtime="20201110 08:34:31.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.884" endtime="20201110 08:34:31.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.894" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:31.893" endtime="20201110 08:34:31.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.896" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:31.895" endtime="20201110 08:34:31.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.890" endtime="20201110 08:34:31.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.904" endtime="20201110 08:34:32.204"></status>
</kw>
<msg timestamp="20201110 08:34:32.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099580403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099618028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.901" endtime="20201110 08:34:32.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099580403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099618028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.208" endtime="20201110 08:34:32.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.216" endtime="20201110 08:34:32.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.899" endtime="20201110 08:34:32.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.897" endtime="20201110 08:34:32.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.223" level="INFO">${RESULT} = [{'time': 3.099618028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.76250000000411e-05, 'source_diff': 3.76250000000411e-05}, {'time': 3.100685472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:32.219" endtime="20201110 08:34:32.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:32.238" level="INFO">${OVERHEAD} = {'source_diff': [3.76250000000411e-05, 3.75139999997387e-05, 3.756900000029262e-05, 3.7584000000201456e-05, 3.7541999999834985e-05, 3.752800000000889e-05, 3.756900000029262e-05, 3.756899999984853e-05,...</msg>
<status status="PASS" starttime="20201110 08:34:32.223" endtime="20201110 08:34:32.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.243" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:34:32.242" endtime="20201110 08:34:32.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.245" level="INFO">VALUE: [3.76250000000411e-05, 3.75139999997387e-05, 3.756900000029262e-05, 3.7584000000201456e-05, 3.7541999999834985e-05, 3.752800000000889e-05, 3.756900000029262e-05, 3.756899999984853e-05, 3.7541999999834985e-05, 3.755600000010517e-05, 3.755599999966108e-05, 3.761099999977091e-05, 3.756999999993127e-05, 3.7583000000118716e-05, 3.755599999966108e-05, 3.755500000002243e-05, 3.7541000000196334e-05, 3.7583000000118716e-05, 3.758399999975737e-05, 3.756900000029262e-05, 3.756899999984853e-05, 3.756899999984853e-05, 3.756899999984853e-05, 3.756900000029262e-05, 3.751400000018279e-05, 3.757000000037536e-05, 3.756900000029262e-05, 3.758399999975737e-05, 3.7583000000118716e-05, 3.7540999999752245e-05, 3.756900000029262e-05, 3.756999999993127e-05, 3.756999999993127e-05, 3.7541999999834985e-05, 3.755599999966108e-05, 3.756899999984853e-05, 3.7542000000279074e-05, 3.755600000010517e-05, 3.752699999992615e-05, 3.756999999993127e-05, 3.755500000002243e-05, 3.756899999984853e-05, 3.756900000029262e-05, 3.756999999993127e-05, 3.7541999999834985e-05, 3.756899999984853e-05, 3.7541999999834985e-05, 3.756899999984853e-05, 3.75139999997387e-05, 3.756900000029262e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.244" endtime="20201110 08:34:32.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.239" endtime="20201110 08:34:32.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.248" endtime="20201110 08:34:32.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.252" endtime="20201110 08:34:32.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.250" endtime="20201110 08:34:32.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.247" endtime="20201110 08:34:32.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.782" endtime="20201110 08:34:32.272"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:28.687" endtime="20201110 08:34:32.273" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.279" endtime="20201110 08:34:32.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.278" endtime="20201110 08:34:32.299"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.313" endtime="20201110 08:34:35.335"></status>
</kw>
<msg timestamp="20201110 08:34:35.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.311" endtime="20201110 08:34:35.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.338" endtime="20201110 08:34:35.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.347" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:35.343" endtime="20201110 08:34:35.347"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:32.308" endtime="20201110 08:34:35.349"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:32.306" endtime="20201110 08:34:35.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.305" endtime="20201110 08:34:35.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:35.358" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:35.357" endtime="20201110 08:34:35.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.352" endtime="20201110 08:34:35.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.304" endtime="20201110 08:34:35.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.303" endtime="20201110 08:34:35.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.362" endtime="20201110 08:34:35.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.302" endtime="20201110 08:34:35.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.300" endtime="20201110 08:34:35.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.277" endtime="20201110 08:34:35.368"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.386" endtime="20201110 08:34:35.601"></status>
</kw>
<msg timestamp="20201110 08:34:35.602" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.382" endtime="20201110 08:34:35.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.604" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.603" endtime="20201110 08:34:35.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.605" endtime="20201110 08:34:35.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.377" endtime="20201110 08:34:35.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.372" endtime="20201110 08:34:35.608"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.610" endtime="20201110 08:34:35.611"></status>
</kw>
<msg timestamp="20201110 08:34:35.612" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:34:35.608" endtime="20201110 08:34:35.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.616" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:35.615" endtime="20201110 08:34:35.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.618" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:35.617" endtime="20201110 08:34:35.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.613" endtime="20201110 08:34:35.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.623" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:35.622" endtime="20201110 08:34:35.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.625" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:35.624" endtime="20201110 08:34:35.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.619" endtime="20201110 08:34:35.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.632" endtime="20201110 08:34:35.933"></status>
</kw>
<msg timestamp="20201110 08:34:35.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101369083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101441236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.630" endtime="20201110 08:34:35.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101369083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101441236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.938" endtime="20201110 08:34:35.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.946" endtime="20201110 08:34:35.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.628" endtime="20201110 08:34:35.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.626" endtime="20201110 08:34:35.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.953" level="INFO">${RESULT} = [{'time': 3.101441236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.215300000007474e-05, 'source_diff': 7.215300000007474e-05}, {'time': 3.105354944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:35.949" endtime="20201110 08:34:35.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:35.967" level="INFO">${OVERHEAD} = {'source_diff': [7.215300000007474e-05, 7.17770000000506e-05, 7.177799999968926e-05, 7.170800000011468e-05, 7.170800000011468e-05, 7.170800000011468e-05, 7.172199999994078e-05, 7.169400000028858e-05, ...</msg>
<status status="PASS" starttime="20201110 08:34:35.954" endtime="20201110 08:34:35.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.972" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:34:35.971" endtime="20201110 08:34:35.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.974" level="INFO">VALUE: [7.215300000007474e-05, 7.17770000000506e-05, 7.177799999968926e-05, 7.170800000011468e-05, 7.170800000011468e-05, 7.170800000011468e-05, 7.172199999994078e-05, 7.169400000028858e-05, 7.165300000000485e-05, 7.169499999992723e-05, 7.172199999994078e-05, 7.170799999967059e-05, 7.170799999967059e-05, 7.172199999994078e-05, 7.170799999967059e-05, 7.169400000028858e-05, 7.172199999994078e-05, 7.168100000010114e-05, 7.168100000010114e-05, 7.170800000011468e-05, 7.169500000037132e-05, 7.170900000019742e-05, 7.172199999994078e-05, 7.170900000019742e-05, 7.172199999994078e-05, 7.170899999975333e-05, 7.170800000011468e-05, 7.170800000011468e-05, 7.172199999994078e-05, 7.170899999975333e-05, 7.170899999975333e-05, 7.169400000028858e-05, 7.170799999967059e-05, 7.170800000011468e-05, 7.172199999994078e-05, 7.169400000028858e-05, 7.170800000011468e-05, 7.170800000011468e-05, 7.170800000011468e-05, 7.170800000011468e-05, 7.177800000013335e-05, 7.170899999975333e-05, 7.173600000021096e-05, 7.172199999994078e-05, 7.169499999992723e-05, 7.170899999975333e-05, 7.175000000003706e-05, 7.170900000019742e-05, 7.170900000019742e-05, 7.170799999967059e-05]</msg>
<status status="PASS" starttime="20201110 08:34:35.973" endtime="20201110 08:34:35.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.968" endtime="20201110 08:34:35.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.977" endtime="20201110 08:34:35.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.981" endtime="20201110 08:34:36.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.979" endtime="20201110 08:34:36.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.976" endtime="20201110 08:34:36.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.369" endtime="20201110 08:34:36.002"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:32.274" endtime="20201110 08:34:36.002" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.009" endtime="20201110 08:34:36.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.008" endtime="20201110 08:34:36.030"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.043" endtime="20201110 08:34:39.065"></status>
</kw>
<msg timestamp="20201110 08:34:39.067" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.041" endtime="20201110 08:34:39.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.069" endtime="20201110 08:34:39.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.079" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:39.075" endtime="20201110 08:34:39.079"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:36.039" endtime="20201110 08:34:39.081"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:36.036" endtime="20201110 08:34:39.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.035" endtime="20201110 08:34:39.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:39.091" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:39.089" endtime="20201110 08:34:39.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.085" endtime="20201110 08:34:39.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.034" endtime="20201110 08:34:39.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.033" endtime="20201110 08:34:39.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.095" endtime="20201110 08:34:39.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.032" endtime="20201110 08:34:39.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.030" endtime="20201110 08:34:39.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.007" endtime="20201110 08:34:39.101"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.120" endtime="20201110 08:34:39.145"></status>
</kw>
<msg timestamp="20201110 08:34:39.146" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.117" endtime="20201110 08:34:39.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.152" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.148" endtime="20201110 08:34:39.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.154" endtime="20201110 08:34:39.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.111" endtime="20201110 08:34:39.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.106" endtime="20201110 08:34:39.160"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.164" endtime="20201110 08:34:39.168"></status>
</kw>
<msg timestamp="20201110 08:34:39.169" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:34:39.161" endtime="20201110 08:34:39.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.178" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:39.176" endtime="20201110 08:34:39.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.182" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:39.180" endtime="20201110 08:34:39.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.171" endtime="20201110 08:34:39.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.193" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:39.191" endtime="20201110 08:34:39.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.197" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:39.195" endtime="20201110 08:34:39.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.186" endtime="20201110 08:34:39.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.205" endtime="20201110 08:34:39.498"></status>
</kw>
<msg timestamp="20201110 08:34:39.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102865111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102866389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.203" endtime="20201110 08:34:39.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102865111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102866389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.503" endtime="20201110 08:34:39.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.511" endtime="20201110 08:34:39.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.200" endtime="20201110 08:34:39.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.198" endtime="20201110 08:34:39.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.519" level="INFO">${RESULT} = [{'time': 3.102866389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2780000000489622e-06, 'source_diff': 1.2780000000489622e-06}, {'time': 3.102875556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:39.515" endtime="20201110 08:34:39.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:39.532" level="INFO">${OVERHEAD} = {'source_diff': [1.2780000000489622e-06, 1.2780000000489622e-06, 1.2639999997787754e-06, 1.2639999997787754e-06, 1.2639999997787754e-06, 1.2499999999526779e-06, 1.2780000000489622e-06, 1.2779999996048...</msg>
<status status="PASS" starttime="20201110 08:34:39.520" endtime="20201110 08:34:39.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.537" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:34:39.536" endtime="20201110 08:34:39.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.540" level="INFO">VALUE: [1.2780000000489622e-06, 1.2780000000489622e-06, 1.2639999997787754e-06, 1.2639999997787754e-06, 1.2639999997787754e-06, 1.2499999999526779e-06, 1.2780000000489622e-06, 1.277999999604873e-06, 1.319000000332693e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.2229999999391339e-06, 1.2630000001401243e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.2360000001265803e-06, 1.2780000000489622e-06, 1.2639999997787754e-06, 1.2360000001265803e-06, 1.2640000002228646e-06, 1.2499999999526779e-06, 1.2769999999662218e-06, 1.2639999997787754e-06, 1.2220000003004827e-06, 1.2639999997787754e-06, 1.2780000000489622e-06, 1.2769999999662218e-06, 1.304999999618417e-06, 1.2499999999526779e-06, 1.3050000000625062e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.2639999997787754e-06, 1.292000000319149e-06, 1.2780000000489622e-06, 1.304999999618417e-06, 1.2769999999662218e-06, 1.2639999997787754e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.2769999999662218e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.2640000002228646e-06, 1.2780000000489622e-06, 1.2090000001130363e-06, 1.2769999999662218e-06, 1.2499999999526779e-06, 1.292000000319149e-06]</msg>
<status status="PASS" starttime="20201110 08:34:39.538" endtime="20201110 08:34:39.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.533" endtime="20201110 08:34:39.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.543" endtime="20201110 08:34:39.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.547" endtime="20201110 08:34:39.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.545" endtime="20201110 08:34:39.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.541" endtime="20201110 08:34:39.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.103" endtime="20201110 08:34:39.567"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:36.004" endtime="20201110 08:34:39.568" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.575" endtime="20201110 08:34:39.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.573" endtime="20201110 08:34:39.596"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.615" endtime="20201110 08:34:42.637"></status>
</kw>
<msg timestamp="20201110 08:34:42.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.612" endtime="20201110 08:34:42.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.640" endtime="20201110 08:34:42.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.650" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:42.646" endtime="20201110 08:34:42.651"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:39.609" endtime="20201110 08:34:42.652"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:39.605" endtime="20201110 08:34:42.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.603" endtime="20201110 08:34:42.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:42.663" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:42.661" endtime="20201110 08:34:42.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.657" endtime="20201110 08:34:42.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.602" endtime="20201110 08:34:42.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.601" endtime="20201110 08:34:42.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.667" endtime="20201110 08:34:42.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.600" endtime="20201110 08:34:42.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.597" endtime="20201110 08:34:42.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.572" endtime="20201110 08:34:42.673"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.685" endtime="20201110 08:34:42.758"></status>
</kw>
<msg timestamp="20201110 08:34:42.758" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.683" endtime="20201110 08:34:42.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.761" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.759" endtime="20201110 08:34:42.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.762" endtime="20201110 08:34:42.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.680" endtime="20201110 08:34:42.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.678" endtime="20201110 08:34:42.765"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.767" endtime="20201110 08:34:42.768"></status>
</kw>
<msg timestamp="20201110 08:34:42.769" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:34:42.765" endtime="20201110 08:34:42.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.773" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:42.772" endtime="20201110 08:34:42.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.775" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:42.774" endtime="20201110 08:34:42.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.770" endtime="20201110 08:34:42.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.780" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:42.779" endtime="20201110 08:34:42.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.782" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:42.781" endtime="20201110 08:34:42.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.777" endtime="20201110 08:34:42.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.791" endtime="20201110 08:34:43.091"></status>
</kw>
<msg timestamp="20201110 08:34:43.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101350875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101361486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.788" endtime="20201110 08:34:43.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101350875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101361486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.095" endtime="20201110 08:34:43.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.104" endtime="20201110 08:34:43.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.786" endtime="20201110 08:34:43.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.784" endtime="20201110 08:34:43.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.110" level="INFO">${RESULT} = [{'time': 3.101361486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0610999999993709e-05, 'source_diff': 1.0610999999993709e-05}, {'time': 3.102437319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:43.107" endtime="20201110 08:34:43.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:43.126" level="INFO">${OVERHEAD} = {'source_diff': [1.0610999999993709e-05, 1.0693999999755732e-05, 1.0624999999819806e-05, 1.0583999999980165e-05, 1.065299999991609e-05, 1.0667000000186277e-05, 1.061200000007645e-05, 1.055599999988388...</msg>
<status status="PASS" starttime="20201110 08:34:43.111" endtime="20201110 08:34:43.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.131" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:34:43.130" endtime="20201110 08:34:43.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.133" level="INFO">VALUE: [1.0610999999993709e-05, 1.0693999999755732e-05, 1.0624999999819806e-05, 1.0583999999980165e-05, 1.065299999991609e-05, 1.0667000000186277e-05, 1.061200000007645e-05, 1.055599999988388e-05, 1.0610999999993709e-05, 1.0597000000167611e-05, 1.0582999999897424e-05, 1.0625000000263896e-05, 1.0596999999723522e-05, 1.0596999999723522e-05, 1.0610999999993709e-05, 1.0582999999897424e-05, 1.0610999999993709e-05, 1.0610999999993709e-05, 1.0610999999993709e-05, 1.0624999999819806e-05, 1.0610999999993709e-05, 1.0610999999993709e-05, 1.0610999999993709e-05, 1.0610999999993709e-05, 1.0624999999819806e-05, 1.0583999999980165e-05, 1.0596999999723522e-05, 1.0610999999993709e-05, 1.0597000000167611e-05, 1.0610999999993709e-05, 1.061200000007645e-05, 1.0610999999993709e-05, 1.0624999999819806e-05, 1.0610999999993709e-05, 1.0610999999993709e-05, 1.0569000000071327e-05, 1.0610999999993709e-05, 1.065299999991609e-05, 1.0597000000167611e-05, 1.0610999999993709e-05, 1.0582999999897424e-05, 1.0610999999993709e-05, 1.0639000000089993e-05, 1.0610999999993709e-05, 1.0610999999993709e-05, 1.0582999999897424e-05, 1.0597000000167611e-05, 1.0610999999993709e-05, 1.0597000000167611e-05, 1.065299999991609e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.132" endtime="20201110 08:34:43.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.127" endtime="20201110 08:34:43.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.136" endtime="20201110 08:34:43.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.140" endtime="20201110 08:34:43.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.138" endtime="20201110 08:34:43.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.135" endtime="20201110 08:34:43.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.674" endtime="20201110 08:34:43.160"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:39.569" endtime="20201110 08:34:43.161" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.168" endtime="20201110 08:34:43.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.166" endtime="20201110 08:34:43.188"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.207" endtime="20201110 08:34:46.229"></status>
</kw>
<msg timestamp="20201110 08:34:46.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.204" endtime="20201110 08:34:46.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.233" endtime="20201110 08:34:46.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.243" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:46.238" endtime="20201110 08:34:46.243"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:43.200" endtime="20201110 08:34:46.245"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:43.198" endtime="20201110 08:34:46.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.197" endtime="20201110 08:34:46.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:46.254" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:46.252" endtime="20201110 08:34:46.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.248" endtime="20201110 08:34:46.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.196" endtime="20201110 08:34:46.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.195" endtime="20201110 08:34:46.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.257" endtime="20201110 08:34:46.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.192" endtime="20201110 08:34:46.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.189" endtime="20201110 08:34:46.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.165" endtime="20201110 08:34:46.263"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.280" endtime="20201110 08:34:46.500"></status>
</kw>
<msg timestamp="20201110 08:34:46.501" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.277" endtime="20201110 08:34:46.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.507" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.504" endtime="20201110 08:34:46.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.509" endtime="20201110 08:34:46.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.272" endtime="20201110 08:34:46.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.267" endtime="20201110 08:34:46.514"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.519" endtime="20201110 08:34:46.522"></status>
</kw>
<msg timestamp="20201110 08:34:46.522" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:34:46.516" endtime="20201110 08:34:46.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.531" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:34:46.529" endtime="20201110 08:34:46.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.535" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:34:46.533" endtime="20201110 08:34:46.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.524" endtime="20201110 08:34:46.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.545" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:34:46.543" endtime="20201110 08:34:46.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.549" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:34:46.547" endtime="20201110 08:34:46.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.538" endtime="20201110 08:34:46.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.560" endtime="20201110 08:34:46.862"></status>
</kw>
<msg timestamp="20201110 08:34:46.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108271125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108291264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.559" endtime="20201110 08:34:46.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108271125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108291264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.867" endtime="20201110 08:34:46.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.875" endtime="20201110 08:34:46.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.556" endtime="20201110 08:34:46.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.552" endtime="20201110 08:34:46.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.881" level="INFO">${RESULT} = [{'time': 3.108291264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139000000085616e-05, 'source_diff': 2.0139000000085616e-05}, {'time': 3.112226597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:46.878" endtime="20201110 08:34:46.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:34:46.895" level="INFO">${OVERHEAD} = {'source_diff': [2.0139000000085616e-05, 2.0138999999641527e-05, 2.012500000025952e-05, 2.012499999981543e-05, 2.0152999999911714e-05, 2.0152000000273063e-05, 2.012499999981543e-05, 2.0139000000085616...</msg>
<status status="PASS" starttime="20201110 08:34:46.882" endtime="20201110 08:34:46.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.899" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:34:46.898" endtime="20201110 08:34:46.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.902" level="INFO">VALUE: [2.0139000000085616e-05, 2.0138999999641527e-05, 2.012500000025952e-05, 2.012499999981543e-05, 2.0152999999911714e-05, 2.0152000000273063e-05, 2.012499999981543e-05, 2.0139000000085616e-05, 2.0152999999911714e-05, 2.0112000000072072e-05, 2.012499999981543e-05, 2.0110999999989332e-05, 2.0138000000002876e-05, 2.0138000000002876e-05, 2.012499999981543e-05, 2.012499999981543e-05, 2.0152999999911714e-05, 2.0139000000085616e-05, 2.0139000000085616e-05, 2.012499999981543e-05, 2.0139000000085616e-05, 2.0110999999989332e-05, 2.0152999999911714e-05, 2.012499999981543e-05, 2.012499999981543e-05, 2.0152999999911714e-05, 2.012500000025952e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.012500000025952e-05, 2.0139000000085616e-05, 2.0139000000085616e-05, 2.0139000000085616e-05, 2.0151999999828973e-05, 2.0152999999911714e-05, 2.0139000000085616e-05, 2.012499999981543e-05, 2.0110999999989332e-05, 2.0138000000002876e-05, 2.007000000014969e-05, 2.012499999981543e-05, 2.012499999981543e-05, 2.0110999999989332e-05, 2.0139000000085616e-05, 2.0139000000085616e-05, 2.0138000000002876e-05, 2.0139000000085616e-05, 2.0139000000085616e-05, 2.0097000000163234e-05, 2.0139000000085616e-05]</msg>
<status status="PASS" starttime="20201110 08:34:46.901" endtime="20201110 08:34:46.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.896" endtime="20201110 08:34:46.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.905" endtime="20201110 08:34:46.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.909" endtime="20201110 08:34:46.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.907" endtime="20201110 08:34:46.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.903" endtime="20201110 08:34:46.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.264" endtime="20201110 08:34:46.939"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:43.162" endtime="20201110 08:34:46.940" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:55.618" endtime="20201110 08:34:46.957"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.072" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:34:47.081" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:34:48.284" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:34:47.070" endtime="20201110 08:34:48.285"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.288" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:34:48.286" endtime="20201110 08:34:51.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.068" endtime="20201110 08:34:51.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.295" endtime="20201110 08:34:51.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.292" endtime="20201110 08:34:51.534"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.547" endtime="20201110 08:34:54.571"></status>
</kw>
<msg timestamp="20201110 08:34:54.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.546" endtime="20201110 08:34:54.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.577" endtime="20201110 08:34:54.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.590" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:54.585" endtime="20201110 08:34:54.591"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:51.543" endtime="20201110 08:34:54.592"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:51.541" endtime="20201110 08:34:54.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.539" endtime="20201110 08:34:54.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:54.605" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:54.601" endtime="20201110 08:34:54.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.596" endtime="20201110 08:34:54.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.538" endtime="20201110 08:34:54.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.538" endtime="20201110 08:34:54.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.609" endtime="20201110 08:34:54.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.537" endtime="20201110 08:34:54.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.615" endtime="20201110 08:34:54.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.535" endtime="20201110 08:34:54.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.065" endtime="20201110 08:34:54.620"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.634" endtime="20201110 08:34:54.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.633" endtime="20201110 08:34:54.654"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.668" endtime="20201110 08:34:57.691"></status>
</kw>
<msg timestamp="20201110 08:34:57.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.666" endtime="20201110 08:34:57.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.701" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.695" endtime="20201110 08:34:57.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.708" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:57.704" endtime="20201110 08:34:57.709"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:54.663" endtime="20201110 08:34:57.710"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:54.661" endtime="20201110 08:34:57.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.660" endtime="20201110 08:34:57.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:57.720" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:57.719" endtime="20201110 08:34:57.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.714" endtime="20201110 08:34:57.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.659" endtime="20201110 08:34:57.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.658" endtime="20201110 08:34:57.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.724" endtime="20201110 08:34:57.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.657" endtime="20201110 08:34:57.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.655" endtime="20201110 08:34:57.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.631" endtime="20201110 08:34:57.730"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.752" endtime="20201110 08:34:57.769"></status>
</kw>
<msg timestamp="20201110 08:34:57.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.749" endtime="20201110 08:34:57.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.773" endtime="20201110 08:34:57.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.778" endtime="20201110 08:34:57.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.741" endtime="20201110 08:34:57.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.736" endtime="20201110 08:34:57.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.798" endtime="20201110 08:34:58.097"></status>
</kw>
<msg timestamp="20201110 08:34:58.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109457889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109460472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.795" endtime="20201110 08:34:58.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109457889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109460472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.101" endtime="20201110 08:34:58.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.109" endtime="20201110 08:34:58.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.789" endtime="20201110 08:34:58.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.786" endtime="20201110 08:34:58.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.116" level="INFO">${RESULT} = [{'time': 3.109460472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.582999999667379e-06, 'source_diff': 2.582999999667379e-06}, {'time': 3.109468403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:58.113" endtime="20201110 08:34:58.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.129" level="INFO">${ACCURACY} = {'source_diff': [2.582999999667379e-06, 2.542000000271827e-06, 3.1799999997694783e-06, 2.916000000130481e-06, 3.1380000002911856e-06, 2.889000000116937e-06, 3.181000000296308e-06, 2.889000000116937e-0...</msg>
<status status="PASS" starttime="20201110 08:34:58.117" endtime="20201110 08:34:58.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.134" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.133" endtime="20201110 08:34:58.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.136" level="INFO">VALUE: [2.582999999667379e-06, 2.542000000271827e-06, 3.1799999997694783e-06, 2.916000000130481e-06, 3.1380000002911856e-06, 2.889000000116937e-06, 3.181000000296308e-06, 2.889000000116937e-06, 3.5140000003153204e-06, 2.555000000015184e-06, 3.486000000219036e-06, 2.87499999984675e-06, 3.1659999999433808e-06, 2.8189999996541815e-06, 2.87499999984675e-06, 3.1809999998522187e-06, 3.5000000000451337e-06, 3.1799999997694783e-06, 2.5560000000979244e-06, 3.194000000039665e-06, 2.87499999984675e-06, 3.22300000021869e-06, 3.5139999998712312e-06, 2.8889999996728477e-06, 3.194000000039665e-06, 3.1809999998522187e-06, 2.5689999998412816e-06, 2.8889999996728477e-06, 2.8610000000206526e-06, 2.9030000003871237e-06, 2.5840000001942087e-06, 3.1809999998522187e-06, 3.2079999998657627e-06, 3.4869999998576873e-06, 3.1950000001224055e-06, 2.5840000001942087e-06, 3.194000000039665e-06, 3.194000000039665e-06, 3.5140000003153204e-06, 2.7920000000847267e-06, 2.5689999998412816e-06, 3.2079999998657627e-06, 3.5000000000451337e-06, 2.889000000116937e-06, 3.1109999998335525e-06, 3.1800000002135675e-06, 3.2079999998657627e-06, 3.1950000001224055e-06, 2.87499999984675e-06, 2.8610000000206526e-06]</msg>
<status status="PASS" starttime="20201110 08:34:58.135" endtime="20201110 08:34:58.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.130" endtime="20201110 08:34:58.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.140" endtime="20201110 08:34:58.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.143" endtime="20201110 08:34:58.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.142" endtime="20201110 08:34:58.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.138" endtime="20201110 08:34:58.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.733" endtime="20201110 08:34:58.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.732" endtime="20201110 08:34:58.164"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.173" endtime="20201110 08:34:58.187"></status>
</kw>
<msg timestamp="20201110 08:34:58.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.171" endtime="20201110 08:34:58.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.189" endtime="20201110 08:34:58.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.191" endtime="20201110 08:34:58.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.169" endtime="20201110 08:34:58.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.167" endtime="20201110 08:34:58.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.201" endtime="20201110 08:34:58.487"></status>
</kw>
<msg timestamp="20201110 08:34:58.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021053403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.199" endtime="20201110 08:34:58.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021053403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.491" endtime="20201110 08:34:58.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.499" endtime="20201110 08:34:58.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.196" endtime="20201110 08:34:58.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.195" endtime="20201110 08:34:58.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.506" level="INFO">${RESULT} = [{'time': 0.021053403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8199999999981304e-06, 'source_diff': 3.8199999999981304e-06}, {'time': 0.021062403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:58.502" endtime="20201110 08:34:58.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.534" level="INFO">${ACCURACY} = {'source_diff': [3.8199999999981304e-06, 3.8200000000016e-06, 4.125000000000656e-06, 3.500000000000031e-06, 3.4719999999974216e-06, 3.8200000000016e-06, 3.500000000000031e-06, 4.125000000000656e-06, 4...</msg>
<status status="PASS" starttime="20201110 08:34:58.507" endtime="20201110 08:34:58.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.543" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.541" endtime="20201110 08:34:58.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.548" level="INFO">VALUE: [3.8199999999981304e-06, 3.8200000000016e-06, 4.125000000000656e-06, 3.500000000000031e-06, 3.4719999999974216e-06, 3.8200000000016e-06, 3.500000000000031e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.457999999998852e-06, 3.861000000000836e-06, 3.8200000000016e-06, 3.500000000000031e-06, 3.79200000000246e-06, 4.139000000000226e-06, 3.486000000000461e-06, 3.8200000000016e-06, 3.8059999999985605e-06, 4.429999999999712e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.80600000000203e-06, 4.125000000000656e-06, 4.471999999998422e-06, 4.443999999999282e-06, 3.832999999998227e-06, 3.500000000000031e-06, 3.500000000000031e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 3.500000000000031e-06, 4.430999999999186e-06, 4.417000000003085e-06, 3.4719999999974216e-06, 3.500000000000031e-06, 4.166999999999366e-06, 4.1109999999976166e-06, 3.790999999999517e-06, 3.750000000000281e-06, 4.125000000000656e-06, 4.138999999996756e-06, 4.429999999999712e-06, 3.819000000002126e-06, 4.111000000001086e-06, 3.819000000002126e-06, 4.180000000002931e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201110 08:34:58.545" endtime="20201110 08:34:58.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.535" endtime="20201110 08:34:58.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.555" endtime="20201110 08:34:58.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.562" endtime="20201110 08:34:58.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.559" endtime="20201110 08:34:58.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.552" endtime="20201110 08:34:58.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.165" endtime="20201110 08:34:58.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.165" endtime="20201110 08:34:58.589"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.607" endtime="20201110 08:34:58.622"></status>
</kw>
<msg timestamp="20201110 08:34:58.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.603" endtime="20201110 08:34:58.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.624" endtime="20201110 08:34:58.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.626" endtime="20201110 08:34:58.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.598" endtime="20201110 08:34:58.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.594" endtime="20201110 08:34:58.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.636" endtime="20201110 08:34:58.924"></status>
</kw>
<msg timestamp="20201110 08:34:58.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035974681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035980014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.635" endtime="20201110 08:34:58.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035974681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035980014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.929" endtime="20201110 08:34:58.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.937" endtime="20201110 08:34:58.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.632" endtime="20201110 08:34:58.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.630" endtime="20201110 08:34:58.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.943" level="INFO">${RESULT} = [{'time': 0.035980014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999996257e-06, 'source_diff': 5.332999999996257e-06}, {'time': 0.035990139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:58.940" endtime="20201110 08:34:58.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.957" level="INFO">${ACCURACY} = {'source_diff': [5.332999999996257e-06, 5.110999999995147e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 5.347000000002766e-06, 4.653000000000296e-06, 5.319999999996161e-06, 4.735999999998242e-06...</msg>
<status status="PASS" starttime="20201110 08:34:58.945" endtime="20201110 08:34:58.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.962" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.961" endtime="20201110 08:34:58.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.964" level="INFO">VALUE: [5.332999999996257e-06, 5.110999999995147e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 5.347000000002766e-06, 4.653000000000296e-06, 5.319999999996161e-06, 4.735999999998242e-06, 5.346999999995827e-06, 5.055999999996341e-06, 4.722999999998145e-06, 5.027999999997201e-06, 5.0000000000050004e-06, 5.055999999996341e-06, 4.762999999997908e-06, 4.443999999999282e-06, 4.708000000006041e-06, 5.027999999997201e-06, 4.985999999998492e-06, 5.07000000000285e-06, 4.7639999999973814e-06, 5.04200000000371e-06, 4.75000000000475e-06, 4.7499999999978115e-06, 4.429999999999712e-06, 5.0549999999968676e-06, 4.75000000000475e-06, 5.02800000000414e-06, 5.055999999996341e-06, 5.347000000002766e-06, 5.040999999997298e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.319999999996161e-06, 4.403000000000046e-06, 4.443999999999282e-06, 5.346999999995827e-06, 5.055999999996341e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 5.375000000001906e-06, 5.375000000001906e-06, 4.77800000000389e-06, 5.040999999997298e-06, 4.7499999999978115e-06, 4.7360000000051805e-06, 4.7360000000051805e-06, 5.04200000000371e-06, 5.05600000000328e-06, 4.735999999998242e-06]</msg>
<status status="PASS" starttime="20201110 08:34:58.963" endtime="20201110 08:34:58.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.958" endtime="20201110 08:34:58.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.968" endtime="20201110 08:34:58.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.971" endtime="20201110 08:34:58.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.970" endtime="20201110 08:34:58.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.966" endtime="20201110 08:34:58.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.590" endtime="20201110 08:34:58.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.589" endtime="20201110 08:34:58.992"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.001" endtime="20201110 08:34:59.015"></status>
</kw>
<msg timestamp="20201110 08:34:59.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.999" endtime="20201110 08:34:59.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.017" endtime="20201110 08:34:59.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.019" endtime="20201110 08:34:59.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.997" endtime="20201110 08:34:59.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.995" endtime="20201110 08:34:59.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.029" endtime="20201110 08:34:59.316"></status>
</kw>
<msg timestamp="20201110 08:34:59.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020560514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020566486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.028" endtime="20201110 08:34:59.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020560514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020566486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.320" endtime="20201110 08:34:59.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.329" endtime="20201110 08:34:59.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.025" endtime="20201110 08:34:59.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.023" endtime="20201110 08:34:59.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.335" level="INFO">${RESULT} = [{'time': 0.020566486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.020576514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.332" endtime="20201110 08:34:59.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.349" level="INFO">${ACCURACY} = {'source_diff': [5.971999999999922e-06, 5.667000000000866e-06, 5.652000000001822e-06, 5.931000000000686e-06, 6.276999999998978e-06, 5.6529999999978264e-06, 5.958000000000352e-06, 5.708000000000102e-06...</msg>
<status status="PASS" starttime="20201110 08:34:59.336" endtime="20201110 08:34:59.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.353" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.352" endtime="20201110 08:34:59.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.356" level="INFO">VALUE: [5.971999999999922e-06, 5.667000000000866e-06, 5.652000000001822e-06, 5.931000000000686e-06, 6.276999999998978e-06, 5.6529999999978264e-06, 5.958000000000352e-06, 5.708000000000102e-06, 5.971999999999922e-06, 5.667000000000866e-06, 5.6389999999982565e-06, 5.972000000003391e-06, 5.986000000002961e-06, 6.2639999999988816e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.666999999997396e-06, 5.958000000000352e-06, 6.278000000001921e-06, 5.666999999997396e-06, 6.276999999998978e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.680000000000962e-06, 6.3329999999972575e-06, 6.291999999998021e-06, 5.971999999999922e-06, 6.320000000000631e-06, 5.374999999998437e-06, 5.971999999999922e-06, 6.305999999997591e-06, 6.597000000000547e-06, 5.596999999999547e-06, 5.971999999999922e-06, 6.291999999998021e-06, 6.278000000001921e-06, 5.639000000001726e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 6.278000000001921e-06, 5.680000000000962e-06, 5.971999999999922e-06, 5.653000000001296e-06, 5.665999999997923e-06, 6.000000000002531e-06, 5.305000000000587e-06, 5.667000000000866e-06, 6.292000000001491e-06]</msg>
<status status="PASS" starttime="20201110 08:34:59.354" endtime="20201110 08:34:59.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.350" endtime="20201110 08:34:59.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.359" endtime="20201110 08:34:59.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.363" endtime="20201110 08:34:59.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.361" endtime="20201110 08:34:59.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.358" endtime="20201110 08:34:59.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.993" endtime="20201110 08:34:59.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.992" endtime="20201110 08:34:59.384"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.392" endtime="20201110 08:34:59.407"></status>
</kw>
<msg timestamp="20201110 08:34:59.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.391" endtime="20201110 08:34:59.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.409" endtime="20201110 08:34:59.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.411" endtime="20201110 08:34:59.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.388" endtime="20201110 08:34:59.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.386" endtime="20201110 08:34:59.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.422" endtime="20201110 08:34:59.710"></status>
</kw>
<msg timestamp="20201110 08:34:59.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019439069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019445694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.420" endtime="20201110 08:34:59.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019439069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019445694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.715" endtime="20201110 08:34:59.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.723" endtime="20201110 08:34:59.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.418" endtime="20201110 08:34:59.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.416" endtime="20201110 08:34:59.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.730" level="INFO">${RESULT} = [{'time': 0.019445694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.019455694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.726" endtime="20201110 08:34:59.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.743" level="INFO">${ACCURACY} = {'source_diff': [6.624999999999687e-06, 6.624999999999687e-06, 6.903000000002546e-06, 7.236000000000742e-06, 6.916000000002642e-06, 6.9169999999986465e-06, 7.2219999999977025e-06, 6.916000000002642e-0...</msg>
<status status="PASS" starttime="20201110 08:34:59.731" endtime="20201110 08:34:59.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.748" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.747" endtime="20201110 08:34:59.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.750" level="INFO">VALUE: [6.624999999999687e-06, 6.624999999999687e-06, 6.903000000002546e-06, 7.236000000000742e-06, 6.916000000002642e-06, 6.9169999999986465e-06, 7.2219999999977025e-06, 6.916000000002642e-06, 6.611000000000117e-06, 6.5969999999970774e-06, 7.222000000001172e-06, 6.597000000000547e-06, 6.9029999999990765e-06, 6.597000000000547e-06, 7.208000000001602e-06, 7.195000000001506e-06, 6.597000000000547e-06, 7.209000000001076e-06, 6.611000000000117e-06, 7.208999999997606e-06, 6.916000000002642e-06, 6.9169999999986465e-06, 6.888999999999507e-06, 7.222000000001172e-06, 7.513000000000658e-06, 7.195000000001506e-06, 6.584000000000451e-06, 6.583000000000977e-06, 6.888999999999507e-06, 6.584000000000451e-06, 6.611000000000117e-06, 7.514000000000132e-06, 7.514000000000132e-06, 6.597000000000547e-06, 7.2219999999977025e-06, 7.208000000001602e-06, 6.9029999999990765e-06, 7.527999999999702e-06, 7.2779999999994516e-06, 7.2079999999981326e-06, 6.9029999999990765e-06, 6.874999999999937e-06, 6.915999999999173e-06, 7.208000000001602e-06, 7.527999999999702e-06, 7.2079999999981326e-06, 6.888999999999507e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.236000000000742e-06]</msg>
<status status="PASS" starttime="20201110 08:34:59.749" endtime="20201110 08:34:59.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.744" endtime="20201110 08:34:59.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.759" endtime="20201110 08:34:59.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.763" endtime="20201110 08:34:59.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.761" endtime="20201110 08:34:59.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.757" endtime="20201110 08:34:59.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.385" endtime="20201110 08:34:59.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.384" endtime="20201110 08:34:59.784"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.792" endtime="20201110 08:34:59.808"></status>
</kw>
<msg timestamp="20201110 08:34:59.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.791" endtime="20201110 08:34:59.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.809" endtime="20201110 08:34:59.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.812" endtime="20201110 08:34:59.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.788" endtime="20201110 08:34:59.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.786" endtime="20201110 08:34:59.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.822" endtime="20201110 08:35:00.111"></status>
</kw>
<msg timestamp="20201110 08:35:00.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020358403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.820" endtime="20201110 08:35:00.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020358403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.115" endtime="20201110 08:35:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.123" endtime="20201110 08:35:00.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.818" endtime="20201110 08:35:00.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.816" endtime="20201110 08:35:00.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.130" level="INFO">${RESULT} = [{'time': 0.020358403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.020369167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:00.127" endtime="20201110 08:35:00.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.144" level="INFO">${ACCURACY} = {'source_diff': [8.139000000000757e-06, 7.84800000000127e-06, 7.527000000000228e-06, 8.471999999998953e-06, 8.139000000000757e-06, 8.139000000000757e-06, 8.138000000001283e-06, 8.125000000001187e-06, ...</msg>
<status status="PASS" starttime="20201110 08:35:00.131" endtime="20201110 08:35:00.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.149" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.148" endtime="20201110 08:35:00.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.151" level="INFO">VALUE: [8.139000000000757e-06, 7.84800000000127e-06, 7.527000000000228e-06, 8.471999999998953e-06, 8.139000000000757e-06, 8.139000000000757e-06, 8.138000000001283e-06, 8.125000000001187e-06, 8.153000000000327e-06, 7.514000000000132e-06, 8.125000000001187e-06, 8.388999999997537e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.846999999998328e-06, 7.611000000001117e-06, 7.832999999998758e-06, 7.805999999999091e-06, 8.138000000001283e-06, 7.5419999999992715e-06, 8.443999999999813e-06, 8.471999999998953e-06, 7.818999999999188e-06, 8.125000000001187e-06, 7.832999999998758e-06, 8.124999999997717e-06, 7.818999999999188e-06, 7.749999999997342e-06, 7.8340000000017e-06, 8.457999999999383e-06, 7.527999999999702e-06, 8.139000000000757e-06, 7.527999999999702e-06, 8.152000000000853e-06, 7.527999999999702e-06, 7.833000000002227e-06, 7.847000000001797e-06, 8.125000000001187e-06, 7.514000000000132e-06, 8.472000000002422e-06, 8.139000000000757e-06, 7.582999999998508e-06, 8.499999999998092e-06, 7.527999999999702e-06, 8.472000000002422e-06, 8.124999999997717e-06, 7.527999999999702e-06, 8.153000000000327e-06, 8.457999999999383e-06, 7.500000000000562e-06]</msg>
<status status="PASS" starttime="20201110 08:35:00.150" endtime="20201110 08:35:00.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.145" endtime="20201110 08:35:00.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.155" endtime="20201110 08:35:00.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.158" endtime="20201110 08:35:00.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.157" endtime="20201110 08:35:00.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.153" endtime="20201110 08:35:00.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.785" endtime="20201110 08:35:00.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.784" endtime="20201110 08:35:00.179"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.188" endtime="20201110 08:35:00.202"></status>
</kw>
<msg timestamp="20201110 08:35:00.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.186" endtime="20201110 08:35:00.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.203" endtime="20201110 08:35:00.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.206" endtime="20201110 08:35:00.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.183" endtime="20201110 08:35:00.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.181" endtime="20201110 08:35:00.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.216" endtime="20201110 08:35:00.503"></status>
</kw>
<msg timestamp="20201110 08:35:00.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019580236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.214" endtime="20201110 08:35:00.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019580236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.507" endtime="20201110 08:35:00.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.515" endtime="20201110 08:35:00.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.212" endtime="20201110 08:35:00.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.210" endtime="20201110 08:35:00.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.522" level="INFO">${RESULT} = [{'time': 0.019580236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.019595208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:00.518" endtime="20201110 08:35:00.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.535" level="INFO">${ACCURACY} = {'source_diff': [9.360999999999398e-06, 8.763999999997912e-06, 9.068999999996968e-06, 9.34800000000277e-06, 8.763000000001908e-06, 8.430000000000243e-06, 8.763999999997912e-06, 8.458999999998856e-06, ...</msg>
<status status="PASS" starttime="20201110 08:35:00.523" endtime="20201110 08:35:00.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.539" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.538" endtime="20201110 08:35:00.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.542" level="INFO">VALUE: [9.360999999999398e-06, 8.763999999997912e-06, 9.068999999996968e-06, 9.34800000000277e-06, 8.763000000001908e-06, 8.430000000000243e-06, 8.763999999997912e-06, 8.458999999998856e-06, 9.028000000001202e-06, 9.305999999997122e-06, 9.374999999998967e-06, 9.374999999998967e-06, 8.763000000001908e-06, 9.416000000001673e-06, 8.472999999998426e-06, 8.499999999998092e-06, 9.429999999997773e-06, 8.805000000000618e-06, 8.444999999999286e-06, 8.763999999997912e-06, 8.762999999998439e-06, 9.375000000002437e-06, 9.055000000000868e-06, 8.458000000002852e-06, 9.388999999998537e-06, 9.083000000000008e-06, 9.070000000003381e-06, 8.750000000001812e-06, 8.471999999998953e-06, 9.055000000000868e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.471999999998953e-06, 8.443999999999813e-06, 8.763999999997912e-06, 9.389000000002007e-06, 9.069000000000438e-06, 9.055000000000868e-06, 9.069999999999911e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.999999999998592e-06, 8.707999999999633e-06, 8.430999999999716e-06, 9.389000000002007e-06, 8.430999999999716e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.431000000003186e-06]</msg>
<status status="PASS" starttime="20201110 08:35:00.540" endtime="20201110 08:35:00.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.536" endtime="20201110 08:35:00.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.545" endtime="20201110 08:35:00.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.549" endtime="20201110 08:35:00.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.547" endtime="20201110 08:35:00.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.544" endtime="20201110 08:35:00.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.180" endtime="20201110 08:35:00.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.179" endtime="20201110 08:35:00.570"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.578" endtime="20201110 08:35:00.593"></status>
</kw>
<msg timestamp="20201110 08:35:00.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.577" endtime="20201110 08:35:00.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.594" endtime="20201110 08:35:00.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.597" endtime="20201110 08:35:00.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.574" endtime="20201110 08:35:00.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.572" endtime="20201110 08:35:00.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.609" endtime="20201110 08:35:00.896"></status>
</kw>
<msg timestamp="20201110 08:35:00.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.608" endtime="20201110 08:35:00.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020394361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.900" endtime="20201110 08:35:00.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.909" endtime="20201110 08:35:00.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.605" endtime="20201110 08:35:00.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.603" endtime="20201110 08:35:00.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.915" level="INFO">${RESULT} = [{'time': 0.020394361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.020408542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:00.912" endtime="20201110 08:35:00.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.929" level="INFO">${ACCURACY} = {'source_diff': [1.0318999999998218e-05, 1.0319999999997692e-05, 9.709000000000106e-06, 9.694000000001063e-06, 1.0318999999998218e-05, 9.971999999996983e-06, 1.0290999999999079e-05, 1.0306000000001592...</msg>
<status status="PASS" starttime="20201110 08:35:00.916" endtime="20201110 08:35:00.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.933" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.932" endtime="20201110 08:35:00.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.936" level="INFO">VALUE: [1.0318999999998218e-05, 1.0319999999997692e-05, 9.709000000000106e-06, 9.694000000001063e-06, 1.0318999999998218e-05, 9.971999999996983e-06, 1.0290999999999079e-05, 1.0306000000001592e-05, 1.0000000000003062e-05, 9.999999999999593e-06, 9.693999999997593e-06, 9.695000000000537e-06, 1.0319000000001688e-05, 9.986000000000023e-06, 9.679999999998024e-06, 1.0333000000001258e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 9.709000000000106e-06, 1.0333000000001258e-05, 1.0069000000001438e-05, 9.999999999999593e-06, 1.0318999999998218e-05, 9.986000000000023e-06, 1.0277999999998982e-05, 1.0013999999999162e-05, 9.652999999998357e-06, 1.0236000000000273e-05, 1.0306000000001592e-05, 1.0012999999999689e-05, 1.0000000000003062e-05, 9.388999999998537e-06, 9.709000000000106e-06, 9.999999999999593e-06, 1.0027999999998732e-05, 1.0320000000001162e-05, 1.0013999999999162e-05, 1.0318999999998218e-05, 9.694000000001063e-06, 9.999999999999593e-06, 1.0347000000000828e-05, 1.0305000000002118e-05, 1.0013999999999162e-05, 9.680000000001493e-06, 9.709000000000106e-06, 9.986000000000023e-06, 9.999999999999593e-06, 9.999999999999593e-06, 1.0347000000000828e-05, 1.0014000000002632e-05]</msg>
<status status="PASS" starttime="20201110 08:35:00.934" endtime="20201110 08:35:00.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.930" endtime="20201110 08:35:00.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.939" endtime="20201110 08:35:00.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.943" endtime="20201110 08:35:00.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.941" endtime="20201110 08:35:00.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.938" endtime="20201110 08:35:00.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.571" endtime="20201110 08:35:00.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.570" endtime="20201110 08:35:00.963"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.972" endtime="20201110 08:35:00.986"></status>
</kw>
<msg timestamp="20201110 08:35:00.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.971" endtime="20201110 08:35:00.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.988" endtime="20201110 08:35:00.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.990" endtime="20201110 08:35:00.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.968" endtime="20201110 08:35:00.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.966" endtime="20201110 08:35:00.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.000" endtime="20201110 08:35:01.287"></status>
</kw>
<msg timestamp="20201110 08:35:01.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019564556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.998" endtime="20201110 08:35:01.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019564556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.291" endtime="20201110 08:35:01.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.299" endtime="20201110 08:35:01.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.996" endtime="20201110 08:35:01.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.994" endtime="20201110 08:35:01.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.306" level="INFO">${RESULT} = [{'time': 0.019564556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0930999999998747e-05, 'source_diff': 1.0930999999998747e-05}, {'time': 0.019577597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:01.302" endtime="20201110 08:35:01.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.319" level="INFO">${ACCURACY} = {'source_diff': [1.0930999999998747e-05, 1.0610999999997178e-05, 1.0930000000002743e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 1.0943999999998844e-05, 1.1250000000000...</msg>
<status status="PASS" starttime="20201110 08:35:01.307" endtime="20201110 08:35:01.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.324" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.323" endtime="20201110 08:35:01.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.326" level="INFO">VALUE: [1.0930999999998747e-05, 1.0610999999997178e-05, 1.0930000000002743e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 1.0943999999998844e-05, 1.1250000000000843e-05, 1.0958999999997887e-05, 1.0638999999999788e-05, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0625000000000218e-05, 1.0915999999999704e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 1.0568999999998469e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0929999999999274e-05, 1.0889000000000038e-05, 1.0985999999997553e-05, 1.1221999999998233e-05, 1.0931000000002217e-05, 1.1236000000001273e-05, 1.0943999999998844e-05, 1.0540999999999329e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.1236000000001273e-05, 1.0945000000001787e-05, 1.0625000000000218e-05, 1.0597000000001078e-05, 1.0596999999997608e-05, 1.0916999999999177e-05, 1.0861000000000898e-05, 1.1221999999998233e-05, 1.1264000000000413e-05, 1.1235999999997803e-05, 1.1236000000001273e-05, 1.0943999999998844e-05, 1.0625000000000218e-05, 1.1237000000000746e-05, 1.1237000000000746e-05, 1.0945000000001787e-05, 1.0875000000000468e-05, 1.1209000000001607e-05, 1.1235999999997803e-05, 1.0625000000000218e-05, 1.1222000000001703e-05]</msg>
<status status="PASS" starttime="20201110 08:35:01.325" endtime="20201110 08:35:01.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.320" endtime="20201110 08:35:01.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.330" endtime="20201110 08:35:01.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.333" endtime="20201110 08:35:01.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.332" endtime="20201110 08:35:01.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.328" endtime="20201110 08:35:01.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.965" endtime="20201110 08:35:01.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.964" endtime="20201110 08:35:01.354"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.363" endtime="20201110 08:35:01.377"></status>
</kw>
<msg timestamp="20201110 08:35:01.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.361" endtime="20201110 08:35:01.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.378" endtime="20201110 08:35:01.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.381" endtime="20201110 08:35:01.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.359" endtime="20201110 08:35:01.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.357" endtime="20201110 08:35:01.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.391" endtime="20201110 08:35:01.677"></status>
</kw>
<msg timestamp="20201110 08:35:01.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.389" endtime="20201110 08:35:01.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.681" endtime="20201110 08:35:01.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.689" endtime="20201110 08:35:01.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.387" endtime="20201110 08:35:01.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.385" endtime="20201110 08:35:01.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.696" level="INFO">${RESULT} = [{'time': 0.019537819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1554999999999899e-05, 'source_diff': 1.1554999999999899e-05}, {'time': 0.019552708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:01.692" endtime="20201110 08:35:01.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.711" level="INFO">${ACCURACY} = {'source_diff': [1.1554999999999899e-05, 1.1874999999997998e-05, 1.2166000000000954e-05, 1.2167000000000427e-05, 1.1861000000001898e-05, 1.2167000000000427e-05, 1.1860999999998428e-05, 1.1554999999999...</msg>
<status status="PASS" starttime="20201110 08:35:01.697" endtime="20201110 08:35:01.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.717" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.716" endtime="20201110 08:35:01.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.721" level="INFO">VALUE: [1.1554999999999899e-05, 1.1874999999997998e-05, 1.2166000000000954e-05, 1.2167000000000427e-05, 1.1861000000001898e-05, 1.2167000000000427e-05, 1.1860999999998428e-05, 1.1554999999999899e-05, 1.1528000000000233e-05, 1.2485999999999053e-05, 1.1875000000001468e-05, 1.2167000000000427e-05, 1.2472999999998957e-05, 1.1875000000001468e-05, 1.1874999999997998e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.1541999999999802e-05, 1.2165999999997484e-05, 1.1541000000000329e-05, 1.1930999999999747e-05, 1.2167000000000427e-05, 1.2472999999998957e-05, 1.2499999999998623e-05, 1.2167000000000427e-05, 1.1528000000000233e-05, 1.1917000000000177e-05, 1.1847999999998332e-05, 1.1860999999998428e-05, 1.2167000000000427e-05, 1.2167000000000427e-05, 1.1861000000001898e-05, 1.1555999999999372e-05, 1.1861000000001898e-05, 1.1846999999998858e-05, 1.1554999999999899e-05, 1.1541999999999802e-05, 1.2180000000000524e-05, 1.1514000000000663e-05, 1.1861000000001898e-05, 1.1500000000001093e-05, 1.2167000000000427e-05, 1.2485999999999053e-05, 1.1582999999999039e-05, 1.1847000000002328e-05, 1.2499999999998623e-05, 1.2138999999997818e-05, 1.2166999999996958e-05, 1.1875000000001468e-05, 1.1541999999999802e-05]</msg>
<status status="PASS" starttime="20201110 08:35:01.719" endtime="20201110 08:35:01.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.712" endtime="20201110 08:35:01.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.726" endtime="20201110 08:35:01.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.732" endtime="20201110 08:35:01.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.730" endtime="20201110 08:35:01.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.724" endtime="20201110 08:35:01.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.355" endtime="20201110 08:35:01.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.354" endtime="20201110 08:35:01.753"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.762" endtime="20201110 08:35:01.778"></status>
</kw>
<msg timestamp="20201110 08:35:01.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.760" endtime="20201110 08:35:01.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.780" endtime="20201110 08:35:01.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.782" endtime="20201110 08:35:01.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.758" endtime="20201110 08:35:01.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.756" endtime="20201110 08:35:01.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.793" endtime="20201110 08:35:02.078"></status>
</kw>
<msg timestamp="20201110 08:35:02.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020637889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.791" endtime="20201110 08:35:02.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020637889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.082" endtime="20201110 08:35:02.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.090" endtime="20201110 08:35:02.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.788" endtime="20201110 08:35:02.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.787" endtime="20201110 08:35:02.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.097" level="INFO">${RESULT} = [{'time': 0.020637889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3416999999998208e-05, 'source_diff': 1.3416999999998208e-05}, {'time': 0.020656958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:02.094" endtime="20201110 08:35:02.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.110" level="INFO">${ACCURACY} = {'source_diff': [1.3416999999998208e-05, 1.3388999999999068e-05, 1.3097000000000109e-05, 1.2805000000001149e-05, 1.3097000000000109e-05, 1.3111000000003148e-05, 1.3110999999999678e-05, 1.3401999999999...</msg>
<status status="PASS" starttime="20201110 08:35:02.098" endtime="20201110 08:35:02.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.115" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.114" endtime="20201110 08:35:02.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.118" level="INFO">VALUE: [1.3416999999998208e-05, 1.3388999999999068e-05, 1.3097000000000109e-05, 1.2805000000001149e-05, 1.3097000000000109e-05, 1.3111000000003148e-05, 1.3110999999999678e-05, 1.3401999999999165e-05, 1.3097000000000109e-05, 1.3083000000000539e-05, 1.3416999999998208e-05, 1.2472999999998957e-05, 1.2791000000001579e-05, 1.2471999999999483e-05, 1.3403000000002108e-05, 1.3097000000000109e-05, 1.3402999999998638e-05, 1.2805000000001149e-05, 1.3401999999999165e-05, 1.2486999999998527e-05, 1.2764000000001913e-05, 1.2513999999998193e-05, 1.3110999999999678e-05, 1.3097000000000109e-05, 1.3415999999998734e-05, 1.3084000000000012e-05, 1.3110999999999678e-05, 1.3472000000000484e-05, 1.2792000000001053e-05, 1.302699999999879e-05, 1.3110999999999678e-05, 1.3402999999998638e-05, 1.3374999999999498e-05, 1.2471999999999483e-05, 1.3402999999998638e-05, 1.3097000000000109e-05, 1.2485999999999053e-05, 1.2792000000001053e-05, 1.2791999999997583e-05, 1.3110999999999678e-05, 1.2806000000000622e-05, 1.3430000000001774e-05, 1.3110999999999678e-05, 1.3403000000002108e-05, 1.3124999999999248e-05, 1.3110999999999678e-05, 1.3084000000000012e-05, 1.2792000000001053e-05, 1.3097000000000109e-05, 1.279099999999811e-05]</msg>
<status status="PASS" starttime="20201110 08:35:02.116" endtime="20201110 08:35:02.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.111" endtime="20201110 08:35:02.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.121" endtime="20201110 08:35:02.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.125" endtime="20201110 08:35:02.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.123" endtime="20201110 08:35:02.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.120" endtime="20201110 08:35:02.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.754" endtime="20201110 08:35:02.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.754" endtime="20201110 08:35:02.146"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.154" endtime="20201110 08:35:02.169"></status>
</kw>
<msg timestamp="20201110 08:35:02.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.153" endtime="20201110 08:35:02.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.171" endtime="20201110 08:35:02.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.173" endtime="20201110 08:35:02.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.150" endtime="20201110 08:35:02.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.148" endtime="20201110 08:35:02.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.183" endtime="20201110 08:35:02.469"></status>
</kw>
<msg timestamp="20201110 08:35:02.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019567153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019580847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.182" endtime="20201110 08:35:02.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019567153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019580847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.473" endtime="20201110 08:35:02.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.482" endtime="20201110 08:35:02.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.179" endtime="20201110 08:35:02.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.177" endtime="20201110 08:35:02.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.488" level="INFO">${RESULT} = [{'time': 0.019580847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.019599833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:02.485" endtime="20201110 08:35:02.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.502" level="INFO">${ACCURACY} = {'source_diff': [1.3693999999998124e-05, 1.402699999999979e-05, 1.4028000000002733e-05, 1.3722000000000734e-05, 1.3723000000000207e-05, 1.3388999999999068e-05, 1.4013999999999693e-05, 1.36940000000015...</msg>
<status status="PASS" starttime="20201110 08:35:02.489" endtime="20201110 08:35:02.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.506" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.505" endtime="20201110 08:35:02.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.509" level="INFO">VALUE: [1.3693999999998124e-05, 1.402699999999979e-05, 1.4028000000002733e-05, 1.3722000000000734e-05, 1.3723000000000207e-05, 1.3388999999999068e-05, 1.4013999999999693e-05, 1.3694000000001594e-05, 1.433299999999832e-05, 1.3693999999998124e-05, 1.3707999999997694e-05, 1.3458000000000914e-05, 1.3708000000001164e-05, 1.3723000000000207e-05, 1.4013999999999693e-05, 1.3722999999996738e-05, 1.4333000000001789e-05, 1.3709000000000637e-05, 1.431899999999875e-05, 1.4028000000002733e-05, 1.402699999999979e-05, 1.404099999999936e-05, 1.4013999999999693e-05, 1.433299999999832e-05, 1.4348000000000832e-05, 1.3403000000002108e-05, 1.4333999999997793e-05, 1.433299999999832e-05, 1.3693999999998124e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.4013999999999693e-05, 1.3723000000000207e-05, 1.4013999999999693e-05, 1.4333000000001789e-05, 1.4013999999999693e-05, 1.4084000000001012e-05, 1.3417000000001678e-05, 1.4347000000001359e-05, 1.4028000000002733e-05, 1.4042000000002303e-05, 1.4041999999998833e-05, 1.3749999999999873e-05, 1.3403000000002108e-05, 1.3972000000000984e-05, 1.3708000000001164e-05, 1.4334000000001262e-05, 1.4055999999998403e-05, 1.3417000000001678e-05, 1.4041999999998833e-05]</msg>
<status status="PASS" starttime="20201110 08:35:02.507" endtime="20201110 08:35:02.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.502" endtime="20201110 08:35:02.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.512" endtime="20201110 08:35:02.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.516" endtime="20201110 08:35:02.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.514" endtime="20201110 08:35:02.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.510" endtime="20201110 08:35:02.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.146" endtime="20201110 08:35:02.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.146" endtime="20201110 08:35:02.536"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.545" endtime="20201110 08:35:02.560"></status>
</kw>
<msg timestamp="20201110 08:35:02.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.543" endtime="20201110 08:35:02.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.562" endtime="20201110 08:35:02.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.564" endtime="20201110 08:35:02.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.541" endtime="20201110 08:35:02.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.539" endtime="20201110 08:35:02.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.574" endtime="20201110 08:35:02.860"></status>
</kw>
<msg timestamp="20201110 08:35:02.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.573" endtime="20201110 08:35:02.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.864" endtime="20201110 08:35:02.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.872" endtime="20201110 08:35:02.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.570" endtime="20201110 08:35:02.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.569" endtime="20201110 08:35:02.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.879" level="INFO">${RESULT} = [{'time': 0.019926722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.529100000000061e-05, 'source_diff': 1.529100000000061e-05}, {'time': 0.019944819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:02.876" endtime="20201110 08:35:02.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.892" level="INFO">${ACCURACY} = {'source_diff': [1.529100000000061e-05, 1.5249999999997904e-05, 1.4652999999999888e-05, 1.4943999999999374e-05, 1.4625000000000749e-05, 1.4957999999998944e-05, 1.5264000000000943e-05, 1.49439999999993...</msg>
<status status="PASS" starttime="20201110 08:35:02.880" endtime="20201110 08:35:02.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.897" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.896" endtime="20201110 08:35:02.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.899" level="INFO">VALUE: [1.529100000000061e-05, 1.5249999999997904e-05, 1.4652999999999888e-05, 1.4943999999999374e-05, 1.4625000000000749e-05, 1.4957999999998944e-05, 1.5264000000000943e-05, 1.4943999999999374e-05, 1.5305999999999653e-05, 1.4957999999998944e-05, 1.5207999999999194e-05, 1.4943999999999374e-05, 1.4583000000002039e-05, 1.5264000000000943e-05, 1.4957999999998944e-05, 1.4667000000002928e-05, 1.4625000000000749e-05, 1.5263999999997474e-05, 1.4943999999999374e-05, 1.527700000000104e-05, 1.5569999999999473e-05, 1.4652999999999888e-05, 1.5262999999998e-05, 1.530500000000018e-05, 1.4999999999997654e-05, 1.533299999999932e-05, 1.4652999999999888e-05, 1.4945000000002318e-05, 1.4639000000000318e-05, 1.4958000000002414e-05, 1.4944999999998848e-05, 1.5264000000000943e-05, 1.4929999999999805e-05, 1.5528000000000763e-05, 1.4929999999999805e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.5264000000000943e-05, 1.555500000000043e-05, 1.4652999999999888e-05, 1.4957999999998944e-05, 1.5264000000000943e-05, 1.5278000000000513e-05, 1.4957999999998944e-05, 1.5014000000000693e-05, 1.4666999999999458e-05, 1.4944999999998848e-05, 1.4929999999999805e-05, 1.5250000000001374e-05, 1.4944999999998848e-05]</msg>
<status status="PASS" starttime="20201110 08:35:02.898" endtime="20201110 08:35:02.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.893" endtime="20201110 08:35:02.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.903" endtime="20201110 08:35:02.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.906" endtime="20201110 08:35:02.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.905" endtime="20201110 08:35:02.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.901" endtime="20201110 08:35:02.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.537" endtime="20201110 08:35:02.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.537" endtime="20201110 08:35:02.927"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.936" endtime="20201110 08:35:02.950"></status>
</kw>
<msg timestamp="20201110 08:35:02.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.934" endtime="20201110 08:35:02.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.952" endtime="20201110 08:35:02.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.954" endtime="20201110 08:35:02.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.932" endtime="20201110 08:35:02.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.930" endtime="20201110 08:35:02.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.964" endtime="20201110 08:35:03.251"></status>
</kw>
<msg timestamp="20201110 08:35:03.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:02.963" endtime="20201110 08:35:03.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:03.255" endtime="20201110 08:35:03.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.263" endtime="20201110 08:35:03.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.960" endtime="20201110 08:35:03.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.959" endtime="20201110 08:35:03.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.270" level="INFO">${RESULT} = [{'time': 0.019632375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5875000000002e-05, 'source_diff': 1.5875000000002e-05}, {'time': 0.019653333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201110 08:35:03.267" endtime="20201110 08:35:03.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.285" level="INFO">${ACCURACY} = {'source_diff': [1.5875000000002e-05, 1.5651999999997945e-05, 1.5944999999999848e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.591700000000071e-05, 1.58889999999981e-05, 1.588900000000157e-05...</msg>
<status status="PASS" starttime="20201110 08:35:03.271" endtime="20201110 08:35:03.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.290" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.289" endtime="20201110 08:35:03.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.292" level="INFO">VALUE: [1.5875000000002e-05, 1.5651999999997945e-05, 1.5944999999999848e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.591700000000071e-05, 1.58889999999981e-05, 1.588900000000157e-05, 1.584699999999939e-05, 1.5528000000000763e-05, 1.58889999999981e-05, 1.6513999999998724e-05, 1.6221999999999764e-05, 1.6181000000000528e-05, 1.5569999999999473e-05, 1.5875000000002e-05, 1.5887999999998625e-05, 1.5875000000002e-05, 1.588900000000157e-05, 1.584699999999939e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.58889999999981e-05, 1.5569999999999473e-05, 1.555500000000043e-05, 1.6249999999998904e-05, 1.558299999999957e-05, 1.6195000000000098e-05, 1.6194000000000625e-05, 1.6208000000000194e-05, 1.6235999999999334e-05, 1.555500000000043e-05, 1.6445000000000348e-05, 1.6180000000001055e-05, 1.6179999999997585e-05, 1.6195000000000098e-05, 1.590300000000114e-05, 1.6194000000000625e-05, 1.5555999999999903e-05, 1.6166000000001485e-05, 1.590300000000114e-05, 1.5569999999999473e-05, 1.5887999999998625e-05, 1.6207999999996725e-05, 1.5875000000002e-05, 1.584699999999939e-05, 1.559699999999914e-05, 1.5528000000000763e-05, 1.580500000000068e-05, 1.6208999999999668e-05]</msg>
<status status="PASS" starttime="20201110 08:35:03.291" endtime="20201110 08:35:03.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.286" endtime="20201110 08:35:03.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.296" endtime="20201110 08:35:03.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.299" endtime="20201110 08:35:03.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.298" endtime="20201110 08:35:03.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.294" endtime="20201110 08:35:03.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.928" endtime="20201110 08:35:03.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.927" endtime="20201110 08:35:03.320"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.329" endtime="20201110 08:35:03.344"></status>
</kw>
<msg timestamp="20201110 08:35:03.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.327" endtime="20201110 08:35:03.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.345" endtime="20201110 08:35:03.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.348" endtime="20201110 08:35:03.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.325" endtime="20201110 08:35:03.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.323" endtime="20201110 08:35:03.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.358" endtime="20201110 08:35:03.643"></status>
</kw>
<msg timestamp="20201110 08:35:03.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.356" endtime="20201110 08:35:03.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.647" endtime="20201110 08:35:03.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.656" endtime="20201110 08:35:03.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.353" endtime="20201110 08:35:03.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.352" endtime="20201110 08:35:03.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.662" level="INFO">${RESULT} = [{'time': 0.019677528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6806000000001153e-05, 'source_diff': 1.6806000000001153e-05}, {'time': 0.0196975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:03.659" endtime="20201110 08:35:03.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.676" level="INFO">${ACCURACY} = {'source_diff': [1.6806000000001153e-05, 1.6485999999999584e-05, 1.7401999999999695e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.680500000000168e-05, 1.713899999999935e-05, 1.680500000000168e-...</msg>
<status status="PASS" starttime="20201110 08:35:03.663" endtime="20201110 08:35:03.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.680" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.679" endtime="20201110 08:35:03.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.683" level="INFO">VALUE: [1.6806000000001153e-05, 1.6485999999999584e-05, 1.7401999999999695e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.680500000000168e-05, 1.713899999999935e-05, 1.680500000000168e-05, 1.6820000000000723e-05, 1.687499999999953e-05, 1.683299999999735e-05, 1.7429999999998835e-05, 1.743100000000178e-05, 1.7415999999999265e-05, 1.712499999999978e-05, 1.709700000000064e-05, 1.6500000000002624e-05, 1.743099999999831e-05, 1.6791999999998114e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.6791999999998114e-05, 1.716699999999849e-05, 1.7459000000000918e-05, 1.6499999999999154e-05, 1.741699999999874e-05, 1.713899999999935e-05, 1.744500000000135e-05, 1.708300000000107e-05, 1.70690000000015e-05, 1.7194000000001625e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.641699999999774e-05, 1.7429999999998835e-05, 1.711100000000021e-05, 1.7151999999999445e-05, 1.743099999999831e-05, 1.6513999999998724e-05, 1.711100000000021e-05, 1.7098000000000113e-05, 1.6500000000002624e-05, 1.683300000000082e-05, 1.743099999999831e-05, 1.712499999999978e-05, 1.7500000000000154e-05, 1.6499999999999154e-05, 1.681900000000125e-05]</msg>
<status status="PASS" starttime="20201110 08:35:03.681" endtime="20201110 08:35:03.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.677" endtime="20201110 08:35:03.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.686" endtime="20201110 08:35:03.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.690" endtime="20201110 08:35:03.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.688" endtime="20201110 08:35:03.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.685" endtime="20201110 08:35:03.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.321" endtime="20201110 08:35:03.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.320" endtime="20201110 08:35:03.711"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.719" endtime="20201110 08:35:03.734"></status>
</kw>
<msg timestamp="20201110 08:35:03.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.718" endtime="20201110 08:35:03.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.736" endtime="20201110 08:35:03.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.738" endtime="20201110 08:35:03.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.715" endtime="20201110 08:35:03.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.713" endtime="20201110 08:35:03.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.748" endtime="20201110 08:35:04.035"></status>
</kw>
<msg timestamp="20201110 08:35:04.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020734903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020752347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.747" endtime="20201110 08:35:04.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020734903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020752347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.039" endtime="20201110 08:35:04.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.047" endtime="20201110 08:35:04.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.744" endtime="20201110 08:35:04.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.742" endtime="20201110 08:35:04.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.054" level="INFO">${RESULT} = [{'time': 0.020752347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7444000000001875e-05, 'source_diff': 1.7444000000001875e-05}, {'time': 0.020773375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:04.051" endtime="20201110 08:35:04.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.067" level="INFO">${ACCURACY} = {'source_diff': [1.7444000000001875e-05, 1.8264000000000474e-05, 1.768099999999856e-05, 1.834699999999842e-05, 1.7763999999999974e-05, 1.7791999999999114e-05, 1.8000000000000654e-05, 1.773600000000083...</msg>
<status status="PASS" starttime="20201110 08:35:04.055" endtime="20201110 08:35:04.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.072" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.071" endtime="20201110 08:35:04.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.074" level="INFO">VALUE: [1.7444000000001875e-05, 1.8264000000000474e-05, 1.768099999999856e-05, 1.834699999999842e-05, 1.7763999999999974e-05, 1.7791999999999114e-05, 1.8000000000000654e-05, 1.7736000000000834e-05, 1.8069999999998504e-05, 1.805499999999946e-05, 1.743100000000178e-05, 1.7736000000000834e-05, 1.8027999999999794e-05, 1.7429999999998835e-05, 1.7763999999999974e-05, 1.8055999999998934e-05, 1.7443999999998405e-05, 1.7777999999999544e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.7999999999997185e-05, 1.7750000000000404e-05, 1.7805999999998684e-05, 1.7680000000002555e-05, 1.7415999999999265e-05, 1.7750000000000404e-05, 1.8042000000002834e-05, 1.8000000000000654e-05, 1.7736000000000834e-05, 1.7735999999997365e-05, 1.7458000000001445e-05, 1.837500000000103e-05, 1.805499999999946e-05, 1.7429999999998835e-05, 1.833300000000232e-05, 1.836099999999799e-05, 1.7735999999997365e-05, 1.8027999999999794e-05, 1.7750000000000404e-05, 1.8056000000002403e-05, 1.8041999999999364e-05, 1.8388000000001126e-05, 1.8070000000001973e-05, 1.7723000000000738e-05, 1.804099999999989e-05, 1.809700000000164e-05, 1.8348000000001363e-05, 1.7736000000000834e-05, 1.834700000000189e-05, 1.804099999999989e-05]</msg>
<status status="PASS" starttime="20201110 08:35:04.073" endtime="20201110 08:35:04.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.068" endtime="20201110 08:35:04.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.078" endtime="20201110 08:35:04.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.081" endtime="20201110 08:35:04.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.080" endtime="20201110 08:35:04.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.076" endtime="20201110 08:35:04.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.711" endtime="20201110 08:35:04.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.711" endtime="20201110 08:35:04.102"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.111" endtime="20201110 08:35:04.125"></status>
</kw>
<msg timestamp="20201110 08:35:04.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.109" endtime="20201110 08:35:04.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.127" endtime="20201110 08:35:04.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.129" endtime="20201110 08:35:04.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.107" endtime="20201110 08:35:04.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.105" endtime="20201110 08:35:04.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.139" endtime="20201110 08:35:04.426"></status>
</kw>
<msg timestamp="20201110 08:35:04.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019525264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.138" endtime="20201110 08:35:04.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019525264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.430" endtime="20201110 08:35:04.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.438" endtime="20201110 08:35:04.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.135" endtime="20201110 08:35:04.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.133" endtime="20201110 08:35:04.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.445" level="INFO">${RESULT} = [{'time': 0.019525264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9278000000001044e-05, 'source_diff': 1.9278000000001044e-05}, {'time': 0.019548056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:04.442" endtime="20201110 08:35:04.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.458" level="INFO">${ACCURACY} = {'source_diff': [1.9278000000001044e-05, 1.866699999999999e-05, 1.9000000000001654e-05, 1.8666000000000516e-05, 1.9000000000001654e-05, 1.8651999999997476e-05, 1.9042000000000364e-05, 1.89859999999986...</msg>
<status status="PASS" starttime="20201110 08:35:04.446" endtime="20201110 08:35:04.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.463" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.462" endtime="20201110 08:35:04.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.466" level="INFO">VALUE: [1.9278000000001044e-05, 1.866699999999999e-05, 1.9000000000001654e-05, 1.8666000000000516e-05, 1.9000000000001654e-05, 1.8651999999997476e-05, 1.9042000000000364e-05, 1.8985999999998615e-05, 1.9207999999999725e-05, 1.8972000000002515e-05, 1.8986000000002085e-05, 1.836099999999799e-05, 1.9236000000002335e-05, 1.8987000000001558e-05, 1.930500000000071e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.895900000000242e-05, 1.9263999999998005e-05, 1.9306000000000184e-05, 1.8972000000002515e-05, 1.9263999999998005e-05, 1.9333999999999324e-05, 1.891700000000024e-05, 1.863900000000085e-05, 1.9292000000000614e-05, 1.9278000000001044e-05, 1.8957999999999475e-05, 1.866699999999999e-05, 1.929099999999767e-05, 1.9292000000000614e-05, 1.8973000000001988e-05, 1.9278000000001044e-05, 1.8416000000000265e-05, 1.9264000000001474e-05, 1.868099999999956e-05, 1.897299999999852e-05, 1.836099999999799e-05, 1.9361999999998464e-05, 1.866699999999999e-05, 1.837499999999756e-05, 1.866699999999999e-05, 1.9598000000002613e-05, 1.9597999999999144e-05, 1.9292000000000614e-05, 1.9042000000000364e-05, 1.8943999999999905e-05, 1.895899999999895e-05, 1.866699999999999e-05]</msg>
<status status="PASS" starttime="20201110 08:35:04.464" endtime="20201110 08:35:04.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.459" endtime="20201110 08:35:04.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.469" endtime="20201110 08:35:04.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.473" endtime="20201110 08:35:04.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.471" endtime="20201110 08:35:04.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.467" endtime="20201110 08:35:04.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.103" endtime="20201110 08:35:04.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.103" endtime="20201110 08:35:04.494"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.503" endtime="20201110 08:35:04.518"></status>
</kw>
<msg timestamp="20201110 08:35:04.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.501" endtime="20201110 08:35:04.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.520" endtime="20201110 08:35:04.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.522" endtime="20201110 08:35:04.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.499" endtime="20201110 08:35:04.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.497" endtime="20201110 08:35:04.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.532" endtime="20201110 08:35:04.817"></status>
</kw>
<msg timestamp="20201110 08:35:04.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020063403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.531" endtime="20201110 08:35:04.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020063403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.821" endtime="20201110 08:35:04.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.830" endtime="20201110 08:35:04.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.528" endtime="20201110 08:35:04.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.527" endtime="20201110 08:35:04.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.837" level="INFO">${RESULT} = [{'time': 0.020063403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.959699999999967e-05, 'source_diff': 1.959699999999967e-05}, {'time': 0.020087444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:04.833" endtime="20201110 08:35:04.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.851" level="INFO">${ACCURACY} = {'source_diff': [1.959699999999967e-05, 2.0194000000001155e-05, 2.054099999999892e-05, 2.0222000000000295e-05, 1.9833999999999824e-05, 2.023699999999934e-05, 1.963899999999838e-05, 1.959699999999967e-...</msg>
<status status="PASS" starttime="20201110 08:35:04.838" endtime="20201110 08:35:04.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.856" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.855" endtime="20201110 08:35:04.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.858" level="INFO">VALUE: [1.959699999999967e-05, 2.0194000000001155e-05, 2.054099999999892e-05, 2.0222000000000295e-05, 1.9833999999999824e-05, 2.023699999999934e-05, 1.963899999999838e-05, 1.959699999999967e-05, 1.988899999999863e-05, 1.9902000000002196e-05, 2.0222000000000295e-05, 1.95830000000001e-05, 1.9901999999998726e-05, 1.961099999999924e-05, 1.9597999999999144e-05, 2.0207999999997256e-05, 2.0222000000000295e-05, 1.99029999999982e-05, 2.0541999999998395e-05, 1.961099999999924e-05, 1.991700000000124e-05, 1.9597999999999144e-05, 2.0458000000000975e-05, 1.961100000000271e-05, 1.961099999999924e-05, 2.0235999999999865e-05, 1.991700000000124e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.995899999999995e-05, 1.968100000000056e-05, 1.990300000000167e-05, 1.959700000000314e-05, 2.02090000000002e-05, 1.991700000000124e-05, 1.993100000000081e-05, 2.022299999999977e-05, 1.9901999999998726e-05, 1.9915999999998296e-05, 1.959699999999967e-05, 2.0222000000000295e-05, 1.959699999999967e-05, 2.0263999999999005e-05, 1.990300000000167e-05, 2.0208000000000725e-05, 1.959699999999967e-05, 2.0556000000001434e-05, 2.0193999999997686e-05, 2.0250000000002905e-05, 1.9583999999999574e-05]</msg>
<status status="PASS" starttime="20201110 08:35:04.857" endtime="20201110 08:35:04.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.852" endtime="20201110 08:35:04.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.868" endtime="20201110 08:35:04.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.872" endtime="20201110 08:35:04.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.870" endtime="20201110 08:35:04.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.866" endtime="20201110 08:35:04.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.495" endtime="20201110 08:35:04.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.494" endtime="20201110 08:35:04.893"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.901" endtime="20201110 08:35:04.916"></status>
</kw>
<msg timestamp="20201110 08:35:04.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.900" endtime="20201110 08:35:04.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.917" endtime="20201110 08:35:04.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.920" endtime="20201110 08:35:04.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.897" endtime="20201110 08:35:04.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.895" endtime="20201110 08:35:04.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.930" endtime="20201110 08:35:05.218"></status>
</kw>
<msg timestamp="20201110 08:35:05.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019622778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.928" endtime="20201110 08:35:05.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019622778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.222" endtime="20201110 08:35:05.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.230" endtime="20201110 08:35:05.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.926" endtime="20201110 08:35:05.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.924" endtime="20201110 08:35:05.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.237" level="INFO">${RESULT} = [{'time': 0.019622778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.143099999999884e-05, 'source_diff': 2.143099999999884e-05}, {'time': 0.019649708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:05.233" endtime="20201110 08:35:05.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.250" level="INFO">${ACCURACY} = {'source_diff': [2.143099999999884e-05, 2.083299999999788e-05, 2.1070000000001504e-05, 2.0527999999998825e-05, 2.0499999999999685e-05, 2.083300000000135e-05, 2.080499999999874e-05, 2.0527999999998825e...</msg>
<status status="PASS" starttime="20201110 08:35:05.238" endtime="20201110 08:35:05.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.255" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.254" endtime="20201110 08:35:05.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.257" level="INFO">VALUE: [2.143099999999884e-05, 2.083299999999788e-05, 2.1070000000001504e-05, 2.0527999999998825e-05, 2.0499999999999685e-05, 2.083300000000135e-05, 2.080499999999874e-05, 2.0527999999998825e-05, 2.0527999999998825e-05, 2.0527999999998825e-05, 2.083300000000135e-05, 2.055499999999849e-05, 2.113899999999988e-05, 2.084699999999745e-05, 2.0527999999998825e-05, 2.10830000000016e-05, 2.115299999999945e-05, 2.1180000000002586e-05, 2.115299999999945e-05, 2.083300000000135e-05, 2.0848000000000394e-05, 2.0820000000001254e-05, 2.0499999999999685e-05, 2.0833999999997355e-05, 2.081900000000178e-05, 2.1444000000002406e-05, 2.0499999999999685e-05, 2.115299999999945e-05, 2.1083999999997605e-05, 2.0527999999998825e-05, 2.1486000000001115e-05, 2.1457999999998506e-05, 2.083300000000135e-05, 2.088899999999963e-05, 2.0541999999998395e-05, 2.0569999999997535e-05, 2.14029999999997e-05, 2.113899999999988e-05, 2.112500000000031e-05, 2.083299999999788e-05, 2.1458000000001975e-05, 2.1458000000001975e-05, 2.113899999999988e-05, 2.0555999999997965e-05, 2.0527999999998825e-05, 2.0527999999998825e-05, 2.115299999999945e-05, 2.145900000000145e-05, 2.0834000000000824e-05, 2.084699999999745e-05]</msg>
<status status="PASS" starttime="20201110 08:35:05.256" endtime="20201110 08:35:05.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.251" endtime="20201110 08:35:05.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.261" endtime="20201110 08:35:05.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.264" endtime="20201110 08:35:05.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.263" endtime="20201110 08:35:05.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.259" endtime="20201110 08:35:05.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.894" endtime="20201110 08:35:05.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.893" endtime="20201110 08:35:05.285"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.294" endtime="20201110 08:35:05.309"></status>
</kw>
<msg timestamp="20201110 08:35:05.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.292" endtime="20201110 08:35:05.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.311" endtime="20201110 08:35:05.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.314" endtime="20201110 08:35:05.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.290" endtime="20201110 08:35:05.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.288" endtime="20201110 08:35:05.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.324" endtime="20201110 08:35:05.608"></status>
</kw>
<msg timestamp="20201110 08:35:05.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.322" endtime="20201110 08:35:05.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.612" endtime="20201110 08:35:05.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.621" endtime="20201110 08:35:05.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.320" endtime="20201110 08:35:05.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.318" endtime="20201110 08:35:05.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.627" level="INFO">${RESULT} = [{'time': 0.019968528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.236099999999852e-05, 'source_diff': 2.236099999999852e-05}, {'time': 0.019995431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:05.624" endtime="20201110 08:35:05.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.641" level="INFO">${ACCURACY} = {'source_diff': [2.236099999999852e-05, 2.2070000000002504e-05, 2.236100000000199e-05, 2.176300000000103e-05, 2.1778000000000075e-05, 2.1458000000001975e-05, 2.208299999999913e-05, 2.206899999999956e-...</msg>
<status status="PASS" starttime="20201110 08:35:05.628" endtime="20201110 08:35:05.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.645" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.644" endtime="20201110 08:35:05.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.648" level="INFO">VALUE: [2.236099999999852e-05, 2.2070000000002504e-05, 2.236100000000199e-05, 2.176300000000103e-05, 2.1778000000000075e-05, 2.1458000000001975e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.1778000000000075e-05, 2.2388000000001657e-05, 2.2055999999999465e-05, 2.206899999999956e-05, 2.238899999999766e-05, 2.1471999999998076e-05, 2.209700000000217e-05, 2.144499999999841e-05, 2.211100000000174e-05, 2.238900000000113e-05, 2.2041999999999895e-05, 2.1764000000000505e-05, 2.241700000000027e-05, 2.1749999999997466e-05, 2.1778000000000075e-05, 2.2055999999999465e-05, 2.1471999999998076e-05, 2.238900000000113e-05, 2.208299999999913e-05, 2.1736000000001365e-05, 2.1778000000000075e-05, 2.236100000000199e-05, 2.209700000000217e-05, 2.237499999999809e-05, 2.1750000000000935e-05, 2.205499999999999e-05, 2.2084000000002074e-05, 2.237499999999809e-05, 2.244499999999941e-05, 2.2388000000001657e-05, 2.238900000000113e-05, 2.206899999999956e-05, 2.1457999999998506e-05, 2.145899999999798e-05, 2.20969999999987e-05, 2.206900000000303e-05, 2.238899999999766e-05, 2.1776999999997132e-05, 2.20830000000026e-05, 2.1750000000000935e-05, 2.20969999999987e-05, 2.145899999999798e-05]</msg>
<status status="PASS" starttime="20201110 08:35:05.646" endtime="20201110 08:35:05.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.642" endtime="20201110 08:35:05.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.651" endtime="20201110 08:35:05.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.655" endtime="20201110 08:35:05.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.653" endtime="20201110 08:35:05.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.650" endtime="20201110 08:35:05.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.286" endtime="20201110 08:35:05.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.286" endtime="20201110 08:35:05.676"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.684" endtime="20201110 08:35:05.699"></status>
</kw>
<msg timestamp="20201110 08:35:05.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.683" endtime="20201110 08:35:05.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.701" endtime="20201110 08:35:05.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.703" endtime="20201110 08:35:05.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.680" endtime="20201110 08:35:05.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.678" endtime="20201110 08:35:05.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.713" endtime="20201110 08:35:05.999"></status>
</kw>
<msg timestamp="20201110 08:35:06.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.711" endtime="20201110 08:35:06.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.003" endtime="20201110 08:35:06.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.011" endtime="20201110 08:35:06.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.709" endtime="20201110 08:35:06.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.707" endtime="20201110 08:35:06.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.018" level="INFO">${RESULT} = [{'time': 0.019725431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3292000000001145e-05, 'source_diff': 2.3292000000001145e-05}, {'time': 0.019751444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:06.015" endtime="20201110 08:35:06.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:06.031" level="INFO">${ACCURACY} = {'source_diff': [2.3292000000001145e-05, 2.331900000000081e-05, 2.3070000000000035e-05, 2.330500000000124e-05, 2.3000000000002185e-05, 2.236100000000199e-05, 2.333300000000038e-05, 2.3305999999997246e...</msg>
<status status="PASS" starttime="20201110 08:35:06.019" endtime="20201110 08:35:06.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.036" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:35:06.035" endtime="20201110 08:35:06.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.038" level="INFO">VALUE: [2.3292000000001145e-05, 2.331900000000081e-05, 2.3070000000000035e-05, 2.330500000000124e-05, 2.3000000000002185e-05, 2.236100000000199e-05, 2.333300000000038e-05, 2.3305999999997246e-05, 2.3014000000001755e-05, 2.2694000000000186e-05, 2.334699999999995e-05, 2.3333999999999855e-05, 2.3347999999999425e-05, 2.2721999999999326e-05, 2.340299999999823e-05, 2.266700000000052e-05, 2.330500000000124e-05, 2.3304999999997772e-05, 2.266700000000052e-05, 2.2958000000000006e-05, 2.2707999999999756e-05, 2.237499999999809e-05, 2.269499999999966e-05, 2.27090000000027e-05, 2.2721999999999326e-05, 2.336099999999952e-05, 2.2999999999998716e-05, 2.268100000000009e-05, 2.268100000000009e-05, 2.3014000000001755e-05, 2.3013999999998286e-05, 2.3318999999997342e-05, 2.330500000000124e-05, 2.3320000000000285e-05, 2.338899999999866e-05, 2.2694000000000186e-05, 2.2694000000000186e-05, 2.3012999999998812e-05, 2.3304999999997772e-05, 2.336099999999952e-05, 2.263899999999791e-05, 2.3000000000002185e-05, 2.3236000000002865e-05, 2.2999999999998716e-05, 2.2749999999998466e-05, 2.2985999999999146e-05, 2.2999999999998716e-05, 2.2694000000000186e-05, 2.331900000000081e-05, 2.330500000000124e-05]</msg>
<status status="PASS" starttime="20201110 08:35:06.037" endtime="20201110 08:35:06.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.032" endtime="20201110 08:35:06.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.042" endtime="20201110 08:35:06.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.045" endtime="20201110 08:35:06.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.044" endtime="20201110 08:35:06.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.040" endtime="20201110 08:35:06.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.677" endtime="20201110 08:35:06.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.676" endtime="20201110 08:35:06.066"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.075" endtime="20201110 08:35:06.092"></status>
</kw>
<msg timestamp="20201110 08:35:06.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.073" endtime="20201110 08:35:06.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.093" endtime="20201110 08:35:06.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.096" endtime="20201110 08:35:06.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.071" endtime="20201110 08:35:06.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.069" endtime="20201110 08:35:06.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.106" endtime="20201110 08:35:06.391"></status>
</kw>
<msg timestamp="20201110 08:35:06.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020709375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.104" endtime="20201110 08:35:06.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020709375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.395" endtime="20201110 08:35:06.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.403" endtime="20201110 08:35:06.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.102" endtime="20201110 08:35:06.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.100" endtime="20201110 08:35:06.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.410" level="INFO">${RESULT} = [{'time': 0.020709375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.361099999999977e-05, 'source_diff': 2.361099999999977e-05}, {'time': 0.020738306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:06.407" endtime="20201110 08:35:06.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:06.424" level="INFO">${ACCURACY} = {'source_diff': [2.361099999999977e-05, 2.3528000000001825e-05, 2.4207999999997787e-05, 2.4235999999996927e-05, 2.388900000000263e-05, 2.3944000000001436e-05, 2.361099999999977e-05, 2.391700000000177e...</msg>
<status status="PASS" starttime="20201110 08:35:06.411" endtime="20201110 08:35:06.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.429" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:35:06.428" endtime="20201110 08:35:06.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.431" level="INFO">VALUE: [2.361099999999977e-05, 2.3528000000001825e-05, 2.4207999999997787e-05, 2.4235999999996927e-05, 2.388900000000263e-05, 2.3944000000001436e-05, 2.361099999999977e-05, 2.391700000000177e-05, 2.4249999999999966e-05, 2.361099999999977e-05, 2.3930000000001866e-05, 2.390299999999873e-05, 2.4249999999999966e-05, 2.4249999999999966e-05, 2.4249999999999966e-05, 2.39169999999983e-05, 2.42230000000003e-05, 2.4249999999999966e-05, 2.363900000000238e-05, 2.361099999999977e-05, 2.361099999999977e-05, 2.423699999999987e-05, 2.393100000000134e-05, 2.3915999999998827e-05, 2.420900000000073e-05, 2.362499999999934e-05, 2.3929999999998397e-05, 2.3929999999998397e-05, 2.362499999999934e-05, 2.4193999999998217e-05, 2.365299999999848e-05, 2.361099999999977e-05, 2.4235999999996927e-05, 2.393100000000134e-05, 2.362499999999934e-05, 2.390299999999873e-05, 2.4222000000000826e-05, 2.3944000000001436e-05, 2.4236000000000396e-05, 2.388900000000263e-05, 2.4222000000000826e-05, 2.39169999999983e-05, 2.387499999999959e-05, 2.362499999999934e-05, 2.39169999999983e-05, 2.362499999999934e-05, 2.4278000000002575e-05, 2.4221999999997357e-05, 2.4249999999999966e-05, 2.4569999999998066e-05]</msg>
<status status="PASS" starttime="20201110 08:35:06.430" endtime="20201110 08:35:06.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.425" endtime="20201110 08:35:06.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.435" endtime="20201110 08:35:06.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.438" endtime="20201110 08:35:06.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.437" endtime="20201110 08:35:06.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.433" endtime="20201110 08:35:06.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.067" endtime="20201110 08:35:06.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.067" endtime="20201110 08:35:06.459"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.468" endtime="20201110 08:35:06.483"></status>
</kw>
<msg timestamp="20201110 08:35:06.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.466" endtime="20201110 08:35:06.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.484" endtime="20201110 08:35:06.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.487" endtime="20201110 08:35:06.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.464" endtime="20201110 08:35:06.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.461" endtime="20201110 08:35:06.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.497" endtime="20201110 08:35:06.784"></status>
</kw>
<msg timestamp="20201110 08:35:06.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019525653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.495" endtime="20201110 08:35:06.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019525653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.789" endtime="20201110 08:35:06.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.797" endtime="20201110 08:35:06.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.492" endtime="20201110 08:35:06.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.491" endtime="20201110 08:35:06.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.803" level="INFO">${RESULT} = [{'time': 0.019525653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.545900000000198e-05, 'source_diff': 2.545900000000198e-05}, {'time': 0.019556597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:06.800" endtime="20201110 08:35:06.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:06.817" level="INFO">${ACCURACY} = {'source_diff': [2.545900000000198e-05, 2.4832999999998412e-05, 2.486100000000102e-05, 2.486100000000102e-05, 2.5500000000001216e-05, 2.487500000000059e-05, 2.4846999999997982e-05, 2.516699999999955e-...</msg>
<status status="PASS" starttime="20201110 08:35:06.805" endtime="20201110 08:35:06.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.821" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:35:06.820" endtime="20201110 08:35:06.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.824" level="INFO">VALUE: [2.545900000000198e-05, 2.4832999999998412e-05, 2.486100000000102e-05, 2.486100000000102e-05, 2.5500000000001216e-05, 2.487500000000059e-05, 2.4846999999997982e-05, 2.516699999999955e-05, 2.4902000000000257e-05, 2.5471999999998607e-05, 2.4513999999999786e-05, 2.49030000000032e-05, 2.5222000000001826e-05, 2.5152000000000507e-05, 2.4862000000000495e-05, 2.4860999999997552e-05, 2.4554999999999022e-05, 2.5486000000001646e-05, 2.4540999999999452e-05, 2.4818999999998842e-05, 2.4540999999999452e-05, 2.5193999999999217e-05, 2.4888000000000687e-05, 2.5485999999998177e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.5528000000000356e-05, 2.5486000000001646e-05, 2.516699999999955e-05, 2.5485999999998177e-05, 2.4527999999999356e-05, 2.515299999999998e-05, 2.4568999999998592e-05, 2.486100000000102e-05, 2.486100000000102e-05, 2.518100000000259e-05, 2.511100000000127e-05, 2.4584000000001105e-05, 2.516699999999955e-05, 2.486100000000102e-05, 2.4556000000001965e-05, 2.5166000000000077e-05, 2.4806000000002215e-05, 2.4861999999997025e-05, 2.4542000000002395e-05, 2.4860999999997552e-05, 2.5443999999999467e-05, 2.4542000000002395e-05, 2.5166000000000077e-05, 2.4554999999999022e-05]</msg>
<status status="PASS" starttime="20201110 08:35:06.822" endtime="20201110 08:35:06.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.818" endtime="20201110 08:35:06.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.827" endtime="20201110 08:35:06.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.831" endtime="20201110 08:35:06.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.829" endtime="20201110 08:35:06.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.826" endtime="20201110 08:35:06.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.460" endtime="20201110 08:35:06.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.459" endtime="20201110 08:35:06.852"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.860" endtime="20201110 08:35:06.876"></status>
</kw>
<msg timestamp="20201110 08:35:06.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.859" endtime="20201110 08:35:06.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:06.877" endtime="20201110 08:35:06.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.880" endtime="20201110 08:35:06.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.856" endtime="20201110 08:35:06.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.854" endtime="20201110 08:35:06.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.890" endtime="20201110 08:35:07.175"></status>
</kw>
<msg timestamp="20201110 08:35:07.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019550653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:06.888" endtime="20201110 08:35:07.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019550653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.179" endtime="20201110 08:35:07.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.188" endtime="20201110 08:35:07.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.885" endtime="20201110 08:35:07.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.884" endtime="20201110 08:35:07.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.194" level="INFO">${RESULT} = [{'time': 0.019550653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5764000000001036e-05, 'source_diff': 2.5764000000001036e-05}, {'time': 0.019579583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:07.191" endtime="20201110 08:35:07.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.208" level="INFO">${ACCURACY} = {'source_diff': [2.5764000000001036e-05, 2.6402000000001757e-05, 2.5471999999998607e-05, 2.6084000000002605e-05, 2.5791000000000702e-05, 2.611100000000227e-05, 2.6098000000002175e-05, 2.54859999999981...</msg>
<status status="PASS" starttime="20201110 08:35:07.195" endtime="20201110 08:35:07.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.212" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.211" endtime="20201110 08:35:07.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.215" level="INFO">VALUE: [2.5764000000001036e-05, 2.6402000000001757e-05, 2.5471999999998607e-05, 2.6084000000002605e-05, 2.5791000000000702e-05, 2.611100000000227e-05, 2.6098000000002175e-05, 2.5485999999998177e-05, 2.5764000000001036e-05, 2.641699999999733e-05, 2.5778000000000606e-05, 2.5472000000002076e-05, 2.641699999999733e-05, 2.6096999999999232e-05, 2.6055000000000522e-05, 2.5792000000000176e-05, 2.5792000000000176e-05, 2.6069000000000092e-05, 2.5818999999999842e-05, 2.548699999999765e-05, 2.5791000000000702e-05, 2.6096999999999232e-05, 2.6096999999999232e-05, 2.5778000000000606e-05, 2.5485999999998177e-05, 2.6360999999999052e-05, 2.60970000000027e-05, 2.5721999999998857e-05, 2.6402000000001757e-05, 2.6096999999999232e-05, 2.5805999999999746e-05, 2.640300000000123e-05, 2.5541000000000452e-05, 2.6097999999998706e-05, 2.6097999999998706e-05, 2.5778000000000606e-05, 2.6110999999998802e-05, 2.5721999999998857e-05, 2.5443999999999467e-05, 2.6416000000001327e-05, 2.6110999999998802e-05, 2.6096999999999232e-05, 2.641699999999733e-05, 2.6096999999999232e-05, 2.6110999999998802e-05, 2.5486000000001646e-05, 2.611100000000227e-05, 2.547299999999808e-05, 2.5486000000001646e-05, 2.640300000000123e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.213" endtime="20201110 08:35:07.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.209" endtime="20201110 08:35:07.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.218" endtime="20201110 08:35:07.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.222" endtime="20201110 08:35:07.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.220" endtime="20201110 08:35:07.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.217" endtime="20201110 08:35:07.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.852" endtime="20201110 08:35:07.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.852" endtime="20201110 08:35:07.243"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.251" endtime="20201110 08:35:07.267"></status>
</kw>
<msg timestamp="20201110 08:35:07.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.250" endtime="20201110 08:35:07.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.268" endtime="20201110 08:35:07.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.271" endtime="20201110 08:35:07.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.247" endtime="20201110 08:35:07.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.245" endtime="20201110 08:35:07.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.281" endtime="20201110 08:35:07.566"></status>
</kw>
<msg timestamp="20201110 08:35:07.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019889264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.279" endtime="20201110 08:35:07.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019889264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.570" endtime="20201110 08:35:07.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.579" endtime="20201110 08:35:07.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.277" endtime="20201110 08:35:07.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.275" endtime="20201110 08:35:07.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.586" level="INFO">${RESULT} = [{'time': 0.019916264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6999999999999247e-05, 'source_diff': 2.6999999999999247e-05}, {'time': 0.019947375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:07.582" endtime="20201110 08:35:07.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.599" level="INFO">${ACCURACY} = {'source_diff': [2.6999999999999247e-05, 2.7347000000000482e-05, 2.7028000000001856e-05, 2.6708000000000287e-05, 2.670899999999976e-05, 2.7027000000002382e-05, 2.7305000000001772e-05, 2.67079999999968...</msg>
<status status="PASS" starttime="20201110 08:35:07.587" endtime="20201110 08:35:07.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.604" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.603" endtime="20201110 08:35:07.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.606" level="INFO">VALUE: [2.6999999999999247e-05, 2.7347000000000482e-05, 2.7028000000001856e-05, 2.6708000000000287e-05, 2.670899999999976e-05, 2.7027000000002382e-05, 2.7305000000001772e-05, 2.6707999999996818e-05, 2.7333000000000912e-05, 2.7278000000002106e-05, 2.7012999999999343e-05, 2.6735999999999427e-05, 2.7028000000001856e-05, 2.7027999999998387e-05, 2.668099999999715e-05, 2.644499999999994e-05, 2.6444000000000467e-05, 2.6721999999999857e-05, 2.7042000000001426e-05, 2.6708000000000287e-05, 2.6749999999998997e-05, 2.7347000000000482e-05, 2.6402000000001757e-05, 2.7027999999998387e-05, 2.7027999999998387e-05, 2.7041000000001952e-05, 2.6986000000003146e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.7361000000000052e-05, 2.7027999999998387e-05, 2.7056000000000996e-05, 2.7361000000000052e-05, 2.7026999999998913e-05, 2.7014000000002286e-05, 2.7012999999999343e-05, 2.7388999999999192e-05, 2.7014000000002286e-05, 2.6708000000000287e-05, 2.7040999999998483e-05, 2.7334000000000386e-05, 2.7027999999998387e-05, 2.64170000000008e-05, 2.7374999999999622e-05, 2.7027999999998387e-05, 2.6444000000000467e-05, 2.7334000000000386e-05, 2.7013999999998817e-05, 2.645899999999951e-05, 2.7332999999997443e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.605" endtime="20201110 08:35:07.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.600" endtime="20201110 08:35:07.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.610" endtime="20201110 08:35:07.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.613" endtime="20201110 08:35:07.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.611" endtime="20201110 08:35:07.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.608" endtime="20201110 08:35:07.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.244" endtime="20201110 08:35:07.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.243" endtime="20201110 08:35:07.634"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.642" endtime="20201110 08:35:07.657"></status>
</kw>
<msg timestamp="20201110 08:35:07.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.641" endtime="20201110 08:35:07.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.659" endtime="20201110 08:35:07.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.661" endtime="20201110 08:35:07.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.638" endtime="20201110 08:35:07.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.636" endtime="20201110 08:35:07.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.671" endtime="20201110 08:35:07.958"></status>
</kw>
<msg timestamp="20201110 08:35:07.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019579986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.670" endtime="20201110 08:35:07.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019579986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.962" endtime="20201110 08:35:07.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.970" endtime="20201110 08:35:07.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.667" endtime="20201110 08:35:07.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.665" endtime="20201110 08:35:07.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.977" level="INFO">${RESULT} = [{'time': 0.019607917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79309999999984e-05, 'source_diff': 2.79309999999984e-05}, {'time': 0.019641056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:07.974" endtime="20201110 08:35:07.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:07.991" level="INFO">${ACCURACY} = {'source_diff': [2.79309999999984e-05, 2.7598000000000206e-05, 2.8264000000000067e-05, 2.7638999999999442e-05, 2.7652999999999012e-05, 2.770900000000076e-05, 2.7943999999998498e-05, 2.7972000000001107...</msg>
<status status="PASS" starttime="20201110 08:35:07.978" endtime="20201110 08:35:07.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.996" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:35:07.995" endtime="20201110 08:35:07.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.998" level="INFO">VALUE: [2.79309999999984e-05, 2.7598000000000206e-05, 2.8264000000000067e-05, 2.7638999999999442e-05, 2.7652999999999012e-05, 2.770900000000076e-05, 2.7943999999998498e-05, 2.7972000000001107e-05, 2.7638999999999442e-05, 2.7611000000000302e-05, 2.8263999999996597e-05, 2.7957999999998068e-05, 2.8249999999997027e-05, 2.795899999999754e-05, 2.7651999999999538e-05, 2.7958000000001537e-05, 2.7958000000001537e-05, 2.8277999999999637e-05, 2.7652999999999012e-05, 2.766699999999858e-05, 2.8264000000000067e-05, 2.7624999999999872e-05, 2.8236000000000927e-05, 2.8570000000002066e-05, 2.7957999999998068e-05, 2.8277999999999637e-05, 2.763900000000291e-05, 2.765300000000248e-05, 2.8584000000001636e-05, 2.766699999999858e-05, 2.8264000000000067e-05, 2.8263000000000593e-05, 2.8569999999998597e-05, 2.8264000000000067e-05, 2.8263000000000593e-05, 2.795899999999754e-05, 2.768099999999815e-05, 2.7651999999999538e-05, 2.7721999999997388e-05, 2.8250000000000497e-05, 2.7638999999999442e-05, 2.7957999999998068e-05, 2.7638999999999442e-05, 2.7957999999998068e-05, 2.7929999999998928e-05, 2.7569000000001592e-05, 2.7638999999999442e-05, 2.8236000000000927e-05, 2.7638999999999442e-05, 2.7958000000001537e-05]</msg>
<status status="PASS" starttime="20201110 08:35:07.997" endtime="20201110 08:35:07.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.992" endtime="20201110 08:35:08.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.002" endtime="20201110 08:35:08.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.005" endtime="20201110 08:35:08.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.004" endtime="20201110 08:35:08.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.000" endtime="20201110 08:35:08.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.635" endtime="20201110 08:35:08.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.634" endtime="20201110 08:35:08.026"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.035" endtime="20201110 08:35:08.050"></status>
</kw>
<msg timestamp="20201110 08:35:08.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.033" endtime="20201110 08:35:08.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.052" endtime="20201110 08:35:08.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.054" endtime="20201110 08:35:08.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.031" endtime="20201110 08:35:08.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.029" endtime="20201110 08:35:08.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.064" endtime="20201110 08:35:08.348"></status>
</kw>
<msg timestamp="20201110 08:35:08.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019643319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.063" endtime="20201110 08:35:08.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019643319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.353" endtime="20201110 08:35:08.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.362" endtime="20201110 08:35:08.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.060" endtime="20201110 08:35:08.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.059" endtime="20201110 08:35:08.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.368" level="INFO">${RESULT} = [{'time': 0.019643319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9180000000000178e-05, 'source_diff': 2.9180000000000178e-05}, {'time': 0.019675097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:08.365" endtime="20201110 08:35:08.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:08.382" level="INFO">${ACCURACY} = {'source_diff': [2.9180000000000178e-05, 2.9207999999999318e-05, 2.8874999999997653e-05, 2.9193999999999748e-05, 2.9207999999999318e-05, 2.9499999999998278e-05, 2.918099999999965e-05, 2.88470000000019...</msg>
<status status="PASS" starttime="20201110 08:35:08.369" endtime="20201110 08:35:08.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.386" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:35:08.385" endtime="20201110 08:35:08.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.389" level="INFO">VALUE: [2.9180000000000178e-05, 2.9207999999999318e-05, 2.8874999999997653e-05, 2.9193999999999748e-05, 2.9207999999999318e-05, 2.9499999999998278e-05, 2.918099999999965e-05, 2.8847000000001982e-05, 2.9193999999999748e-05, 2.8889000000000692e-05, 2.8875000000001122e-05, 2.8625000000000872e-05, 2.9528000000000887e-05, 2.9235999999998458e-05, 2.8540999999999983e-05, 2.8569999999998597e-05, 2.8582999999998693e-05, 2.8846999999998513e-05, 2.9485999999998708e-05, 2.8861000000001552e-05, 2.9193999999999748e-05, 2.8832999999998943e-05, 2.8555999999999027e-05, 2.8596999999998263e-05, 2.9153000000000512e-05, 2.8583999999998166e-05, 2.9458000000003037e-05, 2.919499999999922e-05, 2.8569999999998597e-05, 2.8860999999998083e-05, 2.8541999999999457e-05, 2.8639000000000442e-05, 2.890199999999732e-05, 2.8875000000001122e-05, 2.948700000000165e-05, 2.9166000000000608e-05, 2.919499999999922e-05, 2.9152000000001038e-05, 2.919499999999922e-05, 2.9221999999998888e-05, 2.8554999999999553e-05, 2.9499999999998278e-05, 2.8584000000001636e-05, 2.9526999999997944e-05, 2.8832999999998943e-05, 2.918099999999965e-05, 2.9180000000000178e-05, 2.8598000000001206e-05, 2.916599999999714e-05, 2.8889000000000692e-05]</msg>
<status status="PASS" starttime="20201110 08:35:08.387" endtime="20201110 08:35:08.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.383" endtime="20201110 08:35:08.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.392" endtime="20201110 08:35:08.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.396" endtime="20201110 08:35:08.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.394" endtime="20201110 08:35:08.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.391" endtime="20201110 08:35:08.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.027" endtime="20201110 08:35:08.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.027" endtime="20201110 08:35:08.417"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.425" endtime="20201110 08:35:08.440"></status>
</kw>
<msg timestamp="20201110 08:35:08.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.424" endtime="20201110 08:35:08.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.442" endtime="20201110 08:35:08.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.444" endtime="20201110 08:35:08.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.421" endtime="20201110 08:35:08.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.419" endtime="20201110 08:35:08.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.454" endtime="20201110 08:35:08.739"></status>
</kw>
<msg timestamp="20201110 08:35:08.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01962275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019652236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:08.453" endtime="20201110 08:35:08.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01962275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019652236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:08.743" endtime="20201110 08:35:08.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.752" endtime="20201110 08:35:08.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.450" endtime="20201110 08:35:08.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.448" endtime="20201110 08:35:08.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.758" level="INFO">${RESULT} = [{'time': 0.019652236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9485999999998708e-05, 'source_diff': 2.9485999999998708e-05}, {'time': 0.019685431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:08.755" endtime="20201110 08:35:08.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:08.772" level="INFO">${ACCURACY} = {'source_diff': [2.9485999999998708e-05, 3.044500000000047e-05, 2.9556000000000027e-05, 2.9790999999997764e-05, 2.9792000000000707e-05, 3.0430999999997432e-05, 2.9499999999998278e-05, 2.98750000000021...</msg>
<status status="PASS" starttime="20201110 08:35:08.759" endtime="20201110 08:35:08.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.776" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:35:08.775" endtime="20201110 08:35:08.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.779" level="INFO">VALUE: [2.9485999999998708e-05, 3.044500000000047e-05, 2.9556000000000027e-05, 2.9790999999997764e-05, 2.9792000000000707e-05, 3.0430999999997432e-05, 2.9499999999998278e-05, 2.9875000000002122e-05, 2.9805000000000803e-05, 2.9832999999999943e-05, 2.9499999999998278e-05, 3.042999999999796e-05, 3.0124999999998903e-05, 2.9485999999998708e-05, 3.0416999999997862e-05, 3.0137999999999e-05, 2.9819000000000373e-05, 2.9500000000001747e-05, 2.9514000000001317e-05, 3.0110999999999333e-05, 3.0125000000002372e-05, 3.0444000000000998e-05, 2.9528000000000887e-05, 2.9834000000002886e-05, 2.9860999999999083e-05, 2.9805999999996807e-05, 3.0111999999998806e-05, 3.0431000000000902e-05, 3.0499999999999278e-05, 3.0124999999998903e-05, 3.0403000000001762e-05, 2.9860999999999083e-05, 2.9514000000001317e-05, 2.9500000000001747e-05, 3.0110999999999333e-05, 3.0138999999998473e-05, 3.0111000000002802e-05, 2.9499999999998278e-05, 2.9777000000001663e-05, 2.9528000000000887e-05, 3.0416000000001858e-05, 2.9819999999999847e-05, 2.9833999999999417e-05, 3.0138999999998473e-05, 2.9847000000002982e-05, 2.9832999999999943e-05, 3.044399999999753e-05, 3.0124999999998903e-05, 2.9805000000000803e-05, 3.0124999999998903e-05]</msg>
<status status="PASS" starttime="20201110 08:35:08.777" endtime="20201110 08:35:08.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.773" endtime="20201110 08:35:08.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.782" endtime="20201110 08:35:08.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.786" endtime="20201110 08:35:08.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.784" endtime="20201110 08:35:08.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.781" endtime="20201110 08:35:08.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.418" endtime="20201110 08:35:08.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.417" endtime="20201110 08:35:08.807"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.815" endtime="20201110 08:35:08.831"></status>
</kw>
<msg timestamp="20201110 08:35:08.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.814" endtime="20201110 08:35:08.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:08.833" endtime="20201110 08:35:08.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.835" endtime="20201110 08:35:08.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.811" endtime="20201110 08:35:08.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.809" endtime="20201110 08:35:08.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.845" endtime="20201110 08:35:09.131"></status>
</kw>
<msg timestamp="20201110 08:35:09.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.844" endtime="20201110 08:35:09.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.135" endtime="20201110 08:35:09.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.143" endtime="20201110 08:35:09.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.841" endtime="20201110 08:35:09.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.839" endtime="20201110 08:35:09.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.150" level="INFO">${RESULT} = [{'time': 0.019829125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.073599999999996e-05, 'source_diff': 3.073599999999996e-05}, {'time': 0.019863403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:09.147" endtime="20201110 08:35:09.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.163" level="INFO">${ACCURACY} = {'source_diff': [3.073599999999996e-05, 3.073600000000343e-05, 3.104100000000248e-05, 3.104199999999849e-05, 3.136100000000058e-05, 3.111100000000033e-05, 3.1290999999999264e-05, 3.073599999999996e-05...</msg>
<status status="PASS" starttime="20201110 08:35:09.151" endtime="20201110 08:35:09.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.168" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.167" endtime="20201110 08:35:09.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.170" level="INFO">VALUE: [3.073599999999996e-05, 3.073600000000343e-05, 3.104100000000248e-05, 3.104199999999849e-05, 3.136100000000058e-05, 3.111100000000033e-05, 3.1290999999999264e-05, 3.073599999999996e-05, 3.074999999999953e-05, 3.074999999999953e-05, 3.137500000000015e-05, 3.104200000000196e-05, 3.136100000000058e-05, 3.105600000000153e-05, 3.136100000000058e-05, 3.1040999999999014e-05, 3.042999999999796e-05, 3.1054999999998584e-05, 3.142999999999896e-05, 3.074999999999953e-05, 3.1054999999998584e-05, 3.105600000000153e-05, 3.07639999999991e-05, 3.073599999999996e-05, 3.105600000000153e-05, 3.1068999999998154e-05, 3.134700000000101e-05, 3.081900000000137e-05, 3.137500000000015e-05, 3.105600000000153e-05, 3.0472000000000138e-05, 3.108300000000119e-05, 3.104199999999849e-05, 3.104199999999849e-05, 3.133300000000144e-05, 3.104200000000196e-05, 3.0444999999997002e-05, 3.1026999999999444e-05, 3.073600000000343e-05, 3.136100000000058e-05, 3.104199999999849e-05, 3.073599999999996e-05, 3.140199999999982e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.074999999999953e-05, 3.0431000000000902e-05, 3.136100000000058e-05, 3.073599999999996e-05, 3.073699999999943e-05]</msg>
<status status="PASS" starttime="20201110 08:35:09.169" endtime="20201110 08:35:09.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.164" endtime="20201110 08:35:09.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.174" endtime="20201110 08:35:09.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.177" endtime="20201110 08:35:09.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.176" endtime="20201110 08:35:09.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.172" endtime="20201110 08:35:09.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.808" endtime="20201110 08:35:09.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.807" endtime="20201110 08:35:09.198"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.207" endtime="20201110 08:35:09.222"></status>
</kw>
<msg timestamp="20201110 08:35:09.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.205" endtime="20201110 08:35:09.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.223" endtime="20201110 08:35:09.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.226" endtime="20201110 08:35:09.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.203" endtime="20201110 08:35:09.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.201" endtime="20201110 08:35:09.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.236" endtime="20201110 08:35:09.523"></status>
</kw>
<msg timestamp="20201110 08:35:09.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.234" endtime="20201110 08:35:09.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.527" endtime="20201110 08:35:09.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.536" endtime="20201110 08:35:09.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.232" endtime="20201110 08:35:09.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.230" endtime="20201110 08:35:09.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.542" level="INFO">${RESULT} = [{'time': 0.019737069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4875000000000184e-05, 'source_diff': 3.4875000000000184e-05}, {'time': 0.019780083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:09.539" endtime="20201110 08:35:09.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.557" level="INFO">${ACCURACY} = {'source_diff': [3.4875000000000184e-05, 3.540200000000035e-05, 3.4554999999998615e-05, 3.5069000000002154e-05, 3.519399999999881e-05, 3.4611000000000364e-05, 3.492999999999899e-05, 3.502799999999945e...</msg>
<status status="PASS" starttime="20201110 08:35:09.543" endtime="20201110 08:35:09.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.561" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.560" endtime="20201110 08:35:09.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.563" level="INFO">VALUE: [3.4875000000000184e-05, 3.540200000000035e-05, 3.4554999999998615e-05, 3.5069000000002154e-05, 3.519399999999881e-05, 3.4611000000000364e-05, 3.492999999999899e-05, 3.502799999999945e-05, 3.452799999999895e-05, 3.4611000000000364e-05, 3.4582999999997754e-05, 3.449999999999981e-05, 3.498600000000074e-05, 3.504200000000249e-05, 3.4611000000000364e-05, 3.454200000000199e-05, 3.533399999999798e-05, 3.484800000000052e-05, 3.520900000000132e-05, 3.504199999999902e-05, 3.504200000000249e-05, 3.526400000000013e-05, 3.544400000000253e-05, 3.4847000000001044e-05, 3.518000000000271e-05, 3.4611000000000364e-05, 3.51520000000001e-05, 3.4847000000001044e-05, 3.44719999999972e-05, 3.525000000000056e-05, 3.5124999999996964e-05, 3.522200000000142e-05, 3.472200000000092e-05, 3.4833000000001474e-05, 3.544499999999853e-05, 3.5416999999999393e-05, 3.4888999999999754e-05, 3.479199999999877e-05, 3.4860999999997144e-05, 3.468099999999821e-05, 3.501399999999988e-05, 3.448599999999677e-05, 3.506999999999816e-05, 3.501399999999988e-05, 3.449999999999981e-05, 3.501399999999988e-05, 3.49589999999976e-05, 3.463800000000003e-05, 3.482000000000138e-05, 3.543000000000296e-05]</msg>
<status status="PASS" starttime="20201110 08:35:09.562" endtime="20201110 08:35:09.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.558" endtime="20201110 08:35:09.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.567" endtime="20201110 08:35:09.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.571" endtime="20201110 08:35:09.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.569" endtime="20201110 08:35:09.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.566" endtime="20201110 08:35:09.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.199" endtime="20201110 08:35:09.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.198" endtime="20201110 08:35:09.591"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.600" endtime="20201110 08:35:09.615"></status>
</kw>
<msg timestamp="20201110 08:35:09.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.599" endtime="20201110 08:35:09.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.617" endtime="20201110 08:35:09.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.619" endtime="20201110 08:35:09.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.596" endtime="20201110 08:35:09.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.594" endtime="20201110 08:35:09.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.629" endtime="20201110 08:35:09.914"></status>
</kw>
<msg timestamp="20201110 08:35:09.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.628" endtime="20201110 08:35:09.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.919" endtime="20201110 08:35:09.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.927" endtime="20201110 08:35:09.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.625" endtime="20201110 08:35:09.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.623" endtime="20201110 08:35:09.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.933" level="INFO">${RESULT} = [{'time': 0.019684792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.555599999999909e-05, 'source_diff': 3.555599999999909e-05}, {'time': 0.019728778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:09.930" endtime="20201110 08:35:09.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:09.947" level="INFO">${ACCURACY} = {'source_diff': [3.555599999999909e-05, 3.556999999999866e-05, 3.6375000000001684e-05, 3.5638999999997034e-05, 3.5861000000001614e-05, 3.574999999999759e-05, 3.6138999999997534e-05, 3.629200000000027e...</msg>
<status status="PASS" starttime="20201110 08:35:09.934" endtime="20201110 08:35:09.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.951" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:35:09.950" endtime="20201110 08:35:09.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.954" level="INFO">VALUE: [3.555599999999909e-05, 3.556999999999866e-05, 3.6375000000001684e-05, 3.5638999999997034e-05, 3.5861000000001614e-05, 3.574999999999759e-05, 3.6138999999997534e-05, 3.629200000000027e-05, 3.619499999999928e-05, 3.576400000000063e-05, 3.544399999999906e-05, 3.604200000000002e-05, 3.6041000000000545e-05, 3.622199999999895e-05, 3.601399999999741e-05, 3.643000000000049e-05, 3.650000000000181e-05, 3.595799999999913e-05, 3.5653000000000074e-05, 3.601400000000088e-05, 3.543000000000296e-05, 3.622199999999895e-05, 3.57780000000002e-05, 3.549999999999734e-05, 3.601400000000088e-05, 3.633399999999898e-05, 3.602800000000045e-05, 3.601400000000088e-05, 3.620899999999885e-05, 3.548600000000124e-05, 3.62780000000007e-05, 3.60840000000022e-05, 3.6152999999997104e-05, 3.5860999999998144e-05, 3.640199999999788e-05, 3.648600000000224e-05, 3.6277000000001225e-05, 3.6346999999999074e-05, 3.6332999999999505e-05, 3.6068999999999685e-05, 3.5818999999999435e-05, 3.551400000000038e-05, 3.5597000000001794e-05, 3.620800000000285e-05, 3.5568999999999185e-05, 3.554199999999952e-05, 3.542999999999949e-05, 3.593099999999946e-05, 3.631999999999941e-05, 3.594499999999903e-05]</msg>
<status status="PASS" starttime="20201110 08:35:09.952" endtime="20201110 08:35:09.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.948" endtime="20201110 08:35:09.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.961" endtime="20201110 08:35:09.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.965" endtime="20201110 08:35:09.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.963" endtime="20201110 08:35:09.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.960" endtime="20201110 08:35:09.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.592" endtime="20201110 08:35:09.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.592" endtime="20201110 08:35:09.986"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.994" endtime="20201110 08:35:10.009"></status>
</kw>
<msg timestamp="20201110 08:35:10.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:09.993" endtime="20201110 08:35:10.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.011" endtime="20201110 08:35:10.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.013" endtime="20201110 08:35:10.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.990" endtime="20201110 08:35:10.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.988" endtime="20201110 08:35:10.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.023" endtime="20201110 08:35:10.313"></status>
</kw>
<msg timestamp="20201110 08:35:10.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.021" endtime="20201110 08:35:10.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.318" endtime="20201110 08:35:10.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.326" endtime="20201110 08:35:10.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.019" endtime="20201110 08:35:10.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.017" endtime="20201110 08:35:10.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.333" level="INFO">${RESULT} = [{'time': 0.019645333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6777000000001725e-05, 'source_diff': 3.6777000000001725e-05}, {'time': 0.019692403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:10.329" endtime="20201110 08:35:10.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:10.346" level="INFO">${ACCURACY} = {'source_diff': [3.6777000000001725e-05, 3.7110999999999394e-05, 3.7305000000001365e-05, 3.727799999999823e-05, 3.6874999999998714e-05, 3.7333000000000505e-05, 3.6569000000000185e-05, 3.71809999999972...</msg>
<status status="PASS" starttime="20201110 08:35:10.334" endtime="20201110 08:35:10.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.350" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:35:10.349" endtime="20201110 08:35:10.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.353" level="INFO">VALUE: [3.6777000000001725e-05, 3.7110999999999394e-05, 3.7305000000001365e-05, 3.727799999999823e-05, 3.6874999999998714e-05, 3.7333000000000505e-05, 3.6569000000000185e-05, 3.7180999999997244e-05, 3.6874999999998714e-05, 3.705600000000059e-05, 3.6596999999999325e-05, 3.708399999999973e-05, 3.6889000000001754e-05, 3.651399999999791e-05, 3.7417000000001394e-05, 3.6917000000000894e-05, 3.677799999999773e-05, 3.6874999999998714e-05, 3.724999999999909e-05, 3.6639000000001504e-05, 3.7055000000001115e-05, 3.730600000000084e-05, 3.698599999999927e-05, 3.691600000000142e-05, 3.716600000000167e-05, 3.6791000000001295e-05, 3.652800000000095e-05, 3.729200000000127e-05, 3.698600000000274e-05, 3.6639000000001504e-05, 3.725000000000256e-05, 3.702800000000145e-05, 3.650000000000181e-05, 3.656999999999966e-05, 3.6596999999999325e-05, 3.726399999999866e-05, 3.7167000000001144e-05, 3.6846999999999575e-05, 3.7417000000001394e-05, 3.727799999999823e-05, 3.7375000000002684e-05, 3.7417000000001394e-05, 3.659800000000227e-05, 3.684799999999905e-05, 3.7347000000000075e-05, 3.641600000000092e-05, 3.720800000000038e-05, 3.645799999999963e-05, 3.695800000000013e-05, 3.673600000000249e-05]</msg>
<status status="PASS" starttime="20201110 08:35:10.352" endtime="20201110 08:35:10.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.347" endtime="20201110 08:35:10.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.357" endtime="20201110 08:35:10.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:10.360" endtime="20201110 08:35:10.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.358" endtime="20201110 08:35:10.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.355" endtime="20201110 08:35:10.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.987" endtime="20201110 08:35:10.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.986" endtime="20201110 08:35:10.381"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.391" endtime="20201110 08:35:10.406"></status>
</kw>
<msg timestamp="20201110 08:35:10.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.389" endtime="20201110 08:35:10.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.407" endtime="20201110 08:35:10.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.410" endtime="20201110 08:35:10.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.386" endtime="20201110 08:35:10.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.384" endtime="20201110 08:35:10.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.420" endtime="20201110 08:35:10.707"></status>
</kw>
<msg timestamp="20201110 08:35:10.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021296569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.418" endtime="20201110 08:35:10.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021296569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.711" endtime="20201110 08:35:10.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.719" endtime="20201110 08:35:10.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.416" endtime="20201110 08:35:10.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.414" endtime="20201110 08:35:10.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.726" level="INFO">${RESULT} = [{'time': 0.021296569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8361000000000645e-05, 'source_diff': 3.8361000000000645e-05}, {'time': 0.021342583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:10.722" endtime="20201110 08:35:10.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:10.739" level="INFO">${ACCURACY} = {'source_diff': [3.8361000000000645e-05, 3.817999999999877e-05, 3.826399999999966e-05, 3.7818999999997965e-05, 3.755600000000109e-05, 3.7790999999998826e-05, 3.7638999999999034e-05, 3.773600000000002e...</msg>
<status status="PASS" starttime="20201110 08:35:10.727" endtime="20201110 08:35:10.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.744" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:35:10.743" endtime="20201110 08:35:10.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.746" level="INFO">VALUE: [3.8361000000000645e-05, 3.817999999999877e-05, 3.826399999999966e-05, 3.7818999999997965e-05, 3.755600000000109e-05, 3.7790999999998826e-05, 3.7638999999999034e-05, 3.773600000000002e-05, 3.8388999999999784e-05, 3.8318999999998465e-05, 3.758400000000023e-05, 3.749999999999934e-05, 3.750000000000281e-05, 3.8166999999998674e-05, 3.79590000000006e-05, 3.770900000000035e-05, 3.7652999999998604e-05, 3.751400000000238e-05, 3.749999999999934e-05, 3.7680999999997744e-05, 3.830600000000184e-05, 3.797199999999723e-05, 3.8263000000000186e-05, 3.776399999999916e-05, 3.750000000000281e-05, 3.8360999999997175e-05, 3.8138999999999534e-05, 3.772199999999698e-05, 3.820800000000138e-05, 3.822199999999748e-05, 3.7583000000000755e-05, 3.804200000000202e-05, 3.804199999999855e-05, 3.829200000000227e-05, 3.82919999999988e-05, 3.8375000000000214e-05, 3.770799999999741e-05, 3.8361000000000645e-05, 3.774999999999959e-05, 3.8209000000000853e-05, 3.7695000000000783e-05, 3.808400000000073e-05, 3.840199999999988e-05, 3.749999999999934e-05, 3.770900000000035e-05, 3.7610999999999895e-05, 3.8319000000001935e-05, 3.7791000000002295e-05, 3.7917000000001894e-05, 3.8347000000001075e-05]</msg>
<status status="PASS" starttime="20201110 08:35:10.745" endtime="20201110 08:35:10.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.740" endtime="20201110 08:35:10.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.750" endtime="20201110 08:35:10.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:10.753" endtime="20201110 08:35:10.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.751" endtime="20201110 08:35:10.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.748" endtime="20201110 08:35:10.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.382" endtime="20201110 08:35:10.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.381" endtime="20201110 08:35:10.774"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.782" endtime="20201110 08:35:10.799"></status>
</kw>
<msg timestamp="20201110 08:35:10.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.781" endtime="20201110 08:35:10.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:10.800" endtime="20201110 08:35:10.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.803" endtime="20201110 08:35:10.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.778" endtime="20201110 08:35:10.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.776" endtime="20201110 08:35:10.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.813" endtime="20201110 08:35:11.097"></status>
</kw>
<msg timestamp="20201110 08:35:11.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020133264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020172181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.811" endtime="20201110 08:35:11.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020133264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020172181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.101" endtime="20201110 08:35:11.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.109" endtime="20201110 08:35:11.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.809" endtime="20201110 08:35:11.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.807" endtime="20201110 08:35:11.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.116" level="INFO">${RESULT} = [{'time': 0.020172181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8916999999999424e-05, 'source_diff': 3.8916999999999424e-05}, {'time': 0.020218181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:11.113" endtime="20201110 08:35:11.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.130" level="INFO">${ACCURACY} = {'source_diff': [3.8916999999999424e-05, 3.873700000000049e-05, 3.898600000000127e-05, 3.865200000000013e-05, 3.850000000000034e-05, 3.900000000000084e-05, 3.9139000000000534e-05, 3.870799999999841e-0...</msg>
<status status="PASS" starttime="20201110 08:35:11.117" endtime="20201110 08:35:11.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.135" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.134" endtime="20201110 08:35:11.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.137" level="INFO">VALUE: [3.8916999999999424e-05, 3.873700000000049e-05, 3.898600000000127e-05, 3.865200000000013e-05, 3.850000000000034e-05, 3.900000000000084e-05, 3.9139000000000534e-05, 3.870799999999841e-05, 3.9360999999998175e-05, 3.919399999999934e-05, 3.919399999999934e-05, 3.925000000000109e-05, 3.8875000000000715e-05, 3.8846999999998105e-05, 3.8681000000002214e-05, 3.850000000000034e-05, 3.902799999999998e-05, 3.8861000000001145e-05, 3.9416999999999924e-05, 3.91660000000002e-05, 3.876400000000016e-05, 3.9125000000000965e-05, 3.9041000000000076e-05, 3.9125000000000965e-05, 3.925000000000109e-05, 3.9027000000000506e-05, 3.9360999999998175e-05, 3.9444999999999064e-05, 3.84720000000012e-05, 3.925000000000109e-05, 3.9346999999998605e-05, 3.9068999999999215e-05, 3.857000000000166e-05, 3.8930999999998994e-05, 3.877799999999973e-05, 3.854199999999905e-05, 3.856999999999819e-05, 3.84720000000012e-05, 3.927800000000023e-05, 3.8902999999999854e-05, 3.911200000000087e-05, 3.923599999999805e-05, 3.920799999999891e-05, 3.8763000000000686e-05, 3.855599999999862e-05, 3.9304999999999896e-05, 3.877799999999973e-05, 3.9027000000000506e-05, 3.8777000000000256e-05, 3.8639000000000034e-05]</msg>
<status status="PASS" starttime="20201110 08:35:11.136" endtime="20201110 08:35:11.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.131" endtime="20201110 08:35:11.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.141" endtime="20201110 08:35:11.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.144" endtime="20201110 08:35:11.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.143" endtime="20201110 08:35:11.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.139" endtime="20201110 08:35:11.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.775" endtime="20201110 08:35:11.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.774" endtime="20201110 08:35:11.165"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.174" endtime="20201110 08:35:11.189"></status>
</kw>
<msg timestamp="20201110 08:35:11.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.172" endtime="20201110 08:35:11.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.191" endtime="20201110 08:35:11.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.193" endtime="20201110 08:35:11.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.170" endtime="20201110 08:35:11.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.168" endtime="20201110 08:35:11.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.203" endtime="20201110 08:35:11.489"></status>
</kw>
<msg timestamp="20201110 08:35:11.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019609875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01964975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:11.202" endtime="20201110 08:35:11.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019609875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01964975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:11.493" endtime="20201110 08:35:11.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.501" endtime="20201110 08:35:11.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.199" endtime="20201110 08:35:11.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.197" endtime="20201110 08:35:11.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.508" level="INFO">${RESULT} = [{'time': 0.01964975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9875000000001715e-05, 'source_diff': 3.9875000000001715e-05}, {'time': 0.019699792, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:35:11.505" endtime="20201110 08:35:11.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.521" level="INFO">${ACCURACY} = {'source_diff': [3.9875000000001715e-05, 4.00980000000023e-05, 3.9930999999999994e-05, 3.983400000000248e-05, 3.9694999999999314e-05, 3.973600000000202e-05, 4.009799999999883e-05, 4.0167000000000674e-...</msg>
<status status="PASS" starttime="20201110 08:35:11.509" endtime="20201110 08:35:11.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.526" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.525" endtime="20201110 08:35:11.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.528" level="INFO">VALUE: [3.9875000000001715e-05, 4.00980000000023e-05, 3.9930999999999994e-05, 3.983400000000248e-05, 3.9694999999999314e-05, 3.973600000000202e-05, 4.009799999999883e-05, 4.0167000000000674e-05, 4.0222999999998954e-05, 3.9708999999998884e-05, 4.0124999999998495e-05, 3.997199999999923e-05, 4.004200000000055e-05, 3.9818999999999966e-05, 3.9903000000000854e-05, 3.9582999999999285e-05, 3.949999999999787e-05, 4.0069000000000216e-05, 3.973600000000202e-05, 4.0096999999999355e-05, 3.977800000000073e-05, 4.0110999999998925e-05, 3.9680999999999744e-05, 4.0402999999997885e-05, 4.023599999999905e-05, 4.0346999999999605e-05, 3.9902999999997385e-05, 3.951400000000091e-05, 4.024999999999862e-05, 3.984799999999858e-05, 3.954200000000005e-05, 3.947199999999873e-05, 4.0110999999998925e-05, 3.944399999999959e-05, 3.995799999999966e-05, 4.0389000000001785e-05, 3.9874999999998245e-05, 3.9596999999998855e-05, 3.9875000000001715e-05, 4.045800000000016e-05, 3.9860999999998675e-05, 3.9889000000001285e-05, 3.973600000000202e-05, 3.947199999999873e-05, 3.949999999999787e-05, 3.944400000000306e-05, 3.952800000000048e-05, 4.031999999999994e-05, 3.977800000000073e-05, 3.973599999999855e-05]</msg>
<status status="PASS" starttime="20201110 08:35:11.527" endtime="20201110 08:35:11.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.522" endtime="20201110 08:35:11.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.532" endtime="20201110 08:35:11.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.535" endtime="20201110 08:35:11.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.534" endtime="20201110 08:35:11.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.530" endtime="20201110 08:35:11.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.166" endtime="20201110 08:35:11.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.166" endtime="20201110 08:35:11.556"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.565" endtime="20201110 08:35:11.581"></status>
</kw>
<msg timestamp="20201110 08:35:11.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.563" endtime="20201110 08:35:11.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.582" endtime="20201110 08:35:11.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.585" endtime="20201110 08:35:11.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.561" endtime="20201110 08:35:11.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.559" endtime="20201110 08:35:11.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.595" endtime="20201110 08:35:11.880"></status>
</kw>
<msg timestamp="20201110 08:35:11.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.593" endtime="20201110 08:35:11.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019754472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:11.884" endtime="20201110 08:35:11.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.892" endtime="20201110 08:35:11.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.591" endtime="20201110 08:35:11.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.589" endtime="20201110 08:35:11.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.899" level="INFO">${RESULT} = [{'time': 0.019795083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0611000000002895e-05, 'source_diff': 4.0611000000002895e-05}, {'time': 0.019845097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:11.895" endtime="20201110 08:35:11.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:11.912" level="INFO">${ACCURACY} = {'source_diff': [4.0611000000002895e-05, 4.1318999999997996e-05, 4.0541000000001576e-05, 4.052799999999801e-05, 4.072199999999998e-05, 4.1055000000001646e-05, 4.1430999999998025e-05, 4.063899999999856...</msg>
<status status="PASS" starttime="20201110 08:35:11.900" endtime="20201110 08:35:11.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.917" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:35:11.916" endtime="20201110 08:35:11.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.919" level="INFO">VALUE: [4.0611000000002895e-05, 4.1318999999997996e-05, 4.0541000000001576e-05, 4.052799999999801e-05, 4.072199999999998e-05, 4.1055000000001646e-05, 4.1430999999998025e-05, 4.0638999999998565e-05, 4.0874999999999245e-05, 4.0666999999997705e-05, 4.095800000000066e-05, 4.102799999999851e-05, 4.099999999999937e-05, 4.100000000000284e-05, 4.1430999999998025e-05, 4.049999999999887e-05, 4.108400000000026e-05, 4.119400000000134e-05, 4.0596999999999855e-05, 4.073599999999955e-05, 4.073599999999955e-05, 4.068000000000127e-05, 4.101399999999894e-05, 4.101400000000241e-05, 4.073599999999955e-05, 4.123600000000005e-05, 4.052800000000148e-05, 4.048600000000277e-05, 4.101399999999894e-05, 4.124999999999962e-05, 4.0445000000000064e-05, 4.0847000000000105e-05, 4.108400000000026e-05, 4.072199999999998e-05, 4.108400000000026e-05, 4.0526999999998536e-05, 4.0472999999999204e-05, 4.0987000000002743e-05, 4.1097000000000355e-05, 4.123600000000005e-05, 4.0624999999998995e-05, 4.143000000000202e-05, 4.0610999999999425e-05, 4.1195000000000814e-05, 4.1083000000000786e-05, 4.1318999999997996e-05, 4.058399999999976e-05, 4.124999999999962e-05, 4.1082999999997316e-05, 4.0625000000002465e-05]</msg>
<status status="PASS" starttime="20201110 08:35:11.918" endtime="20201110 08:35:11.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.913" endtime="20201110 08:35:11.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.923" endtime="20201110 08:35:11.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:11.926" endtime="20201110 08:35:11.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.925" endtime="20201110 08:35:11.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.921" endtime="20201110 08:35:11.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.557" endtime="20201110 08:35:11.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.557" endtime="20201110 08:35:11.947"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.956" endtime="20201110 08:35:11.971"></status>
</kw>
<msg timestamp="20201110 08:35:11.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.954" endtime="20201110 08:35:11.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:11.972" endtime="20201110 08:35:11.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.975" endtime="20201110 08:35:11.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.951" endtime="20201110 08:35:11.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.949" endtime="20201110 08:35:11.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.985" endtime="20201110 08:35:12.269"></status>
</kw>
<msg timestamp="20201110 08:35:12.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019591, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:11.983" endtime="20201110 08:35:12.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019591, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:12.274" endtime="20201110 08:35:12.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.282" endtime="20201110 08:35:12.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.981" endtime="20201110 08:35:12.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.979" endtime="20201110 08:35:12.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.289" level="INFO">${RESULT} = [{'time': 0.019591, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.151399999999944e-05, 'source_diff': 4.151399999999944e-05}, {'time': 0.019641042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:35:12.285" endtime="20201110 08:35:12.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:12.302" level="INFO">${ACCURACY} = {'source_diff': [4.151399999999944e-05, 4.225000000000062e-05, 4.2111000000000925e-05, 4.145800000000116e-05, 4.1916999999998955e-05, 4.1875000000000245e-05, 4.14860000000003e-05, 4.1695000000001314e-...</msg>
<status status="PASS" starttime="20201110 08:35:12.290" endtime="20201110 08:35:12.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.306" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:35:12.305" endtime="20201110 08:35:12.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.309" level="INFO">VALUE: [4.151399999999944e-05, 4.225000000000062e-05, 4.2111000000000925e-05, 4.145800000000116e-05, 4.1916999999998955e-05, 4.1875000000000245e-05, 4.14860000000003e-05, 4.1695000000001314e-05, 4.2180999999998775e-05, 4.227799999999976e-05, 4.1875000000000245e-05, 4.195800000000166e-05, 4.14860000000003e-05, 4.219400000000234e-05, 4.197199999999776e-05, 4.1888999999999815e-05, 4.2361000000001175e-05, 4.197199999999776e-05, 4.202799999999951e-05, 4.151400000000291e-05, 4.1653000000002605e-05, 4.19860000000008e-05, 4.229199999999933e-05, 4.1611000000000425e-05, 4.1596999999997386e-05, 4.173600000000055e-05, 4.204199999999908e-05, 4.201399999999994e-05, 4.208400000000126e-05, 4.1624999999999995e-05, 4.1473000000000204e-05, 4.1737000000000024e-05, 4.213800000000059e-05, 4.157000000000119e-05, 4.2347000000001606e-05, 4.169400000000184e-05, 4.2167000000002675e-05, 4.1847000000001106e-05, 4.225000000000062e-05, 4.223599999999758e-05, 4.225000000000062e-05, 4.2166999999999205e-05, 4.2139000000000065e-05, 4.2346999999998136e-05, 4.2152999999999635e-05, 4.1666999999998705e-05, 4.2208999999997915e-05, 4.1930999999998525e-05, 4.222200000000148e-05, 4.205600000000212e-05]</msg>
<status status="PASS" starttime="20201110 08:35:12.307" endtime="20201110 08:35:12.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.303" endtime="20201110 08:35:12.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.312" endtime="20201110 08:35:12.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.316" endtime="20201110 08:35:12.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.314" endtime="20201110 08:35:12.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.311" endtime="20201110 08:35:12.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.948" endtime="20201110 08:35:12.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.947" endtime="20201110 08:35:12.337"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.345" endtime="20201110 08:35:12.361"></status>
</kw>
<msg timestamp="20201110 08:35:12.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.344" endtime="20201110 08:35:12.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.362" endtime="20201110 08:35:12.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.365" endtime="20201110 08:35:12.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.341" endtime="20201110 08:35:12.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.339" endtime="20201110 08:35:12.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.375" endtime="20201110 08:35:12.660"></status>
</kw>
<msg timestamp="20201110 08:35:12.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019597958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.373" endtime="20201110 08:35:12.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019597958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.665" endtime="20201110 08:35:12.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.673" endtime="20201110 08:35:12.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.370" endtime="20201110 08:35:12.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.369" endtime="20201110 08:35:12.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.680" level="INFO">${RESULT} = [{'time': 0.019641125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3167000000000205e-05, 'source_diff': 4.3167000000000205e-05}, {'time': 0.019693139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:12.676" endtime="20201110 08:35:12.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:12.694" level="INFO">${ACCURACY} = {'source_diff': [4.3167000000000205e-05, 4.3374999999998276e-05, 4.252800000000001e-05, 4.2639000000000565e-05, 4.2653000000000135e-05, 4.3360999999998706e-05, 4.3431000000000025e-05, 4.26810000000027...</msg>
<status status="PASS" starttime="20201110 08:35:12.681" endtime="20201110 08:35:12.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.698" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:35:12.697" endtime="20201110 08:35:12.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.701" level="INFO">VALUE: [4.3167000000000205e-05, 4.3374999999998276e-05, 4.252800000000001e-05, 4.2639000000000565e-05, 4.2653000000000135e-05, 4.3360999999998706e-05, 4.3431000000000025e-05, 4.2681000000002745e-05, 4.326299999999825e-05, 4.304199999999661e-05, 4.3305000000000426e-05, 4.29999999999979e-05, 4.245799999999869e-05, 4.3389000000001315e-05, 4.244399999999912e-05, 4.294399999999962e-05, 4.3110999999998456e-05, 4.3417000000000455e-05, 4.244399999999912e-05, 4.279199999999983e-05, 4.256999999999872e-05, 4.2624999999997526e-05, 4.256999999999872e-05, 4.282000000000244e-05, 4.3346999999999136e-05, 4.308399999999879e-05, 4.330499999999696e-05, 4.2847000000002106e-05, 4.2930999999999525e-05, 4.2889000000000815e-05, 4.331999999999947e-05, 4.252800000000001e-05, 4.3318999999999996e-05, 4.295800000000266e-05, 4.291600000000048e-05, 4.2568999999999246e-05, 4.293000000000005e-05, 4.26799999999998e-05, 4.327800000000076e-05, 4.3097000000002356e-05, 4.2902999999996916e-05, 4.256999999999872e-05, 4.276399999999722e-05, 4.340199999999794e-05, 4.276400000000069e-05, 4.258399999999829e-05, 4.279199999999983e-05, 4.2875000000001245e-05, 4.28059999999994e-05, 4.3125000000001495e-05]</msg>
<status status="PASS" starttime="20201110 08:35:12.700" endtime="20201110 08:35:12.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.695" endtime="20201110 08:35:12.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.704" endtime="20201110 08:35:12.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.708" endtime="20201110 08:35:12.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.706" endtime="20201110 08:35:12.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.703" endtime="20201110 08:35:12.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.338" endtime="20201110 08:35:12.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.337" endtime="20201110 08:35:12.729"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.737" endtime="20201110 08:35:12.754"></status>
</kw>
<msg timestamp="20201110 08:35:12.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.736" endtime="20201110 08:35:12.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:12.755" endtime="20201110 08:35:12.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.758" endtime="20201110 08:35:12.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.733" endtime="20201110 08:35:12.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.731" endtime="20201110 08:35:12.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.767" endtime="20201110 08:35:13.053"></status>
</kw>
<msg timestamp="20201110 08:35:13.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01970275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:12.766" endtime="20201110 08:35:13.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01970275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:13.057" endtime="20201110 08:35:13.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.065" endtime="20201110 08:35:13.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.763" endtime="20201110 08:35:13.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.762" endtime="20201110 08:35:13.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.072" level="INFO">${RESULT} = [{'time': 0.019746889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4138999999998596e-05, 'source_diff': 4.4138999999998596e-05}, {'time': 0.019799861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:13.069" endtime="20201110 08:35:13.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.085" level="INFO">${ACCURACY} = {'source_diff': [4.4138999999998596e-05, 4.4124999999999026e-05, 4.419400000000087e-05, 4.4152999999998166e-05, 4.4388999999998846e-05, 4.4403000000001885e-05, 4.407000000000022e-05, 4.443100000000102...</msg>
<status status="PASS" starttime="20201110 08:35:13.073" endtime="20201110 08:35:13.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.090" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.089" endtime="20201110 08:35:13.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.092" level="INFO">VALUE: [4.4138999999998596e-05, 4.4124999999999026e-05, 4.419400000000087e-05, 4.4152999999998166e-05, 4.4388999999998846e-05, 4.4403000000001885e-05, 4.407000000000022e-05, 4.4431000000001025e-05, 4.358399999999929e-05, 4.3624999999998526e-05, 4.3903000000001385e-05, 4.413800000000259e-05, 4.39999999999989e-05, 4.429199999999786e-05, 4.404100000000161e-05, 4.372199999999951e-05, 4.3888999999998346e-05, 4.3555000000000677e-05, 4.4055000000001177e-05, 4.3596999999999386e-05, 4.4305000000001427e-05, 4.348599999999883e-05, 4.4110999999999456e-05, 4.4431000000001025e-05, 4.4181000000000775e-05, 4.3889000000001815e-05, 4.429200000000133e-05, 4.408399999999979e-05, 4.381999999999997e-05, 4.3596999999999386e-05, 4.4347000000000136e-05, 4.354200000000058e-05, 4.375000000000212e-05, 4.376400000000169e-05, 4.369400000000037e-05, 4.3819000000000496e-05, 4.3860999999999206e-05, 4.430499999999796e-05, 4.3860999999999206e-05, 4.44999999999994e-05, 4.351400000000144e-05, 4.373599999999908e-05, 4.423599999999958e-05, 4.3653000000001135e-05, 4.408399999999979e-05, 4.36939999999969e-05, 4.3945000000000095e-05, 4.372199999999951e-05, 4.3694999999999845e-05, 4.3917000000000955e-05]</msg>
<status status="PASS" starttime="20201110 08:35:13.091" endtime="20201110 08:35:13.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.086" endtime="20201110 08:35:13.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.096" endtime="20201110 08:35:13.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.099" endtime="20201110 08:35:13.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.098" endtime="20201110 08:35:13.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.094" endtime="20201110 08:35:13.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.730" endtime="20201110 08:35:13.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.729" endtime="20201110 08:35:13.120"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.129" endtime="20201110 08:35:13.145"></status>
</kw>
<msg timestamp="20201110 08:35:13.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.127" endtime="20201110 08:35:13.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.147" endtime="20201110 08:35:13.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.149" endtime="20201110 08:35:13.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.125" endtime="20201110 08:35:13.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.123" endtime="20201110 08:35:13.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.159" endtime="20201110 08:35:13.445"></status>
</kw>
<msg timestamp="20201110 08:35:13.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019799014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.157" endtime="20201110 08:35:13.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019799014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.449" endtime="20201110 08:35:13.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.457" endtime="20201110 08:35:13.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.155" endtime="20201110 08:35:13.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.153" endtime="20201110 08:35:13.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.464" level="INFO">${RESULT} = [{'time': 0.019844083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.506899999999828e-05, 'source_diff': 4.506899999999828e-05}, {'time': 0.019898083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:13.460" endtime="20201110 08:35:13.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.477" level="INFO">${ACCURACY} = {'source_diff': [4.506899999999828e-05, 4.4597000000000386e-05, 4.4833000000001066e-05, 4.494400000000162e-05, 4.4874999999999776e-05, 4.501399999999947e-05, 4.448599999999983e-05, 4.529199999999886e-...</msg>
<status status="PASS" starttime="20201110 08:35:13.465" endtime="20201110 08:35:13.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.482" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.481" endtime="20201110 08:35:13.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.484" level="INFO">VALUE: [4.506899999999828e-05, 4.4597000000000386e-05, 4.4833000000001066e-05, 4.494400000000162e-05, 4.4874999999999776e-05, 4.501399999999947e-05, 4.448599999999983e-05, 4.529199999999886e-05, 4.5195000000001345e-05, 4.448599999999983e-05, 4.482000000000097e-05, 4.4444999999997126e-05, 4.5195000000001345e-05, 4.459799999999986e-05, 4.501400000000294e-05, 4.5431000000002025e-05, 4.491599999999901e-05, 4.5375000000000276e-05, 4.4833000000001066e-05, 4.51939999999984e-05, 4.5138999999999596e-05, 4.495800000000119e-05, 4.448599999999983e-05, 4.5138999999999596e-05, 4.4819000000001497e-05, 4.526399999999972e-05, 4.523600000000058e-05, 4.447200000000026e-05, 4.5403000000002885e-05, 4.484699999999717e-05, 4.5319999999998e-05, 4.472200000000051e-05, 4.509699999999742e-05, 4.501399999999947e-05, 4.525000000000015e-05, 4.530499999999896e-05, 4.509800000000036e-05, 4.44999999999994e-05, 4.538800000000037e-05, 4.479100000000236e-05, 4.465199999999919e-05, 4.502799999999904e-05, 4.5083000000001316e-05, 4.506999999999775e-05, 4.5083000000001316e-05, 4.445800000000069e-05, 4.4583000000000816e-05, 4.4624999999999526e-05, 4.4874999999999776e-05, 4.48060000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:35:13.483" endtime="20201110 08:35:13.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.478" endtime="20201110 08:35:13.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.488" endtime="20201110 08:35:13.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.492" endtime="20201110 08:35:13.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.490" endtime="20201110 08:35:13.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.486" endtime="20201110 08:35:13.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.121" endtime="20201110 08:35:13.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.120" endtime="20201110 08:35:13.514"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.522" endtime="20201110 08:35:13.539"></status>
</kw>
<msg timestamp="20201110 08:35:13.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.521" endtime="20201110 08:35:13.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.540" endtime="20201110 08:35:13.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.543" endtime="20201110 08:35:13.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.518" endtime="20201110 08:35:13.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.516" endtime="20201110 08:35:13.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.553" endtime="20201110 08:35:13.839"></status>
</kw>
<msg timestamp="20201110 08:35:13.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.551" endtime="20201110 08:35:13.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.843" endtime="20201110 08:35:13.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.852" endtime="20201110 08:35:13.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.549" endtime="20201110 08:35:13.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.547" endtime="20201110 08:35:13.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.858" level="INFO">${RESULT} = [{'time': 0.020214125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.608299999999885e-05, 'source_diff': 4.608299999999885e-05}, {'time': 0.020270111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:13.855" endtime="20201110 08:35:13.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:13.872" level="INFO">${ACCURACY} = {'source_diff': [4.608299999999885e-05, 4.554199999999911e-05, 4.609699999999842e-05, 4.551399999999997e-05, 4.606999999999875e-05, 4.6361000000001706e-05, 4.573600000000108e-05, 4.5445000000001595e-0...</msg>
<status status="PASS" starttime="20201110 08:35:13.859" endtime="20201110 08:35:13.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.876" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:35:13.875" endtime="20201110 08:35:13.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.879" level="INFO">VALUE: [4.608299999999885e-05, 4.554199999999911e-05, 4.609699999999842e-05, 4.551399999999997e-05, 4.606999999999875e-05, 4.6361000000001706e-05, 4.573600000000108e-05, 4.5445000000001595e-05, 4.629199999999986e-05, 4.6125000000001026e-05, 4.5722999999997516e-05, 4.630599999999943e-05, 4.586200000000068e-05, 4.620799999999897e-05, 4.636099999999824e-05, 4.561099999999749e-05, 4.617999999999983e-05, 4.634699999999867e-05, 4.606899999999928e-05, 4.5945000000002095e-05, 4.569400000000237e-05, 4.638899999999738e-05, 4.5861000000001206e-05, 4.6166999999999736e-05, 4.557000000000172e-05, 4.601400000000047e-05, 4.552799999999954e-05, 4.5402999999999416e-05, 4.622200000000201e-05, 4.573600000000108e-05, 4.58199999999985e-05, 4.567999999999933e-05, 4.6389000000000846e-05, 4.558299999999835e-05, 4.622200000000201e-05, 4.5847000000001636e-05, 4.565200000000019e-05, 4.629100000000039e-05, 4.617999999999983e-05, 4.584699999999817e-05, 4.624999999999768e-05, 4.6139000000000596e-05, 4.576400000000022e-05, 4.555599999999868e-05, 4.5666999999999236e-05, 4.556999999999825e-05, 4.555600000000215e-05, 4.558399999999782e-05, 4.608399999999832e-05, 4.5709000000001415e-05]</msg>
<status status="PASS" starttime="20201110 08:35:13.877" endtime="20201110 08:35:13.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.872" endtime="20201110 08:35:13.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.882" endtime="20201110 08:35:13.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.886" endtime="20201110 08:35:13.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.884" endtime="20201110 08:35:13.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.880" endtime="20201110 08:35:13.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.515" endtime="20201110 08:35:13.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.514" endtime="20201110 08:35:13.906"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.915" endtime="20201110 08:35:13.932"></status>
</kw>
<msg timestamp="20201110 08:35:13.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.913" endtime="20201110 08:35:13.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:13.934" endtime="20201110 08:35:13.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.936" endtime="20201110 08:35:13.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.911" endtime="20201110 08:35:13.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.909" endtime="20201110 08:35:13.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.946" endtime="20201110 08:35:14.233"></status>
</kw>
<msg timestamp="20201110 08:35:14.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.945" endtime="20201110 08:35:14.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.238" endtime="20201110 08:35:14.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.248" endtime="20201110 08:35:14.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.942" endtime="20201110 08:35:14.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.941" endtime="20201110 08:35:14.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.257" level="INFO">${RESULT} = [{'time': 0.020423014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7181000000000306e-05, 'source_diff': 4.7181000000000306e-05}, {'time': 0.02048, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:14.253" endtime="20201110 08:35:14.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:14.273" level="INFO">${ACCURACY} = {'source_diff': [4.7181000000000306e-05, 4.669400000000337e-05, 4.673600000000208e-05, 4.6667000000000236e-05, 4.6944999999999626e-05, 4.6709000000002415e-05, 4.73330000000001e-05, 4.680599999999993e-...</msg>
<status status="PASS" starttime="20201110 08:35:14.258" endtime="20201110 08:35:14.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.278" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:35:14.277" endtime="20201110 08:35:14.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.280" level="INFO">VALUE: [4.7181000000000306e-05, 4.669400000000337e-05, 4.673600000000208e-05, 4.6667000000000236e-05, 4.6944999999999626e-05, 4.6709000000002415e-05, 4.73330000000001e-05, 4.680599999999993e-05, 4.7181000000000306e-05, 4.6972999999998766e-05, 4.734699999999967e-05, 4.731900000000053e-05, 4.648599999999836e-05, 4.695799999999972e-05, 4.655500000000021e-05, 4.720799999999997e-05, 4.738899999999838e-05, 4.65000000000014e-05, 4.672199999999904e-05, 4.708299999999985e-05, 4.673599999999861e-05, 4.673599999999861e-05, 4.716699999999727e-05, 4.6847000000002637e-05, 4.680599999999993e-05, 4.697199999999929e-05, 4.659800000000186e-05, 4.702800000000104e-05, 4.6667000000000236e-05, 4.691599999999754e-05, 4.654100000000064e-05, 4.713800000000212e-05, 4.7139000000001596e-05, 4.720799999999997e-05, 4.726400000000172e-05, 4.677799999999732e-05, 4.688899999999788e-05, 4.744400000000065e-05, 4.712499999999856e-05, 4.680599999999993e-05, 4.7375000000002276e-05, 4.7417000000000986e-05, 4.659699999999892e-05, 4.711099999999899e-05, 4.6945000000003095e-05, 4.6709000000002415e-05, 4.680599999999993e-05, 4.698599999999886e-05, 4.742999999999761e-05, 4.677800000000079e-05]</msg>
<status status="PASS" starttime="20201110 08:35:14.279" endtime="20201110 08:35:14.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.274" endtime="20201110 08:35:14.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.284" endtime="20201110 08:35:14.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.288" endtime="20201110 08:35:14.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.286" endtime="20201110 08:35:14.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.282" endtime="20201110 08:35:14.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.907" endtime="20201110 08:35:14.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.907" endtime="20201110 08:35:14.308"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.317" endtime="20201110 08:35:14.333"></status>
</kw>
<msg timestamp="20201110 08:35:14.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.316" endtime="20201110 08:35:14.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.335" endtime="20201110 08:35:14.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.337" endtime="20201110 08:35:14.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.313" endtime="20201110 08:35:14.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.311" endtime="20201110 08:35:14.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.347" endtime="20201110 08:35:14.634"></status>
</kw>
<msg timestamp="20201110 08:35:14.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.346" endtime="20201110 08:35:14.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.638" endtime="20201110 08:35:14.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.646" endtime="20201110 08:35:14.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.343" endtime="20201110 08:35:14.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.342" endtime="20201110 08:35:14.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.653" level="INFO">${RESULT} = [{'time': 0.020069819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.75269999999986e-05, 'source_diff': 4.75269999999986e-05}, {'time': 0.020124833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:14.649" endtime="20201110 08:35:14.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:14.666" level="INFO">${ACCURACY} = {'source_diff': [4.75269999999986e-05, 4.75000000000024e-05, 4.784700000000017e-05, 4.802799999999857e-05, 4.759699999999992e-05, 4.830600000000143e-05, 4.76529999999982e-05, 4.823600000000011e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:35:14.654" endtime="20201110 08:35:14.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.671" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:35:14.670" endtime="20201110 08:35:14.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.673" level="INFO">VALUE: [4.75269999999986e-05, 4.75000000000024e-05, 4.784700000000017e-05, 4.802799999999857e-05, 4.759699999999992e-05, 4.830600000000143e-05, 4.76529999999982e-05, 4.823600000000011e-05, 4.744399999999718e-05, 4.7653000000001666e-05, 4.804200000000161e-05, 4.752800000000154e-05, 4.76940000000009e-05, 4.829200000000186e-05, 4.757000000000025e-05, 4.8431000000001556e-05, 4.792999999999811e-05, 4.806900000000128e-05, 4.842999999999861e-05, 4.758300000000035e-05, 4.831900000000153e-05, 4.75000000000024e-05, 4.7917000000001486e-05, 4.824999999999968e-05, 4.829199999999839e-05, 4.758300000000035e-05, 4.830600000000143e-05, 4.822200000000054e-05, 4.8403000000002416e-05, 4.823600000000011e-05, 4.8153000000002166e-05, 4.802799999999857e-05, 4.759699999999992e-05, 4.8139000000002596e-05, 4.837499999999981e-05, 4.752700000000207e-05, 4.776399999999875e-05, 4.829099999999892e-05, 4.772200000000004e-05, 4.794400000000115e-05, 4.801400000000247e-05, 4.762499999999906e-05, 4.826399999999925e-05, 4.8389000000002846e-05, 4.799999999999943e-05, 4.80000000000029e-05, 4.7625000000002526e-05, 4.780600000000093e-05, 4.772200000000004e-05, 4.808300000000085e-05]</msg>
<status status="PASS" starttime="20201110 08:35:14.672" endtime="20201110 08:35:14.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.667" endtime="20201110 08:35:14.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.677" endtime="20201110 08:35:14.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.680" endtime="20201110 08:35:14.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.678" endtime="20201110 08:35:14.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.675" endtime="20201110 08:35:14.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.309" endtime="20201110 08:35:14.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.309" endtime="20201110 08:35:14.701"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.709" endtime="20201110 08:35:14.727"></status>
</kw>
<msg timestamp="20201110 08:35:14.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.708" endtime="20201110 08:35:14.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:14.728" endtime="20201110 08:35:14.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.731" endtime="20201110 08:35:14.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.705" endtime="20201110 08:35:14.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.703" endtime="20201110 08:35:14.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.741" endtime="20201110 08:35:15.026"></status>
</kw>
<msg timestamp="20201110 08:35:15.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.739" endtime="20201110 08:35:15.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.030" endtime="20201110 08:35:15.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.038" endtime="20201110 08:35:15.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.736" endtime="20201110 08:35:15.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.735" endtime="20201110 08:35:15.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.045" level="INFO">${RESULT} = [{'time': 0.020243014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870800000000147e-05, 'source_diff': 4.870800000000147e-05}, {'time': 0.020299972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:15.042" endtime="20201110 08:35:15.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.058" level="INFO">${ACCURACY} = {'source_diff': [4.870800000000147e-05, 4.887500000000031e-05, 4.905600000000218e-05, 4.938900000000038e-05, 4.86529999999992e-05, 4.909700000000142e-05, 4.894400000000215e-05, 4.894399999999868e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:15.046" endtime="20201110 08:35:15.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.063" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.062" endtime="20201110 08:35:15.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.065" level="INFO">VALUE: [4.870800000000147e-05, 4.887500000000031e-05, 4.905600000000218e-05, 4.938900000000038e-05, 4.86529999999992e-05, 4.909700000000142e-05, 4.894400000000215e-05, 4.894399999999868e-05, 4.938900000000038e-05, 4.936099999999777e-05, 4.8931000000002056e-05, 4.929200000000286e-05, 4.873599999999714e-05, 4.8458999999997227e-05, 4.905599999999871e-05, 4.8958999999997727e-05, 4.930600000000243e-05, 4.8473000000000266e-05, 4.890199999999997e-05, 4.926400000000025e-05, 4.941699999999952e-05, 4.940299999999995e-05, 4.942999999999961e-05, 4.904199999999914e-05, 4.9417000000002986e-05, 4.9320000000002e-05, 4.862500000000006e-05, 4.908300000000185e-05, 4.9181000000002306e-05, 4.925000000000068e-05, 4.895799999999825e-05, 4.918099999999884e-05, 4.930600000000243e-05, 4.8945000000001626e-05, 4.863899999999963e-05, 4.929199999999939e-05, 4.950000000000093e-05, 4.902699999999663e-05, 4.887500000000031e-05, 4.888899999999988e-05, 4.912500000000056e-05, 4.8972999999997296e-05, 4.866599999999929e-05, 4.873600000000061e-05, 4.940299999999995e-05, 4.922200000000154e-05, 4.9014e-05, 4.875000000000018e-05, 4.8445000000001126e-05, 4.941699999999952e-05]</msg>
<status status="PASS" starttime="20201110 08:35:15.064" endtime="20201110 08:35:15.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.059" endtime="20201110 08:35:15.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.073" endtime="20201110 08:35:15.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.077" endtime="20201110 08:35:15.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.075" endtime="20201110 08:35:15.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.071" endtime="20201110 08:35:15.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.702" endtime="20201110 08:35:15.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.701" endtime="20201110 08:35:15.097"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.106" endtime="20201110 08:35:15.123"></status>
</kw>
<msg timestamp="20201110 08:35:15.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.105" endtime="20201110 08:35:15.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.125" endtime="20201110 08:35:15.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.127" endtime="20201110 08:35:15.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.102" endtime="20201110 08:35:15.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.100" endtime="20201110 08:35:15.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.137" endtime="20201110 08:35:15.424"></status>
</kw>
<msg timestamp="20201110 08:35:15.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.136" endtime="20201110 08:35:15.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.428" endtime="20201110 08:35:15.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.437" endtime="20201110 08:35:15.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.133" endtime="20201110 08:35:15.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.131" endtime="20201110 08:35:15.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.443" level="INFO">${RESULT} = [{'time': 0.019646583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.001399999999753e-05, 'source_diff': 5.001399999999753e-05}, {'time': 0.019704611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:15.440" endtime="20201110 08:35:15.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.457" level="INFO">${ACCURACY} = {'source_diff': [5.001399999999753e-05, 5.027800000000082e-05, 5.008299999999938e-05, 4.947199999999832e-05, 5.030500000000049e-05, 4.981900000000303e-05, 5.016700000000027e-05, 4.948600000000136e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:15.444" endtime="20201110 08:35:15.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.462" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.461" endtime="20201110 08:35:15.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.465" level="INFO">VALUE: [5.001399999999753e-05, 5.027800000000082e-05, 5.008299999999938e-05, 4.947199999999832e-05, 5.030500000000049e-05, 4.981900000000303e-05, 5.016700000000027e-05, 4.948600000000136e-05, 5.036099999999877e-05, 5.016700000000027e-05, 5.026400000000125e-05, 5.004200000000014e-05, 5.025000000000168e-05, 4.998600000000186e-05, 5.013900000000113e-05, 5.043000000000061e-05, 4.967999999999986e-05, 5.008299999999938e-05, 4.959699999999845e-05, 5.023599999999864e-05, 5.006899999999981e-05, 4.958299999999888e-05, 5.036099999999877e-05, 4.998600000000186e-05, 4.944399999999918e-05, 5.001399999999753e-05, 5.008300000000285e-05, 5.025000000000168e-05, 4.9445000000002126e-05, 4.993099999999959e-05, 4.977800000000032e-05, 4.98339999999986e-05, 4.959799999999792e-05, 4.944399999999918e-05, 5.016700000000027e-05, 5.033299999999963e-05, 4.98469999999987e-05, 4.961199999999749e-05, 4.990200000000097e-05, 5.031900000000006e-05, 4.973599999999814e-05, 4.947200000000179e-05, 4.975000000000118e-05, 4.958399999999835e-05, 4.994499999999916e-05, 4.979199999999989e-05, 4.980599999999946e-05, 5.027799999999735e-05, 5.027800000000082e-05, 5.016700000000027e-05]</msg>
<status status="PASS" starttime="20201110 08:35:15.463" endtime="20201110 08:35:15.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.458" endtime="20201110 08:35:15.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.468" endtime="20201110 08:35:15.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.472" endtime="20201110 08:35:15.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.470" endtime="20201110 08:35:15.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.467" endtime="20201110 08:35:15.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.098" endtime="20201110 08:35:15.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.098" endtime="20201110 08:35:15.493"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.501" endtime="20201110 08:35:15.518"></status>
</kw>
<msg timestamp="20201110 08:35:15.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.500" endtime="20201110 08:35:15.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.520" endtime="20201110 08:35:15.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.522" endtime="20201110 08:35:15.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.497" endtime="20201110 08:35:15.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.495" endtime="20201110 08:35:15.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.532" endtime="20201110 08:35:15.817"></status>
</kw>
<msg timestamp="20201110 08:35:15.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020431222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.531" endtime="20201110 08:35:15.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020431222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.821" endtime="20201110 08:35:15.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.830" endtime="20201110 08:35:15.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.528" endtime="20201110 08:35:15.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.526" endtime="20201110 08:35:15.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.836" level="INFO">${RESULT} = [{'time': 0.020481778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055600000000021e-05, 'source_diff': 5.055600000000021e-05}, {'time': 0.020540764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:15.833" endtime="20201110 08:35:15.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:15.851" level="INFO">${ACCURACY} = {'source_diff': [5.055600000000021e-05, 5.06530000000012e-05, 5.104200000000114e-05, 5.120899999999998e-05, 5.105599999999724e-05, 5.132000000000053e-05, 5.072199999999957e-05, 5.124999999999921e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:15.837" endtime="20201110 08:35:15.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.855" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:35:15.854" endtime="20201110 08:35:15.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.858" level="INFO">VALUE: [5.055600000000021e-05, 5.06530000000012e-05, 5.104200000000114e-05, 5.120899999999998e-05, 5.105599999999724e-05, 5.132000000000053e-05, 5.072199999999957e-05, 5.124999999999921e-05, 5.105500000000124e-05, 5.148599999999989e-05, 5.083300000000013e-05, 5.099999999999896e-05, 5.051399999999803e-05, 5.055500000000074e-05, 5.129200000000139e-05, 5.095899999999973e-05, 5.054199999999717e-05, 5.076400000000175e-05, 5.132000000000053e-05, 5.072199999999957e-05, 5.143100000000109e-05, 5.104200000000114e-05, 5.059800000000239e-05, 5.123599999999964e-05, 5.134799999999967e-05, 5.136199999999924e-05, 5.102699999999863e-05, 5.129100000000192e-05, 5.079100000000142e-05, 5.074999999999871e-05, 5.108300000000038e-05, 5.1443999999997714e-05, 5.1415999999998574e-05, 5.144500000000066e-05, 5.045799999999975e-05, 5.144500000000066e-05, 5.052800000000107e-05, 5.125000000000268e-05, 5.130599999999749e-05, 5.069499999999991e-05, 5.125000000000268e-05, 5.144400000000118e-05, 5.140299999999848e-05, 5.055600000000021e-05, 5.061200000000196e-05, 5.124999999999921e-05, 5.0902000000001973e-05, 5.1165999999998324e-05, 5.074999999999871e-05, 5.055600000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:35:15.856" endtime="20201110 08:35:15.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.852" endtime="20201110 08:35:15.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.861" endtime="20201110 08:35:15.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.865" endtime="20201110 08:35:15.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.863" endtime="20201110 08:35:15.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.860" endtime="20201110 08:35:15.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.494" endtime="20201110 08:35:15.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.493" endtime="20201110 08:35:15.886"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.894" endtime="20201110 08:35:15.911"></status>
</kw>
<msg timestamp="20201110 08:35:15.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.893" endtime="20201110 08:35:15.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:15.913" endtime="20201110 08:35:15.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.915" endtime="20201110 08:35:15.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.890" endtime="20201110 08:35:15.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.888" endtime="20201110 08:35:15.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.925" endtime="20201110 08:35:16.211"></status>
</kw>
<msg timestamp="20201110 08:35:16.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.924" endtime="20201110 08:35:16.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.216" endtime="20201110 08:35:16.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.224" endtime="20201110 08:35:16.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.921" endtime="20201110 08:35:16.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.919" endtime="20201110 08:35:16.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.230" level="INFO">${RESULT} = [{'time': 0.019720028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.149999999999946e-05, 'source_diff': 5.149999999999946e-05}, {'time': 0.019781042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:16.227" endtime="20201110 08:35:16.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:16.244" level="INFO">${ACCURACY} = {'source_diff': [5.149999999999946e-05, 5.191699999999855e-05, 5.180599999999799e-05, 5.186199999999974e-05, 5.194400000000168e-05, 5.1708000000001e-05, 5.147200000000032e-05, 5.2221999999997604e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:16.231" endtime="20201110 08:35:16.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.248" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:35:16.247" endtime="20201110 08:35:16.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.251" level="INFO">VALUE: [5.149999999999946e-05, 5.191699999999855e-05, 5.180599999999799e-05, 5.186199999999974e-05, 5.194400000000168e-05, 5.1708000000001e-05, 5.147200000000032e-05, 5.2221999999997604e-05, 5.227799999999935e-05, 5.2415999999999574e-05, 5.162499999999959e-05, 5.215299999999923e-05, 5.165299999999873e-05, 5.194500000000116e-05, 5.177799999999885e-05, 5.18470000000007e-05, 5.158299999999741e-05, 5.180599999999799e-05, 5.166700000000177e-05, 5.16669999999983e-05, 5.187499999999984e-05, 5.218099999999837e-05, 5.188899999999941e-05, 5.1902000000002974e-05, 5.194400000000168e-05, 5.180499999999852e-05, 5.179099999999895e-05, 5.2193999999998464e-05, 5.1708000000001e-05, 5.180599999999799e-05, 5.161100000000002e-05, 5.211100000000052e-05, 5.223600000000064e-05, 5.152800000000207e-05, 5.241699999999905e-05, 5.195900000000073e-05, 5.222300000000055e-05, 5.244500000000166e-05, 5.190299999999898e-05, 5.220900000000098e-05, 5.23470000000012e-05, 5.204100000000267e-05, 5.1901999999999504e-05, 5.156899999999784e-05, 5.2165999999999324e-05, 5.186100000000027e-05, 5.197200000000082e-05, 5.173600000000014e-05, 5.2193999999998464e-05, 5.193000000000211e-05]</msg>
<status status="PASS" starttime="20201110 08:35:16.249" endtime="20201110 08:35:16.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.245" endtime="20201110 08:35:16.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.254" endtime="20201110 08:35:16.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:16.258" endtime="20201110 08:35:16.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.256" endtime="20201110 08:35:16.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.253" endtime="20201110 08:35:16.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.886" endtime="20201110 08:35:16.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.886" endtime="20201110 08:35:16.279"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.287" endtime="20201110 08:35:16.303"></status>
</kw>
<msg timestamp="20201110 08:35:16.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.286" endtime="20201110 08:35:16.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.305" endtime="20201110 08:35:16.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.307" endtime="20201110 08:35:16.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.283" endtime="20201110 08:35:16.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.281" endtime="20201110 08:35:16.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.317" endtime="20201110 08:35:16.604"></status>
</kw>
<msg timestamp="20201110 08:35:16.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.316" endtime="20201110 08:35:16.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.608" endtime="20201110 08:35:16.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.616" endtime="20201110 08:35:16.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.313" endtime="20201110 08:35:16.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.311" endtime="20201110 08:35:16.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.623" level="INFO">${RESULT} = [{'time': 0.019740361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.309700000000195e-05, 'source_diff': 5.309700000000195e-05}, {'time': 0.019803292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:16.620" endtime="20201110 08:35:16.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:16.636" level="INFO">${ACCURACY} = {'source_diff': [5.309700000000195e-05, 5.28340000000016e-05, 5.280599999999899e-05, 5.290299999999998e-05, 5.279199999999942e-05, 5.277700000000038e-05, 5.311100000000152e-05, 5.326400000000078e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:16.624" endtime="20201110 08:35:16.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.641" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:35:16.640" endtime="20201110 08:35:16.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.643" level="INFO">VALUE: [5.309700000000195e-05, 5.28340000000016e-05, 5.280599999999899e-05, 5.290299999999998e-05, 5.279199999999942e-05, 5.277700000000038e-05, 5.311100000000152e-05, 5.326400000000078e-05, 5.315300000000023e-05, 5.283300000000213e-05, 5.305499999999977e-05, 5.265299999999973e-05, 5.283399999999813e-05, 5.244400000000218e-05, 5.2693999999998964e-05, 5.298600000000139e-05, 5.300000000000096e-05, 5.322299999999808e-05, 5.31669999999998e-05, 5.257000000000178e-05, 5.284800000000117e-05, 5.3207999999999034e-05, 5.254100000000317e-05, 5.272200000000157e-05, 5.252700000000013e-05, 5.250000000000046e-05, 5.330500000000002e-05, 5.3415999999997105e-05, 5.313900000000066e-05, 5.263900000000016e-05, 5.304199999999967e-05, 5.31669999999998e-05, 5.269499999999844e-05, 5.295899999999826e-05, 5.281999999999856e-05, 5.297299999999783e-05, 5.306999999999881e-05, 5.268099999999887e-05, 5.2693999999998964e-05, 5.275000000000071e-05, 5.3457999999999284e-05, 5.2457999999998284e-05, 5.2943999999999214e-05, 5.338900000000091e-05, 5.259700000000145e-05, 5.331899999999959e-05, 5.280499999999952e-05, 5.341700000000005e-05, 5.301400000000053e-05, 5.268099999999887e-05]</msg>
<status status="PASS" starttime="20201110 08:35:16.642" endtime="20201110 08:35:16.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.637" endtime="20201110 08:35:16.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.647" endtime="20201110 08:35:16.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:16.650" endtime="20201110 08:35:16.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.649" endtime="20201110 08:35:16.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.645" endtime="20201110 08:35:16.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.280" endtime="20201110 08:35:16.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.279" endtime="20201110 08:35:16.671"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.680" endtime="20201110 08:35:16.697"></status>
</kw>
<msg timestamp="20201110 08:35:16.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.678" endtime="20201110 08:35:16.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:16.698" endtime="20201110 08:35:16.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.701" endtime="20201110 08:35:16.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.676" endtime="20201110 08:35:16.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.674" endtime="20201110 08:35:16.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.711" endtime="20201110 08:35:16.996"></status>
</kw>
<msg timestamp="20201110 08:35:16.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020184764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.709" endtime="20201110 08:35:17.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020184764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.000" endtime="20201110 08:35:17.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.009" endtime="20201110 08:35:17.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.707" endtime="20201110 08:35:17.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.705" endtime="20201110 08:35:17.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.015" level="INFO">${RESULT} = [{'time': 0.020184764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3957999999999784e-05, 'source_diff': 5.3957999999999784e-05}, {'time': 0.020247764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:17.012" endtime="20201110 08:35:17.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:17.029" level="INFO">${ACCURACY} = {'source_diff': [5.3957999999999784e-05, 5.350000000000146e-05, 5.362500000000159e-05, 5.408299999999991e-05, 5.432000000000006e-05, 5.397299999999883e-05, 5.365299999999726e-05, 5.408399999999938e-05...</msg>
<status status="PASS" starttime="20201110 08:35:17.016" endtime="20201110 08:35:17.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.033" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:35:17.032" endtime="20201110 08:35:17.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.036" level="INFO">VALUE: [5.3957999999999784e-05, 5.350000000000146e-05, 5.362500000000159e-05, 5.408299999999991e-05, 5.432000000000006e-05, 5.397299999999883e-05, 5.365299999999726e-05, 5.408399999999938e-05, 5.40419999999972e-05, 5.372299999999858e-05, 5.35410000000007e-05, 5.3944000000000214e-05, 5.429200000000092e-05, 5.404200000000067e-05, 5.3485999999998424e-05, 5.404200000000067e-05, 5.35280000000006e-05, 5.4221999999999604e-05, 5.388899999999794e-05, 5.3707999999999534e-05, 5.405600000000024e-05, 5.408399999999938e-05, 5.430600000000049e-05, 5.438899999999844e-05, 5.441700000000105e-05, 5.41670000000008e-05, 5.432000000000006e-05, 5.370899999999901e-05, 5.377700000000138e-05, 5.348600000000189e-05, 5.427800000000135e-05, 5.4013999999998064e-05, 5.391700000000055e-05, 5.383300000000313e-05, 5.431900000000059e-05, 5.395800000000325e-05, 5.411100000000252e-05, 5.437500000000234e-05, 5.3957999999999784e-05, 5.43340000000031e-05, 5.412499999999862e-05, 5.393100000000012e-05, 5.3708000000003e-05, 5.430500000000102e-05, 5.361100000000202e-05, 5.4457999999996815e-05, 5.3443999999999714e-05, 5.35410000000007e-05, 5.4166000000001324e-05, 5.4263999999998314e-05]</msg>
<status status="PASS" starttime="20201110 08:35:17.034" endtime="20201110 08:35:17.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.030" endtime="20201110 08:35:17.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.039" endtime="20201110 08:35:17.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.043" endtime="20201110 08:35:17.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.041" endtime="20201110 08:35:17.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.038" endtime="20201110 08:35:17.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.672" endtime="20201110 08:35:17.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.672" endtime="20201110 08:35:17.063"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.072" endtime="20201110 08:35:17.090"></status>
</kw>
<msg timestamp="20201110 08:35:17.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.071" endtime="20201110 08:35:17.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.091" endtime="20201110 08:35:17.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.093" endtime="20201110 08:35:17.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.068" endtime="20201110 08:35:17.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.066" endtime="20201110 08:35:17.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.103" endtime="20201110 08:35:17.389"></status>
</kw>
<msg timestamp="20201110 08:35:17.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.102" endtime="20201110 08:35:17.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019587306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.393" endtime="20201110 08:35:17.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.401" endtime="20201110 08:35:17.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.099" endtime="20201110 08:35:17.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.098" endtime="20201110 08:35:17.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.408" level="INFO">${RESULT} = [{'time': 0.019642306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4999999999999494e-05, 'source_diff': 5.4999999999999494e-05}, {'time': 0.019708306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:17.404" endtime="20201110 08:35:17.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:17.422" level="INFO">${ACCURACY} = {'source_diff': [5.4999999999999494e-05, 5.540299999999901e-05, 5.480499999999805e-05, 5.531900000000159e-05, 5.5137999999999715e-05, 5.5208000000001034e-05, 5.4458000000000284e-05, 5.5236000000000174...</msg>
<status status="PASS" starttime="20201110 08:35:17.409" endtime="20201110 08:35:17.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.427" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:35:17.426" endtime="20201110 08:35:17.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.429" level="INFO">VALUE: [5.4999999999999494e-05, 5.540299999999901e-05, 5.480499999999805e-05, 5.531900000000159e-05, 5.5137999999999715e-05, 5.5208000000001034e-05, 5.4458000000000284e-05, 5.5236000000000174e-05, 5.4985999999999924e-05, 5.4443999999997245e-05, 5.508299999999744e-05, 5.536099999999683e-05, 5.529200000000192e-05, 5.465300000000173e-05, 5.487499999999937e-05, 5.4985999999999924e-05, 5.537499999999987e-05, 5.46670000000013e-05, 5.4763999999998814e-05, 5.470900000000001e-05, 5.4722000000000104e-05, 5.4722000000000104e-05, 5.452700000000213e-05, 5.500000000000296e-05, 5.513899999999919e-05, 5.5041999999998203e-05, 5.506899999999787e-05, 5.513900000000266e-05, 5.465300000000173e-05, 5.461099999999955e-05, 5.482000000000056e-05, 5.515299999999876e-05, 5.51809999999979e-05, 5.4485999999999424e-05, 5.462499999999912e-05, 5.476299999999934e-05, 5.477699999999891e-05, 5.5013999999999064e-05, 5.4429999999997675e-05, 5.4722000000000104e-05, 5.4958000000000784e-05, 5.4679999999997925e-05, 5.4735999999999674e-05, 5.477700000000238e-05, 5.481900000000109e-05, 5.543100000000162e-05, 5.5291999999998453e-05, 5.516699999999833e-05, 5.4499999999998994e-05, 5.463899999999869e-05]</msg>
<status status="PASS" starttime="20201110 08:35:17.428" endtime="20201110 08:35:17.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.423" endtime="20201110 08:35:17.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.433" endtime="20201110 08:35:17.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.436" endtime="20201110 08:35:17.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.435" endtime="20201110 08:35:17.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.431" endtime="20201110 08:35:17.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.064" endtime="20201110 08:35:17.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.064" endtime="20201110 08:35:17.457"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.466" endtime="20201110 08:35:17.483"></status>
</kw>
<msg timestamp="20201110 08:35:17.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.464" endtime="20201110 08:35:17.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.485" endtime="20201110 08:35:17.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.488" endtime="20201110 08:35:17.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.461" endtime="20201110 08:35:17.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.459" endtime="20201110 08:35:17.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.499" endtime="20201110 08:35:17.786"></status>
</kw>
<msg timestamp="20201110 08:35:17.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.497" endtime="20201110 08:35:17.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.790" endtime="20201110 08:35:17.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.798" endtime="20201110 08:35:17.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.494" endtime="20201110 08:35:17.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.492" endtime="20201110 08:35:17.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.805" level="INFO">${RESULT} = [{'time': 0.019735806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61670000000028e-05, 'source_diff': 5.61670000000028e-05}, {'time': 0.019802819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:17.801" endtime="20201110 08:35:17.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:17.818" level="INFO">${ACCURACY} = {'source_diff': [5.61670000000028e-05, 5.636099999999783e-05, 5.561100000000055e-05, 5.5486000000000424e-05, 5.565300000000273e-05, 5.551400000000303e-05, 5.634699999999826e-05, 5.566699999999883e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:17.806" endtime="20201110 08:35:17.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.822" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:35:17.821" endtime="20201110 08:35:17.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.825" level="INFO">VALUE: [5.61670000000028e-05, 5.636099999999783e-05, 5.561100000000055e-05, 5.5486000000000424e-05, 5.565300000000273e-05, 5.551400000000303e-05, 5.634699999999826e-05, 5.566699999999883e-05, 5.580499999999905e-05, 5.586099999999733e-05, 5.5777999999999384e-05, 5.6305999999999023e-05, 5.5486000000000424e-05, 5.631900000000259e-05, 5.619499999999847e-05, 5.558400000000088e-05, 5.606899999999887e-05, 5.61809999999989e-05, 5.6165999999999855e-05, 5.577699999999991e-05, 5.5665999999999355e-05, 5.584699999999776e-05, 5.63610000000013e-05, 5.634699999999826e-05, 5.588899999999994e-05, 5.590299999999951e-05, 5.61809999999989e-05, 5.6291999999999454e-05, 5.63480000000012e-05, 5.561100000000055e-05, 5.566699999999883e-05, 5.6193999999998995e-05, 5.622300000000108e-05, 5.608300000000191e-05, 5.5902000000000035e-05, 5.56670000000023e-05, 5.6179999999999425e-05, 5.6222000000001604e-05, 5.613900000000019e-05, 5.609700000000148e-05, 5.5750000000000244e-05, 5.5735999999997204e-05, 5.630600000000249e-05, 5.583300000000166e-05, 5.619499999999847e-05, 5.593100000000212e-05, 5.5986000000000924e-05, 5.595899999999779e-05, 5.576300000000034e-05, 5.615299999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:35:17.823" endtime="20201110 08:35:17.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.819" endtime="20201110 08:35:17.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.828" endtime="20201110 08:35:17.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.832" endtime="20201110 08:35:17.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.830" endtime="20201110 08:35:17.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.827" endtime="20201110 08:35:17.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.458" endtime="20201110 08:35:17.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.457" endtime="20201110 08:35:17.853"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.861" endtime="20201110 08:35:17.878"></status>
</kw>
<msg timestamp="20201110 08:35:17.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.860" endtime="20201110 08:35:17.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:17.879" endtime="20201110 08:35:17.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.882" endtime="20201110 08:35:17.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.857" endtime="20201110 08:35:17.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.855" endtime="20201110 08:35:17.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.892" endtime="20201110 08:35:18.176"></status>
</kw>
<msg timestamp="20201110 08:35:18.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.890" endtime="20201110 08:35:18.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:18.180" endtime="20201110 08:35:18.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.189" endtime="20201110 08:35:18.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.888" endtime="20201110 08:35:18.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.886" endtime="20201110 08:35:18.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:18.195" level="INFO">${RESULT} = [{'time': 0.019613236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.709699999999901e-05, 'source_diff': 5.709699999999901e-05}, {'time': 0.019681167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:18.192" endtime="20201110 08:35:18.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:18.209" level="INFO">${ACCURACY} = {'source_diff': [5.709699999999901e-05, 5.722299999999861e-05, 5.7137999999998246e-05, 5.73610000000023e-05, 5.7444000000000245e-05, 5.712500000000162e-05, 5.7221999999999135e-05, 5.6764000000000814e-...</msg>
<status status="PASS" starttime="20201110 08:35:18.196" endtime="20201110 08:35:18.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.213" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:35:18.212" endtime="20201110 08:35:18.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.216" level="INFO">VALUE: [5.709699999999901e-05, 5.722299999999861e-05, 5.7137999999998246e-05, 5.73610000000023e-05, 5.7444000000000245e-05, 5.712500000000162e-05, 5.7221999999999135e-05, 5.6764000000000814e-05, 5.6528000000000134e-05, 5.712499999999815e-05, 5.6957999999999315e-05, 5.736099999999883e-05, 5.6985999999998455e-05, 5.7042000000000204e-05, 5.661099999999808e-05, 5.669500000000244e-05, 5.6778000000000384e-05, 5.7000000000001494e-05, 5.6514000000000564e-05, 5.71809999999999e-05, 5.7180000000000425e-05, 5.706899999999987e-05, 5.6721999999998635e-05, 5.7430000000000675e-05, 5.6971999999998885e-05, 5.711100000000205e-05, 5.737500000000187e-05, 5.6486000000001424e-05, 5.68749999999979e-05, 5.669499999999897e-05, 5.6957999999999315e-05, 5.7444000000000245e-05, 5.666699999999983e-05, 5.694499999999922e-05, 5.6499999999997524e-05, 5.669499999999897e-05, 5.708299999999944e-05, 5.731900000000012e-05, 5.680500000000005e-05, 5.6778000000000384e-05, 5.6443999999999245e-05, 5.6777999999996914e-05, 5.6486000000001424e-05, 5.688900000000094e-05, 5.7249999999998274e-05, 5.716700000000033e-05, 5.6735999999998205e-05, 5.7028000000000634e-05, 5.68480000000017e-05, 5.7319999999999593e-05]</msg>
<status status="PASS" starttime="20201110 08:35:18.214" endtime="20201110 08:35:18.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.210" endtime="20201110 08:35:18.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.219" endtime="20201110 08:35:18.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:18.223" endtime="20201110 08:35:18.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.221" endtime="20201110 08:35:18.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.218" endtime="20201110 08:35:18.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.854" endtime="20201110 08:35:18.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.853" endtime="20201110 08:35:18.243"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.252" endtime="20201110 08:35:18.270"></status>
</kw>
<msg timestamp="20201110 08:35:18.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:18.251" endtime="20201110 08:35:18.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:18.272" endtime="20201110 08:35:18.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.274" endtime="20201110 08:35:18.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.248" endtime="20201110 08:35:18.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.246" endtime="20201110 08:35:18.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.284" endtime="20201110 08:35:18.569"></status>
</kw>
<msg timestamp="20201110 08:35:18.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:18.282" endtime="20201110 08:35:18.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:18.574" endtime="20201110 08:35:18.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.582" endtime="20201110 08:35:18.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.280" endtime="20201110 08:35:18.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.278" endtime="20201110 08:35:18.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:18.589" level="INFO">${RESULT} = [{'time': 0.019721528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8249999999999275e-05, 'source_diff': 5.8249999999999275e-05}, {'time': 0.019787569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:18.585" endtime="20201110 08:35:18.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:18.602" level="INFO">${ACCURACY} = {'source_diff': [5.8249999999999275e-05, 5.8430000000001675e-05, 5.8306000000001024e-05, 5.7500000000001994e-05, 5.762499999999865e-05, 5.8137999999999246e-05, 5.759699999999951e-05, 5.843000000000167...</msg>
<status status="PASS" starttime="20201110 08:35:18.590" endtime="20201110 08:35:18.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.607" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:35:18.606" endtime="20201110 08:35:18.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.609" level="INFO">VALUE: [5.8249999999999275e-05, 5.8430000000001675e-05, 5.8306000000001024e-05, 5.7500000000001994e-05, 5.762499999999865e-05, 5.8137999999999246e-05, 5.759699999999951e-05, 5.8430000000001675e-05, 5.781900000000062e-05, 5.7735999999999205e-05, 5.7528000000001134e-05, 5.791699999999761e-05, 5.843100000000115e-05, 5.758299999999994e-05, 5.833300000000069e-05, 5.7791999999997484e-05, 5.7514000000001564e-05, 5.81810000000009e-05, 5.7735999999999205e-05, 5.759800000000245e-05, 5.8097999999999483e-05, 5.78480000000027e-05, 5.7887999999998996e-05, 5.7929999999997706e-05, 5.8291999999997984e-05, 5.78749999999989e-05, 5.766700000000083e-05, 5.7542000000000704e-05, 5.7513999999998094e-05, 5.838899999999897e-05, 5.790300000000151e-05, 5.7721999999999635e-05, 5.8208000000000565e-05, 5.745899999999929e-05, 5.8027999999998164e-05, 5.758299999999994e-05, 5.812500000000262e-05, 5.811099999999958e-05, 5.826299999999937e-05, 5.8152000000002285e-05, 5.833300000000069e-05, 5.758299999999994e-05, 5.8249999999999275e-05, 5.7736000000002674e-05, 5.765299999999779e-05, 5.7763999999998344e-05, 5.7513999999998094e-05, 5.7444000000000245e-05, 5.766699999999736e-05, 5.8249999999999275e-05]</msg>
<status status="PASS" starttime="20201110 08:35:18.608" endtime="20201110 08:35:18.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.603" endtime="20201110 08:35:18.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.613" endtime="20201110 08:35:18.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:18.616" endtime="20201110 08:35:18.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.614" endtime="20201110 08:35:18.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.611" endtime="20201110 08:35:18.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.244" endtime="20201110 08:35:18.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.244" endtime="20201110 08:35:18.637"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.645" endtime="20201110 08:35:18.663"></status>
</kw>
<msg timestamp="20201110 08:35:18.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:18.644" endtime="20201110 08:35:18.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:18.664" endtime="20201110 08:35:18.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.667" endtime="20201110 08:35:18.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.641" endtime="20201110 08:35:18.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.639" endtime="20201110 08:35:18.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.677" endtime="20201110 08:35:18.962"></status>
</kw>
<msg timestamp="20201110 08:35:18.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:18.675" endtime="20201110 08:35:18.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:18.966" endtime="20201110 08:35:18.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.974" endtime="20201110 08:35:18.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.672" endtime="20201110 08:35:18.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.671" endtime="20201110 08:35:18.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:18.981" level="INFO">${RESULT} = [{'time': 0.019981694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9208000000001565e-05, 'source_diff': 5.9208000000001565e-05}, {'time': 0.020050694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:18.978" endtime="20201110 08:35:18.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:18.995" level="INFO">${ACCURACY} = {'source_diff': [5.9208000000001565e-05, 5.9402000000000066e-05, 5.911100000000058e-05, 5.8485999999999955e-05, 5.8694000000001495e-05, 5.888899999999947e-05, 5.931899999999865e-05, 5.9236000000000705...</msg>
<status status="PASS" starttime="20201110 08:35:18.982" endtime="20201110 08:35:18.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.000" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:35:18.999" endtime="20201110 08:35:19.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.002" level="INFO">VALUE: [5.9208000000001565e-05, 5.9402000000000066e-05, 5.911100000000058e-05, 5.8485999999999955e-05, 5.8694000000001495e-05, 5.888899999999947e-05, 5.931899999999865e-05, 5.9236000000000705e-05, 5.9249999999996805e-05, 5.934700000000126e-05, 5.8651999999999316e-05, 5.865299999999879e-05, 5.9222000000001135e-05, 5.8791999999998484e-05, 5.922300000000061e-05, 5.870900000000054e-05, 5.9362000000000303e-05, 5.8848000000000233e-05, 5.862499999999965e-05, 5.88749999999999e-05, 5.85689999999979e-05, 5.869500000000097e-05, 5.8972000000000885e-05, 5.859700000000051e-05, 5.908300000000144e-05, 5.8749999999999775e-05, 5.8693999999998026e-05, 5.9070000000001344e-05, 5.909700000000101e-05, 5.936100000000083e-05, 5.8513999999999095e-05, 5.8764000000002814e-05, 5.9056000000001774e-05, 5.9348000000000734e-05, 5.8763999999999345e-05, 5.8958000000001315e-05, 5.929099999999951e-05, 5.936099999999736e-05, 5.933299999999822e-05, 5.912500000000015e-05, 5.93750000000004e-05, 5.859699999999704e-05, 5.9250000000000275e-05, 5.8485999999999955e-05, 5.865300000000226e-05, 5.9348000000000734e-05, 5.866699999999836e-05, 5.852699999999919e-05, 5.856900000000137e-05, 5.9000000000000025e-05]</msg>
<status status="PASS" starttime="20201110 08:35:19.001" endtime="20201110 08:35:19.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.996" endtime="20201110 08:35:19.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.006" endtime="20201110 08:35:19.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.009" endtime="20201110 08:35:19.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.008" endtime="20201110 08:35:19.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.004" endtime="20201110 08:35:19.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.638" endtime="20201110 08:35:19.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.637" endtime="20201110 08:35:19.030"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.039" endtime="20201110 08:35:19.056"></status>
</kw>
<msg timestamp="20201110 08:35:19.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.037" endtime="20201110 08:35:19.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.058" endtime="20201110 08:35:19.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.060" endtime="20201110 08:35:19.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.035" endtime="20201110 08:35:19.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.033" endtime="20201110 08:35:19.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.070" endtime="20201110 08:35:19.355"></status>
</kw>
<msg timestamp="20201110 08:35:19.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02013975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:19.069" endtime="20201110 08:35:19.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02013975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:19.359" endtime="20201110 08:35:19.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.367" endtime="20201110 08:35:19.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.066" endtime="20201110 08:35:19.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.064" endtime="20201110 08:35:19.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.374" level="INFO">${RESULT} = [{'time': 0.02013975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9472000000001385e-05, 'source_diff': 5.9472000000001385e-05}, {'time': 0.02020975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:19.370" endtime="20201110 08:35:19.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:19.387" level="INFO">${ACCURACY} = {'source_diff': [5.9472000000001385e-05, 6.018099999999943e-05, 6.045900000000229e-05, 5.994499999999875e-05, 6.0278000000000415e-05, 6.020899999999857e-05, 5.944500000000172e-05, 5.9848000000001234e-...</msg>
<status status="PASS" starttime="20201110 08:35:19.375" endtime="20201110 08:35:19.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.391" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:35:19.390" endtime="20201110 08:35:19.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.394" level="INFO">VALUE: [5.9472000000001385e-05, 6.018099999999943e-05, 6.045900000000229e-05, 5.994499999999875e-05, 6.0278000000000415e-05, 6.020899999999857e-05, 5.944500000000172e-05, 5.9848000000001234e-05, 5.9736000000001205e-05, 5.9972000000001885e-05, 6.005499999999983e-05, 6.034700000000226e-05, 6.0221999999998665e-05, 5.981899999999915e-05, 6.031899999999965e-05, 5.9750000000000775e-05, 6.034699999999879e-05, 6.0305999999999554e-05, 5.9556000000002274e-05, 5.9486000000000955e-05, 6.0098000000001484e-05, 5.9848000000001234e-05, 5.993099999999918e-05, 5.970899999999807e-05, 6.030500000000008e-05, 6.005499999999983e-05, 5.9486000000000955e-05, 5.9735999999997735e-05, 6.0278000000000415e-05, 6.011099999999811e-05, 6.036099999999836e-05, 6.016699999999986e-05, 6.012500000000115e-05, 5.9736000000001205e-05, 6.0278000000000415e-05, 5.9612000000000553e-05, 5.9514000000000095e-05, 6.038900000000097e-05, 5.951300000000062e-05, 6.020899999999857e-05, 5.9500000000000525e-05, 6.012499999999768e-05, 5.961100000000108e-05, 6.037499999999793e-05, 6.041700000000011e-05, 5.9707999999998596e-05, 5.9555999999998804e-05, 5.965299999999979e-05, 5.990300000000004e-05, 5.993099999999918e-05]</msg>
<status status="PASS" starttime="20201110 08:35:19.393" endtime="20201110 08:35:19.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.388" endtime="20201110 08:35:19.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.398" endtime="20201110 08:35:19.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.401" endtime="20201110 08:35:19.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.400" endtime="20201110 08:35:19.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.396" endtime="20201110 08:35:19.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.031" endtime="20201110 08:35:19.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.031" endtime="20201110 08:35:19.422"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.431" endtime="20201110 08:35:19.447"></status>
</kw>
<msg timestamp="20201110 08:35:19.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.429" endtime="20201110 08:35:19.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.448" endtime="20201110 08:35:19.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.451" endtime="20201110 08:35:19.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.427" endtime="20201110 08:35:19.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.425" endtime="20201110 08:35:19.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.461" endtime="20201110 08:35:19.746"></status>
</kw>
<msg timestamp="20201110 08:35:19.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.459" endtime="20201110 08:35:19.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.750" endtime="20201110 08:35:19.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.758" endtime="20201110 08:35:19.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.457" endtime="20201110 08:35:19.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.455" endtime="20201110 08:35:19.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.765" level="INFO">${RESULT} = [{'time': 0.019743667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.126399999999838e-05, 'source_diff': 6.126399999999838e-05}, {'time': 0.019813667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:19.762" endtime="20201110 08:35:19.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:19.778" level="INFO">${ACCURACY} = {'source_diff': [6.126399999999838e-05, 6.072299999999864e-05, 6.122199999999967e-05, 6.108299999999997e-05, 6.058299999999947e-05, 6.136099999999936e-05, 6.083299999999972e-05, 6.0972000000002885e-05...</msg>
<status status="PASS" starttime="20201110 08:35:19.766" endtime="20201110 08:35:19.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.783" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:35:19.782" endtime="20201110 08:35:19.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.785" level="INFO">VALUE: [6.126399999999838e-05, 6.072299999999864e-05, 6.122199999999967e-05, 6.108299999999997e-05, 6.058299999999947e-05, 6.136099999999936e-05, 6.083299999999972e-05, 6.0972000000002885e-05, 6.0957999999999846e-05, 6.0971999999999416e-05, 6.058299999999947e-05, 6.111099999999911e-05, 6.086100000000233e-05, 6.061099999999861e-05, 6.0806000000000054e-05, 6.106999999999987e-05, 6.118100000000043e-05, 6.0500000000001525e-05, 6.116700000000086e-05, 6.066700000000036e-05, 6.062499999999818e-05, 6.055500000000033e-05, 6.116599999999792e-05, 6.0472000000002385e-05, 6.129200000000098e-05, 6.066700000000036e-05, 6.0957999999999846e-05, 6.0500000000001525e-05, 6.0806000000000054e-05, 6.129200000000098e-05, 6.127800000000141e-05, 6.0735999999998735e-05, 6.108399999999944e-05, 6.0555999999999804e-05, 6.077699999999797e-05, 6.117999999999749e-05, 6.101299999999865e-05, 6.077699999999797e-05, 6.058299999999947e-05, 6.091700000000061e-05, 6.115300000000129e-05, 6.0736000000002205e-05, 6.0819999999999624e-05, 6.070899999999907e-05, 6.088900000000147e-05, 6.0569999999999374e-05, 6.0888999999998e-05, 6.113899999999825e-05, 6.113899999999825e-05, 6.13750000000024e-05]</msg>
<status status="PASS" starttime="20201110 08:35:19.784" endtime="20201110 08:35:19.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.779" endtime="20201110 08:35:19.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.789" endtime="20201110 08:35:19.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.792" endtime="20201110 08:35:19.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.791" endtime="20201110 08:35:19.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.787" endtime="20201110 08:35:19.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.423" endtime="20201110 08:35:19.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.422" endtime="20201110 08:35:19.813"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.822" endtime="20201110 08:35:19.838"></status>
</kw>
<msg timestamp="20201110 08:35:19.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.820" endtime="20201110 08:35:19.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:19.840" endtime="20201110 08:35:19.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.842" endtime="20201110 08:35:19.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.818" endtime="20201110 08:35:19.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.816" endtime="20201110 08:35:19.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.852" endtime="20201110 08:35:20.138"></status>
</kw>
<msg timestamp="20201110 08:35:20.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.851" endtime="20201110 08:35:20.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:20.142" endtime="20201110 08:35:20.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.150" endtime="20201110 08:35:20.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.848" endtime="20201110 08:35:20.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.847" endtime="20201110 08:35:20.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:20.157" level="INFO">${RESULT} = [{'time': 0.019872986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.212499999999968e-05, 'source_diff': 6.212499999999968e-05}, {'time': 0.019945944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:20.153" endtime="20201110 08:35:20.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:20.170" level="INFO">${ACCURACY} = {'source_diff': [6.212499999999968e-05, 6.216599999999892e-05, 6.179100000000201e-05, 6.191600000000214e-05, 6.184700000000029e-05, 6.215299999999882e-05, 6.20560000000013e-05, 6.213899999999925e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:20.158" endtime="20201110 08:35:20.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.175" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:35:20.174" endtime="20201110 08:35:20.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.177" level="INFO">VALUE: [6.212499999999968e-05, 6.216599999999892e-05, 6.179100000000201e-05, 6.191600000000214e-05, 6.184700000000029e-05, 6.215299999999882e-05, 6.20560000000013e-05, 6.213899999999925e-05, 6.218099999999796e-05, 6.150000000000252e-05, 6.197200000000042e-05, 6.147199999999992e-05, 6.208399999999697e-05, 6.184700000000029e-05, 6.159799999999951e-05, 6.230599999999809e-05, 6.166600000000189e-05, 6.151299999999915e-05, 6.199999999999956e-05, 6.169400000000103e-05, 6.209700000000054e-05, 6.223600000000024e-05, 6.145800000000035e-05, 6.159700000000004e-05, 6.187499999999943e-05, 6.223599999999677e-05, 6.241700000000211e-05, 6.163900000000222e-05, 6.184799999999976e-05, 6.1888999999999e-05, 6.215300000000229e-05, 6.151299999999915e-05, 6.213900000000272e-05, 6.209700000000054e-05, 6.159700000000004e-05, 6.20560000000013e-05, 6.244400000000178e-05, 6.181900000000115e-05, 6.187499999999943e-05, 6.241700000000211e-05, 6.229200000000198e-05, 6.161099999999961e-05, 6.195800000000085e-05, 6.194500000000075e-05, 6.184800000000323e-05, 6.233300000000122e-05, 6.166699999999789e-05, 6.173599999999974e-05, 6.229099999999904e-05, 6.222200000000067e-05]</msg>
<status status="PASS" starttime="20201110 08:35:20.176" endtime="20201110 08:35:20.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.171" endtime="20201110 08:35:20.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.184" endtime="20201110 08:35:20.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:20.188" endtime="20201110 08:35:20.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.186" endtime="20201110 08:35:20.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.183" endtime="20201110 08:35:20.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.814" endtime="20201110 08:35:20.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.813" endtime="20201110 08:35:20.209"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.217" endtime="20201110 08:35:20.235"></status>
</kw>
<msg timestamp="20201110 08:35:20.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:20.216" endtime="20201110 08:35:20.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:20.236" endtime="20201110 08:35:20.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.239" endtime="20201110 08:35:20.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.213" endtime="20201110 08:35:20.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.211" endtime="20201110 08:35:20.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.249" endtime="20201110 08:35:20.535"></status>
</kw>
<msg timestamp="20201110 08:35:20.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01964175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:20.247" endtime="20201110 08:35:20.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01964175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:20.539" endtime="20201110 08:35:20.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.547" endtime="20201110 08:35:20.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.245" endtime="20201110 08:35:20.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.243" endtime="20201110 08:35:20.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:20.554" level="INFO">${RESULT} = [{'time': 0.019704806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305599999999884e-05, 'source_diff': 6.305599999999884e-05}, {'time': 0.019777847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:20.551" endtime="20201110 08:35:20.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:20.568" level="INFO">${ACCURACY} = {'source_diff': [6.305599999999884e-05, 6.298600000000099e-05, 6.2582999999998e-05, 6.265199999999985e-05, 6.316699999999939e-05, 6.25279999999992e-05, 6.329199999999952e-05, 6.281999999999816e-05, 6....</msg>
<status status="PASS" starttime="20201110 08:35:20.555" endtime="20201110 08:35:20.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.573" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:35:20.572" endtime="20201110 08:35:20.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.575" level="INFO">VALUE: [6.305599999999884e-05, 6.298600000000099e-05, 6.2582999999998e-05, 6.265199999999985e-05, 6.316699999999939e-05, 6.25279999999992e-05, 6.329199999999952e-05, 6.281999999999816e-05, 6.250000000000006e-05, 6.344499999999878e-05, 6.337500000000093e-05, 6.327799999999995e-05, 6.293100000000218e-05, 6.312500000000068e-05, 6.286100000000086e-05, 6.284699999999782e-05, 6.287500000000043e-05, 6.27080000000016e-05, 6.295800000000185e-05, 6.345799999999888e-05, 6.320799999999863e-05, 6.284700000000129e-05, 6.25140000000031e-05, 6.333299999999875e-05, 6.279199999999902e-05, 6.280600000000205e-05, 6.250000000000006e-05, 6.263899999999975e-05, 6.266700000000236e-05, 6.311099999999764e-05, 6.251300000000015e-05, 6.315200000000035e-05, 6.312500000000068e-05, 6.283299999999825e-05, 6.2889e-05, 6.2582999999998e-05, 6.27500000000003e-05, 6.280499999999911e-05, 6.311100000000111e-05, 6.25560000000018e-05, 6.304199999999927e-05, 6.294499999999828e-05, 6.320900000000157e-05, 6.254199999999877e-05, 6.294499999999828e-05, 6.305599999999884e-05, 6.252699999999972e-05, 6.279100000000301e-05, 6.316599999999992e-05, 6.287500000000043e-05]</msg>
<status status="PASS" starttime="20201110 08:35:20.574" endtime="20201110 08:35:20.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.569" endtime="20201110 08:35:20.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.579" endtime="20201110 08:35:20.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:20.582" endtime="20201110 08:35:20.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.581" endtime="20201110 08:35:20.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.577" endtime="20201110 08:35:20.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.210" endtime="20201110 08:35:20.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.209" endtime="20201110 08:35:20.603"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.612" endtime="20201110 08:35:20.629"></status>
</kw>
<msg timestamp="20201110 08:35:20.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:20.611" endtime="20201110 08:35:20.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:20.631" endtime="20201110 08:35:20.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.633" endtime="20201110 08:35:20.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.608" endtime="20201110 08:35:20.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.606" endtime="20201110 08:35:20.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.643" endtime="20201110 08:35:20.928"></status>
</kw>
<msg timestamp="20201110 08:35:20.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:20.642" endtime="20201110 08:35:20.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:20.932" endtime="20201110 08:35:20.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.941" endtime="20201110 08:35:20.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.639" endtime="20201110 08:35:20.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.637" endtime="20201110 08:35:20.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:20.947" level="INFO">${RESULT} = [{'time': 0.020072111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.413900000000125e-05, 'source_diff': 6.413900000000125e-05}, {'time': 0.020144125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:20.944" endtime="20201110 08:35:20.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:20.961" level="INFO">${ACCURACY} = {'source_diff': [6.413900000000125e-05, 6.362499999999771e-05, 6.376400000000088e-05, 6.356899999999943e-05, 6.358400000000194e-05, 6.384700000000229e-05, 6.381999999999916e-05, 6.363900000000075e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:20.948" endtime="20201110 08:35:20.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.965" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:35:20.964" endtime="20201110 08:35:20.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.968" level="INFO">VALUE: [6.413900000000125e-05, 6.362499999999771e-05, 6.376400000000088e-05, 6.356899999999943e-05, 6.358400000000194e-05, 6.384700000000229e-05, 6.381999999999916e-05, 6.363900000000075e-05, 6.39020000000011e-05, 6.350000000000106e-05, 6.443000000000074e-05, 6.369399999999956e-05, 6.42500000000018e-05, 6.418000000000049e-05, 6.406899999999993e-05, 6.44029999999976e-05, 6.388899999999753e-05, 6.365300000000032e-05, 6.387500000000143e-05, 6.390300000000057e-05, 6.381999999999916e-05, 6.400000000000156e-05, 6.361100000000161e-05, 6.370900000000207e-05, 6.430600000000009e-05, 6.373599999999827e-05, 6.415199999999788e-05, 6.383300000000272e-05, 6.356899999999943e-05, 6.35280000000002e-05, 6.3889000000001e-05, 6.377800000000045e-05, 6.426400000000138e-05, 6.379200000000002e-05, 6.395900000000232e-05, 6.388899999999753e-05, 6.363900000000075e-05, 6.39439999999998e-05, 6.354199999999977e-05, 6.368099999999946e-05, 6.386099999999839e-05, 6.377800000000045e-05, 6.397200000000242e-05, 6.431999999999966e-05, 6.397199999999895e-05, 6.426400000000138e-05, 6.39439999999998e-05, 6.379200000000002e-05, 6.42639999999979e-05, 6.358399999999848e-05]</msg>
<status status="PASS" starttime="20201110 08:35:20.966" endtime="20201110 08:35:20.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.962" endtime="20201110 08:35:20.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.971" endtime="20201110 08:35:20.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:20.975" endtime="20201110 08:35:20.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.973" endtime="20201110 08:35:20.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.969" endtime="20201110 08:35:20.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.604" endtime="20201110 08:35:20.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.604" endtime="20201110 08:35:20.995"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.004" endtime="20201110 08:35:21.022"></status>
</kw>
<msg timestamp="20201110 08:35:21.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.003" endtime="20201110 08:35:21.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.023" endtime="20201110 08:35:21.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.026" endtime="20201110 08:35:21.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.000" endtime="20201110 08:35:21.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.998" endtime="20201110 08:35:21.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.036" endtime="20201110 08:35:21.321"></status>
</kw>
<msg timestamp="20201110 08:35:21.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.034" endtime="20201110 08:35:21.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019775417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.325" endtime="20201110 08:35:21.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.333" endtime="20201110 08:35:21.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.032" endtime="20201110 08:35:21.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.030" endtime="20201110 08:35:21.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.340" level="INFO">${RESULT} = [{'time': 0.019775417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486099999999939e-05, 'source_diff': 6.486099999999939e-05}, {'time': 0.019848403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:21.337" endtime="20201110 08:35:21.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:21.353" level="INFO">${ACCURACY} = {'source_diff': [6.486099999999939e-05, 6.509700000000007e-05, 6.534700000000032e-05, 6.49440000000008e-05, 6.462500000000218e-05, 6.516600000000192e-05, 6.455500000000086e-05, 6.491700000000114e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:21.341" endtime="20201110 08:35:21.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.358" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:35:21.357" endtime="20201110 08:35:21.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.360" level="INFO">VALUE: [6.486099999999939e-05, 6.509700000000007e-05, 6.534700000000032e-05, 6.49440000000008e-05, 6.462500000000218e-05, 6.516600000000192e-05, 6.455500000000086e-05, 6.491700000000114e-05, 6.487500000000243e-05, 6.443000000000074e-05, 6.502799999999823e-05, 6.486099999999939e-05, 6.505600000000084e-05, 6.537499999999946e-05, 6.481900000000068e-05, 6.497199999999995e-05, 6.4889000000002e-05, 6.466600000000142e-05, 6.518100000000096e-05, 6.522299999999967e-05, 6.538899999999903e-05, 6.536099999999989e-05, 6.448599999999902e-05, 6.544399999999784e-05, 6.47219999999997e-05, 6.533299999999728e-05, 6.518100000000096e-05, 6.448599999999902e-05, 6.487500000000243e-05, 6.497199999999995e-05, 6.519500000000053e-05, 6.461099999999914e-05, 6.512499999999921e-05, 6.515300000000182e-05, 6.476299999999893e-05, 6.53479999999998e-05, 6.472200000000317e-05, 6.486099999999939e-05, 6.512499999999921e-05, 6.52500000000028e-05, 6.508299999999703e-05, 6.502799999999823e-05, 6.530599999999762e-05, 6.518099999999749e-05, 6.4889000000002e-05, 6.524999999999934e-05, 6.43890000000015e-05, 6.530600000000109e-05, 6.450000000000206e-05, 6.541700000000164e-05]</msg>
<status status="PASS" starttime="20201110 08:35:21.359" endtime="20201110 08:35:21.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.354" endtime="20201110 08:35:21.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.364" endtime="20201110 08:35:21.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:21.367" endtime="20201110 08:35:21.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.366" endtime="20201110 08:35:21.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.362" endtime="20201110 08:35:21.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.996" endtime="20201110 08:35:21.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.996" endtime="20201110 08:35:21.388"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.397" endtime="20201110 08:35:21.415"></status>
</kw>
<msg timestamp="20201110 08:35:21.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.395" endtime="20201110 08:35:21.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.417" endtime="20201110 08:35:21.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.419" endtime="20201110 08:35:21.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.393" endtime="20201110 08:35:21.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.391" endtime="20201110 08:35:21.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.429" endtime="20201110 08:35:21.715"></status>
</kw>
<msg timestamp="20201110 08:35:21.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.428" endtime="20201110 08:35:21.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.719" endtime="20201110 08:35:21.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.727" endtime="20201110 08:35:21.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.425" endtime="20201110 08:35:21.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.423" endtime="20201110 08:35:21.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.734" level="INFO">${RESULT} = [{'time': 0.019618736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.554200000000177e-05, 'source_diff': 6.554200000000177e-05}, {'time': 0.019691736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:21.730" endtime="20201110 08:35:21.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:21.747" level="INFO">${ACCURACY} = {'source_diff': [6.554200000000177e-05, 6.543000000000174e-05, 6.627799999999948e-05, 6.597200000000095e-05, 6.640300000000307e-05, 6.551400000000263e-05, 6.622300000000067e-05, 6.630599999999862e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:21.735" endtime="20201110 08:35:21.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.751" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:35:21.750" endtime="20201110 08:35:21.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.754" level="INFO">VALUE: [6.554200000000177e-05, 6.543000000000174e-05, 6.627799999999948e-05, 6.597200000000095e-05, 6.640300000000307e-05, 6.551400000000263e-05, 6.622300000000067e-05, 6.630599999999862e-05, 6.608299999999803e-05, 6.600000000000009e-05, 6.588800000000006e-05, 6.57220000000007e-05, 6.612500000000021e-05, 6.552799999999873e-05, 6.613899999999978e-05, 6.617999999999902e-05, 6.645899999999788e-05, 6.611100000000064e-05, 6.615299999999935e-05, 6.563899999999928e-05, 6.634699999999785e-05, 6.62639999999999e-05, 6.611100000000064e-05, 6.565299999999885e-05, 6.601399999999966e-05, 6.612500000000021e-05, 6.60830000000015e-05, 6.637500000000046e-05, 6.565299999999885e-05, 6.600000000000009e-05, 6.597199999999748e-05, 6.55700000000009e-05, 6.629200000000252e-05, 6.55419999999983e-05, 6.594399999999834e-05, 6.573600000000027e-05, 6.558400000000048e-05, 6.641600000000317e-05, 6.549999999999959e-05, 6.569400000000156e-05, 6.616600000000292e-05, 6.638900000000003e-05, 6.563899999999928e-05, 6.577800000000245e-05, 6.631899999999871e-05, 6.615299999999935e-05, 6.569500000000103e-05, 6.580600000000159e-05, 6.580599999999812e-05, 6.613899999999978e-05]</msg>
<status status="PASS" starttime="20201110 08:35:21.752" endtime="20201110 08:35:21.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.748" endtime="20201110 08:35:21.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.757" endtime="20201110 08:35:21.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:21.761" endtime="20201110 08:35:21.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.759" endtime="20201110 08:35:21.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.756" endtime="20201110 08:35:21.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.389" endtime="20201110 08:35:21.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.389" endtime="20201110 08:35:21.782"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.790" endtime="20201110 08:35:21.809"></status>
</kw>
<msg timestamp="20201110 08:35:21.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.789" endtime="20201110 08:35:21.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:21.810" endtime="20201110 08:35:21.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.813" endtime="20201110 08:35:21.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.786" endtime="20201110 08:35:21.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.784" endtime="20201110 08:35:21.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.823" endtime="20201110 08:35:22.108"></status>
</kw>
<msg timestamp="20201110 08:35:22.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.821" endtime="20201110 08:35:22.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.112" endtime="20201110 08:35:22.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.120" endtime="20201110 08:35:22.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.819" endtime="20201110 08:35:22.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.817" endtime="20201110 08:35:22.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.127" level="INFO">${RESULT} = [{'time': 0.019642319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.683299999999878e-05, 'source_diff': 6.683299999999878e-05}, {'time': 0.019717347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:22.124" endtime="20201110 08:35:22.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:22.141" level="INFO">${ACCURACY} = {'source_diff': [6.683299999999878e-05, 6.727800000000048e-05, 6.705499999999989e-05, 6.662500000000071e-05, 6.730500000000014e-05, 6.712500000000121e-05, 6.729100000000057e-05, 6.733299999999928e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:22.128" endtime="20201110 08:35:22.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.146" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:35:22.145" endtime="20201110 08:35:22.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.148" level="INFO">VALUE: [6.683299999999878e-05, 6.727800000000048e-05, 6.705499999999989e-05, 6.662500000000071e-05, 6.730500000000014e-05, 6.712500000000121e-05, 6.729100000000057e-05, 6.733299999999928e-05, 6.715300000000035e-05, 6.701400000000066e-05, 6.673600000000127e-05, 6.682000000000216e-05, 6.67220000000017e-05, 6.74160000000007e-05, 6.74160000000007e-05, 6.72640000000009e-05, 6.733299999999928e-05, 6.647200000000145e-05, 6.722199999999873e-05, 6.679199999999955e-05, 6.666699999999942e-05, 6.656900000000243e-05, 6.727800000000048e-05, 6.704100000000032e-05, 6.705599999999937e-05, 6.722300000000167e-05, 6.647199999999798e-05, 6.705599999999937e-05, 6.668000000000299e-05, 6.733299999999928e-05, 6.659700000000157e-05, 6.738900000000103e-05, 6.727800000000048e-05, 6.734699999999885e-05, 6.688900000000053e-05, 6.706899999999946e-05, 6.686099999999792e-05, 6.65419999999993e-05, 6.730599999999962e-05, 6.70839999999985e-05, 6.698700000000099e-05, 6.701400000000066e-05, 6.713800000000131e-05, 6.699999999999762e-05, 6.713899999999731e-05, 6.647200000000145e-05, 6.686099999999792e-05, 6.683299999999878e-05, 6.67220000000017e-05, 6.661100000000114e-05]</msg>
<status status="PASS" starttime="20201110 08:35:22.147" endtime="20201110 08:35:22.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.142" endtime="20201110 08:35:22.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.152" endtime="20201110 08:35:22.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.155" endtime="20201110 08:35:22.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.154" endtime="20201110 08:35:22.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.150" endtime="20201110 08:35:22.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.783" endtime="20201110 08:35:22.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.782" endtime="20201110 08:35:22.176"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.185" endtime="20201110 08:35:22.202"></status>
</kw>
<msg timestamp="20201110 08:35:22.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.183" endtime="20201110 08:35:22.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.203" endtime="20201110 08:35:22.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.206" endtime="20201110 08:35:22.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.181" endtime="20201110 08:35:22.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.179" endtime="20201110 08:35:22.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.216" endtime="20201110 08:35:22.501"></status>
</kw>
<msg timestamp="20201110 08:35:22.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.214" endtime="20201110 08:35:22.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.505" endtime="20201110 08:35:22.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.515" endtime="20201110 08:35:22.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.212" endtime="20201110 08:35:22.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.210" endtime="20201110 08:35:22.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.521" level="INFO">${RESULT} = [{'time': 0.019852764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.777799999999751e-05, 'source_diff': 6.777799999999751e-05}, {'time': 0.019927764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:22.518" endtime="20201110 08:35:22.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:22.535" level="INFO">${ACCURACY} = {'source_diff': [6.777799999999751e-05, 6.762500000000171e-05, 6.795799999999991e-05, 6.818099999999702e-05, 6.75700000000029e-05, 6.800000000000209e-05, 6.845799999999694e-05, 6.802700000000175e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:22.522" endtime="20201110 08:35:22.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.539" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:35:22.538" endtime="20201110 08:35:22.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.541" level="INFO">VALUE: [6.777799999999751e-05, 6.762500000000171e-05, 6.795799999999991e-05, 6.818099999999702e-05, 6.75700000000029e-05, 6.800000000000209e-05, 6.845799999999694e-05, 6.802700000000175e-05, 6.747199999999898e-05, 6.816599999999798e-05, 6.824999999999887e-05, 6.82359999999993e-05, 6.797199999999948e-05, 6.768000000000052e-05, 6.795799999999991e-05, 6.812499999999874e-05, 6.755599999999987e-05, 6.758299999999953e-05, 6.770899999999913e-05, 6.769499999999956e-05, 6.841700000000117e-05, 6.841599999999823e-05, 6.77909999999976e-05, 6.747199999999898e-05, 6.769400000000009e-05, 6.826399999999844e-05, 6.82359999999993e-05, 6.770799999999966e-05, 6.831900000000071e-05, 6.843099999999727e-05, 6.806999999999994e-05, 6.763900000000128e-05, 6.829200000000105e-05, 6.743100000000321e-05, 6.806999999999994e-05, 6.770899999999913e-05, 6.844399999999737e-05, 6.768000000000052e-05, 6.765200000000138e-05, 6.758299999999953e-05, 6.816599999999798e-05, 6.751400000000116e-05, 6.818000000000102e-05, 6.751399999999769e-05, 6.7583000000003e-05, 6.755599999999987e-05, 6.761099999999867e-05, 6.773600000000227e-05, 6.781999999999969e-05, 6.804100000000132e-05]</msg>
<status status="PASS" starttime="20201110 08:35:22.540" endtime="20201110 08:35:22.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.536" endtime="20201110 08:35:22.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.545" endtime="20201110 08:35:22.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.549" endtime="20201110 08:35:22.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.547" endtime="20201110 08:35:22.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.543" endtime="20201110 08:35:22.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.177" endtime="20201110 08:35:22.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.177" endtime="20201110 08:35:22.570"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.578" endtime="20201110 08:35:22.596"></status>
</kw>
<msg timestamp="20201110 08:35:22.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.577" endtime="20201110 08:35:22.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.597" endtime="20201110 08:35:22.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.600" endtime="20201110 08:35:22.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.574" endtime="20201110 08:35:22.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.572" endtime="20201110 08:35:22.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.610" endtime="20201110 08:35:22.895"></status>
</kw>
<msg timestamp="20201110 08:35:22.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020299069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.608" endtime="20201110 08:35:22.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020299069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.899" endtime="20201110 08:35:22.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.907" endtime="20201110 08:35:22.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.606" endtime="20201110 08:35:22.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.604" endtime="20201110 08:35:22.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.914" level="INFO">${RESULT} = [{'time': 0.020368403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.933400000000076e-05, 'source_diff': 6.933400000000076e-05}, {'time': 0.020445403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:22.911" endtime="20201110 08:35:22.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:22.927" level="INFO">${ACCURACY} = {'source_diff': [6.933400000000076e-05, 6.920900000000063e-05, 6.924999999999987e-05, 6.87229999999997e-05, 6.920799999999769e-05, 6.897200000000048e-05, 6.862499999999924e-05, 6.904099999999885e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:22.915" endtime="20201110 08:35:22.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.932" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:35:22.931" endtime="20201110 08:35:22.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.934" level="INFO">VALUE: [6.933400000000076e-05, 6.920900000000063e-05, 6.924999999999987e-05, 6.87229999999997e-05, 6.920799999999769e-05, 6.897200000000048e-05, 6.862499999999924e-05, 6.904099999999885e-05, 6.849999999999912e-05, 6.890299999999863e-05, 6.912499999999974e-05, 6.913899999999931e-05, 6.849999999999912e-05, 6.865299999999838e-05, 6.855600000000087e-05, 6.887499999999949e-05, 6.927799999999901e-05, 6.85420000000013e-05, 6.879200000000155e-05, 6.850000000000259e-05, 6.854099999999835e-05, 6.861099999999967e-05, 6.87909999999986e-05, 6.887499999999949e-05, 6.897200000000048e-05, 6.913899999999931e-05, 6.926399999999944e-05, 6.922200000000073e-05, 6.923699999999977e-05, 6.898600000000005e-05, 6.907000000000094e-05, 6.87359999999998e-05, 6.938899999999956e-05, 6.894499999999734e-05, 6.913899999999931e-05, 6.861100000000314e-05, 6.901399999999919e-05, 6.922200000000073e-05, 6.937499999999999e-05, 6.92360000000003e-05, 6.861099999999967e-05, 6.887500000000296e-05, 6.857000000000044e-05, 6.908399999999704e-05, 6.872200000000023e-05, 6.926399999999944e-05, 6.908300000000103e-05, 6.93619999999999e-05, 6.934700000000085e-05, 6.897200000000048e-05]</msg>
<status status="PASS" starttime="20201110 08:35:22.933" endtime="20201110 08:35:22.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.928" endtime="20201110 08:35:22.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.938" endtime="20201110 08:35:22.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.941" endtime="20201110 08:35:22.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.940" endtime="20201110 08:35:22.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.936" endtime="20201110 08:35:22.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.571" endtime="20201110 08:35:22.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.570" endtime="20201110 08:35:22.962"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.971" endtime="20201110 08:35:22.988"></status>
</kw>
<msg timestamp="20201110 08:35:22.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.969" endtime="20201110 08:35:22.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:22.990" endtime="20201110 08:35:22.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.992" endtime="20201110 08:35:22.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.967" endtime="20201110 08:35:22.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.965" endtime="20201110 08:35:22.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.002" endtime="20201110 08:35:23.288"></status>
</kw>
<msg timestamp="20201110 08:35:23.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.001" endtime="20201110 08:35:23.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.292" endtime="20201110 08:35:23.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.300" endtime="20201110 08:35:23.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.998" endtime="20201110 08:35:23.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.997" endtime="20201110 08:35:23.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:23.307" level="INFO">${RESULT} = [{'time': 0.019682708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.967999999999905e-05, 'source_diff': 6.967999999999905e-05}, {'time': 0.019761792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:23.303" endtime="20201110 08:35:23.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:23.320" level="INFO">${ACCURACY} = {'source_diff': [6.967999999999905e-05, 6.99169999999992e-05, 7.044399999999937e-05, 7.031899999999924e-05, 7.013900000000031e-05, 6.958300000000153e-05, 6.963899999999981e-05, 7.04169999999997e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:35:23.308" endtime="20201110 08:35:23.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.324" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:35:23.323" endtime="20201110 08:35:23.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.327" level="INFO">VALUE: [6.967999999999905e-05, 6.99169999999992e-05, 7.044399999999937e-05, 7.031899999999924e-05, 7.013900000000031e-05, 6.958300000000153e-05, 6.963899999999981e-05, 7.04169999999997e-05, 6.966699999999895e-05, 6.945899999999741e-05, 6.995900000000138e-05, 7.033300000000228e-05, 6.9584000000001e-05, 7.044399999999937e-05, 6.998600000000105e-05, 7.034699999999838e-05, 6.948600000000055e-05, 7.012500000000074e-05, 6.977799999999951e-05, 6.970800000000166e-05, 6.972200000000123e-05, 7.019499999999859e-05, 7.033400000000176e-05, 6.975000000000037e-05, 6.970800000000166e-05, 6.951399999999969e-05, 6.990200000000016e-05, 6.965299999999938e-05, 7.043000000000327e-05, 7.015299999999988e-05, 6.981900000000221e-05, 7.011100000000117e-05, 6.947200000000098e-05, 7.02360000000013e-05, 7.026400000000044e-05, 6.963899999999981e-05, 7.006999999999847e-05, 6.97230000000007e-05, 6.990299999999963e-05, 6.994500000000181e-05, 6.979199999999908e-05, 7.001400000000019e-05, 6.980500000000264e-05, 6.954100000000282e-05, 7.020799999999869e-05, 7.008299999999856e-05, 6.958299999999806e-05, 6.984700000000135e-05, 7.007000000000194e-05, 6.957000000000144e-05]</msg>
<status status="PASS" starttime="20201110 08:35:23.326" endtime="20201110 08:35:23.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.321" endtime="20201110 08:35:23.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.330" endtime="20201110 08:35:23.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:23.334" endtime="20201110 08:35:23.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.332" endtime="20201110 08:35:23.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.329" endtime="20201110 08:35:23.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.963" endtime="20201110 08:35:23.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.962" endtime="20201110 08:35:23.355"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.364" endtime="20201110 08:35:23.382"></status>
</kw>
<msg timestamp="20201110 08:35:23.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.362" endtime="20201110 08:35:23.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.383" endtime="20201110 08:35:23.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.386" endtime="20201110 08:35:23.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.359" endtime="20201110 08:35:23.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.357" endtime="20201110 08:35:23.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.396" endtime="20201110 08:35:23.682"></status>
</kw>
<msg timestamp="20201110 08:35:23.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01978275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019854139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:23.394" endtime="20201110 08:35:23.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01978275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019854139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:23.686" endtime="20201110 08:35:23.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.694" endtime="20201110 08:35:23.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.392" endtime="20201110 08:35:23.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.390" endtime="20201110 08:35:23.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:23.701" level="INFO">${RESULT} = [{'time': 0.019854139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138899999999809e-05, 'source_diff': 7.138899999999809e-05}, {'time': 0.019933167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:23.698" endtime="20201110 08:35:23.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:23.715" level="INFO">${ACCURACY} = {'source_diff': [7.138899999999809e-05, 7.115300000000088e-05, 7.120899999999916e-05, 7.144499999999984e-05, 7.102699999999781e-05, 7.130600000000015e-05, 7.118000000000055e-05, 7.05970000000021e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:23.702" endtime="20201110 08:35:23.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.720" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:35:23.719" endtime="20201110 08:35:23.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.722" level="INFO">VALUE: [7.138899999999809e-05, 7.115300000000088e-05, 7.120899999999916e-05, 7.144499999999984e-05, 7.102699999999781e-05, 7.130600000000015e-05, 7.118000000000055e-05, 7.05970000000021e-05, 7.131899999999677e-05, 7.144499999999984e-05, 7.10559999999999e-05, 7.102800000000076e-05, 7.054199999999983e-05, 7.090300000000063e-05, 7.049999999999765e-05, 7.04169999999997e-05, 7.070900000000213e-05, 7.140300000000113e-05, 7.138899999999809e-05, 7.115200000000141e-05, 7.12499999999984e-05, 7.094399999999987e-05, 7.05970000000021e-05, 7.09300000000003e-05, 7.079200000000008e-05, 7.05970000000021e-05, 7.086099999999845e-05, 7.087500000000149e-05, 7.045899999999841e-05, 7.131999999999972e-05, 7.05559999999994e-05, 7.047299999999798e-05, 7.075000000000137e-05, 7.063900000000081e-05, 7.11109999999987e-05, 7.068000000000005e-05, 7.115300000000088e-05, 7.088900000000106e-05, 7.129199999999711e-05, 7.070799999999919e-05, 7.068100000000299e-05, 7.095799999999944e-05, 7.120900000000263e-05, 7.048600000000155e-05, 7.048600000000155e-05, 7.120799999999969e-05, 7.058299999999906e-05, 7.12910000000011e-05, 7.130500000000067e-05, 7.1069e-05]</msg>
<status status="PASS" starttime="20201110 08:35:23.721" endtime="20201110 08:35:23.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.716" endtime="20201110 08:35:23.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.726" endtime="20201110 08:35:23.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:23.729" endtime="20201110 08:35:23.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.728" endtime="20201110 08:35:23.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.724" endtime="20201110 08:35:23.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.356" endtime="20201110 08:35:23.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.355" endtime="20201110 08:35:23.750"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.759" endtime="20201110 08:35:23.776"></status>
</kw>
<msg timestamp="20201110 08:35:23.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.757" endtime="20201110 08:35:23.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:23.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:23.778" endtime="20201110 08:35:23.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.780" endtime="20201110 08:35:23.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.755" endtime="20201110 08:35:23.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.753" endtime="20201110 08:35:23.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:23.790" endtime="20201110 08:35:24.075"></status>
</kw>
<msg timestamp="20201110 08:35:24.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:23.789" endtime="20201110 08:35:24.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.079" endtime="20201110 08:35:24.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.087" endtime="20201110 08:35:24.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.786" endtime="20201110 08:35:24.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.785" endtime="20201110 08:35:24.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.094" level="INFO">${RESULT} = [{'time': 0.019786722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.209700000000013e-05, 'source_diff': 7.209700000000013e-05}, {'time': 0.019869722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:24.091" endtime="20201110 08:35:24.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:24.107" level="INFO">${ACCURACY} = {'source_diff': [7.209700000000013e-05, 7.229099999999863e-05, 7.212499999999927e-05, 7.244500000000084e-05, 7.20560000000009e-05, 7.156999999999997e-05, 7.188899999999859e-05, 7.220900000000016e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:24.095" endtime="20201110 08:35:24.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.112" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:35:24.111" endtime="20201110 08:35:24.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.114" level="INFO">VALUE: [7.209700000000013e-05, 7.229099999999863e-05, 7.212499999999927e-05, 7.244500000000084e-05, 7.20560000000009e-05, 7.156999999999997e-05, 7.188899999999859e-05, 7.220900000000016e-05, 7.149999999999865e-05, 7.194400000000087e-05, 7.17369999999988e-05, 7.191600000000173e-05, 7.177699999999856e-05, 7.165199999999844e-05, 7.169400000000062e-05, 7.230600000000115e-05, 7.181900000000074e-05, 7.179200000000108e-05, 7.220900000000016e-05, 7.173599999999933e-05, 7.230599999999768e-05, 7.24170000000017e-05, 7.194500000000034e-05, 7.213900000000231e-05, 7.14300000000008e-05, 7.155500000000092e-05, 7.237500000000299e-05, 7.179099999999813e-05, 7.180500000000117e-05, 7.202799999999829e-05, 7.213900000000231e-05, 7.154200000000083e-05, 7.170800000000019e-05, 7.223599999999983e-05, 7.226399999999897e-05, 7.245800000000094e-05, 7.222299999999973e-05, 7.154200000000083e-05, 7.173599999999933e-05, 7.163899999999834e-05, 7.22499999999994e-05, 7.195800000000044e-05, 7.195899999999991e-05, 7.154200000000083e-05, 7.219500000000059e-05, 7.218100000000102e-05, 7.165299999999791e-05, 7.204099999999838e-05, 7.218100000000102e-05, 7.207000000000047e-05]</msg>
<status status="PASS" starttime="20201110 08:35:24.113" endtime="20201110 08:35:24.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.108" endtime="20201110 08:35:24.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.118" endtime="20201110 08:35:24.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:24.121" endtime="20201110 08:35:24.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.120" endtime="20201110 08:35:24.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.116" endtime="20201110 08:35:24.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.751" endtime="20201110 08:35:24.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:23.751" endtime="20201110 08:35:24.142"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.151" endtime="20201110 08:35:24.168"></status>
</kw>
<msg timestamp="20201110 08:35:24.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.149" endtime="20201110 08:35:24.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.170" endtime="20201110 08:35:24.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.172" endtime="20201110 08:35:24.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.147" endtime="20201110 08:35:24.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.145" endtime="20201110 08:35:24.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.182" endtime="20201110 08:35:24.467"></status>
</kw>
<msg timestamp="20201110 08:35:24.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019895583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:24.181" endtime="20201110 08:35:24.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019895583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:24.471" endtime="20201110 08:35:24.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.479" endtime="20201110 08:35:24.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.178" endtime="20201110 08:35:24.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.176" endtime="20201110 08:35:24.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.486" level="INFO">${RESULT} = [{'time': 0.0199685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.291699999999873e-05, 'source_diff': 7.291699999999873e-05}, {'time': 0.020051486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:24.482" endtime="20201110 08:35:24.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:24.499" level="INFO">${ACCURACY} = {'source_diff': [7.291699999999873e-05, 7.251399999999922e-05, 7.263899999999934e-05, 7.295800000000144e-05, 7.327800000000301e-05, 7.269500000000109e-05, 7.312500000000027e-05, 7.27499999999999e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:24.487" endtime="20201110 08:35:24.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.503" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:35:24.502" endtime="20201110 08:35:24.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.506" level="INFO">VALUE: [7.291699999999873e-05, 7.251399999999922e-05, 7.263899999999934e-05, 7.295800000000144e-05, 7.327800000000301e-05, 7.269500000000109e-05, 7.312500000000027e-05, 7.27499999999999e-05, 7.281899999999827e-05, 7.331999999999825e-05, 7.24439999999979e-05, 7.33049999999992e-05, 7.32500000000004e-05, 7.294400000000187e-05, 7.279199999999861e-05, 7.249999999999965e-05, 7.252800000000226e-05, 7.272200000000076e-05, 7.337500000000052e-05, 7.313899999999984e-05, 7.305499999999895e-05, 7.32370000000003e-05, 7.295800000000144e-05, 7.266599999999901e-05, 7.298600000000058e-05, 7.340199999999672e-05, 7.29439999999984e-05, 7.254100000000235e-05, 7.258300000000106e-05, 7.250000000000312e-05, 7.30829999999981e-05, 7.327799999999954e-05, 7.315299999999941e-05, 7.281999999999775e-05, 7.301399999999972e-05, 7.249999999999965e-05, 7.323600000000083e-05, 7.331899999999877e-05, 7.255500000000192e-05, 7.316699999999898e-05, 7.327799999999954e-05, 7.276400000000294e-05, 7.295800000000144e-05, 7.330600000000215e-05, 7.345899999999794e-05, 7.32370000000003e-05, 7.30560000000019e-05, 7.269399999999815e-05, 7.311200000000018e-05, 7.252800000000226e-05]</msg>
<status status="PASS" starttime="20201110 08:35:24.505" endtime="20201110 08:35:24.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.500" endtime="20201110 08:35:24.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.510" endtime="20201110 08:35:24.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:24.513" endtime="20201110 08:35:24.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.511" endtime="20201110 08:35:24.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.508" endtime="20201110 08:35:24.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.143" endtime="20201110 08:35:24.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.142" endtime="20201110 08:35:24.534"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.542" endtime="20201110 08:35:24.561"></status>
</kw>
<msg timestamp="20201110 08:35:24.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.541" endtime="20201110 08:35:24.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.562" endtime="20201110 08:35:24.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.565" endtime="20201110 08:35:24.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.538" endtime="20201110 08:35:24.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.536" endtime="20201110 08:35:24.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.578" endtime="20201110 08:35:24.864"></status>
</kw>
<msg timestamp="20201110 08:35:24.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:24.577" endtime="20201110 08:35:24.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:24.868" endtime="20201110 08:35:24.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.877" endtime="20201110 08:35:24.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.571" endtime="20201110 08:35:24.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.569" endtime="20201110 08:35:24.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.883" level="INFO">${RESULT} = [{'time': 0.0196605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.366699999999948e-05, 'source_diff': 7.366699999999948e-05}, {'time': 0.019744556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:24.880" endtime="20201110 08:35:24.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:24.898" level="INFO">${ACCURACY} = {'source_diff': [7.366699999999948e-05, 7.436200000000143e-05, 7.39309999999993e-05, 7.37500000000009e-05, 7.366699999999948e-05, 7.436200000000143e-05, 7.444499999999937e-05, 7.34439999999989e-05, 7....</msg>
<status status="PASS" starttime="20201110 08:35:24.884" endtime="20201110 08:35:24.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.903" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:35:24.902" endtime="20201110 08:35:24.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.905" level="INFO">VALUE: [7.366699999999948e-05, 7.436200000000143e-05, 7.39309999999993e-05, 7.37500000000009e-05, 7.366699999999948e-05, 7.436200000000143e-05, 7.444499999999937e-05, 7.34439999999989e-05, 7.430600000000315e-05, 7.392999999999983e-05, 7.390300000000016e-05, 7.44309999999998e-05, 7.348599999999761e-05, 7.420800000000269e-05, 7.437500000000152e-05, 7.416699999999998e-05, 7.37500000000009e-05, 7.366700000000295e-05, 7.432000000000272e-05, 7.408400000000204e-05, 7.348700000000055e-05, 7.363899999999687e-05, 7.400000000000115e-05, 7.373600000000133e-05, 7.416600000000051e-05, 7.427800000000054e-05, 7.430599999999968e-05, 7.44309999999998e-05, 7.36110000000012e-05, 7.383400000000179e-05, 7.359800000000111e-05, 7.445799999999947e-05, 7.444499999999937e-05, 7.420799999999922e-05, 7.383299999999884e-05, 7.416699999999998e-05, 7.363900000000034e-05, 7.352799999999979e-05, 7.381899999999927e-05, 7.355499999999945e-05, 7.393100000000277e-05, 7.422199999999879e-05, 7.441700000000023e-05, 7.363900000000034e-05, 7.387499999999755e-05, 7.42639999999975e-05, 7.440200000000119e-05, 7.427700000000106e-05, 7.437500000000152e-05, 7.345799999999847e-05]</msg>
<status status="PASS" starttime="20201110 08:35:24.904" endtime="20201110 08:35:24.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.899" endtime="20201110 08:35:24.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.909" endtime="20201110 08:35:24.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:24.912" endtime="20201110 08:35:24.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.911" endtime="20201110 08:35:24.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.907" endtime="20201110 08:35:24.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.535" endtime="20201110 08:35:24.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.534" endtime="20201110 08:35:24.933"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.942" endtime="20201110 08:35:24.959"></status>
</kw>
<msg timestamp="20201110 08:35:24.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.940" endtime="20201110 08:35:24.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:24.961" endtime="20201110 08:35:24.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.963" endtime="20201110 08:35:24.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.938" endtime="20201110 08:35:24.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.936" endtime="20201110 08:35:24.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.973" endtime="20201110 08:35:25.259"></status>
</kw>
<msg timestamp="20201110 08:35:25.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.972" endtime="20201110 08:35:25.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.264" endtime="20201110 08:35:25.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.272" endtime="20201110 08:35:25.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.969" endtime="20201110 08:35:25.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.967" endtime="20201110 08:35:25.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.279" level="INFO">${RESULT} = [{'time': 0.020401847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.46110000000022e-05, 'source_diff': 7.46110000000022e-05}, {'time': 0.020485889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:25.276" endtime="20201110 08:35:25.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:25.293" level="INFO">${ACCURACY} = {'source_diff': [7.46110000000022e-05, 7.504200000000086e-05, 7.524999999999893e-05, 7.504200000000086e-05, 7.483399999999932e-05, 7.473600000000233e-05, 7.484699999999941e-05, 7.495899999999944e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:25.280" endtime="20201110 08:35:25.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.298" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:35:25.297" endtime="20201110 08:35:25.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.300" level="INFO">VALUE: [7.46110000000022e-05, 7.504200000000086e-05, 7.524999999999893e-05, 7.504200000000086e-05, 7.483399999999932e-05, 7.473600000000233e-05, 7.484699999999941e-05, 7.495899999999944e-05, 7.508399999999957e-05, 7.518099999999708e-05, 7.450000000000165e-05, 7.50830000000001e-05, 7.533300000000034e-05, 7.517999999999761e-05, 7.484799999999889e-05, 7.450000000000165e-05, 7.44439999999999e-05, 7.476400000000147e-05, 7.501400000000172e-05, 7.47500000000019e-05, 7.518000000000108e-05, 7.515300000000141e-05, 7.448699999999808e-05, 7.487499999999855e-05, 7.536099999999948e-05, 7.48050000000007e-05, 7.537499999999905e-05, 7.466600000000101e-05, 7.473599999999886e-05, 7.483399999999932e-05, 7.472199999999929e-05, 7.50830000000001e-05, 7.486099999999898e-05, 7.523599999999936e-05, 7.527799999999807e-05, 7.458400000000254e-05, 7.529099999999816e-05, 7.481900000000027e-05, 7.502699999999835e-05, 7.454100000000088e-05, 7.537500000000252e-05, 7.491700000000073e-05, 7.530600000000068e-05, 7.465300000000091e-05, 7.452800000000079e-05, 7.472299999999876e-05, 7.508399999999957e-05, 7.465299999999744e-05, 7.502800000000129e-05, 7.516600000000151e-05]</msg>
<status status="PASS" starttime="20201110 08:35:25.299" endtime="20201110 08:35:25.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.294" endtime="20201110 08:35:25.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.304" endtime="20201110 08:35:25.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:25.307" endtime="20201110 08:35:25.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.306" endtime="20201110 08:35:25.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.302" endtime="20201110 08:35:25.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.934" endtime="20201110 08:35:25.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.933" endtime="20201110 08:35:25.328"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.337" endtime="20201110 08:35:25.355"></status>
</kw>
<msg timestamp="20201110 08:35:25.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.335" endtime="20201110 08:35:25.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.357" endtime="20201110 08:35:25.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.359" endtime="20201110 08:35:25.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.332" endtime="20201110 08:35:25.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.330" endtime="20201110 08:35:25.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.369" endtime="20201110 08:35:25.655"></status>
</kw>
<msg timestamp="20201110 08:35:25.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.368" endtime="20201110 08:35:25.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.659" endtime="20201110 08:35:25.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.668" endtime="20201110 08:35:25.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.365" endtime="20201110 08:35:25.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.363" endtime="20201110 08:35:25.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.674" level="INFO">${RESULT} = [{'time': 0.019678444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.604099999999892e-05, 'source_diff': 7.604099999999892e-05}, {'time': 0.019762444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:25.671" endtime="20201110 08:35:25.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:25.688" level="INFO">${ACCURACY} = {'source_diff': [7.604099999999892e-05, 7.559700000000016e-05, 7.565199999999897e-05, 7.594399999999793e-05, 7.556900000000102e-05, 7.572200000000029e-05, 7.634700000000091e-05, 7.584700000000041e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:25.675" endtime="20201110 08:35:25.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.692" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:35:25.691" endtime="20201110 08:35:25.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.695" level="INFO">VALUE: [7.604099999999892e-05, 7.559700000000016e-05, 7.565199999999897e-05, 7.594399999999793e-05, 7.556900000000102e-05, 7.572200000000029e-05, 7.634700000000091e-05, 7.584700000000041e-05, 7.609700000000066e-05, 7.595900000000044e-05, 7.551399999999875e-05, 7.615300000000241e-05, 7.61249999999998e-05, 7.558400000000007e-05, 7.608299999999762e-05, 7.59440000000014e-05, 7.55830000000006e-05, 7.615299999999894e-05, 7.568100000000105e-05, 7.581999999999728e-05, 7.60830000000011e-05, 7.570900000000019e-05, 7.64449999999979e-05, 7.566699999999801e-05, 7.558400000000007e-05, 7.605499999999848e-05, 7.638899999999962e-05, 7.615199999999947e-05, 7.593000000000183e-05, 7.581900000000127e-05, 7.580499999999823e-05, 7.624999999999993e-05, 7.588899999999912e-05, 7.620800000000122e-05, 7.616700000000198e-05, 7.587499999999955e-05, 7.626400000000297e-05, 7.58050000000017e-05, 7.632000000000125e-05, 7.566700000000148e-05, 7.556900000000102e-05, 7.606899999999805e-05, 7.565299999999844e-05, 7.577800000000204e-05, 7.640300000000266e-05, 7.597200000000054e-05, 7.543099999999733e-05, 7.64310000000018e-05, 7.64029999999992e-05, 7.584700000000041e-05]</msg>
<status status="PASS" starttime="20201110 08:35:25.693" endtime="20201110 08:35:25.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.689" endtime="20201110 08:35:25.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.699" endtime="20201110 08:35:25.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:25.702" endtime="20201110 08:35:25.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.701" endtime="20201110 08:35:25.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.697" endtime="20201110 08:35:25.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.329" endtime="20201110 08:35:25.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.328" endtime="20201110 08:35:25.723"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.732" endtime="20201110 08:35:25.750"></status>
</kw>
<msg timestamp="20201110 08:35:25.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.730" endtime="20201110 08:35:25.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:25.751" endtime="20201110 08:35:25.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.753" endtime="20201110 08:35:25.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.728" endtime="20201110 08:35:25.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.726" endtime="20201110 08:35:25.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.763" endtime="20201110 08:35:26.049"></status>
</kw>
<msg timestamp="20201110 08:35:26.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.762" endtime="20201110 08:35:26.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.053" endtime="20201110 08:35:26.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.061" endtime="20201110 08:35:26.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.759" endtime="20201110 08:35:26.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.758" endtime="20201110 08:35:26.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:26.068" level="INFO">${RESULT} = [{'time': 0.019677167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.650000000000018e-05, 'source_diff': 7.650000000000018e-05}, {'time': 0.019764167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:26.065" endtime="20201110 08:35:26.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:26.082" level="INFO">${ACCURACY} = {'source_diff': [7.650000000000018e-05, 7.6764e-05, 7.672300000000076e-05, 7.69029999999997e-05, 7.680499999999923e-05, 7.654099999999942e-05, 7.661099999999726e-05, 7.71389999999969e-05, 7.6861000000...</msg>
<status status="PASS" starttime="20201110 08:35:26.069" endtime="20201110 08:35:26.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.086" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:35:26.085" endtime="20201110 08:35:26.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.089" level="INFO">VALUE: [7.650000000000018e-05, 7.6764e-05, 7.672300000000076e-05, 7.69029999999997e-05, 7.680499999999923e-05, 7.654099999999942e-05, 7.661099999999726e-05, 7.71389999999969e-05, 7.686100000000098e-05, 7.74030000000002e-05, 7.666699999999901e-05, 7.709700000000166e-05, 7.676300000000053e-05, 7.72229999999978e-05, 7.690300000000316e-05, 7.67770000000001e-05, 7.647200000000104e-05, 7.713799999999743e-05, 7.737499999999758e-05, 7.68189999999988e-05, 7.650000000000018e-05, 7.701400000000025e-05, 7.743099999999933e-05, 7.736100000000148e-05, 7.702799999999982e-05, 7.656999999999803e-05, 7.691699999999926e-05, 7.665299999999944e-05, 7.661200000000021e-05, 7.734699999999844e-05, 7.66380000000004e-05, 7.666599999999954e-05, 7.687500000000055e-05, 7.72640000000005e-05, 7.744500000000237e-05, 7.7070000000002e-05, 7.722200000000179e-05, 7.708299999999862e-05, 7.668100000000205e-05, 7.736099999999801e-05, 7.730600000000268e-05, 7.665300000000291e-05, 7.647199999999757e-05, 7.712499999999733e-05, 7.65969999999977e-05, 7.690300000000316e-05, 7.698599999999764e-05, 7.697200000000154e-05, 7.647199999999757e-05, 7.705599999999896e-05]</msg>
<status status="PASS" starttime="20201110 08:35:26.087" endtime="20201110 08:35:26.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.082" endtime="20201110 08:35:26.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.092" endtime="20201110 08:35:26.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:26.096" endtime="20201110 08:35:26.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.094" endtime="20201110 08:35:26.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.090" endtime="20201110 08:35:26.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.724" endtime="20201110 08:35:26.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.723" endtime="20201110 08:35:26.117"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.125" endtime="20201110 08:35:26.144"></status>
</kw>
<msg timestamp="20201110 08:35:26.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.124" endtime="20201110 08:35:26.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.145" endtime="20201110 08:35:26.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.148" endtime="20201110 08:35:26.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.121" endtime="20201110 08:35:26.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.119" endtime="20201110 08:35:26.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.158" endtime="20201110 08:35:26.442"></status>
</kw>
<msg timestamp="20201110 08:35:26.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020969403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.156" endtime="20201110 08:35:26.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020969403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.447" endtime="20201110 08:35:26.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.455" endtime="20201110 08:35:26.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.154" endtime="20201110 08:35:26.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.152" endtime="20201110 08:35:26.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:26.461" level="INFO">${RESULT} = [{'time': 0.020969403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.793099999999983e-05, 'source_diff': 7.793099999999983e-05}, {'time': 0.021055403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:26.458" endtime="20201110 08:35:26.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:26.475" level="INFO">${ACCURACY} = {'source_diff': [7.793099999999983e-05, 7.761100000000173e-05, 7.773599999999839e-05, 7.81389999999979e-05, 7.84449999999999e-05, 7.841700000000076e-05, 7.827800000000107e-05, 7.784700000000241e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:35:26.462" endtime="20201110 08:35:26.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.479" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:35:26.478" endtime="20201110 08:35:26.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.482" level="INFO">VALUE: [7.793099999999983e-05, 7.761100000000173e-05, 7.773599999999839e-05, 7.81389999999979e-05, 7.84449999999999e-05, 7.841700000000076e-05, 7.827800000000107e-05, 7.784700000000241e-05, 7.75969999999987e-05, 7.805500000000049e-05, 7.804200000000039e-05, 7.82640000000015e-05, 7.772199999999882e-05, 7.804200000000039e-05, 7.819499999999965e-05, 7.7764000000001e-05, 7.748600000000161e-05, 7.834799999999892e-05, 7.758299999999912e-05, 7.774999999999796e-05, 7.800000000000168e-05, 7.772200000000229e-05, 7.811099999999876e-05, 7.788900000000112e-05, 7.837499999999858e-05, 7.818100000000008e-05, 7.812499999999833e-05, 7.824999999999846e-05, 7.837499999999858e-05, 7.806999999999953e-05, 7.783299999999937e-05, 7.788900000000112e-05, 7.7457999999999e-05, 7.826399999999803e-05, 7.780599999999971e-05, 7.76389999999974e-05, 7.788899999999765e-05, 7.841700000000076e-05, 7.825000000000193e-05, 7.843000000000086e-05, 7.791700000000026e-05, 7.811199999999824e-05, 7.77770000000011e-05, 7.77909999999972e-05, 7.780500000000024e-05, 7.755499999999999e-05, 7.751400000000075e-05, 7.834699999999944e-05, 7.766700000000001e-05, 7.777800000000057e-05]</msg>
<status status="PASS" starttime="20201110 08:35:26.480" endtime="20201110 08:35:26.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.476" endtime="20201110 08:35:26.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.485" endtime="20201110 08:35:26.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:26.489" endtime="20201110 08:35:26.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.487" endtime="20201110 08:35:26.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.484" endtime="20201110 08:35:26.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.117" endtime="20201110 08:35:26.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.117" endtime="20201110 08:35:26.510"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.518" endtime="20201110 08:35:26.537"></status>
</kw>
<msg timestamp="20201110 08:35:26.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.517" endtime="20201110 08:35:26.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.538" endtime="20201110 08:35:26.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.541" endtime="20201110 08:35:26.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.514" endtime="20201110 08:35:26.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.512" endtime="20201110 08:35:26.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.551" endtime="20201110 08:35:26.836"></status>
</kw>
<msg timestamp="20201110 08:35:26.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.549" endtime="20201110 08:35:26.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.840" endtime="20201110 08:35:26.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.848" endtime="20201110 08:35:26.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.547" endtime="20201110 08:35:26.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.545" endtime="20201110 08:35:26.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:26.854" level="INFO">${RESULT} = [{'time': 0.019952958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.924999999999946e-05, 'source_diff': 7.924999999999946e-05}, {'time': 0.020042986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:26.851" endtime="20201110 08:35:26.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:26.869" level="INFO">${ACCURACY} = {'source_diff': [7.924999999999946e-05, 7.916699999999804e-05, 7.92779999999986e-05, 7.906900000000106e-05, 7.89030000000017e-05, 7.874999999999896e-05, 7.922200000000032e-05, 7.85969999999997e-05, 7....</msg>
<status status="PASS" starttime="20201110 08:35:26.855" endtime="20201110 08:35:26.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.873" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:35:26.872" endtime="20201110 08:35:26.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.876" level="INFO">VALUE: [7.924999999999946e-05, 7.916699999999804e-05, 7.92779999999986e-05, 7.906900000000106e-05, 7.89030000000017e-05, 7.874999999999896e-05, 7.922200000000032e-05, 7.85969999999997e-05, 7.854199999999742e-05, 7.883300000000037e-05, 7.85969999999997e-05, 7.848600000000261e-05, 7.917999999999814e-05, 7.843000000000086e-05, 7.854100000000142e-05, 7.868100000000058e-05, 7.883300000000037e-05, 7.888900000000212e-05, 7.848600000000261e-05, 7.911099999999976e-05, 7.933400000000035e-05, 7.880600000000071e-05, 7.919399999999771e-05, 7.897200000000007e-05, 7.919500000000065e-05, 7.870800000000025e-05, 7.933300000000088e-05, 7.944400000000143e-05, 7.865299999999797e-05, 7.920800000000075e-05, 7.943100000000133e-05, 7.850000000000218e-05, 7.920899999999675e-05, 7.858300000000012e-05, 7.936199999999949e-05, 7.884699999999994e-05, 7.884700000000341e-05, 7.872199999999982e-05, 7.916700000000151e-05, 7.920799999999728e-05, 7.908300000000063e-05, 7.911099999999976e-05, 7.943100000000133e-05, 7.943099999999786e-05, 7.89169999999978e-05, 7.868100000000058e-05, 7.854200000000089e-05, 7.89030000000017e-05, 7.901300000000278e-05, 7.937499999999958e-05]</msg>
<status status="PASS" starttime="20201110 08:35:26.874" endtime="20201110 08:35:26.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.870" endtime="20201110 08:35:26.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.879" endtime="20201110 08:35:26.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:26.883" endtime="20201110 08:35:26.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.881" endtime="20201110 08:35:26.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.878" endtime="20201110 08:35:26.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.510" endtime="20201110 08:35:26.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.510" endtime="20201110 08:35:26.904"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.912" endtime="20201110 08:35:26.929"></status>
</kw>
<msg timestamp="20201110 08:35:26.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.911" endtime="20201110 08:35:26.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:26.931" endtime="20201110 08:35:26.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.933" endtime="20201110 08:35:26.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.908" endtime="20201110 08:35:26.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.906" endtime="20201110 08:35:26.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.943" endtime="20201110 08:35:27.229"></status>
</kw>
<msg timestamp="20201110 08:35:27.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.942" endtime="20201110 08:35:27.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.233" endtime="20201110 08:35:27.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.241" endtime="20201110 08:35:27.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.939" endtime="20201110 08:35:27.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.938" endtime="20201110 08:35:27.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.248" level="INFO">${RESULT} = [{'time': 0.019949986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.026400000000003e-05, 'source_diff': 8.026400000000003e-05}, {'time': 0.020037986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:27.244" endtime="20201110 08:35:27.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:27.261" level="INFO">${ACCURACY} = {'source_diff': [8.026400000000003e-05, 7.983300000000138e-05, 7.990299999999922e-05, 7.99169999999988e-05, 8.024999999999699e-05, 7.957000000000103e-05, 7.955500000000199e-05, 7.969500000000115e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:27.249" endtime="20201110 08:35:27.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.266" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:35:27.265" endtime="20201110 08:35:27.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.268" level="INFO">VALUE: [8.026400000000003e-05, 7.983300000000138e-05, 7.990299999999922e-05, 7.99169999999988e-05, 8.024999999999699e-05, 7.957000000000103e-05, 7.955500000000199e-05, 7.969500000000115e-05, 7.991599999999932e-05, 7.967999999999864e-05, 8.01389999999999e-05, 8.044400000000243e-05, 8.019399999999871e-05, 7.956899999999809e-05, 8.031999999999831e-05, 7.9458000000001e-05, 8.00970000000012e-05, 7.949999999999971e-05, 7.979199999999867e-05, 8.00979999999972e-05, 8.023700000000036e-05, 8.027700000000013e-05, 7.972200000000082e-05, 8.026400000000003e-05, 7.974999999999996e-05, 8.015299999999947e-05, 7.980600000000171e-05, 8.020799999999828e-05, 7.949999999999971e-05, 7.970900000000072e-05, 8.033399999999788e-05, 8.036200000000049e-05, 7.987500000000008e-05, 8.036100000000101e-05, 8.000000000000021e-05, 7.987500000000008e-05, 7.956900000000156e-05, 7.98329999999979e-05, 7.970799999999778e-05, 8.040199999999678e-05, 8.043099999999886e-05, 7.947200000000057e-05, 7.99030000000027e-05, 8.043099999999886e-05, 7.947300000000004e-05, 7.988800000000018e-05, 8.023599999999742e-05, 8.012500000000033e-05, 8.044399999999896e-05, 8.006899999999859e-05]</msg>
<status status="PASS" starttime="20201110 08:35:27.267" endtime="20201110 08:35:27.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.262" endtime="20201110 08:35:27.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.272" endtime="20201110 08:35:27.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.275" endtime="20201110 08:35:27.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.273" endtime="20201110 08:35:27.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.270" endtime="20201110 08:35:27.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.905" endtime="20201110 08:35:27.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.904" endtime="20201110 08:35:27.296"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.304" endtime="20201110 08:35:27.322"></status>
</kw>
<msg timestamp="20201110 08:35:27.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.303" endtime="20201110 08:35:27.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.324" endtime="20201110 08:35:27.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.326" endtime="20201110 08:35:27.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.300" endtime="20201110 08:35:27.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.298" endtime="20201110 08:35:27.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.336" endtime="20201110 08:35:27.622"></status>
</kw>
<msg timestamp="20201110 08:35:27.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019584236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.335" endtime="20201110 08:35:27.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019584236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.626" endtime="20201110 08:35:27.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.635" endtime="20201110 08:35:27.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.332" endtime="20201110 08:35:27.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.330" endtime="20201110 08:35:27.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.642" level="INFO">${RESULT} = [{'time': 0.019584236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.062500000000083e-05, 'source_diff': 8.062500000000083e-05}, {'time': 0.019673264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:27.638" endtime="20201110 08:35:27.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:27.655" level="INFO">${ACCURACY} = {'source_diff': [8.062500000000083e-05, 8.086099999999805e-05, 8.068099999999911e-05, 8.054199999999942e-05, 8.063800000000093e-05, 8.131999999999931e-05, 8.1152999999997e-05, 8.137500000000158e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:35:27.643" endtime="20201110 08:35:27.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.660" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:35:27.659" endtime="20201110 08:35:27.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.662" level="INFO">VALUE: [8.062500000000083e-05, 8.086099999999805e-05, 8.068099999999911e-05, 8.054199999999942e-05, 8.063800000000093e-05, 8.131999999999931e-05, 8.1152999999997e-05, 8.137500000000158e-05, 8.058399999999813e-05, 8.131899999999984e-05, 8.092999999999989e-05, 8.101400000000078e-05, 8.073600000000139e-05, 8.147200000000257e-05, 8.112500000000133e-05, 8.130599999999974e-05, 8.054199999999942e-05, 8.086100000000151e-05, 8.123600000000189e-05, 8.133300000000288e-05, 8.062499999999737e-05, 8.09580000000025e-05, 8.097200000000207e-05, 8.123599999999842e-05, 8.143000000000039e-05, 8.070800000000225e-05, 8.123599999999842e-05, 8.140300000000072e-05, 8.070899999999825e-05, 8.134800000000192e-05, 8.1152000000001e-05, 8.073599999999792e-05, 8.109800000000167e-05, 8.04719999999981e-05, 8.094399999999946e-05, 8.06390000000004e-05, 8.054200000000289e-05, 8.065299999999997e-05, 8.123599999999842e-05, 8.059699999999823e-05, 8.12230000000018e-05, 8.100000000000121e-05, 8.087500000000108e-05, 8.134800000000192e-05, 8.100000000000121e-05, 8.055499999999952e-05, 8.129200000000017e-05, 8.066600000000007e-05, 8.137499999999812e-05, 8.044400000000243e-05]</msg>
<status status="PASS" starttime="20201110 08:35:27.661" endtime="20201110 08:35:27.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.656" endtime="20201110 08:35:27.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.666" endtime="20201110 08:35:27.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.669" endtime="20201110 08:35:27.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.668" endtime="20201110 08:35:27.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.664" endtime="20201110 08:35:27.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.297" endtime="20201110 08:35:27.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.296" endtime="20201110 08:35:27.690"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.699" endtime="20201110 08:35:27.719"></status>
</kw>
<msg timestamp="20201110 08:35:27.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.697" endtime="20201110 08:35:27.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:27.720" endtime="20201110 08:35:27.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.723" endtime="20201110 08:35:27.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.695" endtime="20201110 08:35:27.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.693" endtime="20201110 08:35:27.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.733" endtime="20201110 08:35:28.018"></status>
</kw>
<msg timestamp="20201110 08:35:28.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.731" endtime="20201110 08:35:28.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.022" endtime="20201110 08:35:28.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.031" endtime="20201110 08:35:28.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.729" endtime="20201110 08:35:28.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.727" endtime="20201110 08:35:28.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:28.037" level="INFO">${RESULT} = [{'time': 0.020508181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.169499999999968e-05, 'source_diff': 8.169499999999968e-05}, {'time': 0.020599194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:28.034" endtime="20201110 08:35:28.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:28.051" level="INFO">${ACCURACY} = {'source_diff': [8.169499999999968e-05, 8.208300000000016e-05, 8.186100000000252e-05, 8.186099999999905e-05, 8.236099999999955e-05, 8.218000000000114e-05, 8.186099999999905e-05, 8.156900000000009e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:28.038" endtime="20201110 08:35:28.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.055" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:35:28.054" endtime="20201110 08:35:28.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.058" level="INFO">VALUE: [8.169499999999968e-05, 8.208300000000016e-05, 8.186100000000252e-05, 8.186099999999905e-05, 8.236099999999955e-05, 8.218000000000114e-05, 8.186099999999905e-05, 8.156900000000009e-05, 8.145799999999953e-05, 8.234699999999998e-05, 8.180500000000077e-05, 8.152799999999738e-05, 8.201400000000178e-05, 8.144399999999996e-05, 8.223599999999942e-05, 8.222199999999985e-05, 8.23330000000004e-05, 8.166700000000054e-05, 8.162500000000183e-05, 8.206900000000059e-05, 8.222199999999985e-05, 8.169499999999968e-05, 8.165300000000097e-05, 8.180600000000024e-05, 8.222199999999985e-05, 8.173599999999892e-05, 8.177700000000163e-05, 8.181900000000034e-05, 8.170799999999978e-05, 8.172199999999935e-05, 8.152800000000085e-05, 8.173599999999892e-05, 8.201400000000178e-05, 8.172199999999935e-05, 8.19170000000008e-05, 8.150000000000171e-05, 8.222199999999985e-05, 8.204099999999798e-05, 8.215199999999853e-05, 8.186099999999905e-05, 8.166700000000054e-05, 8.19170000000008e-05, 8.179200000000067e-05, 8.165300000000097e-05, 8.216699999999758e-05, 8.223599999999942e-05, 8.159699999999923e-05, 8.206900000000059e-05, 8.200000000000221e-05, 8.151400000000128e-05]</msg>
<status status="PASS" starttime="20201110 08:35:28.056" endtime="20201110 08:35:28.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.052" endtime="20201110 08:35:28.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.061" endtime="20201110 08:35:28.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:28.065" endtime="20201110 08:35:28.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.063" endtime="20201110 08:35:28.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.060" endtime="20201110 08:35:28.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.691" endtime="20201110 08:35:28.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.691" endtime="20201110 08:35:28.086"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.094" endtime="20201110 08:35:28.113"></status>
</kw>
<msg timestamp="20201110 08:35:28.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.093" endtime="20201110 08:35:28.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.114" endtime="20201110 08:35:28.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.117" endtime="20201110 08:35:28.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.090" endtime="20201110 08:35:28.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.088" endtime="20201110 08:35:28.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.127" endtime="20201110 08:35:28.412"></status>
</kw>
<msg timestamp="20201110 08:35:28.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.125" endtime="20201110 08:35:28.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.416" endtime="20201110 08:35:28.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.425" endtime="20201110 08:35:28.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.123" endtime="20201110 08:35:28.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.121" endtime="20201110 08:35:28.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:28.431" level="INFO">${RESULT} = [{'time': 0.019737583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.336100000000055e-05, 'source_diff': 8.336100000000055e-05}, {'time': 0.019830597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:28.428" endtime="20201110 08:35:28.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:28.446" level="INFO">${ACCURACY} = {'source_diff': [8.336100000000055e-05, 8.33049999999988e-05, 8.316699999999858e-05, 8.32919999999987e-05, 8.282000000000081e-05, 8.268000000000164e-05, 8.302800000000235e-05, 8.306999999999759e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:35:28.432" endtime="20201110 08:35:28.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.450" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:35:28.449" endtime="20201110 08:35:28.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.453" level="INFO">VALUE: [8.336100000000055e-05, 8.33049999999988e-05, 8.316699999999858e-05, 8.32919999999987e-05, 8.282000000000081e-05, 8.268000000000164e-05, 8.302800000000235e-05, 8.306999999999759e-05, 8.318100000000161e-05, 8.301399999999931e-05, 8.26659999999986e-05, 8.252700000000238e-05, 8.279099999999873e-05, 8.276399999999906e-05, 8.295799999999756e-05, 8.286100000000005e-05, 8.312499999999987e-05, 8.27919999999982e-05, 8.308400000000063e-05, 8.336100000000055e-05, 8.330600000000174e-05, 8.3152999999999e-05, 8.256900000000109e-05, 8.262499999999937e-05, 8.276399999999906e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.313899999999944e-05, 8.323599999999695e-05, 8.280600000000124e-05, 8.312499999999987e-05, 8.27369999999994e-05, 8.29309999999979e-05, 8.312499999999987e-05, 8.28330000000009e-05, 8.268100000000111e-05, 8.331899999999837e-05, 8.273599999999992e-05, 8.302799999999888e-05, 8.312499999999987e-05, 8.280600000000124e-05, 8.34309999999984e-05, 8.32919999999987e-05, 8.269399999999774e-05, 8.316699999999858e-05, 8.258300000000066e-05, 8.277700000000263e-05, 8.287499999999962e-05, 8.31110000000003e-05, 8.263899999999894e-05]</msg>
<status status="PASS" starttime="20201110 08:35:28.451" endtime="20201110 08:35:28.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.447" endtime="20201110 08:35:28.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.456" endtime="20201110 08:35:28.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:28.460" endtime="20201110 08:35:28.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.458" endtime="20201110 08:35:28.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.455" endtime="20201110 08:35:28.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.087" endtime="20201110 08:35:28.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.086" endtime="20201110 08:35:28.481"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.489" endtime="20201110 08:35:28.507"></status>
</kw>
<msg timestamp="20201110 08:35:28.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.488" endtime="20201110 08:35:28.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.508" endtime="20201110 08:35:28.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.511" endtime="20201110 08:35:28.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.485" endtime="20201110 08:35:28.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.483" endtime="20201110 08:35:28.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.523" endtime="20201110 08:35:28.809"></status>
</kw>
<msg timestamp="20201110 08:35:28.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.521" endtime="20201110 08:35:28.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.814" endtime="20201110 08:35:28.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.822" endtime="20201110 08:35:28.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.518" endtime="20201110 08:35:28.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.515" endtime="20201110 08:35:28.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:28.828" level="INFO">${RESULT} = [{'time': 0.019694014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.36529999999995e-05, 'source_diff': 8.36529999999995e-05}, {'time': 0.019786, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8....</msg>
<status status="PASS" starttime="20201110 08:35:28.825" endtime="20201110 08:35:28.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:28.842" level="INFO">${ACCURACY} = {'source_diff': [8.36529999999995e-05, 8.370800000000178e-05, 8.358399999999766e-05, 8.36529999999995e-05, 8.44309999999994e-05, 8.437500000000112e-05, 8.426400000000056e-05, 8.425000000000099e-05, 8....</msg>
<status status="PASS" starttime="20201110 08:35:28.829" endtime="20201110 08:35:28.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.846" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:35:28.845" endtime="20201110 08:35:28.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.849" level="INFO">VALUE: [8.36529999999995e-05, 8.370800000000178e-05, 8.358399999999766e-05, 8.36529999999995e-05, 8.44309999999994e-05, 8.437500000000112e-05, 8.426400000000056e-05, 8.425000000000099e-05, 8.442999999999992e-05, 8.4153e-05, 8.402799999999988e-05, 8.395800000000203e-05, 8.377799999999963e-05, 8.400000000000074e-05, 8.36110000000008e-05, 8.412500000000087e-05, 8.436100000000155e-05, 8.437500000000112e-05, 8.352699999999991e-05, 8.384700000000148e-05, 8.36110000000008e-05, 8.442999999999992e-05, 8.362500000000037e-05, 8.422199999999838e-05, 8.409700000000173e-05, 8.437500000000112e-05, 8.379200000000267e-05, 8.402799999999988e-05, 8.373600000000092e-05, 8.391699999999933e-05, 8.420799999999881e-05, 8.386100000000105e-05, 8.419399999999924e-05, 8.442999999999992e-05, 8.344399999999849e-05, 8.423600000000142e-05, 8.357000000000156e-05, 8.425000000000099e-05, 8.425000000000099e-05, 8.416699999999958e-05, 8.362500000000037e-05, 8.351399999999981e-05, 8.406999999999859e-05, 8.427700000000066e-05, 8.43049999999998e-05, 8.399999999999727e-05, 8.370799999999831e-05, 8.377799999999963e-05, 8.408299999999869e-05, 8.427800000000013e-05]</msg>
<status status="PASS" starttime="20201110 08:35:28.847" endtime="20201110 08:35:28.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.843" endtime="20201110 08:35:28.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.852" endtime="20201110 08:35:28.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:28.856" endtime="20201110 08:35:28.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.854" endtime="20201110 08:35:28.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.851" endtime="20201110 08:35:28.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.481" endtime="20201110 08:35:28.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.481" endtime="20201110 08:35:28.877"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.885" endtime="20201110 08:35:28.904"></status>
</kw>
<msg timestamp="20201110 08:35:28.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.884" endtime="20201110 08:35:28.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:28.905" endtime="20201110 08:35:28.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.908" endtime="20201110 08:35:28.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.881" endtime="20201110 08:35:28.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.879" endtime="20201110 08:35:28.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.918" endtime="20201110 08:35:29.204"></status>
</kw>
<msg timestamp="20201110 08:35:29.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.916" endtime="20201110 08:35:29.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.208" endtime="20201110 08:35:29.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.216" endtime="20201110 08:35:29.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.913" endtime="20201110 08:35:29.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.912" endtime="20201110 08:35:29.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.223" level="INFO">${RESULT} = [{'time': 0.019669444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.502700000000141e-05, 'source_diff': 8.502700000000141e-05}, {'time': 0.019764458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:29.219" endtime="20201110 08:35:29.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:29.236" level="INFO">${ACCURACY} = {'source_diff': [8.502700000000141e-05, 8.522199999999938e-05, 8.520799999999981e-05, 8.502800000000088e-05, 8.538899999999822e-05, 8.47920000000002e-05, 8.4846999999999e-05, 8.452800000000038e-05, 8....</msg>
<status status="PASS" starttime="20201110 08:35:29.224" endtime="20201110 08:35:29.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.240" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:35:29.239" endtime="20201110 08:35:29.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.243" level="INFO">VALUE: [8.502700000000141e-05, 8.522199999999938e-05, 8.520799999999981e-05, 8.502800000000088e-05, 8.538899999999822e-05, 8.47920000000002e-05, 8.4846999999999e-05, 8.452800000000038e-05, 8.475000000000149e-05, 8.488900000000119e-05, 8.508399999999916e-05, 8.51110000000023e-05, 8.522199999999938e-05, 8.525000000000199e-05, 8.524999999999852e-05, 8.469399999999974e-05, 8.524999999999852e-05, 8.53469999999995e-05, 8.513900000000144e-05, 8.513899999999797e-05, 8.507000000000306e-05, 8.452800000000038e-05, 8.484700000000248e-05, 8.490199999999781e-05, 8.508299999999969e-05, 8.537499999999865e-05, 8.540299999999779e-05, 8.445799999999906e-05, 8.463899999999747e-05, 8.513900000000144e-05, 8.497199999999913e-05, 8.469499999999922e-05, 8.461099999999833e-05, 8.490300000000076e-05, 8.451399999999734e-05, 8.495799999999956e-05, 8.526399999999809e-05, 8.463900000000094e-05, 8.519400000000024e-05, 8.461099999999833e-05, 8.498600000000217e-05, 8.518100000000015e-05, 8.526400000000156e-05, 8.536100000000255e-05, 8.540300000000126e-05, 8.462500000000137e-05, 8.452800000000038e-05, 8.454100000000048e-05, 8.479100000000073e-05, 8.46249999999979e-05]</msg>
<status status="PASS" starttime="20201110 08:35:29.242" endtime="20201110 08:35:29.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.237" endtime="20201110 08:35:29.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.246" endtime="20201110 08:35:29.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:29.250" endtime="20201110 08:35:29.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.248" endtime="20201110 08:35:29.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.245" endtime="20201110 08:35:29.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.878" endtime="20201110 08:35:29.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.877" endtime="20201110 08:35:29.271"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.279" endtime="20201110 08:35:29.298"></status>
</kw>
<msg timestamp="20201110 08:35:29.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:29.278" endtime="20201110 08:35:29.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:29.299" endtime="20201110 08:35:29.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.302" endtime="20201110 08:35:29.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.275" endtime="20201110 08:35:29.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.273" endtime="20201110 08:35:29.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.312" endtime="20201110 08:35:29.597"></status>
</kw>
<msg timestamp="20201110 08:35:29.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.310" endtime="20201110 08:35:29.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.601" endtime="20201110 08:35:29.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.609" endtime="20201110 08:35:29.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.308" endtime="20201110 08:35:29.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.306" endtime="20201110 08:35:29.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.616" level="INFO">${RESULT} = [{'time': 0.019847597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.623599999999995e-05, 'source_diff': 8.623599999999995e-05}, {'time': 0.019942611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:29.612" endtime="20201110 08:35:29.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:29.629" level="INFO">${ACCURACY} = {'source_diff': [8.623599999999995e-05, 8.606899999999765e-05, 8.623599999999995e-05, 8.620799999999734e-05, 8.569500000000022e-05, 8.615299999999854e-05, 8.568100000000065e-05, 8.595900000000004e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:29.617" endtime="20201110 08:35:29.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.634" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:35:29.633" endtime="20201110 08:35:29.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.636" level="INFO">VALUE: [8.623599999999995e-05, 8.606899999999765e-05, 8.623599999999995e-05, 8.620799999999734e-05, 8.569500000000022e-05, 8.615299999999854e-05, 8.568100000000065e-05, 8.595900000000004e-05, 8.641700000000183e-05, 8.637500000000312e-05, 8.561099999999933e-05, 8.633300000000094e-05, 8.594500000000047e-05, 8.609700000000026e-05, 8.588899999999872e-05, 8.573599999999945e-05, 8.631999999999737e-05, 8.6153000000002e-05, 8.552799999999791e-05, 8.601400000000231e-05, 8.551399999999834e-05, 8.563899999999847e-05, 8.611099999999983e-05, 8.601399999999884e-05, 8.563899999999847e-05, 8.577799999999816e-05, 8.58059999999973e-05, 8.625000000000299e-05, 8.570899999999979e-05, 8.584799999999948e-05, 8.61249999999994e-05, 8.558300000000019e-05, 8.601299999999937e-05, 8.554199999999748e-05, 8.597200000000013e-05, 8.613899999999897e-05, 8.558300000000019e-05, 8.577799999999816e-05, 8.551399999999834e-05, 8.561099999999933e-05, 8.549999999999877e-05, 8.590300000000176e-05, 8.627700000000266e-05, 8.615200000000253e-05, 8.643000000000192e-05, 8.565299999999804e-05, 8.549999999999877e-05, 8.580499999999783e-05, 8.58059999999973e-05, 8.554099999999801e-05]</msg>
<status status="PASS" starttime="20201110 08:35:29.635" endtime="20201110 08:35:29.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.630" endtime="20201110 08:35:29.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.640" endtime="20201110 08:35:29.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:29.643" endtime="20201110 08:35:29.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.641" endtime="20201110 08:35:29.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.638" endtime="20201110 08:35:29.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.272" endtime="20201110 08:35:29.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.271" endtime="20201110 08:35:29.664"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.674" endtime="20201110 08:35:29.693"></status>
</kw>
<msg timestamp="20201110 08:35:29.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:29.672" endtime="20201110 08:35:29.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:29.694" endtime="20201110 08:35:29.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.697" endtime="20201110 08:35:29.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.669" endtime="20201110 08:35:29.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.667" endtime="20201110 08:35:29.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.707" endtime="20201110 08:35:29.992"></status>
</kw>
<msg timestamp="20201110 08:35:29.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.705" endtime="20201110 08:35:29.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:29.997" endtime="20201110 08:35:30.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.005" endtime="20201110 08:35:30.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.703" endtime="20201110 08:35:30.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.701" endtime="20201110 08:35:30.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.011" level="INFO">${RESULT} = [{'time': 0.021321042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.649999999999977e-05, 'source_diff': 8.649999999999977e-05}, {'time': 0.021418056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:30.008" endtime="20201110 08:35:30.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:30.026" level="INFO">${ACCURACY} = {'source_diff': [8.649999999999977e-05, 8.694500000000147e-05, 8.722200000000138e-05, 8.672199999999741e-05, 8.742999999999945e-05, 8.734699999999804e-05, 8.71250000000004e-05, 8.71669999999991e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:35:30.012" endtime="20201110 08:35:30.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.030" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:35:30.029" endtime="20201110 08:35:30.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.033" level="INFO">VALUE: [8.649999999999977e-05, 8.694500000000147e-05, 8.722200000000138e-05, 8.672199999999741e-05, 8.742999999999945e-05, 8.734699999999804e-05, 8.71250000000004e-05, 8.71669999999991e-05, 8.654099999999901e-05, 8.677799999999916e-05, 8.68059999999983e-05, 8.716700000000258e-05, 8.64860000000002e-05, 8.71669999999991e-05, 8.656899999999815e-05, 8.651399999999934e-05, 8.738900000000022e-05, 8.697199999999766e-05, 8.66669999999986e-05, 8.720800000000181e-05, 8.74449999999985e-05, 8.661099999999686e-05, 8.718099999999868e-05, 8.702799999999941e-05, 8.726400000000009e-05, 8.744399999999902e-05, 8.672200000000088e-05, 8.738900000000022e-05, 8.727799999999966e-05, 8.655600000000152e-05, 8.741699999999936e-05, 8.682000000000134e-05, 8.73470000000015e-05, 8.71250000000004e-05, 8.74310000000024e-05, 8.672300000000036e-05, 8.709700000000126e-05, 8.712499999999693e-05, 8.719399999999877e-05, 8.719399999999877e-05, 8.677800000000263e-05, 8.741700000000283e-05, 8.679199999999873e-05, 8.663899999999947e-05, 8.729199999999923e-05, 8.73059999999988e-05, 8.663899999999947e-05, 8.736200000000055e-05, 8.654099999999901e-05, 8.670800000000131e-05]</msg>
<status status="PASS" starttime="20201110 08:35:30.031" endtime="20201110 08:35:30.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.027" endtime="20201110 08:35:30.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.036" endtime="20201110 08:35:30.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.040" endtime="20201110 08:35:30.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.038" endtime="20201110 08:35:30.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.035" endtime="20201110 08:35:30.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.665" endtime="20201110 08:35:30.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.665" endtime="20201110 08:35:30.060"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.069" endtime="20201110 08:35:30.087"></status>
</kw>
<msg timestamp="20201110 08:35:30.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:30.068" endtime="20201110 08:35:30.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:30.089" endtime="20201110 08:35:30.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.091" endtime="20201110 08:35:30.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.065" endtime="20201110 08:35:30.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.063" endtime="20201110 08:35:30.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.101" endtime="20201110 08:35:30.386"></status>
</kw>
<msg timestamp="20201110 08:35:30.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.099" endtime="20201110 08:35:30.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.390" endtime="20201110 08:35:30.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.398" endtime="20201110 08:35:30.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.097" endtime="20201110 08:35:30.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.095" endtime="20201110 08:35:30.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.405" level="INFO">${RESULT} = [{'time': 0.019763597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.742999999999945e-05, 'source_diff': 8.742999999999945e-05}, {'time': 0.019860625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:30.402" endtime="20201110 08:35:30.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:30.418" level="INFO">${ACCURACY} = {'source_diff': [8.742999999999945e-05, 8.786099999999811e-05, 8.837499999999818e-05, 8.777800000000016e-05, 8.841700000000036e-05, 8.811099999999836e-05, 8.844400000000002e-05, 8.76799999999997e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:30.406" endtime="20201110 08:35:30.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.423" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:35:30.422" endtime="20201110 08:35:30.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.425" level="INFO">VALUE: [8.742999999999945e-05, 8.786099999999811e-05, 8.837499999999818e-05, 8.777800000000016e-05, 8.841700000000036e-05, 8.811099999999836e-05, 8.844400000000002e-05, 8.76799999999997e-05, 8.777700000000069e-05, 8.819399999999977e-05, 8.756899999999915e-05, 8.836100000000208e-05, 8.823599999999848e-05, 8.775000000000102e-05, 8.841600000000088e-05, 8.836099999999861e-05, 8.772299999999789e-05, 8.845799999999959e-05, 8.840200000000131e-05, 8.74730000000011e-05, 8.806899999999965e-05, 8.790300000000029e-05, 8.801400000000084e-05, 8.809699999999879e-05, 8.836200000000155e-05, 8.76669999999996e-05, 8.826400000000109e-05, 8.786100000000158e-05, 8.815300000000054e-05, 8.787499999999768e-05, 8.779199999999973e-05, 8.781900000000287e-05, 8.76799999999997e-05, 8.81389999999975e-05, 8.777800000000016e-05, 8.756999999999862e-05, 8.779199999999973e-05, 8.797199999999866e-05, 8.775000000000102e-05, 8.800000000000127e-05, 8.773600000000145e-05, 8.756899999999915e-05, 8.806899999999965e-05, 8.758300000000219e-05, 8.826399999999762e-05, 8.794399999999952e-05, 8.79730000000016e-05, 8.829200000000023e-05, 8.818099999999968e-05, 8.798599999999823e-05]</msg>
<status status="PASS" starttime="20201110 08:35:30.424" endtime="20201110 08:35:30.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.419" endtime="20201110 08:35:30.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.456" endtime="20201110 08:35:30.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.460" endtime="20201110 08:35:30.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.458" endtime="20201110 08:35:30.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.455" endtime="20201110 08:35:30.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.061" endtime="20201110 08:35:30.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.061" endtime="20201110 08:35:30.481"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.489" endtime="20201110 08:35:30.508"></status>
</kw>
<msg timestamp="20201110 08:35:30.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:30.488" endtime="20201110 08:35:30.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:30.510" endtime="20201110 08:35:30.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.512" endtime="20201110 08:35:30.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.485" endtime="20201110 08:35:30.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.483" endtime="20201110 08:35:30.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.522" endtime="20201110 08:35:30.809"></status>
</kw>
<msg timestamp="20201110 08:35:30.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.521" endtime="20201110 08:35:30.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.813" endtime="20201110 08:35:30.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.821" endtime="20201110 08:35:30.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.518" endtime="20201110 08:35:30.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.517" endtime="20201110 08:35:30.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.828" level="INFO">${RESULT} = [{'time': 0.019678347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.890299999999782e-05, 'source_diff': 8.890299999999782e-05}, {'time': 0.019777361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:30.824" endtime="20201110 08:35:30.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:30.841" level="INFO">${ACCURACY} = {'source_diff': [8.890299999999782e-05, 8.845799999999959e-05, 8.922199999999991e-05, 8.902799999999794e-05, 8.879200000000073e-05, 8.870899999999932e-05, 8.909799999999926e-05, 8.93190000000009e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:30.829" endtime="20201110 08:35:30.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.846" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:35:30.845" endtime="20201110 08:35:30.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.848" level="INFO">VALUE: [8.890299999999782e-05, 8.845799999999959e-05, 8.922199999999991e-05, 8.902799999999794e-05, 8.879200000000073e-05, 8.870899999999932e-05, 8.909799999999926e-05, 8.93190000000009e-05, 8.91389999999985e-05, 8.895799999999662e-05, 8.861100000000233e-05, 8.894400000000052e-05, 8.933300000000047e-05, 8.877800000000116e-05, 8.847199999999916e-05, 8.911199999999883e-05, 8.937500000000265e-05, 8.926399999999862e-05, 8.873700000000193e-05, 8.924999999999905e-05, 8.912499999999893e-05, 8.850000000000177e-05, 8.843000000000045e-05, 8.86250000000019e-05, 8.901400000000184e-05, 8.850000000000177e-05, 8.93060000000008e-05, 8.851400000000134e-05, 8.8945e-05, 8.905499999999761e-05, 8.8638999999998e-05, 8.897199999999966e-05, 8.902799999999794e-05, 8.941700000000136e-05, 8.848599999999873e-05, 8.881999999999987e-05, 8.932000000000037e-05, 8.872199999999941e-05, 8.870799999999984e-05, 8.937499999999918e-05, 8.86519999999981e-05, 8.879099999999779e-05, 8.90129999999989e-05, 8.858299999999972e-05, 8.86800000000007e-05, 8.926400000000209e-05, 8.915300000000154e-05, 8.855600000000005e-05, 8.869499999999975e-05, 8.854200000000048e-05]</msg>
<status status="PASS" starttime="20201110 08:35:30.847" endtime="20201110 08:35:30.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.842" endtime="20201110 08:35:30.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.852" endtime="20201110 08:35:30.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.855" endtime="20201110 08:35:30.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.853" endtime="20201110 08:35:30.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.850" endtime="20201110 08:35:30.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.482" endtime="20201110 08:35:30.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.481" endtime="20201110 08:35:30.876"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.884" endtime="20201110 08:35:30.903"></status>
</kw>
<msg timestamp="20201110 08:35:30.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:30.883" endtime="20201110 08:35:30.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:30.905" endtime="20201110 08:35:30.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.907" endtime="20201110 08:35:30.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.880" endtime="20201110 08:35:30.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.878" endtime="20201110 08:35:30.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.917" endtime="20201110 08:35:31.202"></status>
</kw>
<msg timestamp="20201110 08:35:31.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:30.915" endtime="20201110 08:35:31.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:31.207" endtime="20201110 08:35:31.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.215" endtime="20201110 08:35:31.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.913" endtime="20201110 08:35:31.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.911" endtime="20201110 08:35:31.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:31.221" level="INFO">${RESULT} = [{'time': 0.019692, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020800000000134e-05, 'source_diff': 9.020800000000134e-05}, {'time': 0.019792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.9...</msg>
<status status="PASS" starttime="20201110 08:35:31.218" endtime="20201110 08:35:31.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:31.235" level="INFO">${ACCURACY} = {'source_diff': [9.020800000000134e-05, 8.952800000000191e-05, 9.037500000000018e-05, 9.009700000000079e-05, 9.037500000000018e-05, 8.977799999999869e-05, 8.973599999999998e-05, 9.025000000000005e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:31.222" endtime="20201110 08:35:31.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.239" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:35:31.238" endtime="20201110 08:35:31.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.242" level="INFO">VALUE: [9.020800000000134e-05, 8.952800000000191e-05, 9.037500000000018e-05, 9.009700000000079e-05, 9.037500000000018e-05, 8.977799999999869e-05, 8.973599999999998e-05, 9.025000000000005e-05, 8.947200000000016e-05, 8.990299999999882e-05, 8.965300000000204e-05, 8.965299999999857e-05, 9.03060000000018e-05, 9.040299999999932e-05, 9.023600000000048e-05, 9.043100000000193e-05, 8.954200000000148e-05, 9.026399999999962e-05, 9.030499999999886e-05, 8.94999999999993e-05, 9.029099999999929e-05, 8.994400000000152e-05, 8.955600000000105e-05, 8.99999999999998e-05, 8.96670000000016e-05, 8.969500000000075e-05, 9.05000000000003e-05, 9.025000000000005e-05, 8.986100000000011e-05, 9.005500000000208e-05, 8.954099999999854e-05, 9.011100000000036e-05, 9.043000000000245e-05, 8.963900000000247e-05, 8.951399999999887e-05, 8.957000000000062e-05, 9.002799999999894e-05, 8.943100000000093e-05, 8.955600000000105e-05, 8.952799999999844e-05, 8.944399999999755e-05, 8.967999999999823e-05, 8.948599999999973e-05, 9.033300000000147e-05, 8.979199999999826e-05, 8.955600000000105e-05, 8.976399999999912e-05, 9.025000000000005e-05, 8.972200000000041e-05, 8.972200000000041e-05]</msg>
<status status="PASS" starttime="20201110 08:35:31.240" endtime="20201110 08:35:31.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.236" endtime="20201110 08:35:31.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.245" endtime="20201110 08:35:31.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:31.249" endtime="20201110 08:35:31.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.247" endtime="20201110 08:35:31.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.244" endtime="20201110 08:35:31.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.877" endtime="20201110 08:35:31.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.876" endtime="20201110 08:35:31.270"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.278" endtime="20201110 08:35:31.297"></status>
</kw>
<msg timestamp="20201110 08:35:31.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:31.277" endtime="20201110 08:35:31.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:31.298" endtime="20201110 08:35:31.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.301" endtime="20201110 08:35:31.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.274" endtime="20201110 08:35:31.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.272" endtime="20201110 08:35:31.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.311" endtime="20201110 08:35:31.596"></status>
</kw>
<msg timestamp="20201110 08:35:31.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:31.309" endtime="20201110 08:35:31.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:31.600" endtime="20201110 08:35:31.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.609" endtime="20201110 08:35:31.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.307" endtime="20201110 08:35:31.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.305" endtime="20201110 08:35:31.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:31.615" level="INFO">${RESULT} = [{'time': 0.019755347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.05000000000003e-05, 'source_diff': 9.05000000000003e-05}, {'time': 0.019855347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:31.612" endtime="20201110 08:35:31.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:31.630" level="INFO">${ACCURACY} = {'source_diff': [9.05000000000003e-05, 9.052799999999944e-05, 9.062500000000043e-05, 9.11939999999993e-05, 9.143100000000293e-05, 9.140300000000032e-05, 9.134800000000151e-05, 9.086200000000058e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:35:31.616" endtime="20201110 08:35:31.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.634" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:35:31.633" endtime="20201110 08:35:31.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.637" level="INFO">VALUE: [9.05000000000003e-05, 9.052799999999944e-05, 9.062500000000043e-05, 9.11939999999993e-05, 9.143100000000293e-05, 9.140300000000032e-05, 9.134800000000151e-05, 9.086200000000058e-05, 9.08190000000024e-05, 9.054100000000301e-05, 9.047200000000116e-05, 9.076400000000012e-05, 9.047200000000116e-05, 9.092999999999948e-05, 9.134700000000204e-05, 9.062500000000043e-05, 9.094399999999905e-05, 9.048600000000073e-05, 9.13199999999989e-05, 9.088900000000025e-05, 9.117999999999973e-05, 9.062500000000043e-05, 9.0639e-05, 9.072299999999742e-05, 9.058300000000172e-05, 9.086099999999764e-05, 9.132000000000237e-05, 9.108399999999822e-05, 9.045900000000107e-05, 9.048599999999726e-05, 9.088900000000025e-05, 9.109699999999832e-05, 9.104199999999951e-05, 9.115300000000007e-05, 9.134700000000204e-05, 9.129199999999976e-05, 9.051399999999987e-05, 9.1332999999999e-05, 9.122300000000139e-05, 9.104199999999951e-05, 9.141699999999989e-05, 9.102700000000047e-05, 9.077799999999969e-05, 9.047200000000116e-05, 9.072199999999794e-05, 9.067999999999923e-05, 9.070799999999837e-05, 9.124999999999758e-05, 9.11390000000005e-05, 9.090299999999982e-05]</msg>
<status status="PASS" starttime="20201110 08:35:31.635" endtime="20201110 08:35:31.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.631" endtime="20201110 08:35:31.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.640" endtime="20201110 08:35:31.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:31.644" endtime="20201110 08:35:31.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.642" endtime="20201110 08:35:31.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.639" endtime="20201110 08:35:31.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.270" endtime="20201110 08:35:31.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.270" endtime="20201110 08:35:31.665"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.673" endtime="20201110 08:35:31.693"></status>
</kw>
<msg timestamp="20201110 08:35:31.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:31.672" endtime="20201110 08:35:31.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:31.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:31.695" endtime="20201110 08:35:31.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.697" endtime="20201110 08:35:31.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.669" endtime="20201110 08:35:31.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.667" endtime="20201110 08:35:31.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:31.708" endtime="20201110 08:35:31.993"></status>
</kw>
<msg timestamp="20201110 08:35:31.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:31.706" endtime="20201110 08:35:31.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:31.997" endtime="20201110 08:35:32.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.005" endtime="20201110 08:35:32.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.704" endtime="20201110 08:35:32.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.702" endtime="20201110 08:35:32.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.012" level="INFO">${RESULT} = [{'time': 0.019754056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.23199999999999e-05, 'source_diff': 9.23199999999999e-05}, {'time': 0.019854083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:32.009" endtime="20201110 08:35:32.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:32.025" level="INFO">${ACCURACY} = {'source_diff': [9.23199999999999e-05, 9.205500000000061e-05, 9.170799999999937e-05, 9.206899999999671e-05, 9.229100000000129e-05, 9.236099999999914e-05, 9.209699999999932e-05, 9.227799999999772e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:32.013" endtime="20201110 08:35:32.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.030" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:35:32.029" endtime="20201110 08:35:32.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.032" level="INFO">VALUE: [9.23199999999999e-05, 9.205500000000061e-05, 9.170799999999937e-05, 9.206899999999671e-05, 9.229100000000129e-05, 9.236099999999914e-05, 9.209699999999932e-05, 9.227799999999772e-05, 9.179200000000026e-05, 9.19719999999992e-05, 9.159799999999829e-05, 9.244400000000055e-05, 9.184699999999907e-05, 9.152800000000044e-05, 9.229199999999729e-05, 9.155500000000011e-05, 9.186099999999864e-05, 9.195799999999962e-05, 9.193099999999996e-05, 9.216700000000064e-05, 9.15000000000013e-05, 9.169499999999928e-05, 9.170799999999937e-05, 9.201299999999843e-05, 9.238900000000175e-05, 9.172199999999894e-05, 9.219399999999683e-05, 9.216700000000064e-05, 9.1639000000001e-05, 9.237500000000218e-05, 9.206999999999965e-05, 9.165300000000057e-05, 9.191699999999692e-05, 9.154100000000054e-05, 9.223599999999901e-05, 9.2333e-05, 9.190300000000082e-05, 9.159699999999882e-05, 9.173599999999851e-05, 9.144399999999955e-05, 9.172199999999894e-05, 9.179200000000026e-05, 9.21390000000015e-05, 9.180599999999983e-05, 9.212500000000193e-05, 9.148599999999826e-05, 9.152800000000044e-05, 9.230500000000086e-05, 9.184699999999907e-05, 9.194400000000005e-05]</msg>
<status status="PASS" starttime="20201110 08:35:32.031" endtime="20201110 08:35:32.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.026" endtime="20201110 08:35:32.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.036" endtime="20201110 08:35:32.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:32.039" endtime="20201110 08:35:32.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.038" endtime="20201110 08:35:32.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.034" endtime="20201110 08:35:32.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.666" endtime="20201110 08:35:32.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:31.665" endtime="20201110 08:35:32.060"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.069" endtime="20201110 08:35:32.088"></status>
</kw>
<msg timestamp="20201110 08:35:32.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.067" endtime="20201110 08:35:32.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.089" endtime="20201110 08:35:32.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.092" endtime="20201110 08:35:32.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.065" endtime="20201110 08:35:32.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.063" endtime="20201110 08:35:32.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.102" endtime="20201110 08:35:32.387"></status>
</kw>
<msg timestamp="20201110 08:35:32.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.100" endtime="20201110 08:35:32.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.391" endtime="20201110 08:35:32.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.399" endtime="20201110 08:35:32.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.098" endtime="20201110 08:35:32.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.096" endtime="20201110 08:35:32.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.406" level="INFO">${RESULT} = [{'time': 0.019942472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.31659999999987e-05, 'source_diff': 9.31659999999987e-05}, {'time': 0.020042472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:32.403" endtime="20201110 08:35:32.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:32.419" level="INFO">${ACCURACY} = {'source_diff': [9.31659999999987e-05, 9.25139999999984e-05, 9.26940000000008e-05, 9.294400000000105e-05, 9.319500000000078e-05, 9.280600000000083e-05, 9.293100000000096e-05, 9.265300000000157e-05, 9....</msg>
<status status="PASS" starttime="20201110 08:35:32.407" endtime="20201110 08:35:32.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.424" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:35:32.423" endtime="20201110 08:35:32.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.426" level="INFO">VALUE: [9.31659999999987e-05, 9.25139999999984e-05, 9.26940000000008e-05, 9.294400000000105e-05, 9.319500000000078e-05, 9.280600000000083e-05, 9.293100000000096e-05, 9.265300000000157e-05, 9.258399999999972e-05, 9.252799999999797e-05, 9.25139999999984e-05, 9.245800000000012e-05, 9.277799999999822e-05, 9.270800000000037e-05, 9.262499999999896e-05, 9.327799999999872e-05, 9.269500000000028e-05, 9.333400000000047e-05, 9.326399999999915e-05, 9.288899999999878e-05, 9.334700000000057e-05, 9.249999999999883e-05, 9.272199999999994e-05, 9.333299999999753e-05, 9.320900000000035e-05, 9.261100000000286e-05, 9.273599999999951e-05, 9.277799999999822e-05, 9.330600000000133e-05, 9.28200000000004e-05, 9.270899999999985e-05, 9.28200000000004e-05, 9.277800000000169e-05, 9.252799999999797e-05, 9.330499999999839e-05, 9.304099999999857e-05, 9.259699999999982e-05, 9.324999999999958e-05, 9.301400000000237e-05, 9.294399999999758e-05, 9.324999999999958e-05, 9.307000000000065e-05, 9.262499999999896e-05, 9.301299999999943e-05, 9.30139999999989e-05, 9.331900000000143e-05, 9.268000000000123e-05, 9.277800000000169e-05, 9.26529999999981e-05, 9.288900000000225e-05]</msg>
<status status="PASS" starttime="20201110 08:35:32.425" endtime="20201110 08:35:32.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.420" endtime="20201110 08:35:32.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.430" endtime="20201110 08:35:32.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:32.433" endtime="20201110 08:35:32.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.432" endtime="20201110 08:35:32.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.428" endtime="20201110 08:35:32.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.061" endtime="20201110 08:35:32.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.060" endtime="20201110 08:35:32.454"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.463" endtime="20201110 08:35:32.482"></status>
</kw>
<msg timestamp="20201110 08:35:32.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.461" endtime="20201110 08:35:32.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.484" endtime="20201110 08:35:32.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.486" endtime="20201110 08:35:32.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.459" endtime="20201110 08:35:32.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.457" endtime="20201110 08:35:32.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.496" endtime="20201110 08:35:32.782"></status>
</kw>
<msg timestamp="20201110 08:35:32.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020146625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.495" endtime="20201110 08:35:32.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020052306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020146625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.786" endtime="20201110 08:35:32.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.794" endtime="20201110 08:35:32.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.492" endtime="20201110 08:35:32.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.490" endtime="20201110 08:35:32.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.801" level="INFO">${RESULT} = [{'time': 0.020146625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.431900000000243e-05, 'source_diff': 9.431900000000243e-05}, {'time': 0.020248639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:32.798" endtime="20201110 08:35:32.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:32.814" level="INFO">${ACCURACY} = {'source_diff': [9.431900000000243e-05, 9.349999999999983e-05, 9.412499999999699e-05, 9.361100000000039e-05, 9.443099999999899e-05, 9.349999999999983e-05, 9.419399999999883e-05, 9.36529999999991e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:32.802" endtime="20201110 08:35:32.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.819" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:35:32.818" endtime="20201110 08:35:32.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.821" level="INFO">VALUE: [9.431900000000243e-05, 9.349999999999983e-05, 9.412499999999699e-05, 9.361100000000039e-05, 9.443099999999899e-05, 9.349999999999983e-05, 9.419399999999883e-05, 9.36529999999991e-05, 9.361100000000039e-05, 9.391700000000239e-05, 9.408299999999828e-05, 9.372199999999747e-05, 9.358299999999778e-05, 9.387500000000021e-05, 9.345799999999765e-05, 9.394399999999858e-05, 9.363899999999953e-05, 9.390199999999987e-05, 9.429099999999982e-05, 9.376399999999965e-05, 9.345800000000112e-05, 9.394400000000205e-05, 9.390299999999935e-05, 9.377799999999922e-05, 9.373600000000051e-05, 9.368100000000171e-05, 9.424999999999711e-05, 9.431900000000243e-05, 9.40139999999999e-05, 9.380499999999889e-05, 9.431999999999843e-05, 9.384700000000107e-05, 9.443099999999899e-05, 9.408399999999775e-05, 9.348600000000026e-05, 9.420900000000135e-05, 9.409799999999732e-05, 9.393100000000196e-05, 9.395800000000162e-05, 9.377699999999975e-05, 9.361100000000039e-05, 9.356899999999821e-05, 9.356900000000168e-05, 9.349999999999983e-05, 9.404199999999904e-05, 9.372300000000042e-05, 9.412500000000046e-05, 9.356899999999821e-05, 9.347300000000017e-05, 9.375000000000008e-05]</msg>
<status status="PASS" starttime="20201110 08:35:32.820" endtime="20201110 08:35:32.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.815" endtime="20201110 08:35:32.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.825" endtime="20201110 08:35:32.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:32.828" endtime="20201110 08:35:32.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.827" endtime="20201110 08:35:32.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.823" endtime="20201110 08:35:32.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.455" endtime="20201110 08:35:32.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.455" endtime="20201110 08:35:32.849"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.858" endtime="20201110 08:35:32.876"></status>
</kw>
<msg timestamp="20201110 08:35:32.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.856" endtime="20201110 08:35:32.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:32.878" endtime="20201110 08:35:32.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.880" endtime="20201110 08:35:32.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.854" endtime="20201110 08:35:32.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.852" endtime="20201110 08:35:32.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.890" endtime="20201110 08:35:33.176"></status>
</kw>
<msg timestamp="20201110 08:35:33.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.889" endtime="20201110 08:35:33.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:33.181" endtime="20201110 08:35:33.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.189" endtime="20201110 08:35:33.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.886" endtime="20201110 08:35:33.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.885" endtime="20201110 08:35:33.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:33.196" level="INFO">${RESULT} = [{'time': 0.019724639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.522199999999897e-05, 'source_diff': 9.522199999999897e-05}, {'time': 0.019828625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:33.192" endtime="20201110 08:35:33.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:33.210" level="INFO">${ACCURACY} = {'source_diff': [9.522199999999897e-05, 9.499999999999786e-05, 9.536100000000214e-05, 9.466699999999967e-05, 9.536100000000214e-05, 9.449999999999736e-05, 9.445800000000212e-05, 9.531899999999996e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:33.197" endtime="20201110 08:35:33.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.215" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:35:33.213" endtime="20201110 08:35:33.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.217" level="INFO">VALUE: [9.522199999999897e-05, 9.499999999999786e-05, 9.536100000000214e-05, 9.466699999999967e-05, 9.536100000000214e-05, 9.449999999999736e-05, 9.445800000000212e-05, 9.531899999999996e-05, 9.472199999999847e-05, 9.516700000000017e-05, 9.50140000000009e-05, 9.454199999999954e-05, 9.456999999999868e-05, 9.508400000000222e-05, 9.444499999999856e-05, 9.452799999999997e-05, 9.459799999999782e-05, 9.538899999999781e-05, 9.458300000000225e-05, 9.479100000000032e-05, 9.50140000000009e-05, 9.459700000000182e-05, 9.465200000000062e-05, 9.461100000000139e-05, 9.536099999999867e-05, 9.523699999999802e-05, 9.468100000000271e-05, 9.530500000000039e-05, 9.5333000000003e-05, 9.494400000000305e-05, 9.463899999999706e-05, 9.527800000000072e-05, 9.463900000000053e-05, 9.511100000000189e-05, 9.463899999999706e-05, 9.477800000000022e-05, 9.481999999999893e-05, 9.50140000000009e-05, 9.46530000000001e-05, 9.466699999999967e-05, 9.452799999999997e-05, 9.543099999999999e-05, 9.455599999999911e-05, 9.524999999999811e-05, 9.516700000000017e-05, 9.523700000000149e-05, 9.536099999999867e-05, 9.484799999999807e-05, 9.480499999999989e-05, 9.476399999999718e-05]</msg>
<status status="PASS" starttime="20201110 08:35:33.216" endtime="20201110 08:35:33.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.211" endtime="20201110 08:35:33.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.220" endtime="20201110 08:35:33.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:33.224" endtime="20201110 08:35:33.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.222" endtime="20201110 08:35:33.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.219" endtime="20201110 08:35:33.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.850" endtime="20201110 08:35:33.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.850" endtime="20201110 08:35:33.245"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.253" endtime="20201110 08:35:33.273"></status>
</kw>
<msg timestamp="20201110 08:35:33.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:33.252" endtime="20201110 08:35:33.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:33.275" endtime="20201110 08:35:33.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.277" endtime="20201110 08:35:33.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.249" endtime="20201110 08:35:33.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.247" endtime="20201110 08:35:33.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.287" endtime="20201110 08:35:33.573"></status>
</kw>
<msg timestamp="20201110 08:35:33.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020159972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020256125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:33.286" endtime="20201110 08:35:33.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020159972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020256125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:33.578" endtime="20201110 08:35:33.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.586" endtime="20201110 08:35:33.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.283" endtime="20201110 08:35:33.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.281" endtime="20201110 08:35:33.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:33.593" level="INFO">${RESULT} = [{'time': 0.020256125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.615299999999813e-05, 'source_diff': 9.615299999999813e-05}, {'time': 0.020361111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:33.589" endtime="20201110 08:35:33.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:33.606" level="INFO">${ACCURACY} = {'source_diff': [9.615299999999813e-05, 9.623599999999954e-05, 9.576399999999818e-05, 9.597199999999972e-05, 9.580600000000036e-05, 9.587499999999874e-05, 9.613799999999909e-05, 9.545800000000312e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:33.594" endtime="20201110 08:35:33.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.610" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:35:33.609" endtime="20201110 08:35:33.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.613" level="INFO">VALUE: [9.615299999999813e-05, 9.623599999999954e-05, 9.576399999999818e-05, 9.597199999999972e-05, 9.580600000000036e-05, 9.587499999999874e-05, 9.613799999999909e-05, 9.545800000000312e-05, 9.559699999999935e-05, 9.572199999999947e-05, 9.613900000000203e-05, 9.561100000000239e-05, 9.570899999999938e-05, 9.636099999999967e-05, 9.597199999999972e-05, 9.637500000000271e-05, 9.55140000000014e-05, 9.643099999999752e-05, 9.579100000000132e-05, 9.556900000000021e-05, 9.590300000000135e-05, 9.545799999999965e-05, 9.55279999999975e-05, 9.641700000000142e-05, 9.59720000000032e-05, 9.636099999999967e-05, 9.545899999999913e-05, 9.550000000000183e-05, 9.612500000000246e-05, 9.558299999999978e-05, 9.606900000000071e-05, 9.554100000000107e-05, 9.583300000000003e-05, 9.562500000000196e-05, 9.615299999999813e-05, 9.597199999999972e-05, 9.574999999999861e-05, 9.611099999999942e-05, 9.643000000000151e-05, 9.609699999999985e-05, 9.636099999999967e-05, 9.555500000000064e-05, 9.62920000000013e-05, 9.599999999999886e-05, 9.618100000000074e-05, 9.623599999999954e-05, 9.577800000000122e-05, 9.620899999999988e-05, 9.579200000000079e-05, 9.622199999999997e-05]</msg>
<status status="PASS" starttime="20201110 08:35:33.611" endtime="20201110 08:35:33.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.607" endtime="20201110 08:35:33.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.616" endtime="20201110 08:35:33.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:33.620" endtime="20201110 08:35:33.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.618" endtime="20201110 08:35:33.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.615" endtime="20201110 08:35:33.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.246" endtime="20201110 08:35:33.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.245" endtime="20201110 08:35:33.641"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.649" endtime="20201110 08:35:33.668"></status>
</kw>
<msg timestamp="20201110 08:35:33.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:33.648" endtime="20201110 08:35:33.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:33.669" endtime="20201110 08:35:33.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.672" endtime="20201110 08:35:33.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.645" endtime="20201110 08:35:33.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.643" endtime="20201110 08:35:33.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.682" endtime="20201110 08:35:33.968"></status>
</kw>
<msg timestamp="20201110 08:35:33.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:33.680" endtime="20201110 08:35:33.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:33.972" endtime="20201110 08:35:33.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.981" endtime="20201110 08:35:33.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.678" endtime="20201110 08:35:33.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.676" endtime="20201110 08:35:33.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:33.987" level="INFO">${RESULT} = [{'time': 0.01969375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.679199999999832e-05, 'source_diff': 9.679199999999832e-05}, {'time': 0.019799792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:35:33.984" endtime="20201110 08:35:33.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:34.001" level="INFO">${ACCURACY} = {'source_diff': [9.679199999999832e-05, 9.665299999999863e-05, 9.707000000000118e-05, 9.686100000000017e-05, 9.658400000000025e-05, 9.713800000000009e-05, 9.695800000000115e-05, 9.688899999999931e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:33.988" endtime="20201110 08:35:34.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.005" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:35:34.004" endtime="20201110 08:35:34.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.008" level="INFO">VALUE: [9.679199999999832e-05, 9.665299999999863e-05, 9.707000000000118e-05, 9.686100000000017e-05, 9.658400000000025e-05, 9.713800000000009e-05, 9.695800000000115e-05, 9.688899999999931e-05, 9.73059999999984e-05, 9.68059999999979e-05, 9.69860000000003e-05, 9.659700000000035e-05, 9.65409999999986e-05, 9.68340000000005e-05, 9.704200000000204e-05, 9.66669999999982e-05, 9.702699999999953e-05, 9.677699999999928e-05, 9.672200000000047e-05, 9.651399999999893e-05, 9.686100000000017e-05, 9.656900000000121e-05, 9.695799999999768e-05, 9.722300000000045e-05, 9.736100000000067e-05, 9.712499999999999e-05, 9.644500000000056e-05, 9.670799999999743e-05, 9.722200000000097e-05, 9.659700000000035e-05, 9.661099999999992e-05, 9.665299999999863e-05, 9.711100000000042e-05, 9.686100000000017e-05, 9.694499999999759e-05, 9.640300000000185e-05, 9.709700000000085e-05, 9.688799999999984e-05, 9.718000000000226e-05, 9.680499999999842e-05, 9.733299999999806e-05, 9.726399999999968e-05, 9.733299999999806e-05, 9.707000000000118e-05, 9.732000000000143e-05, 9.713900000000303e-05, 9.713800000000009e-05, 9.655499999999817e-05, 9.737500000000024e-05, 9.699999999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:35:34.006" endtime="20201110 08:35:34.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.002" endtime="20201110 08:35:34.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.011" endtime="20201110 08:35:34.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:34.015" endtime="20201110 08:35:34.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.013" endtime="20201110 08:35:34.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.010" endtime="20201110 08:35:34.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.642" endtime="20201110 08:35:34.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.641" endtime="20201110 08:35:34.036"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.044" endtime="20201110 08:35:34.064"></status>
</kw>
<msg timestamp="20201110 08:35:34.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:34.042" endtime="20201110 08:35:34.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:34.066" endtime="20201110 08:35:34.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.068" endtime="20201110 08:35:34.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.040" endtime="20201110 08:35:34.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.038" endtime="20201110 08:35:34.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.078" endtime="20201110 08:35:34.363"></status>
</kw>
<msg timestamp="20201110 08:35:34.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.077" endtime="20201110 08:35:34.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.367" endtime="20201110 08:35:34.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.376" endtime="20201110 08:35:34.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.074" endtime="20201110 08:35:34.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.072" endtime="20201110 08:35:34.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:34.382" level="INFO">${RESULT} = [{'time': 0.019722458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792999999999955e-05, 'source_diff': 9.792999999999955e-05}, {'time': 0.019830472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:34.379" endtime="20201110 08:35:34.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:34.396" level="INFO">${ACCURACY} = {'source_diff': [9.792999999999955e-05, 9.75279999999995e-05, 9.820799999999894e-05, 9.74999999999969e-05, 9.829199999999982e-05, 9.744500000000156e-05, 9.800000000000086e-05, 9.837499999999777e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:35:34.383" endtime="20201110 08:35:34.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.400" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:35:34.399" endtime="20201110 08:35:34.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.402" level="INFO">VALUE: [9.792999999999955e-05, 9.75279999999995e-05, 9.820799999999894e-05, 9.74999999999969e-05, 9.829199999999982e-05, 9.744500000000156e-05, 9.800000000000086e-05, 9.837499999999777e-05, 9.765299999999963e-05, 9.76799999999993e-05, 9.837499999999777e-05, 9.78059999999989e-05, 9.838900000000081e-05, 9.761100000000092e-05, 9.841699999999995e-05, 9.797199999999825e-05, 9.804199999999957e-05, 9.845900000000213e-05, 9.75279999999995e-05, 9.825000000000111e-05, 9.745800000000165e-05, 9.819399999999937e-05, 9.836100000000167e-05, 9.775000000000061e-05, 9.770799999999843e-05, 9.827800000000025e-05, 9.845799999999919e-05, 9.844500000000256e-05, 9.840300000000038e-05, 9.826300000000121e-05, 9.783299999999856e-05, 9.751399999999993e-05, 9.75279999999995e-05, 9.806899999999924e-05, 9.833299999999906e-05, 9.827800000000025e-05, 9.837500000000124e-05, 9.815300000000013e-05, 9.829100000000035e-05, 9.758400000000125e-05, 9.811100000000142e-05, 9.790299999999988e-05, 9.801399999999696e-05, 9.750000000000036e-05, 9.756999999999821e-05, 9.779199999999932e-05, 9.837500000000124e-05, 9.777700000000028e-05, 9.755599999999864e-05, 9.779099999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:35:34.401" endtime="20201110 08:35:34.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.396" endtime="20201110 08:35:34.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.406" endtime="20201110 08:35:34.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:34.409" endtime="20201110 08:35:34.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.408" endtime="20201110 08:35:34.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.404" endtime="20201110 08:35:34.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.036" endtime="20201110 08:35:34.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.036" endtime="20201110 08:35:34.430"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.439" endtime="20201110 08:35:34.458"></status>
</kw>
<msg timestamp="20201110 08:35:34.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:34.437" endtime="20201110 08:35:34.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:34.460" endtime="20201110 08:35:34.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.462" endtime="20201110 08:35:34.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.435" endtime="20201110 08:35:34.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.433" endtime="20201110 08:35:34.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.472" endtime="20201110 08:35:34.757"></status>
</kw>
<msg timestamp="20201110 08:35:34.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019555153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.471" endtime="20201110 08:35:34.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019555153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.761" endtime="20201110 08:35:34.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.769" endtime="20201110 08:35:34.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.468" endtime="20201110 08:35:34.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.466" endtime="20201110 08:35:34.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:34.776" level="INFO">${RESULT} = [{'time': 0.019654236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.908299999999981e-05, 'source_diff': 9.908299999999981e-05}, {'time': 0.019762208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:34.772" endtime="20201110 08:35:34.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:34.790" level="INFO">${ACCURACY} = {'source_diff': [9.908299999999981e-05, 9.937499999999877e-05, 9.917999999999733e-05, 9.915299999999766e-05, 9.941700000000095e-05, 9.926399999999821e-05, 9.874999999999814e-05, 9.85280000000005e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:34.777" endtime="20201110 08:35:34.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.795" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:35:34.794" endtime="20201110 08:35:34.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.797" level="INFO">VALUE: [9.908299999999981e-05, 9.937499999999877e-05, 9.917999999999733e-05, 9.915299999999766e-05, 9.941700000000095e-05, 9.926399999999821e-05, 9.874999999999814e-05, 9.85280000000005e-05, 9.872299999999848e-05, 9.88609999999987e-05, 9.866600000000073e-05, 9.866600000000073e-05, 9.931900000000049e-05, 9.844399999999962e-05, 9.915299999999766e-05, 9.890300000000088e-05, 9.938899999999834e-05, 9.873599999999857e-05, 9.929100000000135e-05, 9.931899999999702e-05, 9.911100000000242e-05, 9.931899999999702e-05, 9.862500000000149e-05, 9.912499999999852e-05, 9.929200000000082e-05, 9.911099999999895e-05, 9.888900000000131e-05, 9.855599999999964e-05, 9.943100000000052e-05, 9.877700000000128e-05, 9.862500000000149e-05, 9.940199999999844e-05, 9.877699999999781e-05, 9.911100000000242e-05, 9.905600000000014e-05, 9.933300000000006e-05, 9.863900000000106e-05, 9.923599999999907e-05, 9.890299999999741e-05, 9.89020000000014e-05, 9.865200000000116e-05, 9.884699999999913e-05, 9.859699999999888e-05, 9.865300000000063e-05, 9.869399999999987e-05, 9.893100000000002e-05, 9.93609999999992e-05, 9.9028000000001e-05, 9.877800000000075e-05, 9.857000000000268e-05]</msg>
<status status="PASS" starttime="20201110 08:35:34.796" endtime="20201110 08:35:34.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.791" endtime="20201110 08:35:34.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.801" endtime="20201110 08:35:34.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:34.804" endtime="20201110 08:35:34.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.803" endtime="20201110 08:35:34.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.799" endtime="20201110 08:35:34.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.431" endtime="20201110 08:35:34.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.431" endtime="20201110 08:35:34.825"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.834" endtime="20201110 08:35:34.852"></status>
</kw>
<msg timestamp="20201110 08:35:34.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:34.832" endtime="20201110 08:35:34.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:34.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:34.854" endtime="20201110 08:35:34.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.857" endtime="20201110 08:35:34.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.830" endtime="20201110 08:35:34.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.827" endtime="20201110 08:35:34.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:34.867" endtime="20201110 08:35:35.153"></status>
</kw>
<msg timestamp="20201110 08:35:35.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:34.865" endtime="20201110 08:35:35.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.157" endtime="20201110 08:35:35.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.165" endtime="20201110 08:35:35.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.862" endtime="20201110 08:35:35.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.861" endtime="20201110 08:35:35.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.172" level="INFO">${RESULT} = [{'time': 0.019782653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.962499999999902e-05, 'source_diff': 9.962499999999902e-05}, {'time': 0.019892708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:35.168" endtime="20201110 08:35:35.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:35.185" level="INFO">${ACCURACY} = {'source_diff': [9.962499999999902e-05, 0.00010023600000000008, 0.00010041699999999848, 9.982000000000046e-05, 0.00010008299999999734, 0.00010029099999999888, 0.00010011099999999995, 9.95280000000015e...</msg>
<status status="PASS" starttime="20201110 08:35:35.173" endtime="20201110 08:35:35.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.189" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:35:35.188" endtime="20201110 08:35:35.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.192" level="INFO">VALUE: [9.962499999999902e-05, 0.00010023600000000008, 0.00010041699999999848, 9.982000000000046e-05, 0.00010008299999999734, 0.00010029099999999888, 0.00010011099999999995, 9.95280000000015e-05, 0.00010015299999999866, 0.00010040299999999891, 9.979200000000132e-05, 9.977800000000175e-05, 9.962499999999902e-05, 0.00010038899999999934, 9.944399999999715e-05, 9.988900000000231e-05, 0.00010037499999999977, 0.0001001809999999978, 9.984700000000013e-05, 0.00010002799999999853, 0.00010007000000000071, 9.951399999999846e-05, 0.00010019400000000137, 0.00010036199999999967, 0.00010029099999999888, 9.9722e-05, 9.973600000000304e-05, 9.997200000000026e-05, 0.00010040299999999891, 0.0001003610000000002, 0.00010015300000000213, 9.958399999999978e-05, 9.99869999999993e-05, 0.00010031899999999802, 9.945800000000019e-05, 9.976399999999871e-05, 0.00010019400000000137, 9.94999999999989e-05, 9.982000000000046e-05, 9.965300000000163e-05, 0.00010004200000000157, 0.0001004020000000029, 0.00010011099999999995, 9.98609999999997e-05, 0.00010026399999999921, 9.977799999999828e-05, 9.995799999999722e-05, 9.98609999999997e-05, 9.967999999999783e-05, 9.997200000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:35:35.191" endtime="20201110 08:35:35.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.186" endtime="20201110 08:35:35.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.195" endtime="20201110 08:35:35.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:35.199" endtime="20201110 08:35:35.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.197" endtime="20201110 08:35:35.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.194" endtime="20201110 08:35:35.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.826" endtime="20201110 08:35:35.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:34.825" endtime="20201110 08:35:35.220"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.228" endtime="20201110 08:35:35.248"></status>
</kw>
<msg timestamp="20201110 08:35:35.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:35.227" endtime="20201110 08:35:35.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:35.250" endtime="20201110 08:35:35.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.252" endtime="20201110 08:35:35.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.224" endtime="20201110 08:35:35.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.222" endtime="20201110 08:35:35.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.262" endtime="20201110 08:35:35.547"></status>
</kw>
<msg timestamp="20201110 08:35:35.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.261" endtime="20201110 08:35:35.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.552" endtime="20201110 08:35:35.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.560" endtime="20201110 08:35:35.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.258" endtime="20201110 08:35:35.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.257" endtime="20201110 08:35:35.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.566" level="INFO">${RESULT} = [{'time': 0.019734347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010111100000000095, 'source_diff': 0.00010111100000000095}, {'time': 0.019842347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:35.563" endtime="20201110 08:35:35.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:35.579" level="INFO">${ACCURACY} = {'source_diff': [0.00010111100000000095, 0.00010087500000000027, 0.00010106899999999877, 0.00010144499999999862, 0.00010141699999999948, 0.00010097200000000126, 0.00010115299999999966, 0.0001007500000...</msg>
<status status="PASS" starttime="20201110 08:35:35.567" endtime="20201110 08:35:35.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.584" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:35:35.583" endtime="20201110 08:35:35.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.586" level="INFO">VALUE: [0.00010111100000000095, 0.00010087500000000027, 0.00010106899999999877, 0.00010144499999999862, 0.00010141699999999948, 0.00010097200000000126, 0.00010115299999999966, 0.00010075000000000014, 0.00010115299999999966, 0.00010077699999999981, 0.00010130500000000292, 0.00010066599999999926, 0.00010130599999999892, 0.00010091699999999898, 0.00010136099999999773, 0.00010109700000000138, 0.00010129199999999935, 0.00010061100000000045, 0.00010113900000000009, 0.00010045800000000119, 0.00010084700000000113, 0.00010109699999999791, 0.00010137500000000077, 0.0001010000000000004, 0.00010088899999999984, 0.00010123700000000055, 0.0001008480000000006, 0.00010048600000000033, 0.00010077699999999981, 0.00010070800000000144, 0.00010123600000000108, 0.00010102799999999953, 0.00010113900000000009, 0.00010125000000000065, 0.00010119500000000184, 0.00010108400000000128, 0.000101416, 0.00010062500000000002, 0.00010132000000000196, 0.00010115199999999672, 0.00010142999999999958, 0.00010045800000000119, 0.00010054200000000207, 0.00010102799999999953, 0.00010097199999999779, 0.00010108400000000128, 0.00010077799999999928, 0.00010124999999999718, 0.00010106999999999824, 0.00010087500000000027]</msg>
<status status="PASS" starttime="20201110 08:35:35.585" endtime="20201110 08:35:35.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.580" endtime="20201110 08:35:35.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.595" endtime="20201110 08:35:35.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:35.599" endtime="20201110 08:35:35.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.597" endtime="20201110 08:35:35.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.593" endtime="20201110 08:35:35.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.221" endtime="20201110 08:35:35.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.220" endtime="20201110 08:35:35.620"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.628" endtime="20201110 08:35:35.647"></status>
</kw>
<msg timestamp="20201110 08:35:35.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:35.627" endtime="20201110 08:35:35.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:35.648" endtime="20201110 08:35:35.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.651" endtime="20201110 08:35:35.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.624" endtime="20201110 08:35:35.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.622" endtime="20201110 08:35:35.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.661" endtime="20201110 08:35:35.946"></status>
</kw>
<msg timestamp="20201110 08:35:35.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.659" endtime="20201110 08:35:35.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.950" endtime="20201110 08:35:35.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.958" endtime="20201110 08:35:35.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.657" endtime="20201110 08:35:35.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.655" endtime="20201110 08:35:35.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.965" level="INFO">${RESULT} = [{'time': 0.019773361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001023749999999983, 'source_diff': 0.0001023749999999983}, {'time': 0.019885375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:35.962" endtime="20201110 08:35:35.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:35.978" level="INFO">${ACCURACY} = {'source_diff': [0.0001023749999999983, 0.00010195799999999922, 0.00010224999999999818, 0.0001016809999999993, 0.0001018749999999978, 0.00010166699999999973, 0.00010170900000000191, 0.0001014579999999...</msg>
<status status="PASS" starttime="20201110 08:35:35.966" endtime="20201110 08:35:35.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.982" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:35:35.981" endtime="20201110 08:35:35.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.985" level="INFO">VALUE: [0.0001023749999999983, 0.00010195799999999922, 0.00010224999999999818, 0.0001016809999999993, 0.0001018749999999978, 0.00010166699999999973, 0.00010170900000000191, 0.00010145799999999872, 0.00010163900000000059, 0.00010159700000000188, 0.00010158299999999884, 0.00010233299999999959, 0.00010205599999999967, 0.00010144500000000209, 0.00010223699999999808, 0.00010176300000000124, 0.00010202700000000106, 0.00010144399999999915, 0.00010186099999999823, 0.0001022359999999986, 0.00010213900000000109, 0.00010243100000000005, 0.00010232000000000296, 0.00010179199999999985, 0.00010156999999999874, 0.00010190300000000041, 0.00010234799999999863, 0.00010149999999999743, 0.0001020000000000014, 0.00010190300000000041, 0.0001018610000000017, 0.00010147199999999829, 0.00010179199999999985, 0.0001018060000000029, 0.00010176400000000071, 0.00010183400000000203, 0.00010204099999999716, 0.00010202799999999707, 0.00010234700000000263, 0.00010215299999999719, 0.00010194399999999965, 0.00010230599999999992, 0.00010190300000000041, 0.00010202799999999707, 0.0001023199999999995, 0.00010193000000000008, 0.00010188899999999737, 0.0001015549999999997, 0.00010197199999999879, 0.00010220800000000294]</msg>
<status status="PASS" starttime="20201110 08:35:35.984" endtime="20201110 08:35:35.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.979" endtime="20201110 08:35:35.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.988" endtime="20201110 08:35:35.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:35.992" endtime="20201110 08:35:36.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.990" endtime="20201110 08:35:36.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.987" endtime="20201110 08:35:36.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.620" endtime="20201110 08:35:36.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.620" endtime="20201110 08:35:36.013"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.021" endtime="20201110 08:35:36.041"></status>
</kw>
<msg timestamp="20201110 08:35:36.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:36.020" endtime="20201110 08:35:36.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:36.042" endtime="20201110 08:35:36.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.045" endtime="20201110 08:35:36.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.017" endtime="20201110 08:35:36.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.015" endtime="20201110 08:35:36.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.055" endtime="20201110 08:35:36.340"></status>
</kw>
<msg timestamp="20201110 08:35:36.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:36.053" endtime="20201110 08:35:36.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:36.344" endtime="20201110 08:35:36.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.352" endtime="20201110 08:35:36.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.051" endtime="20201110 08:35:36.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.049" endtime="20201110 08:35:36.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:36.358" level="INFO">${RESULT} = [{'time': 0.019974125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010265299999999769, 'source_diff': 0.00010265299999999769}, {'time': 0.020087139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:36.355" endtime="20201110 08:35:36.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:36.372" level="INFO">${ACCURACY} = {'source_diff': [0.00010265299999999769, 0.0001025420000000006, 0.00010338899999999887, 0.00010316699999999776, 0.0001026810000000003, 0.00010330600000000092, 0.00010297200000000326, 0.000102958000000...</msg>
<status status="PASS" starttime="20201110 08:35:36.359" endtime="20201110 08:35:36.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.377" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:35:36.376" endtime="20201110 08:35:36.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.379" level="INFO">VALUE: [0.00010265299999999769, 0.0001025420000000006, 0.00010338899999999887, 0.00010316699999999776, 0.0001026810000000003, 0.00010330600000000092, 0.00010297200000000326, 0.00010295800000000022, 0.00010324999999999918, 0.00010336099999999973, 0.00010272199999999954, 0.00010319500000000037, 0.00010277700000000181, 0.00010343100000000105, 0.00010316599999999829, 0.00010247300000000223, 0.00010330500000000145, 0.0001025000000000019, 0.00010324999999999918, 0.00010302799999999807, 0.00010343000000000158, 0.00010302800000000154, 0.00010266699999999726, 0.00010265300000000116, 0.0001030420000000011, 0.0001028749999999988, 0.00010299999999999893, 0.00010294399999999718, 0.00010320800000000047, 0.00010261100000000245, 0.0001031940000000009, 0.0001028610000000027, 0.00010320800000000047, 0.00010277799999999782, 0.00010280600000000042, 0.00010259699999999941, 0.00010324999999999918, 0.00010293000000000108, 0.000103416000000002, 0.00010344399999999768, 0.00010249999999999843, 0.00010315299999999819, 0.0001032359999999996, 0.00010245899999999919, 0.00010343000000000158, 0.00010266599999999779, 0.00010322200000000004, 0.0001033749999999993, 0.00010280500000000095, 0.00010302800000000154]</msg>
<status status="PASS" starttime="20201110 08:35:36.378" endtime="20201110 08:35:36.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.373" endtime="20201110 08:35:36.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.383" endtime="20201110 08:35:36.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:36.387" endtime="20201110 08:35:36.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.385" endtime="20201110 08:35:36.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.381" endtime="20201110 08:35:36.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.014" endtime="20201110 08:35:36.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.013" endtime="20201110 08:35:36.407"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.416" endtime="20201110 08:35:36.436"></status>
</kw>
<msg timestamp="20201110 08:35:36.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:36.415" endtime="20201110 08:35:36.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:36.438" endtime="20201110 08:35:36.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.440" endtime="20201110 08:35:36.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.412" endtime="20201110 08:35:36.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.410" endtime="20201110 08:35:36.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.450" endtime="20201110 08:35:36.736"></status>
</kw>
<msg timestamp="20201110 08:35:36.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:36.449" endtime="20201110 08:35:36.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019820889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:36.740" endtime="20201110 08:35:36.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.748" endtime="20201110 08:35:36.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.446" endtime="20201110 08:35:36.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.444" endtime="20201110 08:35:36.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:36.755" level="INFO">${RESULT} = [{'time': 0.019820889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010415300000000266, 'source_diff': 0.00010415300000000266}, {'time': 0.019934903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:36.751" endtime="20201110 08:35:36.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:36.768" level="INFO">${ACCURACY} = {'source_diff': [0.00010415300000000266, 0.0001038749999999998, 0.000103820000000001, 0.00010430499999999898, 0.00010363799999999965, 0.00010429099999999941, 0.00010388900000000284, 0.0001040139999999...</msg>
<status status="PASS" starttime="20201110 08:35:36.756" endtime="20201110 08:35:36.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.773" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:35:36.772" endtime="20201110 08:35:36.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.776" level="INFO">VALUE: [0.00010415300000000266, 0.0001038749999999998, 0.000103820000000001, 0.00010430499999999898, 0.00010363799999999965, 0.00010429099999999941, 0.00010388900000000284, 0.0001040139999999995, 0.00010430599999999846, 0.0001043200000000015, 0.00010394500000000112, 0.00010392999999999861, 0.00010372300000000001, 0.000103513999999999, 0.00010367999999999836, 0.00010390299999999894, 0.00010441699999999901, 0.00010380499999999848, 0.00010384700000000066, 0.00010379199999999839, 0.00010407000000000124, 0.00010431999999999803, 0.00010344499999999715, 0.00010366600000000226, 0.00010418099999999833, 0.0001043750000000003, 0.00010415300000000266, 0.00010441700000000248, 0.00010420899999999747, 0.00010362499999999955, 0.00010390299999999894, 0.00010415299999999919, 0.00010344500000000062, 0.0001043750000000003, 0.00010372200000000054, 0.00010413899999999962, 0.00010397200000000079, 0.00010380600000000142, 0.00010440299999999944, 0.00010402799999999907, 0.00010398600000000036, 0.00010394400000000165, 0.00010372200000000054, 0.00010372199999999707, 0.00010367999999999836, 0.00010355499999999823, 0.0001042360000000006, 0.00010361099999999998, 0.00010422200000000104, 0.00010362499999999955]</msg>
<status status="PASS" starttime="20201110 08:35:36.774" endtime="20201110 08:35:36.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.769" endtime="20201110 08:35:36.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.779" endtime="20201110 08:35:36.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:36.783" endtime="20201110 08:35:36.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.781" endtime="20201110 08:35:36.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.778" endtime="20201110 08:35:36.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.408" endtime="20201110 08:35:36.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.408" endtime="20201110 08:35:36.804"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.812" endtime="20201110 08:35:36.832"></status>
</kw>
<msg timestamp="20201110 08:35:36.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:36.811" endtime="20201110 08:35:36.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:36.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:36.834" endtime="20201110 08:35:36.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.836" endtime="20201110 08:35:36.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.808" endtime="20201110 08:35:36.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.806" endtime="20201110 08:35:36.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:36.846" endtime="20201110 08:35:37.132"></status>
</kw>
<msg timestamp="20201110 08:35:37.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019900347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:36.844" endtime="20201110 08:35:37.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019900347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:37.136" endtime="20201110 08:35:37.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.144" endtime="20201110 08:35:37.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.842" endtime="20201110 08:35:37.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.840" endtime="20201110 08:35:37.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:37.151" level="INFO">${RESULT} = [{'time': 0.019900347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010494399999999918, 'source_diff': 0.00010494399999999918}, {'time': 0.020016403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:37.147" endtime="20201110 08:35:37.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:37.164" level="INFO">${ACCURACY} = {'source_diff': [0.00010494399999999918, 0.00010515300000000019, 0.00010491699999999951, 0.00010500000000000093, 0.00010523599999999814, 0.00010444500000000162, 0.0001053880000000014, 0.00010540300000...</msg>
<status status="PASS" starttime="20201110 08:35:37.151" endtime="20201110 08:35:37.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.168" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:35:37.167" endtime="20201110 08:35:37.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.171" level="INFO">VALUE: [0.00010494399999999918, 0.00010515300000000019, 0.00010491699999999951, 0.00010500000000000093, 0.00010523599999999814, 0.00010444500000000162, 0.0001053880000000014, 0.00010540300000000044, 0.0001052629999999978, 0.00010454099999999966, 0.00010494400000000265, 0.0001048750000000008, 0.00010486100000000123, 0.0001051949999999989, 0.0001047499999999972, 0.00010497300000000126, 0.00010493100000000255, 0.00010470899999999797, 0.00010459699999999794, 0.000105207999999999, 0.00010536099999999826, 0.00010461099999999751, 0.00010468099999999883, 0.00010501399999999703, 0.00010450000000000043, 0.00010459700000000141, 0.00010477799999999982, 0.00010472199999999807, 0.00010486100000000123, 0.00010512500000000105, 0.00010463900000000012, 0.0001046940000000024, 0.00010497199999999832, 0.00010475000000000068, 0.000104514, 0.00010509799999999792, 0.00010479199999999939, 0.00010456900000000227, 0.00010492999999999961, 0.0001050140000000005, 0.00010448600000000086, 0.00010501399999999703, 0.000104514, 0.00010476400000000025, 0.00010522299999999804, 0.00010480599999999896, 0.00010483300000000209, 0.00010504100000000016, 0.00010505600000000268, 0.00010466599999999979]</msg>
<status status="PASS" starttime="20201110 08:35:37.169" endtime="20201110 08:35:37.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.165" endtime="20201110 08:35:37.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.174" endtime="20201110 08:35:37.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:37.178" endtime="20201110 08:35:37.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.176" endtime="20201110 08:35:37.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.173" endtime="20201110 08:35:37.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.805" endtime="20201110 08:35:37.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:36.804" endtime="20201110 08:35:37.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.731" endtime="20201110 08:35:37.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:37.202" endtime="20201110 08:35:37.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.201" endtime="20201110 08:35:37.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.200" endtime="20201110 08:35:37.223"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:54.621" endtime="20201110 08:35:37.223" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:37.230" endtime="20201110 08:35:37.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.228" endtime="20201110 08:35:37.250"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.264" endtime="20201110 08:35:40.285"></status>
</kw>
<msg timestamp="20201110 08:35:40.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:37.262" endtime="20201110 08:35:40.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.291" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:40.288" endtime="20201110 08:35:40.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.297" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:40.293" endtime="20201110 08:35:40.298"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:37.259" endtime="20201110 08:35:40.299"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:37.257" endtime="20201110 08:35:40.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.256" endtime="20201110 08:35:40.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:40.308" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:40.307" endtime="20201110 08:35:40.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.302" endtime="20201110 08:35:40.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.255" endtime="20201110 08:35:40.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.253" endtime="20201110 08:35:40.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.312" endtime="20201110 08:35:40.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.252" endtime="20201110 08:35:40.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.250" endtime="20201110 08:35:40.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.227" endtime="20201110 08:35:40.317"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.338" endtime="20201110 08:35:40.355"></status>
</kw>
<msg timestamp="20201110 08:35:40.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:40.333" endtime="20201110 08:35:40.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:40.358" endtime="20201110 08:35:40.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.363" endtime="20201110 08:35:40.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.328" endtime="20201110 08:35:40.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.324" endtime="20201110 08:35:40.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.384" endtime="20201110 08:35:40.678"></status>
</kw>
<msg timestamp="20201110 08:35:40.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100047639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100053847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.379" endtime="20201110 08:35:40.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100047639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100053847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.682" endtime="20201110 08:35:40.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.690" endtime="20201110 08:35:40.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.373" endtime="20201110 08:35:40.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.370" endtime="20201110 08:35:40.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.697" level="INFO">${RESULT} = [{'time': 3.100053847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.207999999841007e-06, 'source_diff': 6.207999999841007e-06}, {'time': 3.100063569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:40.693" endtime="20201110 08:35:40.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:40.710" level="INFO">${ACCURACY} = {'source_diff': [6.207999999841007e-06, 5.332999999829724e-06, 5.637999999752452e-06, 5.944999999840661e-06, 5.360999999926008e-06, 5.611000000182997e-06, 5.332999999829724e-06, 5.972000000298294e-06,...</msg>
<status status="PASS" starttime="20201110 08:35:40.698" endtime="20201110 08:35:40.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.715" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:35:40.713" endtime="20201110 08:35:40.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.717" level="INFO">VALUE: [6.207999999841007e-06, 5.332999999829724e-06, 5.637999999752452e-06, 5.944999999840661e-06, 5.360999999926008e-06, 5.611000000182997e-06, 5.332999999829724e-06, 5.972000000298294e-06, 5.333999999912464e-06, 5.652000000022639e-06, 5.653000000105379e-06, 5.944999999840661e-06, 5.94400000020201e-06, 5.971999999854205e-06, 5.639000000279282e-06, 5.930000000375912e-06, 5.638000000196541e-06, 5.666999999931477e-06, 5.319000000003626e-06, 6.263999999589487e-06, 5.319000000003626e-06, 5.291999999990082e-06, 5.9580000000281075e-06, 5.333000000273813e-06, 5.333000000273813e-06, 5.639000000279282e-06, 5.94500000028475e-06, 6.264000000033576e-06, 5.9580000000281075e-06, 5.625000000009095e-06, 5.6389999998351925e-06, 5.9580000000281075e-06, 5.943999999757921e-06, 5.333000000273813e-06, 5.9580000000281075e-06, 5.333000000273813e-06, 5.959000000110848e-06, 5.65299999966129e-06, 5.94400000020201e-06, 5.638000000196541e-06, 5.639000000279282e-06, 5.929999999931823e-06, 5.347000000099911e-06, 5.652000000022639e-06, 6.264000000033576e-06, 5.320000000086367e-06, 5.972000000298294e-06, 5.625000000009095e-06, 5.347000000099911e-06, 5.333000000273813e-06]</msg>
<status status="PASS" starttime="20201110 08:35:40.716" endtime="20201110 08:35:40.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.711" endtime="20201110 08:35:40.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.720" endtime="20201110 08:35:40.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:40.723" endtime="20201110 08:35:40.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.722" endtime="20201110 08:35:40.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.718" endtime="20201110 08:35:40.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.321" endtime="20201110 08:35:40.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.319" endtime="20201110 08:35:40.744"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.758" endtime="20201110 08:35:40.773"></status>
</kw>
<msg timestamp="20201110 08:35:40.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:40.756" endtime="20201110 08:35:40.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:40.775" endtime="20201110 08:35:40.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.777" endtime="20201110 08:35:40.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.754" endtime="20201110 08:35:40.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.752" endtime="20201110 08:35:40.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.787" endtime="20201110 08:35:41.072"></status>
</kw>
<msg timestamp="20201110 08:35:41.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025419667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025426222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.785" endtime="20201110 08:35:41.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025419667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025426222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:41.076" endtime="20201110 08:35:41.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.084" endtime="20201110 08:35:41.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.782" endtime="20201110 08:35:41.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.781" endtime="20201110 08:35:41.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:41.091" level="INFO">${RESULT} = [{'time': 0.025426222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.025437208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:41.088" endtime="20201110 08:35:41.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:41.149" level="INFO">${ACCURACY} = {'source_diff': [6.554999999998368e-06, 6.874999999999937e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.888999999999507e-06, 6.485999999999992e-06, 6.569000000001407e-06, 6.541000000002267e-06,...</msg>
<status status="PASS" starttime="20201110 08:35:41.092" endtime="20201110 08:35:41.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.153" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:35:41.152" endtime="20201110 08:35:41.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.156" level="INFO">VALUE: [6.554999999998368e-06, 6.874999999999937e-06, 6.583000000000977e-06, 6.570000000000881e-06, 6.888999999999507e-06, 6.485999999999992e-06, 6.569000000001407e-06, 6.541000000002267e-06, 6.874999999999937e-06, 6.874999999999937e-06, 6.555999999997841e-06, 6.570000000000881e-06, 6.569000000001407e-06, 6.554999999998368e-06, 6.304999999998118e-06, 6.570000000000881e-06, 6.874999999999937e-06, 6.6119999999995904e-06, 7.193999999998563e-06, 7.195000000001506e-06, 6.584000000000451e-06, 6.888999999999507e-06, 6.278000000001921e-06, 6.570000000000881e-06, 6.278000000001921e-06, 6.874999999999937e-06, 6.5980000000000205e-06, 6.570000000000881e-06, 6.874999999999937e-06, 6.624999999999687e-06, 6.569000000001407e-06, 6.888999999999507e-06, 6.888999999999507e-06, 6.874999999999937e-06, 6.5829999999975075e-06, 6.874999999999937e-06, 6.888000000000033e-06, 6.569000000001407e-06, 6.2639999999988816e-06, 6.305000000001587e-06, 6.874999999999937e-06, 6.874999999999937e-06, 6.569000000001407e-06, 6.554999999998368e-06, 6.194000000001032e-06, 6.569000000001407e-06, 6.569000000001407e-06, 6.888999999999507e-06, 6.805999999998091e-06, 6.2639999999988816e-06]</msg>
<status status="PASS" starttime="20201110 08:35:41.155" endtime="20201110 08:35:41.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.150" endtime="20201110 08:35:41.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.159" endtime="20201110 08:35:41.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:41.163" endtime="20201110 08:35:41.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.161" endtime="20201110 08:35:41.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.157" endtime="20201110 08:35:41.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.750" endtime="20201110 08:35:41.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.749" endtime="20201110 08:35:41.184"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.193" endtime="20201110 08:35:41.208"></status>
</kw>
<msg timestamp="20201110 08:35:41.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:41.192" endtime="20201110 08:35:41.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:41.210" endtime="20201110 08:35:41.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.212" endtime="20201110 08:35:41.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.189" endtime="20201110 08:35:41.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.186" endtime="20201110 08:35:41.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.221" endtime="20201110 08:35:41.509"></status>
</kw>
<msg timestamp="20201110 08:35:41.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020357917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:41.220" endtime="20201110 08:35:41.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020357917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:41.513" endtime="20201110 08:35:41.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.521" endtime="20201110 08:35:41.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.217" endtime="20201110 08:35:41.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.215" endtime="20201110 08:35:41.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:41.528" level="INFO">${RESULT} = [{'time': 0.020366056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.020377, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:35:41.525" endtime="20201110 08:35:41.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:41.541" level="INFO">${ACCURACY} = {'source_diff': [8.139000000000757e-06, 7.457999999998383e-06, 7.500000000000562e-06, 7.804999999999618e-06, 8.125000000001187e-06, 7.180000000002462e-06, 8.137999999997814e-06, 8.139000000000757e-06,...</msg>
<status status="PASS" starttime="20201110 08:35:41.529" endtime="20201110 08:35:41.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.546" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:35:41.545" endtime="20201110 08:35:41.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.548" level="INFO">VALUE: [8.139000000000757e-06, 7.457999999998383e-06, 7.500000000000562e-06, 7.804999999999618e-06, 8.125000000001187e-06, 7.180000000002462e-06, 8.137999999997814e-06, 8.139000000000757e-06, 7.512999999997189e-06, 8.139000000000757e-06, 7.500000000000562e-06, 7.791000000000048e-06, 8.110999999998147e-06, 7.805999999999091e-06, 8.124999999997717e-06, 7.500000000000562e-06, 7.764000000000382e-06, 8.138999999997287e-06, 7.791000000000048e-06, 8.111000000001617e-06, 8.153000000000327e-06, 7.499999999997092e-06, 7.500000000000562e-06, 7.194000000002032e-06, 7.2079999999981326e-06, 7.791999999999522e-06, 7.180000000002462e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.500000000000562e-06, 7.500000000000562e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.110999999998147e-06, 7.819999999998661e-06, 8.125000000001187e-06, 7.804999999999618e-06, 7.804999999999618e-06, 8.110999999998147e-06, 7.805999999999091e-06, 7.500000000000562e-06, 7.193999999998563e-06, 7.209000000001076e-06, 7.777999999999952e-06, 7.181000000001936e-06, 7.832999999998758e-06, 7.499999999997092e-06, 7.514000000000132e-06]</msg>
<status status="PASS" starttime="20201110 08:35:41.547" endtime="20201110 08:35:41.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.542" endtime="20201110 08:35:41.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.552" endtime="20201110 08:35:41.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:41.555" endtime="20201110 08:35:41.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.554" endtime="20201110 08:35:41.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.550" endtime="20201110 08:35:41.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.185" endtime="20201110 08:35:41.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.184" endtime="20201110 08:35:41.576"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.586" endtime="20201110 08:35:41.601"></status>
</kw>
<msg timestamp="20201110 08:35:41.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:41.584" endtime="20201110 08:35:41.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:41.603" endtime="20201110 08:35:41.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.605" endtime="20201110 08:35:41.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.581" endtime="20201110 08:35:41.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.579" endtime="20201110 08:35:41.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.614" endtime="20201110 08:35:41.898"></status>
</kw>
<msg timestamp="20201110 08:35:41.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020799708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020808444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:41.613" endtime="20201110 08:35:41.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020799708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020808444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:41.903" endtime="20201110 08:35:41.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.911" endtime="20201110 08:35:41.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.610" endtime="20201110 08:35:41.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.608" endtime="20201110 08:35:41.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:41.918" level="INFO">${RESULT} = [{'time': 0.020808444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.020819431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:41.915" endtime="20201110 08:35:41.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:41.931" level="INFO">${ACCURACY} = {'source_diff': [8.735999999998773e-06, 8.111999999997621e-06, 8.735999999998773e-06, 9.056000000000342e-06, 8.736000000002242e-06, 8.443999999999813e-06, 8.987000000001966e-06, 9.028000000001202e-06,...</msg>
<status status="PASS" starttime="20201110 08:35:41.919" endtime="20201110 08:35:41.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.936" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:35:41.935" endtime="20201110 08:35:41.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.938" level="INFO">VALUE: [8.735999999998773e-06, 8.111999999997621e-06, 8.735999999998773e-06, 9.056000000000342e-06, 8.736000000002242e-06, 8.443999999999813e-06, 8.987000000001966e-06, 9.028000000001202e-06, 8.735999999998773e-06, 8.723000000002146e-06, 8.096999999998578e-06, 8.443999999999813e-06, 9.041000000001298e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.708999999999106e-06, 8.430999999999716e-06, 9.042000000000772e-06, 9.041000000001298e-06, 8.749999999998342e-06, 8.443999999999813e-06, 9.040999999997829e-06, 8.430000000000243e-06, 9.027000000001728e-06, 8.736000000002242e-06, 8.444999999999286e-06, 8.430000000000243e-06, 8.430999999999716e-06, 9.346999999999828e-06, 8.749999999998342e-06, 8.445000000002756e-06, 8.430000000000243e-06, 8.430000000000243e-06, 8.707999999999633e-06, 8.764000000001382e-06, 8.430000000000243e-06, 8.443999999999813e-06, 8.763999999997912e-06, 8.791999999997052e-06, 8.735999999998773e-06, 9.040999999997829e-06, 8.417000000000147e-06, 8.429999999996773e-06, 8.111000000001617e-06, 9.110999999999148e-06, 8.749999999998342e-06, 9.042000000000772e-06, 9.069999999999911e-06, 8.806000000000092e-06, 8.708999999999106e-06]</msg>
<status status="PASS" starttime="20201110 08:35:41.937" endtime="20201110 08:35:41.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.932" endtime="20201110 08:35:41.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.942" endtime="20201110 08:35:41.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:41.945" endtime="20201110 08:35:41.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.944" endtime="20201110 08:35:41.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.940" endtime="20201110 08:35:41.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.577" endtime="20201110 08:35:41.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.576" endtime="20201110 08:35:41.966"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.975" endtime="20201110 08:35:41.990"></status>
</kw>
<msg timestamp="20201110 08:35:41.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:41.973" endtime="20201110 08:35:41.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:41.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:41.991" endtime="20201110 08:35:41.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.994" endtime="20201110 08:35:41.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.971" endtime="20201110 08:35:41.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.968" endtime="20201110 08:35:41.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.003" endtime="20201110 08:35:42.290"></status>
</kw>
<msg timestamp="20201110 08:35:42.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020469403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.001" endtime="20201110 08:35:42.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020469403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.295" endtime="20201110 08:35:42.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.303" endtime="20201110 08:35:42.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.999" endtime="20201110 08:35:42.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.997" endtime="20201110 08:35:42.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:42.310" level="INFO">${RESULT} = [{'time': 0.020469403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.020482611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:42.306" endtime="20201110 08:35:42.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:42.323" level="INFO">${ACCURACY} = {'source_diff': [9.346999999999828e-06, 1.0292000000002022e-05, 1.0277999999998982e-05, 9.999999999999593e-06, 9.972999999999926e-06, 9.652999999998357e-06, 9.999999999999593e-06, 9.346999999999828e-0...</msg>
<status status="PASS" starttime="20201110 08:35:42.311" endtime="20201110 08:35:42.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.327" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:35:42.326" endtime="20201110 08:35:42.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.330" level="INFO">VALUE: [9.346999999999828e-06, 1.0292000000002022e-05, 1.0277999999998982e-05, 9.999999999999593e-06, 9.972999999999926e-06, 9.652999999998357e-06, 9.999999999999593e-06, 9.346999999999828e-06, 9.333000000000258e-06, 9.346999999999828e-06, 9.667000000001397e-06, 1.0249999999999843e-05, 9.999999999999593e-06, 9.958000000000883e-06, 9.681000000000967e-06, 9.986000000000023e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.361000000002867e-06, 1.0264000000002882e-05, 9.389000000002007e-06, 9.972000000000453e-06, 9.36200000000234e-06, 9.931000000001217e-06, 1.0222000000000703e-05, 1.0292000000002022e-05, 9.306000000000592e-06, 9.652999999998357e-06, 9.374999999998967e-06, 9.986000000000023e-06, 9.944000000001313e-06, 9.360999999999398e-06, 9.36200000000234e-06, 9.667000000001397e-06, 1.0249999999999843e-05, 9.667000000001397e-06, 1.0292000000002022e-05, 9.361000000002867e-06, 9.666999999997927e-06, 9.361999999998871e-06, 9.958000000000883e-06, 9.651999999998884e-06, 9.318999999997218e-06, 9.972999999999926e-06, 9.305000000001118e-06, 1.0291999999998552e-05, 9.986999999999496e-06, 9.972000000000453e-06, 1.0346999999997358e-05, 1.0263999999999412e-05]</msg>
<status status="PASS" starttime="20201110 08:35:42.329" endtime="20201110 08:35:42.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.324" endtime="20201110 08:35:42.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.333" endtime="20201110 08:35:42.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:42.337" endtime="20201110 08:35:42.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.335" endtime="20201110 08:35:42.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.332" endtime="20201110 08:35:42.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.967" endtime="20201110 08:35:42.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.966" endtime="20201110 08:35:42.358"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.366" endtime="20201110 08:35:42.380"></status>
</kw>
<msg timestamp="20201110 08:35:42.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:42.365" endtime="20201110 08:35:42.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:42.382" endtime="20201110 08:35:42.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.385" endtime="20201110 08:35:42.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.362" endtime="20201110 08:35:42.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.360" endtime="20201110 08:35:42.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.393" endtime="20201110 08:35:42.681"></status>
</kw>
<msg timestamp="20201110 08:35:42.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020176431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.392" endtime="20201110 08:35:42.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020176431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.685" endtime="20201110 08:35:42.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.694" endtime="20201110 08:35:42.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.389" endtime="20201110 08:35:42.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.388" endtime="20201110 08:35:42.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:42.700" level="INFO">${RESULT} = [{'time': 0.020176431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0584000000000982e-05, 'source_diff': 1.0584000000000982e-05}, {'time': 0.020190319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:42.697" endtime="20201110 08:35:42.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:42.714" level="INFO">${ACCURACY} = {'source_diff': [1.0584000000000982e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.0902999999999607e-05, 1.0902999999999607e-05, 1.0597000000001078e-05, 1.0902000000000134e-05, 1.0638999999999...</msg>
<status status="PASS" starttime="20201110 08:35:42.701" endtime="20201110 08:35:42.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.719" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:35:42.718" endtime="20201110 08:35:42.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.721" level="INFO">VALUE: [1.0584000000000982e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.0902999999999607e-05, 1.0902999999999607e-05, 1.0597000000001078e-05, 1.0902000000000134e-05, 1.0638999999999788e-05, 1.0902999999999607e-05, 1.0597000000001078e-05, 1.1181000000002467e-05, 1.0888000000000564e-05, 1.0902000000000134e-05, 1.1193999999999094e-05, 1.0598000000000551e-05, 1.0902999999999607e-05, 1.0278000000002452e-05, 1.0569999999997942e-05, 1.0598000000000551e-05, 1.0902000000000134e-05, 1.1180000000002993e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 1.0902000000000134e-05, 1.0291000000002548e-05, 1.1221999999998233e-05, 1.0582999999998038e-05, 1.0611000000000648e-05, 1.0249999999999843e-05, 1.0542000000002272e-05, 1.0290999999999079e-05, 1.0582999999998038e-05, 1.0638000000000314e-05, 1.0902000000000134e-05, 1.0861000000000898e-05, 1.0903000000003077e-05, 1.0611000000000648e-05, 1.0249999999999843e-05, 1.0902999999999607e-05, 1.0611000000000648e-05, 1.0540999999999329e-05, 1.0513999999999663e-05, 1.1152999999999857e-05, 1.0291999999998552e-05, 1.0597000000001078e-05, 1.0652999999999357e-05, 1.1221999999998233e-05, 1.0597000000001078e-05, 1.0291999999998552e-05, 1.0583000000001508e-05]</msg>
<status status="PASS" starttime="20201110 08:35:42.720" endtime="20201110 08:35:42.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.715" endtime="20201110 08:35:42.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.725" endtime="20201110 08:35:42.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:42.728" endtime="20201110 08:35:42.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.727" endtime="20201110 08:35:42.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.723" endtime="20201110 08:35:42.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.359" endtime="20201110 08:35:42.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.358" endtime="20201110 08:35:42.749"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.758" endtime="20201110 08:35:42.773"></status>
</kw>
<msg timestamp="20201110 08:35:42.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:42.756" endtime="20201110 08:35:42.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:42.774" endtime="20201110 08:35:42.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.777" endtime="20201110 08:35:42.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.754" endtime="20201110 08:35:42.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.752" endtime="20201110 08:35:42.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.786" endtime="20201110 08:35:43.072"></status>
</kw>
<msg timestamp="20201110 08:35:43.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019705403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:42.785" endtime="20201110 08:35:43.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019705403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.076" endtime="20201110 08:35:43.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.085" endtime="20201110 08:35:43.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.782" endtime="20201110 08:35:43.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.781" endtime="20201110 08:35:43.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.091" level="INFO">${RESULT} = [{'time': 0.019705403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.019721458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:43.088" endtime="20201110 08:35:43.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:43.105" level="INFO">${ACCURACY} = {'source_diff': [1.1471999999998483e-05, 1.1472000000001953e-05, 1.1527999999996763e-05, 1.2139000000001288e-05, 1.1582999999999039e-05, 1.1832999999999289e-05, 1.2138999999997818e-05, 1.1834000000002...</msg>
<status status="PASS" starttime="20201110 08:35:43.092" endtime="20201110 08:35:43.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.109" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:35:43.108" endtime="20201110 08:35:43.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.111" level="INFO">VALUE: [1.1471999999998483e-05, 1.1472000000001953e-05, 1.1527999999996763e-05, 1.2139000000001288e-05, 1.1582999999999039e-05, 1.1832999999999289e-05, 1.2138999999997818e-05, 1.1834000000002232e-05, 1.1832999999999289e-05, 1.1860999999998428e-05, 1.1847000000002328e-05, 1.2110999999998678e-05, 1.1528000000000233e-05, 1.1180999999998997e-05, 1.1847000000002328e-05, 1.1527000000000759e-05, 1.1832999999999289e-05, 1.1860999999998428e-05, 1.1527000000000759e-05, 1.1221999999998233e-05, 1.2139000000001288e-05, 1.1193999999999094e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.2153000000000858e-05, 1.2124999999998248e-05, 1.2167000000000427e-05, 1.1193999999999094e-05, 1.2097999999998582e-05, 1.1832999999999289e-05, 1.1806000000003092e-05, 1.1568999999999469e-05, 1.2166000000000954e-05, 1.2167000000000427e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.2084000000002482e-05, 1.1778000000000483e-05, 1.1610999999998178e-05, 1.1221999999998233e-05, 1.1846999999998858e-05, 1.2125000000001718e-05, 1.1792000000000052e-05, 1.1541000000000329e-05, 1.1208999999998137e-05, 1.2167000000000427e-05, 1.1209000000001607e-05, 1.2137999999998345e-05, 1.2124999999998248e-05]</msg>
<status status="PASS" starttime="20201110 08:35:43.110" endtime="20201110 08:35:43.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.106" endtime="20201110 08:35:43.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.115" endtime="20201110 08:35:43.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:43.118" endtime="20201110 08:35:43.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.117" endtime="20201110 08:35:43.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.113" endtime="20201110 08:35:43.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.750" endtime="20201110 08:35:43.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.750" endtime="20201110 08:35:43.139"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.148" endtime="20201110 08:35:43.163"></status>
</kw>
<msg timestamp="20201110 08:35:43.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:43.147" endtime="20201110 08:35:43.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:43.164" endtime="20201110 08:35:43.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.167" endtime="20201110 08:35:43.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.144" endtime="20201110 08:35:43.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.142" endtime="20201110 08:35:43.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.177" endtime="20201110 08:35:43.462"></status>
</kw>
<msg timestamp="20201110 08:35:43.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.175" endtime="20201110 08:35:43.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.466" endtime="20201110 08:35:43.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.475" endtime="20201110 08:35:43.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.172" endtime="20201110 08:35:43.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.171" endtime="20201110 08:35:43.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.481" level="INFO">${RESULT} = [{'time': 0.019734486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.30689999999975e-05, 'source_diff': 1.30689999999975e-05}, {'time': 0.019752458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:43.478" endtime="20201110 08:35:43.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:43.495" level="INFO">${ACCURACY} = {'source_diff': [1.30689999999975e-05, 1.3083000000000539e-05, 1.3069000000000969e-05, 1.3083000000000539e-05, 1.2472000000002953e-05, 1.2139000000001288e-05, 1.2444000000000344e-05, 1.306999999999697...</msg>
<status status="PASS" starttime="20201110 08:35:43.482" endtime="20201110 08:35:43.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.499" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:35:43.498" endtime="20201110 08:35:43.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.501" level="INFO">VALUE: [1.30689999999975e-05, 1.3083000000000539e-05, 1.3069000000000969e-05, 1.3083000000000539e-05, 1.2472000000002953e-05, 1.2139000000001288e-05, 1.2444000000000344e-05, 1.3069999999996973e-05, 1.3069000000000969e-05, 1.3083000000000539e-05, 1.30689999999975e-05, 1.3097999999999582e-05, 1.2417000000000677e-05, 1.2486999999998527e-05, 1.3000000000002593e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.3125000000002718e-05, 1.2457999999999914e-05, 1.2750000000002343e-05, 1.3084000000000012e-05, 1.2153000000000858e-05, 1.304099999999836e-05, 1.2763999999998443e-05, 1.2472999999998957e-05, 1.276299999999897e-05, 1.3069000000000969e-05, 1.3070000000000442e-05, 1.2444999999999817e-05, 1.2471999999999483e-05, 1.3124999999999248e-05, 1.2444000000000344e-05, 1.2778000000001483e-05, 1.2736000000002773e-05, 1.2458999999999387e-05, 1.277699999999854e-05, 1.2764000000001913e-05, 1.2457999999999914e-05, 1.2444999999999817e-05, 1.2457999999999914e-05, 1.2457999999999914e-05, 1.2749999999998873e-05, 1.2458999999999387e-05, 1.3055000000001399e-05, 1.2471999999999483e-05, 1.2499999999998623e-05, 1.3070000000000442e-05, 1.2749999999998873e-05, 1.3098000000003052e-05, 1.2458999999999387e-05]</msg>
<status status="PASS" starttime="20201110 08:35:43.500" endtime="20201110 08:35:43.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.495" endtime="20201110 08:35:43.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.505" endtime="20201110 08:35:43.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:43.509" endtime="20201110 08:35:43.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.507" endtime="20201110 08:35:43.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.503" endtime="20201110 08:35:43.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.140" endtime="20201110 08:35:43.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.140" endtime="20201110 08:35:43.529"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.538" endtime="20201110 08:35:43.554"></status>
</kw>
<msg timestamp="20201110 08:35:43.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:43.536" endtime="20201110 08:35:43.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:43.556" endtime="20201110 08:35:43.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.558" endtime="20201110 08:35:43.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.534" endtime="20201110 08:35:43.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.532" endtime="20201110 08:35:43.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.568" endtime="20201110 08:35:43.855"></status>
</kw>
<msg timestamp="20201110 08:35:43.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019597319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.567" endtime="20201110 08:35:43.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019597319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.859" endtime="20201110 08:35:43.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.867" endtime="20201110 08:35:43.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.564" endtime="20201110 08:35:43.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.562" endtime="20201110 08:35:43.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.874" level="INFO">${RESULT} = [{'time': 0.019597319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3721999999997264e-05, 'source_diff': 1.3721999999997264e-05}, {'time': 0.019613167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:43.871" endtime="20201110 08:35:43.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:43.888" level="INFO">${ACCURACY} = {'source_diff': [1.3721999999997264e-05, 1.3388999999999068e-05, 1.3694999999997598e-05, 1.3375000000002968e-05, 1.3693999999998124e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.3389000000002...</msg>
<status status="PASS" starttime="20201110 08:35:43.875" endtime="20201110 08:35:43.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.892" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:35:43.891" endtime="20201110 08:35:43.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.895" level="INFO">VALUE: [1.3721999999997264e-05, 1.3388999999999068e-05, 1.3694999999997598e-05, 1.3375000000002968e-05, 1.3693999999998124e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.3389000000002538e-05, 1.3459000000000387e-05, 1.3986000000000554e-05, 1.3667000000001928e-05, 1.3347000000000359e-05, 1.3916999999998708e-05, 1.3388999999999068e-05, 1.3374999999999498e-05, 1.3986000000000554e-05, 1.3388999999999068e-05, 1.3388999999999068e-05, 1.4000000000000123e-05, 1.3402999999998638e-05, 1.3388999999999068e-05, 1.3361999999999402e-05, 1.3388999999999068e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3374999999999498e-05, 1.3667000000001928e-05, 1.3707999999997694e-05, 1.3958999999997418e-05, 1.3388999999999068e-05, 1.3681000000001498e-05, 1.3360999999999928e-05, 1.3987000000000027e-05, 1.3388999999999068e-05, 1.3389000000002538e-05, 1.3387999999999595e-05, 1.3360999999999928e-05, 1.3680999999998028e-05, 1.4000000000000123e-05, 1.3387999999999595e-05, 1.3388999999999068e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3708000000001164e-05, 1.3666999999998458e-05, 1.3679999999998554e-05, 1.3374999999999498e-05, 1.405499999999893e-05, 1.3708000000001164e-05, 1.3695000000001067e-05]</msg>
<status status="PASS" starttime="20201110 08:35:43.893" endtime="20201110 08:35:43.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.888" endtime="20201110 08:35:43.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.898" endtime="20201110 08:35:43.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:43.901" endtime="20201110 08:35:43.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.900" endtime="20201110 08:35:43.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.897" endtime="20201110 08:35:43.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.530" endtime="20201110 08:35:43.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.530" endtime="20201110 08:35:43.922"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.932" endtime="20201110 08:35:43.947"></status>
</kw>
<msg timestamp="20201110 08:35:43.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:43.930" endtime="20201110 08:35:43.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:43.949" endtime="20201110 08:35:43.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.951" endtime="20201110 08:35:43.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.928" endtime="20201110 08:35:43.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.925" endtime="20201110 08:35:43.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.961" endtime="20201110 08:35:44.246"></status>
</kw>
<msg timestamp="20201110 08:35:44.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020968361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020983625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.959" endtime="20201110 08:35:44.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020968361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020983625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:44.251" endtime="20201110 08:35:44.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.260" endtime="20201110 08:35:44.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.957" endtime="20201110 08:35:44.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.955" endtime="20201110 08:35:44.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:44.267" level="INFO">${RESULT} = [{'time': 0.020983625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5263999999997474e-05, 'source_diff': 1.5263999999997474e-05}, {'time': 0.021002444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:44.263" endtime="20201110 08:35:44.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:44.281" level="INFO">${ACCURACY} = {'source_diff': [1.5263999999997474e-05, 1.458299999999857e-05, 1.4944000000002844e-05, 1.4903000000000138e-05, 1.4639000000000318e-05, 1.4916000000000235e-05, 1.4263999999999943e-05, 1.46110000000011...</msg>
<status status="PASS" starttime="20201110 08:35:44.268" endtime="20201110 08:35:44.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.286" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:35:44.285" endtime="20201110 08:35:44.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.288" level="INFO">VALUE: [1.5263999999997474e-05, 1.458299999999857e-05, 1.4944000000002844e-05, 1.4903000000000138e-05, 1.4639000000000318e-05, 1.4916000000000235e-05, 1.4263999999999943e-05, 1.4611000000001179e-05, 1.4583000000002039e-05, 1.4333999999997793e-05, 1.431899999999875e-05, 1.4929999999999805e-05, 1.4611000000001179e-05, 1.4612000000000652e-05, 1.4944999999998848e-05, 1.4916000000000235e-05, 1.4625000000000749e-05, 1.4930999999999278e-05, 1.4597000000001609e-05, 1.429099999999961e-05, 1.4624999999997279e-05, 1.4930999999999278e-05, 1.431899999999875e-05, 1.4639000000000318e-05, 1.4305999999998653e-05, 1.4931000000002748e-05, 1.5235999999998334e-05, 1.5249999999997904e-05, 1.4639000000000318e-05, 1.4319999999998223e-05, 1.4888999999997099e-05, 1.4652999999999888e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.5250000000001374e-05, 1.4624999999997279e-05, 1.4889000000000568e-05, 1.4625000000000749e-05, 1.5292000000000083e-05, 1.434699999999789e-05, 1.461099999999771e-05, 1.4652999999999888e-05, 1.4930999999999278e-05, 1.461099999999771e-05, 1.4916999999999708e-05, 1.5250000000001374e-05, 1.461099999999771e-05, 1.4665999999999985e-05, 1.4958000000002414e-05]</msg>
<status status="PASS" starttime="20201110 08:35:44.287" endtime="20201110 08:35:44.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.282" endtime="20201110 08:35:44.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.292" endtime="20201110 08:35:44.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:44.295" endtime="20201110 08:35:44.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.294" endtime="20201110 08:35:44.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.290" endtime="20201110 08:35:44.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.923" endtime="20201110 08:35:44.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.923" endtime="20201110 08:35:44.316"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.325" endtime="20201110 08:35:44.338"></status>
</kw>
<msg timestamp="20201110 08:35:44.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:44.323" endtime="20201110 08:35:44.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:44.340" endtime="20201110 08:35:44.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.342" endtime="20201110 08:35:44.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.320" endtime="20201110 08:35:44.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.318" endtime="20201110 08:35:44.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.352" endtime="20201110 08:35:44.638"></status>
</kw>
<msg timestamp="20201110 08:35:44.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:44.351" endtime="20201110 08:35:44.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:44.642" endtime="20201110 08:35:44.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.651" endtime="20201110 08:35:44.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.348" endtime="20201110 08:35:44.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.346" endtime="20201110 08:35:44.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:44.658" level="INFO">${RESULT} = [{'time': 0.020042778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5542000000000333e-05, 'source_diff': 1.5542000000000333e-05}, {'time': 0.020060958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:44.655" endtime="20201110 08:35:44.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:44.672" level="INFO">${ACCURACY} = {'source_diff': [1.5542000000000333e-05, 1.555500000000043e-05, 1.586099999999896e-05, 1.584699999999939e-05, 1.5249999999997904e-05, 1.5555999999999903e-05, 1.6166000000001485e-05, 1.558299999999957e...</msg>
<status status="PASS" starttime="20201110 08:35:44.659" endtime="20201110 08:35:44.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.676" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:35:44.675" endtime="20201110 08:35:44.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.679" level="INFO">VALUE: [1.5542000000000333e-05, 1.555500000000043e-05, 1.586099999999896e-05, 1.584699999999939e-05, 1.5249999999997904e-05, 1.5555999999999903e-05, 1.6166000000001485e-05, 1.558299999999957e-05, 1.615300000000139e-05, 1.5542000000000333e-05, 1.5569e-05, 1.5235999999998334e-05, 1.586099999999896e-05, 1.616700000000096e-05, 1.5555999999999903e-05, 1.5569e-05, 1.5236000000001804e-05, 1.586099999999896e-05, 1.5513999999997724e-05, 1.554100000000086e-05, 1.6181000000000528e-05, 1.559699999999914e-05, 1.5555999999999903e-05, 1.6180000000001055e-05, 1.551300000000172e-05, 1.554099999999739e-05, 1.561099999999871e-05, 1.5542000000000333e-05, 1.616700000000096e-05, 1.584699999999939e-05, 1.5250000000001374e-05, 1.5555999999999903e-05, 1.590299999999767e-05, 1.6221999999999764e-05, 1.586099999999896e-05, 1.5221999999998764e-05, 1.615299999999792e-05, 1.5930000000000805e-05, 1.616700000000096e-05, 1.5555999999999903e-05, 1.615299999999792e-05, 1.584699999999939e-05, 1.5513999999997724e-05, 1.584699999999939e-05, 1.5513999999997724e-05, 1.5875000000002e-05, 1.555500000000043e-05, 1.555499999999696e-05, 1.615300000000139e-05, 1.5235999999998334e-05]</msg>
<status status="PASS" starttime="20201110 08:35:44.677" endtime="20201110 08:35:44.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.673" endtime="20201110 08:35:44.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.682" endtime="20201110 08:35:44.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:44.686" endtime="20201110 08:35:44.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.684" endtime="20201110 08:35:44.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.681" endtime="20201110 08:35:44.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.317" endtime="20201110 08:35:44.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.316" endtime="20201110 08:35:44.707"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.715" endtime="20201110 08:35:44.730"></status>
</kw>
<msg timestamp="20201110 08:35:44.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:44.714" endtime="20201110 08:35:44.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:44.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:44.732" endtime="20201110 08:35:44.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.734" endtime="20201110 08:35:44.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.711" endtime="20201110 08:35:44.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.709" endtime="20201110 08:35:44.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:44.744" endtime="20201110 08:35:45.030"></status>
</kw>
<msg timestamp="20201110 08:35:45.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:44.742" endtime="20201110 08:35:45.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.034" endtime="20201110 08:35:45.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.042" endtime="20201110 08:35:45.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.740" endtime="20201110 08:35:45.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.738" endtime="20201110 08:35:45.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.049" level="INFO">${RESULT} = [{'time': 0.019728917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6763999999998974e-05, 'source_diff': 1.6763999999998974e-05}, {'time': 0.019749972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:45.046" endtime="20201110 08:35:45.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:45.063" level="INFO">${ACCURACY} = {'source_diff': [1.6763999999998974e-05, 1.679100000000211e-05, 1.6472000000000014e-05, 1.6430000000001305e-05, 1.711100000000021e-05, 1.6485999999999584e-05, 1.6445000000000348e-05, 1.648599999999958...</msg>
<status status="PASS" starttime="20201110 08:35:45.050" endtime="20201110 08:35:45.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.067" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:35:45.066" endtime="20201110 08:35:45.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.070" level="INFO">VALUE: [1.6763999999998974e-05, 1.679100000000211e-05, 1.6472000000000014e-05, 1.6430000000001305e-05, 1.711100000000021e-05, 1.6485999999999584e-05, 1.6445000000000348e-05, 1.6485999999999584e-05, 1.686099999999996e-05, 1.6763999999998974e-05, 1.6764000000002444e-05, 1.6458000000000444e-05, 1.6472000000000014e-05, 1.7111999999999683e-05, 1.709699999999717e-05, 1.70690000000015e-05, 1.616700000000096e-05, 1.6487000000002527e-05, 1.679099999999864e-05, 1.6485999999999584e-05, 1.709700000000064e-05, 1.679099999999864e-05, 1.6791999999998114e-05, 1.6165999999998015e-05, 1.6181000000000528e-05, 1.709700000000064e-05, 1.6777999999998544e-05, 1.6485999999999584e-05, 1.6750000000002874e-05, 1.640299999999817e-05, 1.616699999999749e-05, 1.709700000000064e-05, 1.708300000000107e-05, 1.6181000000000528e-05, 1.6485999999999584e-05, 1.6458000000000444e-05, 1.6792000000001583e-05, 1.6235999999999334e-05, 1.6486999999999058e-05, 1.6097999999999113e-05, 1.679099999999864e-05, 1.6806000000001153e-05, 1.680500000000168e-05, 1.6458000000000444e-05, 1.709700000000064e-05, 1.6499999999999154e-05, 1.6791999999998114e-05, 1.709700000000064e-05, 1.6485999999999584e-05, 1.6485999999999584e-05]</msg>
<status status="PASS" starttime="20201110 08:35:45.068" endtime="20201110 08:35:45.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.063" endtime="20201110 08:35:45.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.073" endtime="20201110 08:35:45.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:45.077" endtime="20201110 08:35:45.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.075" endtime="20201110 08:35:45.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.071" endtime="20201110 08:35:45.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.708" endtime="20201110 08:35:45.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:44.707" endtime="20201110 08:35:45.097"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.106" endtime="20201110 08:35:45.121"></status>
</kw>
<msg timestamp="20201110 08:35:45.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:45.104" endtime="20201110 08:35:45.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:45.122" endtime="20201110 08:35:45.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.125" endtime="20201110 08:35:45.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.102" endtime="20201110 08:35:45.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.100" endtime="20201110 08:35:45.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.134" endtime="20201110 08:35:45.420"></status>
</kw>
<msg timestamp="20201110 08:35:45.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.133" endtime="20201110 08:35:45.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.424" endtime="20201110 08:35:45.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.433" endtime="20201110 08:35:45.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.130" endtime="20201110 08:35:45.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.129" endtime="20201110 08:35:45.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.439" level="INFO">${RESULT} = [{'time': 0.019752431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.741700000000221e-05, 'source_diff': 1.741700000000221e-05}, {'time': 0.019776333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:45.436" endtime="20201110 08:35:45.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:45.453" level="INFO">${ACCURACY} = {'source_diff': [1.741700000000221e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.701299999999975e-05, 1.7430000000002305e-05, 1.7665999999999515e-05, 1.7721999999997795e-05, 1.772199999999779...</msg>
<status status="PASS" starttime="20201110 08:35:45.440" endtime="20201110 08:35:45.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.457" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:35:45.456" endtime="20201110 08:35:45.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.460" level="INFO">VALUE: [1.741700000000221e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.701299999999975e-05, 1.7430000000002305e-05, 1.7665999999999515e-05, 1.7721999999997795e-05, 1.7721999999997795e-05, 1.740299999999917e-05, 1.7722000000001265e-05, 1.7972000000001515e-05, 1.7722000000001265e-05, 1.740300000000264e-05, 1.80690000000025e-05, 1.8027999999999794e-05, 1.740299999999917e-05, 1.7722000000001265e-05, 1.709700000000064e-05, 1.7708000000001695e-05, 1.8041999999999364e-05, 1.741699999999874e-05, 1.741699999999874e-05, 1.741699999999874e-05, 1.8334000000001793e-05, 1.7763999999999974e-05, 1.8027999999999794e-05, 1.743100000000178e-05, 1.8056000000002403e-05, 1.7709000000001168e-05, 1.741699999999874e-05, 1.8014000000000224e-05, 1.709700000000064e-05, 1.7429999999998835e-05, 1.740300000000264e-05, 1.740299999999917e-05, 1.804099999999989e-05, 1.740300000000264e-05, 1.7708000000001695e-05, 1.7999999999997185e-05, 1.741699999999874e-05, 1.7750000000000404e-05, 1.740299999999917e-05, 1.73889999999996e-05, 1.8319999999998754e-05, 1.7415999999999265e-05, 1.740299999999917e-05, 1.7999999999997185e-05, 1.7416000000002735e-05, 1.7665999999999515e-05, 1.8027999999999794e-05]</msg>
<status status="PASS" starttime="20201110 08:35:45.458" endtime="20201110 08:35:45.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.454" endtime="20201110 08:35:45.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.463" endtime="20201110 08:35:45.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:45.467" endtime="20201110 08:35:45.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.465" endtime="20201110 08:35:45.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.462" endtime="20201110 08:35:45.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.098" endtime="20201110 08:35:45.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.098" endtime="20201110 08:35:45.488"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.496" endtime="20201110 08:35:45.511"></status>
</kw>
<msg timestamp="20201110 08:35:45.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:45.495" endtime="20201110 08:35:45.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:45.512" endtime="20201110 08:35:45.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.515" endtime="20201110 08:35:45.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.492" endtime="20201110 08:35:45.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.490" endtime="20201110 08:35:45.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.525" endtime="20201110 08:35:45.816"></status>
</kw>
<msg timestamp="20201110 08:35:45.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019784083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.523" endtime="20201110 08:35:45.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019784083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.820" endtime="20201110 08:35:45.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.829" endtime="20201110 08:35:45.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.521" endtime="20201110 08:35:45.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.519" endtime="20201110 08:35:45.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.835" level="INFO">${RESULT} = [{'time': 0.019784083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834700000000189e-05, 'source_diff': 1.834700000000189e-05}, {'time': 0.019807208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:45.832" endtime="20201110 08:35:45.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:45.850" level="INFO">${ACCURACY} = {'source_diff': [1.834700000000189e-05, 1.8957999999999475e-05, 1.8319999999998754e-05, 1.831899999999928e-05, 1.8333999999998324e-05, 1.833299999999885e-05, 1.8957999999999475e-05, 1.8680000000000085...</msg>
<status status="PASS" starttime="20201110 08:35:45.836" endtime="20201110 08:35:45.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.854" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:35:45.853" endtime="20201110 08:35:45.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.857" level="INFO">VALUE: [1.834700000000189e-05, 1.8957999999999475e-05, 1.8319999999998754e-05, 1.831899999999928e-05, 1.8333999999998324e-05, 1.833299999999885e-05, 1.8957999999999475e-05, 1.8680000000000085e-05, 1.8333999999998324e-05, 1.8973000000001988e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.9249999999998435e-05, 1.8347999999997894e-05, 1.862500000000128e-05, 1.865300000000042e-05, 1.8652000000000946e-05, 1.831899999999928e-05, 1.8638000000001376e-05, 1.862499999999781e-05, 1.865300000000042e-05, 1.83890000000006e-05, 1.831899999999928e-05, 1.8319999999998754e-05, 1.834699999999842e-05, 1.863899999999738e-05, 1.8957999999999475e-05, 1.895899999999895e-05, 1.840300000000017e-05, 1.9249999999998435e-05, 1.8319999999998754e-05, 1.865300000000042e-05, 1.863900000000085e-05, 1.9278000000001044e-05, 1.863900000000085e-05, 1.833299999999885e-05, 1.8652000000000946e-05, 1.890300000000067e-05, 1.8971999999999045e-05, 1.833299999999885e-05, 1.834699999999842e-05, 1.8334000000001793e-05, 1.9000000000001654e-05, 1.862500000000128e-05, 1.865300000000042e-05, 1.865300000000042e-05, 1.8249999999997435e-05, 1.9277999999997575e-05, 1.831900000000275e-05]</msg>
<status status="PASS" starttime="20201110 08:35:45.855" endtime="20201110 08:35:45.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.851" endtime="20201110 08:35:45.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.865" endtime="20201110 08:35:45.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:45.869" endtime="20201110 08:35:45.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.867" endtime="20201110 08:35:45.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.863" endtime="20201110 08:35:45.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.489" endtime="20201110 08:35:45.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.488" endtime="20201110 08:35:45.889"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.898" endtime="20201110 08:35:45.914"></status>
</kw>
<msg timestamp="20201110 08:35:45.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:45.897" endtime="20201110 08:35:45.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:45.916" endtime="20201110 08:35:45.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.918" endtime="20201110 08:35:45.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.894" endtime="20201110 08:35:45.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.892" endtime="20201110 08:35:45.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.928" endtime="20201110 08:35:46.215"></status>
</kw>
<msg timestamp="20201110 08:35:46.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.927" endtime="20201110 08:35:46.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:46.219" endtime="20201110 08:35:46.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.227" endtime="20201110 08:35:46.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.924" endtime="20201110 08:35:46.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.922" endtime="20201110 08:35:46.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:46.234" level="INFO">${RESULT} = [{'time': 0.020538736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0179999999998116e-05, 'source_diff': 2.0179999999998116e-05}, {'time': 0.020560514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:46.230" endtime="20201110 08:35:46.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:46.247" level="INFO">${ACCURACY} = {'source_diff': [2.0179999999998116e-05, 1.9277999999997575e-05, 1.98890000000021e-05, 1.9278000000001044e-05, 1.9264000000001474e-05, 1.988899999999863e-05, 1.9513999999998255e-05, 1.988899999999863e...</msg>
<status status="PASS" starttime="20201110 08:35:46.235" endtime="20201110 08:35:46.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.252" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:35:46.251" endtime="20201110 08:35:46.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.254" level="INFO">VALUE: [2.0179999999998116e-05, 1.9277999999997575e-05, 1.98890000000021e-05, 1.9278000000001044e-05, 1.9264000000001474e-05, 1.988899999999863e-05, 1.9513999999998255e-05, 1.988899999999863e-05, 1.956900000000053e-05, 2.0180000000001586e-05, 1.929100000000114e-05, 1.988899999999863e-05, 1.9264000000001474e-05, 1.984699999999992e-05, 1.990300000000167e-05, 1.9249999999998435e-05, 1.987500000000253e-05, 1.95830000000001e-05, 2.0263999999999005e-05, 2.016700000000149e-05, 1.988899999999863e-05, 1.9306000000000184e-05, 1.956899999999706e-05, 1.9570000000000004e-05, 1.956899999999706e-05, 1.956900000000053e-05, 1.988899999999863e-05, 1.959700000000314e-05, 1.9583999999999574e-05, 1.956900000000053e-05, 1.95830000000001e-05, 1.988899999999863e-05, 1.9292000000000614e-05, 1.988899999999863e-05, 1.988899999999863e-05, 1.9570000000000004e-05, 1.956899999999706e-05, 1.959699999999967e-05, 1.95830000000001e-05, 1.919499999999963e-05, 1.9264000000001474e-05, 1.9263999999998005e-05, 2.019500000000063e-05, 1.956900000000053e-05, 1.987499999999906e-05, 2.019500000000063e-05, 2.0208000000000725e-05, 1.9235999999998865e-05, 1.987499999999906e-05, 1.98890000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:35:46.253" endtime="20201110 08:35:46.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.248" endtime="20201110 08:35:46.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.258" endtime="20201110 08:35:46.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:46.261" endtime="20201110 08:35:46.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.260" endtime="20201110 08:35:46.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.256" endtime="20201110 08:35:46.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.890" endtime="20201110 08:35:46.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.890" endtime="20201110 08:35:46.282"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.291" endtime="20201110 08:35:46.307"></status>
</kw>
<msg timestamp="20201110 08:35:46.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:46.289" endtime="20201110 08:35:46.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:46.309" endtime="20201110 08:35:46.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.311" endtime="20201110 08:35:46.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.287" endtime="20201110 08:35:46.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.284" endtime="20201110 08:35:46.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.321" endtime="20201110 08:35:46.607"></status>
</kw>
<msg timestamp="20201110 08:35:46.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020683819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020704319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:46.320" endtime="20201110 08:35:46.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020683819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020704319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:46.611" endtime="20201110 08:35:46.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.620" endtime="20201110 08:35:46.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.317" endtime="20201110 08:35:46.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.315" endtime="20201110 08:35:46.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:46.626" level="INFO">${RESULT} = [{'time': 0.020704319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0499999999999685e-05, 'source_diff': 2.0499999999999685e-05}, {'time': 0.020730319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:46.623" endtime="20201110 08:35:46.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:46.640" level="INFO">${ACCURACY} = {'source_diff': [2.0499999999999685e-05, 2.080500000000221e-05, 2.079099999999917e-05, 2.112500000000031e-05, 2.0805999999998215e-05, 2.0208000000000725e-05, 2.0820000000001254e-05, 2.0193999999997686...</msg>
<status status="PASS" starttime="20201110 08:35:46.627" endtime="20201110 08:35:46.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.644" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:35:46.643" endtime="20201110 08:35:46.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.647" level="INFO">VALUE: [2.0499999999999685e-05, 2.080500000000221e-05, 2.079099999999917e-05, 2.112500000000031e-05, 2.0805999999998215e-05, 2.0208000000000725e-05, 2.0820000000001254e-05, 2.0193999999997686e-05, 2.044500000000088e-05, 2.112500000000031e-05, 2.0513999999999255e-05, 2.113899999999988e-05, 2.0528000000002294e-05, 2.0486000000000115e-05, 2.087500000000006e-05, 2.054099999999892e-05, 2.0527999999998825e-05, 2.112500000000031e-05, 2.019500000000063e-05, 2.0833999999997355e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.116699999999902e-05, 2.080499999999874e-05, 2.0500000000003155e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.083300000000135e-05, 2.0569999999997535e-05, 2.0499999999999685e-05, 2.051299999999978e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.051300000000325e-05, 2.0166000000002016e-05, 2.0263999999999005e-05, 2.0194000000001155e-05, 2.016700000000149e-05, 2.019499999999716e-05, 2.0513999999999255e-05, 2.080500000000221e-05, 2.0499999999999685e-05, 2.112500000000031e-05, 2.0499999999999685e-05, 2.113899999999988e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.0805999999998215e-05, 2.0499999999999685e-05, 2.111100000000074e-05]</msg>
<status status="PASS" starttime="20201110 08:35:46.645" endtime="20201110 08:35:46.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.641" endtime="20201110 08:35:46.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.650" endtime="20201110 08:35:46.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:46.654" endtime="20201110 08:35:46.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.652" endtime="20201110 08:35:46.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.649" endtime="20201110 08:35:46.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.283" endtime="20201110 08:35:46.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.282" endtime="20201110 08:35:46.675"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.685" endtime="20201110 08:35:46.701"></status>
</kw>
<msg timestamp="20201110 08:35:46.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:46.682" endtime="20201110 08:35:46.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:46.703" endtime="20201110 08:35:46.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.705" endtime="20201110 08:35:46.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.680" endtime="20201110 08:35:46.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.678" endtime="20201110 08:35:46.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.717" endtime="20201110 08:35:47.002"></status>
</kw>
<msg timestamp="20201110 08:35:47.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:46.715" endtime="20201110 08:35:47.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.007" endtime="20201110 08:35:47.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.015" endtime="20201110 08:35:47.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.712" endtime="20201110 08:35:47.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.710" endtime="20201110 08:35:47.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.022" level="INFO">${RESULT} = [{'time': 0.022040056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1347999999997425e-05, 'source_diff': 2.1347999999997425e-05}, {'time': 0.022065986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:47.018" endtime="20201110 08:35:47.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:47.035" level="INFO">${ACCURACY} = {'source_diff': [2.1347999999997425e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.1750000000000935e-05, 2.1763999999997036e-05, 2.1722000000001795e-05, 2.143100000000231e-05, 2.2028000000000325...</msg>
<status status="PASS" starttime="20201110 08:35:47.023" endtime="20201110 08:35:47.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.040" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:35:47.039" endtime="20201110 08:35:47.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.042" level="INFO">VALUE: [2.1347999999997425e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.1750000000000935e-05, 2.1763999999997036e-05, 2.1722000000001795e-05, 2.143100000000231e-05, 2.2028000000000325e-05, 2.1736000000001365e-05, 2.2069999999999035e-05, 2.2028000000000325e-05, 2.1736000000001365e-05, 2.1764000000000505e-05, 2.1457999999998506e-05, 2.1735999999997896e-05, 2.1499999999997216e-05, 2.141699999999927e-05, 2.143100000000231e-05, 2.2055999999999465e-05, 2.1721999999998326e-05, 2.1415999999999796e-05, 2.206899999999956e-05, 2.2055999999999465e-05, 2.1764000000000505e-05, 2.1415999999999796e-05, 2.1736000000001365e-05, 2.17090000000017e-05, 2.2084000000002074e-05, 2.2014000000000755e-05, 2.1736000000001365e-05, 2.202700000000085e-05, 2.144500000000188e-05, 2.204100000000042e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.143100000000231e-05, 2.236100000000199e-05, 2.143100000000231e-05, 2.20830000000026e-05, 2.236099999999852e-05, 2.172300000000127e-05, 2.1514000000000255e-05, 2.1429999999999366e-05, 2.1750000000000935e-05, 2.1430000000002836e-05, 2.1735999999997896e-05, 2.143099999999884e-05, 2.1429999999999366e-05, 2.1429999999999366e-05, 2.204100000000042e-05]</msg>
<status status="PASS" starttime="20201110 08:35:47.041" endtime="20201110 08:35:47.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.036" endtime="20201110 08:35:47.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.046" endtime="20201110 08:35:47.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:47.049" endtime="20201110 08:35:47.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.048" endtime="20201110 08:35:47.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.044" endtime="20201110 08:35:47.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.676" endtime="20201110 08:35:47.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.675" endtime="20201110 08:35:47.070"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.079" endtime="20201110 08:35:47.094"></status>
</kw>
<msg timestamp="20201110 08:35:47.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:47.077" endtime="20201110 08:35:47.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:47.096" endtime="20201110 08:35:47.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.098" endtime="20201110 08:35:47.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.074" endtime="20201110 08:35:47.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.072" endtime="20201110 08:35:47.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.108" endtime="20201110 08:35:47.393"></status>
</kw>
<msg timestamp="20201110 08:35:47.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.107" endtime="20201110 08:35:47.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.398" endtime="20201110 08:35:47.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.406" endtime="20201110 08:35:47.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.104" endtime="20201110 08:35:47.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.102" endtime="20201110 08:35:47.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.413" level="INFO">${RESULT} = [{'time': 0.019793736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2971999999999576e-05, 'source_diff': 2.2971999999999576e-05}, {'time': 0.019820597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:47.409" endtime="20201110 08:35:47.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:47.427" level="INFO">${ACCURACY} = {'source_diff': [2.2971999999999576e-05, 2.3054999999997522e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.266700000000052e-05, 2.236099999999852e-05, 2.268100000000009e-05, 2.2971999999999576...</msg>
<status status="PASS" starttime="20201110 08:35:47.414" endtime="20201110 08:35:47.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.431" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:35:47.430" endtime="20201110 08:35:47.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.434" level="INFO">VALUE: [2.2971999999999576e-05, 2.3054999999997522e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.266700000000052e-05, 2.236099999999852e-05, 2.268100000000009e-05, 2.2971999999999576e-05, 2.241700000000027e-05, 2.2971999999999576e-05, 2.237500000000156e-05, 2.229100000000067e-05, 2.297300000000252e-05, 2.236100000000199e-05, 2.237499999999809e-05, 2.234699999999895e-05, 2.266700000000052e-05, 2.3250000000002435e-05, 2.236099999999852e-05, 2.2971999999999576e-05, 2.329100000000167e-05, 2.22770000000011e-05, 2.3290999999998202e-05, 2.265300000000095e-05, 2.2999999999998716e-05, 2.2665999999997577e-05, 2.329100000000167e-05, 2.2985999999999146e-05, 2.237500000000156e-05, 2.29030000000012e-05, 2.2944000000000436e-05, 2.3277999999998106e-05, 2.2985999999999146e-05, 2.2680000000000616e-05, 2.2361999999997995e-05, 2.234700000000242e-05, 2.268100000000009e-05, 2.2985999999999146e-05, 2.2694000000000186e-05, 2.297300000000252e-05, 2.237499999999809e-05, 2.265300000000095e-05, 2.236099999999852e-05, 2.329100000000167e-05, 2.3000000000002185e-05, 2.241700000000027e-05, 2.233299999999938e-05, 2.3292000000001145e-05, 2.2958000000000006e-05, 2.268100000000009e-05]</msg>
<status status="PASS" starttime="20201110 08:35:47.432" endtime="20201110 08:35:47.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.428" endtime="20201110 08:35:47.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.437" endtime="20201110 08:35:47.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:47.441" endtime="20201110 08:35:47.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.439" endtime="20201110 08:35:47.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.436" endtime="20201110 08:35:47.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.071" endtime="20201110 08:35:47.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.070" endtime="20201110 08:35:47.462"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.470" endtime="20201110 08:35:47.485"></status>
</kw>
<msg timestamp="20201110 08:35:47.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:47.469" endtime="20201110 08:35:47.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:47.487" endtime="20201110 08:35:47.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.489" endtime="20201110 08:35:47.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.466" endtime="20201110 08:35:47.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.464" endtime="20201110 08:35:47.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.499" endtime="20201110 08:35:47.784"></status>
</kw>
<msg timestamp="20201110 08:35:47.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019790944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.498" endtime="20201110 08:35:47.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019790944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.788" endtime="20201110 08:35:47.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.796" endtime="20201110 08:35:47.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.495" endtime="20201110 08:35:47.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.493" endtime="20201110 08:35:47.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:47.803" level="INFO">${RESULT} = [{'time': 0.019815181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.423699999999987e-05, 'source_diff': 2.423699999999987e-05}, {'time': 0.019844042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:47.800" endtime="20201110 08:35:47.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:47.816" level="INFO">${ACCURACY} = {'source_diff': [2.423699999999987e-05, 2.32229999999993e-05, 2.3556000000000965e-05, 2.3290999999998202e-05, 2.42230000000003e-05, 2.393100000000134e-05, 2.387500000000306e-05, 2.3292000000001145e-05...</msg>
<status status="PASS" starttime="20201110 08:35:47.804" endtime="20201110 08:35:47.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.821" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:35:47.820" endtime="20201110 08:35:47.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.823" level="INFO">VALUE: [2.423699999999987e-05, 2.32229999999993e-05, 2.3556000000000965e-05, 2.3290999999998202e-05, 2.42230000000003e-05, 2.393100000000134e-05, 2.387500000000306e-05, 2.3292000000001145e-05, 2.3278000000001575e-05, 2.361099999999977e-05, 2.420900000000073e-05, 2.390299999999873e-05, 2.3972000000000576e-05, 2.3249999999998966e-05, 2.39169999999983e-05, 2.358300000000063e-05, 2.4207999999997787e-05, 2.388899999999916e-05, 2.3901999999999257e-05, 2.3277999999998106e-05, 2.3930000000001866e-05, 2.42230000000003e-05, 2.3916000000002297e-05, 2.3292000000001145e-05, 2.358300000000063e-05, 2.390299999999873e-05, 2.3916000000002297e-05, 2.358300000000063e-05, 2.391700000000177e-05, 2.4221999999997357e-05, 2.388900000000263e-05, 2.35970000000002e-05, 2.390299999999873e-05, 2.394500000000091e-05, 2.3306000000000715e-05, 2.3305999999997246e-05, 2.3596999999996732e-05, 2.4208000000001256e-05, 2.329100000000167e-05, 2.35970000000002e-05, 2.3680000000001616e-05, 2.368099999999762e-05, 2.4236000000000396e-05, 2.39030000000022e-05, 2.35970000000002e-05, 2.3292000000001145e-05, 2.3291999999997676e-05, 2.329100000000167e-05, 2.3596999999996732e-05, 2.3305999999997246e-05]</msg>
<status status="PASS" starttime="20201110 08:35:47.822" endtime="20201110 08:35:47.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.817" endtime="20201110 08:35:47.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.827" endtime="20201110 08:35:47.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:47.830" endtime="20201110 08:35:47.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.829" endtime="20201110 08:35:47.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.825" endtime="20201110 08:35:47.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.463" endtime="20201110 08:35:47.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.462" endtime="20201110 08:35:47.851"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.860" endtime="20201110 08:35:47.876"></status>
</kw>
<msg timestamp="20201110 08:35:47.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:47.858" endtime="20201110 08:35:47.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:47.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:47.878" endtime="20201110 08:35:47.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.882" endtime="20201110 08:35:47.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.856" endtime="20201110 08:35:47.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.854" endtime="20201110 08:35:47.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:47.896" endtime="20201110 08:35:48.182"></status>
</kw>
<msg timestamp="20201110 08:35:48.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:47.894" endtime="20201110 08:35:48.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.186" endtime="20201110 08:35:48.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.194" endtime="20201110 08:35:48.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.890" endtime="20201110 08:35:48.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.888" endtime="20201110 08:35:48.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.201" level="INFO">${RESULT} = [{'time': 0.020128986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.020155833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:48.198" endtime="20201110 08:35:48.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:48.214" level="INFO">${ACCURACY} = {'source_diff': [2.515299999999998e-05, 2.4513999999999786e-05, 2.420900000000073e-05, 2.4527999999999356e-05, 2.4833999999997886e-05, 2.486100000000102e-05, 2.486100000000102e-05, 2.4860999999997552e...</msg>
<status status="PASS" starttime="20201110 08:35:48.202" endtime="20201110 08:35:48.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.219" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:35:48.218" endtime="20201110 08:35:48.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.221" level="INFO">VALUE: [2.515299999999998e-05, 2.4513999999999786e-05, 2.420900000000073e-05, 2.4527999999999356e-05, 2.4833999999997886e-05, 2.486100000000102e-05, 2.486100000000102e-05, 2.4860999999997552e-05, 2.4832999999998412e-05, 2.4222000000000826e-05, 2.4208000000001256e-05, 2.4527999999999356e-05, 2.455500000000249e-05, 2.42230000000003e-05, 2.4249999999999966e-05, 2.4834000000001355e-05, 2.4221999999997357e-05, 2.488900000000016e-05, 2.4790999999999702e-05, 2.4222000000000826e-05, 2.4528000000002825e-05, 2.518099999999912e-05, 2.484700000000145e-05, 2.420899999999726e-05, 2.4291999999998676e-05, 2.4818999999998842e-05, 2.4527999999999356e-05, 2.4819999999998316e-05, 2.4554999999999022e-05, 2.4540999999999452e-05, 2.513900000000041e-05, 2.516699999999955e-05, 2.4236000000000396e-05, 2.4833999999997886e-05, 2.4486000000000646e-05, 2.4500000000000216e-05, 2.4527999999999356e-05, 2.4500000000000216e-05, 2.5152000000000507e-05, 2.4820000000001785e-05, 2.4846999999997982e-05, 2.480500000000274e-05, 2.4820000000001785e-05, 2.515299999999998e-05, 2.483300000000188e-05, 2.4541999999998926e-05, 2.4540999999999452e-05, 2.486100000000102e-05, 2.518099999999912e-05, 2.4527999999999356e-05]</msg>
<status status="PASS" starttime="20201110 08:35:48.220" endtime="20201110 08:35:48.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.215" endtime="20201110 08:35:48.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.225" endtime="20201110 08:35:48.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:48.228" endtime="20201110 08:35:48.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.227" endtime="20201110 08:35:48.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.223" endtime="20201110 08:35:48.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.852" endtime="20201110 08:35:48.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:47.852" endtime="20201110 08:35:48.249"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.258" endtime="20201110 08:35:48.273"></status>
</kw>
<msg timestamp="20201110 08:35:48.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:48.256" endtime="20201110 08:35:48.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:48.275" endtime="20201110 08:35:48.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.277" endtime="20201110 08:35:48.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.254" endtime="20201110 08:35:48.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.252" endtime="20201110 08:35:48.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.287" endtime="20201110 08:35:48.573"></status>
</kw>
<msg timestamp="20201110 08:35:48.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.286" endtime="20201110 08:35:48.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.577" endtime="20201110 08:35:48.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.585" endtime="20201110 08:35:48.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.283" endtime="20201110 08:35:48.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.281" endtime="20201110 08:35:48.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.592" level="INFO">${RESULT} = [{'time': 0.020169694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5762999999998093e-05, 'source_diff': 2.5762999999998093e-05}, {'time': 0.020200653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:48.589" endtime="20201110 08:35:48.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:48.605" level="INFO">${ACCURACY} = {'source_diff': [2.5762999999998093e-05, 2.6069999999999566e-05, 2.540300000000023e-05, 2.544500000000241e-05, 2.615299999999751e-05, 2.5778000000000606e-05, 2.5457999999999037e-05, 2.6055000000000522...</msg>
<status status="PASS" starttime="20201110 08:35:48.593" endtime="20201110 08:35:48.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.610" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:35:48.609" endtime="20201110 08:35:48.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.612" level="INFO">VALUE: [2.5762999999998093e-05, 2.6069999999999566e-05, 2.540300000000023e-05, 2.544500000000241e-05, 2.615299999999751e-05, 2.5778000000000606e-05, 2.5457999999999037e-05, 2.6055000000000522e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.544499999999894e-05, 2.5778000000000606e-05, 2.5721999999998857e-05, 2.5777000000001132e-05, 2.5749999999997997e-05, 2.545899999999851e-05, 2.5832999999999412e-05, 2.512499999999737e-05, 2.5763999999997567e-05, 2.513900000000041e-05, 2.6083999999999136e-05, 2.5486000000001646e-05, 2.513900000000041e-05, 2.6069000000000092e-05, 2.512499999999737e-05, 2.5471999999998607e-05, 2.5763999999997567e-05, 2.543099999999937e-05, 2.513900000000041e-05, 2.515299999999998e-05, 2.5193999999999217e-05, 2.5458000000002506e-05, 2.5764000000001036e-05, 2.547300000000155e-05, 2.5222000000001826e-05, 2.5750000000001466e-05, 2.6000000000001716e-05, 2.544499999999894e-05, 2.6069000000000092e-05, 2.5429999999999897e-05, 2.6124999999998372e-05, 2.513900000000041e-05, 2.5443999999999467e-05, 2.5763999999997567e-05, 2.5762999999998093e-05, 2.6055000000000522e-05, 2.5387999999997718e-05, 2.6013999999997817e-05, 2.544499999999894e-05, 2.516699999999955e-05]</msg>
<status status="PASS" starttime="20201110 08:35:48.611" endtime="20201110 08:35:48.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.606" endtime="20201110 08:35:48.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.616" endtime="20201110 08:35:48.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:48.619" endtime="20201110 08:35:48.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.618" endtime="20201110 08:35:48.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.614" endtime="20201110 08:35:48.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.250" endtime="20201110 08:35:48.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.250" endtime="20201110 08:35:48.640"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.649" endtime="20201110 08:35:48.664"></status>
</kw>
<msg timestamp="20201110 08:35:48.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:48.647" endtime="20201110 08:35:48.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:48.665" endtime="20201110 08:35:48.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.668" endtime="20201110 08:35:48.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.645" endtime="20201110 08:35:48.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.643" endtime="20201110 08:35:48.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.678" endtime="20201110 08:35:48.963"></status>
</kw>
<msg timestamp="20201110 08:35:48.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.676" endtime="20201110 08:35:48.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.967" endtime="20201110 08:35:48.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.975" endtime="20201110 08:35:48.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.673" endtime="20201110 08:35:48.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.672" endtime="20201110 08:35:48.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.982" level="INFO">${RESULT} = [{'time': 0.019788472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7000000000002716e-05, 'source_diff': 2.7000000000002716e-05}, {'time': 0.019818431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:48.979" endtime="20201110 08:35:48.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:48.996" level="INFO">${ACCURACY} = {'source_diff': [2.7000000000002716e-05, 2.669500000000019e-05, 2.6402000000001757e-05, 2.7319000000001342e-05, 2.6374999999998622e-05, 2.6985999999999677e-05, 2.6764000000002036e-05, 2.63889999999981...</msg>
<status status="PASS" starttime="20201110 08:35:48.983" endtime="20201110 08:35:48.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.001" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:35:49.000" endtime="20201110 08:35:49.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.004" level="INFO">VALUE: [2.7000000000002716e-05, 2.669500000000019e-05, 2.6402000000001757e-05, 2.7319000000001342e-05, 2.6374999999998622e-05, 2.6985999999999677e-05, 2.6764000000002036e-05, 2.638899999999819e-05, 2.638900000000166e-05, 2.6374999999998622e-05, 2.669500000000019e-05, 2.6694000000000717e-05, 2.6708000000000287e-05, 2.7013999999998817e-05, 2.6360999999999052e-05, 2.7319000000001342e-05, 2.7306000000001246e-05, 2.638899999999819e-05, 2.6999999999999247e-05, 2.7320000000000816e-05, 2.6999999999999247e-05, 2.6958000000000537e-05, 2.637500000000209e-05, 2.6694000000000717e-05, 2.668100000000062e-05, 2.6665999999998108e-05, 2.637500000000209e-05, 2.638899999999819e-05, 2.6610999999999302e-05, 2.7012999999999343e-05, 2.6999999999999247e-05, 2.6374999999998622e-05, 2.638900000000166e-05, 2.7040999999998483e-05, 2.670900000000323e-05, 2.6374999999998622e-05, 2.6680000000001147e-05, 2.7013999999998817e-05, 2.6680000000001147e-05, 2.7318999999997873e-05, 2.638899999999819e-05, 2.6985999999999677e-05, 2.7333000000000912e-05, 2.668100000000062e-05, 2.7319000000001342e-05, 2.6624999999998872e-05, 2.67230000000028e-05, 2.7304999999998303e-05, 2.7278000000002106e-05, 2.6693999999997248e-05]</msg>
<status status="PASS" starttime="20201110 08:35:49.002" endtime="20201110 08:35:49.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.997" endtime="20201110 08:35:49.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.008" endtime="20201110 08:35:49.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:49.012" endtime="20201110 08:35:49.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.010" endtime="20201110 08:35:49.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.006" endtime="20201110 08:35:49.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.641" endtime="20201110 08:35:49.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.641" endtime="20201110 08:35:49.033"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.041" endtime="20201110 08:35:49.057"></status>
</kw>
<msg timestamp="20201110 08:35:49.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:49.040" endtime="20201110 08:35:49.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:49.058" endtime="20201110 08:35:49.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.061" endtime="20201110 08:35:49.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.037" endtime="20201110 08:35:49.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.035" endtime="20201110 08:35:49.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.070" endtime="20201110 08:35:49.356"></status>
</kw>
<msg timestamp="20201110 08:35:49.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:49.069" endtime="20201110 08:35:49.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:49.360" endtime="20201110 08:35:49.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.368" endtime="20201110 08:35:49.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.066" endtime="20201110 08:35:49.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.065" endtime="20201110 08:35:49.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:49.375" level="INFO">${RESULT} = [{'time': 0.019779722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8000000000000247e-05, 'source_diff': 2.8000000000000247e-05}, {'time': 0.019809583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:49.371" endtime="20201110 08:35:49.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:49.388" level="INFO">${ACCURACY} = {'source_diff': [2.8000000000000247e-05, 2.7290999999998733e-05, 2.7333000000000912e-05, 2.7304999999998303e-05, 2.7611000000000302e-05, 2.7611000000000302e-05, 2.7915999999999358e-05, 2.7318999999997...</msg>
<status status="PASS" starttime="20201110 08:35:49.376" endtime="20201110 08:35:49.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.393" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:35:49.392" endtime="20201110 08:35:49.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.395" level="INFO">VALUE: [2.8000000000000247e-05, 2.7290999999998733e-05, 2.7333000000000912e-05, 2.7304999999998303e-05, 2.7611000000000302e-05, 2.7611000000000302e-05, 2.7915999999999358e-05, 2.7318999999997873e-05, 2.7638999999999442e-05, 2.7624999999999872e-05, 2.82370000000004e-05, 2.79309999999984e-05, 2.7334000000000386e-05, 2.7319000000001342e-05, 2.8236000000000927e-05, 2.7637999999999968e-05, 2.7957999999998068e-05, 2.79309999999984e-05, 2.791699999999883e-05, 2.791699999999883e-05, 2.79309999999984e-05, 2.7624999999999872e-05, 2.8193999999998748e-05, 2.7597000000000732e-05, 2.8290999999999733e-05, 2.8250000000000497e-05, 2.763900000000291e-05, 2.794499999999797e-05, 2.7624999999999872e-05, 2.7333000000000912e-05, 2.793100000000187e-05, 2.7624999999999872e-05, 2.7583000000001162e-05, 2.7304999999998303e-05, 2.7611000000000302e-05, 2.816699999999908e-05, 2.7610999999996833e-05, 2.7320000000000816e-05, 2.7611000000000302e-05, 2.7304999999998303e-05, 2.7555000000002022e-05, 2.7929999999998928e-05, 2.8236000000000927e-05, 2.7320000000000816e-05, 2.791699999999883e-05, 2.7638999999999442e-05, 2.7943999999998498e-05, 2.7611000000000302e-05, 2.8235999999997458e-05, 2.7611000000000302e-05]</msg>
<status status="PASS" starttime="20201110 08:35:49.394" endtime="20201110 08:35:49.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.389" endtime="20201110 08:35:49.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.399" endtime="20201110 08:35:49.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:49.402" endtime="20201110 08:35:49.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.401" endtime="20201110 08:35:49.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.397" endtime="20201110 08:35:49.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.034" endtime="20201110 08:35:49.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.033" endtime="20201110 08:35:49.423"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.432" endtime="20201110 08:35:49.449"></status>
</kw>
<msg timestamp="20201110 08:35:49.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:49.430" endtime="20201110 08:35:49.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:49.451" endtime="20201110 08:35:49.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.453" endtime="20201110 08:35:49.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.428" endtime="20201110 08:35:49.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.426" endtime="20201110 08:35:49.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.463" endtime="20201110 08:35:49.748"></status>
</kw>
<msg timestamp="20201110 08:35:49.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020843889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020872444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:49.462" endtime="20201110 08:35:49.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020843889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020872444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:49.752" endtime="20201110 08:35:49.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.761" endtime="20201110 08:35:49.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.459" endtime="20201110 08:35:49.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.457" endtime="20201110 08:35:49.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:49.768" level="INFO">${RESULT} = [{'time': 0.020872444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8554999999999553e-05, 'source_diff': 2.8554999999999553e-05}, {'time': 0.020903611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:49.764" endtime="20201110 08:35:49.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:49.781" level="INFO">${ACCURACY} = {'source_diff': [2.8554999999999553e-05, 2.8554999999999553e-05, 2.9221999999998888e-05, 2.8555999999999027e-05, 2.8236000000000927e-05, 2.8541999999999457e-05, 2.8860999999998083e-05, 2.8860999999998...</msg>
<status status="PASS" starttime="20201110 08:35:49.768" endtime="20201110 08:35:49.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.785" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:35:49.784" endtime="20201110 08:35:49.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.788" level="INFO">VALUE: [2.8554999999999553e-05, 2.8554999999999553e-05, 2.9221999999998888e-05, 2.8555999999999027e-05, 2.8236000000000927e-05, 2.8541999999999457e-05, 2.8860999999998083e-05, 2.8860999999998083e-05, 2.9180000000000178e-05, 2.8235999999997458e-05, 2.8250000000000497e-05, 2.8860999999998083e-05, 2.8819999999998847e-05, 2.8541999999999457e-05, 2.9167000000000082e-05, 2.8861000000001552e-05, 2.8555999999999027e-05, 2.918099999999965e-05, 2.8791000000000233e-05, 2.8236000000000927e-05, 2.8554999999999553e-05, 2.8846999999998513e-05, 2.9180000000000178e-05, 2.917999999999671e-05, 2.8847999999997986e-05, 2.8847000000001982e-05, 2.8236000000000927e-05, 2.9167000000000082e-05, 2.8221999999997888e-05, 2.8875000000001122e-05, 2.8874999999997653e-05, 2.8568999999999123e-05, 2.9180000000000178e-05, 2.9110999999998333e-05, 2.8250000000000497e-05, 2.8875000000001122e-05, 2.8221999999997888e-05, 2.8874999999997653e-05, 2.918099999999965e-05, 2.9167000000000082e-05, 2.8847000000001982e-05, 2.9125000000001372e-05, 2.8569000000002592e-05, 2.915199999999757e-05, 2.8554999999999553e-05, 2.8874999999997653e-05, 2.9236000000001927e-05, 2.8514000000000317e-05, 2.8305000000002772e-05, 2.8541999999999457e-05]</msg>
<status status="PASS" starttime="20201110 08:35:49.786" endtime="20201110 08:35:49.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.782" endtime="20201110 08:35:49.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.791" endtime="20201110 08:35:49.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:49.795" endtime="20201110 08:35:49.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.793" endtime="20201110 08:35:49.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.790" endtime="20201110 08:35:49.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.424" endtime="20201110 08:35:49.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.424" endtime="20201110 08:35:49.816"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.824" endtime="20201110 08:35:49.840"></status>
</kw>
<msg timestamp="20201110 08:35:49.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:49.823" endtime="20201110 08:35:49.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:49.841" endtime="20201110 08:35:49.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.844" endtime="20201110 08:35:49.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.820" endtime="20201110 08:35:49.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.818" endtime="20201110 08:35:49.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.854" endtime="20201110 08:35:50.139"></status>
</kw>
<msg timestamp="20201110 08:35:50.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:49.852" endtime="20201110 08:35:50.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.144" endtime="20201110 08:35:50.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.152" endtime="20201110 08:35:50.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.850" endtime="20201110 08:35:50.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.848" endtime="20201110 08:35:50.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.159" level="INFO">${RESULT} = [{'time': 0.019774722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9208000000002787e-05, 'source_diff': 2.9208000000002787e-05}, {'time': 0.019810653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:50.155" endtime="20201110 08:35:50.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:50.172" level="INFO">${ACCURACY} = {'source_diff': [2.9208000000002787e-05, 3.0096999999999763e-05, 2.9791000000001233e-05, 3.0139000000001942e-05, 2.9792000000000707e-05, 3.0110999999999333e-05, 2.9167000000000082e-05, 3.0110999999999...</msg>
<status status="PASS" starttime="20201110 08:35:50.160" endtime="20201110 08:35:50.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.177" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:35:50.176" endtime="20201110 08:35:50.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.179" level="INFO">VALUE: [2.9208000000002787e-05, 3.0096999999999763e-05, 2.9791000000001233e-05, 3.0139000000001942e-05, 2.9792000000000707e-05, 3.0110999999999333e-05, 2.9167000000000082e-05, 3.0110999999999333e-05, 2.918099999999965e-05, 2.9805000000000803e-05, 3.0125000000002372e-05, 3.0083999999999667e-05, 3.0110999999999333e-05, 2.9792000000000707e-05, 3.0096999999999763e-05, 2.9819000000000373e-05, 2.9790999999997764e-05, 2.9791000000001233e-05, 2.9776999999998194e-05, 3.0055000000001053e-05, 2.9096999999998763e-05, 2.9749999999998528e-05, 2.947300000000208e-05, 3.0096999999999763e-05, 2.9500000000001747e-05, 2.944499999999947e-05, 2.9749999999998528e-05, 2.9457999999999568e-05, 2.9846999999999513e-05, 2.9486000000002177e-05, 3.0138999999998473e-05, 2.9486000000002177e-05, 2.9792000000000707e-05, 2.9471999999999138e-05, 3.0097999999999236e-05, 2.9180000000000178e-05, 2.9791000000001233e-05, 2.9486000000002177e-05, 3.0111000000002802e-05, 2.9819999999999847e-05, 2.9806000000000277e-05, 2.9792000000000707e-05, 3.0069000000000623e-05, 2.9542000000000457e-05, 2.9485999999998708e-05, 3.0096999999999763e-05, 2.9791000000001233e-05, 2.948700000000165e-05, 2.9764000000001567e-05, 2.9471999999999138e-05]</msg>
<status status="PASS" starttime="20201110 08:35:50.178" endtime="20201110 08:35:50.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.173" endtime="20201110 08:35:50.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.183" endtime="20201110 08:35:50.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:50.186" endtime="20201110 08:35:50.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.185" endtime="20201110 08:35:50.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.181" endtime="20201110 08:35:50.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.817" endtime="20201110 08:35:50.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.816" endtime="20201110 08:35:50.207"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.216" endtime="20201110 08:35:50.231"></status>
</kw>
<msg timestamp="20201110 08:35:50.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:50.214" endtime="20201110 08:35:50.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:50.233" endtime="20201110 08:35:50.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.235" endtime="20201110 08:35:50.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.212" endtime="20201110 08:35:50.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.210" endtime="20201110 08:35:50.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.245" endtime="20201110 08:35:50.531"></status>
</kw>
<msg timestamp="20201110 08:35:50.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020195389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.244" endtime="20201110 08:35:50.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020195389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.535" endtime="20201110 08:35:50.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.544" endtime="20201110 08:35:50.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.241" endtime="20201110 08:35:50.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.240" endtime="20201110 08:35:50.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.550" level="INFO">${RESULT} = [{'time': 0.020226111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.072200000000039e-05, 'source_diff': 3.072200000000039e-05}, {'time': 0.020262194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:50.547" endtime="20201110 08:35:50.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:50.565" level="INFO">${ACCURACY} = {'source_diff': [3.072200000000039e-05, 3.0430000000001428e-05, 3.0110999999999333e-05, 3.038799999999925e-05, 3.072200000000039e-05, 3.077800000000214e-05, 3.070800000000082e-05, 3.070799999999735e-0...</msg>
<status status="PASS" starttime="20201110 08:35:50.551" endtime="20201110 08:35:50.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.569" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:35:50.568" endtime="20201110 08:35:50.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.571" level="INFO">VALUE: [3.072200000000039e-05, 3.0430000000001428e-05, 3.0110999999999333e-05, 3.038799999999925e-05, 3.072200000000039e-05, 3.077800000000214e-05, 3.070800000000082e-05, 3.070799999999735e-05, 3.065199999999907e-05, 3.073599999999996e-05, 3.070900000000029e-05, 3.073599999999996e-05, 3.070800000000082e-05, 3.1012999999999874e-05, 3.072299999999986e-05, 3.040199999999882e-05, 3.104199999999849e-05, 3.0431000000000902e-05, 3.072200000000039e-05, 3.067999999999821e-05, 3.072200000000039e-05, 3.108300000000119e-05, 3.0374999999999153e-05, 3.073699999999943e-05, 3.101399999999935e-05, 3.0402999999998293e-05, 3.070800000000082e-05, 3.0403000000001762e-05, 3.098600000000021e-05, 3.098600000000021e-05, 3.1026999999999444e-05, 3.0402999999998293e-05, 3.0111999999998806e-05, 3.134700000000101e-05, 3.073599999999996e-05, 3.0402999999998293e-05, 3.106900000000162e-05, 3.097200000000064e-05, 3.0402999999998293e-05, 3.072200000000039e-05, 3.041599999999839e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.105600000000153e-05, 3.068000000000168e-05, 3.0402999999998293e-05, 3.0388999999998723e-05, 3.0083000000000193e-05, 3.0416999999997862e-05, 3.0416000000001858e-05]</msg>
<status status="PASS" starttime="20201110 08:35:50.570" endtime="20201110 08:35:50.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.566" endtime="20201110 08:35:50.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.575" endtime="20201110 08:35:50.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:50.578" endtime="20201110 08:35:50.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.577" endtime="20201110 08:35:50.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.573" endtime="20201110 08:35:50.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.208" endtime="20201110 08:35:50.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.207" endtime="20201110 08:35:50.599"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.608" endtime="20201110 08:35:50.625"></status>
</kw>
<msg timestamp="20201110 08:35:50.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:50.606" endtime="20201110 08:35:50.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:50.626" endtime="20201110 08:35:50.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.629" endtime="20201110 08:35:50.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.604" endtime="20201110 08:35:50.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.602" endtime="20201110 08:35:50.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.638" endtime="20201110 08:35:50.925"></status>
</kw>
<msg timestamp="20201110 08:35:50.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.637" endtime="20201110 08:35:50.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.929" endtime="20201110 08:35:50.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.937" endtime="20201110 08:35:50.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.634" endtime="20201110 08:35:50.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.633" endtime="20201110 08:35:50.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.944" level="INFO">${RESULT} = [{'time': 0.020487778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.132000000000135e-05, 'source_diff': 3.132000000000135e-05}, {'time': 0.020523889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:50.941" endtime="20201110 08:35:50.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:50.957" level="INFO">${ACCURACY} = {'source_diff': [3.132000000000135e-05, 3.140299999999929e-05, 3.134700000000101e-05, 3.133400000000092e-05, 3.134700000000101e-05, 3.163899999999997e-05, 3.165200000000007e-05, 3.22640000000006e-05, ...</msg>
<status status="PASS" starttime="20201110 08:35:50.945" endtime="20201110 08:35:50.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.962" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:35:50.961" endtime="20201110 08:35:50.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.964" level="INFO">VALUE: [3.132000000000135e-05, 3.140299999999929e-05, 3.134700000000101e-05, 3.133400000000092e-05, 3.134700000000101e-05, 3.163899999999997e-05, 3.165200000000007e-05, 3.22640000000006e-05, 3.1332999999997974e-05, 3.133400000000092e-05, 3.165200000000007e-05, 3.190299999999979e-05, 3.166699999999911e-05, 3.227800000000017e-05, 3.194399999999903e-05, 3.1332999999997974e-05, 3.195800000000207e-05, 3.166599999999964e-05, 3.133300000000144e-05, 3.133400000000092e-05, 3.16380000000005e-05, 3.227800000000017e-05, 3.133300000000144e-05, 3.133300000000144e-05, 3.133300000000144e-05, 3.165200000000007e-05, 3.133399999999745e-05, 3.197200000000164e-05, 3.1348000000000487e-05, 3.165299999999954e-05, 3.187500000000065e-05, 3.131999999999788e-05, 3.194399999999903e-05, 3.1332999999997974e-05, 3.1346999999997543e-05, 3.134700000000101e-05, 3.194399999999903e-05, 3.129199999999874e-05, 3.19579999999986e-05, 3.19579999999986e-05, 3.158300000000169e-05, 3.166599999999964e-05, 3.136100000000058e-05, 3.166699999999911e-05, 3.2012999999997405e-05, 3.224999999999756e-05, 3.22640000000006e-05, 3.19579999999986e-05, 3.134700000000101e-05, 3.163899999999997e-05]</msg>
<status status="PASS" starttime="20201110 08:35:50.963" endtime="20201110 08:35:50.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.958" endtime="20201110 08:35:50.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.972" endtime="20201110 08:35:50.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:50.975" endtime="20201110 08:35:50.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.974" endtime="20201110 08:35:50.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.970" endtime="20201110 08:35:50.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.600" endtime="20201110 08:35:50.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.600" endtime="20201110 08:35:50.996"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.005" endtime="20201110 08:35:51.022"></status>
</kw>
<msg timestamp="20201110 08:35:51.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:51.003" endtime="20201110 08:35:51.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:51.023" endtime="20201110 08:35:51.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.026" endtime="20201110 08:35:51.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.001" endtime="20201110 08:35:51.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.999" endtime="20201110 08:35:51.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.037" endtime="20201110 08:35:51.322"></status>
</kw>
<msg timestamp="20201110 08:35:51.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:51.035" endtime="20201110 08:35:51.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:51.326" endtime="20201110 08:35:51.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.335" endtime="20201110 08:35:51.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.032" endtime="20201110 08:35:51.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.030" endtime="20201110 08:35:51.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:51.341" level="INFO">${RESULT} = [{'time': 0.020536458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.288900000000122e-05, 'source_diff': 3.288900000000122e-05}, {'time': 0.020573319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:51.338" endtime="20201110 08:35:51.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:51.355" level="INFO">${ACCURACY} = {'source_diff': [3.288900000000122e-05, 3.2596999999998794e-05, 3.2874999999998183e-05, 3.258400000000217e-05, 3.227800000000017e-05, 3.258300000000269e-05, 3.255599999999956e-05, 3.288900000000122e-0...</msg>
<status status="PASS" starttime="20201110 08:35:51.342" endtime="20201110 08:35:51.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.359" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:35:51.358" endtime="20201110 08:35:51.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.362" level="INFO">VALUE: [3.288900000000122e-05, 3.2596999999998794e-05, 3.2874999999998183e-05, 3.258400000000217e-05, 3.227800000000017e-05, 3.258300000000269e-05, 3.255599999999956e-05, 3.288900000000122e-05, 3.319499999999975e-05, 3.286100000000208e-05, 3.2874999999998183e-05, 3.2568999999999654e-05, 3.287500000000165e-05, 3.284799999999852e-05, 3.2860999999998614e-05, 3.226399999999713e-05, 3.22640000000006e-05, 3.263900000000097e-05, 3.287500000000165e-05, 3.256999999999913e-05, 3.2874999999998183e-05, 3.227800000000017e-05, 3.2568999999999654e-05, 3.288900000000122e-05, 3.220799999999885e-05, 3.259800000000174e-05, 3.319400000000028e-05, 3.22640000000006e-05, 3.287500000000165e-05, 3.256999999999913e-05, 3.226399999999713e-05, 3.25839999999987e-05, 3.252800000000042e-05, 3.2582999999999224e-05, 3.219399999999928e-05, 3.288899999999775e-05, 3.320799999999985e-05, 3.220899999999832e-05, 3.287500000000165e-05, 3.284800000000199e-05, 3.283399999999895e-05, 3.2362000000001057e-05, 3.255599999999956e-05, 3.2860999999998614e-05, 3.25700000000026e-05, 3.22640000000006e-05, 3.320799999999985e-05, 3.2582999999999224e-05, 3.320900000000279e-05, 3.22640000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:35:51.360" endtime="20201110 08:35:51.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.356" endtime="20201110 08:35:51.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.365" endtime="20201110 08:35:51.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:51.369" endtime="20201110 08:35:51.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.367" endtime="20201110 08:35:51.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.364" endtime="20201110 08:35:51.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.997" endtime="20201110 08:35:51.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.997" endtime="20201110 08:35:51.390"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.398" endtime="20201110 08:35:51.415"></status>
</kw>
<msg timestamp="20201110 08:35:51.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:51.397" endtime="20201110 08:35:51.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:51.417" endtime="20201110 08:35:51.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.419" endtime="20201110 08:35:51.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.394" endtime="20201110 08:35:51.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.392" endtime="20201110 08:35:51.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.429" endtime="20201110 08:35:51.715"></status>
</kw>
<msg timestamp="20201110 08:35:51.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020667319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:51.428" endtime="20201110 08:35:51.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020667319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:51.719" endtime="20201110 08:35:51.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.727" endtime="20201110 08:35:51.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.425" endtime="20201110 08:35:51.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.423" endtime="20201110 08:35:51.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:51.734" level="INFO">${RESULT} = [{'time': 0.020667319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3526999999998475e-05, 'source_diff': 3.3526999999998475e-05}, {'time': 0.020703292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:51.731" endtime="20201110 08:35:51.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:51.747" level="INFO">${ACCURACY} = {'source_diff': [3.3526999999998475e-05, 3.320900000000279e-05, 3.4124999999999434e-05, 3.343000000000096e-05, 3.382000000000038e-05, 3.4138999999999003e-05, 3.318100000000018e-05, 3.350000000000228e-...</msg>
<status status="PASS" starttime="20201110 08:35:51.735" endtime="20201110 08:35:51.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.752" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:35:51.751" endtime="20201110 08:35:51.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.754" level="INFO">VALUE: [3.3526999999998475e-05, 3.320900000000279e-05, 3.4124999999999434e-05, 3.343000000000096e-05, 3.382000000000038e-05, 3.4138999999999003e-05, 3.318100000000018e-05, 3.350000000000228e-05, 3.41250000000029e-05, 3.319499999999975e-05, 3.3819000000000904e-05, 3.320799999999985e-05, 3.380600000000081e-05, 3.380600000000081e-05, 3.357000000000013e-05, 3.3512999999998905e-05, 3.320799999999985e-05, 3.348599999999924e-05, 3.3846999999996574e-05, 3.3805000000001334e-05, 3.379200000000124e-05, 3.322299999999889e-05, 3.380600000000081e-05, 3.350000000000228e-05, 3.4124999999999434e-05, 3.349999999999881e-05, 3.3804999999997865e-05, 3.322199999999942e-05, 3.320899999999932e-05, 3.351399999999838e-05, 3.4124999999999434e-05, 3.379200000000124e-05, 3.380600000000081e-05, 3.349999999999881e-05, 3.351400000000185e-05, 3.3819000000000904e-05, 3.351399999999838e-05, 3.351399999999838e-05, 3.320900000000279e-05, 3.3847000000000044e-05, 3.4124999999999434e-05, 3.4110999999999864e-05, 3.317999999999724e-05, 3.319499999999975e-05, 3.351399999999838e-05, 3.411199999999934e-05, 3.319400000000028e-05, 3.349999999999881e-05, 3.380600000000081e-05, 3.35839999999997e-05]</msg>
<status status="PASS" starttime="20201110 08:35:51.753" endtime="20201110 08:35:51.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.748" endtime="20201110 08:35:51.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.758" endtime="20201110 08:35:51.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:51.761" endtime="20201110 08:35:51.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.760" endtime="20201110 08:35:51.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.756" endtime="20201110 08:35:51.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.390" endtime="20201110 08:35:51.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.390" endtime="20201110 08:35:51.782"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.791" endtime="20201110 08:35:51.806"></status>
</kw>
<msg timestamp="20201110 08:35:51.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:51.789" endtime="20201110 08:35:51.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:51.808" endtime="20201110 08:35:51.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.810" endtime="20201110 08:35:51.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.787" endtime="20201110 08:35:51.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.785" endtime="20201110 08:35:51.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.820" endtime="20201110 08:35:52.107"></status>
</kw>
<msg timestamp="20201110 08:35:52.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:51.819" endtime="20201110 08:35:52.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.111" endtime="20201110 08:35:52.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.119" endtime="20201110 08:35:52.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.816" endtime="20201110 08:35:52.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.815" endtime="20201110 08:35:52.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:52.126" level="INFO">${RESULT} = [{'time': 0.019764556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.479199999999836e-05, 'source_diff': 4.479199999999836e-05}, {'time': 0.019813528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:52.123" endtime="20201110 08:35:52.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:52.141" level="INFO">${ACCURACY} = {'source_diff': [4.479199999999836e-05, 4.4181000000000775e-05, 4.424999999999915e-05, 4.4138999999998596e-05, 4.454200000000158e-05, 4.429200000000133e-05, 4.422200000000001e-05, 4.38060000000004e-05...</msg>
<status status="PASS" starttime="20201110 08:35:52.127" endtime="20201110 08:35:52.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.145" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:35:52.144" endtime="20201110 08:35:52.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.148" level="INFO">VALUE: [4.479199999999836e-05, 4.4181000000000775e-05, 4.424999999999915e-05, 4.4138999999998596e-05, 4.454200000000158e-05, 4.429200000000133e-05, 4.422200000000001e-05, 4.38060000000004e-05, 4.429099999999839e-05, 4.424999999999915e-05, 4.379100000000136e-05, 4.416600000000173e-05, 4.466599999999876e-05, 4.4374999999999276e-05, 4.4125000000002496e-05, 4.3846999999999636e-05, 4.38329999999966e-05, 4.3903000000001385e-05, 4.477799999999879e-05, 4.4083000000000316e-05, 4.423599999999958e-05, 4.4083000000000316e-05, 4.3888999999998346e-05, 4.479199999999836e-05, 4.4666999999998236e-05, 4.43060000000009e-05, 4.448599999999983e-05, 4.427800000000176e-05, 4.473600000000008e-05, 4.39999999999989e-05, 4.4416999999997986e-05, 4.424999999999915e-05, 4.422200000000001e-05, 4.427799999999829e-05, 4.426400000000219e-05, 4.44999999999994e-05, 4.46939999999979e-05, 4.4624999999999526e-05, 4.427799999999829e-05, 4.452799999999854e-05, 4.424999999999915e-05, 4.426399999999872e-05, 4.476399999999922e-05, 4.4152999999998166e-05, 4.4610999999999956e-05, 4.4333000000000566e-05, 4.44999999999994e-05, 4.4360999999999706e-05, 4.429199999999786e-05, 4.459799999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:35:52.146" endtime="20201110 08:35:52.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.141" endtime="20201110 08:35:52.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.151" endtime="20201110 08:35:52.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:52.155" endtime="20201110 08:35:52.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.153" endtime="20201110 08:35:52.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.150" endtime="20201110 08:35:52.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.783" endtime="20201110 08:35:52.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.783" endtime="20201110 08:35:52.176"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.184" endtime="20201110 08:35:52.201"></status>
</kw>
<msg timestamp="20201110 08:35:52.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:52.183" endtime="20201110 08:35:52.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:52.202" endtime="20201110 08:35:52.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.205" endtime="20201110 08:35:52.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.180" endtime="20201110 08:35:52.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.178" endtime="20201110 08:35:52.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.215" endtime="20201110 08:35:52.500"></status>
</kw>
<msg timestamp="20201110 08:35:52.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020018375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020063236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.213" endtime="20201110 08:35:52.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020018375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020063236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.505" endtime="20201110 08:35:52.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.513" endtime="20201110 08:35:52.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.211" endtime="20201110 08:35:52.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.209" endtime="20201110 08:35:52.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:52.520" level="INFO">${RESULT} = [{'time': 0.020063236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4861000000000206e-05, 'source_diff': 4.4861000000000206e-05}, {'time': 0.020113236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:52.516" endtime="20201110 08:35:52.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:52.533" level="INFO">${ACCURACY} = {'source_diff': [4.4861000000000206e-05, 4.5361000000000706e-05, 4.5430999999998556e-05, 4.548600000000083e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.497200000000076e-05, 4.488899999999934...</msg>
<status status="PASS" starttime="20201110 08:35:52.520" endtime="20201110 08:35:52.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.537" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:35:52.536" endtime="20201110 08:35:52.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.540" level="INFO">VALUE: [4.4861000000000206e-05, 4.5361000000000706e-05, 4.5430999999998556e-05, 4.548600000000083e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.497200000000076e-05, 4.4888999999999346e-05, 4.526399999999972e-05, 4.5722999999997516e-05, 4.5194999999997876e-05, 4.4889000000002816e-05, 4.5652999999999666e-05, 4.555600000000215e-05, 4.504099999999914e-05, 4.547199999999779e-05, 4.552700000000007e-05, 4.525000000000015e-05, 4.5111000000000456e-05, 4.529100000000286e-05, 4.5611000000000956e-05, 4.5639000000000096e-05, 4.555499999999921e-05, 4.497200000000076e-05, 4.5652999999999666e-05, 4.505600000000165e-05, 4.505600000000165e-05, 4.576399999999675e-05, 4.5652999999999666e-05, 4.5180999999998306e-05, 4.56939999999989e-05, 4.5444999999998126e-05, 4.53060000000019e-05, 4.541599999999951e-05, 4.5152999999999166e-05, 4.56939999999989e-05, 4.545800000000169e-05, 4.5347000000001136e-05, 4.53329999999981e-05, 4.527799999999929e-05, 4.484699999999717e-05, 4.480499999999846e-05, 4.523600000000058e-05, 4.544399999999865e-05, 4.5402999999999416e-05, 4.5639000000000096e-05, 4.575000000000065e-05, 4.4931000000001525e-05, 4.51939999999984e-05, 4.48329999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:35:52.538" endtime="20201110 08:35:52.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.534" endtime="20201110 08:35:52.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.543" endtime="20201110 08:35:52.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:52.547" endtime="20201110 08:35:52.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.545" endtime="20201110 08:35:52.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.542" endtime="20201110 08:35:52.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.177" endtime="20201110 08:35:52.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.176" endtime="20201110 08:35:52.569"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.577" endtime="20201110 08:35:52.594"></status>
</kw>
<msg timestamp="20201110 08:35:52.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:52.576" endtime="20201110 08:35:52.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:52.596" endtime="20201110 08:35:52.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.598" endtime="20201110 08:35:52.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.573" endtime="20201110 08:35:52.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.571" endtime="20201110 08:35:52.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.608" endtime="20201110 08:35:52.893"></status>
</kw>
<msg timestamp="20201110 08:35:52.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020770181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.607" endtime="20201110 08:35:52.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020770181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.898" endtime="20201110 08:35:52.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.906" endtime="20201110 08:35:52.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.604" endtime="20201110 08:35:52.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.602" endtime="20201110 08:35:52.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:52.913" level="INFO">${RESULT} = [{'time': 0.020816542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6361000000001706e-05, 'source_diff': 4.6361000000001706e-05}, {'time': 0.020866542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:52.909" endtime="20201110 08:35:52.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:52.926" level="INFO">${ACCURACY} = {'source_diff': [4.6361000000001706e-05, 4.661099999999849e-05, 4.659800000000186e-05, 4.6680999999999806e-05, 4.6680999999999806e-05, 4.602700000000057e-05, 4.654100000000064e-05, 4.677799999999732e-...</msg>
<status status="PASS" starttime="20201110 08:35:52.914" endtime="20201110 08:35:52.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.931" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:35:52.929" endtime="20201110 08:35:52.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.933" level="INFO">VALUE: [4.6361000000001706e-05, 4.661099999999849e-05, 4.659800000000186e-05, 4.6680999999999806e-05, 4.6680999999999806e-05, 4.602700000000057e-05, 4.654100000000064e-05, 4.677799999999732e-05, 4.623599999999811e-05, 4.6097000000001886e-05, 4.619400000000287e-05, 4.677800000000079e-05, 4.643000000000008e-05, 4.633400000000204e-05, 4.584699999999817e-05, 4.634699999999867e-05, 4.674999999999818e-05, 4.673599999999861e-05, 4.632000000000247e-05, 4.6194999999998876e-05, 4.6723000000001985e-05, 4.577799999999979e-05, 4.581899999999903e-05, 4.644399999999965e-05, 4.666600000000076e-05, 4.601400000000047e-05, 4.626400000000072e-05, 4.672199999999904e-05, 4.672199999999904e-05, 4.670799999999947e-05, 4.6611000000001956e-05, 4.597200000000176e-05, 4.617999999999983e-05, 4.6013999999997e-05, 4.6583000000002817e-05, 4.606899999999928e-05, 4.586099999999774e-05, 4.5847000000001636e-05, 4.5875000000000776e-05, 4.648599999999836e-05, 4.606999999999875e-05, 4.652700000000107e-05, 4.58199999999985e-05, 4.602800000000004e-05, 4.597200000000176e-05, 4.652800000000054e-05, 4.65139999999975e-05, 4.634799999999814e-05, 4.617999999999983e-05, 4.6097000000001886e-05]</msg>
<status status="PASS" starttime="20201110 08:35:52.932" endtime="20201110 08:35:52.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.927" endtime="20201110 08:35:52.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.937" endtime="20201110 08:35:52.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:52.940" endtime="20201110 08:35:52.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.938" endtime="20201110 08:35:52.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.935" endtime="20201110 08:35:52.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.570" endtime="20201110 08:35:52.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.569" endtime="20201110 08:35:52.961"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.969" endtime="20201110 08:35:52.985"></status>
</kw>
<msg timestamp="20201110 08:35:52.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:52.968" endtime="20201110 08:35:52.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:52.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:52.987" endtime="20201110 08:35:52.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.989" endtime="20201110 08:35:52.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.965" endtime="20201110 08:35:52.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.963" endtime="20201110 08:35:52.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:52.999" endtime="20201110 08:35:53.285"></status>
</kw>
<msg timestamp="20201110 08:35:53.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:52.998" endtime="20201110 08:35:53.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.289" endtime="20201110 08:35:53.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.297" endtime="20201110 08:35:53.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.995" endtime="20201110 08:35:53.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.993" endtime="20201110 08:35:53.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:53.304" level="INFO">${RESULT} = [{'time': 0.019800986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.763899999999863e-05, 'source_diff': 4.763899999999863e-05}, {'time': 0.01985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201110 08:35:53.300" endtime="20201110 08:35:53.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:53.317" level="INFO">${ACCURACY} = {'source_diff': [4.763899999999863e-05, 4.680599999999993e-05, 4.7153000000001166e-05, 4.690299999999745e-05, 4.7389000000001846e-05, 4.755600000000068e-05, 4.736099999999924e-05, 4.6917000000000486e-...</msg>
<status status="PASS" starttime="20201110 08:35:53.305" endtime="20201110 08:35:53.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.322" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:35:53.321" endtime="20201110 08:35:53.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.324" level="INFO">VALUE: [4.763899999999863e-05, 4.680599999999993e-05, 4.7153000000001166e-05, 4.690299999999745e-05, 4.7389000000001846e-05, 4.755600000000068e-05, 4.736099999999924e-05, 4.6917000000000486e-05, 4.7708999999999946e-05, 4.698599999999886e-05, 4.759799999999939e-05, 4.736199999999871e-05, 4.6889000000001346e-05, 4.708299999999985e-05, 4.723599999999911e-05, 4.741600000000151e-05, 4.6889000000001346e-05, 4.673600000000208e-05, 4.6889000000001346e-05, 4.720800000000344e-05, 4.7125000000002026e-05, 4.711099999999899e-05, 4.6917000000000486e-05, 4.773599999999961e-05, 4.7707999999997e-05, 4.729199999999739e-05, 4.755599999999721e-05, 4.729199999999739e-05, 4.6889000000001346e-05, 4.736099999999924e-05, 4.7722999999999516e-05, 4.71529999999977e-05, 4.6903000000000916e-05, 4.691600000000101e-05, 4.774999999999918e-05, 4.6847000000002637e-05, 4.743000000000108e-05, 4.7013999999998e-05, 4.677800000000079e-05, 4.681900000000003e-05, 4.759699999999992e-05, 4.712499999999856e-05, 4.68329999999996e-05, 4.690299999999745e-05, 4.7639000000002096e-05, 4.725000000000215e-05, 4.704199999999714e-05, 4.75000000000024e-05, 4.702799999999757e-05, 4.679200000000036e-05]</msg>
<status status="PASS" starttime="20201110 08:35:53.323" endtime="20201110 08:35:53.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.318" endtime="20201110 08:35:53.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.328" endtime="20201110 08:35:53.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:53.331" endtime="20201110 08:35:53.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.330" endtime="20201110 08:35:53.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.326" endtime="20201110 08:35:53.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.962" endtime="20201110 08:35:53.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:52.961" endtime="20201110 08:35:53.352"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.361" endtime="20201110 08:35:53.378"></status>
</kw>
<msg timestamp="20201110 08:35:53.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:53.359" endtime="20201110 08:35:53.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:53.379" endtime="20201110 08:35:53.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.382" endtime="20201110 08:35:53.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.356" endtime="20201110 08:35:53.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.354" endtime="20201110 08:35:53.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.392" endtime="20201110 08:35:53.677"></status>
</kw>
<msg timestamp="20201110 08:35:53.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.390" endtime="20201110 08:35:53.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.681" endtime="20201110 08:35:53.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.689" endtime="20201110 08:35:53.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.388" endtime="20201110 08:35:53.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.386" endtime="20201110 08:35:53.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:53.696" level="INFO">${RESULT} = [{'time': 0.019877389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.849999999999993e-05, 'source_diff': 4.849999999999993e-05}, {'time': 0.019928403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:53.693" endtime="20201110 08:35:53.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:53.710" level="INFO">${ACCURACY} = {'source_diff': [4.849999999999993e-05, 4.797200000000029e-05, 4.793000000000158e-05, 4.8194999999997407e-05, 4.813899999999913e-05, 4.8320000000001e-05, 4.8707999999998e-05, 4.78200000000005e-05, 4.8...</msg>
<status status="PASS" starttime="20201110 08:35:53.697" endtime="20201110 08:35:53.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.715" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:35:53.714" endtime="20201110 08:35:53.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.717" level="INFO">VALUE: [4.849999999999993e-05, 4.797200000000029e-05, 4.793000000000158e-05, 4.8194999999997407e-05, 4.813899999999913e-05, 4.8320000000001e-05, 4.8707999999998e-05, 4.78200000000005e-05, 4.866699999999877e-05, 4.777699999999885e-05, 4.813799999999965e-05, 4.876400000000322e-05, 4.816600000000226e-05, 4.7875000000002776e-05, 4.805500000000171e-05, 4.805500000000171e-05, 4.787499999999931e-05, 4.836100000000024e-05, 4.833400000000057e-05, 4.872200000000104e-05, 4.777799999999832e-05, 4.834700000000067e-05, 4.826399999999925e-05, 4.787499999999931e-05, 4.8723000000000516e-05, 4.862500000000006e-05, 4.802799999999857e-05, 4.8320000000001e-05, 4.813899999999913e-05, 4.811099999999999e-05, 4.861100000000049e-05, 4.854100000000264e-05, 4.78330000000006e-05, 4.790199999999897e-05, 4.868000000000233e-05, 4.867999999999886e-05, 4.8707999999998e-05, 4.813899999999913e-05, 4.847200000000079e-05, 4.780600000000093e-05, 4.822200000000054e-05, 4.797200000000029e-05, 4.777799999999832e-05, 4.788899999999888e-05, 4.773599999999961e-05, 4.83469999999972e-05, 4.816600000000226e-05, 4.875000000000018e-05, 4.779199999999789e-05, 4.859800000000039e-05]</msg>
<status status="PASS" starttime="20201110 08:35:53.716" endtime="20201110 08:35:53.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.711" endtime="20201110 08:35:53.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.721" endtime="20201110 08:35:53.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:53.724" endtime="20201110 08:35:53.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.723" endtime="20201110 08:35:53.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.719" endtime="20201110 08:35:53.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.353" endtime="20201110 08:35:53.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.352" endtime="20201110 08:35:53.745"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.754" endtime="20201110 08:35:53.770"></status>
</kw>
<msg timestamp="20201110 08:35:53.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:53.752" endtime="20201110 08:35:53.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:53.772" endtime="20201110 08:35:53.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.774" endtime="20201110 08:35:53.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.750" endtime="20201110 08:35:53.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.748" endtime="20201110 08:35:53.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.784" endtime="20201110 08:35:54.069"></status>
</kw>
<msg timestamp="20201110 08:35:54.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019975431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.782" endtime="20201110 08:35:54.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019975431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:54.074" endtime="20201110 08:35:54.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.082" endtime="20201110 08:35:54.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.780" endtime="20201110 08:35:54.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.778" endtime="20201110 08:35:54.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:54.090" level="INFO">${RESULT} = [{'time': 0.019975431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.954199999999964e-05, 'source_diff': 4.954199999999964e-05}, {'time': 0.020027389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:54.086" endtime="20201110 08:35:54.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:54.103" level="INFO">${ACCURACY} = {'source_diff': [4.954199999999964e-05, 4.926400000000025e-05, 4.888899999999988e-05, 4.9458999999998227e-05, 4.902799999999957e-05, 4.9472999999997797e-05, 4.888899999999988e-05, 4.911200000000046e-0...</msg>
<status status="PASS" starttime="20201110 08:35:54.091" endtime="20201110 08:35:54.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.107" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:35:54.106" endtime="20201110 08:35:54.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.110" level="INFO">VALUE: [4.954199999999964e-05, 4.926400000000025e-05, 4.888899999999988e-05, 4.9458999999998227e-05, 4.902799999999957e-05, 4.9472999999997797e-05, 4.888899999999988e-05, 4.911200000000046e-05, 4.944399999999918e-05, 4.905500000000271e-05, 4.962499999999759e-05, 4.892999999999911e-05, 4.96940000000029e-05, 4.969399999999943e-05, 4.925000000000068e-05, 4.96530000000002e-05, 4.9445000000002126e-05, 4.8931000000002056e-05, 4.887500000000031e-05, 4.926400000000025e-05, 4.9195000000001876e-05, 4.973600000000161e-05, 4.938900000000038e-05, 4.884700000000117e-05, 4.968099999999934e-05, 4.9223000000001016e-05, 4.937500000000081e-05, 4.96530000000002e-05, 4.913900000000013e-05, 4.965200000000072e-05, 4.9665999999996824e-05, 4.948599999999789e-05, 4.877699999999985e-05, 4.895799999999825e-05, 4.884700000000117e-05, 4.933299999999863e-05, 4.900000000000043e-05, 4.929199999999939e-05, 4.958299999999888e-05, 4.976399999999728e-05, 4.948599999999789e-05, 4.897199999999782e-05, 4.968099999999934e-05, 4.966699999999977e-05, 4.962499999999759e-05, 4.927799999999982e-05, 4.959799999999792e-05, 4.88880000000004e-05, 4.949999999999746e-05, 4.916599999999979e-05]</msg>
<status status="PASS" starttime="20201110 08:35:54.108" endtime="20201110 08:35:54.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.104" endtime="20201110 08:35:54.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.113" endtime="20201110 08:35:54.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:54.117" endtime="20201110 08:35:54.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.115" endtime="20201110 08:35:54.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.112" endtime="20201110 08:35:54.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.746" endtime="20201110 08:35:54.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.746" endtime="20201110 08:35:54.138"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.146" endtime="20201110 08:35:54.163"></status>
</kw>
<msg timestamp="20201110 08:35:54.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:54.145" endtime="20201110 08:35:54.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:54.165" endtime="20201110 08:35:54.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.167" endtime="20201110 08:35:54.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.142" endtime="20201110 08:35:54.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.140" endtime="20201110 08:35:54.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.177" endtime="20201110 08:35:54.461"></status>
</kw>
<msg timestamp="20201110 08:35:54.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020194014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:54.176" endtime="20201110 08:35:54.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020194014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:54.466" endtime="20201110 08:35:54.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.474" endtime="20201110 08:35:54.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.173" endtime="20201110 08:35:54.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.172" endtime="20201110 08:35:54.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:54.480" level="INFO">${RESULT} = [{'time': 0.020194014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.073599999999914e-05, 'source_diff': 5.073599999999914e-05}, {'time': 0.020250028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:54.477" endtime="20201110 08:35:54.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:54.494" level="INFO">${ACCURACY} = {'source_diff': [5.073599999999914e-05, 5.048599999999889e-05, 5.055600000000021e-05, 4.9986999999997866e-05, 5.012499999999809e-05, 5.059800000000239e-05, 5.0195000000002876e-05, 5.043100000000009e-0...</msg>
<status status="PASS" starttime="20201110 08:35:54.481" endtime="20201110 08:35:54.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.498" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:35:54.497" endtime="20201110 08:35:54.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.501" level="INFO">VALUE: [5.073599999999914e-05, 5.048599999999889e-05, 5.055600000000021e-05, 4.9986999999997866e-05, 5.012499999999809e-05, 5.059800000000239e-05, 5.0195000000002876e-05, 5.043100000000009e-05, 5.018099999999984e-05, 5.040300000000095e-05, 5.006899999999981e-05, 5.0652000000001723e-05, 5.055500000000074e-05, 5.068000000000086e-05, 5.013900000000113e-05, 5.027799999999735e-05, 5.008299999999938e-05, 5.068099999999687e-05, 5.02079999999995e-05, 5.027800000000082e-05, 5.055600000000021e-05, 4.997199999999882e-05, 5.0223000000002016e-05, 5.063899999999816e-05, 5.036100000000224e-05, 4.980599999999946e-05, 5.016700000000027e-05, 4.977800000000032e-05, 5.043100000000009e-05, 5.023599999999864e-05, 5.030499999999702e-05, 5.073599999999914e-05, 5.050000000000193e-05, 5.044400000000018e-05, 5.072199999999957e-05, 5.062499999999859e-05, 5.059699999999945e-05, 5.030599999999996e-05, 5.073599999999914e-05, 5.061099999999902e-05, 5.066700000000077e-05, 5.007000000000275e-05, 5.036100000000224e-05, 4.990300000000045e-05, 5.034700000000267e-05, 5.018099999999984e-05, 5.019499999999941e-05, 4.9945000000002626e-05, 4.979100000000042e-05, 4.990300000000045e-05]</msg>
<status status="PASS" starttime="20201110 08:35:54.499" endtime="20201110 08:35:54.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.495" endtime="20201110 08:35:54.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.504" endtime="20201110 08:35:54.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:54.508" endtime="20201110 08:35:54.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.506" endtime="20201110 08:35:54.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.503" endtime="20201110 08:35:54.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.139" endtime="20201110 08:35:54.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.138" endtime="20201110 08:35:54.529"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.537" endtime="20201110 08:35:54.554"></status>
</kw>
<msg timestamp="20201110 08:35:54.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:54.536" endtime="20201110 08:35:54.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:54.555" endtime="20201110 08:35:54.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.558" endtime="20201110 08:35:54.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.533" endtime="20201110 08:35:54.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.531" endtime="20201110 08:35:54.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.568" endtime="20201110 08:35:54.853"></status>
</kw>
<msg timestamp="20201110 08:35:54.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:54.566" endtime="20201110 08:35:54.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:54.857" endtime="20201110 08:35:54.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.866" endtime="20201110 08:35:54.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.563" endtime="20201110 08:35:54.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.562" endtime="20201110 08:35:54.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:54.872" level="INFO">${RESULT} = [{'time': 0.019840847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.105500000000124e-05, 'source_diff': 5.105500000000124e-05}, {'time': 0.019894806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:54.869" endtime="20201110 08:35:54.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:54.886" level="INFO">${ACCURACY} = {'source_diff': [5.105500000000124e-05, 5.086200000000221e-05, 5.08339999999996e-05, 5.102800000000157e-05, 5.104199999999767e-05, 5.1151999999998754e-05, 5.1193999999997464e-05, 5.122200000000007e-05...</msg>
<status status="PASS" starttime="20201110 08:35:54.873" endtime="20201110 08:35:54.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.890" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:35:54.889" endtime="20201110 08:35:54.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.892" level="INFO">VALUE: [5.105500000000124e-05, 5.086200000000221e-05, 5.08339999999996e-05, 5.102800000000157e-05, 5.104199999999767e-05, 5.1151999999998754e-05, 5.1193999999997464e-05, 5.122200000000007e-05, 5.162500000000306e-05, 5.140300000000195e-05, 5.108300000000038e-05, 5.176399999999928e-05, 5.154200000000164e-05, 5.172200000000057e-05, 5.109699999999995e-05, 5.163899999999916e-05, 5.154199999999817e-05, 5.080600000000046e-05, 5.173600000000014e-05, 5.165299999999873e-05, 5.154199999999817e-05, 5.157000000000078e-05, 5.094400000000068e-05, 5.08469999999997e-05, 5.1402000000002473e-05, 5.169400000000143e-05, 5.100000000000243e-05, 5.1415999999998574e-05, 5.0901999999998504e-05, 5.163899999999916e-05, 5.106900000000081e-05, 5.105500000000124e-05, 5.126400000000225e-05, 5.136099999999977e-05, 5.173699999999962e-05, 5.16530000000022e-05, 5.137499999999934e-05, 5.113900000000213e-05, 5.08339999999996e-05, 5.10279999999981e-05, 5.124999999999921e-05, 5.112499999999909e-05, 5.118100000000084e-05, 5.137499999999934e-05, 5.1014000000002e-05, 5.161100000000002e-05, 5.0887999999998934e-05, 5.179200000000189e-05, 5.141699999999805e-05, 5.173600000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:35:54.891" endtime="20201110 08:35:54.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.886" endtime="20201110 08:35:54.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.896" endtime="20201110 08:35:54.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:54.899" endtime="20201110 08:35:54.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.898" endtime="20201110 08:35:54.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.894" endtime="20201110 08:35:54.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.530" endtime="20201110 08:35:54.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.529" endtime="20201110 08:35:54.920"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.929" endtime="20201110 08:35:54.947"></status>
</kw>
<msg timestamp="20201110 08:35:54.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:54.927" endtime="20201110 08:35:54.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:54.948" endtime="20201110 08:35:54.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.951" endtime="20201110 08:35:54.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.925" endtime="20201110 08:35:54.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.923" endtime="20201110 08:35:54.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.961" endtime="20201110 08:35:55.248"></status>
</kw>
<msg timestamp="20201110 08:35:55.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020824097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:54.959" endtime="20201110 08:35:55.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020824097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:55.252" endtime="20201110 08:35:55.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.260" endtime="20201110 08:35:55.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.957" endtime="20201110 08:35:55.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.955" endtime="20201110 08:35:55.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.267" level="INFO">${RESULT} = [{'time': 0.020876, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.190299999999898e-05, 'source_diff': 5.190299999999898e-05}, {'time': 0.02093, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.18...</msg>
<status status="PASS" starttime="20201110 08:35:55.264" endtime="20201110 08:35:55.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:55.282" level="INFO">${ACCURACY} = {'source_diff': [5.190299999999898e-05, 5.180600000000146e-05, 5.183300000000113e-05, 5.2707999999998534e-05, 5.2735999999997674e-05, 5.226399999999978e-05, 5.275000000000071e-05, 5.209699999999748e-0...</msg>
<status status="PASS" starttime="20201110 08:35:55.268" endtime="20201110 08:35:55.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.286" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:35:55.285" endtime="20201110 08:35:55.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.289" level="INFO">VALUE: [5.190299999999898e-05, 5.180600000000146e-05, 5.183300000000113e-05, 5.2707999999998534e-05, 5.2735999999997674e-05, 5.226399999999978e-05, 5.275000000000071e-05, 5.209699999999748e-05, 5.199999999999996e-05, 5.186100000000027e-05, 5.220899999999751e-05, 5.237499999999687e-05, 5.26669999999993e-05, 5.259700000000145e-05, 5.20409999999992e-05, 5.2235999999997174e-05, 5.223600000000064e-05, 5.211100000000052e-05, 5.20279999999991e-05, 5.227800000000282e-05, 5.229099999999945e-05, 5.247200000000132e-05, 5.2693999999998964e-05, 5.232000000000153e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.227799999999935e-05, 5.238899999999991e-05, 5.256999999999831e-05, 5.191699999999855e-05, 5.177799999999885e-05, 5.187499999999984e-05, 5.202800000000257e-05, 5.187499999999984e-05, 5.277700000000038e-05, 5.223600000000064e-05, 5.177799999999885e-05, 5.250000000000046e-05, 5.259699999999798e-05, 5.180500000000199e-05, 5.265299999999973e-05, 5.2193999999998464e-05, 5.211199999999999e-05, 5.187499999999984e-05, 5.244499999999819e-05, 5.177799999999885e-05, 5.226399999999978e-05, 5.180600000000146e-05, 5.212500000000009e-05, 5.255499999999927e-05]</msg>
<status status="PASS" starttime="20201110 08:35:55.287" endtime="20201110 08:35:55.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.283" endtime="20201110 08:35:55.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.292" endtime="20201110 08:35:55.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:55.296" endtime="20201110 08:35:55.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.294" endtime="20201110 08:35:55.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.291" endtime="20201110 08:35:55.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.921" endtime="20201110 08:35:55.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.921" endtime="20201110 08:35:55.316"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.325" endtime="20201110 08:35:55.341"></status>
</kw>
<msg timestamp="20201110 08:35:55.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:55.323" endtime="20201110 08:35:55.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:55.343" endtime="20201110 08:35:55.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.345" endtime="20201110 08:35:55.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.321" endtime="20201110 08:35:55.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.319" endtime="20201110 08:35:55.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.355" endtime="20201110 08:35:55.642"></status>
</kw>
<msg timestamp="20201110 08:35:55.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.354" endtime="20201110 08:35:55.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.646" endtime="20201110 08:35:55.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.655" endtime="20201110 08:35:55.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.351" endtime="20201110 08:35:55.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.349" endtime="20201110 08:35:55.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.662" level="INFO">${RESULT} = [{'time': 0.019717861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.354200000000017e-05, 'source_diff': 5.354200000000017e-05}, {'time': 0.019776861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:55.658" endtime="20201110 08:35:55.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:55.675" level="INFO">${ACCURACY} = {'source_diff': [5.354200000000017e-05, 5.359699999999898e-05, 5.279200000000289e-05, 5.3721999999999104e-05, 5.3485999999998424e-05, 5.3749999999998244e-05, 5.331999999999906e-05, 5.294499999999869e-...</msg>
<status status="PASS" starttime="20201110 08:35:55.663" endtime="20201110 08:35:55.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.679" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:35:55.678" endtime="20201110 08:35:55.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.682" level="INFO">VALUE: [5.354200000000017e-05, 5.359699999999898e-05, 5.279200000000289e-05, 5.3721999999999104e-05, 5.3485999999998424e-05, 5.3749999999998244e-05, 5.331999999999906e-05, 5.294499999999869e-05, 5.363899999999769e-05, 5.3499999999997994e-05, 5.377800000000085e-05, 5.344499999999919e-05, 5.336199999999777e-05, 5.35280000000006e-05, 5.290299999999998e-05, 5.279099999999995e-05, 5.290299999999998e-05, 5.2943999999999214e-05, 5.313900000000066e-05, 5.3443999999999714e-05, 5.3235999999998174e-05, 5.337500000000134e-05, 5.281899999999909e-05, 5.3499999999997994e-05, 5.337500000000134e-05, 5.3527999999997133e-05, 5.319500000000241e-05, 5.284699999999823e-05, 5.294500000000216e-05, 5.338900000000091e-05, 5.286100000000127e-05, 5.329199999999992e-05, 5.322200000000207e-05, 5.327800000000035e-05, 5.333300000000263e-05, 5.3443999999999714e-05, 5.337499999999787e-05, 5.3263999999997313e-05, 5.3693999999999964e-05, 5.312500000000109e-05, 5.3735999999998674e-05, 5.344500000000266e-05, 5.3471999999998854e-05, 5.355599999999974e-05, 5.290299999999998e-05, 5.344500000000266e-05, 5.298600000000139e-05, 5.28470000000017e-05, 5.327800000000035e-05, 5.301400000000053e-05]</msg>
<status status="PASS" starttime="20201110 08:35:55.680" endtime="20201110 08:35:55.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.676" endtime="20201110 08:35:55.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.686" endtime="20201110 08:35:55.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:55.689" endtime="20201110 08:35:55.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.687" endtime="20201110 08:35:55.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.684" endtime="20201110 08:35:55.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.317" endtime="20201110 08:35:55.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.317" endtime="20201110 08:35:55.710"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.718" endtime="20201110 08:35:55.734"></status>
</kw>
<msg timestamp="20201110 08:35:55.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:55.717" endtime="20201110 08:35:55.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:55.736" endtime="20201110 08:35:55.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.739" endtime="20201110 08:35:55.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.714" endtime="20201110 08:35:55.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.712" endtime="20201110 08:35:55.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.749" endtime="20201110 08:35:56.034"></status>
</kw>
<msg timestamp="20201110 08:35:56.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.747" endtime="20201110 08:35:56.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:56.038" endtime="20201110 08:35:56.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.047" endtime="20201110 08:35:56.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.744" endtime="20201110 08:35:56.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.743" endtime="20201110 08:35:56.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:56.053" level="INFO">${RESULT} = [{'time': 0.019868917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.38609999999988e-05, 'source_diff': 5.38609999999988e-05}, {'time': 0.019928917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:56.050" endtime="20201110 08:35:56.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:56.067" level="INFO">${ACCURACY} = {'source_diff': [5.38609999999988e-05, 5.441700000000105e-05, 5.430600000000049e-05, 5.404200000000067e-05, 5.40280000000011e-05, 5.3916000000001074e-05, 5.462500000000259e-05, 5.4166000000001324e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:56.054" endtime="20201110 08:35:56.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.071" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:35:56.070" endtime="20201110 08:35:56.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.073" level="INFO">VALUE: [5.38609999999988e-05, 5.441700000000105e-05, 5.430600000000049e-05, 5.404200000000067e-05, 5.40280000000011e-05, 5.3916000000001074e-05, 5.462500000000259e-05, 5.4166000000001324e-05, 5.4666000000001824e-05, 5.4722000000000104e-05, 5.4527999999998134e-05, 5.387500000000184e-05, 5.4194000000000464e-05, 5.4499999999998994e-05, 5.409700000000295e-05, 5.422299999999908e-05, 5.469500000000044e-05, 5.387499999999837e-05, 5.376400000000128e-05, 5.432000000000006e-05, 5.463899999999869e-05, 5.447299999999933e-05, 5.440300000000148e-05, 5.390300000000098e-05, 5.465300000000173e-05, 5.4443999999997245e-05, 5.4138000000002184e-05, 5.4444000000000714e-05, 5.384699999999923e-05, 5.462499999999912e-05, 5.4735999999999674e-05, 5.3971999999999354e-05, 5.441699999999758e-05, 5.4221999999999604e-05, 5.4763999999998814e-05, 5.413900000000166e-05, 5.4749999999999244e-05, 5.451400000000203e-05, 5.43470000000032e-05, 5.376400000000128e-05, 5.468100000000087e-05, 5.408399999999938e-05, 5.412500000000209e-05, 5.461199999999902e-05, 5.411099999999905e-05, 5.4402000000002004e-05, 5.384699999999923e-05, 5.408299999999991e-05, 5.379100000000095e-05, 5.4722000000000104e-05]</msg>
<status status="PASS" starttime="20201110 08:35:56.072" endtime="20201110 08:35:56.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.067" endtime="20201110 08:35:56.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.103" endtime="20201110 08:35:56.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:56.107" endtime="20201110 08:35:56.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.105" endtime="20201110 08:35:56.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.101" endtime="20201110 08:35:56.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.711" endtime="20201110 08:35:56.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.710" endtime="20201110 08:35:56.129"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.145" endtime="20201110 08:35:56.163"></status>
</kw>
<msg timestamp="20201110 08:35:56.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:56.143" endtime="20201110 08:35:56.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:56.164" endtime="20201110 08:35:56.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.167" endtime="20201110 08:35:56.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.137" endtime="20201110 08:35:56.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.134" endtime="20201110 08:35:56.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.178" endtime="20201110 08:35:56.463"></status>
</kw>
<msg timestamp="20201110 08:35:56.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028276, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028330972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:56.176" endtime="20201110 08:35:56.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028276, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028330972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:56.467" endtime="20201110 08:35:56.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.476" endtime="20201110 08:35:56.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.173" endtime="20201110 08:35:56.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.171" endtime="20201110 08:35:56.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:56.483" level="INFO">${RESULT} = [{'time': 0.028330972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4972000000000354e-05, 'source_diff': 5.4972000000000354e-05}, {'time': 0.028391972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:56.479" endtime="20201110 08:35:56.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:56.497" level="INFO">${ACCURACY} = {'source_diff': [5.4972000000000354e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.508300000000091e-05, 5.479200000000142e-05, 5.491700000000155e-05, 5.522300000000008e-05, 5.5555999999998273e...</msg>
<status status="PASS" starttime="20201110 08:35:56.484" endtime="20201110 08:35:56.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.502" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:35:56.500" endtime="20201110 08:35:56.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.504" level="INFO">VALUE: [5.4972000000000354e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.508300000000091e-05, 5.479200000000142e-05, 5.491700000000155e-05, 5.522300000000008e-05, 5.5555999999998273e-05, 5.50280000000021e-05, 5.543100000000162e-05, 5.537499999999987e-05, 5.4944000000001214e-05, 5.5541999999998704e-05, 5.545900000000076e-05, 5.558300000000141e-05, 5.484700000000023e-05, 5.55549999999988e-05, 5.4957999999997315e-05, 5.534700000000073e-05, 5.479099999999848e-05, 5.48609999999998e-05, 5.5013999999999064e-05, 5.512499999999962e-05, 5.501400000000253e-05, 5.479200000000142e-05, 5.516699999999833e-05, 5.5750000000000244e-05, 5.520899999999704e-05, 5.534700000000073e-05, 5.516699999999833e-05, 5.570900000000101e-05, 5.548700000000337e-05, 5.543100000000162e-05, 5.530499999999855e-05, 5.493100000000112e-05, 5.5222000000000604e-05, 5.5236000000000174e-05, 5.493100000000112e-05, 5.5027999999998634e-05, 5.5208000000001034e-05, 5.484700000000023e-05, 5.512499999999962e-05, 5.5721999999997635e-05, 5.5750000000000244e-05, 5.5722000000001104e-05, 5.563899999999969e-05, 5.487499999999937e-05, 5.532000000000106e-05, 5.5236000000000174e-05, 5.533300000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:35:56.503" endtime="20201110 08:35:56.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.498" endtime="20201110 08:35:56.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.508" endtime="20201110 08:35:56.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:56.511" endtime="20201110 08:35:56.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.510" endtime="20201110 08:35:56.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.506" endtime="20201110 08:35:56.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.130" endtime="20201110 08:35:56.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.129" endtime="20201110 08:35:56.532"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.542" endtime="20201110 08:35:56.558"></status>
</kw>
<msg timestamp="20201110 08:35:56.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:56.540" endtime="20201110 08:35:56.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:56.559" endtime="20201110 08:35:56.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.562" endtime="20201110 08:35:56.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.537" endtime="20201110 08:35:56.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.535" endtime="20201110 08:35:56.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.572" endtime="20201110 08:35:56.878"></status>
</kw>
<msg timestamp="20201110 08:35:56.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020382931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:56.571" endtime="20201110 08:35:56.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020382931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:56.883" endtime="20201110 08:35:56.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.891" endtime="20201110 08:35:56.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.568" endtime="20201110 08:35:56.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.566" endtime="20201110 08:35:56.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:56.898" level="INFO">${RESULT} = [{'time': 0.020439042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611100000000105e-05, 'source_diff': 5.611100000000105e-05}, {'time': 0.020498, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:35:56.895" endtime="20201110 08:35:56.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:56.913" level="INFO">${ACCURACY} = {'source_diff': [5.611100000000105e-05, 5.584699999999776e-05, 5.605600000000224e-05, 5.6472000000001854e-05, 5.63480000000012e-05, 5.6764000000000814e-05, 5.620900000000151e-05, 5.644500000000219e-05...</msg>
<status status="PASS" starttime="20201110 08:35:56.899" endtime="20201110 08:35:56.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.918" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:35:56.917" endtime="20201110 08:35:56.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.921" level="INFO">VALUE: [5.611100000000105e-05, 5.584699999999776e-05, 5.605600000000224e-05, 5.6472000000001854e-05, 5.63480000000012e-05, 5.6764000000000814e-05, 5.620900000000151e-05, 5.644500000000219e-05, 5.656899999999937e-05, 5.601300000000059e-05, 5.6485999999997955e-05, 5.6152000000000285e-05, 5.579099999999948e-05, 5.631899999999912e-05, 5.6735999999998205e-05, 5.6250000000000744e-05, 5.6443999999999245e-05, 5.5986000000000924e-05, 5.6250000000000744e-05, 5.661100000000155e-05, 5.6500000000000994e-05, 5.6735999999998205e-05, 5.641699999999958e-05, 5.66809999999994e-05, 5.6305999999999023e-05, 5.619499999999847e-05, 5.630499999999955e-05, 5.6014000000000064e-05, 5.5777999999999384e-05, 5.6250000000000744e-05, 5.606900000000234e-05, 5.656899999999937e-05, 5.60549999999993e-05, 5.6750000000001244e-05, 5.6179999999999425e-05, 5.656899999999937e-05, 5.631899999999912e-05, 5.6443999999999245e-05, 5.588899999999994e-05, 5.659699999999851e-05, 5.6027999999999634e-05, 5.593100000000212e-05, 5.64870000000009e-05, 5.6736000000001674e-05, 5.663900000000069e-05, 5.63619999999973e-05, 5.5971999999997885e-05, 5.662500000000112e-05, 5.6264000000000314e-05, 5.6721999999998635e-05]</msg>
<status status="PASS" starttime="20201110 08:35:56.919" endtime="20201110 08:35:56.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.914" endtime="20201110 08:35:56.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.924" endtime="20201110 08:35:56.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:56.928" endtime="20201110 08:35:56.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.926" endtime="20201110 08:35:56.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.923" endtime="20201110 08:35:56.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.533" endtime="20201110 08:35:56.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.533" endtime="20201110 08:35:56.949"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.958" endtime="20201110 08:35:56.975"></status>
</kw>
<msg timestamp="20201110 08:35:56.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:56.956" endtime="20201110 08:35:56.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:56.976" endtime="20201110 08:35:56.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.979" endtime="20201110 08:35:56.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.954" endtime="20201110 08:35:56.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.952" endtime="20201110 08:35:56.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.989" endtime="20201110 08:35:57.280"></status>
</kw>
<msg timestamp="20201110 08:35:57.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020776625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020833458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:56.988" endtime="20201110 08:35:57.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020776625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020833458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.284" endtime="20201110 08:35:57.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.293" endtime="20201110 08:35:57.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.985" endtime="20201110 08:35:57.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.983" endtime="20201110 08:35:57.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:57.300" level="INFO">${RESULT} = [{'time': 0.020833458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.683299999999919e-05, 'source_diff': 5.683299999999919e-05}, {'time': 0.020892472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:57.296" endtime="20201110 08:35:57.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:57.314" level="INFO">${ACCURACY} = {'source_diff': [5.683299999999919e-05, 5.679099999999701e-05, 5.7499999999998525e-05, 5.7694000000000495e-05, 5.706899999999987e-05, 5.765300000000126e-05, 5.68610000000018e-05, 5.7028000000000634e-0...</msg>
<status status="PASS" starttime="20201110 08:35:57.301" endtime="20201110 08:35:57.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.319" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:35:57.317" endtime="20201110 08:35:57.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.321" level="INFO">VALUE: [5.683299999999919e-05, 5.679099999999701e-05, 5.7499999999998525e-05, 5.7694000000000495e-05, 5.706899999999987e-05, 5.765300000000126e-05, 5.68610000000018e-05, 5.7028000000000634e-05, 5.713899999999772e-05, 5.736099999999883e-05, 5.686099999999833e-05, 5.766700000000083e-05, 5.6819999999999093e-05, 5.754099999999776e-05, 5.7249999999998274e-05, 5.7665999999997886e-05, 5.763899999999822e-05, 5.7500000000001994e-05, 5.7735999999999205e-05, 5.743100000000015e-05, 5.7485999999998955e-05, 5.719499999999947e-05, 5.7292000000000454e-05, 5.709700000000248e-05, 5.7306000000000024e-05, 5.7556000000000274e-05, 5.758299999999994e-05, 5.6735999999998205e-05, 5.7583999999999413e-05, 5.6791999999999954e-05, 5.7264000000001314e-05, 5.7401999999998066e-05, 5.752699999999819e-05, 5.704100000000073e-05, 5.7221999999999135e-05, 5.7806000000000524e-05, 5.761099999999908e-05, 5.6985999999998455e-05, 5.7708000000000065e-05, 5.7583999999999413e-05, 5.73749999999984e-05, 5.7500000000001994e-05, 5.6805999999999524e-05, 5.76810000000004e-05, 5.737500000000187e-05, 5.7556000000000274e-05, 5.697299999999836e-05, 5.681899999999962e-05, 5.734799999999873e-05, 5.759699999999951e-05]</msg>
<status status="PASS" starttime="20201110 08:35:57.320" endtime="20201110 08:35:57.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.315" endtime="20201110 08:35:57.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.325" endtime="20201110 08:35:57.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:57.328" endtime="20201110 08:35:57.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.327" endtime="20201110 08:35:57.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.323" endtime="20201110 08:35:57.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.950" endtime="20201110 08:35:57.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.949" endtime="20201110 08:35:57.350"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.359" endtime="20201110 08:35:57.376"></status>
</kw>
<msg timestamp="20201110 08:35:57.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:57.357" endtime="20201110 08:35:57.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:57.378" endtime="20201110 08:35:57.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.380" endtime="20201110 08:35:57.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.354" endtime="20201110 08:35:57.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.352" endtime="20201110 08:35:57.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.391" endtime="20201110 08:35:57.677"></status>
</kw>
<msg timestamp="20201110 08:35:57.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020567069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.389" endtime="20201110 08:35:57.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020567069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.681" endtime="20201110 08:35:57.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.690" endtime="20201110 08:35:57.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.387" endtime="20201110 08:35:57.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.385" endtime="20201110 08:35:57.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:57.697" level="INFO">${RESULT} = [{'time': 0.020567069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8151999999998816e-05, 'source_diff': 5.8151999999998816e-05}, {'time': 0.020629069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:57.693" endtime="20201110 08:35:57.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:57.710" level="INFO">${ACCURACY} = {'source_diff': [5.8151999999998816e-05, 5.8665999999998886e-05, 5.801299999999912e-05, 5.8430000000001675e-05, 5.854100000000223e-05, 5.8194000000000995e-05, 5.8736000000000205e-05, 5.777799999999791...</msg>
<status status="PASS" starttime="20201110 08:35:57.698" endtime="20201110 08:35:57.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.715" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:35:57.714" endtime="20201110 08:35:57.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.718" level="INFO">VALUE: [5.8151999999998816e-05, 5.8665999999998886e-05, 5.801299999999912e-05, 5.8430000000001675e-05, 5.854100000000223e-05, 5.8194000000000995e-05, 5.8736000000000205e-05, 5.7777999999997914e-05, 5.790300000000151e-05, 5.7708000000000065e-05, 5.8763999999999345e-05, 5.7999999999999025e-05, 5.783300000000019e-05, 5.8041999999997734e-05, 5.8792000000001954e-05, 5.8056000000000774e-05, 5.836099999999983e-05, 5.8499999999999525e-05, 5.8694000000001495e-05, 5.7971999999999885e-05, 5.8485999999999955e-05, 5.859700000000051e-05, 5.7915999999998136e-05, 5.852699999999919e-05, 5.858300000000094e-05, 5.813899999999872e-05, 5.7791999999997484e-05, 5.809700000000001e-05, 5.8263999999998844e-05, 5.843099999999768e-05, 5.8249999999999275e-05, 5.783300000000019e-05, 5.8083999999999913e-05, 5.8291999999997984e-05, 5.83619999999993e-05, 5.820900000000004e-05, 5.7778000000001384e-05, 5.7971999999999885e-05, 5.7971999999999885e-05, 5.861100000000008e-05, 5.7971999999999885e-05, 5.8528000000002134e-05, 5.8250000000002744e-05, 5.865299999999879e-05, 5.8736000000000205e-05, 5.859699999999704e-05, 5.790299999999804e-05, 5.7958000000000315e-05, 5.8527999999998664e-05, 5.836099999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:35:57.716" endtime="20201110 08:35:57.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.711" endtime="20201110 08:35:57.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.722" endtime="20201110 08:35:57.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:57.725" endtime="20201110 08:35:57.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.724" endtime="20201110 08:35:57.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.720" endtime="20201110 08:35:57.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.351" endtime="20201110 08:35:57.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.350" endtime="20201110 08:35:57.746"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.755" endtime="20201110 08:35:57.773"></status>
</kw>
<msg timestamp="20201110 08:35:57.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:57.754" endtime="20201110 08:35:57.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:57.775" endtime="20201110 08:35:57.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.777" endtime="20201110 08:35:57.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.751" endtime="20201110 08:35:57.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.749" endtime="20201110 08:35:57.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.788" endtime="20201110 08:35:58.075"></status>
</kw>
<msg timestamp="20201110 08:35:58.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020547194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.786" endtime="20201110 08:35:58.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020547194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.079" endtime="20201110 08:35:58.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.087" endtime="20201110 08:35:58.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.784" endtime="20201110 08:35:58.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.782" endtime="20201110 08:35:58.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.094" level="INFO">${RESULT} = [{'time': 0.020547194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9151999999999816e-05, 'source_diff': 5.9151999999999816e-05}, {'time': 0.020611208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:58.091" endtime="20201110 08:35:58.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:58.108" level="INFO">${ACCURACY} = {'source_diff': [5.9151999999999816e-05, 5.884699999999729e-05, 5.962500000000065e-05, 5.890299999999904e-05, 5.879099999999901e-05, 5.931899999999865e-05, 5.9179999999998956e-05, 5.8957999999997845e-...</msg>
<status status="PASS" starttime="20201110 08:35:58.096" endtime="20201110 08:35:58.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.113" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:35:58.112" endtime="20201110 08:35:58.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.116" level="INFO">VALUE: [5.9151999999999816e-05, 5.884699999999729e-05, 5.962500000000065e-05, 5.890299999999904e-05, 5.879099999999901e-05, 5.931899999999865e-05, 5.9179999999998956e-05, 5.8957999999997845e-05, 5.938899999999997e-05, 5.9500000000000525e-05, 5.9472000000001385e-05, 5.895900000000079e-05, 5.883300000000119e-05, 5.888900000000294e-05, 5.9348000000000734e-05, 5.9598000000000984e-05, 5.947300000000086e-05, 5.8848000000000233e-05, 5.9777999999999915e-05, 5.905499999999883e-05, 5.9708000000002065e-05, 5.9000000000000025e-05, 5.9027999999999164e-05, 5.9041999999998734e-05, 5.9013999999999595e-05, 5.9542000000002704e-05, 5.934700000000126e-05, 5.890300000000251e-05, 5.920900000000104e-05, 5.9348000000000734e-05, 5.941699999999911e-05, 5.9250000000000275e-05, 5.9027999999999164e-05, 5.8749999999999775e-05, 5.916700000000233e-05, 5.959700000000151e-05, 5.9138000000000246e-05, 5.9693999999999026e-05, 5.908299999999797e-05, 5.9486000000000955e-05, 5.9415999999999636e-05, 5.9250000000000275e-05, 5.9486000000000955e-05, 5.966700000000283e-05, 5.8957999999997845e-05, 5.893100000000165e-05, 5.9193999999998526e-05, 5.9736000000001205e-05, 5.9070000000001344e-05, 5.891699999999861e-05]</msg>
<status status="PASS" starttime="20201110 08:35:58.114" endtime="20201110 08:35:58.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.109" endtime="20201110 08:35:58.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.119" endtime="20201110 08:35:58.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:58.123" endtime="20201110 08:35:58.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.121" endtime="20201110 08:35:58.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.118" endtime="20201110 08:35:58.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.747" endtime="20201110 08:35:58.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.747" endtime="20201110 08:35:58.144"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.154" endtime="20201110 08:35:58.171"></status>
</kw>
<msg timestamp="20201110 08:35:58.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:58.152" endtime="20201110 08:35:58.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:58.173" endtime="20201110 08:35:58.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.175" endtime="20201110 08:35:58.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.149" endtime="20201110 08:35:58.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.147" endtime="20201110 08:35:58.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.186" endtime="20201110 08:35:58.473"></status>
</kw>
<msg timestamp="20201110 08:35:58.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021140014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.184" endtime="20201110 08:35:58.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021140014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.477" endtime="20201110 08:35:58.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.486" endtime="20201110 08:35:58.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.181" endtime="20201110 08:35:58.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.180" endtime="20201110 08:35:58.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.493" level="INFO">${RESULT} = [{'time': 0.021140014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.013899999999725e-05, 'source_diff': 6.013899999999725e-05}, {'time': 0.021205014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:58.489" endtime="20201110 08:35:58.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:58.508" level="INFO">${ACCURACY} = {'source_diff': [6.013899999999725e-05, 6.034700000000226e-05, 6.061099999999861e-05, 6.068099999999993e-05, 5.986100000000133e-05, 6.0263999999997375e-05, 6.0362000000001304e-05, 5.994499999999875e-0...</msg>
<status status="PASS" starttime="20201110 08:35:58.494" endtime="20201110 08:35:58.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.512" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:35:58.511" endtime="20201110 08:35:58.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.515" level="INFO">VALUE: [6.013899999999725e-05, 6.034700000000226e-05, 6.061099999999861e-05, 6.068099999999993e-05, 5.986100000000133e-05, 6.0263999999997375e-05, 6.0362000000001304e-05, 5.994499999999875e-05, 6.0471999999998916e-05, 6.03750000000014e-05, 5.979100000000001e-05, 5.979100000000001e-05, 6.062500000000165e-05, 6.040300000000054e-05, 5.990300000000004e-05, 6.034700000000226e-05, 6.066700000000036e-05, 5.9986000000001455e-05, 6.062500000000165e-05, 6.068099999999993e-05, 6.0014000000000595e-05, 5.988900000000047e-05, 6.0569999999999374e-05, 5.9972000000001885e-05, 6.0014000000000595e-05, 6.0528000000000665e-05, 6.0416000000000636e-05, 6.013900000000072e-05, 6.0555999999999804e-05, 6.0430000000000206e-05, 5.9972000000001885e-05, 6.034700000000226e-05, 6.040300000000054e-05, 6.0000000000001025e-05, 5.988900000000047e-05, 6.0014000000000595e-05, 6.0721999999999166e-05, 6.036100000000183e-05, 6.0556000000003274e-05, 5.990300000000004e-05, 6.018099999999943e-05, 6.0291999999999984e-05, 6.0457999999999346e-05, 5.986100000000133e-05, 6.0708000000003065e-05, 5.984699999999829e-05, 6.0193999999999526e-05, 6.058299999999947e-05, 5.980499999999958e-05, 5.9791999999999484e-05]</msg>
<status status="PASS" starttime="20201110 08:35:58.514" endtime="20201110 08:35:58.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.509" endtime="20201110 08:35:58.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.519" endtime="20201110 08:35:58.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:58.523" endtime="20201110 08:35:58.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.521" endtime="20201110 08:35:58.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.517" endtime="20201110 08:35:58.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.146" endtime="20201110 08:35:58.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.145" endtime="20201110 08:35:58.544"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.553" endtime="20201110 08:35:58.569"></status>
</kw>
<msg timestamp="20201110 08:35:58.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:58.551" endtime="20201110 08:35:58.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:58.571" endtime="20201110 08:35:58.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.573" endtime="20201110 08:35:58.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.548" endtime="20201110 08:35:58.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.546" endtime="20201110 08:35:58.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.586" endtime="20201110 08:35:58.872"></status>
</kw>
<msg timestamp="20201110 08:35:58.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020357903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.584" endtime="20201110 08:35:58.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020357903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.877" endtime="20201110 08:35:58.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.885" endtime="20201110 08:35:58.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.581" endtime="20201110 08:35:58.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.579" endtime="20201110 08:35:58.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.892" level="INFO">${RESULT} = [{'time': 0.020419111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.12080000000001e-05, 'source_diff': 6.12080000000001e-05}, {'time': 0.020486111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:35:58.889" endtime="20201110 08:35:58.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:58.906" level="INFO">${ACCURACY} = {'source_diff': [6.12080000000001e-05, 6.118000000000096e-05, 6.173599999999974e-05, 6.119400000000053e-05, 6.12080000000001e-05, 6.115300000000129e-05, 6.106999999999987e-05, 6.090300000000104e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:35:58.893" endtime="20201110 08:35:58.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.911" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:35:58.910" endtime="20201110 08:35:58.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.913" level="INFO">VALUE: [6.12080000000001e-05, 6.118000000000096e-05, 6.173599999999974e-05, 6.119400000000053e-05, 6.12080000000001e-05, 6.115300000000129e-05, 6.106999999999987e-05, 6.090300000000104e-05, 6.129200000000098e-05, 6.172299999999964e-05, 6.115300000000129e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.154100000000176e-05, 6.106899999999693e-05, 6.12499999999988e-05, 6.131900000000065e-05, 6.090300000000104e-05, 6.17499999999993e-05, 6.140300000000154e-05, 6.119400000000053e-05, 6.112499999999868e-05, 6.127800000000141e-05, 6.091700000000061e-05, 6.111199999999858e-05, 6.122199999999967e-05, 6.161099999999961e-05, 6.177800000000191e-05, 6.17499999999993e-05, 6.116599999999792e-05, 6.133300000000022e-05, 6.131899999999718e-05, 6.167999999999799e-05, 6.168099999999746e-05, 6.144500000000025e-05, 6.165299999999832e-05, 6.134699999999979e-05, 6.1013999999998125e-05, 6.126400000000184e-05, 6.149999999999906e-05, 6.0888999999998e-05, 6.165300000000179e-05, 6.112500000000215e-05, 6.14019999999986e-05, 6.13889999999985e-05, 6.0957999999999846e-05, 6.172200000000017e-05, 6.0957999999999846e-05, 6.172200000000017e-05, 6.086099999999886e-05]</msg>
<status status="PASS" starttime="20201110 08:35:58.912" endtime="20201110 08:35:58.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.907" endtime="20201110 08:35:58.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.917" endtime="20201110 08:35:58.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:58.921" endtime="20201110 08:35:58.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.919" endtime="20201110 08:35:58.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.915" endtime="20201110 08:35:58.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.545" endtime="20201110 08:35:58.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.544" endtime="20201110 08:35:58.942"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.951" endtime="20201110 08:35:58.968"></status>
</kw>
<msg timestamp="20201110 08:35:58.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:58.949" endtime="20201110 08:35:58.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:58.970" endtime="20201110 08:35:58.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.973" endtime="20201110 08:35:58.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.946" endtime="20201110 08:35:58.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.944" endtime="20201110 08:35:58.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.983" endtime="20201110 08:35:59.269"></status>
</kw>
<msg timestamp="20201110 08:35:59.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.981" endtime="20201110 08:35:59.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:59.274" endtime="20201110 08:35:59.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.282" endtime="20201110 08:35:59.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.979" endtime="20201110 08:35:59.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.977" endtime="20201110 08:35:59.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:59.289" level="INFO">${RESULT} = [{'time': 0.020489583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180499999999811e-05, 'source_diff': 6.180499999999811e-05}, {'time': 0.020557597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:59.286" endtime="20201110 08:35:59.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:59.303" level="INFO">${ACCURACY} = {'source_diff': [6.180499999999811e-05, 6.222200000000067e-05, 6.230500000000208e-05, 6.230600000000155e-05, 6.272200000000117e-05, 6.272200000000117e-05, 6.218099999999796e-05, 6.2195000000001e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:35:59.290" endtime="20201110 08:35:59.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.308" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:35:59.307" endtime="20201110 08:35:59.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.311" level="INFO">VALUE: [6.180499999999811e-05, 6.222200000000067e-05, 6.230500000000208e-05, 6.230600000000155e-05, 6.272200000000117e-05, 6.272200000000117e-05, 6.218099999999796e-05, 6.2195000000001e-05, 6.236099999999689e-05, 6.194500000000075e-05, 6.236099999999689e-05, 6.22499999999998e-05, 6.213799999999978e-05, 6.266699999999889e-05, 6.173599999999974e-05, 6.241600000000264e-05, 6.254099999999929e-05, 6.230499999999861e-05, 6.250000000000006e-05, 6.192999999999824e-05, 6.219399999999806e-05, 6.182000000000062e-05, 6.199999999999956e-05, 6.204200000000173e-05, 6.191699999999814e-05, 6.245899999999735e-05, 6.237499999999993e-05, 6.230600000000155e-05, 6.204199999999827e-05, 6.22499999999998e-05, 6.241599999999917e-05, 6.229100000000251e-05, 6.212499999999968e-05, 6.261100000000061e-05, 6.269399999999856e-05, 6.1888999999999e-05, 6.27500000000003e-05, 6.248600000000049e-05, 6.265300000000279e-05, 6.250000000000006e-05, 6.241699999999864e-05, 6.191700000000161e-05, 6.1888999999999e-05, 6.272300000000064e-05, 6.25560000000018e-05, 6.230499999999861e-05, 6.22499999999998e-05, 6.184700000000029e-05, 6.27630000000004e-05, 6.209700000000054e-05]</msg>
<status status="PASS" starttime="20201110 08:35:59.309" endtime="20201110 08:35:59.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.304" endtime="20201110 08:35:59.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.314" endtime="20201110 08:35:59.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:59.318" endtime="20201110 08:35:59.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.316" endtime="20201110 08:35:59.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.313" endtime="20201110 08:35:59.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.943" endtime="20201110 08:35:59.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.942" endtime="20201110 08:35:59.339"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.348" endtime="20201110 08:35:59.366"></status>
</kw>
<msg timestamp="20201110 08:35:59.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:59.347" endtime="20201110 08:35:59.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:59.368" endtime="20201110 08:35:59.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.370" endtime="20201110 08:35:59.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.344" endtime="20201110 08:35:59.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.342" endtime="20201110 08:35:59.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.381" endtime="20201110 08:35:59.667"></status>
</kw>
<msg timestamp="20201110 08:35:59.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021167958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021231458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:59.379" endtime="20201110 08:35:59.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021167958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021231458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:59.671" endtime="20201110 08:35:59.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.680" endtime="20201110 08:35:59.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.376" endtime="20201110 08:35:59.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.375" endtime="20201110 08:35:59.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:59.687" level="INFO">${RESULT} = [{'time': 0.021231458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.350000000000106e-05, 'source_diff': 6.350000000000106e-05}, {'time': 0.021299472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:59.683" endtime="20201110 08:35:59.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:59.701" level="INFO">${ACCURACY} = {'source_diff': [6.350000000000106e-05, 6.330499999999961e-05, 6.356899999999943e-05, 6.350000000000106e-05, 6.330499999999961e-05, 6.287500000000043e-05, 6.348600000000149e-05, 6.300000000000056e-05,...</msg>
<status status="PASS" starttime="20201110 08:35:59.688" endtime="20201110 08:35:59.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.706" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:35:59.705" endtime="20201110 08:35:59.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.708" level="INFO">VALUE: [6.350000000000106e-05, 6.330499999999961e-05, 6.356899999999943e-05, 6.350000000000106e-05, 6.330499999999961e-05, 6.287500000000043e-05, 6.348600000000149e-05, 6.300000000000056e-05, 6.373600000000174e-05, 6.276399999999988e-05, 6.341600000000017e-05, 6.366699999999989e-05, 6.284699999999782e-05, 6.336199999999736e-05, 6.342999999999974e-05, 6.298600000000099e-05, 6.308300000000197e-05, 6.354100000000029e-05, 6.326400000000038e-05, 6.347199999999845e-05, 6.311099999999764e-05, 6.324999999999734e-05, 6.337500000000093e-05, 6.341699999999964e-05, 6.32500000000008e-05, 6.359700000000204e-05, 6.35699999999989e-05, 6.315299999999982e-05, 6.373600000000174e-05, 6.354200000000323e-05, 6.365200000000085e-05, 6.34439999999993e-05, 6.350000000000106e-05, 6.281899999999868e-05, 6.279099999999954e-05, 6.345799999999888e-05, 6.317999999999949e-05, 6.297300000000089e-05, 6.337500000000093e-05, 6.33890000000005e-05, 6.329200000000298e-05, 6.361099999999814e-05, 6.323600000000124e-05, 6.331900000000265e-05, 6.362500000000118e-05, 6.28479999999973e-05, 6.295799999999838e-05, 6.302700000000022e-05, 6.2889e-05, 6.313900000000025e-05]</msg>
<status status="PASS" starttime="20201110 08:35:59.707" endtime="20201110 08:35:59.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.702" endtime="20201110 08:35:59.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.712" endtime="20201110 08:35:59.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:59.716" endtime="20201110 08:35:59.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.714" endtime="20201110 08:35:59.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.710" endtime="20201110 08:35:59.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.340" endtime="20201110 08:35:59.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.339" endtime="20201110 08:35:59.737"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.746" endtime="20201110 08:35:59.763"></status>
</kw>
<msg timestamp="20201110 08:35:59.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:59.744" endtime="20201110 08:35:59.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:59.765" endtime="20201110 08:35:59.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.768" endtime="20201110 08:35:59.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.741" endtime="20201110 08:35:59.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.739" endtime="20201110 08:35:59.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.778" endtime="20201110 08:36:00.064"></status>
</kw>
<msg timestamp="20201110 08:36:00.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020902625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:59.776" endtime="20201110 08:36:00.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020902625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.068" endtime="20201110 08:36:00.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.077" endtime="20201110 08:36:00.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.774" endtime="20201110 08:36:00.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.772" endtime="20201110 08:36:00.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.084" level="INFO">${RESULT} = [{'time': 0.020902625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.386100000000186e-05, 'source_diff': 6.386100000000186e-05}, {'time': 0.020971639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:00.080" endtime="20201110 08:36:00.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:00.099" level="INFO">${ACCURACY} = {'source_diff': [6.386100000000186e-05, 6.395799999999938e-05, 6.445799999999988e-05, 6.45699999999999e-05, 6.448600000000249e-05, 6.411099999999864e-05, 6.3889000000001e-05, 6.449999999999859e-05, 6....</msg>
<status status="PASS" starttime="20201110 08:36:00.085" endtime="20201110 08:36:00.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.104" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:36:00.103" endtime="20201110 08:36:00.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.106" level="INFO">VALUE: [6.386100000000186e-05, 6.395799999999938e-05, 6.445799999999988e-05, 6.45699999999999e-05, 6.448600000000249e-05, 6.411099999999864e-05, 6.3889000000001e-05, 6.449999999999859e-05, 6.397200000000242e-05, 6.413900000000125e-05, 6.476400000000188e-05, 6.45280000000012e-05, 6.436099999999889e-05, 6.449999999999859e-05, 6.447199999999945e-05, 6.397199999999895e-05, 6.419499999999953e-05, 6.386099999999839e-05, 6.383299999999925e-05, 6.405599999999984e-05, 6.449999999999859e-05, 6.437499999999846e-05, 6.454200000000077e-05, 6.436200000000183e-05, 6.420799999999963e-05, 6.450000000000206e-05, 6.406899999999993e-05, 6.3889000000001e-05, 6.401399999999766e-05, 6.401399999999766e-05, 6.479200000000102e-05, 6.462499999999871e-05, 6.430600000000009e-05, 6.443100000000021e-05, 6.372200000000217e-05, 6.383399999999873e-05, 6.387500000000143e-05, 6.468099999999699e-05, 6.381999999999916e-05, 6.438799999999856e-05, 6.465199999999838e-05, 6.380500000000011e-05, 6.420799999999963e-05, 6.384699999999882e-05, 6.479199999999755e-05, 6.447199999999945e-05, 6.437499999999846e-05, 6.401400000000113e-05, 6.394499999999928e-05, 6.418099999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:36:00.105" endtime="20201110 08:36:00.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.100" endtime="20201110 08:36:00.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.110" endtime="20201110 08:36:00.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:00.113" endtime="20201110 08:36:00.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.112" endtime="20201110 08:36:00.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.108" endtime="20201110 08:36:00.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.738" endtime="20201110 08:36:00.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.737" endtime="20201110 08:36:00.135"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.144" endtime="20201110 08:36:00.161"></status>
</kw>
<msg timestamp="20201110 08:36:00.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:00.142" endtime="20201110 08:36:00.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:00.163" endtime="20201110 08:36:00.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.166" endtime="20201110 08:36:00.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.139" endtime="20201110 08:36:00.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.137" endtime="20201110 08:36:00.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.177" endtime="20201110 08:36:00.463"></status>
</kw>
<msg timestamp="20201110 08:36:00.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020876153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020941222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.176" endtime="20201110 08:36:00.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020876153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020941222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.467" endtime="20201110 08:36:00.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.476" endtime="20201110 08:36:00.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.173" endtime="20201110 08:36:00.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.170" endtime="20201110 08:36:00.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.482" level="INFO">${RESULT} = [{'time': 0.020941222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.506899999999746e-05, 'source_diff': 6.506899999999746e-05}, {'time': 0.02101025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:00.479" endtime="20201110 08:36:00.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:00.496" level="INFO">${ACCURACY} = {'source_diff': [6.506899999999746e-05, 6.52220000000002e-05, 6.509700000000007e-05, 6.50830000000005e-05, 6.483399999999973e-05, 6.493100000000071e-05, 6.54029999999986e-05, 6.486099999999939e-05, 6....</msg>
<status status="PASS" starttime="20201110 08:36:00.483" endtime="20201110 08:36:00.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.500" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:36:00.499" endtime="20201110 08:36:00.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.503" level="INFO">VALUE: [6.506899999999746e-05, 6.52220000000002e-05, 6.509700000000007e-05, 6.50830000000005e-05, 6.483399999999973e-05, 6.493100000000071e-05, 6.54029999999986e-05, 6.486099999999939e-05, 6.5583999999997e-05, 6.536099999999989e-05, 6.568000000000199e-05, 6.50280000000017e-05, 6.530499999999814e-05, 6.530599999999762e-05, 6.479099999999807e-05, 6.52639999999989e-05, 6.479099999999807e-05, 6.529199999999805e-05, 6.574999999999984e-05, 6.527799999999848e-05, 6.488899999999853e-05, 6.490300000000157e-05, 6.52500000000028e-05, 6.516699999999792e-05, 6.484699999999982e-05, 6.537499999999946e-05, 6.484800000000276e-05, 6.551399999999916e-05, 6.566599999999895e-05, 6.506900000000093e-05, 6.520800000000063e-05, 6.513900000000225e-05, 6.534700000000032e-05, 6.541699999999817e-05, 6.50830000000005e-05, 6.573600000000027e-05, 6.531900000000118e-05, 6.547299999999992e-05, 6.505599999999737e-05, 6.531999999999719e-05, 6.519499999999706e-05, 6.545900000000035e-05, 6.533300000000075e-05, 6.536099999999989e-05, 6.562499999999971e-05, 6.559700000000057e-05, 6.548600000000002e-05, 6.495800000000038e-05, 6.516700000000139e-05, 6.527799999999848e-05]</msg>
<status status="PASS" starttime="20201110 08:36:00.502" endtime="20201110 08:36:00.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.497" endtime="20201110 08:36:00.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.507" endtime="20201110 08:36:00.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:00.510" endtime="20201110 08:36:00.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.508" endtime="20201110 08:36:00.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.505" endtime="20201110 08:36:00.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.136" endtime="20201110 08:36:00.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.135" endtime="20201110 08:36:00.531"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.540" endtime="20201110 08:36:00.557"></status>
</kw>
<msg timestamp="20201110 08:36:00.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:00.538" endtime="20201110 08:36:00.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:00.559" endtime="20201110 08:36:00.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.561" endtime="20201110 08:36:00.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.536" endtime="20201110 08:36:00.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.533" endtime="20201110 08:36:00.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.571" endtime="20201110 08:36:00.856"></status>
</kw>
<msg timestamp="20201110 08:36:00.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.570" endtime="20201110 08:36:00.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.861" endtime="20201110 08:36:00.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.869" endtime="20201110 08:36:00.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.567" endtime="20201110 08:36:00.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.565" endtime="20201110 08:36:00.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.876" level="INFO">${RESULT} = [{'time': 0.019979486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.586100000000039e-05, 'source_diff': 6.586100000000039e-05}, {'time': 0.020050458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:00.872" endtime="20201110 08:36:00.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:00.889" level="INFO">${ACCURACY} = {'source_diff': [6.586100000000039e-05, 6.654099999999982e-05, 6.620800000000163e-05, 6.613899999999978e-05, 6.604200000000227e-05, 6.624999999999687e-05, 6.629199999999905e-05, 6.647300000000092e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:00.877" endtime="20201110 08:36:00.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.894" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:36:00.893" endtime="20201110 08:36:00.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.897" level="INFO">VALUE: [6.586100000000039e-05, 6.654099999999982e-05, 6.620800000000163e-05, 6.613899999999978e-05, 6.604200000000227e-05, 6.624999999999687e-05, 6.629199999999905e-05, 6.647300000000092e-05, 6.666699999999942e-05, 6.63480000000008e-05, 6.648599999999755e-05, 6.595900000000085e-05, 6.629200000000252e-05, 6.681999999999869e-05, 6.651400000000016e-05, 6.605499999999889e-05, 6.633300000000175e-05, 6.618000000000249e-05, 6.584700000000082e-05, 6.661100000000114e-05, 6.630600000000209e-05, 6.638900000000003e-05, 6.655599999999887e-05, 6.612500000000021e-05, 6.588899999999953e-05, 6.636099999999742e-05, 6.627799999999948e-05, 6.644499999999831e-05, 6.611100000000064e-05, 6.675000000000084e-05, 6.667999999999952e-05, 6.677699999999703e-05, 6.606899999999846e-05, 6.587499999999996e-05, 6.584700000000082e-05, 6.584700000000082e-05, 6.601399999999966e-05, 6.580599999999812e-05, 6.595800000000138e-05, 6.584700000000082e-05, 6.59029999999991e-05, 6.615299999999935e-05, 6.681899999999921e-05, 6.633400000000123e-05, 6.648599999999755e-05, 6.631999999999819e-05, 6.62639999999999e-05, 6.57769999999995e-05, 6.665200000000038e-05, 6.654099999999982e-05]</msg>
<status status="PASS" starttime="20201110 08:36:00.895" endtime="20201110 08:36:00.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.890" endtime="20201110 08:36:00.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.900" endtime="20201110 08:36:00.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:00.904" endtime="20201110 08:36:00.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.902" endtime="20201110 08:36:00.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.898" endtime="20201110 08:36:00.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.532" endtime="20201110 08:36:00.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.531" endtime="20201110 08:36:00.925"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.933" endtime="20201110 08:36:00.951"></status>
</kw>
<msg timestamp="20201110 08:36:00.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:00.932" endtime="20201110 08:36:00.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:00.952" endtime="20201110 08:36:00.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.955" endtime="20201110 08:36:00.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.929" endtime="20201110 08:36:00.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.927" endtime="20201110 08:36:00.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.965" endtime="20201110 08:36:01.251"></status>
</kw>
<msg timestamp="20201110 08:36:01.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.964" endtime="20201110 08:36:01.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:01.255" endtime="20201110 08:36:01.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.263" endtime="20201110 08:36:01.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.961" endtime="20201110 08:36:01.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.959" endtime="20201110 08:36:01.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:01.270" level="INFO">${RESULT} = [{'time': 0.020000972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.692999999999977e-05, 'source_diff': 6.692999999999977e-05}, {'time': 0.020071972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:01.267" endtime="20201110 08:36:01.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:01.284" level="INFO">${ACCURACY} = {'source_diff': [6.692999999999977e-05, 6.768000000000052e-05, 6.737499999999799e-05, 6.762499999999824e-05, 6.70969999999986e-05, 6.747199999999898e-05, 6.72220000000022e-05, 6.743099999999974e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:36:01.271" endtime="20201110 08:36:01.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.288" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:36:01.287" endtime="20201110 08:36:01.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.291" level="INFO">VALUE: [6.692999999999977e-05, 6.768000000000052e-05, 6.737499999999799e-05, 6.762499999999824e-05, 6.70969999999986e-05, 6.747199999999898e-05, 6.72220000000022e-05, 6.743099999999974e-05, 6.711100000000164e-05, 6.762499999999824e-05, 6.701400000000066e-05, 6.775000000000184e-05, 6.727800000000048e-05, 6.72229999999982e-05, 6.690200000000063e-05, 6.752800000000073e-05, 6.766600000000095e-05, 6.770800000000313e-05, 6.74030000000006e-05, 6.755500000000039e-05, 6.743099999999974e-05, 6.772199999999923e-05, 6.711100000000164e-05, 6.722199999999873e-05, 6.711099999999817e-05, 6.679199999999955e-05, 6.715300000000035e-05, 6.750000000000159e-05, 6.709800000000155e-05, 6.754100000000082e-05, 6.713799999999784e-05, 6.762499999999824e-05, 6.694400000000281e-05, 6.768000000000052e-05, 6.763900000000128e-05, 6.680599999999912e-05, 6.750000000000159e-05, 6.683299999999878e-05, 6.738900000000103e-05, 6.749999999999812e-05, 6.741700000000017e-05, 6.69030000000001e-05, 6.716699999999992e-05, 6.743000000000027e-05, 6.761100000000214e-05, 6.70830000000025e-05, 6.705499999999989e-05, 6.75969999999991e-05, 6.756899999999996e-05, 6.743099999999974e-05]</msg>
<status status="PASS" starttime="20201110 08:36:01.289" endtime="20201110 08:36:01.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.285" endtime="20201110 08:36:01.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.300" endtime="20201110 08:36:01.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:01.303" endtime="20201110 08:36:01.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.301" endtime="20201110 08:36:01.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.298" endtime="20201110 08:36:01.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.926" endtime="20201110 08:36:01.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.925" endtime="20201110 08:36:01.324"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.332" endtime="20201110 08:36:01.349"></status>
</kw>
<msg timestamp="20201110 08:36:01.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:01.331" endtime="20201110 08:36:01.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:01.351" endtime="20201110 08:36:01.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.353" endtime="20201110 08:36:01.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.328" endtime="20201110 08:36:01.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.326" endtime="20201110 08:36:01.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.363" endtime="20201110 08:36:01.649"></status>
</kw>
<msg timestamp="20201110 08:36:01.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020259458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:01.362" endtime="20201110 08:36:01.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020259458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:01.654" endtime="20201110 08:36:01.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.662" endtime="20201110 08:36:01.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.359" endtime="20201110 08:36:01.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.358" endtime="20201110 08:36:01.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:01.669" level="INFO">${RESULT} = [{'time': 0.020328111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.865299999999838e-05, 'source_diff': 6.865299999999838e-05}, {'time': 0.020401111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:01.665" endtime="20201110 08:36:01.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:01.683" level="INFO">${ACCURACY} = {'source_diff': [6.865299999999838e-05, 6.818000000000102e-05, 6.788899999999806e-05, 6.837499999999899e-05, 6.788899999999806e-05, 6.848599999999955e-05, 6.862499999999924e-05, 6.811100000000264e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:01.670" endtime="20201110 08:36:01.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.691" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:36:01.689" endtime="20201110 08:36:01.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.696" level="INFO">VALUE: [6.865299999999838e-05, 6.818000000000102e-05, 6.788899999999806e-05, 6.837499999999899e-05, 6.788899999999806e-05, 6.848599999999955e-05, 6.862499999999924e-05, 6.811100000000264e-05, 6.845899999999988e-05, 6.84299999999978e-05, 6.831900000000071e-05, 6.852699999999878e-05, 6.826399999999844e-05, 6.795799999999991e-05, 6.870800000000066e-05, 6.865300000000185e-05, 6.822199999999973e-05, 6.787499999999849e-05, 6.82220000000032e-05, 6.830600000000062e-05, 6.848600000000302e-05, 6.80969999999996e-05, 6.80839999999995e-05, 6.82229999999992e-05, 6.855600000000087e-05, 6.780499999999717e-05, 6.851400000000216e-05, 6.862499999999924e-05, 6.788899999999806e-05, 6.87640000000024e-05, 6.788899999999806e-05, 6.827800000000148e-05, 6.85420000000013e-05, 6.788900000000153e-05, 6.783299999999978e-05, 6.773600000000227e-05, 6.849999999999912e-05, 6.790199999999816e-05, 6.788900000000153e-05, 6.851399999999869e-05, 6.844500000000031e-05, 6.819399999999712e-05, 6.855500000000139e-05, 6.870800000000066e-05, 6.804099999999785e-05, 6.862499999999924e-05, 6.87640000000024e-05, 6.797199999999948e-05, 6.819500000000006e-05, 6.848599999999955e-05]</msg>
<status status="PASS" starttime="20201110 08:36:01.693" endtime="20201110 08:36:01.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.684" endtime="20201110 08:36:01.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.704" endtime="20201110 08:36:01.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:01.711" endtime="20201110 08:36:01.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.707" endtime="20201110 08:36:01.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.700" endtime="20201110 08:36:01.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.325" endtime="20201110 08:36:01.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.324" endtime="20201110 08:36:01.736"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.754" endtime="20201110 08:36:01.774"></status>
</kw>
<msg timestamp="20201110 08:36:01.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:01.750" endtime="20201110 08:36:01.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:01.777" endtime="20201110 08:36:01.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.782" endtime="20201110 08:36:01.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.745" endtime="20201110 08:36:01.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.741" endtime="20201110 08:36:01.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.794" endtime="20201110 08:36:02.081"></status>
</kw>
<msg timestamp="20201110 08:36:02.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033885292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033955056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:01.793" endtime="20201110 08:36:02.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033885292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033955056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:02.085" endtime="20201110 08:36:02.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.094" endtime="20201110 08:36:02.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.790" endtime="20201110 08:36:02.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.789" endtime="20201110 08:36:02.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:02.100" level="INFO">${RESULT} = [{'time': 0.033955056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.976399999999994e-05, 'source_diff': 6.976399999999994e-05}, {'time': 0.034030097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:02.097" endtime="20201110 08:36:02.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:02.114" level="INFO">${ACCURACY} = {'source_diff': [6.976399999999994e-05, 6.937500000000346e-05, 6.880499999999817e-05, 6.945800000000141e-05, 6.915300000000235e-05, 6.888900000000253e-05, 6.906899999999799e-05, 6.899999999999962e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:02.101" endtime="20201110 08:36:02.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.118" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:36:02.117" endtime="20201110 08:36:02.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.121" level="INFO">VALUE: [6.976399999999994e-05, 6.937500000000346e-05, 6.880499999999817e-05, 6.945800000000141e-05, 6.915300000000235e-05, 6.888900000000253e-05, 6.906899999999799e-05, 6.899999999999962e-05, 6.959699999999763e-05, 6.962499999999677e-05, 6.95559999999984e-05, 6.936099999999695e-05, 6.956999999999797e-05, 6.958299999999806e-05, 6.963899999999634e-05, 6.877699999999903e-05, 6.940199999999619e-05, 6.881899999999774e-05, 6.941599999999576e-05, 6.920800000000116e-05, 6.926399999999944e-05, 6.937500000000346e-05, 6.890299999999516e-05, 6.937500000000346e-05, 6.92360000000003e-05, 6.913899999999584e-05, 6.919500000000106e-05, 6.931999999999772e-05, 6.92230000000002e-05, 6.913900000000278e-05, 6.887500000000296e-05, 6.955499999999892e-05, 6.931900000000518e-05, 6.952699999999978e-05, 6.930499999999867e-05, 6.922200000000073e-05, 6.891700000000167e-05, 6.926399999999944e-05, 6.94309999999948e-05, 6.934699999999738e-05, 6.91109999999967e-05, 6.95700000000049e-05, 6.965300000000285e-05, 6.938900000000303e-05, 6.954199999999883e-05, 6.970899999999419e-05, 6.961100000000414e-05, 6.945799999999447e-05, 6.919400000000159e-05, 6.966699999999548e-05]</msg>
<status status="PASS" starttime="20201110 08:36:02.119" endtime="20201110 08:36:02.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.115" endtime="20201110 08:36:02.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.124" endtime="20201110 08:36:02.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:02.128" endtime="20201110 08:36:02.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.126" endtime="20201110 08:36:02.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.122" endtime="20201110 08:36:02.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.738" endtime="20201110 08:36:02.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.736" endtime="20201110 08:36:02.148"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.157" endtime="20201110 08:36:02.176"></status>
</kw>
<msg timestamp="20201110 08:36:02.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:02.156" endtime="20201110 08:36:02.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:02.177" endtime="20201110 08:36:02.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.180" endtime="20201110 08:36:02.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.153" endtime="20201110 08:36:02.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.151" endtime="20201110 08:36:02.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.190" endtime="20201110 08:36:02.476"></status>
</kw>
<msg timestamp="20201110 08:36:02.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:02.188" endtime="20201110 08:36:02.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:02.481" endtime="20201110 08:36:02.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.489" endtime="20201110 08:36:02.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.186" endtime="20201110 08:36:02.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.184" endtime="20201110 08:36:02.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:02.496" level="INFO">${RESULT} = [{'time': 0.019928556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.058399999999854e-05, 'source_diff': 7.058399999999854e-05}, {'time': 0.020004556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:02.492" endtime="20201110 08:36:02.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:02.509" level="INFO">${ACCURACY} = {'source_diff': [7.058399999999854e-05, 7.008399999999804e-05, 7.001399999999672e-05, 7.005499999999942e-05, 7.052700000000078e-05, 7.070800000000266e-05, 7.022200000000173e-05, 6.994400000000234e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:02.497" endtime="20201110 08:36:02.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.513" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:36:02.512" endtime="20201110 08:36:02.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.516" level="INFO">VALUE: [7.058399999999854e-05, 7.008399999999804e-05, 7.001399999999672e-05, 7.005499999999942e-05, 7.052700000000078e-05, 7.070800000000266e-05, 7.022200000000173e-05, 6.994400000000234e-05, 7.050000000000112e-05, 7.050000000000112e-05, 6.994400000000234e-05, 6.979200000000255e-05, 7.016699999999945e-05, 6.980599999999865e-05, 7.009800000000108e-05, 7.034800000000133e-05, 7.002799999999976e-05, 7.052800000000026e-05, 7.019399999999912e-05, 7.051400000000069e-05, 7.06109999999982e-05, 7.056900000000296e-05, 7.00970000000016e-05, 6.990299999999963e-05, 7.043099999999927e-05, 7.020800000000216e-05, 7.01109999999977e-05, 7.015299999999988e-05, 7.038900000000056e-05, 7.002799999999976e-05, 7.008300000000203e-05, 7.059800000000158e-05, 7.034800000000133e-05, 7.045800000000241e-05, 7.048600000000155e-05, 6.972200000000123e-05, 7.073599999999833e-05, 7.038899999999709e-05, 7.000000000000062e-05, 6.986100000000092e-05, 7.020799999999869e-05, 7.012500000000074e-05, 7.068099999999952e-05, 7.019499999999859e-05, 7.023599999999783e-05, 7.00840000000015e-05, 7.020900000000163e-05, 7.016700000000292e-05, 7.04299999999998e-05, 7.027700000000053e-05]</msg>
<status status="PASS" starttime="20201110 08:36:02.515" endtime="20201110 08:36:02.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.510" endtime="20201110 08:36:02.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.519" endtime="20201110 08:36:02.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:02.523" endtime="20201110 08:36:02.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.521" endtime="20201110 08:36:02.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.518" endtime="20201110 08:36:02.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.149" endtime="20201110 08:36:02.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.149" endtime="20201110 08:36:02.544"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.552" endtime="20201110 08:36:02.569"></status>
</kw>
<msg timestamp="20201110 08:36:02.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:02.551" endtime="20201110 08:36:02.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:02.571" endtime="20201110 08:36:02.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.573" endtime="20201110 08:36:02.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.548" endtime="20201110 08:36:02.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.546" endtime="20201110 08:36:02.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.583" endtime="20201110 08:36:02.869"></status>
</kw>
<msg timestamp="20201110 08:36:02.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:02.582" endtime="20201110 08:36:02.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:02.873" endtime="20201110 08:36:02.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.881" endtime="20201110 08:36:02.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.579" endtime="20201110 08:36:02.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.577" endtime="20201110 08:36:02.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:02.888" level="INFO">${RESULT} = [{'time': 0.019925611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.15690000000005e-05, 'source_diff': 7.15690000000005e-05}, {'time': 0.020001625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:02.884" endtime="20201110 08:36:02.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:02.901" level="INFO">${ACCURACY} = {'source_diff': [7.15690000000005e-05, 7.119400000000012e-05, 7.151399999999822e-05, 7.138900000000156e-05, 7.170899999999966e-05, 7.136100000000242e-05, 7.086199999999793e-05, 7.17369999999988e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:36:02.889" endtime="20201110 08:36:02.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.906" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:36:02.905" endtime="20201110 08:36:02.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.908" level="INFO">VALUE: [7.15690000000005e-05, 7.119400000000012e-05, 7.151399999999822e-05, 7.138900000000156e-05, 7.170899999999966e-05, 7.136100000000242e-05, 7.086199999999793e-05, 7.17369999999988e-05, 7.149999999999865e-05, 7.090300000000063e-05, 7.108299999999956e-05, 7.111100000000217e-05, 7.159699999999963e-05, 7.101400000000119e-05, 7.119400000000012e-05, 7.113900000000131e-05, 7.084700000000235e-05, 7.113900000000131e-05, 7.17360000000028e-05, 7.101399999999772e-05, 7.101400000000119e-05, 7.172199999999976e-05, 7.145799999999994e-05, 7.125000000000187e-05, 7.176400000000194e-05, 7.155500000000092e-05, 7.102700000000128e-05, 7.126400000000144e-05, 7.148600000000255e-05, 7.166699999999748e-05, 7.102800000000076e-05, 7.083299999999931e-05, 7.156999999999997e-05, 7.177800000000151e-05, 7.162499999999877e-05, 7.148599999999908e-05, 7.150000000000212e-05, 7.112500000000174e-05, 7.081999999999922e-05, 7.151399999999822e-05, 7.105500000000042e-05, 7.105500000000042e-05, 7.166600000000148e-05, 7.134699999999938e-05, 7.087500000000149e-05, 7.14170000000007e-05, 7.087500000000149e-05, 7.154200000000083e-05, 7.113900000000131e-05, 7.159699999999963e-05]</msg>
<status status="PASS" starttime="20201110 08:36:02.907" endtime="20201110 08:36:02.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.902" endtime="20201110 08:36:02.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.912" endtime="20201110 08:36:02.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:02.915" endtime="20201110 08:36:02.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.914" endtime="20201110 08:36:02.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.910" endtime="20201110 08:36:02.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.545" endtime="20201110 08:36:02.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.544" endtime="20201110 08:36:02.936"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.945" endtime="20201110 08:36:02.962"></status>
</kw>
<msg timestamp="20201110 08:36:02.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:02.943" endtime="20201110 08:36:02.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:02.964" endtime="20201110 08:36:02.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.966" endtime="20201110 08:36:02.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.941" endtime="20201110 08:36:02.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.939" endtime="20201110 08:36:02.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.976" endtime="20201110 08:36:03.261"></status>
</kw>
<msg timestamp="20201110 08:36:03.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020260569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:02.975" endtime="20201110 08:36:03.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020260569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:03.266" endtime="20201110 08:36:03.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.274" endtime="20201110 08:36:03.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.972" endtime="20201110 08:36:03.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.971" endtime="20201110 08:36:03.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:03.281" level="INFO">${RESULT} = [{'time': 0.020333319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.27499999999999e-05, 'source_diff': 7.27499999999999e-05}, {'time': 0.020408278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:03.277" endtime="20201110 08:36:03.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:03.295" level="INFO">${ACCURACY} = {'source_diff': [7.27499999999999e-05, 7.262499999999977e-05, 7.179200000000108e-05, 7.237500000000299e-05, 7.201399999999872e-05, 7.22910000000021e-05, 7.244400000000137e-05, 7.256899999999802e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:36:03.282" endtime="20201110 08:36:03.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.300" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:36:03.299" endtime="20201110 08:36:03.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.302" level="INFO">VALUE: [7.27499999999999e-05, 7.262499999999977e-05, 7.179200000000108e-05, 7.237500000000299e-05, 7.201399999999872e-05, 7.22910000000021e-05, 7.244400000000137e-05, 7.256899999999802e-05, 7.252800000000226e-05, 7.223599999999983e-05, 7.226399999999897e-05, 7.216700000000145e-05, 7.219500000000059e-05, 7.257000000000097e-05, 7.197200000000001e-05, 7.245900000000041e-05, 7.266700000000195e-05, 7.222200000000026e-05, 7.187499999999902e-05, 7.179199999999761e-05, 7.237499999999952e-05, 7.201400000000219e-05, 7.24300000000018e-05, 7.204099999999838e-05, 7.21109999999997e-05, 7.183300000000031e-05, 7.240299999999866e-05, 7.243100000000127e-05, 7.276399999999947e-05, 7.180599999999718e-05, 7.201400000000219e-05, 7.263899999999934e-05, 7.190299999999816e-05, 7.19439999999974e-05, 7.220799999999722e-05, 7.183300000000031e-05, 7.247200000000051e-05, 7.216599999999851e-05, 7.240299999999866e-05, 7.227799999999854e-05, 7.205500000000142e-05, 7.240300000000213e-05, 7.255599999999793e-05, 7.184699999999988e-05, 7.184699999999988e-05, 7.183400000000326e-05, 7.212499999999927e-05, 7.186099999999945e-05, 7.280500000000217e-05, 7.238899999999909e-05]</msg>
<status status="PASS" starttime="20201110 08:36:03.301" endtime="20201110 08:36:03.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.296" endtime="20201110 08:36:03.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.306" endtime="20201110 08:36:03.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:03.309" endtime="20201110 08:36:03.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.307" endtime="20201110 08:36:03.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.304" endtime="20201110 08:36:03.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.937" endtime="20201110 08:36:03.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.937" endtime="20201110 08:36:03.330"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.338" endtime="20201110 08:36:03.356"></status>
</kw>
<msg timestamp="20201110 08:36:03.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:03.337" endtime="20201110 08:36:03.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:03.358" endtime="20201110 08:36:03.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.360" endtime="20201110 08:36:03.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.334" endtime="20201110 08:36:03.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.332" endtime="20201110 08:36:03.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.370" endtime="20201110 08:36:03.655"></status>
</kw>
<msg timestamp="20201110 08:36:03.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020411292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020484083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:03.369" endtime="20201110 08:36:03.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020411292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020484083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:03.660" endtime="20201110 08:36:03.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.669" endtime="20201110 08:36:03.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.366" endtime="20201110 08:36:03.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.364" endtime="20201110 08:36:03.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:03.675" level="INFO">${RESULT} = [{'time': 0.020484083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.279099999999913e-05, 'source_diff': 7.279099999999913e-05}, {'time': 0.020560083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:03.672" endtime="20201110 08:36:03.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:03.689" level="INFO">${ACCURACY} = {'source_diff': [7.279099999999913e-05, 7.279099999999913e-05, 7.369399999999915e-05, 7.330600000000215e-05, 7.352799999999979e-05, 7.372200000000176e-05, 7.366699999999948e-05, 7.330599999999868e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:03.676" endtime="20201110 08:36:03.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.694" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:36:03.693" endtime="20201110 08:36:03.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.697" level="INFO">VALUE: [7.279099999999913e-05, 7.279099999999913e-05, 7.369399999999915e-05, 7.330600000000215e-05, 7.352799999999979e-05, 7.372200000000176e-05, 7.366699999999948e-05, 7.330599999999868e-05, 7.294499999999787e-05, 7.302800000000276e-05, 7.31110000000007e-05, 7.290299999999916e-05, 7.336199999999696e-05, 7.317999999999908e-05, 7.355499999999945e-05, 7.284700000000088e-05, 7.31110000000007e-05, 7.300000000000015e-05, 7.322200000000126e-05, 7.355599999999893e-05, 7.343100000000227e-05, 7.363900000000034e-05, 7.280599999999818e-05, 7.293100000000177e-05, 7.377800000000004e-05, 7.30560000000019e-05, 7.368099999999905e-05, 7.313800000000037e-05, 7.365200000000044e-05, 7.369399999999915e-05, 7.290199999999969e-05, 7.326399999999997e-05, 7.283299999999784e-05, 7.323599999999736e-05, 7.366699999999948e-05, 7.352799999999979e-05, 7.336099999999748e-05, 7.323600000000083e-05, 7.305499999999895e-05, 7.295900000000091e-05, 7.377800000000004e-05, 7.357000000000197e-05, 7.313899999999984e-05, 7.359699999999816e-05, 7.316599999999951e-05, 7.291699999999873e-05, 7.349999999999718e-05, 7.323600000000083e-05, 7.288899999999959e-05, 7.307000000000147e-05]</msg>
<status status="PASS" starttime="20201110 08:36:03.695" endtime="20201110 08:36:03.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.690" endtime="20201110 08:36:03.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.700" endtime="20201110 08:36:03.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:03.704" endtime="20201110 08:36:03.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.702" endtime="20201110 08:36:03.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.699" endtime="20201110 08:36:03.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.331" endtime="20201110 08:36:03.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.330" endtime="20201110 08:36:03.725"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.733" endtime="20201110 08:36:03.750"></status>
</kw>
<msg timestamp="20201110 08:36:03.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:03.732" endtime="20201110 08:36:03.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:03.752" endtime="20201110 08:36:03.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.754" endtime="20201110 08:36:03.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.729" endtime="20201110 08:36:03.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.727" endtime="20201110 08:36:03.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.764" endtime="20201110 08:36:04.049"></status>
</kw>
<msg timestamp="20201110 08:36:04.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:03.762" endtime="20201110 08:36:04.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:04.054" endtime="20201110 08:36:04.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.062" endtime="20201110 08:36:04.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.760" endtime="20201110 08:36:04.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.758" endtime="20201110 08:36:04.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:04.069" level="INFO">${RESULT} = [{'time': 0.019884347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.423600000000183e-05, 'source_diff': 7.423600000000183e-05}, {'time': 0.019963347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:04.065" endtime="20201110 08:36:04.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:04.082" level="INFO">${ACCURACY} = {'source_diff': [7.423600000000183e-05, 7.416600000000051e-05, 7.437499999999805e-05, 7.40829999999991e-05, 7.402800000000029e-05, 7.413900000000084e-05, 7.473600000000233e-05, 7.408400000000204e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:04.070" endtime="20201110 08:36:04.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.086" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:36:04.085" endtime="20201110 08:36:04.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.089" level="INFO">VALUE: [7.423600000000183e-05, 7.416600000000051e-05, 7.437499999999805e-05, 7.40829999999991e-05, 7.402800000000029e-05, 7.413900000000084e-05, 7.473600000000233e-05, 7.408400000000204e-05, 7.416699999999998e-05, 7.441700000000023e-05, 7.41249999999978e-05, 7.411099999999823e-05, 7.450000000000165e-05, 7.44439999999999e-05, 7.402799999999682e-05, 7.44309999999998e-05, 7.43050000000002e-05, 7.390300000000016e-05, 7.383300000000231e-05, 7.42500000000014e-05, 7.380599999999918e-05, 7.381999999999875e-05, 7.441600000000076e-05, 7.418099999999955e-05, 7.395900000000191e-05, 7.443000000000033e-05, 7.454100000000088e-05, 7.436099999999848e-05, 7.438900000000109e-05, 7.38049999999997e-05, 7.420800000000269e-05, 7.379199999999961e-05, 7.436100000000195e-05, 7.465300000000091e-05, 7.447200000000251e-05, 7.451400000000122e-05, 7.444499999999937e-05, 7.43050000000002e-05, 7.420900000000216e-05, 7.381900000000274e-05, 7.387500000000102e-05, 7.426400000000097e-05, 7.426400000000097e-05, 7.384699999999841e-05, 7.437500000000152e-05, 7.433299999999934e-05, 7.451400000000122e-05, 7.445799999999947e-05, 7.474999999999843e-05, 7.451400000000122e-05]</msg>
<status status="PASS" starttime="20201110 08:36:04.088" endtime="20201110 08:36:04.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.083" endtime="20201110 08:36:04.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.092" endtime="20201110 08:36:04.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:04.096" endtime="20201110 08:36:04.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.094" endtime="20201110 08:36:04.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.091" endtime="20201110 08:36:04.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.726" endtime="20201110 08:36:04.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.725" endtime="20201110 08:36:04.117"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.125" endtime="20201110 08:36:04.143"></status>
</kw>
<msg timestamp="20201110 08:36:04.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:04.124" endtime="20201110 08:36:04.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:04.145" endtime="20201110 08:36:04.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.147" endtime="20201110 08:36:04.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.121" endtime="20201110 08:36:04.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.119" endtime="20201110 08:36:04.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.157" endtime="20201110 08:36:04.442"></status>
</kw>
<msg timestamp="20201110 08:36:04.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020736069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02081125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:04.156" endtime="20201110 08:36:04.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020736069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02081125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:04.446" endtime="20201110 08:36:04.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.454" endtime="20201110 08:36:04.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.153" endtime="20201110 08:36:04.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.152" endtime="20201110 08:36:04.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:04.461" level="INFO">${RESULT} = [{'time': 0.02081125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.518100000000055e-05, 'source_diff': 7.518100000000055e-05}, {'time': 0.020889264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:04.458" endtime="20201110 08:36:04.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:04.475" level="INFO">${ACCURACY} = {'source_diff': [7.518100000000055e-05, 7.504200000000086e-05, 7.484699999999941e-05, 7.477799999999757e-05, 7.558400000000007e-05, 7.505600000000043e-05, 7.538899999999862e-05, 7.556899999999755e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:04.462" endtime="20201110 08:36:04.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.479" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:36:04.478" endtime="20201110 08:36:04.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.482" level="INFO">VALUE: [7.518100000000055e-05, 7.504200000000086e-05, 7.484699999999941e-05, 7.477799999999757e-05, 7.558400000000007e-05, 7.505600000000043e-05, 7.538899999999862e-05, 7.556899999999755e-05, 7.554099999999841e-05, 7.568000000000158e-05, 7.501399999999825e-05, 7.529100000000163e-05, 7.479200000000061e-05, 7.562500000000277e-05, 7.527800000000154e-05, 7.484700000000288e-05, 7.54029999999982e-05, 7.555600000000093e-05, 7.490300000000116e-05, 7.541700000000123e-05, 7.519500000000012e-05, 7.569400000000115e-05, 7.51379999999989e-05, 7.516700000000098e-05, 7.488899999999812e-05, 7.502800000000129e-05, 7.551399999999875e-05, 7.55830000000006e-05, 7.568100000000105e-05, 7.537499999999905e-05, 7.526400000000197e-05, 7.555600000000093e-05, 7.509799999999914e-05, 7.549999999999918e-05, 7.4763999999998e-05, 7.513899999999837e-05, 7.552699999999885e-05, 7.523600000000283e-05, 7.563899999999887e-05, 7.574999999999943e-05, 7.550000000000265e-05, 7.531900000000077e-05, 7.491700000000073e-05, 7.487500000000202e-05, 7.530600000000068e-05, 7.480600000000018e-05, 7.52639999999985e-05, 7.534800000000286e-05, 7.536200000000243e-05, 7.517999999999761e-05]</msg>
<status status="PASS" starttime="20201110 08:36:04.481" endtime="20201110 08:36:04.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.476" endtime="20201110 08:36:04.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.486" endtime="20201110 08:36:04.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:04.489" endtime="20201110 08:36:04.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.488" endtime="20201110 08:36:04.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.484" endtime="20201110 08:36:04.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.118" endtime="20201110 08:36:04.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.117" endtime="20201110 08:36:04.511"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.521" endtime="20201110 08:36:04.539"></status>
</kw>
<msg timestamp="20201110 08:36:04.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:04.519" endtime="20201110 08:36:04.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:04.541" endtime="20201110 08:36:04.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.543" endtime="20201110 08:36:04.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.516" endtime="20201110 08:36:04.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.514" endtime="20201110 08:36:04.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.554" endtime="20201110 08:36:04.858"></status>
</kw>
<msg timestamp="20201110 08:36:04.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:04.552" endtime="20201110 08:36:04.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:04.862" endtime="20201110 08:36:04.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.870" endtime="20201110 08:36:04.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.549" endtime="20201110 08:36:04.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.548" endtime="20201110 08:36:04.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:04.877" level="INFO">${RESULT} = [{'time': 0.021981375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.59440000000014e-05, 'source_diff': 7.59440000000014e-05}, {'time': 0.022060417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:04.874" endtime="20201110 08:36:04.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:04.892" level="INFO">${ACCURACY} = {'source_diff': [7.59440000000014e-05, 7.67229999999973e-05, 7.599999999999968e-05, 7.658400000000107e-05, 7.637500000000005e-05, 7.659800000000064e-05, 7.61249999999998e-05, 7.609700000000066e-05, 7....</msg>
<status status="PASS" starttime="20201110 08:36:04.878" endtime="20201110 08:36:04.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.896" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:36:04.895" endtime="20201110 08:36:04.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.899" level="INFO">VALUE: [7.59440000000014e-05, 7.67229999999973e-05, 7.599999999999968e-05, 7.658400000000107e-05, 7.637500000000005e-05, 7.659800000000064e-05, 7.61249999999998e-05, 7.609700000000066e-05, 7.665299999999944e-05, 7.622199999999732e-05, 7.599999999999968e-05, 7.673600000000086e-05, 7.611100000000023e-05, 7.580599999999771e-05, 7.600000000000315e-05, 7.62639999999995e-05, 7.624999999999993e-05, 7.64449999999979e-05, 7.656900000000202e-05, 7.63189999999983e-05, 7.586099999999998e-05, 7.601299999999978e-05, 7.637500000000005e-05, 7.631900000000177e-05, 7.650000000000018e-05, 7.619400000000165e-05, 7.587499999999955e-05, 7.630600000000168e-05, 7.637500000000005e-05, 7.644500000000137e-05, 7.654200000000236e-05, 7.663899999999987e-05, 7.672300000000076e-05, 7.580599999999771e-05, 7.63050000000022e-05, 7.64029999999992e-05, 7.633299999999787e-05, 7.633300000000134e-05, 7.648599999999714e-05, 7.620799999999775e-05, 7.586099999999998e-05, 7.644500000000137e-05, 7.666699999999901e-05, 7.599999999999968e-05, 7.651399999999975e-05, 7.579199999999814e-05, 7.619499999999765e-05, 7.644399999999843e-05, 7.65830000000016e-05, 7.630499999999873e-05]</msg>
<status status="PASS" starttime="20201110 08:36:04.898" endtime="20201110 08:36:04.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.893" endtime="20201110 08:36:04.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.902" endtime="20201110 08:36:04.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:04.906" endtime="20201110 08:36:04.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.904" endtime="20201110 08:36:04.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.901" endtime="20201110 08:36:04.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.512" endtime="20201110 08:36:04.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.511" endtime="20201110 08:36:04.927"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.937" endtime="20201110 08:36:04.955"></status>
</kw>
<msg timestamp="20201110 08:36:04.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:04.935" endtime="20201110 08:36:04.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:04.956" endtime="20201110 08:36:04.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.958" endtime="20201110 08:36:04.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.932" endtime="20201110 08:36:04.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.930" endtime="20201110 08:36:04.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.969" endtime="20201110 08:36:05.254"></status>
</kw>
<msg timestamp="20201110 08:36:05.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:04.967" endtime="20201110 08:36:05.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.258" endtime="20201110 08:36:05.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.266" endtime="20201110 08:36:05.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.964" endtime="20201110 08:36:05.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.963" endtime="20201110 08:36:05.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:05.273" level="INFO">${RESULT} = [{'time': 0.021990125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.68189999999988e-05, 'source_diff': 7.68189999999988e-05}, {'time': 0.022070125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:05.270" endtime="20201110 08:36:05.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:05.286" level="INFO">${ACCURACY} = {'source_diff': [7.68189999999988e-05, 7.725000000000093e-05, 7.727800000000007e-05, 7.691699999999926e-05, 7.684700000000141e-05, 7.766700000000001e-05, 7.69029999999997e-05, 7.693099999999883e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:36:05.274" endtime="20201110 08:36:05.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.291" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:36:05.290" endtime="20201110 08:36:05.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.293" level="INFO">VALUE: [7.68189999999988e-05, 7.725000000000093e-05, 7.727800000000007e-05, 7.691699999999926e-05, 7.684700000000141e-05, 7.766700000000001e-05, 7.69029999999997e-05, 7.693099999999883e-05, 7.723700000000083e-05, 7.733300000000234e-05, 7.690200000000022e-05, 7.773599999999839e-05, 7.715299999999994e-05, 7.76389999999974e-05, 7.7764000000001e-05, 7.724999999999746e-05, 7.719499999999865e-05, 7.693099999999883e-05, 7.723599999999789e-05, 7.708400000000157e-05, 7.686100000000098e-05, 7.730599999999921e-05, 7.741699999999976e-05, 7.729100000000017e-05, 7.716600000000004e-05, 7.742999999999986e-05, 7.733300000000234e-05, 7.727800000000007e-05, 7.734700000000191e-05, 7.763900000000087e-05, 7.765300000000044e-05, 7.761100000000173e-05, 7.772199999999882e-05, 7.745900000000194e-05, 7.734700000000191e-05, 7.743099999999933e-05, 7.711100000000123e-05, 7.763900000000087e-05, 7.688900000000012e-05, 7.706900000000252e-05, 7.706899999999905e-05, 7.737500000000105e-05, 7.761099999999826e-05, 7.684799999999742e-05, 7.71250000000008e-05, 7.761100000000173e-05, 7.71389999999969e-05, 7.691699999999926e-05, 7.692999999999936e-05, 7.697300000000101e-05]</msg>
<status status="PASS" starttime="20201110 08:36:05.292" endtime="20201110 08:36:05.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.287" endtime="20201110 08:36:05.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.297" endtime="20201110 08:36:05.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:05.300" endtime="20201110 08:36:05.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.299" endtime="20201110 08:36:05.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.295" endtime="20201110 08:36:05.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.928" endtime="20201110 08:36:05.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.927" endtime="20201110 08:36:05.321"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.330" endtime="20201110 08:36:05.347"></status>
</kw>
<msg timestamp="20201110 08:36:05.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:05.328" endtime="20201110 08:36:05.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:05.349" endtime="20201110 08:36:05.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.351" endtime="20201110 08:36:05.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.326" endtime="20201110 08:36:05.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.324" endtime="20201110 08:36:05.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.361" endtime="20201110 08:36:05.666"></status>
</kw>
<msg timestamp="20201110 08:36:05.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.360" endtime="20201110 08:36:05.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.670" endtime="20201110 08:36:05.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.679" endtime="20201110 08:36:05.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.357" endtime="20201110 08:36:05.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.356" endtime="20201110 08:36:05.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:05.685" level="INFO">${RESULT} = [{'time': 0.019866458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.86389999999984e-05, 'source_diff': 7.86389999999984e-05}, {'time': 0.019948472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:05.682" endtime="20201110 08:36:05.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:05.699" level="INFO">${ACCURACY} = {'source_diff': [7.86389999999984e-05, 7.844399999999696e-05, 7.866600000000154e-05, 7.852800000000132e-05, 7.862499999999883e-05, 7.856900000000056e-05, 7.802799999999735e-05, 7.852799999999785e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:05.686" endtime="20201110 08:36:05.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.703" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:36:05.702" endtime="20201110 08:36:05.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.706" level="INFO">VALUE: [7.86389999999984e-05, 7.844399999999696e-05, 7.866600000000154e-05, 7.852800000000132e-05, 7.862499999999883e-05, 7.856900000000056e-05, 7.802799999999735e-05, 7.852799999999785e-05, 7.877699999999863e-05, 7.831999999999978e-05, 7.87229999999993e-05, 7.82640000000015e-05, 7.783299999999937e-05, 7.849999999999871e-05, 7.830499999999727e-05, 7.851400000000175e-05, 7.81250000000018e-05, 7.856900000000056e-05, 7.784699999999894e-05, 7.877800000000157e-05, 7.822200000000279e-05, 7.813900000000137e-05, 7.868100000000058e-05, 7.834799999999892e-05, 7.830600000000021e-05, 7.800000000000168e-05, 7.844400000000043e-05, 7.813900000000137e-05, 7.818000000000061e-05, 7.868000000000111e-05, 7.85969999999997e-05, 7.840299999999772e-05, 7.837499999999858e-05, 7.855600000000046e-05, 7.79449999999994e-05, 7.819499999999965e-05, 7.824999999999846e-05, 7.831999999999978e-05, 7.830600000000021e-05, 7.823599999999889e-05, 7.870899999999972e-05, 7.801400000000125e-05, 7.855499999999752e-05, 7.817999999999714e-05, 7.866699999999754e-05, 7.829200000000064e-05, 7.847200000000304e-05, 7.862499999999883e-05, 7.783399999999885e-05, 7.873700000000233e-05]</msg>
<status status="PASS" starttime="20201110 08:36:05.704" endtime="20201110 08:36:05.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.700" endtime="20201110 08:36:05.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.709" endtime="20201110 08:36:05.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:05.713" endtime="20201110 08:36:05.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.711" endtime="20201110 08:36:05.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.708" endtime="20201110 08:36:05.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.322" endtime="20201110 08:36:05.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.322" endtime="20201110 08:36:05.734"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.743" endtime="20201110 08:36:05.761"></status>
</kw>
<msg timestamp="20201110 08:36:05.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:05.741" endtime="20201110 08:36:05.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:05.762" endtime="20201110 08:36:05.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.765" endtime="20201110 08:36:05.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.739" endtime="20201110 08:36:05.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.736" endtime="20201110 08:36:05.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.775" endtime="20201110 08:36:06.060"></status>
</kw>
<msg timestamp="20201110 08:36:06.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02089975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020978625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:05.773" endtime="20201110 08:36:06.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02089975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020978625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:06.065" endtime="20201110 08:36:06.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.073" endtime="20201110 08:36:06.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.771" endtime="20201110 08:36:06.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.769" endtime="20201110 08:36:06.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:06.080" level="INFO">${RESULT} = [{'time': 0.020978625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.887499999999908e-05, 'source_diff': 7.887499999999908e-05}, {'time': 0.021061625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:06.076" endtime="20201110 08:36:06.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:06.093" level="INFO">${ACCURACY} = {'source_diff': [7.887499999999908e-05, 7.920800000000075e-05, 7.880600000000071e-05, 7.919500000000065e-05, 7.933400000000035e-05, 7.92909999999987e-05, 7.962499999999983e-05, 7.923699999999936e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:06.081" endtime="20201110 08:36:06.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.098" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:36:06.097" endtime="20201110 08:36:06.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.100" level="INFO">VALUE: [7.887499999999908e-05, 7.920800000000075e-05, 7.880600000000071e-05, 7.919500000000065e-05, 7.933400000000035e-05, 7.92909999999987e-05, 7.962499999999983e-05, 7.923699999999936e-05, 7.937499999999958e-05, 7.894400000000093e-05, 7.937499999999958e-05, 7.94450000000009e-05, 7.912499999999933e-05, 7.908300000000063e-05, 7.884700000000341e-05, 7.952800000000232e-05, 7.93329999999974e-05, 7.977699999999963e-05, 7.902799999999835e-05, 7.876399999999853e-05, 7.924999999999946e-05, 7.965299999999897e-05, 7.908300000000063e-05, 7.936100000000001e-05, 7.886099999999951e-05, 7.933300000000088e-05, 7.966699999999854e-05, 7.927800000000207e-05, 7.973599999999692e-05, 7.883300000000037e-05, 7.926399999999903e-05, 7.96389999999994e-05, 7.895899999999997e-05, 7.930599999999774e-05, 7.947300000000004e-05, 7.966599999999907e-05, 7.947200000000057e-05, 7.919399999999771e-05, 7.942999999999839e-05, 7.898600000000311e-05, 7.943099999999786e-05, 7.943100000000133e-05, 7.96389999999994e-05, 7.941700000000176e-05, 7.936100000000001e-05, 7.947300000000004e-05, 7.947300000000004e-05, 7.927699999999913e-05, 7.948600000000014e-05, 7.948600000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:36:06.099" endtime="20201110 08:36:06.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.094" endtime="20201110 08:36:06.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.104" endtime="20201110 08:36:06.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:06.107" endtime="20201110 08:36:06.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.106" endtime="20201110 08:36:06.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.102" endtime="20201110 08:36:06.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.735" endtime="20201110 08:36:06.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.734" endtime="20201110 08:36:06.128"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.137" endtime="20201110 08:36:06.155"></status>
</kw>
<msg timestamp="20201110 08:36:06.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:06.135" endtime="20201110 08:36:06.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:06.156" endtime="20201110 08:36:06.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.159" endtime="20201110 08:36:06.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.132" endtime="20201110 08:36:06.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.130" endtime="20201110 08:36:06.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.169" endtime="20201110 08:36:06.454"></status>
</kw>
<msg timestamp="20201110 08:36:06.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020683014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02076325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:06.167" endtime="20201110 08:36:06.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020683014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02076325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:06.458" endtime="20201110 08:36:06.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.467" endtime="20201110 08:36:06.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.165" endtime="20201110 08:36:06.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.163" endtime="20201110 08:36:06.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:06.473" level="INFO">${RESULT} = [{'time': 0.02076325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.023600000000089e-05, 'source_diff': 8.023600000000089e-05}, {'time': 0.02084925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:06.470" endtime="20201110 08:36:06.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:06.488" level="INFO">${ACCURACY} = {'source_diff': [8.023600000000089e-05, 8.030599999999874e-05, 8.04169999999993e-05, 8.051400000000028e-05, 8.054199999999942e-05, 8.018100000000208e-05, 8.006900000000206e-05, 8.034699999999798e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:06.474" endtime="20201110 08:36:06.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.492" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:36:06.491" endtime="20201110 08:36:06.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.495" level="INFO">VALUE: [8.023600000000089e-05, 8.030599999999874e-05, 8.04169999999993e-05, 8.051400000000028e-05, 8.054199999999942e-05, 8.018100000000208e-05, 8.006900000000206e-05, 8.034699999999798e-05, 7.997200000000107e-05, 8.069399999999921e-05, 8.019400000000218e-05, 7.981899999999834e-05, 8.023600000000089e-05, 8.02779999999996e-05, 8.056899999999909e-05, 8.020800000000175e-05, 8.019499999999818e-05, 8.018100000000208e-05, 8.066700000000301e-05, 7.987500000000008e-05, 8.016699999999904e-05, 8.018100000000208e-05, 8.00130000000003e-05, 8.025000000000046e-05, 8.008300000000163e-05, 8.02909999999997e-05, 8.070800000000225e-05, 8.025000000000046e-05, 8.045799999999853e-05, 8.07780000000001e-05, 7.987500000000008e-05, 8.073600000000139e-05, 8.045900000000147e-05, 8.070899999999825e-05, 8.027800000000307e-05, 8.000000000000021e-05, 8.001399999999978e-05, 8.008300000000163e-05, 8.067999999999964e-05, 8.000000000000021e-05, 8.001399999999978e-05, 8.012500000000033e-05, 8.01389999999999e-05, 8.045799999999853e-05, 8.048599999999767e-05, 8.01109999999973e-05, 8.01389999999999e-05, 7.987500000000008e-05, 8.005500000000249e-05, 7.995799999999803e-05]</msg>
<status status="PASS" starttime="20201110 08:36:06.493" endtime="20201110 08:36:06.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.489" endtime="20201110 08:36:06.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.505" endtime="20201110 08:36:06.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:06.509" endtime="20201110 08:36:06.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.507" endtime="20201110 08:36:06.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.503" endtime="20201110 08:36:06.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.129" endtime="20201110 08:36:06.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.128" endtime="20201110 08:36:06.529"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.538" endtime="20201110 08:36:06.556"></status>
</kw>
<msg timestamp="20201110 08:36:06.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:06.536" endtime="20201110 08:36:06.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:06.557" endtime="20201110 08:36:06.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.560" endtime="20201110 08:36:06.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.534" endtime="20201110 08:36:06.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.532" endtime="20201110 08:36:06.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.570" endtime="20201110 08:36:06.856"></status>
</kw>
<msg timestamp="20201110 08:36:06.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:06.568" endtime="20201110 08:36:06.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:06.860" endtime="20201110 08:36:06.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.868" endtime="20201110 08:36:06.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.566" endtime="20201110 08:36:06.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.564" endtime="20201110 08:36:06.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:06.875" level="INFO">${RESULT} = [{'time': 0.020368236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.12780000000006e-05, 'source_diff': 8.12780000000006e-05}, {'time': 0.02045425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:36:06.872" endtime="20201110 08:36:06.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:06.889" level="INFO">${ACCURACY} = {'source_diff': [8.12780000000006e-05, 8.134699999999898e-05, 8.116700000000004e-05, 8.087500000000108e-05, 8.155599999999999e-05, 8.169499999999968e-05, 8.154100000000095e-05, 8.091600000000032e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:06.876" endtime="20201110 08:36:06.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.893" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:36:06.892" endtime="20201110 08:36:06.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.896" level="INFO">VALUE: [8.12780000000006e-05, 8.134699999999898e-05, 8.116700000000004e-05, 8.087500000000108e-05, 8.155599999999999e-05, 8.169499999999968e-05, 8.154100000000095e-05, 8.091600000000032e-05, 8.115199999999753e-05, 8.083300000000238e-05, 8.16659999999976e-05, 8.177799999999763e-05, 8.123600000000189e-05, 8.109699999999873e-05, 8.11390000000009e-05, 8.126399999999756e-05, 8.155599999999999e-05, 8.10970000000022e-05, 8.136100000000202e-05, 8.165199999999803e-05, 8.097299999999807e-05, 8.154200000000042e-05, 8.112500000000133e-05, 8.124999999999799e-05, 8.17919999999972e-05, 8.144399999999996e-05, 8.115300000000047e-05, 8.129200000000017e-05, 8.130599999999974e-05, 8.172199999999935e-05, 8.088900000000065e-05, 8.151399999999781e-05, 8.105599999999949e-05, 8.088899999999719e-05, 8.099999999999774e-05, 8.126400000000103e-05, 8.140300000000072e-05, 8.094399999999946e-05, 8.104199999999992e-05, 8.09719999999986e-05, 8.094400000000293e-05, 8.112500000000133e-05, 8.136099999999855e-05, 8.162500000000183e-05, 8.088900000000065e-05, 8.122199999999885e-05, 8.122299999999832e-05, 8.07910000000002e-05, 8.127700000000113e-05, 8.16520000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:36:06.894" endtime="20201110 08:36:06.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.889" endtime="20201110 08:36:06.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.899" endtime="20201110 08:36:06.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:06.903" endtime="20201110 08:36:06.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.901" endtime="20201110 08:36:06.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.898" endtime="20201110 08:36:06.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.530" endtime="20201110 08:36:06.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.530" endtime="20201110 08:36:06.923"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.932" endtime="20201110 08:36:06.949"></status>
</kw>
<msg timestamp="20201110 08:36:06.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:06.931" endtime="20201110 08:36:06.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:06.951" endtime="20201110 08:36:06.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.953" endtime="20201110 08:36:06.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.928" endtime="20201110 08:36:06.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.926" endtime="20201110 08:36:06.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.963" endtime="20201110 08:36:07.249"></status>
</kw>
<msg timestamp="20201110 08:36:07.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:06.962" endtime="20201110 08:36:07.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:07.253" endtime="20201110 08:36:07.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.261" endtime="20201110 08:36:07.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.959" endtime="20201110 08:36:07.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.957" endtime="20201110 08:36:07.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:07.269" level="INFO">${RESULT} = [{'time': 0.019867347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.262499999999937e-05, 'source_diff': 8.262499999999937e-05}, {'time': 0.019954347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:07.265" endtime="20201110 08:36:07.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:07.282" level="INFO">${ACCURACY} = {'source_diff': [8.262499999999937e-05, 8.206900000000059e-05, 8.276400000000253e-05, 8.231900000000084e-05, 8.184699999999948e-05, 8.19719999999996e-05, 8.269499999999722e-05, 8.26109999999998e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:36:07.270" endtime="20201110 08:36:07.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.287" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:36:07.286" endtime="20201110 08:36:07.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.289" level="INFO">VALUE: [8.262499999999937e-05, 8.206900000000059e-05, 8.276400000000253e-05, 8.231900000000084e-05, 8.184699999999948e-05, 8.19719999999996e-05, 8.269499999999722e-05, 8.26109999999998e-05, 8.19170000000008e-05, 8.218000000000114e-05, 8.229099999999823e-05, 8.18049999999973e-05, 8.21659999999981e-05, 8.238900000000215e-05, 8.220800000000028e-05, 8.188900000000165e-05, 8.202799999999788e-05, 8.263899999999894e-05, 8.2152999999998e-05, 8.226400000000203e-05, 8.26529999999985e-05, 8.234799999999945e-05, 8.180500000000077e-05, 8.272299999999982e-05, 8.209699999999973e-05, 8.238899999999869e-05, 8.194400000000046e-05, 8.197200000000307e-05, 8.255499999999805e-05, 8.251400000000228e-05, 8.222199999999985e-05, 8.204200000000092e-05, 8.179200000000067e-05, 8.268100000000111e-05, 8.184799999999895e-05, 8.213899999999844e-05, 8.25979999999997e-05, 8.231900000000084e-05, 8.237499999999912e-05, 8.234699999999998e-05, 8.241600000000182e-05, 8.262499999999937e-05, 8.179200000000067e-05, 8.255600000000099e-05, 8.238899999999869e-05, 8.256999999999709e-05, 8.232000000000031e-05, 8.19719999999996e-05, 8.225000000000246e-05, 8.237499999999912e-05]</msg>
<status status="PASS" starttime="20201110 08:36:07.288" endtime="20201110 08:36:07.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.283" endtime="20201110 08:36:07.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.293" endtime="20201110 08:36:07.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:07.296" endtime="20201110 08:36:07.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.295" endtime="20201110 08:36:07.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.291" endtime="20201110 08:36:07.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.925" endtime="20201110 08:36:07.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.924" endtime="20201110 08:36:07.317"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.326" endtime="20201110 08:36:07.345"></status>
</kw>
<msg timestamp="20201110 08:36:07.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:07.324" endtime="20201110 08:36:07.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:07.346" endtime="20201110 08:36:07.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.349" endtime="20201110 08:36:07.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.322" endtime="20201110 08:36:07.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.320" endtime="20201110 08:36:07.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.359" endtime="20201110 08:36:07.647"></status>
</kw>
<msg timestamp="20201110 08:36:07.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:07.357" endtime="20201110 08:36:07.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:07.651" endtime="20201110 08:36:07.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.659" endtime="20201110 08:36:07.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.355" endtime="20201110 08:36:07.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.353" endtime="20201110 08:36:07.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:07.666" level="INFO">${RESULT} = [{'time': 0.019879681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.319500000000118e-05, 'source_diff': 8.319500000000118e-05}, {'time': 0.019968736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:07.663" endtime="20201110 08:36:07.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:07.679" level="INFO">${ACCURACY} = {'source_diff': [8.319500000000118e-05, 8.352799999999938e-05, 8.338899999999969e-05, 8.277699999999916e-05, 8.288899999999919e-05, 8.28330000000009e-05, 8.288899999999919e-05, 8.338899999999969e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:07.667" endtime="20201110 08:36:07.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.684" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:36:07.683" endtime="20201110 08:36:07.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.687" level="INFO">VALUE: [8.319500000000118e-05, 8.352799999999938e-05, 8.338899999999969e-05, 8.277699999999916e-05, 8.288899999999919e-05, 8.28330000000009e-05, 8.288899999999919e-05, 8.338899999999969e-05, 8.36110000000008e-05, 8.357000000000156e-05, 8.297199999999713e-05, 8.348600000000067e-05, 8.363800000000046e-05, 8.27919999999982e-05, 8.350000000000024e-05, 8.359700000000123e-05, 8.372199999999788e-05, 8.320799999999781e-05, 8.327799999999913e-05, 8.316699999999858e-05, 8.352800000000285e-05, 8.355599999999852e-05, 8.338899999999969e-05, 8.316700000000204e-05, 8.3459000000001e-05, 8.336200000000002e-05, 8.34859999999972e-05, 8.293000000000189e-05, 8.309700000000073e-05, 8.372199999999788e-05, 8.2846999999997e-05, 8.355499999999905e-05, 8.351399999999981e-05, 8.354199999999895e-05, 8.282000000000081e-05, 8.320900000000075e-05, 8.297300000000007e-05, 8.318100000000161e-05, 8.345799999999806e-05, 8.355600000000199e-05, 8.33049999999988e-05, 8.294400000000146e-05, 8.319400000000171e-05, 8.295799999999756e-05, 8.294400000000146e-05, 8.341699999999883e-05, 8.320800000000128e-05, 8.359700000000123e-05, 8.299999999999974e-05, 8.302799999999888e-05]</msg>
<status status="PASS" starttime="20201110 08:36:07.685" endtime="20201110 08:36:07.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.680" endtime="20201110 08:36:07.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.690" endtime="20201110 08:36:07.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:07.694" endtime="20201110 08:36:07.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.692" endtime="20201110 08:36:07.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.688" endtime="20201110 08:36:07.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.318" endtime="20201110 08:36:07.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.318" endtime="20201110 08:36:07.715"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.723" endtime="20201110 08:36:07.742"></status>
</kw>
<msg timestamp="20201110 08:36:07.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:07.722" endtime="20201110 08:36:07.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:07.744" endtime="20201110 08:36:07.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.746" endtime="20201110 08:36:07.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.719" endtime="20201110 08:36:07.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.717" endtime="20201110 08:36:07.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.756" endtime="20201110 08:36:08.042"></status>
</kw>
<msg timestamp="20201110 08:36:08.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019842819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:07.755" endtime="20201110 08:36:08.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019842819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.046" endtime="20201110 08:36:08.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.054" endtime="20201110 08:36:08.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.752" endtime="20201110 08:36:08.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.750" endtime="20201110 08:36:08.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.061" level="INFO">${RESULT} = [{'time': 0.019927611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.47920000000002e-05, 'source_diff': 8.47920000000002e-05}, {'time': 0.020017639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:08.057" endtime="20201110 08:36:08.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:08.075" level="INFO">${ACCURACY} = {'source_diff': [8.47920000000002e-05, 8.413900000000044e-05, 8.461099999999833e-05, 8.450000000000124e-05, 8.383299999999844e-05, 8.41249999999974e-05, 8.401400000000031e-05, 8.455500000000005e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:36:08.062" endtime="20201110 08:36:08.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.080" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:36:08.079" endtime="20201110 08:36:08.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.082" level="INFO">VALUE: [8.47920000000002e-05, 8.413900000000044e-05, 8.461099999999833e-05, 8.450000000000124e-05, 8.383299999999844e-05, 8.41249999999974e-05, 8.401400000000031e-05, 8.455500000000005e-05, 8.408399999999816e-05, 8.456999999999909e-05, 8.437500000000112e-05, 8.386100000000105e-05, 8.402699999999694e-05, 8.466700000000008e-05, 8.445899999999854e-05, 8.388900000000019e-05, 8.444499999999897e-05, 8.468099999999965e-05, 8.4153e-05, 8.418100000000261e-05, 8.37919999999992e-05, 8.441699999999983e-05, 8.38049999999993e-05, 8.417999999999967e-05, 8.422199999999838e-05, 8.379099999999973e-05, 8.377799999999963e-05, 8.431899999999937e-05, 8.459700000000223e-05, 8.400000000000074e-05, 8.395799999999856e-05, 8.412500000000087e-05, 8.420900000000175e-05, 8.420899999999829e-05, 8.394500000000193e-05, 8.477700000000116e-05, 8.426399999999709e-05, 8.394399999999899e-05, 8.452800000000038e-05, 8.406899999999912e-05, 8.441699999999983e-05, 8.470799999999931e-05, 8.437500000000112e-05, 8.430600000000274e-05, 8.434799999999798e-05, 8.436200000000102e-05, 8.392999999999942e-05, 8.455500000000005e-05, 8.463900000000094e-05, 8.419500000000218e-05]</msg>
<status status="PASS" starttime="20201110 08:36:08.081" endtime="20201110 08:36:08.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.076" endtime="20201110 08:36:08.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.086" endtime="20201110 08:36:08.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:08.089" endtime="20201110 08:36:08.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.088" endtime="20201110 08:36:08.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.084" endtime="20201110 08:36:08.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.716" endtime="20201110 08:36:08.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.715" endtime="20201110 08:36:08.110"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.118" endtime="20201110 08:36:08.137"></status>
</kw>
<msg timestamp="20201110 08:36:08.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:08.117" endtime="20201110 08:36:08.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:08.139" endtime="20201110 08:36:08.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.141" endtime="20201110 08:36:08.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.114" endtime="20201110 08:36:08.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.112" endtime="20201110 08:36:08.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.151" endtime="20201110 08:36:08.470"></status>
</kw>
<msg timestamp="20201110 08:36:08.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020665208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.149" endtime="20201110 08:36:08.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020665208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.475" endtime="20201110 08:36:08.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.483" endtime="20201110 08:36:08.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.147" endtime="20201110 08:36:08.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.145" endtime="20201110 08:36:08.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.490" level="INFO">${RESULT} = [{'time': 0.020665208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486100000000205e-05, 'source_diff': 8.486100000000205e-05}, {'time': 0.020754264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:08.487" endtime="20201110 08:36:08.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:08.504" level="INFO">${ACCURACY} = {'source_diff': [8.486100000000205e-05, 8.54720000000031e-05, 8.536100000000255e-05, 8.509699999999926e-05, 8.488900000000119e-05, 8.508299999999969e-05, 8.538899999999822e-05, 8.506999999999959e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:08.491" endtime="20201110 08:36:08.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.509" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:36:08.508" endtime="20201110 08:36:08.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.511" level="INFO">VALUE: [8.486100000000205e-05, 8.54720000000031e-05, 8.536100000000255e-05, 8.509699999999926e-05, 8.488900000000119e-05, 8.508299999999969e-05, 8.538899999999822e-05, 8.506999999999959e-05, 8.537500000000212e-05, 8.486100000000205e-05, 8.572199999999988e-05, 8.49859999999987e-05, 8.544400000000049e-05, 8.518000000000067e-05, 8.4846999999999e-05, 8.556900000000062e-05, 8.561099999999933e-05, 8.520799999999981e-05, 8.515299999999754e-05, 8.502800000000088e-05, 8.477799999999716e-05, 8.568000000000117e-05, 8.563799999999899e-05, 8.526400000000156e-05, 8.523599999999895e-05, 8.48050000000003e-05, 8.562500000000237e-05, 8.4846999999999e-05, 8.555600000000052e-05, 8.491699999999686e-05, 8.520899999999929e-05, 8.554200000000095e-05, 8.531999999999984e-05, 8.552800000000138e-05, 8.508399999999916e-05, 8.568000000000117e-05, 8.479100000000073e-05, 8.4846999999999e-05, 8.518000000000067e-05, 8.502800000000088e-05, 8.565299999999804e-05, 8.572199999999988e-05, 8.566700000000108e-05, 8.524999999999852e-05, 8.490300000000076e-05, 8.481999999999934e-05, 8.531900000000037e-05, 8.556900000000062e-05, 8.536099999999908e-05, 8.515200000000153e-05]</msg>
<status status="PASS" starttime="20201110 08:36:08.510" endtime="20201110 08:36:08.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.505" endtime="20201110 08:36:08.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.515" endtime="20201110 08:36:08.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:08.519" endtime="20201110 08:36:08.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.517" endtime="20201110 08:36:08.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.513" endtime="20201110 08:36:08.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.111" endtime="20201110 08:36:08.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.110" endtime="20201110 08:36:08.540"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.549" endtime="20201110 08:36:08.567"></status>
</kw>
<msg timestamp="20201110 08:36:08.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:08.547" endtime="20201110 08:36:08.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:08.569" endtime="20201110 08:36:08.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.571" endtime="20201110 08:36:08.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.545" endtime="20201110 08:36:08.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.542" endtime="20201110 08:36:08.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.582" endtime="20201110 08:36:08.869"></status>
</kw>
<msg timestamp="20201110 08:36:08.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021013069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021099306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.580" endtime="20201110 08:36:08.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021013069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021099306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.873" endtime="20201110 08:36:08.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.881" endtime="20201110 08:36:08.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.577" endtime="20201110 08:36:08.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.576" endtime="20201110 08:36:08.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.888" level="INFO">${RESULT} = [{'time': 0.021099306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.62370000000029e-05, 'source_diff': 8.62370000000029e-05}, {'time': 0.021191333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:08.885" endtime="20201110 08:36:08.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:08.902" level="INFO">${ACCURACY} = {'source_diff': [8.62370000000029e-05, 8.61249999999994e-05, 8.66530000000025e-05, 8.637499999999965e-05, 8.659700000000076e-05, 8.597200000000013e-05, 8.652800000000238e-05, 8.643099999999793e-05, 8....</msg>
<status status="PASS" starttime="20201110 08:36:08.889" endtime="20201110 08:36:08.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.907" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:36:08.906" endtime="20201110 08:36:08.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.909" level="INFO">VALUE: [8.62370000000029e-05, 8.61249999999994e-05, 8.66530000000025e-05, 8.637499999999965e-05, 8.659700000000076e-05, 8.597200000000013e-05, 8.652800000000238e-05, 8.643099999999793e-05, 8.618099999999768e-05, 8.661099999999686e-05, 8.637499999999965e-05, 8.580600000000077e-05, 8.58050000000013e-05, 8.658299999999772e-05, 8.672200000000088e-05, 8.654200000000195e-05, 8.66669999999986e-05, 8.594400000000099e-05, 8.5847e-05, 8.654200000000195e-05, 8.616700000000158e-05, 8.581999999999687e-05, 8.668100000000165e-05, 8.66119999999998e-05, 8.588900000000219e-05, 8.656900000000162e-05, 8.66249999999999e-05, 8.622200000000038e-05, 8.661100000000033e-05, 8.648699999999968e-05, 8.637499999999965e-05, 8.644400000000149e-05, 8.597200000000013e-05, 8.658400000000066e-05, 8.604200000000145e-05, 8.581999999999687e-05, 8.636199999999955e-05, 8.626299999999962e-05, 8.673600000000045e-05, 8.623599999999995e-05, 8.64860000000002e-05, 8.623599999999995e-05, 8.64860000000002e-05, 8.630600000000127e-05, 8.606999999999712e-05, 8.605600000000102e-05, 8.636100000000008e-05, 8.654199999999848e-05, 8.63050000000018e-05, 8.658300000000119e-05]</msg>
<status status="PASS" starttime="20201110 08:36:08.908" endtime="20201110 08:36:08.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.903" endtime="20201110 08:36:08.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.913" endtime="20201110 08:36:08.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:08.917" endtime="20201110 08:36:08.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.915" endtime="20201110 08:36:08.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.912" endtime="20201110 08:36:08.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.541" endtime="20201110 08:36:08.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.540" endtime="20201110 08:36:08.938"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.947" endtime="20201110 08:36:08.966"></status>
</kw>
<msg timestamp="20201110 08:36:08.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:08.945" endtime="20201110 08:36:08.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:08.968" endtime="20201110 08:36:08.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.971" endtime="20201110 08:36:08.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.943" endtime="20201110 08:36:08.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.940" endtime="20201110 08:36:08.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.981" endtime="20201110 08:36:09.267"></status>
</kw>
<msg timestamp="20201110 08:36:09.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020936347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.979" endtime="20201110 08:36:09.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020936347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:09.271" endtime="20201110 08:36:09.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.280" endtime="20201110 08:36:09.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.977" endtime="20201110 08:36:09.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.975" endtime="20201110 08:36:09.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:09.287" level="INFO">${RESULT} = [{'time': 0.020936347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.772200000000188e-05, 'source_diff': 8.772200000000188e-05}, {'time': 0.021027375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:09.283" endtime="20201110 08:36:09.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:09.301" level="INFO">${ACCURACY} = {'source_diff': [8.772200000000188e-05, 8.691700000000233e-05, 8.765300000000004e-05, 8.69310000000019e-05, 8.695900000000104e-05, 8.772299999999789e-05, 8.736200000000055e-05, 8.708400000000116e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:09.288" endtime="20201110 08:36:09.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.306" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:36:09.305" endtime="20201110 08:36:09.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.309" level="INFO">VALUE: [8.772200000000188e-05, 8.691700000000233e-05, 8.765300000000004e-05, 8.69310000000019e-05, 8.695900000000104e-05, 8.772299999999789e-05, 8.736200000000055e-05, 8.708400000000116e-05, 8.723600000000095e-05, 8.745799999999859e-05, 8.71669999999991e-05, 8.715299999999954e-05, 8.688899999999972e-05, 8.726400000000009e-05, 8.68189999999984e-05, 8.78059999999993e-05, 8.736100000000108e-05, 8.701399999999984e-05, 8.71250000000004e-05, 8.726400000000009e-05, 8.770900000000179e-05, 8.763800000000099e-05, 8.738900000000022e-05, 8.727800000000313e-05, 8.76250000000009e-05, 8.686100000000058e-05, 8.7638999999997e-05, 8.751400000000034e-05, 8.765300000000004e-05, 8.736100000000108e-05, 8.745900000000154e-05, 8.769399999999927e-05, 8.758399999999819e-05, 8.679100000000273e-05, 8.715200000000006e-05, 8.723600000000095e-05, 8.688899999999972e-05, 8.690300000000276e-05, 8.744399999999902e-05, 8.745799999999859e-05, 8.768099999999918e-05, 8.776400000000059e-05, 8.715299999999954e-05, 8.695900000000104e-05, 8.76120000000008e-05, 8.683299999999797e-05, 8.715200000000006e-05, 8.747200000000163e-05, 8.719399999999877e-05, 8.737499999999718e-05]</msg>
<status status="PASS" starttime="20201110 08:36:09.307" endtime="20201110 08:36:09.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.302" endtime="20201110 08:36:09.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.313" endtime="20201110 08:36:09.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:09.316" endtime="20201110 08:36:09.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.315" endtime="20201110 08:36:09.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.311" endtime="20201110 08:36:09.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.939" endtime="20201110 08:36:09.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.938" endtime="20201110 08:36:09.337"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.346" endtime="20201110 08:36:09.365"></status>
</kw>
<msg timestamp="20201110 08:36:09.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:09.345" endtime="20201110 08:36:09.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:09.366" endtime="20201110 08:36:09.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.369" endtime="20201110 08:36:09.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.342" endtime="20201110 08:36:09.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.340" endtime="20201110 08:36:09.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.379" endtime="20201110 08:36:09.666"></status>
</kw>
<msg timestamp="20201110 08:36:09.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:09.378" endtime="20201110 08:36:09.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:09.670" endtime="20201110 08:36:09.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.678" endtime="20201110 08:36:09.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.375" endtime="20201110 08:36:09.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.373" endtime="20201110 08:36:09.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:09.685" level="INFO">${RESULT} = [{'time': 0.020583472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.776399999999712e-05, 'source_diff': 8.776399999999712e-05}, {'time': 0.020675486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:09.682" endtime="20201110 08:36:09.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:09.700" level="INFO">${ACCURACY} = {'source_diff': [8.776399999999712e-05, 8.797199999999866e-05, 8.779199999999973e-05, 8.809699999999879e-05, 8.786099999999811e-05, 8.809699999999879e-05, 8.78059999999993e-05, 8.812499999999793e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:09.686" endtime="20201110 08:36:09.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.704" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:36:09.703" endtime="20201110 08:36:09.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.707" level="INFO">VALUE: [8.776399999999712e-05, 8.797199999999866e-05, 8.779199999999973e-05, 8.809699999999879e-05, 8.786099999999811e-05, 8.809699999999879e-05, 8.78059999999993e-05, 8.812499999999793e-05, 8.809700000000226e-05, 8.798599999999823e-05, 8.791600000000038e-05, 8.855500000000058e-05, 8.81800000000002e-05, 8.783299999999897e-05, 8.808299999999922e-05, 8.784699999999854e-05, 8.777800000000016e-05, 8.833399999999894e-05, 8.865300000000104e-05, 8.84999999999983e-05, 8.812499999999793e-05, 8.84860000000022e-05, 8.816600000000063e-05, 8.820800000000281e-05, 8.830500000000033e-05, 8.815300000000054e-05, 8.83189999999999e-05, 8.819399999999977e-05, 8.811099999999836e-05, 8.779199999999973e-05, 8.873699999999846e-05, 8.83059999999998e-05, 8.843099999999993e-05, 8.872199999999941e-05, 8.841600000000088e-05, 8.838900000000122e-05, 8.795800000000256e-05, 8.861099999999886e-05, 8.863900000000147e-05, 8.800000000000127e-05, 8.795799999999909e-05, 8.788800000000124e-05, 8.876400000000159e-05, 8.792999999999995e-05, 8.86250000000019e-05, 8.841600000000088e-05, 8.861099999999886e-05, 8.830500000000033e-05, 8.823599999999848e-05, 8.84999999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:36:09.706" endtime="20201110 08:36:09.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.701" endtime="20201110 08:36:09.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.711" endtime="20201110 08:36:09.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:09.714" endtime="20201110 08:36:09.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.712" endtime="20201110 08:36:09.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.709" endtime="20201110 08:36:09.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.338" endtime="20201110 08:36:09.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.338" endtime="20201110 08:36:09.735"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.744" endtime="20201110 08:36:09.762"></status>
</kw>
<msg timestamp="20201110 08:36:09.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:09.742" endtime="20201110 08:36:09.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:09.763" endtime="20201110 08:36:09.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.766" endtime="20201110 08:36:09.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.740" endtime="20201110 08:36:09.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.737" endtime="20201110 08:36:09.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.776" endtime="20201110 08:36:10.074"></status>
</kw>
<msg timestamp="20201110 08:36:10.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020184986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:09.774" endtime="20201110 08:36:10.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020184986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.078" endtime="20201110 08:36:10.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.086" endtime="20201110 08:36:10.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.772" endtime="20201110 08:36:10.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.770" endtime="20201110 08:36:10.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:10.093" level="INFO">${RESULT} = [{'time': 0.020274139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915300000000154e-05, 'source_diff': 8.915300000000154e-05}, {'time': 0.020366139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:10.090" endtime="20201110 08:36:10.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:10.107" level="INFO">${ACCURACY} = {'source_diff': [8.915300000000154e-05, 8.930599999999733e-05, 8.968100000000118e-05, 8.966599999999866e-05, 8.907000000000012e-05, 8.962499999999943e-05, 8.913799999999902e-05, 8.908300000000022e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:10.094" endtime="20201110 08:36:10.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.111" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:36:10.110" endtime="20201110 08:36:10.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.114" level="INFO">VALUE: [8.915300000000154e-05, 8.930599999999733e-05, 8.968100000000118e-05, 8.966599999999866e-05, 8.907000000000012e-05, 8.962499999999943e-05, 8.913799999999902e-05, 8.908300000000022e-05, 8.919400000000077e-05, 8.880499999999736e-05, 8.909699999999979e-05, 8.888900000000172e-05, 8.943100000000093e-05, 8.91389999999985e-05, 8.927800000000166e-05, 8.937499999999918e-05, 8.965299999999857e-05, 8.969400000000127e-05, 8.911099999999936e-05, 8.904100000000151e-05, 8.936099999999961e-05, 8.922199999999991e-05, 8.929200000000123e-05, 8.974999999999955e-05, 8.969499999999728e-05, 8.91250000000024e-05, 8.947200000000016e-05, 8.969500000000075e-05, 8.901400000000184e-05, 8.938799999999927e-05, 8.89860000000027e-05, 8.976399999999912e-05, 8.930500000000133e-05, 8.880499999999736e-05, 8.887499999999868e-05, 8.895900000000304e-05, 8.905600000000055e-05, 8.920899999999982e-05, 8.932000000000037e-05, 8.880599999999683e-05, 8.977799999999869e-05, 8.883299999999997e-05, 8.911100000000283e-05, 8.888899999999825e-05, 8.879200000000073e-05, 8.895800000000009e-05, 8.920800000000034e-05, 8.938899999999875e-05, 8.890300000000129e-05, 8.968100000000118e-05]</msg>
<status status="PASS" starttime="20201110 08:36:10.112" endtime="20201110 08:36:10.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.108" endtime="20201110 08:36:10.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.117" endtime="20201110 08:36:10.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:10.121" endtime="20201110 08:36:10.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.119" endtime="20201110 08:36:10.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.116" endtime="20201110 08:36:10.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.736" endtime="20201110 08:36:10.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.735" endtime="20201110 08:36:10.142"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.151" endtime="20201110 08:36:10.169"></status>
</kw>
<msg timestamp="20201110 08:36:10.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.149" endtime="20201110 08:36:10.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.171" endtime="20201110 08:36:10.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.173" endtime="20201110 08:36:10.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.146" endtime="20201110 08:36:10.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.144" endtime="20201110 08:36:10.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.183" endtime="20201110 08:36:10.479"></status>
</kw>
<msg timestamp="20201110 08:36:10.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020755139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020845403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.182" endtime="20201110 08:36:10.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020755139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020845403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.483" endtime="20201110 08:36:10.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.491" endtime="20201110 08:36:10.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.179" endtime="20201110 08:36:10.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.177" endtime="20201110 08:36:10.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:10.498" level="INFO">${RESULT} = [{'time': 0.020845403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.026399999999962e-05, 'source_diff': 9.026399999999962e-05}, {'time': 0.020938431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:10.495" endtime="20201110 08:36:10.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:10.511" level="INFO">${ACCURACY} = {'source_diff': [9.026399999999962e-05, 8.993100000000143e-05, 9.073600000000098e-05, 9.01939999999983e-05, 9.067999999999923e-05, 8.988899999999925e-05, 8.979099999999879e-05, 9.030499999999886e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:10.499" endtime="20201110 08:36:10.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.516" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:36:10.515" endtime="20201110 08:36:10.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.518" level="INFO">VALUE: [9.026399999999962e-05, 8.993100000000143e-05, 9.073600000000098e-05, 9.01939999999983e-05, 9.067999999999923e-05, 8.988899999999925e-05, 8.979099999999879e-05, 9.030499999999886e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.041700000000236e-05, 8.983400000000044e-05, 9.020900000000082e-05, 9.027699999999972e-05, 9.018100000000168e-05, 9.017999999999873e-05, 9.001399999999937e-05, 9.008400000000069e-05, 8.988900000000272e-05, 9.075000000000055e-05, 9.008300000000122e-05, 9.023600000000048e-05, 9.018099999999821e-05, 9.008400000000069e-05, 9.043100000000193e-05, 9.037500000000018e-05, 8.979099999999879e-05, 9.054099999999954e-05, 9.056899999999868e-05, 9.055499999999911e-05, 9.038899999999975e-05, 9.044399999999855e-05, 8.982000000000087e-05, 9.065299999999957e-05, 9.020900000000082e-05, 9.047300000000064e-05, 9.030599999999833e-05, 9.018100000000168e-05, 9.06520000000001e-05, 9.0332999999998e-05, 9.002700000000294e-05, 9.008299999999775e-05, 9.041700000000236e-05, 9.075000000000055e-05, 8.997199999999719e-05, 9.048600000000073e-05, 9.080499999999936e-05, 8.988799999999977e-05, 8.984699999999707e-05, 9.029199999999876e-05]</msg>
<status status="PASS" starttime="20201110 08:36:10.517" endtime="20201110 08:36:10.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.512" endtime="20201110 08:36:10.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.522" endtime="20201110 08:36:10.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:10.525" endtime="20201110 08:36:10.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.524" endtime="20201110 08:36:10.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.520" endtime="20201110 08:36:10.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.143" endtime="20201110 08:36:10.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.142" endtime="20201110 08:36:10.546"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.555" endtime="20201110 08:36:10.573"></status>
</kw>
<msg timestamp="20201110 08:36:10.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.553" endtime="20201110 08:36:10.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.574" endtime="20201110 08:36:10.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.577" endtime="20201110 08:36:10.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.551" endtime="20201110 08:36:10.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.549" endtime="20201110 08:36:10.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.587" endtime="20201110 08:36:10.884"></status>
</kw>
<msg timestamp="20201110 08:36:10.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.586" endtime="20201110 08:36:10.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.888" endtime="20201110 08:36:10.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.897" endtime="20201110 08:36:10.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.583" endtime="20201110 08:36:10.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.581" endtime="20201110 08:36:10.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:10.903" level="INFO">${RESULT} = [{'time': 0.019864194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.15000000000013e-05, 'source_diff': 9.15000000000013e-05}, {'time': 0.019959222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:10.900" endtime="20201110 08:36:10.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:10.917" level="INFO">${ACCURACY} = {'source_diff': [9.15000000000013e-05, 9.086099999999764e-05, 9.091599999999991e-05, 9.166600000000066e-05, 9.106899999999918e-05, 9.120799999999887e-05, 9.095799999999862e-05, 9.144499999999903e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:10.904" endtime="20201110 08:36:10.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.921" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:36:10.920" endtime="20201110 08:36:10.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.924" level="INFO">VALUE: [9.15000000000013e-05, 9.086099999999764e-05, 9.091599999999991e-05, 9.166600000000066e-05, 9.106899999999918e-05, 9.120799999999887e-05, 9.095799999999862e-05, 9.144499999999903e-05, 9.161099999999839e-05, 9.158399999999872e-05, 9.088900000000025e-05, 9.087499999999721e-05, 9.161100000000186e-05, 9.172199999999894e-05, 9.168099999999971e-05, 9.091699999999939e-05, 9.129199999999976e-05, 9.079199999999926e-05, 9.119500000000225e-05, 9.097200000000166e-05, 9.155599999999958e-05, 9.145800000000259e-05, 9.154200000000001e-05, 9.095799999999862e-05, 9.095799999999862e-05, 9.11390000000005e-05, 9.090299999999982e-05, 9.095800000000209e-05, 9.101400000000037e-05, 9.088900000000025e-05, 9.126400000000062e-05, 9.125000000000105e-05, 9.086100000000111e-05, 9.176299999999818e-05, 9.122199999999844e-05, 9.098600000000123e-05, 9.170800000000284e-05, 9.11939999999993e-05, 9.106900000000265e-05, 9.15139999999974e-05, 9.154200000000001e-05, 9.145800000000259e-05, 9.108399999999822e-05, 9.166700000000014e-05, 9.137499999999771e-05, 9.116699999999964e-05, 9.11520000000006e-05, 9.123599999999801e-05, 9.094400000000252e-05, 9.127800000000019e-05]</msg>
<status status="PASS" starttime="20201110 08:36:10.922" endtime="20201110 08:36:10.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.918" endtime="20201110 08:36:10.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.927" endtime="20201110 08:36:10.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:10.931" endtime="20201110 08:36:10.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.929" endtime="20201110 08:36:10.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.926" endtime="20201110 08:36:10.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.547" endtime="20201110 08:36:10.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.547" endtime="20201110 08:36:10.952"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.960" endtime="20201110 08:36:10.979"></status>
</kw>
<msg timestamp="20201110 08:36:10.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.959" endtime="20201110 08:36:10.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.980" endtime="20201110 08:36:10.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.983" endtime="20201110 08:36:10.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.956" endtime="20201110 08:36:10.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.954" endtime="20201110 08:36:10.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.993" endtime="20201110 08:36:11.278"></status>
</kw>
<msg timestamp="20201110 08:36:11.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.991" endtime="20201110 08:36:11.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:11.282" endtime="20201110 08:36:11.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.290" endtime="20201110 08:36:11.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.989" endtime="20201110 08:36:11.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.987" endtime="20201110 08:36:11.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:11.297" level="INFO">${RESULT} = [{'time': 0.019839736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.274999999999908e-05, 'source_diff': 9.274999999999908e-05}, {'time': 0.019934764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:11.293" endtime="20201110 08:36:11.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:11.311" level="INFO">${ACCURACY} = {'source_diff': [9.274999999999908e-05, 9.204200000000051e-05, 9.219499999999978e-05, 9.209699999999932e-05, 9.243100000000046e-05, 9.238899999999828e-05, 9.204100000000104e-05, 9.24719999999997e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:11.298" endtime="20201110 08:36:11.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.316" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:36:11.315" endtime="20201110 08:36:11.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.318" level="INFO">VALUE: [9.274999999999908e-05, 9.204200000000051e-05, 9.219499999999978e-05, 9.209699999999932e-05, 9.243100000000046e-05, 9.238899999999828e-05, 9.204100000000104e-05, 9.24719999999997e-05, 9.21390000000015e-05, 9.252799999999797e-05, 9.226399999999815e-05, 9.279200000000126e-05, 9.184699999999907e-05, 9.273600000000298e-05, 9.252799999999797e-05, 9.272199999999994e-05, 9.243100000000046e-05, 9.274999999999908e-05, 9.194400000000005e-05, 9.190200000000134e-05, 9.270800000000037e-05, 9.179099999999732e-05, 9.254200000000101e-05, 9.259699999999982e-05, 9.259799999999929e-05, 9.195799999999962e-05, 9.240199999999837e-05, 9.230599999999686e-05, 9.190300000000082e-05, 9.237499999999871e-05, 9.273599999999951e-05, 9.202799999999747e-05, 9.186099999999864e-05, 9.248599999999926e-05, 9.244399999999708e-05, 9.231900000000043e-05, 9.2639000000002e-05, 9.243099999999699e-05, 9.177800000000069e-05, 9.273599999999951e-05, 9.190300000000082e-05, 9.243000000000098e-05, 9.277799999999822e-05, 9.193000000000048e-05, 9.202800000000094e-05, 9.197200000000266e-05, 9.279200000000126e-05, 9.190300000000082e-05, 9.226399999999815e-05, 9.262499999999896e-05]</msg>
<status status="PASS" starttime="20201110 08:36:11.317" endtime="20201110 08:36:11.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.312" endtime="20201110 08:36:11.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.322" endtime="20201110 08:36:11.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:11.326" endtime="20201110 08:36:11.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.324" endtime="20201110 08:36:11.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.320" endtime="20201110 08:36:11.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.953" endtime="20201110 08:36:11.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.952" endtime="20201110 08:36:11.347"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.356" endtime="20201110 08:36:11.375"></status>
</kw>
<msg timestamp="20201110 08:36:11.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.355" endtime="20201110 08:36:11.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.377" endtime="20201110 08:36:11.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.379" endtime="20201110 08:36:11.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.352" endtime="20201110 08:36:11.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.350" endtime="20201110 08:36:11.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.389" endtime="20201110 08:36:11.674"></status>
</kw>
<msg timestamp="20201110 08:36:11.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:11.388" endtime="20201110 08:36:11.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:11.679" endtime="20201110 08:36:11.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.687" endtime="20201110 08:36:11.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.385" endtime="20201110 08:36:11.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.383" endtime="20201110 08:36:11.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:11.693" level="INFO">${RESULT} = [{'time': 0.020104611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.281900000000093e-05, 'source_diff': 9.281900000000093e-05}, {'time': 0.020203625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:11.690" endtime="20201110 08:36:11.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:11.707" level="INFO">${ACCURACY} = {'source_diff': [9.281900000000093e-05, 9.323600000000001e-05, 9.354200000000201e-05, 9.355600000000158e-05, 9.31529999999986e-05, 9.342999999999851e-05, 9.334800000000004e-05, 9.327799999999872e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:11.695" endtime="20201110 08:36:11.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.711" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:36:11.710" endtime="20201110 08:36:11.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.714" level="INFO">VALUE: [9.281900000000093e-05, 9.323600000000001e-05, 9.354200000000201e-05, 9.355600000000158e-05, 9.31529999999986e-05, 9.342999999999851e-05, 9.334800000000004e-05, 9.327799999999872e-05, 9.3333000000001e-05, 9.341599999999894e-05, 9.309700000000032e-05, 9.356900000000168e-05, 9.308400000000022e-05, 9.308300000000075e-05, 9.324999999999958e-05, 9.316600000000216e-05, 9.368099999999824e-05, 9.275000000000255e-05, 9.277799999999822e-05, 9.355499999999864e-05, 9.284700000000007e-05, 9.373600000000051e-05, 9.340299999999885e-05, 9.322200000000044e-05, 9.37079999999979e-05, 9.351400000000287e-05, 9.348600000000026e-05, 9.318100000000121e-05, 9.305600000000108e-05, 9.355600000000158e-05, 9.36529999999991e-05, 9.308300000000075e-05, 9.35139999999994e-05, 9.344400000000155e-05, 9.313899999999903e-05, 9.308300000000075e-05, 9.291699999999792e-05, 9.277800000000169e-05, 9.327799999999872e-05, 9.30000000000028e-05, 9.362499999999996e-05, 9.36659999999992e-05, 9.342999999999851e-05, 9.29720000000002e-05, 9.3333000000001e-05, 9.299999999999933e-05, 9.333299999999753e-05, 9.28330000000005e-05, 9.344499999999756e-05, 9.304200000000151e-05]</msg>
<status status="PASS" starttime="20201110 08:36:11.712" endtime="20201110 08:36:11.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.708" endtime="20201110 08:36:11.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.723" endtime="20201110 08:36:11.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:11.726" endtime="20201110 08:36:11.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.725" endtime="20201110 08:36:11.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.721" endtime="20201110 08:36:11.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.348" endtime="20201110 08:36:11.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.348" endtime="20201110 08:36:11.747"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.756" endtime="20201110 08:36:11.774"></status>
</kw>
<msg timestamp="20201110 08:36:11.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.754" endtime="20201110 08:36:11.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.776" endtime="20201110 08:36:11.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.778" endtime="20201110 08:36:11.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.752" endtime="20201110 08:36:11.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.750" endtime="20201110 08:36:11.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.788" endtime="20201110 08:36:12.073"></status>
</kw>
<msg timestamp="20201110 08:36:12.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020653542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:11.787" endtime="20201110 08:36:12.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020653542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.077" endtime="20201110 08:36:12.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.086" endtime="20201110 08:36:12.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.784" endtime="20201110 08:36:12.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.782" endtime="20201110 08:36:12.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:12.092" level="INFO">${RESULT} = [{'time': 0.020653542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416699999999917e-05, 'source_diff': 9.416699999999917e-05}, {'time': 0.020753569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:12.089" endtime="20201110 08:36:12.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:12.106" level="INFO">${ACCURACY} = {'source_diff': [9.416699999999917e-05, 9.419399999999883e-05, 9.384800000000054e-05, 9.420800000000187e-05, 9.415200000000012e-05, 9.45140000000004e-05, 9.433299999999853e-05, 9.413900000000003e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:12.093" endtime="20201110 08:36:12.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.110" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:36:12.109" endtime="20201110 08:36:12.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.113" level="INFO">VALUE: [9.416699999999917e-05, 9.419399999999883e-05, 9.384800000000054e-05, 9.420800000000187e-05, 9.415200000000012e-05, 9.45140000000004e-05, 9.433299999999853e-05, 9.413900000000003e-05, 9.409700000000132e-05, 9.408300000000175e-05, 9.457000000000215e-05, 9.405600000000208e-05, 9.443099999999899e-05, 9.443099999999899e-05, 9.442999999999951e-05, 9.445800000000212e-05, 9.411100000000089e-05, 9.431900000000243e-05, 9.395799999999815e-05, 9.454199999999954e-05, 9.407000000000165e-05, 9.393099999999849e-05, 9.455599999999911e-05, 9.419499999999831e-05, 9.391599999999944e-05, 9.392999999999901e-05, 9.476400000000065e-05, 9.402800000000294e-05, 9.400000000000033e-05, 9.436100000000114e-05, 9.461099999999792e-05, 9.423600000000101e-05, 9.408399999999775e-05, 9.44720000000017e-05, 9.413900000000003e-05, 9.388899999999978e-05, 9.387500000000021e-05, 9.458299999999878e-05, 9.386099999999717e-05, 9.429199999999929e-05, 9.430499999999939e-05, 9.44720000000017e-05, 9.466699999999967e-05, 9.46530000000001e-05, 9.425000000000058e-05, 9.394399999999858e-05, 9.41659999999997e-05, 9.469399999999933e-05, 9.430499999999939e-05, 9.417999999999926e-05]</msg>
<status status="PASS" starttime="20201110 08:36:12.111" endtime="20201110 08:36:12.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.107" endtime="20201110 08:36:12.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.116" endtime="20201110 08:36:12.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:12.120" endtime="20201110 08:36:12.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.118" endtime="20201110 08:36:12.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.115" endtime="20201110 08:36:12.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.748" endtime="20201110 08:36:12.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.747" endtime="20201110 08:36:12.141"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.149" endtime="20201110 08:36:12.170"></status>
</kw>
<msg timestamp="20201110 08:36:12.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.148" endtime="20201110 08:36:12.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.171" endtime="20201110 08:36:12.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.174" endtime="20201110 08:36:12.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.145" endtime="20201110 08:36:12.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.143" endtime="20201110 08:36:12.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.184" endtime="20201110 08:36:12.470"></status>
</kw>
<msg timestamp="20201110 08:36:12.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020779694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.182" endtime="20201110 08:36:12.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020779694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.474" endtime="20201110 08:36:12.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.482" endtime="20201110 08:36:12.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.180" endtime="20201110 08:36:12.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.178" endtime="20201110 08:36:12.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:12.489" level="INFO">${RESULT} = [{'time': 0.020779694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.54720000000027e-05, 'source_diff': 9.54720000000027e-05}, {'time': 0.020878694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:12.486" endtime="20201110 08:36:12.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:12.503" level="INFO">${ACCURACY} = {'source_diff': [9.54720000000027e-05, 9.531899999999996e-05, 9.544400000000008e-05, 9.52079999999994e-05, 9.547199999999922e-05, 9.561099999999892e-05, 9.481899999999946e-05, 9.537499999999824e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:36:12.490" endtime="20201110 08:36:12.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.507" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:36:12.506" endtime="20201110 08:36:12.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.509" level="INFO">VALUE: [9.54720000000027e-05, 9.531899999999996e-05, 9.544400000000008e-05, 9.52079999999994e-05, 9.547199999999922e-05, 9.561099999999892e-05, 9.481899999999946e-05, 9.537499999999824e-05, 9.519500000000278e-05, 9.537499999999824e-05, 9.501299999999796e-05, 9.565199999999816e-05, 9.509699999999885e-05, 9.562499999999849e-05, 9.505599999999961e-05, 9.537499999999824e-05, 9.481999999999893e-05, 9.541700000000042e-05, 9.536100000000214e-05, 9.515299999999713e-05, 9.558399999999925e-05, 9.498600000000176e-05, 9.561099999999892e-05, 9.573599999999904e-05, 9.568000000000076e-05, 9.538899999999781e-05, 9.545799999999965e-05, 9.490300000000035e-05, 9.5333000000003e-05, 9.577800000000122e-05, 9.487499999999774e-05, 9.574999999999861e-05, 9.556999999999968e-05, 9.568000000000076e-05, 9.53469999999991e-05, 9.554100000000107e-05, 9.505500000000014e-05, 9.529200000000029e-05, 9.516700000000017e-05, 9.563900000000153e-05, 9.525000000000158e-05, 9.550000000000183e-05, 9.540300000000085e-05, 9.498700000000124e-05, 9.477700000000075e-05, 9.480499999999989e-05, 9.504100000000057e-05, 9.573599999999904e-05, 9.519399999999983e-05, 9.56530000000011e-05]</msg>
<status status="PASS" starttime="20201110 08:36:12.508" endtime="20201110 08:36:12.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.503" endtime="20201110 08:36:12.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.513" endtime="20201110 08:36:12.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:12.517" endtime="20201110 08:36:12.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.515" endtime="20201110 08:36:12.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.511" endtime="20201110 08:36:12.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.141" endtime="20201110 08:36:12.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.141" endtime="20201110 08:36:12.538"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.546" endtime="20201110 08:36:12.565"></status>
</kw>
<msg timestamp="20201110 08:36:12.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.545" endtime="20201110 08:36:12.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.567" endtime="20201110 08:36:12.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.569" endtime="20201110 08:36:12.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.542" endtime="20201110 08:36:12.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.540" endtime="20201110 08:36:12.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.579" endtime="20201110 08:36:12.866"></status>
</kw>
<msg timestamp="20201110 08:36:12.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020910278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021006778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.578" endtime="20201110 08:36:12.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020910278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021006778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.870" endtime="20201110 08:36:12.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.879" endtime="20201110 08:36:12.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.575" endtime="20201110 08:36:12.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.573" endtime="20201110 08:36:12.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:12.885" level="INFO">${RESULT} = [{'time': 0.021006778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.649999999999936e-05, 'source_diff': 9.649999999999936e-05}, {'time': 0.021107778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:12.882" endtime="20201110 08:36:12.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:12.900" level="INFO">${ACCURACY} = {'source_diff': [9.649999999999936e-05, 9.655600000000111e-05, 9.620899999999988e-05, 9.644499999999709e-05, 9.651399999999893e-05, 9.606900000000071e-05, 9.62080000000004e-05, 9.638899999999881e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:12.886" endtime="20201110 08:36:12.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.905" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:36:12.903" endtime="20201110 08:36:12.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.907" level="INFO">VALUE: [9.649999999999936e-05, 9.655600000000111e-05, 9.620899999999988e-05, 9.644499999999709e-05, 9.651399999999893e-05, 9.606900000000071e-05, 9.62080000000004e-05, 9.638899999999881e-05, 9.579199999999732e-05, 9.654199999999807e-05, 9.658400000000025e-05, 9.658400000000025e-05, 9.618099999999727e-05, 9.65140000000024e-05, 9.659700000000035e-05, 9.58339999999995e-05, 9.613900000000203e-05, 9.626399999999868e-05, 9.579099999999785e-05, 9.616700000000117e-05, 9.602800000000147e-05, 9.613899999999856e-05, 9.6334e-05, 9.67920000000018e-05, 9.608400000000322e-05, 9.622199999999997e-05, 9.668099999999777e-05, 9.587499999999874e-05, 9.647200000000022e-05, 9.643000000000151e-05, 9.638900000000228e-05, 9.613899999999856e-05, 9.65279999999985e-05, 9.591700000000092e-05, 9.627799999999825e-05, 9.665299999999863e-05, 9.672200000000047e-05, 9.636099999999967e-05, 9.599999999999886e-05, 9.681900000000146e-05, 9.64859999999998e-05, 9.663900000000253e-05, 9.65279999999985e-05, 9.608300000000028e-05, 9.636100000000314e-05, 9.629199999999782e-05, 9.618100000000074e-05, 9.636199999999914e-05, 9.627699999999878e-05, 9.676399999999918e-05]</msg>
<status status="PASS" starttime="20201110 08:36:12.906" endtime="20201110 08:36:12.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.901" endtime="20201110 08:36:12.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.911" endtime="20201110 08:36:12.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:12.914" endtime="20201110 08:36:12.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.912" endtime="20201110 08:36:12.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.909" endtime="20201110 08:36:12.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.538" endtime="20201110 08:36:12.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.538" endtime="20201110 08:36:12.935"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.943" endtime="20201110 08:36:12.962"></status>
</kw>
<msg timestamp="20201110 08:36:12.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.942" endtime="20201110 08:36:12.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.964" endtime="20201110 08:36:12.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.966" endtime="20201110 08:36:12.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.939" endtime="20201110 08:36:12.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.937" endtime="20201110 08:36:12.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.976" endtime="20201110 08:36:13.263"></status>
</kw>
<msg timestamp="20201110 08:36:13.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.975" endtime="20201110 08:36:13.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.267" endtime="20201110 08:36:13.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.276" endtime="20201110 08:36:13.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.972" endtime="20201110 08:36:13.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.970" endtime="20201110 08:36:13.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.282" level="INFO">${RESULT} = [{'time': 0.019792403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722200000000097e-05, 'source_diff': 9.722200000000097e-05}, {'time': 0.019892403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:13.279" endtime="20201110 08:36:13.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:13.296" level="INFO">${ACCURACY} = {'source_diff': [9.722200000000097e-05, 9.694500000000106e-05, 9.713899999999956e-05, 9.73609999999972e-05, 9.759700000000135e-05, 9.709700000000085e-05, 9.755599999999864e-05, 9.737499999999677e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:13.283" endtime="20201110 08:36:13.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.300" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:36:13.299" endtime="20201110 08:36:13.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.303" level="INFO">VALUE: [9.722200000000097e-05, 9.694500000000106e-05, 9.713899999999956e-05, 9.73609999999972e-05, 9.759700000000135e-05, 9.709700000000085e-05, 9.755599999999864e-05, 9.737499999999677e-05, 9.730500000000239e-05, 9.715299999999913e-05, 9.69860000000003e-05, 9.72080000000014e-05, 9.70409999999991e-05, 9.743100000000199e-05, 9.687499999999974e-05, 9.759700000000135e-05, 9.733299999999806e-05, 9.697199999999725e-05, 9.744400000000208e-05, 9.704199999999857e-05, 9.74860000000008e-05, 9.68470000000006e-05, 9.754199999999907e-05, 9.730600000000186e-05, 9.736200000000014e-05, 9.737500000000024e-05, 9.681899999999799e-05, 9.701399999999943e-05, 9.726400000000315e-05, 9.761100000000092e-05, 9.680499999999842e-05, 9.759700000000135e-05, 9.679199999999832e-05, 9.683300000000103e-05, 9.757000000000168e-05, 9.744500000000156e-05, 9.772299999999748e-05, 9.761100000000092e-05, 9.727799999999925e-05, 9.71799999999988e-05, 9.7027999999999e-05, 9.708299999999781e-05, 9.741699999999895e-05, 9.704200000000204e-05, 9.712499999999999e-05, 9.757000000000168e-05, 9.729199999999882e-05, 9.687499999999974e-05, 9.751399999999993e-05, 9.763900000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:36:13.301" endtime="20201110 08:36:13.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.297" endtime="20201110 08:36:13.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.306" endtime="20201110 08:36:13.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:13.310" endtime="20201110 08:36:13.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.308" endtime="20201110 08:36:13.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.305" endtime="20201110 08:36:13.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.936" endtime="20201110 08:36:13.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.935" endtime="20201110 08:36:13.331"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.339" endtime="20201110 08:36:13.359"></status>
</kw>
<msg timestamp="20201110 08:36:13.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:13.338" endtime="20201110 08:36:13.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:13.360" endtime="20201110 08:36:13.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.363" endtime="20201110 08:36:13.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.335" endtime="20201110 08:36:13.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.333" endtime="20201110 08:36:13.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.373" endtime="20201110 08:36:13.658"></status>
</kw>
<msg timestamp="20201110 08:36:13.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019900722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.371" endtime="20201110 08:36:13.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019900722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.663" endtime="20201110 08:36:13.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.671" endtime="20201110 08:36:13.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.369" endtime="20201110 08:36:13.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.367" endtime="20201110 08:36:13.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.678" level="INFO">${RESULT} = [{'time': 0.019900722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.826400000000068e-05, 'source_diff': 9.826400000000068e-05}, {'time': 0.020002736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:13.675" endtime="20201110 08:36:13.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:13.691" level="INFO">${ACCURACY} = {'source_diff': [9.826400000000068e-05, 9.808299999999881e-05, 9.870899999999891e-05, 9.818099999999927e-05, 9.874999999999814e-05, 9.83470000000021e-05, 9.790299999999988e-05, 9.826300000000121e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:13.679" endtime="20201110 08:36:13.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.696" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:36:13.695" endtime="20201110 08:36:13.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.698" level="INFO">VALUE: [9.826400000000068e-05, 9.808299999999881e-05, 9.870899999999891e-05, 9.818099999999927e-05, 9.874999999999814e-05, 9.83470000000021e-05, 9.790299999999988e-05, 9.826300000000121e-05, 9.847200000000222e-05, 9.883399999999903e-05, 9.861099999999845e-05, 9.78470000000016e-05, 9.8721999999999e-05, 9.851399999999746e-05, 9.794399999999912e-05, 9.859699999999888e-05, 9.832000000000243e-05, 9.854200000000007e-05, 9.807000000000218e-05, 9.823600000000154e-05, 9.795799999999869e-05, 9.877800000000075e-05, 9.788900000000031e-05, 9.855599999999964e-05, 9.86670000000002e-05, 9.873599999999857e-05, 9.787500000000074e-05, 9.8721999999999e-05, 9.865300000000063e-05, 9.870799999999944e-05, 9.780499999999942e-05, 9.873600000000204e-05, 9.811100000000142e-05, 9.877800000000075e-05, 9.808299999999881e-05, 9.795799999999869e-05, 9.875000000000161e-05, 9.786100000000117e-05, 9.783399999999803e-05, 9.795900000000163e-05, 9.827700000000078e-05, 9.784699999999813e-05, 9.790299999999988e-05, 9.788900000000031e-05, 9.850000000000136e-05, 9.820899999999841e-05, 9.855599999999964e-05, 9.827800000000025e-05, 9.806900000000271e-05, 9.806999999999871e-05]</msg>
<status status="PASS" starttime="20201110 08:36:13.697" endtime="20201110 08:36:13.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.692" endtime="20201110 08:36:13.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.702" endtime="20201110 08:36:13.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:13.705" endtime="20201110 08:36:13.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.704" endtime="20201110 08:36:13.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.700" endtime="20201110 08:36:13.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.332" endtime="20201110 08:36:13.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.331" endtime="20201110 08:36:13.726"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.735" endtime="20201110 08:36:13.753"></status>
</kw>
<msg timestamp="20201110 08:36:13.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:13.733" endtime="20201110 08:36:13.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:13.755" endtime="20201110 08:36:13.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.757" endtime="20201110 08:36:13.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.731" endtime="20201110 08:36:13.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.729" endtime="20201110 08:36:13.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.767" endtime="20201110 08:36:14.052"></status>
</kw>
<msg timestamp="20201110 08:36:14.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:13.766" endtime="20201110 08:36:14.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:14.056" endtime="20201110 08:36:14.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.065" endtime="20201110 08:36:14.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.763" endtime="20201110 08:36:14.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.762" endtime="20201110 08:36:14.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:14.072" level="INFO">${RESULT} = [{'time': 0.0198645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.905600000000014e-05, 'source_diff': 9.905600000000014e-05}, {'time': 0.019967514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:14.068" endtime="20201110 08:36:14.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:14.085" level="INFO">${ACCURACY} = {'source_diff': [9.905600000000014e-05, 9.938899999999834e-05, 9.908299999999981e-05, 9.906999999999971e-05, 9.945899999999966e-05, 9.919400000000037e-05, 9.952700000000203e-05, 9.9028000000001e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:36:14.073" endtime="20201110 08:36:14.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.090" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:36:14.089" endtime="20201110 08:36:14.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.092" level="INFO">VALUE: [9.905600000000014e-05, 9.938899999999834e-05, 9.908299999999981e-05, 9.906999999999971e-05, 9.945899999999966e-05, 9.919400000000037e-05, 9.952700000000203e-05, 9.9028000000001e-05, 9.966699999999773e-05, 9.927800000000125e-05, 9.883299999999956e-05, 9.895899999999916e-05, 9.909699999999938e-05, 9.965299999999816e-05, 9.934699999999963e-05, 9.958399999999978e-05, 9.909699999999938e-05, 9.908299999999981e-05, 9.917999999999733e-05, 9.9028000000001e-05, 9.883299999999956e-05, 9.89860000000023e-05, 9.929200000000082e-05, 9.88609999999987e-05, 9.901400000000143e-05, 9.944500000000009e-05, 9.927800000000125e-05, 9.931999999999996e-05, 9.922200000000297e-05, 9.902799999999753e-05, 9.912499999999852e-05, 9.883299999999956e-05, 9.955600000000064e-05, 9.916699999999723e-05, 9.969500000000034e-05, 9.979100000000185e-05, 9.897299999999873e-05, 9.88059999999999e-05, 9.931900000000049e-05, 9.916600000000123e-05, 9.925000000000211e-05, 9.883299999999956e-05, 9.906900000000024e-05, 9.969500000000034e-05, 9.977799999999828e-05, 9.890300000000088e-05, 9.898599999999882e-05, 9.88059999999999e-05, 9.886100000000217e-05, 9.911099999999895e-05]</msg>
<status status="PASS" starttime="20201110 08:36:14.091" endtime="20201110 08:36:14.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.086" endtime="20201110 08:36:14.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.096" endtime="20201110 08:36:14.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:14.099" endtime="20201110 08:36:14.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.098" endtime="20201110 08:36:14.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.094" endtime="20201110 08:36:14.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.727" endtime="20201110 08:36:14.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.727" endtime="20201110 08:36:14.120"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.129" endtime="20201110 08:36:14.148"></status>
</kw>
<msg timestamp="20201110 08:36:14.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.127" endtime="20201110 08:36:14.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.149" endtime="20201110 08:36:14.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.152" endtime="20201110 08:36:14.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.125" endtime="20201110 08:36:14.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.122" endtime="20201110 08:36:14.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.162" endtime="20201110 08:36:14.447"></status>
</kw>
<msg timestamp="20201110 08:36:14.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019930986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.160" endtime="20201110 08:36:14.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019930986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.451" endtime="20201110 08:36:14.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.459" endtime="20201110 08:36:14.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.158" endtime="20201110 08:36:14.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.156" endtime="20201110 08:36:14.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:14.466" level="INFO">${RESULT} = [{'time': 0.020030833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.984700000000013e-05, 'source_diff': 9.984700000000013e-05}, {'time': 0.020135847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:14.462" endtime="20201110 08:36:14.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:14.480" level="INFO">${ACCURACY} = {'source_diff': [9.984700000000013e-05, 9.983299999999709e-05, 0.00010023600000000008, 9.995800000000069e-05, 9.979200000000132e-05, 0.00010073600000000058, 0.00010008400000000028, 0.00010043100000000...</msg>
<status status="PASS" starttime="20201110 08:36:14.467" endtime="20201110 08:36:14.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.484" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:36:14.483" endtime="20201110 08:36:14.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.487" level="INFO">VALUE: [9.984700000000013e-05, 9.983299999999709e-05, 0.00010023600000000008, 9.995800000000069e-05, 9.979200000000132e-05, 0.00010073600000000058, 0.00010008400000000028, 0.00010043100000000152, 0.00010070899999999744, 0.0001004999999999999, 0.00010062500000000002, 0.0001003610000000002, 0.00010004200000000157, 0.0001004999999999999, 0.00010070799999999797, 0.00010045800000000119, 0.00010020900000000041, 0.00010062500000000002, 0.0001003060000000014, 0.00010044399999999815, 0.00010043000000000205, 0.00010026400000000268, 9.988899999999884e-05, 0.00010024999999999964, 0.00010037499999999977, 9.995900000000016e-05, 0.0001003610000000002, 9.998599999999983e-05, 0.00010002699999999906, 0.00010048600000000033, 0.00010012499999999952, 0.00010001399999999896, 0.0001001800000000018, 9.995800000000069e-05, 0.00010062500000000002, 9.99999999999994e-05, 0.00010044499999999762, 9.98060000000009e-05, 9.98609999999997e-05, 0.00010069500000000134, 0.00010063800000000012, 9.99020000000024e-05, 0.00010052799999999903, 0.00010001399999999896, 0.00010020800000000094, 0.00010054200000000207, 9.991700000000145e-05, 9.982000000000046e-05, 9.988899999999884e-05, 0.00010063899999999959]</msg>
<status status="PASS" starttime="20201110 08:36:14.486" endtime="20201110 08:36:14.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.481" endtime="20201110 08:36:14.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.490" endtime="20201110 08:36:14.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:14.494" endtime="20201110 08:36:14.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.492" endtime="20201110 08:36:14.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.489" endtime="20201110 08:36:14.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.121" endtime="20201110 08:36:14.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.120" endtime="20201110 08:36:14.515"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.523" endtime="20201110 08:36:14.542"></status>
</kw>
<msg timestamp="20201110 08:36:14.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.522" endtime="20201110 08:36:14.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.543" endtime="20201110 08:36:14.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.546" endtime="20201110 08:36:14.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.519" endtime="20201110 08:36:14.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.517" endtime="20201110 08:36:14.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.556" endtime="20201110 08:36:14.841"></status>
</kw>
<msg timestamp="20201110 08:36:14.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.554" endtime="20201110 08:36:14.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.845" endtime="20201110 08:36:14.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.853" endtime="20201110 08:36:14.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.552" endtime="20201110 08:36:14.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.550" endtime="20201110 08:36:14.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:14.860" level="INFO">${RESULT} = [{'time': 0.019978181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010095900000000116, 'source_diff': 0.00010095900000000116}, {'time': 0.020083181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:14.857" endtime="20201110 08:36:14.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:14.873" level="INFO">${ACCURACY} = {'source_diff': [0.00010095900000000116, 0.00010119499999999837, 0.00010072300000000048, 0.0001013749999999973, 0.00010093000000000255, 0.00010115299999999966, 0.00010115299999999966, 0.00010159699999...</msg>
<status status="PASS" starttime="20201110 08:36:14.861" endtime="20201110 08:36:14.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.878" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:36:14.877" endtime="20201110 08:36:14.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.880" level="INFO">VALUE: [0.00010095900000000116, 0.00010119499999999837, 0.00010072300000000048, 0.0001013749999999973, 0.00010093000000000255, 0.00010115299999999966, 0.00010115299999999966, 0.00010159699999999841, 0.00010079199999999885, 0.0001008060000000019, 0.00010130599999999892, 0.00010137500000000077, 0.00010088899999999984, 0.00010138800000000087, 0.00010129200000000282, 0.00010117999999999933, 0.00010172199999999854, 0.00010090299999999941, 0.00010163900000000059, 0.00010119499999999837, 0.0001017359999999981, 0.00010147300000000123, 0.00010147300000000123, 0.00010083299999999809, 0.00010108299999999834, 0.00010159699999999841, 0.00010083300000000156, 0.00010122199999999804, 0.00010107000000000171, 0.0001012220000000015, 0.00010144499999999862, 0.00010112500000000052, 0.0001008060000000019, 0.00010111100000000095, 0.0001015549999999997, 0.0001011939999999989, 0.00010167999999999983, 0.0001015549999999997, 0.0001011809999999988, 0.00010093099999999855, 0.00010154200000000307, 0.00010152800000000003, 0.00010138900000000034, 0.00010098600000000083, 0.00010131899999999902, 0.00010131899999999902, 0.0001015549999999997, 0.00010136099999999773, 0.00010117999999999933, 0.00010091699999999898]</msg>
<status status="PASS" starttime="20201110 08:36:14.879" endtime="20201110 08:36:14.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.874" endtime="20201110 08:36:14.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.884" endtime="20201110 08:36:14.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:14.887" endtime="20201110 08:36:14.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.886" endtime="20201110 08:36:14.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.882" endtime="20201110 08:36:14.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.516" endtime="20201110 08:36:14.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.515" endtime="20201110 08:36:14.908"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.917" endtime="20201110 08:36:14.935"></status>
</kw>
<msg timestamp="20201110 08:36:14.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.915" endtime="20201110 08:36:14.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.937" endtime="20201110 08:36:14.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.939" endtime="20201110 08:36:14.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.913" endtime="20201110 08:36:14.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.911" endtime="20201110 08:36:14.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.949" endtime="20201110 08:36:15.235"></status>
</kw>
<msg timestamp="20201110 08:36:15.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.948" endtime="20201110 08:36:15.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.239" endtime="20201110 08:36:15.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.247" endtime="20201110 08:36:15.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.945" endtime="20201110 08:36:15.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.943" endtime="20201110 08:36:15.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:15.253" level="INFO">${RESULT} = [{'time': 0.019858806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010216700000000023, 'source_diff': 0.00010216700000000023}, {'time': 0.019963792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:15.250" endtime="20201110 08:36:15.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:15.267" level="INFO">${ACCURACY} = {'source_diff': [0.00010216700000000023, 0.00010241700000000048, 0.00010177800000000028, 0.00010268000000000083, 0.00010220799999999947, 0.00010225000000000165, 0.00010190300000000041, 0.0001019030000...</msg>
<status status="PASS" starttime="20201110 08:36:15.254" endtime="20201110 08:36:15.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.271" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:36:15.270" endtime="20201110 08:36:15.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.273" level="INFO">VALUE: [0.00010216700000000023, 0.00010241700000000048, 0.00010177800000000028, 0.00010268000000000083, 0.00010220799999999947, 0.00010225000000000165, 0.00010190300000000041, 0.00010190300000000041, 0.00010238900000000134, 0.0001021809999999998, 0.00010194499999999912, 0.00010205599999999967, 0.00010238800000000187, 0.00010226299999999827, 0.00010265199999999822, 0.00010243000000000058, 0.00010276399999999825, 0.00010180599999999942, 0.00010275000000000215, 0.00010233300000000306, 0.00010265300000000116, 0.00010258400000000278, 0.00010270799999999997, 0.00010201300000000149, 0.00010238900000000134, 0.00010245799999999972, 0.00010213899999999762, 0.00010180599999999942, 0.00010269499999999987, 0.00010219499999999937, 0.00010247199999999929, 0.00010276400000000172, 0.00010179100000000038, 0.00010195799999999922, 0.00010211099999999848, 0.00010259699999999941, 0.0001022359999999986, 0.00010259699999999941, 0.00010234699999999916, 0.00010259700000000288, 0.0001026810000000003, 0.00010227799999999732, 0.00010243100000000005, 0.00010195900000000216, 0.00010265199999999822, 0.00010262499999999855, 0.00010191699999999998, 0.00010272199999999954, 0.00010240300000000091, 0.00010215300000000066]</msg>
<status status="PASS" starttime="20201110 08:36:15.272" endtime="20201110 08:36:15.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.267" endtime="20201110 08:36:15.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.277" endtime="20201110 08:36:15.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:15.280" endtime="20201110 08:36:15.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.279" endtime="20201110 08:36:15.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.275" endtime="20201110 08:36:15.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.909" endtime="20201110 08:36:15.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.909" endtime="20201110 08:36:15.301"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.310" endtime="20201110 08:36:15.328"></status>
</kw>
<msg timestamp="20201110 08:36:15.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:15.308" endtime="20201110 08:36:15.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:15.330" endtime="20201110 08:36:15.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.332" endtime="20201110 08:36:15.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.306" endtime="20201110 08:36:15.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.304" endtime="20201110 08:36:15.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.342" endtime="20201110 08:36:15.628"></status>
</kw>
<msg timestamp="20201110 08:36:15.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.341" endtime="20201110 08:36:15.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.632" endtime="20201110 08:36:15.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.641" endtime="20201110 08:36:15.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.338" endtime="20201110 08:36:15.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.337" endtime="20201110 08:36:15.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:15.647" level="INFO">${RESULT} = [{'time': 0.019888444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010281900000000052, 'source_diff': 0.00010281900000000052}, {'time': 0.019995458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:15.644" endtime="20201110 08:36:15.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:15.660" level="INFO">${ACCURACY} = {'source_diff': [0.00010281900000000052, 0.00010277700000000181, 0.00010322199999999657, 0.00010341699999999801, 0.00010315299999999819, 0.00010322200000000004, 0.00010316700000000123, 0.0001035700000...</msg>
<status status="PASS" starttime="20201110 08:36:15.648" endtime="20201110 08:36:15.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.665" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:36:15.664" endtime="20201110 08:36:15.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.667" level="INFO">VALUE: [0.00010281900000000052, 0.00010277700000000181, 0.00010322199999999657, 0.00010341699999999801, 0.00010315299999999819, 0.00010322200000000004, 0.00010316700000000123, 0.00010357000000000074, 0.00010307000000000024, 0.00010330499999999798, 0.00010345800000000072, 0.00010374999999999968, 0.00010366700000000173, 0.00010368099999999783, 0.00010347200000000029, 0.00010358400000000031, 0.00010291700000000098, 0.00010315299999999819, 0.00010305600000000067, 0.00010366699999999826, 0.00010363900000000259, 0.00010294399999999718, 0.0001035550000000017, 0.00010355600000000117, 0.00010308300000000034, 0.0001032359999999996, 0.00010297199999999979, 0.0001031940000000009, 0.00010365300000000216, 0.00010323700000000255, 0.00010284699999999966, 0.0001033610000000032, 0.00010359700000000041, 0.00010309699999999991, 0.0001028610000000027, 0.00010309699999999991, 0.00010372200000000054, 0.00010349999999999943, 0.00010373699999999958, 0.00010357000000000074, 0.00010367999999999836, 0.00010311100000000295, 0.00010319500000000037, 0.0001028749999999988, 0.00010336099999999973, 0.00010312499999999905, 0.00010327800000000179, 0.00010344500000000062, 0.0001031949999999969, 0.00010374999999999968]</msg>
<status status="PASS" starttime="20201110 08:36:15.666" endtime="20201110 08:36:15.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.661" endtime="20201110 08:36:15.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.671" endtime="20201110 08:36:15.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:15.675" endtime="20201110 08:36:15.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.673" endtime="20201110 08:36:15.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.669" endtime="20201110 08:36:15.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.302" endtime="20201110 08:36:15.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.302" endtime="20201110 08:36:15.696"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.704" endtime="20201110 08:36:15.723"></status>
</kw>
<msg timestamp="20201110 08:36:15.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:15.703" endtime="20201110 08:36:15.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:15.724" endtime="20201110 08:36:15.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.727" endtime="20201110 08:36:15.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.700" endtime="20201110 08:36:15.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.698" endtime="20201110 08:36:15.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.737" endtime="20201110 08:36:16.023"></status>
</kw>
<msg timestamp="20201110 08:36:16.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.735" endtime="20201110 08:36:16.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.027" endtime="20201110 08:36:16.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.035" endtime="20201110 08:36:16.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.732" endtime="20201110 08:36:16.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.731" endtime="20201110 08:36:16.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.042" level="INFO">${RESULT} = [{'time': 0.020389514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010397200000000079, 'source_diff': 0.00010397200000000079}, {'time': 0.020497597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:16.038" endtime="20201110 08:36:16.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:16.056" level="INFO">${ACCURACY} = {'source_diff': [0.00010397200000000079, 0.00010458299999999837, 0.00010404199999999864, 0.0001043200000000015, 0.00010386100000000023, 0.00010472200000000154, 0.00010419399999999843, 0.00010473600000...</msg>
<status status="PASS" starttime="20201110 08:36:16.043" endtime="20201110 08:36:16.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.060" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:36:16.059" endtime="20201110 08:36:16.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.063" level="INFO">VALUE: [0.00010397200000000079, 0.00010458299999999837, 0.00010404199999999864, 0.0001043200000000015, 0.00010386100000000023, 0.00010472200000000154, 0.00010419399999999843, 0.0001047360000000011, 0.0001043750000000003, 0.000104514, 0.00010395800000000122, 0.00010457000000000174, 0.00010468099999999883, 0.00010395800000000122, 0.00010463799999999718, 0.00010440199999999997, 0.00010380500000000195, 0.00010425000000000018, 0.00010426399999999975, 0.00010427799999999932, 0.0001040420000000021, 0.00010436100000000073, 0.00010394500000000112, 0.00010475000000000068, 0.00010402799999999907, 0.00010465200000000022, 0.00010429099999999941, 0.00010383300000000109, 0.00010469399999999893, 0.00010468099999999883, 0.0001041810000000018, 0.0001040139999999995, 0.00010381999999999753, 0.0001042360000000006, 0.000104207999999998, 0.00010409699999999744, 0.000104514, 0.00010462500000000055, 0.00010377800000000229, 0.00010466699999999926, 0.00010380600000000142, 0.00010390299999999894, 0.00010419500000000137, 0.0001040550000000022, 0.00010459800000000088, 0.00010431900000000202, 0.00010408300000000134, 0.00010386100000000023, 0.00010452799999999957, 0.00010402799999999907]</msg>
<status status="PASS" starttime="20201110 08:36:16.061" endtime="20201110 08:36:16.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.057" endtime="20201110 08:36:16.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.066" endtime="20201110 08:36:16.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:16.070" endtime="20201110 08:36:16.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.068" endtime="20201110 08:36:16.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.065" endtime="20201110 08:36:16.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.696" endtime="20201110 08:36:16.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.696" endtime="20201110 08:36:16.091"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.099" endtime="20201110 08:36:16.119"></status>
</kw>
<msg timestamp="20201110 08:36:16.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.098" endtime="20201110 08:36:16.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.120" endtime="20201110 08:36:16.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.123" endtime="20201110 08:36:16.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.095" endtime="20201110 08:36:16.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.093" endtime="20201110 08:36:16.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.133" endtime="20201110 08:36:16.418"></status>
</kw>
<msg timestamp="20201110 08:36:16.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020627139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.131" endtime="20201110 08:36:16.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020627139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.422" endtime="20201110 08:36:16.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.430" endtime="20201110 08:36:16.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.129" endtime="20201110 08:36:16.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.127" endtime="20201110 08:36:16.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.437" level="INFO">${RESULT} = [{'time': 0.020627139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010495799999999875, 'source_diff': 0.00010495799999999875}, {'time': 0.020735125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:16.433" endtime="20201110 08:36:16.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:16.450" level="INFO">${ACCURACY} = {'source_diff': [0.00010495799999999875, 0.00010544399999999968, 0.00010526400000000075, 0.00010509699999999844, 0.00010525000000000118, 0.00010480599999999896, 0.00010572199999999907, 0.0001048610000...</msg>
<status status="PASS" starttime="20201110 08:36:16.438" endtime="20201110 08:36:16.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.455" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:36:16.454" endtime="20201110 08:36:16.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.457" level="INFO">VALUE: [0.00010495799999999875, 0.00010544399999999968, 0.00010526400000000075, 0.00010509699999999844, 0.00010525000000000118, 0.00010480599999999896, 0.00010572199999999907, 0.00010486100000000123, 0.00010548599999999839, 0.00010530499999999998, 0.0001057079999999995, 0.00010540300000000044, 0.00010533299999999912, 0.00010544499999999915, 0.00010534800000000163, 0.00010568099999999983, 0.00010572200000000254, 0.00010504099999999669, 0.00010522199999999857, 0.00010480599999999896, 0.00010550000000000143, 0.00010530599999999946, 0.00010566700000000026, 0.00010540300000000044, 0.00010520899999999847, 0.00010569399999999993, 0.00010520800000000247, 0.00010526400000000075, 0.00010538900000000087, 0.00010559700000000241, 0.00010529200000000336, 0.00010572199999999907, 0.00010548599999999839, 0.00010565300000000069, 0.00010477799999999982, 0.00010508299999999887, 0.00010530499999999998, 0.00010561099999999851, 0.00010484700000000166, 0.00010519399999999943, 0.0001057360000000021, 0.00010545900000000219, 0.00010522199999999857, 0.00010480599999999896, 0.00010552800000000057, 0.00010507000000000224, 0.00010490200000000047, 0.00010537499999999783, 0.0001055689999999998, 0.00010479199999999939]</msg>
<status status="PASS" starttime="20201110 08:36:16.456" endtime="20201110 08:36:16.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.451" endtime="20201110 08:36:16.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.461" endtime="20201110 08:36:16.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:16.464" endtime="20201110 08:36:16.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.463" endtime="20201110 08:36:16.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.459" endtime="20201110 08:36:16.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.091" endtime="20201110 08:36:16.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.091" endtime="20201110 08:36:16.485"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.494" endtime="20201110 08:36:16.512"></status>
</kw>
<msg timestamp="20201110 08:36:16.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.492" endtime="20201110 08:36:16.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.514" endtime="20201110 08:36:16.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.516" endtime="20201110 08:36:16.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.490" endtime="20201110 08:36:16.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.488" endtime="20201110 08:36:16.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.526" endtime="20201110 08:36:16.811"></status>
</kw>
<msg timestamp="20201110 08:36:16.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.525" endtime="20201110 08:36:16.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.815" endtime="20201110 08:36:16.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.823" endtime="20201110 08:36:16.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.522" endtime="20201110 08:36:16.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.521" endtime="20201110 08:36:16.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.830" level="INFO">${RESULT} = [{'time': 0.019838486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010584699999999919, 'source_diff': 0.00010584699999999919}, {'time': 0.0199485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:16.827" endtime="20201110 08:36:16.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:16.843" level="INFO">${ACCURACY} = {'source_diff': [0.00010584699999999919, 0.00010673599999999964, 0.00010648599999999939, 0.00010658399999999985, 0.00010609799999999892, 0.00010647299999999929, 0.00010666700000000126, 0.0001065409999...</msg>
<status status="PASS" starttime="20201110 08:36:16.831" endtime="20201110 08:36:16.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.848" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:36:16.847" endtime="20201110 08:36:16.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.850" level="INFO">VALUE: [0.00010584699999999919, 0.00010673599999999964, 0.00010648599999999939, 0.00010658399999999985, 0.00010609799999999892, 0.00010647299999999929, 0.00010666700000000126, 0.00010654099999999819, 0.00010647199999999982, 0.0001065690000000008, 0.00010637499999999883, 0.00010633300000000012, 0.00010604199999999717, 0.00010627699999999837, 0.00010633400000000306, 0.00010649999999999896, 0.00010597199999999932, 0.0001060690000000003, 0.00010623599999999914, 0.00010652800000000157, 0.00010647199999999982, 0.00010640300000000144, 0.00010654200000000114, 0.00010627800000000132, 0.0001060279999999976, 0.00010599999999999846, 0.00010622199999999957, 0.00010609699999999944, 0.00010622199999999957, 0.00010591599999999757, 0.00010645800000000025, 0.00010586099999999876, 0.00010659799999999942, 0.00010591699999999704, 0.00010626400000000175, 0.00010609699999999944, 0.00010675000000000268, 0.00010609699999999944, 0.00010623599999999914, 0.00010619400000000043, 0.00010657000000000028, 0.00010630600000000046, 0.00010613900000000162, 0.00010638900000000187, 0.00010652800000000157, 0.00010647299999999929, 0.00010586099999999876, 0.00010618000000000086, 0.000105901999999998, 0.00010627799999999785]</msg>
<status status="PASS" starttime="20201110 08:36:16.849" endtime="20201110 08:36:16.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.844" endtime="20201110 08:36:16.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.858" endtime="20201110 08:36:16.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:16.861" endtime="20201110 08:36:16.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.860" endtime="20201110 08:36:16.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.856" endtime="20201110 08:36:16.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.486" endtime="20201110 08:36:16.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.486" endtime="20201110 08:36:16.882"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.891" endtime="20201110 08:36:16.911"></status>
</kw>
<msg timestamp="20201110 08:36:16.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.889" endtime="20201110 08:36:16.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.912" endtime="20201110 08:36:16.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.915" endtime="20201110 08:36:16.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.887" endtime="20201110 08:36:16.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.884" endtime="20201110 08:36:16.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.925" endtime="20201110 08:36:17.210"></status>
</kw>
<msg timestamp="20201110 08:36:17.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.923" endtime="20201110 08:36:17.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.214" endtime="20201110 08:36:17.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.222" endtime="20201110 08:36:17.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.920" endtime="20201110 08:36:17.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.919" endtime="20201110 08:36:17.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:17.229" level="INFO">${RESULT} = [{'time': 0.019928181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010720900000000047, 'source_diff': 0.00010720900000000047}, {'time': 0.020039208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:17.225" endtime="20201110 08:36:17.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:17.242" level="INFO">${ACCURACY} = {'source_diff': [0.00010720900000000047, 0.00010709700000000044, 0.00010686099999999976, 0.00010719399999999796, 0.00010763899999999965, 0.00010759800000000042, 0.00010761100000000051, 0.0001077639999...</msg>
<status status="PASS" starttime="20201110 08:36:17.230" endtime="20201110 08:36:17.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.246" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:36:17.245" endtime="20201110 08:36:17.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.249" level="INFO">VALUE: [0.00010720900000000047, 0.00010709700000000044, 0.00010686099999999976, 0.00010719399999999796, 0.00010763899999999965, 0.00010759800000000042, 0.00010761100000000051, 0.00010776399999999978, 0.00010766700000000226, 0.00010737499999999983, 0.00010718099999999786, 0.00010697200000000032, 0.00010720799999999753, 0.0001072499999999997, 0.00010761100000000051, 0.00010684700000000019, 0.0001072499999999997, 0.0001068340000000001, 0.00010707000000000078, 0.00010759800000000042, 0.00010680599999999749, 0.00010759700000000094, 0.00010683299999999715, 0.00010745800000000125, 0.0001073889999999994, 0.0001070690000000013, 0.00010765300000000269, 0.0001075279999999991, 0.0001068889999999989, 0.00010704200000000164, 0.00010765299999999922, 0.00010722200000000057, 0.00010727699999999937, 0.00010708300000000087, 0.00010741699999999854, 0.00010748600000000039, 0.00010722200000000057, 0.00010708400000000035, 0.00010713899999999915, 0.0001072499999999997, 0.00010763899999999965, 0.00010715199999999925, 0.00010755500000000223, 0.000107208000000001, 0.00010702800000000207, 0.00010741699999999854, 0.00010754199999999867, 0.00010745899999999725, 0.00010708400000000035, 0.00010759800000000042]</msg>
<status status="PASS" starttime="20201110 08:36:17.247" endtime="20201110 08:36:17.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.243" endtime="20201110 08:36:17.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.252" endtime="20201110 08:36:17.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:17.256" endtime="20201110 08:36:17.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.254" endtime="20201110 08:36:17.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.251" endtime="20201110 08:36:17.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.883" endtime="20201110 08:36:17.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.882" endtime="20201110 08:36:17.277"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.285" endtime="20201110 08:36:17.304"></status>
</kw>
<msg timestamp="20201110 08:36:17.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.284" endtime="20201110 08:36:17.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.305" endtime="20201110 08:36:17.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.308" endtime="20201110 08:36:17.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.281" endtime="20201110 08:36:17.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.279" endtime="20201110 08:36:17.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.318" endtime="20201110 08:36:17.603"></status>
</kw>
<msg timestamp="20201110 08:36:17.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.316" endtime="20201110 08:36:17.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.607" endtime="20201110 08:36:17.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.615" endtime="20201110 08:36:17.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.313" endtime="20201110 08:36:17.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.312" endtime="20201110 08:36:17.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:17.622" level="INFO">${RESULT} = [{'time': 0.020165639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010820799999999853, 'source_diff': 0.00010820799999999853}, {'time': 0.020277583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:17.618" endtime="20201110 08:36:17.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:17.636" level="INFO">${ACCURACY} = {'source_diff': [0.00010820799999999853, 0.00010786099999999729, 0.00010809699999999797, 0.00010847200000000182, 0.00010816699999999929, 0.00010845800000000225, 0.00010797200000000132, 0.0001084169999...</msg>
<status status="PASS" starttime="20201110 08:36:17.623" endtime="20201110 08:36:17.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.640" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:36:17.639" endtime="20201110 08:36:17.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.643" level="INFO">VALUE: [0.00010820799999999853, 0.00010786099999999729, 0.00010809699999999797, 0.00010847200000000182, 0.00010816699999999929, 0.00010845800000000225, 0.00010797200000000132, 0.00010841699999999954, 0.00010824999999999724, 0.00010815299999999972, 0.00010812500000000058, 0.00010859700000000194, 0.00010777699999999987, 0.00010817999999999939, 0.0001080690000000023, 0.00010815299999999972, 0.00010870799999999903, 0.00010855599999999924, 0.00010798600000000089, 0.00010819499999999843, 0.00010773600000000064, 0.00010815200000000025, 0.00010783300000000162, 0.00010869399999999946, 0.00010779199999999892, 0.00010877800000000035, 0.00010784699999999772, 0.00010859699999999847, 0.00010862500000000108, 0.00010868100000000283, 0.00010816599999999982, 0.00010780499999999901, 0.0001080690000000023, 0.0001085280000000001, 0.00010863900000000065, 0.00010872200000000207, 0.0001087219999999986, 0.00010859799999999795, 0.00010843099999999911, 0.00010842999999999964, 0.00010820799999999853, 0.00010824999999999724, 0.0001078889999999999, 0.00010823599999999767, 0.00010827799999999985, 0.0001085699999999988, 0.00010851400000000053, 0.00010827799999999985, 0.00010795799999999828, 0.00010801400000000003]</msg>
<status status="PASS" starttime="20201110 08:36:17.642" endtime="20201110 08:36:17.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.637" endtime="20201110 08:36:17.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.646" endtime="20201110 08:36:17.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:17.650" endtime="20201110 08:36:17.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.648" endtime="20201110 08:36:17.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.645" endtime="20201110 08:36:17.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.278" endtime="20201110 08:36:17.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.277" endtime="20201110 08:36:17.671"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.680" endtime="20201110 08:36:17.700"></status>
</kw>
<msg timestamp="20201110 08:36:17.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.678" endtime="20201110 08:36:17.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.701" endtime="20201110 08:36:17.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.704" endtime="20201110 08:36:17.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.676" endtime="20201110 08:36:17.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.673" endtime="20201110 08:36:17.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.714" endtime="20201110 08:36:17.999"></status>
</kw>
<msg timestamp="20201110 08:36:18.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020590625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.712" endtime="20201110 08:36:18.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020590625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.004" endtime="20201110 08:36:18.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.012" endtime="20201110 08:36:18.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.710" endtime="20201110 08:36:18.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.708" endtime="20201110 08:36:18.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.018" level="INFO">${RESULT} = [{'time': 0.020590625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010943100000000011, 'source_diff': 0.00010943100000000011}, {'time': 0.020702625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:18.015" endtime="20201110 08:36:18.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:18.032" level="INFO">${ACCURACY} = {'source_diff': [0.00010943100000000011, 0.00010902799999999713, 0.00010951399999999806, 0.00010943100000000011, 0.00010954200000000067, 0.00010901400000000103, 0.00010895799999999928, 0.0001093050000...</msg>
<status status="PASS" starttime="20201110 08:36:18.019" endtime="20201110 08:36:18.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.036" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:36:18.035" endtime="20201110 08:36:18.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.039" level="INFO">VALUE: [0.00010943100000000011, 0.00010902799999999713, 0.00010951399999999806, 0.00010943100000000011, 0.00010954200000000067, 0.00010901400000000103, 0.00010895799999999928, 0.00010930500000000051, 0.0001093890000000014, 0.00010937500000000183, 0.00010973600000000264, 0.00010923600000000214, 0.00010900000000000146, 0.00010941600000000107, 0.00010954099999999772, 0.00010969400000000046, 0.00010902700000000112, 0.00010915300000000072, 0.00010929099999999747, 0.00010929200000000042, 0.00010952799999999763, 0.0001092219999999991, 0.00010911099999999854, 0.00010881999999999906, 0.00010931900000000008, 0.00010881899999999958, 0.00010965300000000122, 0.00010893000000000014, 0.00010959799999999895, 0.00010923600000000214, 0.00010915300000000072, 0.00010930599999999999, 0.00010890300000000047, 0.0001095280000000011, 0.00010930500000000051, 0.00010897200000000232, 0.00010963899999999818, 0.00010898599999999842, 0.00010954200000000067, 0.00010926400000000128, 0.00010908399999999888, 0.00010898600000000189, 0.00010894499999999918, 0.00010944499999999968, 0.00010873699999999764, 0.00010887500000000133, 0.00010973599999999917, 0.00010911099999999854, 0.00010940300000000097, 0.00010906899999999983]</msg>
<status status="PASS" starttime="20201110 08:36:18.037" endtime="20201110 08:36:18.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.032" endtime="20201110 08:36:18.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.042" endtime="20201110 08:36:18.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:18.046" endtime="20201110 08:36:18.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.044" endtime="20201110 08:36:18.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.040" endtime="20201110 08:36:18.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.672" endtime="20201110 08:36:18.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.671" endtime="20201110 08:36:18.066"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.075" endtime="20201110 08:36:18.094"></status>
</kw>
<msg timestamp="20201110 08:36:18.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.073" endtime="20201110 08:36:18.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.095" endtime="20201110 08:36:18.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.098" endtime="20201110 08:36:18.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.071" endtime="20201110 08:36:18.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.069" endtime="20201110 08:36:18.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.108" endtime="20201110 08:36:18.393"></status>
</kw>
<msg timestamp="20201110 08:36:18.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.106" endtime="20201110 08:36:18.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.398" endtime="20201110 08:36:18.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.406" endtime="20201110 08:36:18.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.104" endtime="20201110 08:36:18.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.102" endtime="20201110 08:36:18.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.412" level="INFO">${RESULT} = [{'time': 0.019875917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011047299999999982, 'source_diff': 0.00011047299999999982}, {'time': 0.019988917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:18.409" endtime="20201110 08:36:18.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:18.426" level="INFO">${ACCURACY} = {'source_diff': [0.00011047299999999982, 0.00011062499999999961, 0.00011065299999999875, 0.0001100830000000004, 0.0001104029999999985, 0.00011040300000000197, 0.00010991700000000104, 0.000110749999999...</msg>
<status status="PASS" starttime="20201110 08:36:18.413" endtime="20201110 08:36:18.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.431" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:36:18.429" endtime="20201110 08:36:18.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.433" level="INFO">VALUE: [0.00011047299999999982, 0.00011062499999999961, 0.00011065299999999875, 0.0001100830000000004, 0.0001104029999999985, 0.00011040300000000197, 0.00010991700000000104, 0.00011074999999999974, 0.00011066699999999832, 0.00011012499999999911, 0.00011074999999999974, 0.00011001400000000203, 0.00011044399999999774, 0.00011019400000000096, 0.00011020800000000053, 0.00011033299999999718, 0.00010995800000000028, 0.00011026399999999881, 0.00011015299999999825, 0.00011002799999999813, 0.00011073600000000017, 0.00010986100000000276, 0.00010988800000000243, 0.00011048599999999992, 0.00011029100000000194, 0.00011037499999999936, 0.0001100830000000004, 0.00011011099999999954, 0.00011037499999999936, 0.00011055600000000124, 0.00011049999999999949, 0.00010980499999999754, 0.0001103890000000024, 0.00011049999999999949, 0.00010990300000000147, 0.00010988899999999843, 0.0001105830000000009, 0.00011051400000000253, 0.00010983399999999963, 0.00011033400000000013, 0.00011013799999999921, 0.00011066599999999885, 0.00011002700000000212, 0.00011063899999999918, 0.00011009699999999997, 0.00011059700000000047, 0.00011009699999999997, 0.00011036099999999979, 0.00011043099999999764, 0.00011038799999999946]</msg>
<status status="PASS" starttime="20201110 08:36:18.432" endtime="20201110 08:36:18.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.427" endtime="20201110 08:36:18.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.437" endtime="20201110 08:36:18.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:18.441" endtime="20201110 08:36:18.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.439" endtime="20201110 08:36:18.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.435" endtime="20201110 08:36:18.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.067" endtime="20201110 08:36:18.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.067" endtime="20201110 08:36:18.461"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.470" endtime="20201110 08:36:18.490"></status>
</kw>
<msg timestamp="20201110 08:36:18.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.469" endtime="20201110 08:36:18.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.492" endtime="20201110 08:36:18.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.494" endtime="20201110 08:36:18.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.466" endtime="20201110 08:36:18.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.464" endtime="20201110 08:36:18.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.504" endtime="20201110 08:36:18.791"></status>
</kw>
<msg timestamp="20201110 08:36:18.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020672569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020783778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.503" endtime="20201110 08:36:18.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020672569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020783778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.795" endtime="20201110 08:36:18.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.803" endtime="20201110 08:36:18.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.500" endtime="20201110 08:36:18.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.499" endtime="20201110 08:36:18.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.810" level="INFO">${RESULT} = [{'time': 0.020783778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000111209000000001, 'source_diff': 0.000111209000000001}, {'time': 0.020897792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:18.807" endtime="20201110 08:36:18.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:18.823" level="INFO">${ACCURACY} = {'source_diff': [0.000111209000000001, 0.00011109799999999698, 0.00011127799999999938, 0.0001114159999999996, 0.000110902999999999, 0.0001117359999999977, 0.00011080500000000201, 0.0001108889999999994...</msg>
<status status="PASS" starttime="20201110 08:36:18.811" endtime="20201110 08:36:18.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.828" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:36:18.827" endtime="20201110 08:36:18.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.830" level="INFO">VALUE: [0.000111209000000001, 0.00011109799999999698, 0.00011127799999999938, 0.0001114159999999996, 0.000110902999999999, 0.0001117359999999977, 0.00011080500000000201, 0.00011088899999999943, 0.00011101399999999956, 0.0001117229999999976, 0.00011101399999999956, 0.00011116699999999882, 0.00011123600000000067, 0.00011086100000000029, 0.00011150000000000049, 0.00011101399999999956, 0.00011148600000000092, 0.00011099999999999999, 0.00011077799999999888, 0.00011129199999999895, 0.00011137500000000036, 0.00011132000000000156, 0.00011081899999999811, 0.00011162500000000061, 0.00011109700000000097, 0.0001110830000000014, 0.00011138899999999993, 0.00011086100000000029, 0.00011102799999999913, 0.00011132000000000156, 0.00011125000000000024, 0.00011117999999999892, 0.00011133300000000165, 0.00011144400000000221, 0.00011137500000000036, 0.00011119399999999849, 0.00011136100000000079, 0.0001110700000000013, 0.00011113899999999968, 0.00011173600000000117, 0.00011138800000000046, 0.00011154099999999972, 0.00011154099999999972, 0.00011166599999999985, 0.00011137500000000036, 0.00011119500000000143, 0.00011177799999999988, 0.0001108890000000029, 0.00011104200000000217, 0.00011144499999999821]</msg>
<status status="PASS" starttime="20201110 08:36:18.829" endtime="20201110 08:36:18.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.824" endtime="20201110 08:36:18.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.834" endtime="20201110 08:36:18.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:18.838" endtime="20201110 08:36:18.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.836" endtime="20201110 08:36:18.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.832" endtime="20201110 08:36:18.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.462" endtime="20201110 08:36:18.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.462" endtime="20201110 08:36:18.858"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.867" endtime="20201110 08:36:18.888"></status>
</kw>
<msg timestamp="20201110 08:36:18.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.866" endtime="20201110 08:36:18.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.889" endtime="20201110 08:36:18.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.892" endtime="20201110 08:36:18.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.863" endtime="20201110 08:36:18.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.861" endtime="20201110 08:36:18.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.902" endtime="20201110 08:36:19.187"></status>
</kw>
<msg timestamp="20201110 08:36:19.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020589667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.900" endtime="20201110 08:36:19.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020589667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.191" endtime="20201110 08:36:19.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.199" endtime="20201110 08:36:19.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.898" endtime="20201110 08:36:19.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.896" endtime="20201110 08:36:19.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:19.206" level="INFO">${RESULT} = [{'time': 0.020701806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011213900000000068, 'source_diff': 0.00011213900000000068}, {'time': 0.020816819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:19.203" endtime="20201110 08:36:19.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:19.220" level="INFO">${ACCURACY} = {'source_diff': [0.00011213900000000068, 0.00011170800000000203, 0.00011255499999999682, 0.00011217999999999992, 0.00011243000000000017, 0.00011241700000000007, 0.000111903, 0.00011270899999999903, 0....</msg>
<status status="PASS" starttime="20201110 08:36:19.207" endtime="20201110 08:36:19.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.225" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:36:19.224" endtime="20201110 08:36:19.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.227" level="INFO">VALUE: [0.00011213900000000068, 0.00011170800000000203, 0.00011255499999999682, 0.00011217999999999992, 0.00011243000000000017, 0.00011241700000000007, 0.000111903, 0.00011270899999999903, 0.00011201400000000056, 0.0001125550000000003, 0.00011227699999999743, 0.0001125830000000029, 0.0001127220000000026, 0.00011225000000000124, 0.00011213899999999721, 0.00011280500000000054, 0.00011186100000000129, 0.00011208400000000188, 0.00011215300000000025, 0.0001127359999999987, 0.00011184699999999825, 0.00011251400000000106, 0.0001120830000000024, 0.00011277800000000088, 0.00011243000000000017, 0.00011229199999999995, 0.00011229199999999995, 0.00011259799999999848, 0.00011180600000000249, 0.00011272199999999913, 0.00011254100000000072, 0.0001125550000000003, 0.00011187500000000086, 0.00011277800000000088, 0.00011192999999999967, 0.00011206999999999884, 0.00011241700000000007, 0.00011268000000000042, 0.0001119160000000001, 0.00011247199999999888, 0.00011272199999999913, 0.00011229199999999995, 0.00011227800000000038, 0.00011216699999999982, 0.000111903, 0.00011276400000000131, 0.00011201399999999709, 0.00011273699999999817, 0.00011263799999999824, 0.00011211100000000154]</msg>
<status status="PASS" starttime="20201110 08:36:19.226" endtime="20201110 08:36:19.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.221" endtime="20201110 08:36:19.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.231" endtime="20201110 08:36:19.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:19.234" endtime="20201110 08:36:19.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.233" endtime="20201110 08:36:19.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.229" endtime="20201110 08:36:19.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.859" endtime="20201110 08:36:19.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.859" endtime="20201110 08:36:19.255"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.264" endtime="20201110 08:36:19.285"></status>
</kw>
<msg timestamp="20201110 08:36:19.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.262" endtime="20201110 08:36:19.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.287" endtime="20201110 08:36:19.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.289" endtime="20201110 08:36:19.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.260" endtime="20201110 08:36:19.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.258" endtime="20201110 08:36:19.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.299" endtime="20201110 08:36:19.585"></status>
</kw>
<msg timestamp="20201110 08:36:19.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020629708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020742972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.298" endtime="20201110 08:36:19.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020629708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020742972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.589" endtime="20201110 08:36:19.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.597" endtime="20201110 08:36:19.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.295" endtime="20201110 08:36:19.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.293" endtime="20201110 08:36:19.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:19.604" level="INFO">${RESULT} = [{'time': 0.020742972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011326399999999834, 'source_diff': 0.00011326399999999834}, {'time': 0.020861931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:19.601" endtime="20201110 08:36:19.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:19.618" level="INFO">${ACCURACY} = {'source_diff': [0.00011326399999999834, 0.00011313900000000168, 0.00011281999999999959, 0.00011286099999999882, 0.00011365299999999828, 0.00011295799999999981, 0.00011301400000000156, 0.0001128329999...</msg>
<status status="PASS" starttime="20201110 08:36:19.605" endtime="20201110 08:36:19.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.622" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:36:19.621" endtime="20201110 08:36:19.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.625" level="INFO">VALUE: [0.00011326399999999834, 0.00011313900000000168, 0.00011281999999999959, 0.00011286099999999882, 0.00011365299999999828, 0.00011295799999999981, 0.00011301400000000156, 0.00011283299999999968, 0.00011361100000000304, 0.00011366699999999785, 0.00011320899999999953, 0.00011313900000000168, 0.00011281900000000011, 0.0001132220000000031, 0.00011326399999999834, 0.00011320800000000006, 0.00011281900000000011, 0.00011312499999999864, 0.00011327799999999791, 0.00011302800000000113, 0.00011352700000000215, 0.00011368000000000142, 0.00011284699999999925, 0.00011348599999999945, 0.00011344399999999727, 0.00011366699999999785, 0.0001132359999999992, 0.00011311099999999907, 0.00011365300000000175, 0.00011343099999999717, 0.00011373699999999917, 0.00011361099999999957, 0.00011318000000000092, 0.00011311100000000254, 0.00011373600000000317, 0.00011279200000000045, 0.00011313899999999821, 0.00011361099999999957, 0.00011347299999999935, 0.00011290199999999806, 0.00011349999999999902, 0.00011281899999999664, 0.00011377799999999841, 0.00011362499999999914, 0.00011349999999999902, 0.00011351400000000206, 0.00011363899999999871, 0.00011324999999999877, 0.00011331900000000061, 0.00011376399999999884]</msg>
<status status="PASS" starttime="20201110 08:36:19.623" endtime="20201110 08:36:19.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.619" endtime="20201110 08:36:19.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.628" endtime="20201110 08:36:19.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:19.632" endtime="20201110 08:36:19.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.630" endtime="20201110 08:36:19.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.627" endtime="20201110 08:36:19.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.256" endtime="20201110 08:36:19.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.256" endtime="20201110 08:36:19.653"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.661" endtime="20201110 08:36:19.682"></status>
</kw>
<msg timestamp="20201110 08:36:19.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.660" endtime="20201110 08:36:19.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.684" endtime="20201110 08:36:19.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.686" endtime="20201110 08:36:19.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.657" endtime="20201110 08:36:19.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.655" endtime="20201110 08:36:19.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.696" endtime="20201110 08:36:19.983"></status>
</kw>
<msg timestamp="20201110 08:36:19.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.695" endtime="20201110 08:36:19.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.987" endtime="20201110 08:36:19.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.995" endtime="20201110 08:36:19.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.692" endtime="20201110 08:36:19.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.691" endtime="20201110 08:36:19.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:20.001" level="INFO">${RESULT} = [{'time': 0.020253833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001145689999999984, 'source_diff': 0.0001145689999999984}, {'time': 0.020372778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:19.998" endtime="20201110 08:36:20.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:20.015" level="INFO">${ACCURACY} = {'source_diff': [0.0001145689999999984, 0.0001145420000000022, 0.00011416600000000235, 0.00011387500000000286, 0.00011409699999999703, 0.00011380500000000154, 0.00011422200000000063, 0.000114068999999...</msg>
<status status="PASS" starttime="20201110 08:36:20.002" endtime="20201110 08:36:20.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.019" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:36:20.018" endtime="20201110 08:36:20.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.022" level="INFO">VALUE: [0.0001145689999999984, 0.0001145420000000022, 0.00011416600000000235, 0.00011387500000000286, 0.00011409699999999703, 0.00011380500000000154, 0.00011422200000000063, 0.0001140689999999979, 0.00011413899999999921, 0.00011424999999999977, 0.00011419499999999749, 0.00011397299999999985, 0.00011427799999999891, 0.00011383300000000068, 0.00011408300000000093, 0.0001145550000000023, 0.000114597000000001, 0.0001142230000000001, 0.0001145689999999984, 0.00011401399999999909, 0.0001140420000000017, 0.00011476399999999984, 0.00011426399999999934, 0.00011433300000000118, 0.00011411100000000007, 0.00011472199999999766, 0.00011431900000000161, 0.00011380600000000102, 0.00011402800000000213, 0.00011467999999999895, 0.00011463900000000318, 0.00011408400000000041, 0.00011384700000000025, 0.00011419399999999802, 0.0001138749999999994, 0.00011429200000000195, 0.00011395799999999734, 0.00011398599999999995, 0.00011416699999999835, 0.00011380599999999755, 0.00011448699999999992, 0.00011438799999999999, 0.00011424999999999977, 0.00011388900000000243, 0.00011419400000000149, 0.00011415299999999878, 0.00011408300000000093, 0.00011450000000000002, 0.00011384799999999973, 0.00011424999999999977]</msg>
<status status="PASS" starttime="20201110 08:36:20.020" endtime="20201110 08:36:20.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.016" endtime="20201110 08:36:20.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.025" endtime="20201110 08:36:20.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.029" endtime="20201110 08:36:20.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.027" endtime="20201110 08:36:20.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.023" endtime="20201110 08:36:20.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.654" endtime="20201110 08:36:20.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.653" endtime="20201110 08:36:20.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.318" endtime="20201110 08:36:20.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.053" endtime="20201110 08:36:20.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.052" endtime="20201110 08:36:20.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.051" endtime="20201110 08:36:20.074"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:35:37.225" endtime="20201110 08:36:20.074" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:34:47.000" endtime="20201110 08:36:20.077"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.132" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:20.140" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:21.325" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:20.131" endtime="20201110 08:36:21.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.329" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:36:21.327" endtime="20201110 08:36:24.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.130" endtime="20201110 08:36:24.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:24.336" endtime="20201110 08:36:24.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.333" endtime="20201110 08:36:24.587"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.601" endtime="20201110 08:36:27.623"></status>
</kw>
<msg timestamp="20201110 08:36:27.624" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.599" endtime="20201110 08:36:27.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.626" endtime="20201110 08:36:27.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.636" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:27.631" endtime="20201110 08:36:27.636"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:24.596" endtime="20201110 08:36:27.638"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:24.594" endtime="20201110 08:36:27.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.593" endtime="20201110 08:36:27.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:27.650" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:27.649" endtime="20201110 08:36:27.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.642" endtime="20201110 08:36:27.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.592" endtime="20201110 08:36:27.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.591" endtime="20201110 08:36:27.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.654" endtime="20201110 08:36:27.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.590" endtime="20201110 08:36:27.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.668" endtime="20201110 08:36:27.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.588" endtime="20201110 08:36:27.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.128" endtime="20201110 08:36:27.673"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:27.685" endtime="20201110 08:36:27.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.682" endtime="20201110 08:36:27.708"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.735" endtime="20201110 08:36:30.757"></status>
</kw>
<msg timestamp="20201110 08:36:30.758" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.731" endtime="20201110 08:36:30.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.763" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.760" endtime="20201110 08:36:30.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.769" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:30.765" endtime="20201110 08:36:30.770"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:27.726" endtime="20201110 08:36:30.771"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:27.721" endtime="20201110 08:36:30.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.719" endtime="20201110 08:36:30.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:30.780" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:30.779" endtime="20201110 08:36:30.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.775" endtime="20201110 08:36:30.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.717" endtime="20201110 08:36:30.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.716" endtime="20201110 08:36:30.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.784" endtime="20201110 08:36:30.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.713" endtime="20201110 08:36:30.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.709" endtime="20201110 08:36:30.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.679" endtime="20201110 08:36:30.790"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:30.796" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.816" endtime="20201110 08:36:32.927"></status>
</kw>
<msg timestamp="20201110 08:36:32.928" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6097990, 'start-iter': 1, 'wakeups': [6107998, 6117997, 6127997, 61379...</msg>
<status status="PASS" starttime="20201110 08:36:30.812" endtime="20201110 08:36:32.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.934" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6097990, 'start-iter': 1, 'wakeups': [6107998, 6117997, 6127997, 61379...</msg>
<status status="PASS" starttime="20201110 08:36:32.930" endtime="20201110 08:36:32.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.937" endtime="20201110 08:36:32.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.807" endtime="20201110 08:36:32.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.801" endtime="20201110 08:36:32.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:32.949" level="INFO">${RESULT} = {'wakeups': [6107998, 6117997, 6127997, 6137997, 6147997, 6157997, 6167997, 6177997, 6187997, 6197997, 6207997, 6217997, 6227997, 6237997, 6247997, 6257997, 6267997, 6277997, 6287997, 6297997, 6307997...</msg>
<status status="PASS" starttime="20201110 08:36:32.945" endtime="20201110 08:36:32.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.957" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:32.955" endtime="20201110 08:36:32.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.961" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:32.959" endtime="20201110 08:36:32.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.950" endtime="20201110 08:36:32.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.967" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:32.966" endtime="20201110 08:36:32.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.969" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:32.968" endtime="20201110 08:36:32.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.963" endtime="20201110 08:36:32.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.974" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:36:32.973" endtime="20201110 08:36:32.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.976" level="INFO">VALUE: 6097990</msg>
<status status="PASS" starttime="20201110 08:36:32.975" endtime="20201110 08:36:32.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.970" endtime="20201110 08:36:32.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.981" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:32.979" endtime="20201110 08:36:32.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.983" level="INFO">VALUE: [6107998, 6117997, 6127997, 6137997, 6147997, 6157997, 6167997, 6177997, 6187997, 6197997, 6207997, 6217997, 6227997, 6237997, 6247997, 6257997, 6267997, 6277997, 6287997, 6297997, 6307997, 6317997, 6327997, 6337997, 6347997, 6357997, 6367997, 6377997, 6387997, 6397997, 6407997, 6417997, 6427997, 6437997, 6447997, 6457997, 6467997, 6477997, 6487997, 6497997, 6507997, 6517997, 6527997, 6537997, 6547997, 6557997, 6567997, 6577997, 6587997, 6597997, 6607997, 6617997, 6627997, 6637997, 6647997, 6657997, 6667997, 6677997, 6687997, 6697997, 6707997, 6717997, 6727997, 6737997, 6747997, 6757997, 6767997, 6777997, 6787997, 6797997, 6807997, 6817997, 6827997, 6837997, 6847997, 6857997, 6867997, 6877997, 6887997, 6897997, 6907997, 6917997, 6927997, 6937997, 6947997, 6957997, 6967997, 6977997, 6987997, 6997997, 7007997, 7017997, 7027997, 7037997, 7047997, 7057997, 7067997, 7077997, 7087997, 7097997]</msg>
<status status="PASS" starttime="20201110 08:36:32.982" endtime="20201110 08:36:32.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.977" endtime="20201110 08:36:32.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.990" endtime="20201110 08:36:33.303"></status>
</kw>
<msg timestamp="20201110 08:36:33.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.121016806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.131025639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:32.989" endtime="20201110 08:36:33.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.121016806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.131025639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:33.307" endtime="20201110 08:36:33.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.315" endtime="20201110 08:36:33.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.986" endtime="20201110 08:36:33.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.984" endtime="20201110 08:36:33.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:33.342" level="INFO">${RESULT} = {'source_diff': [0, 0.010008833000000106, 0.010000166999999838, 0.010001068999999863, 0.010001166999999977, 0.010001125000000055, 0.010001180000000165, 0.010001096999999959, 0.010001138999999881, 0.01...</msg>
<status status="PASS" starttime="20201110 08:36:33.319" endtime="20201110 08:36:33.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.347" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:36:33.346" endtime="20201110 08:36:33.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.349" level="INFO">VALUE: 3.121016806</msg>
<status status="PASS" starttime="20201110 08:36:33.348" endtime="20201110 08:36:33.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.343" endtime="20201110 08:36:33.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.355" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:33.354" endtime="20201110 08:36:33.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.357" level="INFO">VALUE: [3.131025639, 3.141025806, 3.151026875, 3.161028042, 3.171029167, 3.181030347, 3.191031444, 3.201032583, 3.211033708, 3.221034861, 3.231035972, 3.241037153, 3.25103825, 3.261039417, 3.271040542, 3.281041694, 3.291042819, 3.301043958, 3.311045069, 3.321046236, 3.331047347, 3.341048542, 3.351049625, 3.361050792, 3.371051944, 3.381053097, 3.391054194, 3.401055347, 3.411056528, 3.421057625, 3.431058736, 3.441059889, 3.451061014, 3.461062167, 3.471063278, 3.481064444, 3.491065556, 3.501066708, 3.511067847, 3.521068986, 3.531070111, 3.541071278, 3.551072375, 3.561073556, 3.571074653, 3.581075833, 3.591076931, 3.601078097, 3.611079222, 3.621080361, 3.631081472, 3.641082639, 3.65108375, 3.661084917, 3.671086056, 3.681087194, 3.691088306, 3.701089486, 3.711090583, 3.721091764, 3.731092917, 3.741094014, 3.751095125, 3.761096306, 3.771097403, 3.781098583, 3.791099681, 3.801100847, 3.811101958, 3.821103111, 3.831104236, 3.841105389, 3.8511065, 3.861107708, 3.871108792, 3.881109944, 3.891111083, 3.901112236, 3.911113347, 3.921114514, 3.931115667, 3.941116778, 3.951117903, 3.961119056, 3.971120153, 3.981121333, 3.9911225, 4.001123597, 4.011124722, 4.021125889, 4.031126986, 4.041128153, 4.051129264, 4.061130417, 4.071131597, 4.081132694, 4.091133806, 4.101134972, 4.111136083, 4.12113725] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:33.356" endtime="20201110 08:36:33.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.351" endtime="20201110 08:36:33.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.360" endtime="20201110 08:36:33.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:33.364" endtime="20201110 08:36:33.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.362" endtime="20201110 08:36:33.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.359" endtime="20201110 08:36:33.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.798" endtime="20201110 08:36:33.385"></status>
</kw>
<msg timestamp="20201110 08:36:33.385" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:33.394" endtime="20201110 08:36:35.486"></status>
</kw>
<msg timestamp="20201110 08:36:35.487" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8674587, 'start-iter': 1, 'wakeups': [8684595, 8694594, 8704594, 87145...</msg>
<status status="PASS" starttime="20201110 08:36:33.392" endtime="20201110 08:36:35.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.490" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8674587, 'start-iter': 1, 'wakeups': [8684595, 8694594, 8704594, 87145...</msg>
<status status="PASS" starttime="20201110 08:36:35.488" endtime="20201110 08:36:35.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.491" endtime="20201110 08:36:35.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.389" endtime="20201110 08:36:35.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.387" endtime="20201110 08:36:35.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:35.497" level="INFO">${RESULT} = {'wakeups': [8684595, 8694594, 8704594, 8714594, 8724594, 8734594, 8744594, 8754594, 8764594, 8774594, 8784594, 8794594, 8804594, 8814594, 8824594, 8834594, 8844594, 8854594, 8864594, 8874594, 8884594...</msg>
<status status="PASS" starttime="20201110 08:36:35.495" endtime="20201110 08:36:35.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.502" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:35.501" endtime="20201110 08:36:35.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.504" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:35.503" endtime="20201110 08:36:35.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.498" endtime="20201110 08:36:35.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.510" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:35.508" endtime="20201110 08:36:35.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.512" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:35.511" endtime="20201110 08:36:35.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.506" endtime="20201110 08:36:35.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.517" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:36:35.516" endtime="20201110 08:36:35.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.519" level="INFO">VALUE: 8674587</msg>
<status status="PASS" starttime="20201110 08:36:35.518" endtime="20201110 08:36:35.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.513" endtime="20201110 08:36:35.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.524" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:35.523" endtime="20201110 08:36:35.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.526" level="INFO">VALUE: [8684595, 8694594, 8704594, 8714594, 8724594, 8734594, 8744594, 8754594, 8764594, 8774594, 8784594, 8794594, 8804594, 8814594, 8824594, 8834594, 8844594, 8854594, 8864594, 8874594, 8884594, 8894594, 8904594, 8914594, 8924594, 8934594, 8944594, 8954594, 8964594, 8974594, 8984594, 8994594, 9004594, 9014594, 9024594, 9034594, 9044594, 9054594, 9064594, 9074594, 9084594, 9094594, 9104594, 9114594, 9124594, 9134594, 9144594, 9154594, 9164594, 9174594, 9184594, 9194594, 9204594, 9214594, 9224594, 9234594, 9244594, 9254594, 9264594, 9274594, 9284594, 9294594, 9304594, 9314594, 9324594, 9334594, 9344594, 9354594, 9364594, 9374594, 9384594, 9394594, 9404594, 9414594, 9424594, 9434594, 9444594, 9454594, 9464594, 9474594, 9484594, 9494594, 9504594, 9514594, 9524594, 9534594, 9544594, 9554594, 9564594, 9574594, 9584594, 9594594, 9604594, 9614594, 9624594, 9634594, 9644594, 9654594, 9664594, 9674594]</msg>
<status status="PASS" starttime="20201110 08:36:35.525" endtime="20201110 08:36:35.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.520" endtime="20201110 08:36:35.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.534" endtime="20201110 08:36:35.828"></status>
</kw>
<msg timestamp="20201110 08:36:35.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018893889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028902542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.532" endtime="20201110 08:36:35.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018893889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028902542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.832" endtime="20201110 08:36:35.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.840" endtime="20201110 08:36:35.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.530" endtime="20201110 08:36:35.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.528" endtime="20201110 08:36:35.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:35.867" level="INFO">${RESULT} = {'source_diff': [0, 0.010008653, 0.010000194, 0.010001083000000001, 0.010001180999999998, 0.010001111000000007, 0.010001166999999991, 0.010001111000000007, 0.010001179999999998, 0.010001111999999993, ...</msg>
<status status="PASS" starttime="20201110 08:36:35.843" endtime="20201110 08:36:35.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.872" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:36:35.871" endtime="20201110 08:36:35.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.874" level="INFO">VALUE: 0.018893889</msg>
<status status="PASS" starttime="20201110 08:36:35.873" endtime="20201110 08:36:35.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.868" endtime="20201110 08:36:35.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.880" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:35.879" endtime="20201110 08:36:35.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.882" level="INFO">VALUE: [0.028902542, 0.038902736, 0.048903819, 0.058905, 0.068906111, 0.078907278, 0.088908389, 0.098909569, 0.108910681, 0.118911889, 0.128912958, 0.138914111, 0.148915236, 0.158916403, 0.168917514, 0.178918681, 0.188919819, 0.198920972, 0.208922083, 0.218923333, 0.228924375, 0.238925528, 0.248926639, 0.258927792, 0.268928917, 0.278930083, 0.288931181, 0.298932333, 0.308933444, 0.318934625, 0.328935722, 0.338936875, 0.348937986, 0.358939139, 0.368940264, 0.378941417, 0.388942528, 0.398943681, 0.408944833, 0.418945958, 0.428947069, 0.438948292, 0.448949347, 0.4589505, 0.468951611, 0.478952792, 0.488953931, 0.498955083, 0.508956153, 0.518957319, 0.528958431, 0.538959611, 0.548960708, 0.558961875, 0.568962972, 0.578964139, 0.588965264, 0.598966417, 0.608967542, 0.618968764, 0.628969792, 0.638970972, 0.648972083, 0.658973278, 0.668974361, 0.6789755, 0.688976639, 0.698977778, 0.708978889, 0.718980056, 0.728981222, 0.738982319, 0.748983514, 0.758984583, 0.768985708, 0.778986861, 0.788987986, 0.798989139, 0.808990264, 0.818991417, 0.828992556, 0.838993681, 0.848994792, 0.858995958, 0.868997083, 0.878998236, 0.888999333, 0.8990005, 0.909001611, 0.919002778, 0.929003903, 0.939005042, 0.949006153, 0.959007333, 0.969008431, 0.979009597, 0.98901075, 0.999011861, 1.009012972, 1.019014194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:35.881" endtime="20201110 08:36:35.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.876" endtime="20201110 08:36:35.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.886" endtime="20201110 08:36:35.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:35.890" endtime="20201110 08:36:35.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.888" endtime="20201110 08:36:35.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.884" endtime="20201110 08:36:35.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.386" endtime="20201110 08:36:35.911"></status>
</kw>
<msg timestamp="20201110 08:36:35.911" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.920" endtime="20201110 08:36:38.025"></status>
</kw>
<msg timestamp="20201110 08:36:38.027" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11201333, 'start-iter': 1, 'wakeups': [11211340, 11221340, 11231340, 1...</msg>
<status status="PASS" starttime="20201110 08:36:35.918" endtime="20201110 08:36:38.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.033" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11201333, 'start-iter': 1, 'wakeups': [11211340, 11221340, 11231340, 1...</msg>
<status status="PASS" starttime="20201110 08:36:38.029" endtime="20201110 08:36:38.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.035" endtime="20201110 08:36:38.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.915" endtime="20201110 08:36:38.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.913" endtime="20201110 08:36:38.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:38.047" level="INFO">${RESULT} = {'wakeups': [11211340, 11221340, 11231340, 11241340, 11251340, 11261340, 11271340, 11281340, 11291340, 11301340, 11311340, 11321340, 11331340, 11341340, 11351340, 11361340, 11371340, 11381340, 1139134...</msg>
<status status="PASS" starttime="20201110 08:36:38.043" endtime="20201110 08:36:38.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.056" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:38.054" endtime="20201110 08:36:38.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.063" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:38.061" endtime="20201110 08:36:38.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.049" endtime="20201110 08:36:38.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.074" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:38.071" endtime="20201110 08:36:38.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.078" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:38.076" endtime="20201110 08:36:38.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.066" endtime="20201110 08:36:38.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.095" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:36:38.092" endtime="20201110 08:36:38.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.099" level="INFO">VALUE: 11201333</msg>
<status status="PASS" starttime="20201110 08:36:38.097" endtime="20201110 08:36:38.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.087" endtime="20201110 08:36:38.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.108" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:38.106" endtime="20201110 08:36:38.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.110" level="INFO">VALUE: [11211340, 11221340, 11231340, 11241340, 11251340, 11261340, 11271340, 11281340, 11291340, 11301340, 11311340, 11321340, 11331340, 11341340, 11351340, 11361340, 11371340, 11381340, 11391340, 11401340, 11411340, 11421340, 11431340, 11441340, 11451340, 11461340, 11471340, 11481340, 11491340, 11501340, 11511340, 11521340, 11531340, 11541340, 11551340, 11561340, 11571340, 11581340, 11591340, 11601340, 11611340, 11621340, 11631340, 11641340, 11651340, 11661340, 11671340, 11681340, 11691340, 11701340, 11711340, 11721340, 11731340, 11741340, 11751340, 11761340, 11771340, 11781340, 11791340, 11801340, 11811340, 11821340, 11831340, 11841340, 11851340, 11861340, 11871340, 11881340, 11891340, 11901340, 11911340, 11921340, 11931340, 11941340, 11951340, 11961340, 11971340, 11981340, 11991340, 12001340, 12011340, 12021340, 12031340, 12041340, 12051340, 12061340, 12071340, 12081340, 12091340, 12101340, 12111340, 12121340, 12131340, 12141340, 12151340, 12161340, 12171340, 12181340, 12191340, 12201340]</msg>
<status status="PASS" starttime="20201110 08:36:38.109" endtime="20201110 08:36:38.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.102" endtime="20201110 08:36:38.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.117" endtime="20201110 08:36:38.409"></status>
</kw>
<msg timestamp="20201110 08:36:38.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029717944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.116" endtime="20201110 08:36:38.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029717944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.413" endtime="20201110 08:36:38.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.421" endtime="20201110 08:36:38.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.113" endtime="20201110 08:36:38.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.111" endtime="20201110 08:36:38.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:38.449" level="INFO">${RESULT} = {'source_diff': [0, 0.010007972, 0.010001181000000001, 0.010001111, 0.010001166999999998, 0.010001139, 0.010001139000000006, 0.010001125, 0.010001152, 0.010001125, 0.010001223000000004, 0.010001054999...</msg>
<status status="PASS" starttime="20201110 08:36:38.424" endtime="20201110 08:36:38.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.454" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:36:38.452" endtime="20201110 08:36:38.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.456" level="INFO">VALUE: 0.019709972</msg>
<status status="PASS" starttime="20201110 08:36:38.455" endtime="20201110 08:36:38.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.450" endtime="20201110 08:36:38.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.461" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:38.460" endtime="20201110 08:36:38.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.464" level="INFO">VALUE: [0.029717944, 0.039719125, 0.049720236, 0.059721403, 0.069722542, 0.079723681, 0.089724806, 0.099725958, 0.109727083, 0.119728306, 0.129729361, 0.139730528, 0.149731639, 0.159732806, 0.169733917, 0.179735083, 0.189736208, 0.199737361, 0.209738542, 0.219739667, 0.229740764, 0.239741944, 0.249743056, 0.259744236, 0.269745333, 0.2797465, 0.289747653, 0.299748778, 0.309749903, 0.319751069, 0.329752181, 0.339753375, 0.349754472, 0.359755653, 0.36975675, 0.379757986, 0.389759028, 0.399760194, 0.409761319, 0.419762486, 0.429763597, 0.43976475, 0.449765889, 0.459767014, 0.469768125, 0.479769292, 0.489770417, 0.499771569, 0.509772681, 0.519773833, 0.529774944, 0.539776097, 0.549777208, 0.559778375, 0.569779486, 0.579780653, 0.589781792, 0.599782917, 0.609784042, 0.619785194, 0.629786319, 0.639787458, 0.649788569, 0.659789736, 0.669790847, 0.679792, 0.689793125, 0.699794361, 0.709795389, 0.719796583, 0.729797681, 0.739798819, 0.749799931, 0.759801097, 0.769802222, 0.779803389, 0.7898045, 0.799805653, 0.809806806, 0.819807917, 0.829809042, 0.839810194, 0.849811306, 0.8598125, 0.869813583, 0.879814736, 0.889815847, 0.899817, 0.909818139, 0.919819292, 0.929820389, 0.939821556, 0.949822667, 0.959823847, 0.969824931, 0.979826111, 0.989827208, 0.999828389, 1.009829486, 1.019830653] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:38.462" endtime="20201110 08:36:38.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.457" endtime="20201110 08:36:38.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.467" endtime="20201110 08:36:38.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:38.471" endtime="20201110 08:36:38.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.469" endtime="20201110 08:36:38.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.466" endtime="20201110 08:36:38.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.912" endtime="20201110 08:36:38.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.794" endtime="20201110 08:36:38.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.792" endtime="20201110 08:36:38.492"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:38.495" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.503" endtime="20201110 08:36:40.607"></status>
</kw>
<msg timestamp="20201110 08:36:40.608" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13784033, 'start-iter': 1, 'wakeups': [13794048, 13804047, 13814047, 1...</msg>
<status status="PASS" starttime="20201110 08:36:38.502" endtime="20201110 08:36:40.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.615" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13784033, 'start-iter': 1, 'wakeups': [13794048, 13804047, 13814047, 1...</msg>
<status status="PASS" starttime="20201110 08:36:40.611" endtime="20201110 08:36:40.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.617" endtime="20201110 08:36:40.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.499" endtime="20201110 08:36:40.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.497" endtime="20201110 08:36:40.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:40.629" level="INFO">${RESULT} = {'wakeups': [13794048, 13804047, 13814047, 13824047, 13834047, 13844047, 13854047, 13864047, 13874047, 13884047, 13894047, 13904047, 13914047, 13924047, 13934047, 13944047, 13954047, 13964047, 1397404...</msg>
<status status="PASS" starttime="20201110 08:36:40.624" endtime="20201110 08:36:40.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.638" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:40.636" endtime="20201110 08:36:40.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.643" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:40.641" endtime="20201110 08:36:40.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.631" endtime="20201110 08:36:40.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.653" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:40.651" endtime="20201110 08:36:40.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.658" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:40.656" endtime="20201110 08:36:40.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.646" endtime="20201110 08:36:40.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.668" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:36:40.667" endtime="20201110 08:36:40.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.670" level="INFO">VALUE: 13784033</msg>
<status status="PASS" starttime="20201110 08:36:40.670" endtime="20201110 08:36:40.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.661" endtime="20201110 08:36:40.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.677" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:40.676" endtime="20201110 08:36:40.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.680" level="INFO">VALUE: [13794048, 13804047, 13814047, 13824047, 13834047, 13844047, 13854047, 13864047, 13874047, 13884047, 13894047, 13904047, 13914047, 13924047, 13934047, 13944047, 13954047, 13964047, 13974047, 13984047, 13994047, 14004047, 14014047, 14024047, 14034047, 14044047, 14054047, 14064047, 14074047, 14084047, 14094047, 14104047, 14114047, 14124047, 14134047, 14144047, 14154047, 14164047, 14174047, 14184047, 14194047, 14204047, 14214047, 14224047, 14234047, 14244047, 14254047, 14264047, 14274047, 14284047, 14294047, 14304047, 14314047, 14324047, 14334047, 14344047, 14354047, 14364047, 14374047, 14384047, 14394047, 14404047, 14414047, 14424047, 14434047, 14444047, 14454047, 14464047, 14474047, 14484047, 14494047, 14504047, 14514047, 14524047, 14534047, 14544047, 14554047, 14564047, 14574047, 14584047, 14594047, 14604047, 14614047, 14624047, 14634047, 14644047, 14654047, 14664047, 14674047, 14684047, 14694047, 14704047, 14714047, 14724047, 14734047, 14744047, 14754047, 14764047, 14774047, 14784047]</msg>
<status status="PASS" starttime="20201110 08:36:40.679" endtime="20201110 08:36:40.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.672" endtime="20201110 08:36:40.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.688" endtime="20201110 08:36:40.980"></status>
</kw>
<msg timestamp="20201110 08:36:40.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031658819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.687" endtime="20201110 08:36:40.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031658819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.984" endtime="20201110 08:36:40.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.992" endtime="20201110 08:36:40.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.684" endtime="20201110 08:36:40.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.682" endtime="20201110 08:36:40.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:41.019" level="INFO">${RESULT} = {'source_diff': [0, 0.010016610999999998, 0.010000153000000005, 0.010001111, 0.010001180999999998, 0.010001111, 0.010001194000000005, 0.010001083999999993, 0.010001166000000006, 0.010001152999999999, ...</msg>
<status status="PASS" starttime="20201110 08:36:40.996" endtime="20201110 08:36:41.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.024" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:36:41.023" endtime="20201110 08:36:41.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.028" level="INFO">VALUE: 0.021642208</msg>
<status status="PASS" starttime="20201110 08:36:41.027" endtime="20201110 08:36:41.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.020" endtime="20201110 08:36:41.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.033" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:41.032" endtime="20201110 08:36:41.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.036" level="INFO">VALUE: [0.031658819, 0.041658972, 0.051660083, 0.061661264, 0.071662375, 0.081663569, 0.091664653, 0.101665819, 0.111666972, 0.121668097, 0.131669222, 0.141670375, 0.1516715, 0.161672681, 0.171673792, 0.181674972, 0.191676056, 0.201677222, 0.211678333, 0.2216795, 0.231680611, 0.241681806, 0.251682917, 0.261684056, 0.271685194, 0.281686319, 0.291687431, 0.301688639, 0.311689708, 0.321690931, 0.331691986, 0.341693139, 0.35169425, 0.361695431, 0.371696542, 0.381697764, 0.391698806, 0.401699972, 0.411701097, 0.421702236, 0.431703361, 0.441704528, 0.451705639, 0.461706792, 0.471707917, 0.481709069, 0.491710181, 0.501711361, 0.511712458, 0.521713639, 0.531714736, 0.541715903, 0.551717014, 0.561718181, 0.571719292, 0.581720444, 0.591721569, 0.601722722, 0.611723847, 0.621725, 0.631726139, 0.641727278, 0.651728389, 0.661729569, 0.671730667, 0.681731833, 0.691732986, 0.701734125, 0.711735236, 0.721736389, 0.731737514, 0.741738667, 0.751739778, 0.761740958, 0.771742069, 0.781743208, 0.791744333, 0.8017455, 0.811746611, 0.821747764, 0.831748875, 0.841750056, 0.851751153, 0.861752375, 0.871753431, 0.881754639, 0.891755708, 0.901756875, 0.911758014, 0.921759153, 0.931760264, 0.941761444, 0.951762542, 0.96176375, 0.971764819, 0.981766014, 0.991767097, 1.001768264, 1.011769375, 1.021770542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:41.035" endtime="20201110 08:36:41.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.029" endtime="20201110 08:36:41.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.039" endtime="20201110 08:36:41.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:41.042" endtime="20201110 08:36:41.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.041" endtime="20201110 08:36:41.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.037" endtime="20201110 08:36:41.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.496" endtime="20201110 08:36:41.064"></status>
</kw>
<msg timestamp="20201110 08:36:41.064" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.072" endtime="20201110 08:36:43.177"></status>
</kw>
<msg timestamp="20201110 08:36:43.178" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16353987, 'start-iter': 1, 'wakeups': [16364002, 16374001, 16384001, 1...</msg>
<status status="PASS" starttime="20201110 08:36:41.071" endtime="20201110 08:36:43.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.185" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16353987, 'start-iter': 1, 'wakeups': [16364002, 16374001, 16384001, 1...</msg>
<status status="PASS" starttime="20201110 08:36:43.181" endtime="20201110 08:36:43.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.187" endtime="20201110 08:36:43.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.068" endtime="20201110 08:36:43.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.066" endtime="20201110 08:36:43.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:43.199" level="INFO">${RESULT} = {'wakeups': [16364002, 16374001, 16384001, 16394001, 16404001, 16414001, 16424001, 16434001, 16444001, 16454001, 16464001, 16474001, 16484001, 16494001, 16504001, 16514001, 16524001, 16534001, 1654400...</msg>
<status status="PASS" starttime="20201110 08:36:43.195" endtime="20201110 08:36:43.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.208" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:43.206" endtime="20201110 08:36:43.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.213" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:43.211" endtime="20201110 08:36:43.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.201" endtime="20201110 08:36:43.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.223" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:43.221" endtime="20201110 08:36:43.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.228" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:43.226" endtime="20201110 08:36:43.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.216" endtime="20201110 08:36:43.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.239" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:36:43.237" endtime="20201110 08:36:43.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.244" level="INFO">VALUE: 16353987</msg>
<status status="PASS" starttime="20201110 08:36:43.241" endtime="20201110 08:36:43.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.231" endtime="20201110 08:36:43.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.257" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:43.252" endtime="20201110 08:36:43.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.262" level="INFO">VALUE: [16364002, 16374001, 16384001, 16394001, 16404001, 16414001, 16424001, 16434001, 16444001, 16454001, 16464001, 16474001, 16484001, 16494001, 16504001, 16514001, 16524001, 16534001, 16544001, 16554001, 16564001, 16574001, 16584001, 16594001, 16604001, 16614001, 16624001, 16634001, 16644001, 16654001, 16664001, 16674001, 16684001, 16694001, 16704001, 16714001, 16724001, 16734001, 16744001, 16754001, 16764001, 16774001, 16784001, 16794001, 16804001, 16814001, 16824001, 16834001, 16844001, 16854001, 16864001, 16874001, 16884001, 16894001, 16904001, 16914001, 16924001, 16934001, 16944001, 16954001, 16964001, 16974001, 16984001, 16994001, 17004001, 17014001, 17024001, 17034001, 17044001, 17054001, 17064001, 17074001, 17084001, 17094001, 17104001, 17114001, 17124001, 17134001, 17144001, 17154001, 17164001, 17174001, 17184001, 17194001, 17204001, 17214001, 17224001, 17234001, 17244001, 17254001, 17264001, 17274001, 17284001, 17294001, 17304001, 17314001, 17324001, 17334001, 17344001, 17354001]</msg>
<status status="PASS" starttime="20201110 08:36:43.259" endtime="20201110 08:36:43.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.247" endtime="20201110 08:36:43.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.284" endtime="20201110 08:36:43.581"></status>
</kw>
<msg timestamp="20201110 08:36:43.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030121583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.281" endtime="20201110 08:36:43.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030121583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.585" endtime="20201110 08:36:43.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.593" endtime="20201110 08:36:43.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.275" endtime="20201110 08:36:43.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.265" endtime="20201110 08:36:43.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:43.620" level="INFO">${RESULT} = {'source_diff': [0, 0.010016389, 0.010000152999999998, 0.010001111, 0.010001167000000005, 0.010001125, 0.010001152999999999, 0.010001125, 0.010001165999999992, 0.010001111000000007, 0.0100011809999999...</msg>
<status status="PASS" starttime="20201110 08:36:43.596" endtime="20201110 08:36:43.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.625" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:36:43.624" endtime="20201110 08:36:43.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.627" level="INFO">VALUE: 0.020105194</msg>
<status status="PASS" starttime="20201110 08:36:43.626" endtime="20201110 08:36:43.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.621" endtime="20201110 08:36:43.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.633" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:43.632" endtime="20201110 08:36:43.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.635" level="INFO">VALUE: [0.030121583, 0.040121736, 0.050122847, 0.060124014, 0.070125139, 0.080126292, 0.090127417, 0.100128583, 0.110129694, 0.120130875, 0.130131986, 0.140133139, 0.15013425, 0.160135431, 0.170136542, 0.180137722, 0.190138819, 0.200140014, 0.210141111, 0.220142264, 0.230143389, 0.240144569, 0.250145667, 0.260146833, 0.270147944, 0.280149111, 0.29015025, 0.300151403, 0.310152542, 0.320153681, 0.330154875, 0.340155972, 0.350157083, 0.360158278, 0.370159347, 0.380160528, 0.390161639, 0.400162806, 0.410163903, 0.420165056, 0.430166167, 0.440167333, 0.450168444, 0.460169611, 0.470170722, 0.480171903, 0.490173014, 0.500174153, 0.510175278, 0.520176444, 0.530177542, 0.540178708, 0.550179833, 0.560180986, 0.570182097, 0.58018325, 0.590184375, 0.600185528, 0.610186653, 0.620187819, 0.630188958, 0.640190083, 0.650191194, 0.660192403, 0.670193514, 0.680194694, 0.69019575, 0.700196917, 0.710198028, 0.720199208, 0.730200306, 0.740201458, 0.750202583, 0.760203736, 0.770204944, 0.780206014, 0.790207139, 0.800208292, 0.810209403, 0.820210583, 0.830211681, 0.840212861, 0.850213972, 0.860215125, 0.870216236, 0.880217403, 0.890218569, 0.900219681, 0.910220792, 0.920221958, 0.930223069, 0.940224222, 0.950225333, 0.960226514, 0.970227639, 0.980228778, 0.990229889, 1.000231056, 1.010232208, 1.020233347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:43.634" endtime="20201110 08:36:43.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.628" endtime="20201110 08:36:43.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.638" endtime="20201110 08:36:43.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:43.643" endtime="20201110 08:36:43.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.640" endtime="20201110 08:36:43.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.637" endtime="20201110 08:36:43.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.065" endtime="20201110 08:36:43.664"></status>
</kw>
<msg timestamp="20201110 08:36:43.664" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.672" endtime="20201110 08:36:45.776"></status>
</kw>
<msg timestamp="20201110 08:36:45.777" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18952819, 'start-iter': 1, 'wakeups': [18962833, 18972833, 18982833, 1...</msg>
<status status="PASS" starttime="20201110 08:36:43.671" endtime="20201110 08:36:45.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.783" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18952819, 'start-iter': 1, 'wakeups': [18962833, 18972833, 18982833, 1...</msg>
<status status="PASS" starttime="20201110 08:36:45.780" endtime="20201110 08:36:45.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.786" endtime="20201110 08:36:45.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.668" endtime="20201110 08:36:45.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.666" endtime="20201110 08:36:45.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:45.797" level="INFO">${RESULT} = {'wakeups': [18962833, 18972833, 18982833, 18992833, 19002833, 19012833, 19022833, 19032833, 19042833, 19052833, 19062833, 19072833, 19082833, 19092833, 19102833, 19112833, 19122833, 19132833, 1914283...</msg>
<status status="PASS" starttime="20201110 08:36:45.792" endtime="20201110 08:36:45.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.805" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:45.803" endtime="20201110 08:36:45.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.810" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:45.807" endtime="20201110 08:36:45.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.798" endtime="20201110 08:36:45.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.820" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:45.818" endtime="20201110 08:36:45.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.824" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:45.822" endtime="20201110 08:36:45.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.813" endtime="20201110 08:36:45.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.834" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:36:45.832" endtime="20201110 08:36:45.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.838" level="INFO">VALUE: 18952819</msg>
<status status="PASS" starttime="20201110 08:36:45.836" endtime="20201110 08:36:45.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.827" endtime="20201110 08:36:45.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.848" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:45.846" endtime="20201110 08:36:45.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.852" level="INFO">VALUE: [18962833, 18972833, 18982833, 18992833, 19002833, 19012833, 19022833, 19032833, 19042833, 19052833, 19062833, 19072833, 19082833, 19092833, 19102833, 19112833, 19122833, 19132833, 19142833, 19152833, 19162833, 19172833, 19182833, 19192833, 19202833, 19212833, 19222833, 19232833, 19242833, 19252833, 19262833, 19272833, 19282833, 19292833, 19302833, 19312833, 19322833, 19332833, 19342833, 19352833, 19362833, 19372833, 19382833, 19392833, 19402833, 19412833, 19422833, 19432833, 19442833, 19452833, 19462833, 19472833, 19482833, 19492833, 19502833, 19512833, 19522833, 19532833, 19542833, 19552833, 19562833, 19572833, 19582833, 19592833, 19602833, 19612833, 19622833, 19632833, 19642833, 19652833, 19662833, 19672833, 19682833, 19692833, 19702833, 19712833, 19722833, 19732833, 19742833, 19752833, 19762833, 19772833, 19782833, 19792833, 19802833, 19812833, 19822833, 19832833, 19842833, 19852833, 19862833, 19872833, 19882833, 19892833, 19902833, 19912833, 19922833, 19932833, 19942833, 19952833]</msg>
<status status="PASS" starttime="20201110 08:36:45.850" endtime="20201110 08:36:45.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.841" endtime="20201110 08:36:45.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.860" endtime="20201110 08:36:46.152"></status>
</kw>
<msg timestamp="20201110 08:36:46.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018668042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028684014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.858" endtime="20201110 08:36:46.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018668042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028684014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.156" endtime="20201110 08:36:46.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.164" endtime="20201110 08:36:46.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.856" endtime="20201110 08:36:46.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.854" endtime="20201110 08:36:46.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:46.190" level="INFO">${RESULT} = {'source_diff': [0, 0.010015972000000001, 0.010001111, 0.010001125, 0.010001152999999999, 0.010001139000000006, 0.010001165999999992, 0.010001098, 0.010001166000000006, 0.010001110999999993, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:36:46.167" endtime="20201110 08:36:46.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.194" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:36:46.193" endtime="20201110 08:36:46.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.196" level="INFO">VALUE: 0.018668042</msg>
<status status="PASS" starttime="20201110 08:36:46.195" endtime="20201110 08:36:46.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.191" endtime="20201110 08:36:46.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.202" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:46.201" endtime="20201110 08:36:46.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.204" level="INFO">VALUE: [0.028684014, 0.038685125, 0.04868625, 0.058687403, 0.068688542, 0.078689708, 0.088690806, 0.098691972, 0.108693083, 0.11869425, 0.128695375, 0.138696528, 0.148697653, 0.158698819, 0.168699931, 0.178701167, 0.188702222, 0.198703389, 0.208704514, 0.218705667, 0.228706778, 0.238707958, 0.248709083, 0.258710264, 0.268711333, 0.278712486, 0.288713597, 0.298714764, 0.308715861, 0.318717042, 0.328718139, 0.338719306, 0.348720403, 0.358721569, 0.368722694, 0.378723875, 0.388724958, 0.398726111, 0.408727236, 0.418728403, 0.4287295, 0.438730667, 0.448731764, 0.458732931, 0.468734042, 0.478735208, 0.488736319, 0.498737486, 0.508738583, 0.518739778, 0.528740861, 0.538742014, 0.548743139, 0.558744292, 0.568745403, 0.578746569, 0.588747681, 0.598748833, 0.608749958, 0.618751181, 0.628752236, 0.638753403, 0.648754514, 0.658755736, 0.668756778, 0.678757944, 0.688759056, 0.698760208, 0.708761319, 0.718762472, 0.728763611, 0.73876475, 0.748765861, 0.758767028, 0.768768139, 0.778769292, 0.788770417, 0.798771583, 0.808772694, 0.818773847, 0.828774972, 0.838776139, 0.84877725, 0.858778389, 0.8687795, 0.878780667, 0.888781792, 0.898782944, 0.908784056, 0.918785222, 0.928786319, 0.938787486, 0.948788639, 0.958789778, 0.968790875, 0.978792042, 0.988793153, 0.998794306, 1.008795431, 1.018796597] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:46.203" endtime="20201110 08:36:46.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.198" endtime="20201110 08:36:46.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.207" endtime="20201110 08:36:46.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.210" endtime="20201110 08:36:46.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.209" endtime="20201110 08:36:46.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.205" endtime="20201110 08:36:46.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.665" endtime="20201110 08:36:46.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.493" endtime="20201110 08:36:46.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.493" endtime="20201110 08:36:46.231"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:46.234" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.243" endtime="20201110 08:36:48.347"></status>
</kw>
<msg timestamp="20201110 08:36:48.349" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21523544, 'start-iter': 1, 'wakeups': [21533568, 21543567, 21553567, 2...</msg>
<status status="PASS" starttime="20201110 08:36:46.241" endtime="20201110 08:36:48.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21523544, 'start-iter': 1, 'wakeups': [21533568, 21543567, 21553567, 2...</msg>
<status status="PASS" starttime="20201110 08:36:48.351" endtime="20201110 08:36:48.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.357" endtime="20201110 08:36:48.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.238" endtime="20201110 08:36:48.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.236" endtime="20201110 08:36:48.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.373" level="INFO">${RESULT} = {'wakeups': [21533568, 21543567, 21553567, 21563567, 21573567, 21583567, 21593567, 21603567, 21613567, 21623567, 21633567, 21643567, 21653567, 21663567, 21673567, 21683567, 21693567, 21703567, 2171356...</msg>
<status status="PASS" starttime="20201110 08:36:48.369" endtime="20201110 08:36:48.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.382" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:48.380" endtime="20201110 08:36:48.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.386" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:48.384" endtime="20201110 08:36:48.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.375" endtime="20201110 08:36:48.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.396" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:48.394" endtime="20201110 08:36:48.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.400" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:48.398" endtime="20201110 08:36:48.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.389" endtime="20201110 08:36:48.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.410" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:36:48.408" endtime="20201110 08:36:48.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.413" level="INFO">VALUE: 21523544</msg>
<status status="PASS" starttime="20201110 08:36:48.412" endtime="20201110 08:36:48.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.403" endtime="20201110 08:36:48.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.417" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:48.416" endtime="20201110 08:36:48.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.420" level="INFO">VALUE: [21533568, 21543567, 21553567, 21563567, 21573567, 21583567, 21593567, 21603567, 21613567, 21623567, 21633567, 21643567, 21653567, 21663567, 21673567, 21683567, 21693567, 21703567, 21713567, 21723567, 21733567, 21743567, 21753567, 21763567, 21773567, 21783567, 21793567, 21803567, 21813567, 21823567, 21833567, 21843567, 21853567, 21863567, 21873567, 21883567, 21893567, 21903567, 21913567, 21923567, 21933567, 21943567, 21953567, 21963567, 21973567, 21983567, 21993567, 22003567, 22013567, 22023567, 22033567, 22043567, 22053567, 22063567, 22073567, 22083567, 22093567, 22103567, 22113567, 22123567, 22133567, 22143567, 22153567, 22163567, 22173567, 22183567, 22193567, 22203567, 22213567, 22223567, 22233567, 22243567, 22253567, 22263567, 22273567, 22283567, 22293567, 22303567, 22313567, 22323567, 22333567, 22343567, 22353567, 22363567, 22373567, 22383567, 22393567, 22403567, 22413567, 22423567, 22433567, 22443567, 22453567, 22463567, 22473567, 22483567, 22493567, 22503567, 22513567, 22523567]</msg>
<status status="PASS" starttime="20201110 08:36:48.419" endtime="20201110 08:36:48.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.414" endtime="20201110 08:36:48.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.427" endtime="20201110 08:36:48.717"></status>
</kw>
<msg timestamp="20201110 08:36:48.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031895403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.425" endtime="20201110 08:36:48.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031895403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.721" endtime="20201110 08:36:48.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.728" endtime="20201110 08:36:48.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.423" endtime="20201110 08:36:48.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.421" endtime="20201110 08:36:48.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.756" level="INFO">${RESULT} = {'source_diff': [0, 0.010025236000000003, 0.009999999999999995, 0.010001165999999999, 0.010001125000000007, 0.010001138999999992, 0.010001125, 0.010001167000000005, 0.010001125, 0.010001125, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:36:48.732" endtime="20201110 08:36:48.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.761" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:36:48.760" endtime="20201110 08:36:48.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.763" level="INFO">VALUE: 0.021870167</msg>
<status status="PASS" starttime="20201110 08:36:48.762" endtime="20201110 08:36:48.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.757" endtime="20201110 08:36:48.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.768" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:48.767" endtime="20201110 08:36:48.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.770" level="INFO">VALUE: [0.031895403, 0.041895403, 0.051896569, 0.061897694, 0.071898833, 0.081899958, 0.091901125, 0.10190225, 0.111903375, 0.121904542, 0.131905653, 0.141906806, 0.151907931, 0.161909125, 0.171910208, 0.181911375, 0.191912486, 0.201913667, 0.211914792, 0.221916, 0.231917097, 0.241918236, 0.251919333, 0.261920514, 0.271921611, 0.281922778, 0.291923903, 0.301925083, 0.311926181, 0.321927347, 0.331928486, 0.341929639, 0.35193075, 0.361931917, 0.371933028, 0.381934194, 0.391935319, 0.401936486, 0.411937597, 0.421938778, 0.431939903, 0.441941069, 0.451942167, 0.461943333, 0.471944444, 0.481945611, 0.491946736, 0.501947903, 0.511949014, 0.521950181, 0.531951347, 0.541952486, 0.551953583, 0.561954764, 0.571955861, 0.581957028, 0.591958194, 0.601959333, 0.611960444, 0.621961625, 0.63196275, 0.641963903, 0.651965, 0.661966167, 0.671967278, 0.681968444, 0.691969625, 0.701970736, 0.711971875, 0.721973042, 0.731974139, 0.741975306, 0.751976431, 0.761977583, 0.771978694, 0.781979847, 0.791980958, 0.801982125, 0.81198325, 0.821984431, 0.8319855, 0.841986653, 0.851987778, 0.861988931, 0.871990056, 0.881991194, 0.891992306, 0.901993542, 0.911994597, 0.921995736, 0.931996931, 0.941998069, 0.951999125, 0.962000292, 0.972001444, 0.982002569, 0.992003681, 1.002004833, 1.012005986, 1.022007111] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:48.769" endtime="20201110 08:36:48.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.764" endtime="20201110 08:36:48.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.773" endtime="20201110 08:36:48.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.777" endtime="20201110 08:36:48.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.775" endtime="20201110 08:36:48.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.772" endtime="20201110 08:36:48.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.235" endtime="20201110 08:36:48.797"></status>
</kw>
<msg timestamp="20201110 08:36:48.798" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.806" endtime="20201110 08:36:50.909"></status>
</kw>
<msg timestamp="20201110 08:36:50.910" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 24086102, 'start-iter': 1, 'wakeups': [24096125, 24106125, 24116125, 2...</msg>
<status status="PASS" starttime="20201110 08:36:48.804" endtime="20201110 08:36:50.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.916" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 24086102, 'start-iter': 1, 'wakeups': [24096125, 24106125, 24116125, 2...</msg>
<status status="PASS" starttime="20201110 08:36:50.913" endtime="20201110 08:36:50.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.918" endtime="20201110 08:36:50.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.801" endtime="20201110 08:36:50.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.800" endtime="20201110 08:36:50.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.931" level="INFO">${RESULT} = {'wakeups': [24096125, 24106125, 24116125, 24126125, 24136125, 24146125, 24156125, 24166125, 24176125, 24186125, 24196125, 24206125, 24216125, 24226125, 24236125, 24246125, 24256125, 24266125, 2427612...</msg>
<status status="PASS" starttime="20201110 08:36:50.925" endtime="20201110 08:36:50.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.940" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:50.938" endtime="20201110 08:36:50.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.944" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:50.942" endtime="20201110 08:36:50.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.933" endtime="20201110 08:36:50.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.955" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:50.952" endtime="20201110 08:36:50.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.959" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:50.957" endtime="20201110 08:36:50.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.948" endtime="20201110 08:36:50.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.969" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:36:50.967" endtime="20201110 08:36:50.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.973" level="INFO">VALUE: 24086102</msg>
<status status="PASS" starttime="20201110 08:36:50.971" endtime="20201110 08:36:50.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.962" endtime="20201110 08:36:50.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.983" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:50.981" endtime="20201110 08:36:50.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.987" level="INFO">VALUE: [24096125, 24106125, 24116125, 24126125, 24136125, 24146125, 24156125, 24166125, 24176125, 24186125, 24196125, 24206125, 24216125, 24226125, 24236125, 24246125, 24256125, 24266125, 24276125, 24286125, 24296125, 24306125, 24316125, 24326125, 24336125, 24346125, 24356125, 24366125, 24376125, 24386125, 24396125, 24406125, 24416125, 24426125, 24436125, 24446125, 24456125, 24466125, 24476125, 24486125, 24496125, 24506125, 24516125, 24526125, 24536125, 24546125, 24556125, 24566125, 24576125, 24586125, 24596125, 24606125, 24616125, 24626125, 24636125, 24646125, 24656125, 24666125, 24676125, 24686125, 24696125, 24706125, 24716125, 24726125, 24736125, 24746125, 24756125, 24766125, 24776125, 24786125, 24796125, 24806125, 24816125, 24826125, 24836125, 24846125, 24856125, 24866125, 24876125, 24886125, 24896125, 24906125, 24916125, 24926125, 24936125, 24946125, 24956125, 24966125, 24976125, 24986125, 24996125, 25006125, 25016125, 25026125, 25036125, 25046125, 25056125, 25066125, 25076125, 25086125]</msg>
<status status="PASS" starttime="20201110 08:36:50.985" endtime="20201110 08:36:50.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.976" endtime="20201110 08:36:50.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.994" endtime="20201110 08:36:51.285"></status>
</kw>
<msg timestamp="20201110 08:36:51.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018245667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028270764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.993" endtime="20201110 08:36:51.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018245667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028270764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.289" endtime="20201110 08:36:51.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.297" endtime="20201110 08:36:51.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.990" endtime="20201110 08:36:51.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.988" endtime="20201110 08:36:51.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:51.323" level="INFO">${RESULT} = {'source_diff': [0, 0.010025097, 0.010001027999999999, 0.010001111, 0.010001165999999999, 0.010001112000000006, 0.010001193999999991, 0.010001111000000007, 0.010001138999999992, 0.010001125, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:36:51.300" endtime="20201110 08:36:51.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.328" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:36:51.327" endtime="20201110 08:36:51.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.330" level="INFO">VALUE: 0.018245667</msg>
<status status="PASS" starttime="20201110 08:36:51.329" endtime="20201110 08:36:51.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.324" endtime="20201110 08:36:51.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.335" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:51.334" endtime="20201110 08:36:51.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.338" level="INFO">VALUE: [0.028270764, 0.038271792, 0.048272903, 0.058274069, 0.068275181, 0.078276375, 0.088277486, 0.098278625, 0.10827975, 0.118280917, 0.128282028, 0.138283194, 0.148284306, 0.158285472, 0.168286597, 0.178287764, 0.188288875, 0.198290111, 0.208291167, 0.218292333, 0.228293444, 0.238294625, 0.248295722, 0.258296944, 0.268298028, 0.278299181, 0.288300292, 0.298301458, 0.308302583, 0.318303736, 0.328304861, 0.338306042, 0.348307125, 0.358308278, 0.368309389, 0.378310556, 0.388311708, 0.398312819, 0.408313931, 0.418315083, 0.428316194, 0.438317361, 0.448318514, 0.458319639, 0.468320764, 0.478321931, 0.488323014, 0.498324181, 0.508325292, 0.518326444, 0.528327556, 0.538328722, 0.548329833, 0.558331028, 0.568332111, 0.578333264, 0.588334375, 0.598335542, 0.608336653, 0.618337847, 0.628338958, 0.638340097, 0.648341194, 0.658342375, 0.668343472, 0.678344639, 0.68834575, 0.698346944, 0.708348014, 0.718349181, 0.728350292, 0.738351444, 0.748352556, 0.758353764, 0.768354847, 0.778356, 0.788357111, 0.798358278, 0.808359458, 0.818360542, 0.828361653, 0.838362819, 0.848363944, 0.858365083, 0.868366208, 0.878367375, 0.888368472, 0.898369639, 0.908370764, 0.918371931, 0.928373028, 0.938374181, 0.948375292, 0.958376458, 0.968377569, 0.978378736, 0.988379875, 0.998381014, 1.008382111, 1.018383347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:51.337" endtime="20201110 08:36:51.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.331" endtime="20201110 08:36:51.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.341" endtime="20201110 08:36:51.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:51.344" endtime="20201110 08:36:51.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.343" endtime="20201110 08:36:51.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.339" endtime="20201110 08:36:51.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.798" endtime="20201110 08:36:51.365"></status>
</kw>
<msg timestamp="20201110 08:36:51.365" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.373" endtime="20201110 08:36:53.476"></status>
</kw>
<msg timestamp="20201110 08:36:53.477" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26653570, 'start-iter': 1, 'wakeups': [26663594, 26673593, 26683593, 2...</msg>
<status status="PASS" starttime="20201110 08:36:51.372" endtime="20201110 08:36:53.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.483" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26653570, 'start-iter': 1, 'wakeups': [26663594, 26673593, 26683593, 2...</msg>
<status status="PASS" starttime="20201110 08:36:53.479" endtime="20201110 08:36:53.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.485" endtime="20201110 08:36:53.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.369" endtime="20201110 08:36:53.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.367" endtime="20201110 08:36:53.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.496" level="INFO">${RESULT} = {'wakeups': [26663594, 26673593, 26683593, 26693593, 26703593, 26713593, 26723593, 26733593, 26743593, 26753593, 26763593, 26773593, 26783593, 26793593, 26803593, 26813593, 26823593, 26833593, 2684359...</msg>
<status status="PASS" starttime="20201110 08:36:53.492" endtime="20201110 08:36:53.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.505" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:53.503" endtime="20201110 08:36:53.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.509" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:53.507" endtime="20201110 08:36:53.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.498" endtime="20201110 08:36:53.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.521" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:53.519" endtime="20201110 08:36:53.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.526" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:53.523" endtime="20201110 08:36:53.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.512" endtime="20201110 08:36:53.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.536" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:36:53.530" endtime="20201110 08:36:53.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.538" level="INFO">VALUE: 26653570</msg>
<status status="PASS" starttime="20201110 08:36:53.537" endtime="20201110 08:36:53.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.527" endtime="20201110 08:36:53.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.543" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:53.542" endtime="20201110 08:36:53.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.545" level="INFO">VALUE: [26663594, 26673593, 26683593, 26693593, 26703593, 26713593, 26723593, 26733593, 26743593, 26753593, 26763593, 26773593, 26783593, 26793593, 26803593, 26813593, 26823593, 26833593, 26843593, 26853593, 26863593, 26873593, 26883593, 26893593, 26903593, 26913593, 26923593, 26933593, 26943593, 26953593, 26963593, 26973593, 26983593, 26993593, 27003593, 27013593, 27023593, 27033593, 27043593, 27053593, 27063593, 27073593, 27083593, 27093593, 27103593, 27113593, 27123593, 27133593, 27143593, 27153593, 27163593, 27173593, 27183593, 27193593, 27203593, 27213593, 27223593, 27233593, 27243593, 27253593, 27263593, 27273593, 27283593, 27293593, 27303593, 27313593, 27323593, 27333593, 27343593, 27353593, 27363593, 27373593, 27383593, 27393593, 27403593, 27413593, 27423593, 27433593, 27443593, 27453593, 27463593, 27473593, 27483593, 27493593, 27503593, 27513593, 27523593, 27533593, 27543593, 27553593, 27563593, 27573593, 27583593, 27593593, 27603593, 27613593, 27623593, 27633593, 27643593, 27653593]</msg>
<status status="PASS" starttime="20201110 08:36:53.544" endtime="20201110 08:36:53.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.540" endtime="20201110 08:36:53.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.553" endtime="20201110 08:36:53.844"></status>
</kw>
<msg timestamp="20201110 08:36:53.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018190222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028215764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.551" endtime="20201110 08:36:53.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018190222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028215764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.848" endtime="20201110 08:36:53.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.855" endtime="20201110 08:36:53.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.548" endtime="20201110 08:36:53.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.547" endtime="20201110 08:36:53.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.882" level="INFO">${RESULT} = {'source_diff': [0, 0.010025542000000002, 0.010000013999999998, 0.010001125, 0.010001165999999999, 0.010001139000000006, 0.010001138999999992, 0.010001111000000007, 0.010001166999999991, 0.01000111100...</msg>
<status status="PASS" starttime="20201110 08:36:53.859" endtime="20201110 08:36:53.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.887" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:36:53.886" endtime="20201110 08:36:53.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.889" level="INFO">VALUE: 0.018190222</msg>
<status status="PASS" starttime="20201110 08:36:53.888" endtime="20201110 08:36:53.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.883" endtime="20201110 08:36:53.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.894" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:53.893" endtime="20201110 08:36:53.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.896" level="INFO">VALUE: [0.028215764, 0.038215778, 0.048216903, 0.058218069, 0.068219208, 0.078220347, 0.088221458, 0.098222625, 0.108223736, 0.118224903, 0.128226014, 0.138227181, 0.148228306, 0.158229458, 0.168230597, 0.178231764, 0.188232861, 0.198234028, 0.208235194, 0.218236347, 0.228237444, 0.238238611, 0.248239722, 0.258240931, 0.268242, 0.278243167, 0.288244278, 0.298245444, 0.308246556, 0.318247722, 0.328248833, 0.338250014, 0.348251139, 0.358252292, 0.368253403, 0.378254583, 0.388255694, 0.398256875, 0.408258014, 0.418259139, 0.42826025, 0.438261431, 0.448262542, 0.458263708, 0.468264819, 0.478266, 0.488267097, 0.498268264, 0.508269403, 0.518270569, 0.528271667, 0.538272833, 0.548273958, 0.558275111, 0.568276236, 0.578277417, 0.588278514, 0.598279681, 0.608280806, 0.618281972, 0.628283111, 0.63828425, 0.648285361, 0.658286542, 0.668287653, 0.678288833, 0.688289944, 0.698291111, 0.708292222, 0.718293403, 0.7282945, 0.738295667, 0.748296778, 0.758297944, 0.768299083, 0.778300292, 0.788301347, 0.798302514, 0.808303694, 0.818304778, 0.828305875, 0.838307042, 0.848308153, 0.858309319, 0.868310431, 0.878311611, 0.888312681, 0.898313861, 0.908314958, 0.918316125, 0.928317222, 0.938318403, 0.948319514, 0.958320681, 0.968321792, 0.978322931, 0.988324097, 0.998325208, 1.008326333, 1.018327486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:53.895" endtime="20201110 08:36:53.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.890" endtime="20201110 08:36:53.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.900" endtime="20201110 08:36:53.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.903" endtime="20201110 08:36:53.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.902" endtime="20201110 08:36:53.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.898" endtime="20201110 08:36:53.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.366" endtime="20201110 08:36:53.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.233" endtime="20201110 08:36:53.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.232" endtime="20201110 08:36:53.924"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:53.927" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.935" endtime="20201110 08:36:56.038"></status>
</kw>
<msg timestamp="20201110 08:36:56.039" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29215159, 'start-iter': 1, 'wakeups': [29225193, 29235192, 29245192, 2...</msg>
<status status="PASS" starttime="20201110 08:36:53.933" endtime="20201110 08:36:56.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.045" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29215159, 'start-iter': 1, 'wakeups': [29225193, 29235192, 29245192, 2...</msg>
<status status="PASS" starttime="20201110 08:36:56.041" endtime="20201110 08:36:56.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.047" endtime="20201110 08:36:56.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.931" endtime="20201110 08:36:56.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.929" endtime="20201110 08:36:56.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.058" level="INFO">${RESULT} = {'wakeups': [29225193, 29235192, 29245192, 29255192, 29265192, 29275192, 29285192, 29295192, 29305192, 29315192, 29325192, 29335192, 29345192, 29355192, 29365192, 29375192, 29385192, 29395192, 2940519...</msg>
<status status="PASS" starttime="20201110 08:36:56.054" endtime="20201110 08:36:56.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.067" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:56.065" endtime="20201110 08:36:56.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.071" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:56.069" endtime="20201110 08:36:56.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.060" endtime="20201110 08:36:56.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.081" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:56.079" endtime="20201110 08:36:56.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.085" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:56.083" endtime="20201110 08:36:56.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.074" endtime="20201110 08:36:56.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.095" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:36:56.093" endtime="20201110 08:36:56.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.102" level="INFO">VALUE: 29215159</msg>
<status status="PASS" starttime="20201110 08:36:56.100" endtime="20201110 08:36:56.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.088" endtime="20201110 08:36:56.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.112" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:56.110" endtime="20201110 08:36:56.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.117" level="INFO">VALUE: [29225193, 29235192, 29245192, 29255192, 29265192, 29275192, 29285192, 29295192, 29305192, 29315192, 29325192, 29335192, 29345192, 29355192, 29365192, 29375192, 29385192, 29395192, 29405192, 29415192, 29425192, 29435192, 29445192, 29455192, 29465192, 29475192, 29485192, 29495192, 29505192, 29515192, 29525192, 29535192, 29545192, 29555192, 29565192, 29575192, 29585192, 29595192, 29605192, 29615192, 29625192, 29635192, 29645192, 29655192, 29665192, 29675192, 29685192, 29695192, 29705192, 29715192, 29725192, 29735192, 29745192, 29755192, 29765192, 29775192, 29785192, 29795192, 29805192, 29815192, 29825192, 29835192, 29845192, 29855192, 29865192, 29875192, 29885192, 29895192, 29905192, 29915192, 29925192, 29935192, 29945192, 29955192, 29965192, 29975192, 29985192, 29995192, 30005192, 30015192, 30025192, 30035192, 30045192, 30055192, 30065192, 30075192, 30085192, 30095192, 30105192, 30115192, 30125192, 30135192, 30145192, 30155192, 30165192, 30175192, 30185192, 30195192, 30205192, 30215192]</msg>
<status status="PASS" starttime="20201110 08:36:56.114" endtime="20201110 08:36:56.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.105" endtime="20201110 08:36:56.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.132" endtime="20201110 08:36:56.431"></status>
</kw>
<msg timestamp="20201110 08:36:56.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020891306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030926736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.129" endtime="20201110 08:36:56.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020891306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030926736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.434" endtime="20201110 08:36:56.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.442" endtime="20201110 08:36:56.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.124" endtime="20201110 08:36:56.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.120" endtime="20201110 08:36:56.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.468" level="INFO">${RESULT} = {'source_diff': [0, 0.010035430000000001, 0.010000722, 0.010001139, 0.010001152999999999, 0.010001097000000007, 0.010001166999999991, 0.010001125, 0.010001152999999999, 0.010001125, 0.0100011660000000...</msg>
<status status="PASS" starttime="20201110 08:36:56.445" endtime="20201110 08:36:56.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.472" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:36:56.471" endtime="20201110 08:36:56.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.474" level="INFO">VALUE: 0.020891306</msg>
<status status="PASS" starttime="20201110 08:36:56.473" endtime="20201110 08:36:56.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.469" endtime="20201110 08:36:56.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.480" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:56.479" endtime="20201110 08:36:56.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.483" level="INFO">VALUE: [0.030926736, 0.040927458, 0.050928597, 0.06092975, 0.070930847, 0.080932014, 0.090933139, 0.100934292, 0.110935417, 0.120936583, 0.130937708, 0.140938875, 0.150939986, 0.160941208, 0.170942264, 0.180943444, 0.190944583, 0.200945708, 0.210946861, 0.220948028, 0.230949125, 0.240950347, 0.250951389, 0.260952569, 0.270953681, 0.280954833, 0.290955958, 0.300957139, 0.31095825, 0.320959403, 0.330960528, 0.340961667, 0.350962778, 0.360963931, 0.370965056, 0.380966208, 0.390967319, 0.400968472, 0.410969597, 0.42097075, 0.430971861, 0.440973014, 0.450974139, 0.460975292, 0.470976389, 0.480977597, 0.490978667, 0.500979833, 0.510980944, 0.520982111, 0.530983222, 0.540984375, 0.550985486, 0.560986639, 0.57098775, 0.580988931, 0.590990028, 0.600991181, 0.610992306, 0.620993458, 0.630994583, 0.640995722, 0.650996861, 0.660998, 0.670999111, 0.681000278, 0.691001389, 0.701002542, 0.711003667, 0.721004861, 0.731005931, 0.741007083, 0.751008194, 0.761009361, 0.771010486, 0.781011639, 0.79101275, 0.801013903, 0.811015028, 0.821016194, 0.831017292, 0.841018472, 0.851019556, 0.861020736, 0.871021875, 0.881023042, 0.891024153, 0.901025264, 0.911026375, 0.921027542, 0.931028667, 0.941029806, 0.951030917, 0.961032083, 0.971033194, 0.981034417, 0.991035486, 1.001036625, 1.011037736, 1.021038917] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:56.482" endtime="20201110 08:36:56.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.476" endtime="20201110 08:36:56.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.486" endtime="20201110 08:36:56.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.489" endtime="20201110 08:36:56.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.488" endtime="20201110 08:36:56.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.484" endtime="20201110 08:36:56.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.927" endtime="20201110 08:36:56.510"></status>
</kw>
<msg timestamp="20201110 08:36:56.511" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.519" endtime="20201110 08:36:58.622"></status>
</kw>
<msg timestamp="20201110 08:36:58.624" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31799050, 'start-iter': 1, 'wakeups': [31809085, 31819083, 31829083, 3...</msg>
<status status="PASS" starttime="20201110 08:36:56.517" endtime="20201110 08:36:58.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.630" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31799050, 'start-iter': 1, 'wakeups': [31809085, 31819083, 31829083, 3...</msg>
<status status="PASS" starttime="20201110 08:36:58.626" endtime="20201110 08:36:58.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.632" endtime="20201110 08:36:58.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.515" endtime="20201110 08:36:58.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.513" endtime="20201110 08:36:58.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.643" level="INFO">${RESULT} = {'wakeups': [31809085, 31819083, 31829083, 31839083, 31849083, 31859083, 31869083, 31879083, 31889083, 31899083, 31909083, 31919083, 31929083, 31939083, 31949083, 31959083, 31969083, 31979083, 3198908...</msg>
<status status="PASS" starttime="20201110 08:36:58.639" endtime="20201110 08:36:58.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.651" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:58.649" endtime="20201110 08:36:58.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.656" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:58.653" endtime="20201110 08:36:58.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.645" endtime="20201110 08:36:58.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.666" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:58.663" endtime="20201110 08:36:58.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.670" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:58.668" endtime="20201110 08:36:58.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.658" endtime="20201110 08:36:58.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.680" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:36:58.678" endtime="20201110 08:36:58.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.684" level="INFO">VALUE: 31799050</msg>
<status status="PASS" starttime="20201110 08:36:58.682" endtime="20201110 08:36:58.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.673" endtime="20201110 08:36:58.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.694" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:58.692" endtime="20201110 08:36:58.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.699" level="INFO">VALUE: [31809085, 31819083, 31829083, 31839083, 31849083, 31859083, 31869083, 31879083, 31889083, 31899083, 31909083, 31919083, 31929083, 31939083, 31949083, 31959083, 31969083, 31979083, 31989083, 31999083, 32009083, 32019083, 32029083, 32039083, 32049083, 32059083, 32069083, 32079083, 32089083, 32099083, 32109083, 32119083, 32129083, 32139083, 32149083, 32159083, 32169083, 32179083, 32189083, 32199083, 32209083, 32219083, 32229083, 32239083, 32249083, 32259083, 32269083, 32279083, 32289083, 32299083, 32309083, 32319083, 32329083, 32339083, 32349083, 32359083, 32369083, 32379083, 32389083, 32399083, 32409083, 32419083, 32429083, 32439083, 32449083, 32459083, 32469083, 32479083, 32489083, 32499083, 32509083, 32519083, 32529083, 32539083, 32549083, 32559083, 32569083, 32579083, 32589083, 32599083, 32609083, 32619083, 32629083, 32639083, 32649083, 32659083, 32669083, 32679083, 32689083, 32699083, 32709083, 32719083, 32729083, 32739083, 32749083, 32759083, 32769083, 32779083, 32789083, 32799083]</msg>
<status status="PASS" starttime="20201110 08:36:58.696" endtime="20201110 08:36:58.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.687" endtime="20201110 08:36:58.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.725" endtime="20201110 08:36:59.023"></status>
</kw>
<msg timestamp="20201110 08:36:59.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018612639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028648403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.721" endtime="20201110 08:36:59.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018612639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028648403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.026" endtime="20201110 08:36:59.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.034" endtime="20201110 08:36:59.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.711" endtime="20201110 08:36:59.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.702" endtime="20201110 08:36:59.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.062" level="INFO">${RESULT} = {'source_diff': [0, 0.010035763999999999, 0.009999875000000002, 0.010001165999999999, 0.010001125, 0.010001112000000006, 0.010001179999999998, 0.010001097, 0.010001166999999991, 0.010001180999999998, ...</msg>
<status status="PASS" starttime="20201110 08:36:59.038" endtime="20201110 08:36:59.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.066" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:36:59.065" endtime="20201110 08:36:59.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.069" level="INFO">VALUE: 0.018612639</msg>
<status status="PASS" starttime="20201110 08:36:59.068" endtime="20201110 08:36:59.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.063" endtime="20201110 08:36:59.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.074" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:59.073" endtime="20201110 08:36:59.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.076" level="INFO">VALUE: [0.028648403, 0.038648278, 0.048649444, 0.058650569, 0.068651681, 0.078652861, 0.088653958, 0.098655125, 0.108656306, 0.118657417, 0.128658528, 0.138659681, 0.148660806, 0.158661972, 0.168663083, 0.178664264, 0.188665375, 0.198666556, 0.208667667, 0.218668819, 0.228669931, 0.238671153, 0.248672222, 0.258673403, 0.2686745, 0.278675653, 0.288676764, 0.298677944, 0.308679069, 0.318680194, 0.328681306, 0.338682514, 0.348683583, 0.358684736, 0.368685847, 0.378687014, 0.388688125, 0.398689278, 0.408690389, 0.418691569, 0.428692681, 0.438693861, 0.448694931, 0.458696097, 0.468697222, 0.478698375, 0.488699514, 0.498700639, 0.50870175, 0.518702903, 0.528704028, 0.538705208, 0.548706347, 0.558707458, 0.568708569, 0.578709736, 0.588710833, 0.598712014, 0.608713111, 0.618714264, 0.628715389, 0.638716542, 0.648717653, 0.658718819, 0.668719931, 0.678721097, 0.688722194, 0.698723361, 0.708724486, 0.718725639, 0.72872675, 0.738727917, 0.748729014, 0.758730181, 0.768731292, 0.778732458, 0.788733556, 0.798734722, 0.808735847, 0.818736986, 0.828738125, 0.838739264, 0.848740375, 0.858741542, 0.868742667, 0.878743819, 0.888744917, 0.898746083, 0.908747208, 0.918748375, 0.928749472, 0.938750639, 0.948751736, 0.958752903, 0.968754028, 0.978755236, 0.988756292, 0.998757458, 1.008758556, 1.018759736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:59.075" endtime="20201110 08:36:59.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.070" endtime="20201110 08:36:59.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.080" endtime="20201110 08:36:59.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.083" endtime="20201110 08:36:59.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.082" endtime="20201110 08:36:59.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.078" endtime="20201110 08:36:59.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.511" endtime="20201110 08:36:59.104"></status>
</kw>
<msg timestamp="20201110 08:36:59.104" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.114" endtime="20201110 08:37:01.217"></status>
</kw>
<msg timestamp="20201110 08:37:01.219" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34394119, 'start-iter': 1, 'wakeups': [34404153, 34414152, 34424152, 3...</msg>
<status status="PASS" starttime="20201110 08:36:59.112" endtime="20201110 08:37:01.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.226" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34394119, 'start-iter': 1, 'wakeups': [34404153, 34414152, 34424152, 3...</msg>
<status status="PASS" starttime="20201110 08:37:01.222" endtime="20201110 08:37:01.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.228" endtime="20201110 08:37:01.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.108" endtime="20201110 08:37:01.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.106" endtime="20201110 08:37:01.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.240" level="INFO">${RESULT} = {'wakeups': [34404153, 34414152, 34424152, 34434152, 34444152, 34454152, 34464152, 34474152, 34484152, 34494152, 34504152, 34514152, 34524152, 34534152, 34544152, 34554152, 34564152, 34574152, 3458415...</msg>
<status status="PASS" starttime="20201110 08:37:01.236" endtime="20201110 08:37:01.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.249" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:01.247" endtime="20201110 08:37:01.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.254" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:01.252" endtime="20201110 08:37:01.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.242" endtime="20201110 08:37:01.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.265" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:01.262" endtime="20201110 08:37:01.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.269" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:01.267" endtime="20201110 08:37:01.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.257" endtime="20201110 08:37:01.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.280" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:37:01.278" endtime="20201110 08:37:01.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.285" level="INFO">VALUE: 34394119</msg>
<status status="PASS" starttime="20201110 08:37:01.282" endtime="20201110 08:37:01.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.272" endtime="20201110 08:37:01.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.296" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:01.293" endtime="20201110 08:37:01.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.298" level="INFO">VALUE: [34404153, 34414152, 34424152, 34434152, 34444152, 34454152, 34464152, 34474152, 34484152, 34494152, 34504152, 34514152, 34524152, 34534152, 34544152, 34554152, 34564152, 34574152, 34584152, 34594152, 34604152, 34614152, 34624152, 34634152, 34644152, 34654152, 34664152, 34674152, 34684152, 34694152, 34704152, 34714152, 34724152, 34734152, 34744152, 34754152, 34764152, 34774152, 34784152, 34794152, 34804152, 34814152, 34824152, 34834152, 34844152, 34854152, 34864152, 34874152, 34884152, 34894152, 34904152, 34914152, 34924152, 34934152, 34944152, 34954152, 34964152, 34974152, 34984152, 34994152, 35004152, 35014152, 35024152, 35034152, 35044152, 35054152, 35064152, 35074152, 35084152, 35094152, 35104152, 35114152, 35124152, 35134152, 35144152, 35154152, 35164152, 35174152, 35184152, 35194152, 35204152, 35214152, 35224152, 35234152, 35244152, 35254152, 35264152, 35274152, 35284152, 35294152, 35304152, 35314152, 35324152, 35334152, 35344152, 35354152, 35364152, 35374152, 35384152, 35394152]</msg>
<status status="PASS" starttime="20201110 08:37:01.297" endtime="20201110 08:37:01.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.288" endtime="20201110 08:37:01.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.306" endtime="20201110 08:37:01.598"></status>
</kw>
<msg timestamp="20201110 08:37:01.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019760389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02979575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:01.304" endtime="20201110 08:37:01.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019760389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02979575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:01.602" endtime="20201110 08:37:01.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.610" endtime="20201110 08:37:01.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.302" endtime="20201110 08:37:01.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.300" endtime="20201110 08:37:01.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.638" level="INFO">${RESULT} = {'source_diff': [0, 0.010035361, 0.010000736, 0.010001111, 0.010001166999999998, 0.010001125000000007, 0.010001152999999999, 0.010001179999999998, 0.010001125, 0.010001097, 0.010001180999999998, 0.010...</msg>
<status status="PASS" starttime="20201110 08:37:01.614" endtime="20201110 08:37:01.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.642" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:37:01.641" endtime="20201110 08:37:01.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.645" level="INFO">VALUE: 0.019760389</msg>
<status status="PASS" starttime="20201110 08:37:01.644" endtime="20201110 08:37:01.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.639" endtime="20201110 08:37:01.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.650" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:01.649" endtime="20201110 08:37:01.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.652" level="INFO">VALUE: [0.02979575, 0.039796486, 0.049797597, 0.059798764, 0.069799889, 0.079801042, 0.089802222, 0.099803347, 0.109804444, 0.119805625, 0.129806722, 0.139807889, 0.149809014, 0.159810181, 0.169811292, 0.179812458, 0.189813597, 0.199814736, 0.209815861, 0.219817028, 0.229818139, 0.239819306, 0.249820431, 0.259821583, 0.269822708, 0.279823861, 0.289824986, 0.299826167, 0.309827264, 0.319828431, 0.329829569, 0.339830736, 0.349831833, 0.359833028, 0.369834111, 0.379835278, 0.389836375, 0.399837542, 0.409838653, 0.419839847, 0.429840917, 0.439842097, 0.449843194, 0.459844403, 0.469845458, 0.479846639, 0.489847736, 0.499848889, 0.50985, 0.519851181, 0.529852278, 0.539853431, 0.549854542, 0.559855708, 0.569856861, 0.579857986, 0.589859097, 0.59986025, 0.609861375, 0.619862583, 0.629863653, 0.639864806, 0.649865903, 0.659867069, 0.669868181, 0.679869361, 0.689870458, 0.699871611, 0.709872722, 0.719873903, 0.729875, 0.739876167, 0.749877278, 0.759878486, 0.769879556, 0.779880722, 0.789881833, 0.799882986, 0.809884097, 0.819885292, 0.829886361, 0.839887528, 0.849888653, 0.859889806, 0.869890917, 0.879892097, 0.889893222, 0.899894347, 0.909895458, 0.919896625, 0.929897736, 0.939898889, 0.949900014, 0.959901194, 0.969902278, 0.979903444, 0.989904556, 0.999905722, 1.009906847, 1.019908] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:01.651" endtime="20201110 08:37:01.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.646" endtime="20201110 08:37:01.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.656" endtime="20201110 08:37:01.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.659" endtime="20201110 08:37:01.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.658" endtime="20201110 08:37:01.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.654" endtime="20201110 08:37:01.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.105" endtime="20201110 08:37:01.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.925" endtime="20201110 08:37:01.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.925" endtime="20201110 08:37:01.681"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:01.683" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.692" endtime="20201110 08:37:03.795"></status>
</kw>
<msg timestamp="20201110 08:37:03.796" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36972079, 'start-iter': 1, 'wakeups': [36982123, 36992124, 37002124, 3...</msg>
<status status="PASS" starttime="20201110 08:37:01.690" endtime="20201110 08:37:03.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36972079, 'start-iter': 1, 'wakeups': [36982123, 36992124, 37002124, 3...</msg>
<status status="PASS" starttime="20201110 08:37:03.799" endtime="20201110 08:37:03.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.805" endtime="20201110 08:37:03.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.688" endtime="20201110 08:37:03.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.685" endtime="20201110 08:37:03.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.826" level="INFO">${RESULT} = {'wakeups': [36982123, 36992124, 37002124, 37012124, 37022124, 37032124, 37042124, 37052124, 37062124, 37072124, 37082124, 37092124, 37102124, 37112124, 37122124, 37132124, 37142124, 37152124, 3716212...</msg>
<status status="PASS" starttime="20201110 08:37:03.822" endtime="20201110 08:37:03.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.838" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:03.833" endtime="20201110 08:37:03.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.842" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:03.840" endtime="20201110 08:37:03.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.828" endtime="20201110 08:37:03.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.853" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:03.851" endtime="20201110 08:37:03.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.858" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:03.856" endtime="20201110 08:37:03.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.846" endtime="20201110 08:37:03.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.869" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:37:03.867" endtime="20201110 08:37:03.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.873" level="INFO">VALUE: 36972079</msg>
<status status="PASS" starttime="20201110 08:37:03.871" endtime="20201110 08:37:03.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.861" endtime="20201110 08:37:03.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.884" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:03.882" endtime="20201110 08:37:03.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.889" level="INFO">VALUE: [36982123, 36992124, 37002124, 37012124, 37022124, 37032124, 37042124, 37052124, 37062124, 37072124, 37082124, 37092124, 37102124, 37112124, 37122124, 37132124, 37142124, 37152124, 37162124, 37172124, 37182124, 37192124, 37202124, 37212124, 37222124, 37232124, 37242124, 37252124, 37262124, 37272124, 37282124, 37292124, 37302124, 37312124, 37322124, 37332124, 37342124, 37352124, 37362124, 37372124, 37382124, 37392124, 37402124, 37412124, 37422124, 37432124, 37442124, 37452124, 37462124, 37472124, 37482124, 37492124, 37502124, 37512124, 37522124, 37532124, 37542124, 37552124, 37562124, 37572124, 37582124, 37592124, 37602124, 37612124, 37622124, 37632124, 37642124, 37652124, 37662124, 37672124, 37682124, 37692124, 37702124, 37712124, 37722124, 37732124, 37742124, 37752124, 37762124, 37772124, 37782124, 37792124, 37802124, 37812124, 37822124, 37832124, 37842124, 37852124, 37862124, 37872124, 37882124, 37892124, 37902124, 37912124, 37922124, 37932124, 37942124, 37952124, 37962124, 37972124]</msg>
<status status="PASS" starttime="20201110 08:37:03.887" endtime="20201110 08:37:03.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.877" endtime="20201110 08:37:03.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.906" endtime="20201110 08:37:04.207"></status>
</kw>
<msg timestamp="20201110 08:37:04.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031667375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.902" endtime="20201110 08:37:04.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031667375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.211" endtime="20201110 08:37:04.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.219" endtime="20201110 08:37:04.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.896" endtime="20201110 08:37:04.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.893" endtime="20201110 08:37:04.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.247" level="INFO">${RESULT} = {'source_diff': [0, 0.010046068999999998, 0.010001389, 0.010001180000000005, 0.010001098, 0.010001124999999993, 0.010001152, 0.010001181000000012, 0.010001152999999999, 0.010001069000000001, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:37:04.222" endtime="20201110 08:37:04.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.252" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:37:04.251" endtime="20201110 08:37:04.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.254" level="INFO">VALUE: 0.021621306</msg>
<status status="PASS" starttime="20201110 08:37:04.253" endtime="20201110 08:37:04.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.248" endtime="20201110 08:37:04.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.260" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:04.259" endtime="20201110 08:37:04.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.262" level="INFO">VALUE: [0.031667375, 0.041668764, 0.051669944, 0.061671042, 0.071672167, 0.081673319, 0.0916745, 0.101675653, 0.111676722, 0.121677917, 0.131679042, 0.141680181, 0.151681306, 0.161682486, 0.171683583, 0.181684764, 0.191685861, 0.201687028, 0.211688139, 0.221689306, 0.231690403, 0.241691625, 0.251692681, 0.261693833, 0.271694944, 0.281696111, 0.291697236, 0.301698389, 0.311699486, 0.321700653, 0.331701764, 0.341702917, 0.351704028, 0.361705194, 0.371706347, 0.381707472, 0.391708583, 0.401709736, 0.411710847, 0.421712, 0.431713125, 0.441714292, 0.451715403, 0.461716542, 0.471717667, 0.481718833, 0.491719931, 0.501721111, 0.511722208, 0.521723361, 0.531724486, 0.541725653, 0.551726778, 0.561727917, 0.571729042, 0.581730194, 0.591731306, 0.6017325, 0.611733569, 0.621734722, 0.631735847, 0.641737, 0.651738111, 0.661739278, 0.671740389, 0.681741542, 0.691742667, 0.701743819, 0.711744931, 0.721746111, 0.731747278, 0.741748361, 0.751749472, 0.761750639, 0.771751764, 0.781752931, 0.791754042, 0.801755222, 0.811756306, 0.821757458, 0.831758569, 0.841759722, 0.851760861, 0.861762042, 0.871763139, 0.881764278, 0.891765431, 0.901766556, 0.911767681, 0.921768861, 0.931769931, 0.941771111, 0.951772222, 0.961773361, 0.971774472, 0.981775639, 0.99177675, 1.001777917, 1.011779028, 1.021780194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:04.261" endtime="20201110 08:37:04.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.256" endtime="20201110 08:37:04.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.265" endtime="20201110 08:37:04.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.269" endtime="20201110 08:37:04.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.267" endtime="20201110 08:37:04.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.263" endtime="20201110 08:37:04.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.684" endtime="20201110 08:37:04.290"></status>
</kw>
<msg timestamp="20201110 08:37:04.290" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.298" endtime="20201110 08:37:06.403"></status>
</kw>
<msg timestamp="20201110 08:37:06.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39578599, 'start-iter': 1, 'wakeups': [39588643, 39598644, 39608644, 3...</msg>
<status status="PASS" starttime="20201110 08:37:04.297" endtime="20201110 08:37:06.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.411" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39578599, 'start-iter': 1, 'wakeups': [39588643, 39598644, 39608644, 3...</msg>
<status status="PASS" starttime="20201110 08:37:06.407" endtime="20201110 08:37:06.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.413" endtime="20201110 08:37:06.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.294" endtime="20201110 08:37:06.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.292" endtime="20201110 08:37:06.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.425" level="INFO">${RESULT} = {'wakeups': [39588643, 39598644, 39608644, 39618644, 39628644, 39638644, 39648644, 39658644, 39668644, 39678644, 39688644, 39698644, 39708644, 39718644, 39728644, 39738644, 39748644, 39758644, 3976864...</msg>
<status status="PASS" starttime="20201110 08:37:06.421" endtime="20201110 08:37:06.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.434" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:06.432" endtime="20201110 08:37:06.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.439" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:06.436" endtime="20201110 08:37:06.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.427" endtime="20201110 08:37:06.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.450" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:06.448" endtime="20201110 08:37:06.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.455" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:06.453" endtime="20201110 08:37:06.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.443" endtime="20201110 08:37:06.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.468" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:37:06.466" endtime="20201110 08:37:06.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.473" level="INFO">VALUE: 39578599</msg>
<status status="PASS" starttime="20201110 08:37:06.470" endtime="20201110 08:37:06.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.458" endtime="20201110 08:37:06.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.483" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:06.481" endtime="20201110 08:37:06.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.488" level="INFO">VALUE: [39588643, 39598644, 39608644, 39618644, 39628644, 39638644, 39648644, 39658644, 39668644, 39678644, 39688644, 39698644, 39708644, 39718644, 39728644, 39738644, 39748644, 39758644, 39768644, 39778644, 39788644, 39798644, 39808644, 39818644, 39828644, 39838644, 39848644, 39858644, 39868644, 39878644, 39888644, 39898644, 39908644, 39918644, 39928644, 39938644, 39948644, 39958644, 39968644, 39978644, 39988644, 39998644, 40008644, 40018644, 40028644, 40038644, 40048644, 40058644, 40068644, 40078644, 40088644, 40098644, 40108644, 40118644, 40128644, 40138644, 40148644, 40158644, 40168644, 40178644, 40188644, 40198644, 40208644, 40218644, 40228644, 40238644, 40248644, 40258644, 40268644, 40278644, 40288644, 40298644, 40308644, 40318644, 40328644, 40338644, 40348644, 40358644, 40368644, 40378644, 40388644, 40398644, 40408644, 40418644, 40428644, 40438644, 40448644, 40458644, 40468644, 40478644, 40488644, 40498644, 40508644, 40518644, 40528644, 40538644, 40548644, 40558644, 40568644, 40578644]</msg>
<status status="PASS" starttime="20201110 08:37:06.486" endtime="20201110 08:37:06.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.476" endtime="20201110 08:37:06.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.505" endtime="20201110 08:37:06.800"></status>
</kw>
<msg timestamp="20201110 08:37:06.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018686819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028732917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.501" endtime="20201110 08:37:06.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018686819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028732917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.804" endtime="20201110 08:37:06.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.811" endtime="20201110 08:37:06.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.495" endtime="20201110 08:37:06.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.492" endtime="20201110 08:37:06.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.838" level="INFO">${RESULT} = {'source_diff': [0, 0.010046098, 0.010001389000000003, 0.010001165999999999, 0.010001125, 0.010001110999999993, 0.010001181000000012, 0.010001097, 0.01000122199999999, 0.01000107, 0.010001152999999999...</msg>
<status status="PASS" starttime="20201110 08:37:06.815" endtime="20201110 08:37:06.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.843" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:37:06.842" endtime="20201110 08:37:06.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.845" level="INFO">VALUE: 0.018686819</msg>
<status status="PASS" starttime="20201110 08:37:06.844" endtime="20201110 08:37:06.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.839" endtime="20201110 08:37:06.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.852" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:06.850" endtime="20201110 08:37:06.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.854" level="INFO">VALUE: [0.028732917, 0.038734306, 0.048735472, 0.058736597, 0.068737708, 0.078738889, 0.088739986, 0.098741208, 0.108742278, 0.118743431, 0.128744556, 0.138745708, 0.148746875, 0.158748, 0.168749111, 0.178750292, 0.188751389, 0.198752556, 0.208753681, 0.218754847, 0.228755986, 0.238757125, 0.248758236, 0.258759403, 0.268760528, 0.278761694, 0.288762806, 0.298763972, 0.308765083, 0.318766236, 0.328767347, 0.338768528, 0.348769625, 0.358770819, 0.368771889, 0.378773042, 0.388774167, 0.398775319, 0.408776431, 0.418777583, 0.428778694, 0.438779875, 0.448780972, 0.458782139, 0.46878325, 0.478784417, 0.488785528, 0.498786694, 0.508787806, 0.518788972, 0.528790097, 0.538791222, 0.548792347, 0.5587935, 0.568794611, 0.578795792, 0.588796889, 0.598798056, 0.608799167, 0.618800319, 0.628801431, 0.638802597, 0.648803722, 0.658804875, 0.668805986, 0.678807139, 0.68880825, 0.698809431, 0.708810542, 0.718811722, 0.728812819, 0.738813986, 0.748815097, 0.758816236, 0.768817347, 0.778818514, 0.788819625, 0.798820819, 0.808821903, 0.818823069, 0.828824167, 0.838825347, 0.848826444, 0.858827625, 0.868828778, 0.878829903, 0.888831014, 0.898832153, 0.908833278, 0.918834431, 0.928835583, 0.938836708, 0.948837833, 0.958838986, 0.968840097, 0.97884125, 0.988842361, 0.998843542, 1.008844639, 1.018845806] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:06.853" endtime="20201110 08:37:06.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.847" endtime="20201110 08:37:06.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.858" endtime="20201110 08:37:06.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.861" endtime="20201110 08:37:06.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.860" endtime="20201110 08:37:06.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.856" endtime="20201110 08:37:06.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.291" endtime="20201110 08:37:06.882"></status>
</kw>
<msg timestamp="20201110 08:37:06.882" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.891" endtime="20201110 08:37:08.996"></status>
</kw>
<msg timestamp="20201110 08:37:08.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 42171679, 'start-iter': 1, 'wakeups': [42181723, 42191724, 42201724, 4...</msg>
<status status="PASS" starttime="20201110 08:37:06.889" endtime="20201110 08:37:08.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.004" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 42171679, 'start-iter': 1, 'wakeups': [42181723, 42191724, 42201724, 4...</msg>
<status status="PASS" starttime="20201110 08:37:09.000" endtime="20201110 08:37:09.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.007" endtime="20201110 08:37:09.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.887" endtime="20201110 08:37:09.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.884" endtime="20201110 08:37:09.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.018" level="INFO">${RESULT} = {'wakeups': [42181723, 42191724, 42201724, 42211724, 42221724, 42231724, 42241724, 42251724, 42261724, 42271724, 42281724, 42291724, 42301724, 42311724, 42321724, 42331724, 42341724, 42351724, 4236172...</msg>
<status status="PASS" starttime="20201110 08:37:09.014" endtime="20201110 08:37:09.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.027" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:09.025" endtime="20201110 08:37:09.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.032" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:09.030" endtime="20201110 08:37:09.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.020" endtime="20201110 08:37:09.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.043" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:09.041" endtime="20201110 08:37:09.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.047" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:09.045" endtime="20201110 08:37:09.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.035" endtime="20201110 08:37:09.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.064" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:37:09.056" endtime="20201110 08:37:09.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.066" level="INFO">VALUE: 42171679</msg>
<status status="PASS" starttime="20201110 08:37:09.065" endtime="20201110 08:37:09.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.050" endtime="20201110 08:37:09.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.071" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:09.070" endtime="20201110 08:37:09.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.074" level="INFO">VALUE: [42181723, 42191724, 42201724, 42211724, 42221724, 42231724, 42241724, 42251724, 42261724, 42271724, 42281724, 42291724, 42301724, 42311724, 42321724, 42331724, 42341724, 42351724, 42361724, 42371724, 42381724, 42391724, 42401724, 42411724, 42421724, 42431724, 42441724, 42451724, 42461724, 42471724, 42481724, 42491724, 42501724, 42511724, 42521724, 42531724, 42541724, 42551724, 42561724, 42571724, 42581724, 42591724, 42601724, 42611724, 42621724, 42631724, 42641724, 42651724, 42661724, 42671724, 42681724, 42691724, 42701724, 42711724, 42721724, 42731724, 42741724, 42751724, 42761724, 42771724, 42781724, 42791724, 42801724, 42811724, 42821724, 42831724, 42841724, 42851724, 42861724, 42871724, 42881724, 42891724, 42901724, 42911724, 42921724, 42931724, 42941724, 42951724, 42961724, 42971724, 42981724, 42991724, 43001724, 43011724, 43021724, 43031724, 43041724, 43051724, 43061724, 43071724, 43081724, 43091724, 43101724, 43111724, 43121724, 43131724, 43141724, 43151724, 43161724, 43171724]</msg>
<status status="PASS" starttime="20201110 08:37:09.072" endtime="20201110 08:37:09.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.068" endtime="20201110 08:37:09.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.083" endtime="20201110 08:37:09.373"></status>
</kw>
<msg timestamp="20201110 08:37:09.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019402125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029448264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.081" endtime="20201110 08:37:09.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019402125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029448264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.377" endtime="20201110 08:37:09.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.385" endtime="20201110 08:37:09.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.078" endtime="20201110 08:37:09.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.075" endtime="20201110 08:37:09.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.412" level="INFO">${RESULT} = {'source_diff': [0, 0.010046138999999999, 0.010001403000000002, 0.010001111, 0.010001152999999999, 0.010001138000000007, 0.010001152999999999, 0.010001125, 0.010001152999999999, 0.010001110999999993, ...</msg>
<status status="PASS" starttime="20201110 08:37:09.389" endtime="20201110 08:37:09.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.417" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:37:09.416" endtime="20201110 08:37:09.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.419" level="INFO">VALUE: 0.019402125</msg>
<status status="PASS" starttime="20201110 08:37:09.418" endtime="20201110 08:37:09.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.413" endtime="20201110 08:37:09.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.426" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:09.424" endtime="20201110 08:37:09.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.428" level="INFO">VALUE: [0.029448264, 0.039449667, 0.049450778, 0.059451931, 0.069453069, 0.079454222, 0.089455347, 0.0994565, 0.109457611, 0.119458792, 0.129459931, 0.139461083, 0.149462222, 0.159463347, 0.169464472, 0.179465625, 0.189466736, 0.199467889, 0.209469014, 0.219470167, 0.229471292, 0.239472431, 0.249473597, 0.259474792, 0.269475889, 0.279476986, 0.289478097, 0.29947925, 0.309480375, 0.319481514, 0.329482639, 0.339483792, 0.349484917, 0.359486069, 0.369487181, 0.379488403, 0.389489458, 0.399490625, 0.409491736, 0.419492875, 0.429493986, 0.439495167, 0.449496264, 0.459497431, 0.469498542, 0.479499694, 0.489500806, 0.499501986, 0.509503097, 0.519504264, 0.529505403, 0.539506514, 0.549507625, 0.559508792, 0.569509903, 0.579511069, 0.589512181, 0.599513333, 0.609514444, 0.619515625, 0.629516722, 0.639517889, 0.649519042, 0.659520194, 0.669521264, 0.679522431, 0.689523597, 0.699524708, 0.709525833, 0.719526972, 0.729528083, 0.739529264, 0.749530361, 0.759531528, 0.769532639, 0.779533806, 0.789534917, 0.799536069, 0.809537222, 0.819538347, 0.829539458, 0.839540653, 0.849541722, 0.859542889, 0.869544, 0.879545181, 0.889546278, 0.899547444, 0.909548556, 0.919549708, 0.929550889, 0.939552, 0.949553097, 0.959554319, 0.969555417, 0.979556542, 0.989557708, 0.999558806, 1.009559917, 1.019561097] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:09.427" endtime="20201110 08:37:09.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.421" endtime="20201110 08:37:09.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.431" endtime="20201110 08:37:09.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.435" endtime="20201110 08:37:09.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.433" endtime="20201110 08:37:09.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.430" endtime="20201110 08:37:09.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.883" endtime="20201110 08:37:09.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.682" endtime="20201110 08:37:09.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.681" endtime="20201110 08:37:09.456"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:09.459" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.469" endtime="20201110 08:37:11.573"></status>
</kw>
<msg timestamp="20201110 08:37:11.574" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44748756, 'start-iter': 1, 'wakeups': [44758814, 44768813, 44778813, 4...</msg>
<status status="PASS" starttime="20201110 08:37:09.467" endtime="20201110 08:37:11.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.580" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44748756, 'start-iter': 1, 'wakeups': [44758814, 44768813, 44778813, 4...</msg>
<status status="PASS" starttime="20201110 08:37:11.576" endtime="20201110 08:37:11.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.583" endtime="20201110 08:37:11.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.464" endtime="20201110 08:37:11.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.461" endtime="20201110 08:37:11.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.595" level="INFO">${RESULT} = {'wakeups': [44758814, 44768813, 44778813, 44788813, 44798813, 44808813, 44818813, 44828813, 44838813, 44848813, 44858813, 44868813, 44878813, 44888813, 44898813, 44908813, 44918813, 44928813, 4493881...</msg>
<status status="PASS" starttime="20201110 08:37:11.590" endtime="20201110 08:37:11.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.604" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:11.601" endtime="20201110 08:37:11.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.608" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:11.606" endtime="20201110 08:37:11.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.596" endtime="20201110 08:37:11.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.619" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:11.617" endtime="20201110 08:37:11.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.624" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:11.622" endtime="20201110 08:37:11.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.612" endtime="20201110 08:37:11.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.635" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:37:11.632" endtime="20201110 08:37:11.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.639" level="INFO">VALUE: 44748756</msg>
<status status="PASS" starttime="20201110 08:37:11.637" endtime="20201110 08:37:11.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.627" endtime="20201110 08:37:11.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.650" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:11.648" endtime="20201110 08:37:11.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.656" level="INFO">VALUE: [44758814, 44768813, 44778813, 44788813, 44798813, 44808813, 44818813, 44828813, 44838813, 44848813, 44858813, 44868813, 44878813, 44888813, 44898813, 44908813, 44918813, 44928813, 44938813, 44948813, 44958813, 44968813, 44978813, 44988813, 44998813, 45008813, 45018813, 45028813, 45038813, 45048813, 45058813, 45068813, 45078813, 45088813, 45098813, 45108813, 45118813, 45128813, 45138813, 45148813, 45158813, 45168813, 45178813, 45188813, 45198813, 45208813, 45218813, 45228813, 45238813, 45248813, 45258813, 45268813, 45278813, 45288813, 45298813, 45308813, 45318813, 45328813, 45338813, 45348813, 45358813, 45368813, 45378813, 45388813, 45398813, 45408813, 45418813, 45428813, 45438813, 45448813, 45458813, 45468813, 45478813, 45488813, 45498813, 45508813, 45518813, 45528813, 45538813, 45548813, 45558813, 45568813, 45578813, 45588813, 45598813, 45608813, 45618813, 45628813, 45638813, 45648813, 45658813, 45668813, 45678813, 45688813, 45698813, 45708813, 45718813, 45728813, 45738813, 45748813]</msg>
<status status="PASS" starttime="20201110 08:37:11.652" endtime="20201110 08:37:11.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.642" endtime="20201110 08:37:11.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.672" endtime="20201110 08:37:11.970"></status>
</kw>
<msg timestamp="20201110 08:37:11.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022638569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032697681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.669" endtime="20201110 08:37:11.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022638569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032697681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.974" endtime="20201110 08:37:11.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.981" endtime="20201110 08:37:11.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.663" endtime="20201110 08:37:11.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.659" endtime="20201110 08:37:11.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.009" level="INFO">${RESULT} = {'source_diff': [0, 0.010059111999999999, 0.010000888, 0.010001112, 0.010001166000000006, 0.01000119499999999, 0.010001097, 0.010001111000000007, 0.010001166999999991, 0.010001111000000007, 0.01000117...</msg>
<status status="PASS" starttime="20201110 08:37:11.985" endtime="20201110 08:37:12.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.014" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:37:12.013" endtime="20201110 08:37:12.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.016" level="INFO">VALUE: 0.022638569</msg>
<status status="PASS" starttime="20201110 08:37:12.015" endtime="20201110 08:37:12.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.010" endtime="20201110 08:37:12.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.022" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:12.021" endtime="20201110 08:37:12.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.024" level="INFO">VALUE: [0.032697681, 0.042698569, 0.052699681, 0.062700847, 0.072702042, 0.082703139, 0.09270425, 0.102705417, 0.112706528, 0.122707708, 0.132708806, 0.142709972, 0.152711097, 0.162712264, 0.172713375, 0.182714597, 0.192715681, 0.202716819, 0.212717972, 0.222719097, 0.232720222, 0.242721389, 0.252722514, 0.262723667, 0.272724847, 0.282725944, 0.292727069, 0.302728292, 0.312729333, 0.322730542, 0.332731597, 0.342732792, 0.352733875, 0.362735069, 0.372736153, 0.382737306, 0.392738431, 0.402739569, 0.412740681, 0.422741847, 0.432742958, 0.442744125, 0.452745222, 0.462746389, 0.4727475, 0.482748653, 0.492749764, 0.502750931, 0.512752042, 0.522753222, 0.532754319, 0.542755486, 0.552756597, 0.562757792, 0.572758861, 0.582760014, 0.592761139, 0.602762306, 0.612763403, 0.622764569, 0.632765694, 0.642766847, 0.652768, 0.662769111, 0.672770236, 0.682771389, 0.692772514, 0.702773681, 0.712774764, 0.722775931, 0.732777056, 0.742778222, 0.752779333, 0.762780542, 0.772781611, 0.782782778, 0.792783861, 0.802785042, 0.812786194, 0.822787292, 0.832788403, 0.842789569, 0.852790681, 0.862791833, 0.872792958, 0.882794111, 0.892795264, 0.902796403, 0.912797514, 0.922798667, 0.932799778, 0.942800931, 0.952802042, 0.962803222, 0.972804333, 0.982805472, 0.992806611, 1.002807764, 1.012808917, 1.022810028] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:12.023" endtime="20201110 08:37:12.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.018" endtime="20201110 08:37:12.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.027" endtime="20201110 08:37:12.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.031" endtime="20201110 08:37:12.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.029" endtime="20201110 08:37:12.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.026" endtime="20201110 08:37:12.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.460" endtime="20201110 08:37:12.052"></status>
</kw>
<msg timestamp="20201110 08:37:12.052" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.061" endtime="20201110 08:37:14.165"></status>
</kw>
<msg timestamp="20201110 08:37:14.166" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47341124, 'start-iter': 1, 'wakeups': [47351183, 47361181, 47371181, 4...</msg>
<status status="PASS" starttime="20201110 08:37:12.059" endtime="20201110 08:37:14.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.172" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47341124, 'start-iter': 1, 'wakeups': [47351183, 47361181, 47371181, 4...</msg>
<status status="PASS" starttime="20201110 08:37:14.169" endtime="20201110 08:37:14.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.175" endtime="20201110 08:37:14.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.057" endtime="20201110 08:37:14.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.055" endtime="20201110 08:37:14.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.189" level="INFO">${RESULT} = {'wakeups': [47351183, 47361181, 47371181, 47381181, 47391181, 47401181, 47411181, 47421181, 47431181, 47441181, 47451181, 47461181, 47471181, 47481181, 47491181, 47501181, 47511181, 47521181, 4753118...</msg>
<status status="PASS" starttime="20201110 08:37:14.182" endtime="20201110 08:37:14.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.198" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:14.196" endtime="20201110 08:37:14.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.202" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:14.200" endtime="20201110 08:37:14.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.191" endtime="20201110 08:37:14.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.213" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:14.211" endtime="20201110 08:37:14.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.218" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:14.216" endtime="20201110 08:37:14.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.206" endtime="20201110 08:37:14.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.229" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:37:14.227" endtime="20201110 08:37:14.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.233" level="INFO">VALUE: 47341124</msg>
<status status="PASS" starttime="20201110 08:37:14.231" endtime="20201110 08:37:14.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.221" endtime="20201110 08:37:14.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.244" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:14.242" endtime="20201110 08:37:14.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.249" level="INFO">VALUE: [47351183, 47361181, 47371181, 47381181, 47391181, 47401181, 47411181, 47421181, 47431181, 47441181, 47451181, 47461181, 47471181, 47481181, 47491181, 47501181, 47511181, 47521181, 47531181, 47541181, 47551181, 47561181, 47571181, 47581181, 47591181, 47601181, 47611181, 47621181, 47631181, 47641181, 47651181, 47661181, 47671181, 47681181, 47691181, 47701181, 47711181, 47721181, 47731181, 47741181, 47751181, 47761181, 47771181, 47781181, 47791181, 47801181, 47811181, 47821181, 47831181, 47841181, 47851181, 47861181, 47871181, 47881181, 47891181, 47901181, 47911181, 47921181, 47931181, 47941181, 47951181, 47961181, 47971181, 47981181, 47991181, 48001181, 48011181, 48021181, 48031181, 48041181, 48051181, 48061181, 48071181, 48081181, 48091181, 48101181, 48111181, 48121181, 48131181, 48141181, 48151181, 48161181, 48171181, 48181181, 48191181, 48201181, 48211181, 48221181, 48231181, 48241181, 48251181, 48261181, 48271181, 48281181, 48291181, 48301181, 48311181, 48321181, 48331181, 48341181]</msg>
<status status="PASS" starttime="20201110 08:37:14.247" endtime="20201110 08:37:14.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.237" endtime="20201110 08:37:14.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.269" endtime="20201110 08:37:14.559"></status>
</kw>
<msg timestamp="20201110 08:37:14.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019193764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029253153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.267" endtime="20201110 08:37:14.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019193764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029253153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.563" endtime="20201110 08:37:14.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.571" endtime="20201110 08:37:14.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.263" endtime="20201110 08:37:14.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.252" endtime="20201110 08:37:14.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.599" level="INFO">${RESULT} = {'source_diff': [0, 0.010059389000000002, 0.009999958, 0.010001125, 0.010001166999999998, 0.010001125, 0.010001166000000006, 0.010001098, 0.010001165999999992, 0.010001111000000007, 0.0100011809999999...</msg>
<status status="PASS" starttime="20201110 08:37:14.575" endtime="20201110 08:37:14.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.604" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:37:14.603" endtime="20201110 08:37:14.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.606" level="INFO">VALUE: 0.019193764</msg>
<status status="PASS" starttime="20201110 08:37:14.605" endtime="20201110 08:37:14.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.600" endtime="20201110 08:37:14.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.611" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:14.610" endtime="20201110 08:37:14.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.614" level="INFO">VALUE: [0.029253153, 0.039253111, 0.049254236, 0.059255403, 0.069256528, 0.079257694, 0.089258792, 0.099259958, 0.109261069, 0.11926225, 0.129263347, 0.139264542, 0.149265625, 0.159266792, 0.169267917, 0.179269083, 0.189270194, 0.199271361, 0.209272486, 0.219273639, 0.229274764, 0.239275931, 0.249277042, 0.259278222, 0.269279389, 0.279280528, 0.289281583, 0.299282792, 0.309283861, 0.319285042, 0.329286181, 0.339287292, 0.349288417, 0.359289569, 0.369290681, 0.379291903, 0.389292972, 0.399294125, 0.409295236, 0.419296389, 0.429297514, 0.439298681, 0.449299778, 0.459300944, 0.469302069, 0.479303222, 0.489304333, 0.4993055, 0.509306611, 0.519307792, 0.529308903, 0.539310042, 0.549311167, 0.559312319, 0.569313444, 0.579314611, 0.589315722, 0.599316889, 0.609318, 0.619319167, 0.629320264, 0.639321458, 0.649322542, 0.659323708, 0.669324819, 0.679325986, 0.689327097, 0.69932825, 0.709329389, 0.719330542, 0.729331653, 0.739332806, 0.749333917, 0.759335097, 0.769336194, 0.779337361, 0.789338472, 0.799339653, 0.80934075, 0.819341917, 0.829343028, 0.839344194, 0.849345319, 0.859346458, 0.869347597, 0.879348736, 0.889349861, 0.899351028, 0.909352125, 0.919353292, 0.929354417, 0.939355583, 0.949356694, 0.959357847, 0.969358958, 0.979360139, 0.98936125, 0.999362417, 1.009363514, 1.019364708] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:14.613" endtime="20201110 08:37:14.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.607" endtime="20201110 08:37:14.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.617" endtime="20201110 08:37:14.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.620" endtime="20201110 08:37:14.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.619" endtime="20201110 08:37:14.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.615" endtime="20201110 08:37:14.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.053" endtime="20201110 08:37:14.641"></status>
</kw>
<msg timestamp="20201110 08:37:14.642" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.650" endtime="20201110 08:37:16.754"></status>
</kw>
<msg timestamp="20201110 08:37:16.755" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49930184, 'start-iter': 1, 'wakeups': [49940243, 49950241, 49960241, 4...</msg>
<status status="PASS" starttime="20201110 08:37:14.648" endtime="20201110 08:37:16.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.762" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49930184, 'start-iter': 1, 'wakeups': [49940243, 49950241, 49960241, 4...</msg>
<status status="PASS" starttime="20201110 08:37:16.758" endtime="20201110 08:37:16.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.766" endtime="20201110 08:37:16.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.646" endtime="20201110 08:37:16.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.644" endtime="20201110 08:37:16.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.779" level="INFO">${RESULT} = {'wakeups': [49940243, 49950241, 49960241, 49970241, 49980241, 49990241, 50000241, 50010241, 50020241, 50030241, 50040241, 50050241, 50060241, 50070241, 50080241, 50090241, 50100241, 50110241, 5012024...</msg>
<status status="PASS" starttime="20201110 08:37:16.774" endtime="20201110 08:37:16.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.788" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:16.786" endtime="20201110 08:37:16.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.792" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:16.790" endtime="20201110 08:37:16.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.781" endtime="20201110 08:37:16.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.806" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:16.801" endtime="20201110 08:37:16.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.811" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:16.808" endtime="20201110 08:37:16.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.796" endtime="20201110 08:37:16.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.822" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:37:16.820" endtime="20201110 08:37:16.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.824" level="INFO">VALUE: 49930184</msg>
<status status="PASS" starttime="20201110 08:37:16.823" endtime="20201110 08:37:16.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.814" endtime="20201110 08:37:16.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.830" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:16.829" endtime="20201110 08:37:16.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.832" level="INFO">VALUE: [49940243, 49950241, 49960241, 49970241, 49980241, 49990241, 50000241, 50010241, 50020241, 50030241, 50040241, 50050241, 50060241, 50070241, 50080241, 50090241, 50100241, 50110241, 50120241, 50130241, 50140241, 50150241, 50160241, 50170241, 50180241, 50190241, 50200241, 50210241, 50220241, 50230241, 50240241, 50250241, 50260241, 50270241, 50280241, 50290241, 50300241, 50310241, 50320241, 50330241, 50340241, 50350241, 50360241, 50370241, 50380241, 50390241, 50400241, 50410241, 50420241, 50430241, 50440241, 50450241, 50460241, 50470241, 50480241, 50490241, 50500241, 50510241, 50520241, 50530241, 50540241, 50550241, 50560241, 50570241, 50580241, 50590241, 50600241, 50610241, 50620241, 50630241, 50640241, 50650241, 50660241, 50670241, 50680241, 50690241, 50700241, 50710241, 50720241, 50730241, 50740241, 50750241, 50760241, 50770241, 50780241, 50790241, 50800241, 50810241, 50820241, 50830241, 50840241, 50850241, 50860241, 50870241, 50880241, 50890241, 50900241, 50910241, 50920241, 50930241]</msg>
<status status="PASS" starttime="20201110 08:37:16.831" endtime="20201110 08:37:16.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.826" endtime="20201110 08:37:16.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.840" endtime="20201110 08:37:17.132"></status>
</kw>
<msg timestamp="20201110 08:37:17.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018787903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028847403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.839" endtime="20201110 08:37:17.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018787903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028847403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.136" endtime="20201110 08:37:17.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.145" endtime="20201110 08:37:17.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.836" endtime="20201110 08:37:17.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.834" endtime="20201110 08:37:17.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.172" level="INFO">${RESULT} = {'source_diff': [0, 0.010059499999999999, 0.009999972000000003, 0.010001125, 0.010001152999999999, 0.010001110999999993, 0.010001179999999998, 0.010001098, 0.010001166000000006, 0.010001125, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:37:17.148" endtime="20201110 08:37:17.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.177" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:37:17.176" endtime="20201110 08:37:17.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.179" level="INFO">VALUE: 0.018787903</msg>
<status status="PASS" starttime="20201110 08:37:17.178" endtime="20201110 08:37:17.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.173" endtime="20201110 08:37:17.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.185" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:17.183" endtime="20201110 08:37:17.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.187" level="INFO">VALUE: [0.028847403, 0.038847375, 0.0488485, 0.058849653, 0.068850764, 0.078851944, 0.088853042, 0.098854208, 0.108855333, 0.118856514, 0.128857611, 0.138858792, 0.148859903, 0.158861056, 0.168862167, 0.178863333, 0.188864472, 0.198865625, 0.208866736, 0.218867903, 0.228869014, 0.238870181, 0.248871306, 0.258872472, 0.268873583, 0.27887475, 0.288875889, 0.298877042, 0.308878153, 0.318879319, 0.328880444, 0.338881611, 0.348882722, 0.358883903, 0.368885, 0.378886236, 0.388887264, 0.398888431, 0.408889542, 0.418890694, 0.428891806, 0.438892972, 0.448894097, 0.458895236, 0.468896347, 0.478897514, 0.488898625, 0.498899792, 0.508900889, 0.518902069, 0.528903167, 0.538904319, 0.548905431, 0.558906681, 0.568907708, 0.578908861, 0.588909986, 0.598911139, 0.60891225, 0.618913431, 0.628914528, 0.638915681, 0.648916792, 0.658917958, 0.668919069, 0.67892025, 0.688921361, 0.6989225, 0.708923625, 0.718924778, 0.728925917, 0.738927042, 0.748928167, 0.758929319, 0.768930486, 0.778931597, 0.788932708, 0.798933861, 0.808935, 0.818936139, 0.82893725, 0.838938486, 0.848939528, 0.858940681, 0.868941792, 0.878943014, 0.888944069, 0.898945236, 0.908946347, 0.9189475, 0.928948625, 0.938949778, 0.948950889, 0.958952056, 0.968953167, 0.978954319, 0.988955444, 0.998956653, 1.008957708, 1.018958861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:17.186" endtime="20201110 08:37:17.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.180" endtime="20201110 08:37:17.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.190" endtime="20201110 08:37:17.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.194" endtime="20201110 08:37:17.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.192" endtime="20201110 08:37:17.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.188" endtime="20201110 08:37:17.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.642" endtime="20201110 08:37:17.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.458" endtime="20201110 08:37:17.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.457" endtime="20201110 08:37:17.215"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:17.218" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.226" endtime="20201110 08:37:19.331"></status>
</kw>
<msg timestamp="20201110 08:37:19.332" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52506242, 'start-iter': 1, 'wakeups': [52516313, 52526313, 52536314, 5...</msg>
<status status="PASS" starttime="20201110 08:37:17.224" endtime="20201110 08:37:19.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.338" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52506242, 'start-iter': 1, 'wakeups': [52516313, 52526313, 52536314, 5...</msg>
<status status="PASS" starttime="20201110 08:37:19.334" endtime="20201110 08:37:19.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.341" endtime="20201110 08:37:19.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.222" endtime="20201110 08:37:19.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.220" endtime="20201110 08:37:19.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.359" level="INFO">${RESULT} = {'wakeups': [52516313, 52526313, 52536314, 52546314, 52556314, 52566314, 52576314, 52586314, 52596314, 52606314, 52616314, 52626314, 52636314, 52646314, 52656314, 52666314, 52676314, 52686314, 5269631...</msg>
<status status="PASS" starttime="20201110 08:37:19.354" endtime="20201110 08:37:19.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.368" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:19.366" endtime="20201110 08:37:19.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.372" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:19.370" endtime="20201110 08:37:19.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.361" endtime="20201110 08:37:19.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.384" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:19.382" endtime="20201110 08:37:19.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.389" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:19.387" endtime="20201110 08:37:19.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.376" endtime="20201110 08:37:19.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.402" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:37:19.397" endtime="20201110 08:37:19.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.407" level="INFO">VALUE: 52506242</msg>
<status status="PASS" starttime="20201110 08:37:19.405" endtime="20201110 08:37:19.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.392" endtime="20201110 08:37:19.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.416" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:19.415" endtime="20201110 08:37:19.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.419" level="INFO">VALUE: [52516313, 52526313, 52536314, 52546314, 52556314, 52566314, 52576314, 52586314, 52596314, 52606314, 52616314, 52626314, 52636314, 52646314, 52656314, 52666314, 52676314, 52686314, 52696314, 52706314, 52716314, 52726314, 52736314, 52746314, 52756314, 52766314, 52776314, 52786314, 52796314, 52806314, 52816314, 52826314, 52836314, 52846314, 52856314, 52866314, 52876314, 52886314, 52896314, 52906314, 52916314, 52926314, 52936314, 52946314, 52956314, 52966314, 52976314, 52986314, 52996314, 53006314, 53016314, 53026314, 53036314, 53046314, 53056314, 53066314, 53076314, 53086314, 53096314, 53106314, 53116314, 53126314, 53136314, 53146314, 53156314, 53166314, 53176314, 53186314, 53196314, 53206314, 53216314, 53226314, 53236314, 53246314, 53256314, 53266314, 53276314, 53286314, 53296314, 53306314, 53316314, 53326314, 53336314, 53346314, 53356314, 53366314, 53376314, 53386314, 53396314, 53406314, 53416314, 53426314, 53436314, 53446314, 53456314, 53466314, 53476314, 53486314, 53496314, 53506314]</msg>
<status status="PASS" starttime="20201110 08:37:19.417" endtime="20201110 08:37:19.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.410" endtime="20201110 08:37:19.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.427" endtime="20201110 08:37:19.719"></status>
</kw>
<msg timestamp="20201110 08:37:19.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031718042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.425" endtime="20201110 08:37:19.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031718042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.723" endtime="20201110 08:37:19.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.731" endtime="20201110 08:37:19.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.423" endtime="20201110 08:37:19.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.420" endtime="20201110 08:37:19.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.759" level="INFO">${RESULT} = {'source_diff': [0, 0.010072917, 0.010001193999999998, 0.010002097000000001, 0.010001180999999998, 0.010001097000000007, 0.010001166999999991, 0.010001111000000007, 0.010001179999999998, 0.01000111199...</msg>
<status status="PASS" starttime="20201110 08:37:19.735" endtime="20201110 08:37:19.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.764" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:37:19.763" endtime="20201110 08:37:19.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.766" level="INFO">VALUE: 0.021645125</msg>
<status status="PASS" starttime="20201110 08:37:19.765" endtime="20201110 08:37:19.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.760" endtime="20201110 08:37:19.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.772" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:19.771" endtime="20201110 08:37:19.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.776" level="INFO">VALUE: [0.031718042, 0.041719236, 0.051721333, 0.061722514, 0.071723611, 0.081724778, 0.091725889, 0.101727069, 0.111728181, 0.121729361, 0.131730486, 0.141731653, 0.151732736, 0.161733972, 0.171735014, 0.181736181, 0.191737361, 0.201738486, 0.211739583, 0.22174075, 0.231741889, 0.241743069, 0.251744167, 0.261745319, 0.271746514, 0.281747611, 0.291748722, 0.301749889, 0.311751, 0.321752167, 0.331753306, 0.341754458, 0.351755583, 0.361756736, 0.371757847, 0.381759083, 0.391760139, 0.401761278, 0.411762431, 0.421763569, 0.431764667, 0.441765833, 0.451766944, 0.461768097, 0.471769208, 0.481770403, 0.4917715, 0.501772653, 0.511773778, 0.521774931, 0.531776042, 0.541777208, 0.551778319, 0.561779486, 0.571780639, 0.581781736, 0.591782875, 0.601784014, 0.611785125, 0.621786292, 0.631787417, 0.641788569, 0.651789736, 0.661790847, 0.671791972, 0.681793125, 0.69179425, 0.701795389, 0.711796514, 0.721797694, 0.731798778, 0.741799958, 0.751801056, 0.761802222, 0.771803347, 0.781804514, 0.791805611, 0.801806792, 0.811807889, 0.821809042, 0.831810153, 0.841811319, 0.851812458, 0.861813611, 0.871814736, 0.881815875, 0.891817, 0.901818167, 0.911819278, 0.921820417, 0.931821542, 0.941822694, 0.951823806, 0.961824972, 0.971826097, 0.98182725, 0.991828444, 1.001829528, 1.011830639, 1.021831833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:19.775" endtime="20201110 08:37:19.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.767" endtime="20201110 08:37:19.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.780" endtime="20201110 08:37:19.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.783" endtime="20201110 08:37:19.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.782" endtime="20201110 08:37:19.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.778" endtime="20201110 08:37:19.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.218" endtime="20201110 08:37:19.804"></status>
</kw>
<msg timestamp="20201110 08:37:19.804" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.813" endtime="20201110 08:37:21.917"></status>
</kw>
<msg timestamp="20201110 08:37:21.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55092867, 'start-iter': 1, 'wakeups': [55102939, 55112938, 55122939, 5...</msg>
<status status="PASS" starttime="20201110 08:37:19.811" endtime="20201110 08:37:21.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.925" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55092867, 'start-iter': 1, 'wakeups': [55102939, 55112938, 55122939, 5...</msg>
<status status="PASS" starttime="20201110 08:37:21.921" endtime="20201110 08:37:21.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.928" endtime="20201110 08:37:21.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.809" endtime="20201110 08:37:21.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.807" endtime="20201110 08:37:21.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.940" level="INFO">${RESULT} = {'wakeups': [55102939, 55112938, 55122939, 55132939, 55142939, 55152939, 55162939, 55172939, 55182939, 55192939, 55202939, 55212939, 55222939, 55232939, 55242939, 55252939, 55262939, 55272939, 5528293...</msg>
<status status="PASS" starttime="20201110 08:37:21.936" endtime="20201110 08:37:21.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.950" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:21.947" endtime="20201110 08:37:21.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.956" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:21.953" endtime="20201110 08:37:21.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.942" endtime="20201110 08:37:21.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.967" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:21.965" endtime="20201110 08:37:21.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.972" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:21.969" endtime="20201110 08:37:21.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.959" endtime="20201110 08:37:21.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.979" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:37:21.978" endtime="20201110 08:37:21.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.982" level="INFO">VALUE: 55092867</msg>
<status status="PASS" starttime="20201110 08:37:21.980" endtime="20201110 08:37:21.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.975" endtime="20201110 08:37:21.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.987" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:21.986" endtime="20201110 08:37:21.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.989" level="INFO">VALUE: [55102939, 55112938, 55122939, 55132939, 55142939, 55152939, 55162939, 55172939, 55182939, 55192939, 55202939, 55212939, 55222939, 55232939, 55242939, 55252939, 55262939, 55272939, 55282939, 55292939, 55302939, 55312939, 55322939, 55332939, 55342939, 55352939, 55362939, 55372939, 55382939, 55392939, 55402939, 55412939, 55422939, 55432939, 55442939, 55452939, 55462939, 55472939, 55482939, 55492939, 55502939, 55512939, 55522939, 55532939, 55542939, 55552939, 55562939, 55572939, 55582939, 55592939, 55602939, 55612939, 55622939, 55632939, 55642939, 55652939, 55662939, 55672939, 55682939, 55692939, 55702939, 55712939, 55722939, 55732939, 55742939, 55752939, 55762939, 55772939, 55782939, 55792939, 55802939, 55812939, 55822939, 55832939, 55842939, 55852939, 55862939, 55872939, 55882939, 55892939, 55902939, 55912939, 55922939, 55932939, 55942939, 55952939, 55962939, 55972939, 55982939, 55992939, 56002939, 56012939, 56022939, 56032939, 56042939, 56052939, 56062939, 56072939, 56082939, 56092939]</msg>
<status status="PASS" starttime="20201110 08:37:21.988" endtime="20201110 08:37:21.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.983" endtime="20201110 08:37:21.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.998" endtime="20201110 08:37:22.290"></status>
</kw>
<msg timestamp="20201110 08:37:22.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018774306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028847542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.996" endtime="20201110 08:37:22.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018774306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028847542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.294" endtime="20201110 08:37:22.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.302" endtime="20201110 08:37:22.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.992" endtime="20201110 08:37:22.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.991" endtime="20201110 08:37:22.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.329" level="INFO">${RESULT} = {'source_diff': [0, 0.010073236, 0.010000180000000001, 0.010002125, 0.010001166999999998, 0.010001096999999994, 0.010001181000000012, 0.010001097, 0.010001179999999998, 0.010001125, 0.0100011529999999...</msg>
<status status="PASS" starttime="20201110 08:37:22.305" endtime="20201110 08:37:22.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.334" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:37:22.332" endtime="20201110 08:37:22.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.336" level="INFO">VALUE: 0.018774306</msg>
<status status="PASS" starttime="20201110 08:37:22.335" endtime="20201110 08:37:22.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.330" endtime="20201110 08:37:22.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.342" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:22.341" endtime="20201110 08:37:22.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.344" level="INFO">VALUE: [0.028847542, 0.038847722, 0.048849847, 0.058851014, 0.068852111, 0.078853292, 0.088854389, 0.098855569, 0.108856694, 0.118857847, 0.128858958, 0.138860125, 0.148861236, 0.158862403, 0.168863514, 0.178864681, 0.188865875, 0.198866972, 0.208868083, 0.21886925, 0.228870375, 0.238871528, 0.248872708, 0.258873833, 0.268874958, 0.278876167, 0.288877264, 0.298878389, 0.3088795, 0.318880667, 0.328881792, 0.338882958, 0.348884069, 0.358885222, 0.368886375, 0.378887514, 0.388888625, 0.398889792, 0.408890917, 0.418892069, 0.428893194, 0.438894389, 0.448895472, 0.458896639, 0.468897764, 0.478898931, 0.488900056, 0.498901236, 0.508902319, 0.5189035, 0.528904597, 0.53890575, 0.548906875, 0.558908042, 0.568909139, 0.578910292, 0.588911403, 0.598912556, 0.608913681, 0.618914847, 0.628915958, 0.638917097, 0.648918208, 0.658919375, 0.668920486, 0.678921653, 0.68892275, 0.698923917, 0.708925042, 0.718926181, 0.728927292, 0.738928458, 0.748929569, 0.758930722, 0.768931833, 0.778933, 0.788934111, 0.798935278, 0.808936375, 0.818937542, 0.828938653, 0.838939833, 0.848940944, 0.858942083, 0.868943194, 0.878944361, 0.888945514, 0.898946625, 0.90894775, 0.918948903, 0.928950028, 0.938951181, 0.948952292, 0.958953486, 0.968954556, 0.978955722, 0.988956847, 0.998958, 1.008959125, 1.018960264] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:22.343" endtime="20201110 08:37:22.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.338" endtime="20201110 08:37:22.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.347" endtime="20201110 08:37:22.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.351" endtime="20201110 08:37:22.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.349" endtime="20201110 08:37:22.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.346" endtime="20201110 08:37:22.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.805" endtime="20201110 08:37:22.372"></status>
</kw>
<msg timestamp="20201110 08:37:22.372" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.381" endtime="20201110 08:37:24.485"></status>
</kw>
<msg timestamp="20201110 08:37:24.487" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57661262, 'start-iter': 1, 'wakeups': [57671333, 57681333, 57691334, 5...</msg>
<status status="PASS" starttime="20201110 08:37:22.380" endtime="20201110 08:37:24.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.493" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57661262, 'start-iter': 1, 'wakeups': [57671333, 57681333, 57691334, 5...</msg>
<status status="PASS" starttime="20201110 08:37:24.489" endtime="20201110 08:37:24.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.495" endtime="20201110 08:37:24.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.377" endtime="20201110 08:37:24.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.374" endtime="20201110 08:37:24.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.507" level="INFO">${RESULT} = {'wakeups': [57671333, 57681333, 57691334, 57701334, 57711334, 57721334, 57731334, 57741334, 57751334, 57761334, 57771334, 57781334, 57791334, 57801334, 57811334, 57821334, 57831334, 57841334, 5785133...</msg>
<status status="PASS" starttime="20201110 08:37:24.503" endtime="20201110 08:37:24.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.516" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:24.514" endtime="20201110 08:37:24.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.521" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:24.519" endtime="20201110 08:37:24.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.509" endtime="20201110 08:37:24.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.532" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:24.529" endtime="20201110 08:37:24.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.539" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:24.535" endtime="20201110 08:37:24.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.524" endtime="20201110 08:37:24.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.550" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:37:24.548" endtime="20201110 08:37:24.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.555" level="INFO">VALUE: 57661262</msg>
<status status="PASS" starttime="20201110 08:37:24.553" endtime="20201110 08:37:24.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.543" endtime="20201110 08:37:24.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.566" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:24.564" endtime="20201110 08:37:24.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.571" level="INFO">VALUE: [57671333, 57681333, 57691334, 57701334, 57711334, 57721334, 57731334, 57741334, 57751334, 57761334, 57771334, 57781334, 57791334, 57801334, 57811334, 57821334, 57831334, 57841334, 57851334, 57861334, 57871334, 57881334, 57891334, 57901334, 57911334, 57921334, 57931334, 57941334, 57951334, 57961334, 57971334, 57981334, 57991334, 58001334, 58011334, 58021334, 58031334, 58041334, 58051334, 58061334, 58071334, 58081334, 58091334, 58101334, 58111334, 58121334, 58131334, 58141334, 58151334, 58161334, 58171334, 58181334, 58191334, 58201334, 58211334, 58221334, 58231334, 58241334, 58251334, 58261334, 58271334, 58281334, 58291334, 58301334, 58311334, 58321334, 58331334, 58341334, 58351334, 58361334, 58371334, 58381334, 58391334, 58401334, 58411334, 58421334, 58431334, 58441334, 58451334, 58461334, 58471334, 58481334, 58491334, 58501334, 58511334, 58521334, 58531334, 58541334, 58551334, 58561334, 58571334, 58581334, 58591334, 58601334, 58611334, 58621334, 58631334, 58641334, 58651334, 58661334]</msg>
<status status="PASS" starttime="20201110 08:37:24.569" endtime="20201110 08:37:24.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.558" endtime="20201110 08:37:24.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.588" endtime="20201110 08:37:24.894"></status>
</kw>
<msg timestamp="20201110 08:37:24.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029717458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.584" endtime="20201110 08:37:24.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029717458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.898" endtime="20201110 08:37:24.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.906" endtime="20201110 08:37:24.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.578" endtime="20201110 08:37:24.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.574" endtime="20201110 08:37:24.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.934" level="INFO">${RESULT} = {'source_diff': [0, 0.010072929999999997, 0.010001209, 0.010002083000000002, 0.010001166999999998, 0.010001139000000006, 0.010001137999999993, 0.010001112000000006, 0.010001165999999992, 0.01000111100...</msg>
<status status="PASS" starttime="20201110 08:37:24.909" endtime="20201110 08:37:24.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.939" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:37:24.938" endtime="20201110 08:37:24.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.941" level="INFO">VALUE: 0.019644528</msg>
<status status="PASS" starttime="20201110 08:37:24.940" endtime="20201110 08:37:24.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.935" endtime="20201110 08:37:24.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.946" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:24.945" endtime="20201110 08:37:24.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.949" level="INFO">VALUE: [0.029717458, 0.039718667, 0.04972075, 0.059721917, 0.069723056, 0.079724194, 0.089725306, 0.099726472, 0.109727583, 0.11972875, 0.129729861, 0.139731028, 0.149732167, 0.159733333, 0.169734444, 0.179735597, 0.189736708, 0.199737875, 0.209739028, 0.219740153, 0.229741278, 0.239742458, 0.249743556, 0.259744722, 0.269745861, 0.279747028, 0.289748125, 0.299749292, 0.309750472, 0.319751569, 0.329752736, 0.339753861, 0.349754972, 0.359756139, 0.369757278, 0.379758431, 0.389759556, 0.399760708, 0.409761819, 0.419762972, 0.429764083, 0.43976525, 0.449766389, 0.459767514, 0.469768653, 0.479769806, 0.489770889, 0.499772056, 0.509773181, 0.519774361, 0.529775431, 0.539776611, 0.549777708, 0.559778875, 0.569780014, 0.579781139, 0.589782264, 0.599783417, 0.609784528, 0.619785681, 0.629786792, 0.639787958, 0.649789069, 0.659790222, 0.669791333, 0.6797925, 0.689793611, 0.699794792, 0.709795931, 0.719797042, 0.729798153, 0.739799319, 0.749800431, 0.759801597, 0.769802708, 0.779803903, 0.789804972, 0.799806139, 0.809807333, 0.819808417, 0.829809611, 0.839810681, 0.849811792, 0.859812958, 0.869814097, 0.879815236, 0.889816361, 0.8998175, 0.909818667, 0.919819833, 0.929820889, 0.939822056, 0.949823167, 0.959824319, 0.969825431, 0.979826597, 0.989827708, 0.999828875, 1.009829986, 1.019831153] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:24.948" endtime="20201110 08:37:24.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.942" endtime="20201110 08:37:24.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.952" endtime="20201110 08:37:24.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.956" endtime="20201110 08:37:24.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.954" endtime="20201110 08:37:24.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.951" endtime="20201110 08:37:24.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.373" endtime="20201110 08:37:24.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.216" endtime="20201110 08:37:24.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.215" endtime="20201110 08:37:24.977"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:24.980" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.988" endtime="20201110 08:37:27.093"></status>
</kw>
<msg timestamp="20201110 08:37:27.094" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60269427, 'start-iter': 1, 'wakeups': [60279516, 60289514, 60299514, 6...</msg>
<status status="PASS" starttime="20201110 08:37:24.987" endtime="20201110 08:37:27.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.101" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60269427, 'start-iter': 1, 'wakeups': [60279516, 60289514, 60299514, 6...</msg>
<status status="PASS" starttime="20201110 08:37:27.097" endtime="20201110 08:37:27.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.103" endtime="20201110 08:37:27.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.984" endtime="20201110 08:37:27.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.982" endtime="20201110 08:37:27.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.115" level="INFO">${RESULT} = {'wakeups': [60279516, 60289514, 60299514, 60309514, 60319514, 60329514, 60339514, 60349514, 60359514, 60369514, 60379514, 60389514, 60399514, 60409514, 60419514, 60429514, 60439514, 60449514, 6045951...</msg>
<status status="PASS" starttime="20201110 08:37:27.111" endtime="20201110 08:37:27.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.124" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:27.122" endtime="20201110 08:37:27.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.129" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:27.127" endtime="20201110 08:37:27.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.117" endtime="20201110 08:37:27.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.139" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:27.137" endtime="20201110 08:37:27.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.144" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:27.142" endtime="20201110 08:37:27.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.132" endtime="20201110 08:37:27.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.155" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:37:27.153" endtime="20201110 08:37:27.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.159" level="INFO">VALUE: 60269427</msg>
<status status="PASS" starttime="20201110 08:37:27.157" endtime="20201110 08:37:27.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.147" endtime="20201110 08:37:27.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.170" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:27.168" endtime="20201110 08:37:27.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.176" level="INFO">VALUE: [60279516, 60289514, 60299514, 60309514, 60319514, 60329514, 60339514, 60349514, 60359514, 60369514, 60379514, 60389514, 60399514, 60409514, 60419514, 60429514, 60439514, 60449514, 60459514, 60469514, 60479514, 60489514, 60499514, 60509514, 60519514, 60529514, 60539514, 60549514, 60559514, 60569514, 60579514, 60589514, 60599514, 60609514, 60619514, 60629514, 60639514, 60649514, 60659514, 60669514, 60679514, 60689514, 60699514, 60709514, 60719514, 60729514, 60739514, 60749514, 60759514, 60769514, 60779514, 60789514, 60799514, 60809514, 60819514, 60829514, 60839514, 60849514, 60859514, 60869514, 60879514, 60889514, 60899514, 60909514, 60919514, 60929514, 60939514, 60949514, 60959514, 60969514, 60979514, 60989514, 60999514, 61009514, 61019514, 61029514, 61039514, 61049514, 61059514, 61069514, 61079514, 61089514, 61099514, 61109514, 61119514, 61129514, 61139514, 61149514, 61159514, 61169514, 61179514, 61189514, 61199514, 61209514, 61219514, 61229514, 61239514, 61249514, 61259514, 61269514]</msg>
<status status="PASS" starttime="20201110 08:37:27.173" endtime="20201110 08:37:27.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.163" endtime="20201110 08:37:27.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.189" endtime="20201110 08:37:27.480"></status>
</kw>
<msg timestamp="20201110 08:37:27.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032810528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.188" endtime="20201110 08:37:27.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032810528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.484" endtime="20201110 08:37:27.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.492" endtime="20201110 08:37:27.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.183" endtime="20201110 08:37:27.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.179" endtime="20201110 08:37:27.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.520" level="INFO">${RESULT} = {'source_diff': [0, 0.010090222, 0.009999305, 0.010001111, 0.010001167000000005, 0.010001125, 0.010001166999999991, 0.010001111000000007, 0.010001166999999991, 0.010001111000000007, 0.0100011799999999...</msg>
<status status="PASS" starttime="20201110 08:37:27.496" endtime="20201110 08:37:27.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.525" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:37:27.523" endtime="20201110 08:37:27.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.527" level="INFO">VALUE: 0.022720306</msg>
<status status="PASS" starttime="20201110 08:37:27.526" endtime="20201110 08:37:27.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.521" endtime="20201110 08:37:27.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.532" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:27.531" endtime="20201110 08:37:27.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.535" level="INFO">VALUE: [0.032810528, 0.042809833, 0.052810944, 0.062812111, 0.072813236, 0.082814403, 0.092815514, 0.102816681, 0.112817792, 0.122818972, 0.132820083, 0.142821264, 0.152822361, 0.162823528, 0.172824653, 0.182825806, 0.192826944, 0.202828083, 0.21282925, 0.222830347, 0.232831444, 0.242832611, 0.25283375, 0.262834875, 0.272835986, 0.282837153, 0.292838264, 0.302839417, 0.312840542, 0.322841681, 0.332842792, 0.342843986, 0.352845125, 0.36284625, 0.372847333, 0.3828485, 0.392849611, 0.402850778, 0.412851958, 0.422853042, 0.432854153, 0.442855319, 0.452856431, 0.462857597, 0.472858694, 0.482859875, 0.492860972, 0.502862139, 0.51286325, 0.522864403, 0.532865528, 0.542866694, 0.552867792, 0.562868944, 0.572870069, 0.582871222, 0.592872333, 0.6028735, 0.612874611, 0.622875806, 0.632876875, 0.642878042, 0.652879181, 0.662880306, 0.672881417, 0.682882583, 0.692883708, 0.702884847, 0.712886, 0.722887167, 0.732888264, 0.742889403, 0.752890514, 0.762891667, 0.772892792, 0.782893958, 0.792895069, 0.802896236, 0.812897333, 0.822898486, 0.832899597, 0.842900778, 0.852901875, 0.862903028, 0.872904194, 0.882905306, 0.892906472, 0.902907625, 0.912908708, 0.922909861, 0.932910958, 0.942912139, 0.952913236, 0.962914444, 0.972915528, 0.982916667, 0.992917806, 1.002918958, 1.012920083, 1.022921222] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:27.533" endtime="20201110 08:37:27.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.528" endtime="20201110 08:37:27.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.538" endtime="20201110 08:37:27.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.541" endtime="20201110 08:37:27.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.540" endtime="20201110 08:37:27.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.536" endtime="20201110 08:37:27.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.981" endtime="20201110 08:37:27.563"></status>
</kw>
<msg timestamp="20201110 08:37:27.563" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.571" endtime="20201110 08:37:29.676"></status>
</kw>
<msg timestamp="20201110 08:37:29.677" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62852230, 'start-iter': 1, 'wakeups': [62862319, 62872317, 62882317, 6...</msg>
<status status="PASS" starttime="20201110 08:37:27.570" endtime="20201110 08:37:29.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.684" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62852230, 'start-iter': 1, 'wakeups': [62862319, 62872317, 62882317, 6...</msg>
<status status="PASS" starttime="20201110 08:37:29.680" endtime="20201110 08:37:29.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.686" endtime="20201110 08:37:29.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.567" endtime="20201110 08:37:29.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.565" endtime="20201110 08:37:29.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.698" level="INFO">${RESULT} = {'wakeups': [62862319, 62872317, 62882317, 62892317, 62902317, 62912317, 62922317, 62932317, 62942317, 62952317, 62962317, 62972317, 62982317, 62992317, 63002317, 63012317, 63022317, 63032317, 6304231...</msg>
<status status="PASS" starttime="20201110 08:37:29.693" endtime="20201110 08:37:29.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.709" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:29.705" endtime="20201110 08:37:29.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.714" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:29.711" endtime="20201110 08:37:29.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.700" endtime="20201110 08:37:29.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.724" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:29.722" endtime="20201110 08:37:29.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.729" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:29.727" endtime="20201110 08:37:29.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.717" endtime="20201110 08:37:29.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.738" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:37:29.737" endtime="20201110 08:37:29.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.740" level="INFO">VALUE: 62852230</msg>
<status status="PASS" starttime="20201110 08:37:29.739" endtime="20201110 08:37:29.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.732" endtime="20201110 08:37:29.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.745" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:29.744" endtime="20201110 08:37:29.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.748" level="INFO">VALUE: [62862319, 62872317, 62882317, 62892317, 62902317, 62912317, 62922317, 62932317, 62942317, 62952317, 62962317, 62972317, 62982317, 62992317, 63002317, 63012317, 63022317, 63032317, 63042317, 63052317, 63062317, 63072317, 63082317, 63092317, 63102317, 63112317, 63122317, 63132317, 63142317, 63152317, 63162317, 63172317, 63182317, 63192317, 63202317, 63212317, 63222317, 63232317, 63242317, 63252317, 63262317, 63272317, 63282317, 63292317, 63302317, 63312317, 63322317, 63332317, 63342317, 63352317, 63362317, 63372317, 63382317, 63392317, 63402317, 63412317, 63422317, 63432317, 63442317, 63452317, 63462317, 63472317, 63482317, 63492317, 63502317, 63512317, 63522317, 63532317, 63542317, 63552317, 63562317, 63572317, 63582317, 63592317, 63602317, 63612317, 63622317, 63632317, 63642317, 63652317, 63662317, 63672317, 63682317, 63692317, 63702317, 63712317, 63722317, 63732317, 63742317, 63752317, 63762317, 63772317, 63782317, 63792317, 63802317, 63812317, 63822317, 63832317, 63842317, 63852317]</msg>
<status status="PASS" starttime="20201110 08:37:29.747" endtime="20201110 08:37:29.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.742" endtime="20201110 08:37:29.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.756" endtime="20201110 08:37:30.046"></status>
</kw>
<msg timestamp="20201110 08:37:30.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020207417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030297764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.754" endtime="20201110 08:37:30.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020207417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030297764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.050" endtime="20201110 08:37:30.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.058" endtime="20201110 08:37:30.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.751" endtime="20201110 08:37:30.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.749" endtime="20201110 08:37:30.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.086" level="INFO">${RESULT} = {'source_diff': [0, 0.010090347000000003, 0.009999304999999997, 0.010001112, 0.010001180000000005, 0.010001139, 0.010001125, 0.010001152999999999, 0.010001139000000006, 0.010001110999999993, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:37:30.061" endtime="20201110 08:37:30.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.090" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:37:30.089" endtime="20201110 08:37:30.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.092" level="INFO">VALUE: 0.020207417</msg>
<status status="PASS" starttime="20201110 08:37:30.091" endtime="20201110 08:37:30.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.087" endtime="20201110 08:37:30.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.098" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:30.097" endtime="20201110 08:37:30.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.100" level="INFO">VALUE: [0.030297764, 0.040297069, 0.050298181, 0.060299361, 0.0703005, 0.080301625, 0.090302778, 0.100303917, 0.110305028, 0.120306194, 0.130307306, 0.140308472, 0.150309583, 0.16031075, 0.170311861, 0.180313028, 0.190314167, 0.200315319, 0.210316431, 0.220317597, 0.230318708, 0.240319889, 0.250321, 0.260322167, 0.270323292, 0.280324444, 0.290325597, 0.300326736, 0.310327847, 0.320329028, 0.330330125, 0.340331361, 0.350332417, 0.360333639, 0.370334694, 0.380335875, 0.390337042, 0.400338139, 0.410339278, 0.420340431, 0.430341528, 0.440342694, 0.450343806, 0.460344958, 0.470346083, 0.480347222, 0.490348347, 0.5003495, 0.510350625, 0.520351764, 0.530352875, 0.540354042, 0.550355167, 0.560356375, 0.570357417, 0.580358583, 0.590359708, 0.600360861, 0.610361972, 0.620363125, 0.63036425, 0.640365403, 0.650366514, 0.660367681, 0.670368778, 0.680369944, 0.690371056, 0.700372222, 0.710373347, 0.720374514, 0.730375597, 0.740376778, 0.750377875, 0.760379056, 0.770380167, 0.780381333, 0.790382417, 0.800383611, 0.810384694, 0.820385861, 0.830387014, 0.840388125, 0.850389236, 0.860390417, 0.870391528, 0.880392681, 0.890393792, 0.900394944, 0.910396083, 0.920397292, 0.930398375, 0.9403995, 0.950400611, 0.960401764, 0.970402875, 0.980404042, 0.990405167, 1.000406319, 1.010407444, 1.020408583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:30.099" endtime="20201110 08:37:30.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.094" endtime="20201110 08:37:30.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.104" endtime="20201110 08:37:30.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.107" endtime="20201110 08:37:30.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.106" endtime="20201110 08:37:30.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.102" endtime="20201110 08:37:30.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.563" endtime="20201110 08:37:30.128"></status>
</kw>
<msg timestamp="20201110 08:37:30.128" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.138" endtime="20201110 08:37:32.242"></status>
</kw>
<msg timestamp="20201110 08:37:32.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 65417642, 'start-iter': 1, 'wakeups': [65427730, 65437729, 65447729, 6...</msg>
<status status="PASS" starttime="20201110 08:37:30.136" endtime="20201110 08:37:32.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.250" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 65417642, 'start-iter': 1, 'wakeups': [65427730, 65437729, 65447729, 6...</msg>
<status status="PASS" starttime="20201110 08:37:32.246" endtime="20201110 08:37:32.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.253" endtime="20201110 08:37:32.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.133" endtime="20201110 08:37:32.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.130" endtime="20201110 08:37:32.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.264" level="INFO">${RESULT} = {'wakeups': [65427730, 65437729, 65447729, 65457729, 65467729, 65477729, 65487729, 65497729, 65507729, 65517729, 65527729, 65537729, 65547729, 65557729, 65567729, 65577729, 65587729, 65597729, 6560772...</msg>
<status status="PASS" starttime="20201110 08:37:32.260" endtime="20201110 08:37:32.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.273" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:32.271" endtime="20201110 08:37:32.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.278" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:32.276" endtime="20201110 08:37:32.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.266" endtime="20201110 08:37:32.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.289" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:32.287" endtime="20201110 08:37:32.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.294" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:32.291" endtime="20201110 08:37:32.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.281" endtime="20201110 08:37:32.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.307" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:37:32.304" endtime="20201110 08:37:32.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.311" level="INFO">VALUE: 65417642</msg>
<status status="PASS" starttime="20201110 08:37:32.309" endtime="20201110 08:37:32.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.297" endtime="20201110 08:37:32.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.322" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:32.320" endtime="20201110 08:37:32.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.327" level="INFO">VALUE: [65427730, 65437729, 65447729, 65457729, 65467729, 65477729, 65487729, 65497729, 65507729, 65517729, 65527729, 65537729, 65547729, 65557729, 65567729, 65577729, 65587729, 65597729, 65607729, 65617729, 65627729, 65637729, 65647729, 65657729, 65667729, 65677729, 65687729, 65697729, 65707729, 65717729, 65727729, 65737729, 65747729, 65757729, 65767729, 65777729, 65787729, 65797729, 65807729, 65817729, 65827729, 65837729, 65847729, 65857729, 65867729, 65877729, 65887729, 65897729, 65907729, 65917729, 65927729, 65937729, 65947729, 65957729, 65967729, 65977729, 65987729, 65997729, 66007729, 66017729, 66027729, 66037729, 66047729, 66057729, 66067729, 66077729, 66087729, 66097729, 66107729, 66117729, 66127729, 66137729, 66147729, 66157729, 66167729, 66177729, 66187729, 66197729, 66207729, 66217729, 66227729, 66237729, 66247729, 66257729, 66267729, 66277729, 66287729, 66297729, 66307729, 66317729, 66327729, 66337729, 66347729, 66357729, 66367729, 66377729, 66387729, 66397729, 66407729, 66417729]</msg>
<status status="PASS" starttime="20201110 08:37:32.325" endtime="20201110 08:37:32.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.315" endtime="20201110 08:37:32.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.344" endtime="20201110 08:37:32.647"></status>
</kw>
<msg timestamp="20201110 08:37:32.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029923944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.340" endtime="20201110 08:37:32.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029923944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.651" endtime="20201110 08:37:32.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.659" endtime="20201110 08:37:32.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.334" endtime="20201110 08:37:32.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.331" endtime="20201110 08:37:32.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.685" level="INFO">${RESULT} = {'source_diff': [0, 0.010089902000000001, 0.010000278000000001, 0.010001166999999998, 0.010001111, 0.010001124999999993, 0.010001153000000013, 0.010001138999999992, 0.010001139000000006, 0.010001125, ...</msg>
<status status="PASS" starttime="20201110 08:37:32.662" endtime="20201110 08:37:32.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.689" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:37:32.688" endtime="20201110 08:37:32.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.691" level="INFO">VALUE: 0.019834042</msg>
<status status="PASS" starttime="20201110 08:37:32.690" endtime="20201110 08:37:32.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.686" endtime="20201110 08:37:32.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.697" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:32.696" endtime="20201110 08:37:32.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.700" level="INFO">VALUE: [0.029923944, 0.039924222, 0.049925389, 0.0599265, 0.069927625, 0.079928778, 0.089929917, 0.099931056, 0.109932181, 0.119933361, 0.129934458, 0.139935625, 0.149936764, 0.159937903, 0.169939028, 0.179940181, 0.189941306, 0.199942472, 0.209943583, 0.21994475, 0.229945875, 0.239947028, 0.249948222, 0.259949319, 0.269950431, 0.279951597, 0.289952722, 0.299953889, 0.309955014, 0.319956194, 0.329957306, 0.339958458, 0.349959583, 0.359960778, 0.369961847, 0.379963028, 0.389964139, 0.399965319, 0.409966431, 0.419967597, 0.429968708, 0.439969861, 0.449970972, 0.459972111, 0.469973222, 0.479974389, 0.4899755, 0.499976653, 0.509977764, 0.519978931, 0.529980042, 0.539981194, 0.549982306, 0.559983472, 0.569984597, 0.579985736, 0.589986847, 0.599988014, 0.609989125, 0.619990278, 0.629991403, 0.639992569, 0.649993667, 0.659994819, 0.669995944, 0.679997111, 0.689998222, 0.699999375, 0.7100005, 0.720001639, 0.730002764, 0.740003917, 0.750005028, 0.760006194, 0.770007292, 0.780008458, 0.790009569, 0.80001075, 0.810011847, 0.820013, 0.830014125, 0.840015278, 0.850016403, 0.860017542, 0.870018653, 0.880019833, 0.890020931, 0.900022111, 0.910023208, 0.920024361, 0.930025472, 0.940026653, 0.95002775, 0.960028931, 0.970030028, 0.980031181, 0.990032292, 1.000033472, 1.010034569, 1.020035736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:32.699" endtime="20201110 08:37:32.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.693" endtime="20201110 08:37:32.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.703" endtime="20201110 08:37:32.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.706" endtime="20201110 08:37:32.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.705" endtime="20201110 08:37:32.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.701" endtime="20201110 08:37:32.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.129" endtime="20201110 08:37:32.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.978" endtime="20201110 08:37:32.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.978" endtime="20201110 08:37:32.727"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:32.730" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.738" endtime="20201110 08:37:34.842"></status>
</kw>
<msg timestamp="20201110 08:37:34.844" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 68017527, 'start-iter': 1, 'wakeups': [68027633, 68037631, 68047631, 6...</msg>
<status status="PASS" starttime="20201110 08:37:32.736" endtime="20201110 08:37:34.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.849" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 68017527, 'start-iter': 1, 'wakeups': [68027633, 68037631, 68047631, 6...</msg>
<status status="PASS" starttime="20201110 08:37:34.846" endtime="20201110 08:37:34.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.852" endtime="20201110 08:37:34.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.734" endtime="20201110 08:37:34.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.732" endtime="20201110 08:37:34.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.863" level="INFO">${RESULT} = {'wakeups': [68027633, 68037631, 68047631, 68057631, 68067631, 68077631, 68087631, 68097631, 68107631, 68117631, 68127631, 68137631, 68147631, 68157631, 68167631, 68177631, 68187631, 68197631, 6820763...</msg>
<status status="PASS" starttime="20201110 08:37:34.859" endtime="20201110 08:37:34.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.872" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:34.870" endtime="20201110 08:37:34.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.876" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:34.874" endtime="20201110 08:37:34.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.865" endtime="20201110 08:37:34.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.886" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:34.884" endtime="20201110 08:37:34.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.891" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:34.889" endtime="20201110 08:37:34.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.879" endtime="20201110 08:37:34.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.901" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:37:34.899" endtime="20201110 08:37:34.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.905" level="INFO">VALUE: 68017527</msg>
<status status="PASS" starttime="20201110 08:37:34.903" endtime="20201110 08:37:34.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.894" endtime="20201110 08:37:34.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.915" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:34.913" endtime="20201110 08:37:34.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.920" level="INFO">VALUE: [68027633, 68037631, 68047631, 68057631, 68067631, 68077631, 68087631, 68097631, 68107631, 68117631, 68127631, 68137631, 68147631, 68157631, 68167631, 68177631, 68187631, 68197631, 68207631, 68217631, 68227631, 68237631, 68247631, 68257631, 68267631, 68277631, 68287631, 68297631, 68307631, 68317631, 68327631, 68337631, 68347631, 68357631, 68367631, 68377631, 68387631, 68397631, 68407631, 68417631, 68427631, 68437631, 68447631, 68457631, 68467631, 68477631, 68487631, 68497631, 68507631, 68517631, 68527631, 68537631, 68547631, 68557631, 68567631, 68577631, 68587631, 68597631, 68607631, 68617631, 68627631, 68637631, 68647631, 68657631, 68667631, 68677631, 68687631, 68697631, 68707631, 68717631, 68727631, 68737631, 68747631, 68757631, 68767631, 68777631, 68787631, 68797631, 68807631, 68817631, 68827631, 68837631, 68847631, 68857631, 68867631, 68877631, 68887631, 68897631, 68907631, 68917631, 68927631, 68937631, 68947631, 68957631, 68967631, 68977631, 68987631, 68997631, 69007631, 69017631]</msg>
<status status="PASS" starttime="20201110 08:37:34.917" endtime="20201110 08:37:34.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.908" endtime="20201110 08:37:34.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.937" endtime="20201110 08:37:35.230"></status>
</kw>
<msg timestamp="20201110 08:37:35.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020824389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030931375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.934" endtime="20201110 08:37:35.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020824389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030931375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.234" endtime="20201110 08:37:35.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.242" endtime="20201110 08:37:35.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.926" endtime="20201110 08:37:35.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.923" endtime="20201110 08:37:35.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.268" level="INFO">${RESULT} = {'source_diff': [0, 0.010106986000000002, 0.009998875, 0.010001111, 0.010001180999999998, 0.010001097000000007, 0.010001166999999991, 0.010001179999999998, 0.010001125, 0.010001097, 0.0100011529999999...</msg>
<status status="PASS" starttime="20201110 08:37:35.245" endtime="20201110 08:37:35.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.273" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:37:35.272" endtime="20201110 08:37:35.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.275" level="INFO">VALUE: 0.020824389</msg>
<status status="PASS" starttime="20201110 08:37:35.274" endtime="20201110 08:37:35.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.269" endtime="20201110 08:37:35.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.281" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:35.280" endtime="20201110 08:37:35.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.283" level="INFO">VALUE: [0.030931375, 0.04093025, 0.050931361, 0.060932542, 0.070933639, 0.080934806, 0.090935986, 0.100937111, 0.110938208, 0.120939361, 0.1309405, 0.140941653, 0.150942778, 0.160943931, 0.170945083, 0.180946222, 0.190947333, 0.200948528, 0.210949611, 0.220950792, 0.230951889, 0.240953056, 0.250954181, 0.260955347, 0.270956472, 0.280957639, 0.290958736, 0.300959889, 0.310961, 0.320962181, 0.330963278, 0.340964431, 0.350965556, 0.360966764, 0.370967819, 0.380968972, 0.390970097, 0.40097125, 0.410972347, 0.420973514, 0.430974625, 0.440975792, 0.450976889, 0.460978069, 0.470979181, 0.480980319, 0.490981431, 0.500982639, 0.510983708, 0.520984861, 0.530985986, 0.540987139, 0.550988264, 0.560989417, 0.570990528, 0.580991708, 0.590992792, 0.600993958, 0.610995069, 0.620996236, 0.630997333, 0.640998514, 0.650999653, 0.661000778, 0.671001889, 0.681003042, 0.691004153, 0.701005333, 0.711006431, 0.721007597, 0.731008694, 0.741009861, 0.751010972, 0.761012167, 0.771013292, 0.781014417, 0.791015514, 0.801016681, 0.811017875, 0.821018958, 0.831020069, 0.841021236, 0.851022333, 0.861023486, 0.871024625, 0.881025764, 0.891026875, 0.901028056, 0.911029208, 0.921030306, 0.931031417, 0.941032597, 0.951033694, 0.961034847, 0.971036042, 0.981037153, 0.991038236, 1.001039403, 1.011040514, 1.021041667] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:35.282" endtime="20201110 08:37:35.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.277" endtime="20201110 08:37:35.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.286" endtime="20201110 08:37:35.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.289" endtime="20201110 08:37:35.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.288" endtime="20201110 08:37:35.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.284" endtime="20201110 08:37:35.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.730" endtime="20201110 08:37:35.310"></status>
</kw>
<msg timestamp="20201110 08:37:35.310" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.320" endtime="20201110 08:37:37.423"></status>
</kw>
<msg timestamp="20201110 08:37:37.425" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70599739, 'start-iter': 1, 'wakeups': [70609844, 70619843, 70629843, 7...</msg>
<status status="PASS" starttime="20201110 08:37:35.319" endtime="20201110 08:37:37.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.431" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70599739, 'start-iter': 1, 'wakeups': [70609844, 70619843, 70629843, 7...</msg>
<status status="PASS" starttime="20201110 08:37:37.427" endtime="20201110 08:37:37.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.433" endtime="20201110 08:37:37.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.316" endtime="20201110 08:37:37.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.312" endtime="20201110 08:37:37.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.444" level="INFO">${RESULT} = {'wakeups': [70609844, 70619843, 70629843, 70639843, 70649843, 70659843, 70669843, 70679843, 70689843, 70699843, 70709843, 70719843, 70729843, 70739843, 70749843, 70759843, 70769843, 70779843, 7078984...</msg>
<status status="PASS" starttime="20201110 08:37:37.440" endtime="20201110 08:37:37.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.452" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:37.450" endtime="20201110 08:37:37.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.457" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:37.455" endtime="20201110 08:37:37.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.446" endtime="20201110 08:37:37.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.468" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:37.466" endtime="20201110 08:37:37.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.472" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:37.470" endtime="20201110 08:37:37.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.461" endtime="20201110 08:37:37.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.482" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:37:37.480" endtime="20201110 08:37:37.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.486" level="INFO">VALUE: 70599739</msg>
<status status="PASS" starttime="20201110 08:37:37.484" endtime="20201110 08:37:37.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.475" endtime="20201110 08:37:37.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.496" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:37.494" endtime="20201110 08:37:37.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.501" level="INFO">VALUE: [70609844, 70619843, 70629843, 70639843, 70649843, 70659843, 70669843, 70679843, 70689843, 70699843, 70709843, 70719843, 70729843, 70739843, 70749843, 70759843, 70769843, 70779843, 70789843, 70799843, 70809843, 70819843, 70829843, 70839843, 70849843, 70859843, 70869843, 70879843, 70889843, 70899843, 70909843, 70919843, 70929843, 70939843, 70949843, 70959843, 70969843, 70979843, 70989843, 70999843, 71009843, 71019843, 71029843, 71039843, 71049843, 71059843, 71069843, 71079843, 71089843, 71099843, 71109843, 71119843, 71129843, 71139843, 71149843, 71159843, 71169843, 71179843, 71189843, 71199843, 71209843, 71219843, 71229843, 71239843, 71249843, 71259843, 71269843, 71279843, 71289843, 71299843, 71309843, 71319843, 71329843, 71339843, 71349843, 71359843, 71369843, 71379843, 71389843, 71399843, 71409843, 71419843, 71429843, 71439843, 71449843, 71459843, 71469843, 71479843, 71489843, 71499843, 71509843, 71519843, 71529843, 71539843, 71549843, 71559843, 71569843, 71579843, 71589843, 71599843]</msg>
<status status="PASS" starttime="20201110 08:37:37.499" endtime="20201110 08:37:37.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.489" endtime="20201110 08:37:37.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.511" endtime="20201110 08:37:37.803"></status>
</kw>
<msg timestamp="20201110 08:37:37.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029871125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.510" endtime="20201110 08:37:37.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029871125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.807" endtime="20201110 08:37:37.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.814" endtime="20201110 08:37:37.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.507" endtime="20201110 08:37:37.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.504" endtime="20201110 08:37:37.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.843" level="INFO">${RESULT} = {'source_diff': [0, 0.010106346999999998, 0.010000028000000001, 0.010001125, 0.010001165999999999, 0.010001125, 0.010001167000000005, 0.010001110999999993, 0.010001167000000005, 0.010001097, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:37:37.818" endtime="20201110 08:37:37.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.848" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:37:37.847" endtime="20201110 08:37:37.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.850" level="INFO">VALUE: 0.019764778</msg>
<status status="PASS" starttime="20201110 08:37:37.849" endtime="20201110 08:37:37.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.844" endtime="20201110 08:37:37.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.855" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:37.854" endtime="20201110 08:37:37.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.858" level="INFO">VALUE: [0.029871125, 0.039871153, 0.049872278, 0.059873444, 0.069874569, 0.079875736, 0.089876847, 0.099878014, 0.109879111, 0.119880278, 0.129881417, 0.139882569, 0.149883681, 0.159884847, 0.169886, 0.179887125, 0.189888236, 0.199889403, 0.209890542, 0.219891694, 0.229892806, 0.239893972, 0.249895139, 0.25989625, 0.269897403, 0.279898514, 0.289899639, 0.299900806, 0.309901903, 0.319903056, 0.329904167, 0.339905347, 0.349906444, 0.359907597, 0.369908708, 0.379909875, 0.389911, 0.399912139, 0.409913319, 0.419914417, 0.429915514, 0.439916681, 0.449917792, 0.459918944, 0.469920069, 0.479921222, 0.489922333, 0.4999235, 0.509924611, 0.519925778, 0.529926889, 0.539928056, 0.549929153, 0.559930306, 0.569931417, 0.579932597, 0.589933694, 0.599934875, 0.609935986, 0.619937153, 0.629938236, 0.639939403, 0.649940514, 0.659941667, 0.669942792, 0.679943944, 0.689945097, 0.699946222, 0.709947333, 0.719948486, 0.729949597, 0.739950778, 0.749951875, 0.759953069, 0.769954167, 0.779955375, 0.789956458, 0.799957597, 0.809958694, 0.819959889, 0.829961, 0.839962125, 0.849963236, 0.859964403, 0.869965542, 0.879966694, 0.889967778, 0.899968944, 0.909970056, 0.919971208, 0.929972333, 0.9399735, 0.949974625, 0.959975806, 0.969976889, 0.979978028, 0.989979181, 0.999980306, 1.009981458, 1.019982583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:37.857" endtime="20201110 08:37:37.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.851" endtime="20201110 08:37:37.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.861" endtime="20201110 08:37:37.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.864" endtime="20201110 08:37:37.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.863" endtime="20201110 08:37:37.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.859" endtime="20201110 08:37:37.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.311" endtime="20201110 08:37:37.885"></status>
</kw>
<msg timestamp="20201110 08:37:37.885" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.893" endtime="20201110 08:37:39.997"></status>
</kw>
<msg timestamp="20201110 08:37:39.999" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 73173053, 'start-iter': 1, 'wakeups': [73183158, 73193157, 73203157, 7...</msg>
<status status="PASS" starttime="20201110 08:37:37.892" endtime="20201110 08:37:39.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.005" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 73173053, 'start-iter': 1, 'wakeups': [73183158, 73193157, 73203157, 7...</msg>
<status status="PASS" starttime="20201110 08:37:40.001" endtime="20201110 08:37:40.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.007" endtime="20201110 08:37:40.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.889" endtime="20201110 08:37:40.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.887" endtime="20201110 08:37:40.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.018" level="INFO">${RESULT} = {'wakeups': [73183158, 73193157, 73203157, 73213157, 73223157, 73233157, 73243157, 73253157, 73263157, 73273157, 73283157, 73293157, 73303157, 73313157, 73323157, 73333157, 73343157, 73353157, 7336315...</msg>
<status status="PASS" starttime="20201110 08:37:40.014" endtime="20201110 08:37:40.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.028" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:40.024" endtime="20201110 08:37:40.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.033" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:40.031" endtime="20201110 08:37:40.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.020" endtime="20201110 08:37:40.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.043" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:40.041" endtime="20201110 08:37:40.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.047" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:40.045" endtime="20201110 08:37:40.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.036" endtime="20201110 08:37:40.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.062" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:37:40.055" endtime="20201110 08:37:40.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.064" level="INFO">VALUE: 73173053</msg>
<status status="PASS" starttime="20201110 08:37:40.063" endtime="20201110 08:37:40.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.050" endtime="20201110 08:37:40.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.069" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:40.068" endtime="20201110 08:37:40.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.071" level="INFO">VALUE: [73183158, 73193157, 73203157, 73213157, 73223157, 73233157, 73243157, 73253157, 73263157, 73273157, 73283157, 73293157, 73303157, 73313157, 73323157, 73333157, 73343157, 73353157, 73363157, 73373157, 73383157, 73393157, 73403157, 73413157, 73423157, 73433157, 73443157, 73453157, 73463157, 73473157, 73483157, 73493157, 73503157, 73513157, 73523157, 73533157, 73543157, 73553157, 73563157, 73573157, 73583157, 73593157, 73603157, 73613157, 73623157, 73633157, 73643157, 73653157, 73663157, 73673157, 73683157, 73693157, 73703157, 73713157, 73723157, 73733157, 73743157, 73753157, 73763157, 73773157, 73783157, 73793157, 73803157, 73813157, 73823157, 73833157, 73843157, 73853157, 73863157, 73873157, 73883157, 73893157, 73903157, 73913157, 73923157, 73933157, 73943157, 73953157, 73963157, 73973157, 73983157, 73993157, 74003157, 74013157, 74023157, 74033157, 74043157, 74053157, 74063157, 74073157, 74083157, 74093157, 74103157, 74113157, 74123157, 74133157, 74143157, 74153157, 74163157, 74173157]</msg>
<status status="PASS" starttime="20201110 08:37:40.070" endtime="20201110 08:37:40.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.065" endtime="20201110 08:37:40.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.078" endtime="20201110 08:37:40.369"></status>
</kw>
<msg timestamp="20201110 08:37:40.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018230639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028336736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.077" endtime="20201110 08:37:40.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018230639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028336736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.372" endtime="20201110 08:37:40.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.380" endtime="20201110 08:37:40.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.074" endtime="20201110 08:37:40.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.072" endtime="20201110 08:37:40.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.407" level="INFO">${RESULT} = {'source_diff': [0, 0.010106097000000001, 0.010000042, 0.010001097, 0.010001166999999998, 0.010001111, 0.010001179999999998, 0.010001111000000007, 0.010001180999999998, 0.010001097, 0.0100011669999999...</msg>
<status status="PASS" starttime="20201110 08:37:40.383" endtime="20201110 08:37:40.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.412" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:37:40.411" endtime="20201110 08:37:40.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.414" level="INFO">VALUE: 0.018230639</msg>
<status status="PASS" starttime="20201110 08:37:40.413" endtime="20201110 08:37:40.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.408" endtime="20201110 08:37:40.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.419" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:40.418" endtime="20201110 08:37:40.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.421" level="INFO">VALUE: [0.028336736, 0.038336778, 0.048337875, 0.058339042, 0.068340153, 0.078341333, 0.088342444, 0.098343625, 0.108344722, 0.118345889, 0.128347, 0.138348208, 0.148349278, 0.158350444, 0.168351583, 0.178352722, 0.188353861, 0.198355014, 0.208356125, 0.218357306, 0.228358431, 0.238359583, 0.248360708, 0.258361861, 0.268363014, 0.278364139, 0.288365264, 0.298366431, 0.308367569, 0.318368722, 0.328369819, 0.338371, 0.348372111, 0.358373278, 0.368374389, 0.378375583, 0.388376694, 0.398377833, 0.408378958, 0.418380111, 0.428381222, 0.438382375, 0.4483835, 0.458384708, 0.468385778, 0.478386917, 0.488388028, 0.498389194, 0.508390319, 0.518391472, 0.528392569, 0.538393736, 0.548394847, 0.558396, 0.568397111, 0.578398278, 0.588399403, 0.598400542, 0.608401667, 0.618402819, 0.628404014, 0.638405083, 0.648406236, 0.658407361, 0.668408472, 0.678409639, 0.68841075, 0.698411917, 0.708413028, 0.718414181, 0.728415306, 0.738416444, 0.748417556, 0.758418722, 0.768419847, 0.778420986, 0.788422111, 0.798423278, 0.808424417, 0.818425611, 0.828426653, 0.838427819, 0.848428917, 0.858430083, 0.868431208, 0.878432361, 0.888433486, 0.898434625, 0.908435736, 0.918436903, 0.928438042, 0.938439167, 0.948440292, 0.958441514, 0.968442569, 0.978443736, 0.988444833, 0.998445986, 1.008447097, 1.018448278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:40.420" endtime="20201110 08:37:40.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.415" endtime="20201110 08:37:40.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.425" endtime="20201110 08:37:40.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.428" endtime="20201110 08:37:40.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.427" endtime="20201110 08:37:40.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.423" endtime="20201110 08:37:40.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.886" endtime="20201110 08:37:40.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.728" endtime="20201110 08:37:40.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.728" endtime="20201110 08:37:40.449"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:40.452" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.460" endtime="20201110 08:37:42.563"></status>
</kw>
<msg timestamp="20201110 08:37:42.565" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75739632, 'start-iter': 1, 'wakeups': [75749755, 75759752, 75769752,...</msg>
<status status="PASS" starttime="20201110 08:37:40.458" endtime="20201110 08:37:42.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75739632, 'start-iter': 1, 'wakeups': [75749755, 75759752, 75769752,...</msg>
<status status="PASS" starttime="20201110 08:37:42.567" endtime="20201110 08:37:42.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.573" endtime="20201110 08:37:42.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.456" endtime="20201110 08:37:42.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.454" endtime="20201110 08:37:42.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.584" level="INFO">${RESULT} = {'wakeups': [75749755, 75759752, 75769752, 75779752, 75789752, 75799752, 75809752, 75819752, 75829752, 75839752, 75849752, 75859752, 75869752, 75879752, 75889752, 75899752, 75909752, 75919752, 7592975...</msg>
<status status="PASS" starttime="20201110 08:37:42.579" endtime="20201110 08:37:42.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.592" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:42.590" endtime="20201110 08:37:42.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.597" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:42.595" endtime="20201110 08:37:42.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.585" endtime="20201110 08:37:42.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.607" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:42.605" endtime="20201110 08:37:42.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.614" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:42.609" endtime="20201110 08:37:42.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.600" endtime="20201110 08:37:42.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.624" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:37:42.622" endtime="20201110 08:37:42.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.628" level="INFO">VALUE: 75739632</msg>
<status status="PASS" starttime="20201110 08:37:42.626" endtime="20201110 08:37:42.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.617" endtime="20201110 08:37:42.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.639" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:42.636" endtime="20201110 08:37:42.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.644" level="INFO">VALUE: [75749755, 75759752, 75769752, 75779752, 75789752, 75799752, 75809752, 75819752, 75829752, 75839752, 75849752, 75859752, 75869752, 75879752, 75889752, 75899752, 75909752, 75919752, 75929752, 75939752, 75949752, 75959752, 75969752, 75979752, 75989752, 75999752, 76009752, 76019752, 76029752, 76039752, 76049752, 76059752, 76069752, 76079752, 76089752, 76099752, 76109752, 76119752, 76129752, 76139752, 76149752, 76159752, 76169752, 76179752, 76189752, 76199752, 76209752, 76219752, 76229752, 76239752, 76249752, 76259752, 76269752, 76279752, 76289752, 76299752, 76309752, 76319752, 76329752, 76339752, 76349752, 76359752, 76369752, 76379752, 76389752, 76399752, 76409752, 76419752, 76429752, 76439752, 76449752, 76459752, 76469752, 76479752, 76489752, 76499752, 76509752, 76519752, 76529752, 76539752, 76549752, 76559752, 76569752, 76579752, 76589752, 76599752, 76609752, 76619752, 76629752, 76639752, 76649752, 76659752, 76669752, 76679752, 76689752, 76699752, 76709752, 76719752, 76729752, 76739752]</msg>
<status status="PASS" starttime="20201110 08:37:42.641" endtime="20201110 08:37:42.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.631" endtime="20201110 08:37:42.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.659" endtime="20201110 08:37:42.951"></status>
</kw>
<msg timestamp="20201110 08:37:42.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031163972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.656" endtime="20201110 08:37:42.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031163972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.954" endtime="20201110 08:37:42.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.962" endtime="20201110 08:37:42.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.651" endtime="20201110 08:37:42.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.647" endtime="20201110 08:37:42.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.988" level="INFO">${RESULT} = {'source_diff': [0, 0.010124389000000001, 0.009998070000000001, 0.010001179999999998, 0.010001097, 0.010001124999999993, 0.01000123700000001, 0.010001026999999996, 0.010001250000000003, 0.010001055999...</msg>
<status status="PASS" starttime="20201110 08:37:42.965" endtime="20201110 08:37:42.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.993" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:37:42.992" endtime="20201110 08:37:42.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.995" level="INFO">VALUE: 0.021039583</msg>
<status status="PASS" starttime="20201110 08:37:42.994" endtime="20201110 08:37:42.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.989" endtime="20201110 08:37:42.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.001" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:42.999" endtime="20201110 08:37:43.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.003" level="INFO">VALUE: [0.031163972, 0.041162042, 0.051163222, 0.061164319, 0.071165444, 0.081166681, 0.091167708, 0.101168958, 0.111170014, 0.121171167, 0.131172278, 0.141173444, 0.151174556, 0.161175736, 0.171176833, 0.181178, 0.191179125, 0.201180292, 0.211181417, 0.221182569, 0.231183681, 0.241184847, 0.251185972, 0.261187139, 0.27118825, 0.281189417, 0.291190542, 0.301191708, 0.311192833, 0.321193986, 0.331195097, 0.341196264, 0.351197417, 0.361198569, 0.371199681, 0.381200833, 0.391201944, 0.401203111, 0.411204236, 0.421205458, 0.431206528, 0.441207681, 0.451208819, 0.461209972, 0.471211083, 0.48121225, 0.491213361, 0.501214542, 0.511215653, 0.521216903, 0.531217931, 0.541219097, 0.551220208, 0.561221347, 0.571222542, 0.581223653, 0.591224736, 0.601225889, 0.611227, 0.621228181, 0.631229292, 0.641230444, 0.651231542, 0.661232764, 0.671233819, 0.681234986, 0.691236083, 0.70123725, 0.711238361, 0.721239528, 0.731240639, 0.741241792, 0.751242903, 0.761244069, 0.771245181, 0.781246347, 0.791247444, 0.801248597, 0.811249736, 0.821250875, 0.831251986, 0.841253181, 0.851254264, 0.861255417, 0.871256542, 0.881257708, 0.891258806, 0.901259972, 0.911261097, 0.921262236, 0.931263361, 0.941264514, 0.951265625, 0.961266778, 0.971267889, 0.981269056, 0.991270236, 1.001271347, 1.011272458, 1.021273597] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:43.002" endtime="20201110 08:37:43.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.997" endtime="20201110 08:37:43.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.006" endtime="20201110 08:37:43.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.009" endtime="20201110 08:37:43.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.008" endtime="20201110 08:37:43.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.004" endtime="20201110 08:37:43.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.452" endtime="20201110 08:37:43.030"></status>
</kw>
<msg timestamp="20201110 08:37:43.031" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.039" endtime="20201110 08:37:45.145"></status>
</kw>
<msg timestamp="20201110 08:37:45.146" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78319478, 'start-iter': 1, 'wakeups': [78329601, 78339598, 78349598,...</msg>
<status status="PASS" starttime="20201110 08:37:43.037" endtime="20201110 08:37:45.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.152" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78319478, 'start-iter': 1, 'wakeups': [78329601, 78339598, 78349598,...</msg>
<status status="PASS" starttime="20201110 08:37:45.148" endtime="20201110 08:37:45.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.154" endtime="20201110 08:37:45.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.035" endtime="20201110 08:37:45.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.033" endtime="20201110 08:37:45.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.165" level="INFO">${RESULT} = {'wakeups': [78329601, 78339598, 78349598, 78359598, 78369598, 78379598, 78389598, 78399598, 78409598, 78419598, 78429598, 78439598, 78449598, 78459598, 78469598, 78479598, 78489598, 78499598, 7850959...</msg>
<status status="PASS" starttime="20201110 08:37:45.161" endtime="20201110 08:37:45.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.173" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:45.171" endtime="20201110 08:37:45.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.178" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:45.176" endtime="20201110 08:37:45.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.167" endtime="20201110 08:37:45.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.188" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:45.185" endtime="20201110 08:37:45.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.192" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:45.190" endtime="20201110 08:37:45.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.181" endtime="20201110 08:37:45.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.202" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:37:45.200" endtime="20201110 08:37:45.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.206" level="INFO">VALUE: 78319478</msg>
<status status="PASS" starttime="20201110 08:37:45.204" endtime="20201110 08:37:45.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.195" endtime="20201110 08:37:45.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.218" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:45.216" endtime="20201110 08:37:45.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.223" level="INFO">VALUE: [78329601, 78339598, 78349598, 78359598, 78369598, 78379598, 78389598, 78399598, 78409598, 78419598, 78429598, 78439598, 78449598, 78459598, 78469598, 78479598, 78489598, 78499598, 78509598, 78519598, 78529598, 78539598, 78549598, 78559598, 78569598, 78579598, 78589598, 78599598, 78609598, 78619598, 78629598, 78639598, 78649598, 78659598, 78669598, 78679598, 78689598, 78699598, 78709598, 78719598, 78729598, 78739598, 78749598, 78759598, 78769598, 78779598, 78789598, 78799598, 78809598, 78819598, 78829598, 78839598, 78849598, 78859598, 78869598, 78879598, 78889598, 78899598, 78909598, 78919598, 78929598, 78939598, 78949598, 78959598, 78969598, 78979598, 78989598, 78999598, 79009598, 79019598, 79029598, 79039598, 79049598, 79059598, 79069598, 79079598, 79089598, 79099598, 79109598, 79119598, 79129598, 79139598, 79149598, 79159598, 79169598, 79179598, 79189598, 79199598, 79209598, 79219598, 79229598, 79239598, 79249598, 79259598, 79269598, 79279598, 79289598, 79299598, 79309598, 79319598]</msg>
<status status="PASS" starttime="20201110 08:37:45.221" endtime="20201110 08:37:45.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.209" endtime="20201110 08:37:45.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.236" endtime="20201110 08:37:45.528"></status>
</kw>
<msg timestamp="20201110 08:37:45.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029966583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.234" endtime="20201110 08:37:45.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029966583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.532" endtime="20201110 08:37:45.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.539" endtime="20201110 08:37:45.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.232" endtime="20201110 08:37:45.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.225" endtime="20201110 08:37:45.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.565" level="INFO">${RESULT} = {'source_diff': [0, 0.010124736000000002, 0.009998111, 0.010001041999999995, 0.010001167000000005, 0.010001179999999998, 0.010001098, 0.010001138000000007, 0.010001152999999999, 0.010001110999999993, ...</msg>
<status status="PASS" starttime="20201110 08:37:45.542" endtime="20201110 08:37:45.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.570" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:37:45.569" endtime="20201110 08:37:45.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.572" level="INFO">VALUE: 0.019841847</msg>
<status status="PASS" starttime="20201110 08:37:45.571" endtime="20201110 08:37:45.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.566" endtime="20201110 08:37:45.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.577" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:45.576" endtime="20201110 08:37:45.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.579" level="INFO">VALUE: [0.029966583, 0.039964694, 0.049965736, 0.059966903, 0.069968083, 0.079969181, 0.089970319, 0.099971472, 0.109972583, 0.11997375, 0.129974861, 0.139976028, 0.149977153, 0.159978333, 0.169979431, 0.179980667, 0.189981736, 0.199982875, 0.209984014, 0.219985167, 0.229986278, 0.239987472, 0.249988569, 0.259989708, 0.269990819, 0.279992, 0.289993097, 0.299994264, 0.309995361, 0.319996542, 0.329997639, 0.339998806, 0.349999917, 0.360001111, 0.370002194, 0.380003333, 0.390004458, 0.400005611, 0.410006736, 0.420007889, 0.430009014, 0.440010153, 0.450011319, 0.460012417, 0.470013528, 0.48001475, 0.490015806, 0.500016986, 0.510018153, 0.52001925, 0.530020389, 0.540021514, 0.550022625, 0.560023778, 0.570024889, 0.580026097, 0.590027181, 0.600028333, 0.610029444, 0.620030597, 0.630031708, 0.640032889, 0.650034, 0.660035153, 0.670036278, 0.680037417, 0.690038528, 0.700039694, 0.710040806, 0.720041958, 0.730043069, 0.740044236, 0.750045361, 0.760046514, 0.770047639, 0.780048806, 0.790049903, 0.800051056, 0.810052167, 0.820053333, 0.830054444, 0.840055639, 0.850056722, 0.860057875, 0.870058986, 0.880060139, 0.890061264, 0.900062417, 0.910063528, 0.920064708, 0.930065833, 0.940067028, 0.950068069, 0.960069236, 0.970070347, 0.980071542, 0.990072639, 1.000073778, 1.010074889, 1.020076056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:45.578" endtime="20201110 08:37:45.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.573" endtime="20201110 08:37:45.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.582" endtime="20201110 08:37:45.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.587" endtime="20201110 08:37:45.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.584" endtime="20201110 08:37:45.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.581" endtime="20201110 08:37:45.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.031" endtime="20201110 08:37:45.608"></status>
</kw>
<msg timestamp="20201110 08:37:45.608" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.616" endtime="20201110 08:37:47.720"></status>
</kw>
<msg timestamp="20201110 08:37:47.722" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80895372, 'start-iter': 1, 'wakeups': [80905495, 80915492, 80925492,...</msg>
<status status="PASS" starttime="20201110 08:37:45.614" endtime="20201110 08:37:47.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80895372, 'start-iter': 1, 'wakeups': [80905495, 80915492, 80925492,...</msg>
<status status="PASS" starttime="20201110 08:37:47.724" endtime="20201110 08:37:47.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.730" endtime="20201110 08:37:47.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.612" endtime="20201110 08:37:47.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.610" endtime="20201110 08:37:47.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.741" level="INFO">${RESULT} = {'wakeups': [80905495, 80915492, 80925492, 80935492, 80945492, 80955492, 80965492, 80975492, 80985492, 80995492, 81005492, 81015492, 81025492, 81035492, 81045492, 81055492, 81065492, 81075492, 8108549...</msg>
<status status="PASS" starttime="20201110 08:37:47.737" endtime="20201110 08:37:47.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.750" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:47.748" endtime="20201110 08:37:47.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.754" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:47.752" endtime="20201110 08:37:47.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.743" endtime="20201110 08:37:47.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.764" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:47.762" endtime="20201110 08:37:47.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.769" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:47.767" endtime="20201110 08:37:47.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.757" endtime="20201110 08:37:47.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.777" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:37:47.776" endtime="20201110 08:37:47.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.779" level="INFO">VALUE: 80895372</msg>
<status status="PASS" starttime="20201110 08:37:47.778" endtime="20201110 08:37:47.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.771" endtime="20201110 08:37:47.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.784" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:47.783" endtime="20201110 08:37:47.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.786" level="INFO">VALUE: [80905495, 80915492, 80925492, 80935492, 80945492, 80955492, 80965492, 80975492, 80985492, 80995492, 81005492, 81015492, 81025492, 81035492, 81045492, 81055492, 81065492, 81075492, 81085492, 81095492, 81105492, 81115492, 81125492, 81135492, 81145492, 81155492, 81165492, 81175492, 81185492, 81195492, 81205492, 81215492, 81225492, 81235492, 81245492, 81255492, 81265492, 81275492, 81285492, 81295492, 81305492, 81315492, 81325492, 81335492, 81345492, 81355492, 81365492, 81375492, 81385492, 81395492, 81405492, 81415492, 81425492, 81435492, 81445492, 81455492, 81465492, 81475492, 81485492, 81495492, 81505492, 81515492, 81525492, 81535492, 81545492, 81555492, 81565492, 81575492, 81585492, 81595492, 81605492, 81615492, 81625492, 81635492, 81645492, 81655492, 81665492, 81675492, 81685492, 81695492, 81705492, 81715492, 81725492, 81735492, 81745492, 81755492, 81765492, 81775492, 81785492, 81795492, 81805492, 81815492, 81825492, 81835492, 81845492, 81855492, 81865492, 81875492, 81885492, 81895492]</msg>
<status status="PASS" starttime="20201110 08:37:47.785" endtime="20201110 08:37:47.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.780" endtime="20201110 08:37:47.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.795" endtime="20201110 08:37:48.085"></status>
</kw>
<msg timestamp="20201110 08:37:48.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018232722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028357167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.792" endtime="20201110 08:37:48.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018232722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028357167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.089" endtime="20201110 08:37:48.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.097" endtime="20201110 08:37:48.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.789" endtime="20201110 08:37:48.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.787" endtime="20201110 08:37:48.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.123" level="INFO">${RESULT} = {'source_diff': [0, 0.010124445, 0.009998069000000002, 0.010001125, 0.010001194999999997, 0.010001069000000008, 0.010001152999999999, 0.010001152999999999, 0.010001125, 0.010001137999999993, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:37:48.101" endtime="20201110 08:37:48.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.128" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:37:48.127" endtime="20201110 08:37:48.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.130" level="INFO">VALUE: 0.018232722</msg>
<status status="PASS" starttime="20201110 08:37:48.129" endtime="20201110 08:37:48.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.124" endtime="20201110 08:37:48.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.135" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:48.134" endtime="20201110 08:37:48.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.137" level="INFO">VALUE: [0.028357167, 0.038355236, 0.048356361, 0.058357556, 0.068358625, 0.078359778, 0.088360931, 0.098362056, 0.108363194, 0.118364361, 0.128365472, 0.138366639, 0.148367736, 0.158368931, 0.168370014, 0.178371181, 0.188372306, 0.1983735, 0.208374597, 0.218375806, 0.228376861, 0.238378028, 0.248379167, 0.258380333, 0.268381444, 0.278382611, 0.288383708, 0.298384889, 0.308386, 0.318387181, 0.328388278, 0.338389458, 0.348390556, 0.35839175, 0.368392847, 0.378394056, 0.388395125, 0.398396292, 0.408397403, 0.418398583, 0.428399694, 0.438400903, 0.448401986, 0.458403208, 0.46840425, 0.478405417, 0.488406556, 0.498407694, 0.508408806, 0.518410028, 0.528411097, 0.538412236, 0.548413347, 0.558414514, 0.568415625, 0.578416778, 0.588417903, 0.598419069, 0.608420167, 0.618421319, 0.628422444, 0.638423597, 0.648424708, 0.658425861, 0.668426972, 0.678428139, 0.68842925, 0.698430403, 0.708431514, 0.718432681, 0.728433792, 0.738434944, 0.748436069, 0.758437222, 0.768438389, 0.7784395, 0.788440625, 0.798441778, 0.808442875, 0.818444042, 0.828445153, 0.838446333, 0.848447431, 0.858448583, 0.868449708, 0.878450889, 0.888451972, 0.898453125, 0.908454236, 0.918455403, 0.928456528, 0.938457681, 0.948458792, 0.958459958, 0.968461056, 0.978462236, 0.988463333, 0.998464514, 1.008465611, 1.018466778] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:48.136" endtime="20201110 08:37:48.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.131" endtime="20201110 08:37:48.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.140" endtime="20201110 08:37:48.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.143" endtime="20201110 08:37:48.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.142" endtime="20201110 08:37:48.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.139" endtime="20201110 08:37:48.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.608" endtime="20201110 08:37:48.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.450" endtime="20201110 08:37:48.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.450" endtime="20201110 08:37:48.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.791" endtime="20201110 08:37:48.165"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:27.673" endtime="20201110 08:37:48.165" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:20.086" endtime="20201110 08:37:48.168"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:33:41.339" endtime="20201110 08:37:48.185"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_arduino-due</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
