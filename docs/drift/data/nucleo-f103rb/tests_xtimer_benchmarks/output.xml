<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201126 19:49:19.107" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:49:20.334" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:49:20.350" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:49:22.182" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:49:20.330" endtime="20201126 19:49:22.184"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.189" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:49:22.186" endtime="20201126 19:49:22.190"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:20.327" endtime="20201126 19:49:22.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:22.196" endtime="20201126 19:49:22.522"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.193" endtime="20201126 19:49:22.524"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:22.556" endtime="20201126 19:49:22.574"></status>
</kw>
<msg timestamp="20201126 19:49:22.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:22.552" endtime="20201126 19:49:22.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.582" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:22.578" endtime="20201126 19:49:22.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.589" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:49:22.584" endtime="20201126 19:49:22.589"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:22.546" endtime="20201126 19:49:22.591"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:22.540" endtime="20201126 19:49:22.593"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.537" endtime="20201126 19:49:22.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:49:22.602" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:49:22.600" endtime="20201126 19:49:22.603"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.596" endtime="20201126 19:49:22.603"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.535" endtime="20201126 19:49:22.603"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.533" endtime="20201126 19:49:22.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:22.605" endtime="20201126 19:49:22.609"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.529" endtime="20201126 19:49:22.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:22.612" endtime="20201126 19:49:22.616"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.526" endtime="20201126 19:49:22.617"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:20.324" endtime="20201126 19:49:22.618"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:22.634" endtime="20201126 19:49:22.656"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.631" endtime="20201126 19:49:22.658"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:22.692" endtime="20201126 19:49:22.710"></status>
</kw>
<msg timestamp="20201126 19:49:22.711" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:22.688" endtime="20201126 19:49:22.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.717" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:22.713" endtime="20201126 19:49:22.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.724" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:49:22.720" endtime="20201126 19:49:22.725"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:22.681" endtime="20201126 19:49:22.726"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:22.675" endtime="20201126 19:49:22.728"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.671" endtime="20201126 19:49:22.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:49:22.736" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:49:22.735" endtime="20201126 19:49:22.737"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.730" endtime="20201126 19:49:22.738"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.669" endtime="20201126 19:49:22.738"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.668" endtime="20201126 19:49:22.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:22.740" endtime="20201126 19:49:22.743"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.664" endtime="20201126 19:49:22.745"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.659" endtime="20201126 19:49:22.746"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.628" endtime="20201126 19:49:22.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:22.765" endtime="20201126 19:49:22.778"></status>
</kw>
<msg timestamp="20201126 19:49:22.779" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:22.761" endtime="20201126 19:49:22.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.785" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:22.781" endtime="20201126 19:49:22.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:22.787" endtime="20201126 19:49:22.793"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.754" endtime="20201126 19:49:22.794"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.749" endtime="20201126 19:49:22.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.806" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201126 19:49:22.804" endtime="20201126 19:49:22.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.811" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201126 19:49:22.809" endtime="20201126 19:49:22.812"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.798" endtime="20201126 19:49:22.813"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:49:22.619" endtime="20201126 19:49:22.815" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:49:19.367" endtime="20201126 19:49:22.823"></status>
</suite>
<suite id="s1-s2" name="Drift" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/04__drift.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:49:22.950" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:49:22.965" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:49:24.727" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:49:22.946" endtime="20201126 19:49:24.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:49:24.734" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:49:24.731" endtime="20201126 19:49:24.735"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.943" endtime="20201126 19:49:24.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:24.741" endtime="20201126 19:49:25.067"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.738" endtime="20201126 19:49:25.068"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:25.098" endtime="20201126 19:49:25.118"></status>
</kw>
<msg timestamp="20201126 19:49:25.119" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:25.094" endtime="20201126 19:49:25.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:25.126" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:25.122" endtime="20201126 19:49:25.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:49:25.132" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:49:25.128" endtime="20201126 19:49:25.133"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:25.088" endtime="20201126 19:49:25.135"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:25.083" endtime="20201126 19:49:25.137"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.080" endtime="20201126 19:49:25.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:49:25.145" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:49:25.144" endtime="20201126 19:49:25.146"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.139" endtime="20201126 19:49:25.148"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.078" endtime="20201126 19:49:25.148"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.076" endtime="20201126 19:49:25.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:25.150" endtime="20201126 19:49:25.154"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.073" endtime="20201126 19:49:25.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:25.157" endtime="20201126 19:49:25.161"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.070" endtime="20201126 19:49:25.163"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:22.940" endtime="20201126 19:49:25.163"></status>
</kw>
<test id="s1-s2-t1" name="Measure Drift Template">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:25.177" endtime="20201126 19:49:25.199"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.174" endtime="20201126 19:49:25.201"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:25.234" endtime="20201126 19:49:25.252"></status>
</kw>
<msg timestamp="20201126 19:49:25.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:25.230" endtime="20201126 19:49:25.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:25.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:25.256" endtime="20201126 19:49:25.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:49:25.267" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:49:25.263" endtime="20201126 19:49:25.268"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:25.223" endtime="20201126 19:49:25.270"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:25.217" endtime="20201126 19:49:25.271"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.214" endtime="20201126 19:49:25.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:49:25.280" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:49:25.278" endtime="20201126 19:49:25.280"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.274" endtime="20201126 19:49:25.281"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.213" endtime="20201126 19:49:25.281"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.211" endtime="20201126 19:49:25.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:25.283" endtime="20201126 19:49:25.287"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.207" endtime="20201126 19:49:25.288"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.202" endtime="20201126 19:49:25.290"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.171" endtime="20201126 19:49:25.290"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:25.374" endtime="20201126 19:49:26.390"></status>
</kw>
<msg timestamp="20201126 19:49:26.391" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:25.310" endtime="20201126 19:49:26.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:26.398" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:26.394" endtime="20201126 19:49:26.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:26.400" endtime="20201126 19:49:26.404"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.302" endtime="20201126 19:49:26.405"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.296" endtime="20201126 19:49:26.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:26.417" level="INFO">NAME: dut-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:26.414" endtime="20201126 19:49:26.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:26.421" level="INFO">VALUE: ['1.000017']</msg>
<status status="PASS" starttime="20201126 19:49:26.419" endtime="20201126 19:49:26.422"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.408" endtime="20201126 19:49:26.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:26.440" endtime="20201126 19:49:26.738"></status>
</kw>
<msg timestamp="20201126 19:49:26.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.187671056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.187795639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:49:26.436" endtime="20201126 19:49:26.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:26.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.187671056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.187795639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:49:26.741" endtime="20201126 19:49:26.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:26.748" endtime="20201126 19:49:26.752"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.429" endtime="20201126 19:49:26.753"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.425" endtime="20201126 19:49:26.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:26.761" level="INFO">${PHILIP_RES} = [{'time': 1.187795639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0001245829999998, 'source_diff': 1.0001245829999998}]</msg>
<status status="PASS" starttime="20201126 19:49:26.757" endtime="20201126 19:49:26.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:26.767" level="INFO">${RESULT} = {'source_diff': 1.0001245829999998, 'source': 'DUT_IC', 'time': 1.187795639, 'event': 'FALLING', 'diff': 1.0001245829999998}</msg>
<status status="PASS" starttime="20201126 19:49:26.763" endtime="20201126 19:49:26.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:26.777" level="INFO">NAME: philip-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:26.775" endtime="20201126 19:49:26.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:26.782" level="INFO">VALUE: 1.0001245829999998</msg>
<status status="PASS" starttime="20201126 19:49:26.780" endtime="20201126 19:49:26.783"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.769" endtime="20201126 19:49:26.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:26.793" endtime="20201126 19:49:26.815"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.789" endtime="20201126 19:49:26.817"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.787" endtime="20201126 19:49:26.817"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:25.292" endtime="20201126 19:49:26.818"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:26.841" endtime="20201126 19:49:36.857"></status>
</kw>
<msg timestamp="20201126 19:49:36.858" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:26.838" endtime="20201126 19:49:36.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:36.865" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:36.861" endtime="20201126 19:49:36.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:36.867" endtime="20201126 19:49:36.871"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.829" endtime="20201126 19:49:36.872"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.824" endtime="20201126 19:49:36.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:36.884" level="INFO">NAME: dut-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:36.881" endtime="20201126 19:49:36.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:36.888" level="INFO">VALUE: ['10.000017']</msg>
<status status="PASS" starttime="20201126 19:49:36.886" endtime="20201126 19:49:36.889"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:36.875" endtime="20201126 19:49:36.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:36.907" endtime="20201126 19:49:37.190"></status>
</kw>
<msg timestamp="20201126 19:49:37.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038760361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.039863431, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:36.903" endtime="20201126 19:49:37.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:37.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038760361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.039863431, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:37.193" endtime="20201126 19:49:37.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:37.200" endtime="20201126 19:49:37.203"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:36.896" endtime="20201126 19:49:37.206"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:36.892" endtime="20201126 19:49:37.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:37.213" level="INFO">${PHILIP_RES} = [{'time': 10.039863431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 10.001103070000001, 'source_diff': 10.001103070000001}]</msg>
<status status="PASS" starttime="20201126 19:49:37.209" endtime="20201126 19:49:37.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:37.219" level="INFO">${RESULT} = {'source_diff': 10.001103070000001, 'source': 'DUT_IC', 'time': 10.039863431, 'event': 'FALLING', 'diff': 10.001103070000001}</msg>
<status status="PASS" starttime="20201126 19:49:37.215" endtime="20201126 19:49:37.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:37.229" level="INFO">NAME: philip-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:37.227" endtime="20201126 19:49:37.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:37.233" level="INFO">VALUE: 10.001103070000001</msg>
<status status="PASS" starttime="20201126 19:49:37.231" endtime="20201126 19:49:37.234"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:37.220" endtime="20201126 19:49:37.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:37.245" endtime="20201126 19:49:37.267"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:37.241" endtime="20201126 19:49:37.268"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:37.238" endtime="20201126 19:49:37.269"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:26.820" endtime="20201126 19:49:37.270"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>20000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:37.291" endtime="20201126 19:49:57.308"></status>
</kw>
<msg timestamp="20201126 19:49:57.310" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:37.288" endtime="20201126 19:49:57.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:57.316" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:57.312" endtime="20201126 19:49:57.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:57.318" endtime="20201126 19:49:57.322"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:37.281" endtime="20201126 19:49:57.323"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:37.276" endtime="20201126 19:49:57.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:57.335" level="INFO">NAME: dut-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:57.332" endtime="20201126 19:49:57.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:57.339" level="INFO">VALUE: ['20.000017']</msg>
<status status="PASS" starttime="20201126 19:49:57.337" endtime="20201126 19:49:57.340"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.326" endtime="20201126 19:49:57.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:57.360" endtime="20201126 19:49:57.644"></status>
</kw>
<msg timestamp="20201126 19:49:57.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037549556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.039740708, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:57.357" endtime="20201126 19:49:57.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:57.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037549556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.039740708, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:57.648" endtime="20201126 19:49:57.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:57.654" endtime="20201126 19:49:57.659"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.348" endtime="20201126 19:49:57.660"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.343" endtime="20201126 19:49:57.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:57.668" level="INFO">${PHILIP_RES} = [{'time': 20.039740708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 20.002191152, 'source_diff': 20.002191152}]</msg>
<status status="PASS" starttime="20201126 19:49:57.663" endtime="20201126 19:49:57.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:57.674" level="INFO">${RESULT} = {'source_diff': 20.002191152, 'source': 'DUT_IC', 'time': 20.039740708, 'event': 'FALLING', 'diff': 20.002191152}</msg>
<status status="PASS" starttime="20201126 19:49:57.670" endtime="20201126 19:49:57.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:57.685" level="INFO">NAME: philip-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:57.682" endtime="20201126 19:49:57.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:57.689" level="INFO">VALUE: 20.002191152</msg>
<status status="PASS" starttime="20201126 19:49:57.687" endtime="20201126 19:49:57.690"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.676" endtime="20201126 19:49:57.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:57.702" endtime="20201126 19:49:57.724"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.697" endtime="20201126 19:49:57.725"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.695" endtime="20201126 19:49:57.726"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:37.271" endtime="20201126 19:49:57.727"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>30000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:57.748" endtime="20201126 19:50:27.765"></status>
</kw>
<msg timestamp="20201126 19:50:27.766" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:57.745" endtime="20201126 19:50:27.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:50:27.772" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:50:27.768" endtime="20201126 19:50:27.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:27.774" endtime="20201126 19:50:27.778"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.738" endtime="20201126 19:50:27.780"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.732" endtime="20201126 19:50:27.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:50:27.791" level="INFO">NAME: dut-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:50:27.789" endtime="20201126 19:50:27.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:50:27.796" level="INFO">VALUE: ['30.000017']</msg>
<status status="PASS" starttime="20201126 19:50:27.793" endtime="20201126 19:50:27.796"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:27.783" endtime="20201126 19:50:27.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:27.814" endtime="20201126 19:50:28.077"></status>
</kw>
<msg timestamp="20201126 19:50:28.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037405486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 30.040682458, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:50:27.811" endtime="20201126 19:50:28.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:50:28.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037405486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 30.040682458, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:50:28.080" endtime="20201126 19:50:28.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:28.087" endtime="20201126 19:50:28.091"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:27.804" endtime="20201126 19:50:28.093"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:27.799" endtime="20201126 19:50:28.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:50:28.100" level="INFO">${PHILIP_RES} = [{'time': 30.040682458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 30.003276972, 'source_diff': 30.003276972}]</msg>
<status status="PASS" starttime="20201126 19:50:28.096" endtime="20201126 19:50:28.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:50:28.106" level="INFO">${RESULT} = {'source_diff': 30.003276972, 'source': 'DUT_IC', 'time': 30.040682458, 'event': 'FALLING', 'diff': 30.003276972}</msg>
<status status="PASS" starttime="20201126 19:50:28.103" endtime="20201126 19:50:28.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:50:28.118" level="INFO">NAME: philip-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:50:28.116" endtime="20201126 19:50:28.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:50:28.123" level="INFO">VALUE: 30.003276972</msg>
<status status="PASS" starttime="20201126 19:50:28.121" endtime="20201126 19:50:28.124"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:28.108" endtime="20201126 19:50:28.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:50:28.135" endtime="20201126 19:50:28.156"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:28.130" endtime="20201126 19:50:28.158"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:28.128" endtime="20201126 19:50:28.158"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:57.728" endtime="20201126 19:50:28.159"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>40000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:28.181" endtime="20201126 19:51:08.199"></status>
</kw>
<msg timestamp="20201126 19:51:08.200" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:50:28.178" endtime="20201126 19:51:08.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:51:08.207" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:51:08.202" endtime="20201126 19:51:08.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:08.209" endtime="20201126 19:51:08.213"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:28.170" endtime="20201126 19:51:08.214"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:28.165" endtime="20201126 19:51:08.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:51:08.226" level="INFO">NAME: dut-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:51:08.223" endtime="20201126 19:51:08.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:51:08.230" level="INFO">VALUE: ['40.000017']</msg>
<status status="PASS" starttime="20201126 19:51:08.228" endtime="20201126 19:51:08.231"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.217" endtime="20201126 19:51:08.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:08.249" endtime="20201126 19:51:08.505"></status>
</kw>
<msg timestamp="20201126 19:51:08.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037919847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 40.042284528, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:51:08.246" endtime="20201126 19:51:08.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:51:08.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037919847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 40.042284528, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:51:08.507" endtime="20201126 19:51:08.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:08.510" endtime="20201126 19:51:08.512"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.238" endtime="20201126 19:51:08.513"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.234" endtime="20201126 19:51:08.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:51:08.516" level="INFO">${PHILIP_RES} = [{'time': 40.042284528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 40.004364681000006, 'source_diff': 40.004364681000006}]</msg>
<status status="PASS" starttime="20201126 19:51:08.514" endtime="20201126 19:51:08.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:51:08.519" level="INFO">${RESULT} = {'source_diff': 40.004364681000006, 'source': 'DUT_IC', 'time': 40.042284528, 'event': 'FALLING', 'diff': 40.004364681000006}</msg>
<status status="PASS" starttime="20201126 19:51:08.517" endtime="20201126 19:51:08.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:51:08.524" level="INFO">NAME: philip-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:51:08.523" endtime="20201126 19:51:08.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:51:08.526" level="INFO">VALUE: 40.004364681000006</msg>
<status status="PASS" starttime="20201126 19:51:08.525" endtime="20201126 19:51:08.527"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.520" endtime="20201126 19:51:08.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:51:08.532" endtime="20201126 19:51:08.553"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.530" endtime="20201126 19:51:08.555"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.528" endtime="20201126 19:51:08.556"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:28.161" endtime="20201126 19:51:08.557"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>50000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:08.578" endtime="20201126 19:51:58.596"></status>
</kw>
<msg timestamp="20201126 19:51:58.597" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:51:08.575" endtime="20201126 19:51:58.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:51:58.603" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:51:58.599" endtime="20201126 19:51:58.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:58.605" endtime="20201126 19:51:58.609"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.568" endtime="20201126 19:51:58.610"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.563" endtime="20201126 19:51:58.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:51:58.622" level="INFO">NAME: dut-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:51:58.620" endtime="20201126 19:51:58.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:51:58.627" level="INFO">VALUE: ['50.000017']</msg>
<status status="PASS" starttime="20201126 19:51:58.624" endtime="20201126 19:51:58.627"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:58.613" endtime="20201126 19:51:58.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:58.657" endtime="20201126 19:51:58.966"></status>
</kw>
<msg timestamp="20201126 19:51:58.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037922806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 50.043373319, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:51:58.653" endtime="20201126 19:51:58.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:51:58.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037922806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 50.043373319, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:51:58.969" endtime="20201126 19:51:58.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:58.977" endtime="20201126 19:51:58.981"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:58.645" endtime="20201126 19:51:58.983"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:58.630" endtime="20201126 19:51:58.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:51:58.991" level="INFO">${PHILIP_RES} = [{'time': 50.043373319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 50.005450513, 'source_diff': 50.005450513}]</msg>
<status status="PASS" starttime="20201126 19:51:58.986" endtime="20201126 19:51:58.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:51:58.997" level="INFO">${RESULT} = {'source_diff': 50.005450513, 'source': 'DUT_IC', 'time': 50.043373319, 'event': 'FALLING', 'diff': 50.005450513}</msg>
<status status="PASS" starttime="20201126 19:51:58.993" endtime="20201126 19:51:58.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:51:59.008" level="INFO">NAME: philip-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:51:59.006" endtime="20201126 19:51:59.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:51:59.013" level="INFO">VALUE: 50.005450513</msg>
<status status="PASS" starttime="20201126 19:51:59.011" endtime="20201126 19:51:59.014"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:58.999" endtime="20201126 19:51:59.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:51:59.026" endtime="20201126 19:51:59.048"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:59.021" endtime="20201126 19:51:59.050"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:59.018" endtime="20201126 19:51:59.051"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:08.558" endtime="20201126 19:51:59.051"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>59000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:59.077" endtime="20201126 19:52:58.095"></status>
</kw>
<msg timestamp="20201126 19:52:58.097" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:51:59.072" endtime="20201126 19:52:58.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:52:58.103" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000017'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:52:58.099" endtime="20201126 19:52:58.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:52:58.106" endtime="20201126 19:52:58.110"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:59.064" endtime="20201126 19:52:58.112"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:59.058" endtime="20201126 19:52:58.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:52:58.124" level="INFO">NAME: dut-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:52:58.121" endtime="20201126 19:52:58.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:52:58.129" level="INFO">VALUE: ['59.000017']</msg>
<status status="PASS" starttime="20201126 19:52:58.126" endtime="20201126 19:52:58.129"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:58.115" endtime="20201126 19:52:58.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:52:58.145" endtime="20201126 19:52:58.427"></status>
</kw>
<msg timestamp="20201126 19:52:58.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042889069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 59.049321069, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:52:58.143" endtime="20201126 19:52:58.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:52:58.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042889069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 59.049321069, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:52:58.430" endtime="20201126 19:52:58.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:52:58.438" endtime="20201126 19:52:58.443"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:58.138" endtime="20201126 19:52:58.444"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:58.132" endtime="20201126 19:52:58.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:52:58.453" level="INFO">${PHILIP_RES} = [{'time': 59.049321069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 59.006432000000004, 'source_diff': 59.006432000000004}]</msg>
<status status="PASS" starttime="20201126 19:52:58.448" endtime="20201126 19:52:58.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:52:58.458" level="INFO">${RESULT} = {'source_diff': 59.006432000000004, 'source': 'DUT_IC', 'time': 59.049321069, 'event': 'FALLING', 'diff': 59.006432000000004}</msg>
<status status="PASS" starttime="20201126 19:52:58.455" endtime="20201126 19:52:58.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:52:58.470" level="INFO">NAME: philip-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:52:58.467" endtime="20201126 19:52:58.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:52:58.475" level="INFO">VALUE: 59.006432000000004</msg>
<status status="PASS" starttime="20201126 19:52:58.472" endtime="20201126 19:52:58.475"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:58.460" endtime="20201126 19:52:58.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:52:58.487" endtime="20201126 19:52:58.509"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:58.482" endtime="20201126 19:52:58.511"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:58.480" endtime="20201126 19:52:58.512"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:59.054" endtime="20201126 19:52:58.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:52:58.525" endtime="20201126 19:52:58.547"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:58.520" endtime="20201126 19:52:58.549"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:58.517" endtime="20201126 19:52:58.550"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:49:25.164" endtime="20201126 19:52:58.551" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:49:22.837" endtime="20201126 19:52:58.562"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201126 19:49:19.117" endtime="20201126 19:52:58.587"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="1" fail="0">dev</stat>
<stat pass="2" fail="0">long</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Drift">tests_xtimer_benchmarks.Drift</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
