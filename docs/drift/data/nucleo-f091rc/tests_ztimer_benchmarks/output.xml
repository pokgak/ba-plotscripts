<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201126 19:45:28.535" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:45:29.093" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:45:29.101" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:45:30.202" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:45:29.092" endtime="20201126 19:45:30.202"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.205" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:45:30.203" endtime="20201126 19:45:30.206"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:29.090" endtime="20201126 19:45:30.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:30.208" endtime="20201126 19:45:30.391"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.207" endtime="20201126 19:45:30.392"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.405" endtime="20201126 19:45:30.419"></status>
</kw>
<msg timestamp="20201126 19:45:30.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201126 19:45:30.403" endtime="20201126 19:45:30.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.422" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201126 19:45:30.421" endtime="20201126 19:45:30.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.425" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:30.423" endtime="20201126 19:45:30.426"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:30.400" endtime="20201126 19:45:30.426"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:30.398" endtime="20201126 19:45:30.427"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.397" endtime="20201126 19:45:30.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:30.431" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:30.430" endtime="20201126 19:45:30.432"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.428" endtime="20201126 19:45:30.432"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.396" endtime="20201126 19:45:30.432"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.395" endtime="20201126 19:45:30.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.433" endtime="20201126 19:45:30.434"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.394" endtime="20201126 19:45:30.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.436" endtime="20201126 19:45:30.437"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.393" endtime="20201126 19:45:30.438"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:29.088" endtime="20201126 19:45:30.438"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:30.445" endtime="20201126 19:45:30.464"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.443" endtime="20201126 19:45:30.464"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.479" endtime="20201126 19:45:30.493"></status>
</kw>
<msg timestamp="20201126 19:45:30.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.477" endtime="20201126 19:45:30.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.494" endtime="20201126 19:45:30.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.499" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:30.497" endtime="20201126 19:45:30.499"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:30.474" endtime="20201126 19:45:30.500"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:30.471" endtime="20201126 19:45:30.500"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.470" endtime="20201126 19:45:30.500"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:30.504" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:30.504" endtime="20201126 19:45:30.505"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.501" endtime="20201126 19:45:30.505"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.469" endtime="20201126 19:45:30.505"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.468" endtime="20201126 19:45:30.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.506" endtime="20201126 19:45:30.507"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.467" endtime="20201126 19:45:30.508"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.465" endtime="20201126 19:45:30.508"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.441" endtime="20201126 19:45:30.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.516" endtime="20201126 19:45:30.526"></status>
</kw>
<msg timestamp="20201126 19:45:30.527" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.515" endtime="20201126 19:45:30.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.529" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.528" endtime="20201126 19:45:30.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.530" endtime="20201126 19:45:30.532"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.512" endtime="20201126 19:45:30.532"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.510" endtime="20201126 19:45:30.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.538" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201126 19:45:30.537" endtime="20201126 19:45:30.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.540" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201126 19:45:30.539" endtime="20201126 19:45:30.540"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.534" endtime="20201126 19:45:30.540"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:45:30.438" endtime="20201126 19:45:30.541" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:45:28.644" endtime="20201126 19:45:30.545"></status>
</suite>
<suite id="s1-s2" name="Drift" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/04__drift.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.595" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:45:30.604" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:45:31.711" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:45:30.594" endtime="20201126 19:45:31.711"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:45:31.714" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:45:31.712" endtime="20201126 19:45:31.714"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.593" endtime="20201126 19:45:31.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:31.717" endtime="20201126 19:45:31.938"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.715" endtime="20201126 19:45:31.939"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:31.951" endtime="20201126 19:45:31.965"></status>
</kw>
<msg timestamp="20201126 19:45:31.966" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201126 19:45:31.949" endtime="20201126 19:45:31.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:31.968" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201126 19:45:31.967" endtime="20201126 19:45:31.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:31.971" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:31.969" endtime="20201126 19:45:31.972"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:31.947" endtime="20201126 19:45:31.972"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:31.945" endtime="20201126 19:45:31.973"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.944" endtime="20201126 19:45:31.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:31.977" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:31.976" endtime="20201126 19:45:31.977"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.974" endtime="20201126 19:45:31.977"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.943" endtime="20201126 19:45:31.977"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.942" endtime="20201126 19:45:31.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:31.978" endtime="20201126 19:45:31.980"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.941" endtime="20201126 19:45:31.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:31.981" endtime="20201126 19:45:31.983"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.939" endtime="20201126 19:45:31.983"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.591" endtime="20201126 19:45:31.983"></status>
</kw>
<test id="s1-s2-t1" name="Measure Drift Template">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:31.991" endtime="20201126 19:45:32.010"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.988" endtime="20201126 19:45:32.011"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.024" endtime="20201126 19:45:32.038"></status>
</kw>
<msg timestamp="20201126 19:45:32.039" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:32.022" endtime="20201126 19:45:32.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:32.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:32.040" endtime="20201126 19:45:32.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:32.045" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:32.043" endtime="20201126 19:45:32.045"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:32.019" endtime="20201126 19:45:32.045"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:32.017" endtime="20201126 19:45:32.046"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.016" endtime="20201126 19:45:32.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:32.050" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:32.049" endtime="20201126 19:45:32.050"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.047" endtime="20201126 19:45:32.051"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.015" endtime="20201126 19:45:32.051"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.014" endtime="20201126 19:45:32.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.052" endtime="20201126 19:45:32.053"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.013" endtime="20201126 19:45:32.054"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.012" endtime="20201126 19:45:32.054"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:31.987" endtime="20201126 19:45:32.054"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.064" endtime="20201126 19:45:33.079"></status>
</kw>
<msg timestamp="20201126 19:45:33.080" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:32.063" endtime="20201126 19:45:33.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.085" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:33.082" endtime="20201126 19:45:33.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:33.087" endtime="20201126 19:45:33.093"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.060" endtime="20201126 19:45:33.094"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.058" endtime="20201126 19:45:33.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.103" level="INFO">NAME: dut-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:33.101" endtime="20201126 19:45:33.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.107" level="INFO">VALUE: ['1.000031']</msg>
<status status="PASS" starttime="20201126 19:45:33.105" endtime="20201126 19:45:33.108"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.096" endtime="20201126 19:45:33.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:33.122" endtime="20201126 19:45:33.390"></status>
</kw>
<msg timestamp="20201126 19:45:33.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063492486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.063636694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:45:33.119" endtime="20201126 19:45:33.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063492486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.063636694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:45:33.392" endtime="20201126 19:45:33.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:33.394" endtime="20201126 19:45:33.396"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.114" endtime="20201126 19:45:33.397"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.110" endtime="20201126 19:45:33.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:45:33.400" level="INFO">${PHILIP_RES} = [{'time': 1.063636694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000144208, 'source_diff': 1.000144208}]</msg>
<status status="PASS" starttime="20201126 19:45:33.398" endtime="20201126 19:45:33.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:45:33.402" level="INFO">${RESULT} = {'source_diff': 1.000144208, 'source': 'DUT_IC', 'event': 'FALLING', 'time': 1.063636694, 'diff': 1.000144208}</msg>
<status status="PASS" starttime="20201126 19:45:33.401" endtime="20201126 19:45:33.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.406" level="INFO">NAME: philip-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:33.405" endtime="20201126 19:45:33.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.408" level="INFO">VALUE: 1.000144208</msg>
<status status="PASS" starttime="20201126 19:45:33.407" endtime="20201126 19:45:33.409"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.403" endtime="20201126 19:45:33.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:33.413" endtime="20201126 19:45:33.432"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.411" endtime="20201126 19:45:33.433"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.410" endtime="20201126 19:45:33.433"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.055" endtime="20201126 19:45:33.433"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:33.442" endtime="20201126 19:45:43.457"></status>
</kw>
<msg timestamp="20201126 19:45:43.458" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:33.440" endtime="20201126 19:45:43.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.463" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:43.460" endtime="20201126 19:45:43.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:43.465" endtime="20201126 19:45:43.468"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.438" endtime="20201126 19:45:43.470"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.436" endtime="20201126 19:45:43.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.480" level="INFO">NAME: dut-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:43.477" endtime="20201126 19:45:43.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.485" level="INFO">VALUE: ['10.000031']</msg>
<status status="PASS" starttime="20201126 19:45:43.483" endtime="20201126 19:45:43.486"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.472" endtime="20201126 19:45:43.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:43.500" endtime="20201126 19:45:43.755"></status>
</kw>
<msg timestamp="20201126 19:45:43.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.020494903, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:45:43.497" endtime="20201126 19:45:43.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.020494903, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:45:43.757" endtime="20201126 19:45:43.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:43.759" endtime="20201126 19:45:43.761"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.492" endtime="20201126 19:45:43.762"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.488" endtime="20201126 19:45:43.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:45:43.765" level="INFO">${PHILIP_RES} = [{'time': 10.020494903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 10.001181139, 'source_diff': 10.001181139}]</msg>
<status status="PASS" starttime="20201126 19:45:43.763" endtime="20201126 19:45:43.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:45:43.767" level="INFO">${RESULT} = {'source_diff': 10.001181139, 'source': 'DUT_IC', 'event': 'FALLING', 'time': 10.020494903, 'diff': 10.001181139}</msg>
<status status="PASS" starttime="20201126 19:45:43.765" endtime="20201126 19:45:43.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.771" level="INFO">NAME: philip-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:43.770" endtime="20201126 19:45:43.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.773" level="INFO">VALUE: 10.001181139</msg>
<status status="PASS" starttime="20201126 19:45:43.772" endtime="20201126 19:45:43.774"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.768" endtime="20201126 19:45:43.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:43.777" endtime="20201126 19:45:43.797"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.776" endtime="20201126 19:45:43.797"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.775" endtime="20201126 19:45:43.798"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.434" endtime="20201126 19:45:43.798"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>20000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:43.807" endtime="20201126 19:46:03.822"></status>
</kw>
<msg timestamp="20201126 19:46:03.823" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:43.805" endtime="20201126 19:46:03.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:03.828" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:03.825" endtime="20201126 19:46:03.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:03.831" endtime="20201126 19:46:03.834"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.802" endtime="20201126 19:46:03.836"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.800" endtime="20201126 19:46:03.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:03.845" level="INFO">NAME: dut-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:03.843" endtime="20201126 19:46:03.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:03.849" level="INFO">VALUE: ['20.000031']</msg>
<status status="PASS" starttime="20201126 19:46:03.847" endtime="20201126 19:46:03.850"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:03.838" endtime="20201126 19:46:03.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:03.866" endtime="20201126 19:46:04.117"></status>
</kw>
<msg timestamp="20201126 19:46:04.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019782583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.022121222, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:03.863" endtime="20201126 19:46:04.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019782583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.022121222, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:04.119" endtime="20201126 19:46:04.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:04.122" endtime="20201126 19:46:04.123"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:03.856" endtime="20201126 19:46:04.124"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:03.852" endtime="20201126 19:46:04.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:46:04.127" level="INFO">${PHILIP_RES} = [{'time': 20.022121222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 20.002338638999998, 'source_diff': 20.002338638999998}]</msg>
<status status="PASS" starttime="20201126 19:46:04.125" endtime="20201126 19:46:04.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:46:04.129" level="INFO">${RESULT} = {'source_diff': 20.002338638999998, 'source': 'DUT_IC', 'event': 'FALLING', 'time': 20.022121222, 'diff': 20.002338638999998}</msg>
<status status="PASS" starttime="20201126 19:46:04.128" endtime="20201126 19:46:04.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.133" level="INFO">NAME: philip-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:04.132" endtime="20201126 19:46:04.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.135" level="INFO">VALUE: 20.002338638999998</msg>
<status status="PASS" starttime="20201126 19:46:04.134" endtime="20201126 19:46:04.136"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.130" endtime="20201126 19:46:04.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:46:04.140" endtime="20201126 19:46:04.159"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.138" endtime="20201126 19:46:04.160"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.137" endtime="20201126 19:46:04.160"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.799" endtime="20201126 19:46:04.160"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>30000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:04.169" endtime="20201126 19:46:34.184"></status>
</kw>
<msg timestamp="20201126 19:46:34.185" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:04.168" endtime="20201126 19:46:34.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.190" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:34.187" endtime="20201126 19:46:34.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:34.192" endtime="20201126 19:46:34.196"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.165" endtime="20201126 19:46:34.197"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.163" endtime="20201126 19:46:34.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.206" level="INFO">NAME: dut-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:34.204" endtime="20201126 19:46:34.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.210" level="INFO">VALUE: ['30.000031']</msg>
<status status="PASS" starttime="20201126 19:46:34.208" endtime="20201126 19:46:34.211"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.199" endtime="20201126 19:46:34.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:34.225" endtime="20201126 19:46:34.490"></status>
</kw>
<msg timestamp="20201126 19:46:34.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 30.023208097, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:34.222" endtime="20201126 19:46:34.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 30.023208097, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:34.492" endtime="20201126 19:46:34.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:34.495" endtime="20201126 19:46:34.497"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.217" endtime="20201126 19:46:34.498"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.213" endtime="20201126 19:46:34.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:46:34.501" level="INFO">${PHILIP_RES} = [{'time': 30.023208097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 30.003492055000002, 'source_diff': 30.003492055000002}]</msg>
<status status="PASS" starttime="20201126 19:46:34.499" endtime="20201126 19:46:34.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:46:34.503" level="INFO">${RESULT} = {'source_diff': 30.003492055000002, 'source': 'DUT_IC', 'event': 'FALLING', 'time': 30.023208097, 'diff': 30.003492055000002}</msg>
<status status="PASS" starttime="20201126 19:46:34.502" endtime="20201126 19:46:34.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.507" level="INFO">NAME: philip-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:34.506" endtime="20201126 19:46:34.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.509" level="INFO">VALUE: 30.003492055000002</msg>
<status status="PASS" starttime="20201126 19:46:34.508" endtime="20201126 19:46:34.510"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.504" endtime="20201126 19:46:34.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:46:34.514" endtime="20201126 19:46:34.533"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.512" endtime="20201126 19:46:34.534"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.511" endtime="20201126 19:46:34.534"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.161" endtime="20201126 19:46:34.534"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>40000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:34.543" endtime="20201126 19:47:14.558"></status>
</kw>
<msg timestamp="20201126 19:47:14.559" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:34.542" endtime="20201126 19:47:14.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.564" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:47:14.561" endtime="20201126 19:47:14.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:14.567" endtime="20201126 19:47:14.570"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.539" endtime="20201126 19:47:14.571"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.537" endtime="20201126 19:47:14.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.580" level="INFO">NAME: dut-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:47:14.578" endtime="20201126 19:47:14.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.584" level="INFO">VALUE: ['40.000031']</msg>
<status status="PASS" starttime="20201126 19:47:14.582" endtime="20201126 19:47:14.585"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.573" endtime="20201126 19:47:14.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:14.599" endtime="20201126 19:47:14.854"></status>
</kw>
<msg timestamp="20201126 19:47:14.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 40.0242885, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201126 19:47:14.596" endtime="20201126 19:47:14.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 40.0242885, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201126 19:47:14.856" endtime="20201126 19:47:14.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:14.863" endtime="20201126 19:47:14.865"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.591" endtime="20201126 19:47:14.865"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.587" endtime="20201126 19:47:14.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:47:14.868" level="INFO">${PHILIP_RES} = [{'time': 40.0242885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 40.004642597, 'source_diff': 40.004642597}]</msg>
<status status="PASS" starttime="20201126 19:47:14.866" endtime="20201126 19:47:14.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:47:14.871" level="INFO">${RESULT} = {'source_diff': 40.004642597, 'source': 'DUT_IC', 'event': 'FALLING', 'time': 40.0242885, 'diff': 40.004642597}</msg>
<status status="PASS" starttime="20201126 19:47:14.869" endtime="20201126 19:47:14.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.876" level="INFO">NAME: philip-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:47:14.875" endtime="20201126 19:47:14.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.878" level="INFO">VALUE: 40.004642597</msg>
<status status="PASS" starttime="20201126 19:47:14.877" endtime="20201126 19:47:14.878"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.872" endtime="20201126 19:47:14.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:47:14.882" endtime="20201126 19:47:14.902"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.881" endtime="20201126 19:47:14.902"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.880" endtime="20201126 19:47:14.903"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.535" endtime="20201126 19:47:14.903"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>50000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:14.912" endtime="20201126 19:48:04.928"></status>
</kw>
<msg timestamp="20201126 19:48:04.929" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:47:14.910" endtime="20201126 19:48:04.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:48:04.934" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:48:04.931" endtime="20201126 19:48:04.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:04.936" endtime="20201126 19:48:04.939"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.907" endtime="20201126 19:48:04.941"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.906" endtime="20201126 19:48:04.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:48:04.950" level="INFO">NAME: dut-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:48:04.948" endtime="20201126 19:48:04.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:48:04.954" level="INFO">VALUE: ['50.000031']</msg>
<status status="PASS" starttime="20201126 19:48:04.952" endtime="20201126 19:48:04.955"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:04.943" endtime="20201126 19:48:04.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:04.969" endtime="20201126 19:48:05.225"></status>
</kw>
<msg timestamp="20201126 19:48:05.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 50.025269139, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:48:04.966" endtime="20201126 19:48:05.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:48:05.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 50.025269139, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:48:05.227" endtime="20201126 19:48:05.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:05.231" endtime="20201126 19:48:05.233"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:04.960" endtime="20201126 19:48:05.234"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:04.957" endtime="20201126 19:48:05.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:48:05.238" level="INFO">${PHILIP_RES} = [{'time': 50.025269139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 50.005801306, 'source_diff': 50.005801306}]</msg>
<status status="PASS" starttime="20201126 19:48:05.235" endtime="20201126 19:48:05.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:48:05.241" level="INFO">${RESULT} = {'source_diff': 50.005801306, 'source': 'DUT_IC', 'event': 'FALLING', 'time': 50.025269139, 'diff': 50.005801306}</msg>
<status status="PASS" starttime="20201126 19:48:05.239" endtime="20201126 19:48:05.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:48:05.246" level="INFO">NAME: philip-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:48:05.245" endtime="20201126 19:48:05.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:48:05.249" level="INFO">VALUE: 50.005801306</msg>
<status status="PASS" starttime="20201126 19:48:05.248" endtime="20201126 19:48:05.249"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.242" endtime="20201126 19:48:05.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:48:05.254" endtime="20201126 19:48:05.274"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.252" endtime="20201126 19:48:05.274"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.251" endtime="20201126 19:48:05.275"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.904" endtime="20201126 19:48:05.275"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>59000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:05.284" endtime="20201126 19:49:04.300"></status>
</kw>
<msg timestamp="20201126 19:49:04.301" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:48:05.282" endtime="20201126 19:49:04.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.306" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:04.303" endtime="20201126 19:49:04.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:04.308" endtime="20201126 19:49:04.311"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.279" endtime="20201126 19:49:04.312"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.277" endtime="20201126 19:49:04.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.321" level="INFO">NAME: dut-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:04.319" endtime="20201126 19:49:04.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.326" level="INFO">VALUE: ['59.000031']</msg>
<status status="PASS" starttime="20201126 19:49:04.324" endtime="20201126 19:49:04.326"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.314" endtime="20201126 19:49:04.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:04.340" endtime="20201126 19:49:04.591"></status>
</kw>
<msg timestamp="20201126 19:49:04.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 59.026200875, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:04.337" endtime="20201126 19:49:04.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 59.026200875, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:04.592" endtime="20201126 19:49:04.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:04.595" endtime="20201126 19:49:04.597"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.332" endtime="20201126 19:49:04.598"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.329" endtime="20201126 19:49:04.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:04.600" level="INFO">${PHILIP_RES} = [{'time': 59.026200875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 59.006838639, 'source_diff': 59.006838639}]</msg>
<status status="PASS" starttime="20201126 19:49:04.599" endtime="20201126 19:49:04.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:04.603" level="INFO">${RESULT} = {'source_diff': 59.006838639, 'source': 'DUT_IC', 'event': 'FALLING', 'time': 59.026200875, 'diff': 59.006838639}</msg>
<status status="PASS" starttime="20201126 19:49:04.601" endtime="20201126 19:49:04.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.607" level="INFO">NAME: philip-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:04.606" endtime="20201126 19:49:04.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.609" level="INFO">VALUE: 59.006838639</msg>
<status status="PASS" starttime="20201126 19:49:04.608" endtime="20201126 19:49:04.609"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.604" endtime="20201126 19:49:04.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:04.613" endtime="20201126 19:49:04.633"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.612" endtime="20201126 19:49:04.633"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.611" endtime="20201126 19:49:04.634"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.276" endtime="20201126 19:49:04.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:04.639" endtime="20201126 19:49:04.659"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.637" endtime="20201126 19:49:04.660"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.635" endtime="20201126 19:49:04.660"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:45:31.984" endtime="20201126 19:49:04.660" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:45:30.551" endtime="20201126 19:49:04.664"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201126 19:45:28.538" endtime="20201126 19:49:04.673"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="1" fail="0">dev</stat>
<stat pass="2" fail="0">long</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Drift">tests_ztimer_benchmarks.Drift</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
