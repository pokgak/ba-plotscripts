<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201126 19:49:09.564" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:49:10.131" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:49:10.139" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:49:11.239" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:49:10.130" endtime="20201126 19:49:11.239"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.242" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:49:11.240" endtime="20201126 19:49:11.242"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:10.128" endtime="20201126 19:49:11.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:11.245" endtime="20201126 19:49:11.431"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.244" endtime="20201126 19:49:11.431"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:11.444" endtime="20201126 19:49:11.464"></status>
</kw>
<msg timestamp="20201126 19:49:11.464" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:11.443" endtime="20201126 19:49:11.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.467" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:11.465" endtime="20201126 19:49:11.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.470" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:49:11.468" endtime="20201126 19:49:11.470"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:11.440" endtime="20201126 19:49:11.471"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:11.438" endtime="20201126 19:49:11.472"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.437" endtime="20201126 19:49:11.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:49:11.476" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:49:11.475" endtime="20201126 19:49:11.476"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.473" endtime="20201126 19:49:11.476"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.436" endtime="20201126 19:49:11.477"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.435" endtime="20201126 19:49:11.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:11.477" endtime="20201126 19:49:11.479"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.434" endtime="20201126 19:49:11.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:11.480" endtime="20201126 19:49:11.482"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.432" endtime="20201126 19:49:11.482"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:10.127" endtime="20201126 19:49:11.483"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:11.489" endtime="20201126 19:49:11.508"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.487" endtime="20201126 19:49:11.509"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:11.525" endtime="20201126 19:49:11.544"></status>
</kw>
<msg timestamp="20201126 19:49:11.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:11.522" endtime="20201126 19:49:11.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.547" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:11.545" endtime="20201126 19:49:11.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:49:11.548" endtime="20201126 19:49:11.550"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:11.519" endtime="20201126 19:49:11.551"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:11.516" endtime="20201126 19:49:11.551"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.514" endtime="20201126 19:49:11.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:49:11.555" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:49:11.554" endtime="20201126 19:49:11.556"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.552" endtime="20201126 19:49:11.556"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.513" endtime="20201126 19:49:11.556"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.513" endtime="20201126 19:49:11.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:11.557" endtime="20201126 19:49:11.558"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.511" endtime="20201126 19:49:11.559"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.510" endtime="20201126 19:49:11.559"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.486" endtime="20201126 19:49:11.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:11.567" endtime="20201126 19:49:11.582"></status>
</kw>
<msg timestamp="20201126 19:49:11.583" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:11.565" endtime="20201126 19:49:11.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.586" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:11.585" endtime="20201126 19:49:11.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:11.587" endtime="20201126 19:49:11.589"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.563" endtime="20201126 19:49:11.589"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.561" endtime="20201126 19:49:11.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.594" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201126 19:49:11.593" endtime="20201126 19:49:11.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.596" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201126 19:49:11.595" endtime="20201126 19:49:11.597"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.591" endtime="20201126 19:49:11.597"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:49:11.483" endtime="20201126 19:49:11.598" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:49:09.677" endtime="20201126 19:49:11.601"></status>
</suite>
<suite id="s1-s2" name="Drift" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/04__drift.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:49:11.650" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:49:11.659" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:49:12.793" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:49:11.649" endtime="20201126 19:49:12.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:49:12.797" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:49:12.795" endtime="20201126 19:49:12.797"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.648" endtime="20201126 19:49:12.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:12.800" endtime="20201126 19:49:13.021"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:12.798" endtime="20201126 19:49:13.022"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:13.034" endtime="20201126 19:49:13.052"></status>
</kw>
<msg timestamp="20201126 19:49:13.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['o RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:13.032" endtime="20201126 19:49:13.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:13.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['o RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:13.053" endtime="20201126 19:49:13.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:49:13.058" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:49:13.056" endtime="20201126 19:49:13.058"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:13.030" endtime="20201126 19:49:13.059"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:13.028" endtime="20201126 19:49:13.059"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.027" endtime="20201126 19:49:13.060"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:49:13.063" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:49:13.063" endtime="20201126 19:49:13.064"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.060" endtime="20201126 19:49:13.064"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.026" endtime="20201126 19:49:13.064"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.025" endtime="20201126 19:49:13.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:13.065" endtime="20201126 19:49:13.066"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.024" endtime="20201126 19:49:13.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:13.068" endtime="20201126 19:49:13.069"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.023" endtime="20201126 19:49:13.070"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:11.646" endtime="20201126 19:49:13.070"></status>
</kw>
<test id="s1-s2-t1" name="Measure Drift Template">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:13.076" endtime="20201126 19:49:13.096"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.074" endtime="20201126 19:49:13.097"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:13.110" endtime="20201126 19:49:13.127"></status>
</kw>
<msg timestamp="20201126 19:49:13.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:13.108" endtime="20201126 19:49:13.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:13.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:13.129" endtime="20201126 19:49:13.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:49:13.133" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:49:13.131" endtime="20201126 19:49:13.134"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:13.106" endtime="20201126 19:49:13.134"></status>
</kw>
<status status="FAIL" starttime="20201126 19:49:13.103" endtime="20201126 19:49:13.135"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.102" endtime="20201126 19:49:13.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:49:13.139" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:49:13.138" endtime="20201126 19:49:13.139"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.136" endtime="20201126 19:49:13.139"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.101" endtime="20201126 19:49:13.140"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.101" endtime="20201126 19:49:13.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:13.140" endtime="20201126 19:49:13.142"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.099" endtime="20201126 19:49:13.143"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.098" endtime="20201126 19:49:13.143"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.073" endtime="20201126 19:49:13.143"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:13.152" endtime="20201126 19:49:14.173"></status>
</kw>
<msg timestamp="20201126 19:49:14.174" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:13.150" endtime="20201126 19:49:14.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:14.179" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:14.176" endtime="20201126 19:49:14.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:14.181" endtime="20201126 19:49:14.186"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.148" endtime="20201126 19:49:14.187"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.146" endtime="20201126 19:49:14.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:14.196" level="INFO">NAME: dut-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:14.194" endtime="20201126 19:49:14.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:14.201" level="INFO">VALUE: ['1.000031']</msg>
<status status="PASS" starttime="20201126 19:49:14.199" endtime="20201126 19:49:14.201"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.189" endtime="20201126 19:49:14.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:14.216" endtime="20201126 19:49:14.482"></status>
</kw>
<msg timestamp="20201126 19:49:14.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064723208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.064724, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201126 19:49:14.213" endtime="20201126 19:49:14.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:14.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064723208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.064724, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201126 19:49:14.484" endtime="20201126 19:49:14.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:14.486" endtime="20201126 19:49:14.488"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.207" endtime="20201126 19:49:14.489"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.204" endtime="20201126 19:49:14.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:14.491" level="INFO">${PHILIP_RES} = [{'time': 1.064724, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000792, 'source_diff': 1.000000792}]</msg>
<status status="PASS" starttime="20201126 19:49:14.490" endtime="20201126 19:49:14.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:14.494" level="INFO">${RESULT} = {'source_diff': 1.000000792, 'event': 'FALLING', 'source': 'DUT_IC', 'time': 1.064724, 'diff': 1.000000792}</msg>
<status status="PASS" starttime="20201126 19:49:14.492" endtime="20201126 19:49:14.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:14.498" level="INFO">NAME: philip-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:14.497" endtime="20201126 19:49:14.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:14.500" level="INFO">VALUE: 1.000000792</msg>
<status status="PASS" starttime="20201126 19:49:14.499" endtime="20201126 19:49:14.500"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.495" endtime="20201126 19:49:14.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:14.505" endtime="20201126 19:49:14.524"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.503" endtime="20201126 19:49:14.525"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.502" endtime="20201126 19:49:14.525"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:13.144" endtime="20201126 19:49:14.525"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:14.534" endtime="20201126 19:49:24.550"></status>
</kw>
<msg timestamp="20201126 19:49:24.551" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:14.532" endtime="20201126 19:49:24.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:24.556" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:24.553" endtime="20201126 19:49:24.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:24.558" endtime="20201126 19:49:24.561"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.529" endtime="20201126 19:49:24.563"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.527" endtime="20201126 19:49:24.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:24.574" level="INFO">NAME: dut-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:24.570" endtime="20201126 19:49:24.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:24.578" level="INFO">VALUE: ['10.000031']</msg>
<status status="PASS" starttime="20201126 19:49:24.576" endtime="20201126 19:49:24.579"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.565" endtime="20201126 19:49:24.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:24.593" endtime="20201126 19:49:24.848"></status>
</kw>
<msg timestamp="20201126 19:49:24.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018803319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.018525639, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:24.590" endtime="20201126 19:49:24.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:24.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018803319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.018525639, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:24.850" endtime="20201126 19:49:24.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:24.853" endtime="20201126 19:49:24.854"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.585" endtime="20201126 19:49:24.855"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.581" endtime="20201126 19:49:24.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:24.858" level="INFO">${PHILIP_RES} = [{'time': 10.018525639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.99972232, 'source_diff': 9.99972232}]</msg>
<status status="PASS" starttime="20201126 19:49:24.856" endtime="20201126 19:49:24.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:24.860" level="INFO">${RESULT} = {'source_diff': 9.99972232, 'event': 'FALLING', 'source': 'DUT_IC', 'time': 10.018525639, 'diff': 9.99972232}</msg>
<status status="PASS" starttime="20201126 19:49:24.859" endtime="20201126 19:49:24.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:24.865" level="INFO">NAME: philip-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:24.864" endtime="20201126 19:49:24.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:24.867" level="INFO">VALUE: 9.99972232</msg>
<status status="PASS" starttime="20201126 19:49:24.866" endtime="20201126 19:49:24.867"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.861" endtime="20201126 19:49:24.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:24.871" endtime="20201126 19:49:24.890"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.869" endtime="20201126 19:49:24.891"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.868" endtime="20201126 19:49:24.891"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:14.526" endtime="20201126 19:49:24.891"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>20000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:24.900" endtime="20201126 19:49:44.918"></status>
</kw>
<msg timestamp="20201126 19:49:44.919" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:24.898" endtime="20201126 19:49:44.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:44.924" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:44.921" endtime="20201126 19:49:44.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:44.926" endtime="20201126 19:49:44.929"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.896" endtime="20201126 19:49:44.930"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.894" endtime="20201126 19:49:44.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:44.939" level="INFO">NAME: dut-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:44.937" endtime="20201126 19:49:44.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:44.944" level="INFO">VALUE: ['20.000061']</msg>
<status status="PASS" starttime="20201126 19:49:44.942" endtime="20201126 19:49:44.944"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:44.932" endtime="20201126 19:49:44.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:44.961" endtime="20201126 19:49:45.211"></status>
</kw>
<msg timestamp="20201126 19:49:45.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.021516431, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:44.957" endtime="20201126 19:49:45.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:45.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.021516431, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:49:45.213" endtime="20201126 19:49:45.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:45.216" endtime="20201126 19:49:45.217"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:44.950" endtime="20201126 19:49:45.218"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:44.947" endtime="20201126 19:49:45.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:45.221" level="INFO">${PHILIP_RES} = [{'time': 20.021516431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 19.999419737, 'source_diff': 19.999419737}]</msg>
<status status="PASS" starttime="20201126 19:49:45.219" endtime="20201126 19:49:45.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:45.223" level="INFO">${RESULT} = {'source_diff': 19.999419737, 'event': 'FALLING', 'source': 'DUT_IC', 'time': 20.021516431, 'diff': 19.999419737}</msg>
<status status="PASS" starttime="20201126 19:49:45.222" endtime="20201126 19:49:45.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:45.228" level="INFO">NAME: philip-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:45.227" endtime="20201126 19:49:45.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:45.230" level="INFO">VALUE: 19.999419737</msg>
<status status="PASS" starttime="20201126 19:49:45.229" endtime="20201126 19:49:45.230"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:45.224" endtime="20201126 19:49:45.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:45.234" endtime="20201126 19:49:45.253"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:45.233" endtime="20201126 19:49:45.254"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:45.231" endtime="20201126 19:49:45.254"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:24.892" endtime="20201126 19:49:45.255"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>30000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:45.263" endtime="20201126 19:50:15.280"></status>
</kw>
<msg timestamp="20201126 19:50:15.281" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000030'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:45.261" endtime="20201126 19:50:15.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:50:15.286" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000030'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:50:15.283" endtime="20201126 19:50:15.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:15.289" endtime="20201126 19:50:15.292"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:45.259" endtime="20201126 19:50:15.293"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:45.257" endtime="20201126 19:50:15.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:50:15.302" level="INFO">NAME: dut-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:50:15.300" endtime="20201126 19:50:15.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:50:15.306" level="INFO">VALUE: ['30.000030']</msg>
<status status="PASS" starttime="20201126 19:50:15.304" endtime="20201126 19:50:15.307"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.295" endtime="20201126 19:50:15.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:15.321" endtime="20201126 19:50:15.581"></status>
</kw>
<msg timestamp="20201126 19:50:15.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 30.020236333, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:50:15.318" endtime="20201126 19:50:15.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:50:15.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 30.020236333, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:50:15.582" endtime="20201126 19:50:15.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:15.585" endtime="20201126 19:50:15.588"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.313" endtime="20201126 19:50:15.588"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.309" endtime="20201126 19:50:15.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:50:15.591" level="INFO">${PHILIP_RES} = [{'time': 30.020236333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 29.999080305, 'source_diff': 29.999080305}]</msg>
<status status="PASS" starttime="20201126 19:50:15.590" endtime="20201126 19:50:15.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:50:15.594" level="INFO">${RESULT} = {'source_diff': 29.999080305, 'event': 'FALLING', 'source': 'DUT_IC', 'time': 30.020236333, 'diff': 29.999080305}</msg>
<status status="PASS" starttime="20201126 19:50:15.592" endtime="20201126 19:50:15.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:50:15.598" level="INFO">NAME: philip-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:50:15.597" endtime="20201126 19:50:15.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:50:15.600" level="INFO">VALUE: 29.999080305</msg>
<status status="PASS" starttime="20201126 19:50:15.599" endtime="20201126 19:50:15.600"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.595" endtime="20201126 19:50:15.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:50:15.604" endtime="20201126 19:50:15.624"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.603" endtime="20201126 19:50:15.624"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.602" endtime="20201126 19:50:15.625"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:45.255" endtime="20201126 19:50:15.625"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>40000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:15.634" endtime="20201126 19:50:55.648"></status>
</kw>
<msg timestamp="20201126 19:50:55.649" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:50:15.632" endtime="20201126 19:50:55.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:50:55.654" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:50:55.651" endtime="20201126 19:50:55.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:55.656" endtime="20201126 19:50:55.659"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.629" endtime="20201126 19:50:55.660"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.627" endtime="20201126 19:50:55.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:50:55.669" level="INFO">NAME: dut-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:50:55.667" endtime="20201126 19:50:55.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:50:55.674" level="INFO">VALUE: ['40.000061']</msg>
<status status="PASS" starttime="20201126 19:50:55.672" endtime="20201126 19:50:55.674"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.662" endtime="20201126 19:50:55.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:55.689" endtime="20201126 19:50:55.944"></status>
</kw>
<msg timestamp="20201126 19:50:55.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020686847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 40.019476597, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:50:55.686" endtime="20201126 19:50:55.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:50:55.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020686847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 40.019476597, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:50:55.945" endtime="20201126 19:50:55.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:55.948" endtime="20201126 19:50:55.950"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.680" endtime="20201126 19:50:55.950"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.677" endtime="20201126 19:50:55.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:50:55.953" level="INFO">${PHILIP_RES} = [{'time': 40.019476597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 39.99878975, 'source_diff': 39.99878975}]</msg>
<status status="PASS" starttime="20201126 19:50:55.952" endtime="20201126 19:50:55.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:50:55.956" level="INFO">${RESULT} = {'source_diff': 39.99878975, 'event': 'FALLING', 'source': 'DUT_IC', 'time': 40.019476597, 'diff': 39.99878975}</msg>
<status status="PASS" starttime="20201126 19:50:55.954" endtime="20201126 19:50:55.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:50:55.961" level="INFO">NAME: philip-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:50:55.960" endtime="20201126 19:50:55.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:50:55.963" level="INFO">VALUE: 39.99878975</msg>
<status status="PASS" starttime="20201126 19:50:55.962" endtime="20201126 19:50:55.963"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.957" endtime="20201126 19:50:55.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:50:55.968" endtime="20201126 19:50:55.987"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.966" endtime="20201126 19:50:55.987"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.965" endtime="20201126 19:50:55.988"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:15.626" endtime="20201126 19:50:55.988"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>50000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:50:55.997" endtime="20201126 19:51:46.008"></status>
</kw>
<msg timestamp="20201126 19:51:46.009" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:50:55.995" endtime="20201126 19:51:46.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:51:46.014" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:51:46.011" endtime="20201126 19:51:46.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:46.017" endtime="20201126 19:51:46.020"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.992" endtime="20201126 19:51:46.021"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.990" endtime="20201126 19:51:46.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:51:46.030" level="INFO">NAME: dut-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:51:46.028" endtime="20201126 19:51:46.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:51:46.034" level="INFO">VALUE: ['50.000061']</msg>
<status status="PASS" starttime="20201126 19:51:46.032" endtime="20201126 19:51:46.035"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.023" endtime="20201126 19:51:46.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:46.049" endtime="20201126 19:51:46.310"></status>
</kw>
<msg timestamp="20201126 19:51:46.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 50.018876111, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:51:46.046" endtime="20201126 19:51:46.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:51:46.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 50.018876111, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:51:46.312" endtime="20201126 19:51:46.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:46.315" endtime="20201126 19:51:46.317"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.041" endtime="20201126 19:51:46.317"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.037" endtime="20201126 19:51:46.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:51:46.320" level="INFO">${PHILIP_RES} = [{'time': 50.018876111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 49.998483054999994, 'source_diff': 49.998483054999994}]</msg>
<status status="PASS" starttime="20201126 19:51:46.318" endtime="20201126 19:51:46.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:51:46.323" level="INFO">${RESULT} = {'source_diff': 49.998483054999994, 'event': 'FALLING', 'source': 'DUT_IC', 'time': 50.018876111, 'diff': 49.998483054999994}</msg>
<status status="PASS" starttime="20201126 19:51:46.321" endtime="20201126 19:51:46.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:51:46.327" level="INFO">NAME: philip-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:51:46.326" endtime="20201126 19:51:46.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:51:46.329" level="INFO">VALUE: 49.998483054999994</msg>
<status status="PASS" starttime="20201126 19:51:46.328" endtime="20201126 19:51:46.329"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.323" endtime="20201126 19:51:46.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:51:46.334" endtime="20201126 19:51:46.354"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.332" endtime="20201126 19:51:46.354"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.331" endtime="20201126 19:51:46.355"></status>
</kw>
<status status="PASS" starttime="20201126 19:50:55.989" endtime="20201126 19:51:46.355"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>59000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:51:46.363" endtime="20201126 19:52:45.378"></status>
</kw>
<msg timestamp="20201126 19:52:45.379" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:51:46.362" endtime="20201126 19:52:45.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:52:45.384" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:52:45.381" endtime="20201126 19:52:45.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:52:45.386" endtime="20201126 19:52:45.389"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.359" endtime="20201126 19:52:45.390"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.357" endtime="20201126 19:52:45.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:52:45.400" level="INFO">NAME: dut-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:52:45.398" endtime="20201126 19:52:45.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:52:45.404" level="INFO">VALUE: ['59.000061']</msg>
<status status="PASS" starttime="20201126 19:52:45.402" endtime="20201126 19:52:45.405"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:45.393" endtime="20201126 19:52:45.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:52:45.419" endtime="20201126 19:52:45.672"></status>
</kw>
<msg timestamp="20201126 19:52:45.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019070542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 59.017273208, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:52:45.416" endtime="20201126 19:52:45.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:52:45.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019070542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 59.017273208, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:52:45.674" endtime="20201126 19:52:45.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:52:45.677" endtime="20201126 19:52:45.678"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:45.411" endtime="20201126 19:52:45.679"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:45.407" endtime="20201126 19:52:45.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:52:45.682" level="INFO">${PHILIP_RES} = [{'time': 59.017273208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 58.998202666, 'source_diff': 58.998202666}]</msg>
<status status="PASS" starttime="20201126 19:52:45.680" endtime="20201126 19:52:45.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:52:45.684" level="INFO">${RESULT} = {'source_diff': 58.998202666, 'event': 'FALLING', 'source': 'DUT_IC', 'time': 59.017273208, 'diff': 58.998202666}</msg>
<status status="PASS" starttime="20201126 19:52:45.683" endtime="20201126 19:52:45.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:52:45.688" level="INFO">NAME: philip-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:52:45.687" endtime="20201126 19:52:45.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:52:45.690" level="INFO">VALUE: 58.998202666</msg>
<status status="PASS" starttime="20201126 19:52:45.689" endtime="20201126 19:52:45.691"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:45.685" endtime="20201126 19:52:45.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:52:45.695" endtime="20201126 19:52:45.714"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:45.693" endtime="20201126 19:52:45.715"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:45.692" endtime="20201126 19:52:45.715"></status>
</kw>
<status status="PASS" starttime="20201126 19:51:46.356" endtime="20201126 19:52:45.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:52:45.720" endtime="20201126 19:52:45.740"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:45.718" endtime="20201126 19:52:45.741"></status>
</kw>
<status status="PASS" starttime="20201126 19:52:45.717" endtime="20201126 19:52:45.741"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:49:13.070" endtime="20201126 19:52:45.742" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:49:11.606" endtime="20201126 19:52:45.745"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201126 19:49:09.567" endtime="20201126 19:52:45.754"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="1" fail="0">dev</stat>
<stat pass="2" fail="0">long</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Drift">tests_xtimer_benchmarks.Drift</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
