<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201126 19:45:28.830" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:45:29.388" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:45:29.396" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:45:30.476" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:45:29.387" endtime="20201126 19:45:30.477"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.480" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:45:30.478" endtime="20201126 19:45:30.480"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:29.386" endtime="20201126 19:45:30.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:30.483" endtime="20201126 19:45:30.667"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.481" endtime="20201126 19:45:30.667"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.680" endtime="20201126 19:45:30.699"></status>
</kw>
<msg timestamp="20201126 19:45:30.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['e to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.678" endtime="20201126 19:45:30.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['e to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.701" endtime="20201126 19:45:30.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.705" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:30.703" endtime="20201126 19:45:30.706"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:30.676" endtime="20201126 19:45:30.706"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:30.674" endtime="20201126 19:45:30.707"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.673" endtime="20201126 19:45:30.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:30.711" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:30.710" endtime="20201126 19:45:30.711"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.708" endtime="20201126 19:45:30.711"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.672" endtime="20201126 19:45:30.712"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.671" endtime="20201126 19:45:30.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.713" endtime="20201126 19:45:30.714"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.670" endtime="20201126 19:45:30.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.715" endtime="20201126 19:45:30.717"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.668" endtime="20201126 19:45:30.717"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:29.384" endtime="20201126 19:45:30.718"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:30.724" endtime="20201126 19:45:30.743"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.723" endtime="20201126 19:45:30.744"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.759" endtime="20201126 19:45:30.774"></status>
</kw>
<msg timestamp="20201126 19:45:30.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.756" endtime="20201126 19:45:30.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.776" endtime="20201126 19:45:30.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.780" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:30.778" endtime="20201126 19:45:30.780"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:30.753" endtime="20201126 19:45:30.781"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:30.751" endtime="20201126 19:45:30.781"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.749" endtime="20201126 19:45:30.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:30.785" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:30.785" endtime="20201126 19:45:30.786"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.783" endtime="20201126 19:45:30.786"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.748" endtime="20201126 19:45:30.786"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.748" endtime="20201126 19:45:30.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.787" endtime="20201126 19:45:30.789"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.746" endtime="20201126 19:45:30.789"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.745" endtime="20201126 19:45:30.790"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.721" endtime="20201126 19:45:30.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.797" endtime="20201126 19:45:30.818"></status>
</kw>
<msg timestamp="20201126 19:45:30.818" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.795" endtime="20201126 19:45:30.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.821" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:30.819" endtime="20201126 19:45:30.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:30.822" endtime="20201126 19:45:30.823"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.793" endtime="20201126 19:45:30.824"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.791" endtime="20201126 19:45:30.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.829" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201126 19:45:30.828" endtime="20201126 19:45:30.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.831" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201126 19:45:30.830" endtime="20201126 19:45:30.831"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.825" endtime="20201126 19:45:30.832"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:45:30.718" endtime="20201126 19:45:30.832" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:45:28.941" endtime="20201126 19:45:30.835"></status>
</suite>
<suite id="s1-s2" name="Drift" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/04__drift.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:45:30.885" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:45:30.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:45:32.031" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:45:30.883" endtime="20201126 19:45:32.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:45:32.034" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:45:32.033" endtime="20201126 19:45:32.035"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.882" endtime="20201126 19:45:32.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:32.037" endtime="20201126 19:45:32.257"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.036" endtime="20201126 19:45:32.257"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.269" endtime="20201126 19:45:32.287"></status>
</kw>
<msg timestamp="20201126 19:45:32.287" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:32.268" endtime="20201126 19:45:32.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:32.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:32.289" endtime="20201126 19:45:32.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:32.293" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:32.291" endtime="20201126 19:45:32.293"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:32.265" endtime="20201126 19:45:32.294"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:32.263" endtime="20201126 19:45:32.295"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.262" endtime="20201126 19:45:32.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:32.299" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:32.298" endtime="20201126 19:45:32.299"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.296" endtime="20201126 19:45:32.299"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.261" endtime="20201126 19:45:32.299"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.261" endtime="20201126 19:45:32.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.300" endtime="20201126 19:45:32.302"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.259" endtime="20201126 19:45:32.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.303" endtime="20201126 19:45:32.305"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.258" endtime="20201126 19:45:32.305"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:30.881" endtime="20201126 19:45:32.305"></status>
</kw>
<test id="s1-s2-t1" name="Measure Drift Template">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:32.311" endtime="20201126 19:45:32.332"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.310" endtime="20201126 19:45:32.332"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.345" endtime="20201126 19:45:32.362"></status>
</kw>
<msg timestamp="20201126 19:45:32.363" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:32.344" endtime="20201126 19:45:32.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:32.366" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:32.364" endtime="20201126 19:45:32.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:32.369" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:32.367" endtime="20201126 19:45:32.369"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:32.341" endtime="20201126 19:45:32.370"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:32.338" endtime="20201126 19:45:32.370"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.337" endtime="20201126 19:45:32.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:32.374" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:32.373" endtime="20201126 19:45:32.374"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.371" endtime="20201126 19:45:32.375"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.336" endtime="20201126 19:45:32.375"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.336" endtime="20201126 19:45:32.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.376" endtime="20201126 19:45:32.377"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.335" endtime="20201126 19:45:32.378"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.333" endtime="20201126 19:45:32.378"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.308" endtime="20201126 19:45:32.378"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:32.387" endtime="20201126 19:45:33.402"></status>
</kw>
<msg timestamp="20201126 19:45:33.403" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:32.385" endtime="20201126 19:45:33.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.408" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:33.405" endtime="20201126 19:45:33.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:33.410" endtime="20201126 19:45:33.415"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.383" endtime="20201126 19:45:33.416"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.381" endtime="20201126 19:45:33.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.425" level="INFO">NAME: dut-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:33.423" endtime="20201126 19:45:33.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.430" level="INFO">VALUE: ['1.000031']</msg>
<status status="PASS" starttime="20201126 19:45:33.428" endtime="20201126 19:45:33.430"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.418" endtime="20201126 19:45:33.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:33.445" endtime="20201126 19:45:33.706"></status>
</kw>
<msg timestamp="20201126 19:45:33.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064858847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.062333514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:45:33.442" endtime="20201126 19:45:33.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064858847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.062333514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:45:33.707" endtime="20201126 19:45:33.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:33.710" endtime="20201126 19:45:33.712"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.436" endtime="20201126 19:45:33.712"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.433" endtime="20201126 19:45:33.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:45:33.715" level="INFO">${PHILIP_RES} = [{'time': 1.062333514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.9974746670000001, 'source_diff': 0.9974746670000001}]</msg>
<status status="PASS" starttime="20201126 19:45:33.714" endtime="20201126 19:45:33.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:45:33.718" level="INFO">${RESULT} = {'source_diff': 0.9974746670000001, 'time': 1.062333514, 'diff': 0.9974746670000001, 'event': 'FALLING', 'source': 'DUT_IC'}</msg>
<status status="PASS" starttime="20201126 19:45:33.716" endtime="20201126 19:45:33.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.722" level="INFO">NAME: philip-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:33.721" endtime="20201126 19:45:33.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.724" level="INFO">VALUE: 0.9974746670000001</msg>
<status status="PASS" starttime="20201126 19:45:33.723" endtime="20201126 19:45:33.724"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.719" endtime="20201126 19:45:33.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:33.728" endtime="20201126 19:45:33.748"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.727" endtime="20201126 19:45:33.748"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.726" endtime="20201126 19:45:33.749"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:32.379" endtime="20201126 19:45:33.749"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:33.757" endtime="20201126 19:45:43.749"></status>
</kw>
<msg timestamp="20201126 19:45:43.750" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:33.756" endtime="20201126 19:45:43.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.755" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:43.752" endtime="20201126 19:45:43.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:43.757" endtime="20201126 19:45:43.761"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.753" endtime="20201126 19:45:43.762"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.751" endtime="20201126 19:45:43.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.773" level="INFO">NAME: dut-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:43.769" endtime="20201126 19:45:43.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:43.777" level="INFO">VALUE: ['10.000061']</msg>
<status status="PASS" starttime="20201126 19:45:43.775" endtime="20201126 19:45:43.778"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.764" endtime="20201126 19:45:43.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:43.792" endtime="20201126 19:45:44.045"></status>
</kw>
<msg timestamp="20201126 19:45:44.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020449653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.993936403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:45:43.789" endtime="20201126 19:45:44.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:44.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020449653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.993936403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:45:44.047" endtime="20201126 19:45:44.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:44.050" endtime="20201126 19:45:44.051"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.784" endtime="20201126 19:45:44.052"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:43.780" endtime="20201126 19:45:44.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:45:44.055" level="INFO">${PHILIP_RES} = [{'time': 9.993936403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.97348675, 'source_diff': 9.97348675}]</msg>
<status status="PASS" starttime="20201126 19:45:44.053" endtime="20201126 19:45:44.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:45:44.057" level="INFO">${RESULT} = {'source_diff': 9.97348675, 'time': 9.993936403, 'diff': 9.97348675, 'event': 'FALLING', 'source': 'DUT_IC'}</msg>
<status status="PASS" starttime="20201126 19:45:44.056" endtime="20201126 19:45:44.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:44.061" level="INFO">NAME: philip-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:44.060" endtime="20201126 19:45:44.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:44.063" level="INFO">VALUE: 9.97348675</msg>
<status status="PASS" starttime="20201126 19:45:44.062" endtime="20201126 19:45:44.064"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:44.058" endtime="20201126 19:45:44.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:44.068" endtime="20201126 19:45:44.087"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:44.066" endtime="20201126 19:45:44.088"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:44.065" endtime="20201126 19:45:44.088"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.750" endtime="20201126 19:45:44.088"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>20000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:44.097" endtime="20201126 19:46:04.061"></status>
</kw>
<msg timestamp="20201126 19:46:04.062" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:44.096" endtime="20201126 19:46:04.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.067" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:04.064" endtime="20201126 19:46:04.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:04.069" endtime="20201126 19:46:04.073"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:44.093" endtime="20201126 19:46:04.074"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:44.091" endtime="20201126 19:46:04.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.084" level="INFO">NAME: dut-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:04.081" endtime="20201126 19:46:04.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.088" level="INFO">VALUE: ['20.000061']</msg>
<status status="PASS" starttime="20201126 19:46:04.086" endtime="20201126 19:46:04.089"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.076" endtime="20201126 19:46:04.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:04.106" endtime="20201126 19:46:04.356"></status>
</kw>
<msg timestamp="20201126 19:46:04.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 19.967364542, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:04.103" endtime="20201126 19:46:04.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 19.967364542, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:04.358" endtime="20201126 19:46:04.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:04.361" endtime="20201126 19:46:04.362"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.095" endtime="20201126 19:46:04.363"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.091" endtime="20201126 19:46:04.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:46:04.366" level="INFO">${PHILIP_RES} = [{'time': 19.967364542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 19.946991263999998, 'source_diff': 19.946991263999998}]</msg>
<status status="PASS" starttime="20201126 19:46:04.364" endtime="20201126 19:46:04.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:46:04.368" level="INFO">${RESULT} = {'source_diff': 19.946991263999998, 'time': 19.967364542, 'diff': 19.946991263999998, 'event': 'FALLING', 'source': 'DUT_IC'}</msg>
<status status="PASS" starttime="20201126 19:46:04.367" endtime="20201126 19:46:04.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.372" level="INFO">NAME: philip-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:04.371" endtime="20201126 19:46:04.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:04.374" level="INFO">VALUE: 19.946991263999998</msg>
<status status="PASS" starttime="20201126 19:46:04.374" endtime="20201126 19:46:04.375"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.369" endtime="20201126 19:46:04.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:46:04.379" endtime="20201126 19:46:04.398"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.377" endtime="20201126 19:46:04.399"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.376" endtime="20201126 19:46:04.399"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:44.089" endtime="20201126 19:46:04.399"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>30000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:04.408" endtime="20201126 19:46:34.345"></status>
</kw>
<msg timestamp="20201126 19:46:34.346" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:04.407" endtime="20201126 19:46:34.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.351" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:34.348" endtime="20201126 19:46:34.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:34.353" endtime="20201126 19:46:34.357"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.404" endtime="20201126 19:46:34.358"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.402" endtime="20201126 19:46:34.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.367" level="INFO">NAME: dut-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:34.365" endtime="20201126 19:46:34.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.371" level="INFO">VALUE: ['30.000061']</msg>
<status status="PASS" starttime="20201126 19:46:34.369" endtime="20201126 19:46:34.372"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.360" endtime="20201126 19:46:34.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:34.386" endtime="20201126 19:46:34.642"></status>
</kw>
<msg timestamp="20201126 19:46:34.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.941913292, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:34.383" endtime="20201126 19:46:34.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.941913292, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:34.643" endtime="20201126 19:46:34.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:34.646" endtime="20201126 19:46:34.649"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.378" endtime="20201126 19:46:34.649"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.374" endtime="20201126 19:46:34.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:46:34.652" level="INFO">${PHILIP_RES} = [{'time': 29.941913292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 29.920445555999997, 'source_diff': 29.920445555999997}]</msg>
<status status="PASS" starttime="20201126 19:46:34.651" endtime="20201126 19:46:34.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:46:34.655" level="INFO">${RESULT} = {'source_diff': 29.920445555999997, 'time': 29.941913292, 'diff': 29.920445555999997, 'event': 'FALLING', 'source': 'DUT_IC'}</msg>
<status status="PASS" starttime="20201126 19:46:34.653" endtime="20201126 19:46:34.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.659" level="INFO">NAME: philip-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:34.658" endtime="20201126 19:46:34.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:34.661" level="INFO">VALUE: 29.920445555999997</msg>
<status status="PASS" starttime="20201126 19:46:34.660" endtime="20201126 19:46:34.661"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.656" endtime="20201126 19:46:34.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:46:34.665" endtime="20201126 19:46:34.685"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.664" endtime="20201126 19:46:34.685"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.663" endtime="20201126 19:46:34.685"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:04.400" endtime="20201126 19:46:34.686"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>40000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:34.694" endtime="20201126 19:47:14.599"></status>
</kw>
<msg timestamp="20201126 19:47:14.600" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:34.693" endtime="20201126 19:47:14.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.605" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:47:14.602" endtime="20201126 19:47:14.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:14.607" endtime="20201126 19:47:14.610"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.690" endtime="20201126 19:47:14.612"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.688" endtime="20201126 19:47:14.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.621" level="INFO">NAME: dut-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:47:14.619" endtime="20201126 19:47:14.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.625" level="INFO">VALUE: ['40.000061']</msg>
<status status="PASS" starttime="20201126 19:47:14.623" endtime="20201126 19:47:14.626"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.614" endtime="20201126 19:47:14.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:14.640" endtime="20201126 19:47:14.896"></status>
</kw>
<msg timestamp="20201126 19:47:14.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 39.910383153, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:47:14.637" endtime="20201126 19:47:14.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 39.910383153, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:47:14.898" endtime="20201126 19:47:14.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:14.901" endtime="20201126 19:47:14.903"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.631" endtime="20201126 19:47:14.903"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.628" endtime="20201126 19:47:14.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:47:14.906" level="INFO">${PHILIP_RES} = [{'time': 39.910383153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 39.890681514, 'source_diff': 39.890681514}]</msg>
<status status="PASS" starttime="20201126 19:47:14.904" endtime="20201126 19:47:14.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:47:14.908" level="INFO">${RESULT} = {'source_diff': 39.890681514, 'time': 39.910383153, 'diff': 39.890681514, 'event': 'FALLING', 'source': 'DUT_IC'}</msg>
<status status="PASS" starttime="20201126 19:47:14.907" endtime="20201126 19:47:14.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.914" level="INFO">NAME: philip-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:47:14.913" endtime="20201126 19:47:14.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:47:14.916" level="INFO">VALUE: 39.890681514</msg>
<status status="PASS" starttime="20201126 19:47:14.915" endtime="20201126 19:47:14.916"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.909" endtime="20201126 19:47:14.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:47:14.920" endtime="20201126 19:47:14.939"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.919" endtime="20201126 19:47:14.940"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.918" endtime="20201126 19:47:14.940"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:34.686" endtime="20201126 19:47:14.941"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>50000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:14.949" endtime="20201126 19:48:04.830"></status>
</kw>
<msg timestamp="20201126 19:48:04.831" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:47:14.948" endtime="20201126 19:48:04.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:48:04.836" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000061'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:48:04.833" endtime="20201126 19:48:04.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:04.838" endtime="20201126 19:48:04.841"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.945" endtime="20201126 19:48:04.843"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.943" endtime="20201126 19:48:04.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:48:04.852" level="INFO">NAME: dut-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:48:04.850" endtime="20201126 19:48:04.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:48:04.856" level="INFO">VALUE: ['50.000061']</msg>
<status status="PASS" starttime="20201126 19:48:04.854" endtime="20201126 19:48:04.857"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:04.845" endtime="20201126 19:48:04.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:04.871" endtime="20201126 19:48:05.133"></status>
</kw>
<msg timestamp="20201126 19:48:05.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 49.887291097, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:48:04.868" endtime="20201126 19:48:05.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:48:05.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 49.887291097, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:48:05.135" endtime="20201126 19:48:05.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:05.138" endtime="20201126 19:48:05.139"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:04.862" endtime="20201126 19:48:05.140"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:04.859" endtime="20201126 19:48:05.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:48:05.143" level="INFO">${PHILIP_RES} = [{'time': 49.887291097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 49.865143055000004, 'source_diff': 49.865143055000004}]</msg>
<status status="PASS" starttime="20201126 19:48:05.141" endtime="20201126 19:48:05.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:48:05.145" level="INFO">${RESULT} = {'source_diff': 49.865143055000004, 'time': 49.887291097, 'diff': 49.865143055000004, 'event': 'FALLING', 'source': 'DUT_IC'}</msg>
<status status="PASS" starttime="20201126 19:48:05.144" endtime="20201126 19:48:05.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:48:05.150" level="INFO">NAME: philip-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:48:05.149" endtime="20201126 19:48:05.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:48:05.152" level="INFO">VALUE: 49.865143055000004</msg>
<status status="PASS" starttime="20201126 19:48:05.151" endtime="20201126 19:48:05.152"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.146" endtime="20201126 19:48:05.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:48:05.157" endtime="20201126 19:48:05.176"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.154" endtime="20201126 19:48:05.177"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.153" endtime="20201126 19:48:05.177"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:14.941" endtime="20201126 19:48:05.178"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>59000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:05.187" endtime="20201126 19:49:04.041"></status>
</kw>
<msg timestamp="20201126 19:49:04.042" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:48:05.185" endtime="20201126 19:49:04.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.047" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000031'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:04.044" endtime="20201126 19:49:04.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:04.049" endtime="20201126 19:49:04.052"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.182" endtime="20201126 19:49:04.053"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.180" endtime="20201126 19:49:04.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.062" level="INFO">NAME: dut-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:04.060" endtime="20201126 19:49:04.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.066" level="INFO">VALUE: ['59.000031']</msg>
<status status="PASS" starttime="20201126 19:49:04.065" endtime="20201126 19:49:04.067"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.055" endtime="20201126 19:49:04.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:04.081" endtime="20201126 19:49:04.338"></status>
</kw>
<msg timestamp="20201126 19:49:04.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.86230325, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:49:04.078" endtime="20201126 19:49:04.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.86230325, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:49:04.339" endtime="20201126 19:49:04.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:04.342" endtime="20201126 19:49:04.344"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.073" endtime="20201126 19:49:04.344"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.069" endtime="20201126 19:49:04.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:04.347" level="INFO">${PHILIP_RES} = [{'time': 58.86230325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 58.842136055999994, 'source_diff': 58.842136055999994}]</msg>
<status status="PASS" starttime="20201126 19:49:04.345" endtime="20201126 19:49:04.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:04.349" level="INFO">${RESULT} = {'source_diff': 58.842136055999994, 'time': 58.86230325, 'diff': 58.842136055999994, 'event': 'FALLING', 'source': 'DUT_IC'}</msg>
<status status="PASS" starttime="20201126 19:49:04.348" endtime="20201126 19:49:04.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.354" level="INFO">NAME: philip-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:04.353" endtime="20201126 19:49:04.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:04.356" level="INFO">VALUE: 58.842136055999994</msg>
<status status="PASS" starttime="20201126 19:49:04.355" endtime="20201126 19:49:04.356"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.350" endtime="20201126 19:49:04.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:04.361" endtime="20201126 19:49:04.380"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.359" endtime="20201126 19:49:04.381"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.358" endtime="20201126 19:49:04.381"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:05.178" endtime="20201126 19:49:04.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:04.386" endtime="20201126 19:49:04.406"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.384" endtime="20201126 19:49:04.407"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:04.383" endtime="20201126 19:49:04.407"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:45:32.306" endtime="20201126 19:49:04.408" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:45:30.841" endtime="20201126 19:49:04.411"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201126 19:45:28.833" endtime="20201126 19:49:04.420"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="1" fail="0">dev</stat>
<stat pass="2" fail="0">long</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Drift">tests_ztimer_benchmarks.Drift</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
