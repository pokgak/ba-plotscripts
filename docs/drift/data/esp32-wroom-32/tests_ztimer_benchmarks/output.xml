<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201126 19:45:33.366" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:45:33.938" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:45:33.946" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:45:34.929" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:45:33.936" endtime="20201126 19:45:34.930"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:45:34.933" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:45:34.931" endtime="20201126 19:45:34.933"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.935" endtime="20201126 19:45:34.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:34.936" endtime="20201126 19:45:35.122"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:34.934" endtime="20201126 19:45:35.123"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:35.135" endtime="20201126 19:45:35.156"></status>
</kw>
<msg timestamp="20201126 19:45:35.156" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:35.134" endtime="20201126 19:45:35.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:35.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:35.158" endtime="20201126 19:45:35.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:35.162" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:35.160" endtime="20201126 19:45:35.163"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:35.131" endtime="20201126 19:45:35.163"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:35.129" endtime="20201126 19:45:35.164"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.128" endtime="20201126 19:45:35.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:35.168" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:35.168" endtime="20201126 19:45:35.169"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.165" endtime="20201126 19:45:35.169"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.127" endtime="20201126 19:45:35.169"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.126" endtime="20201126 19:45:35.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:35.170" endtime="20201126 19:45:35.172"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.125" endtime="20201126 19:45:35.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:35.173" endtime="20201126 19:45:35.175"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.123" endtime="20201126 19:45:35.175"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:33.933" endtime="20201126 19:45:35.175"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:35.182" endtime="20201126 19:45:35.202"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.181" endtime="20201126 19:45:35.202"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:35.217" endtime="20201126 19:45:35.235"></status>
</kw>
<msg timestamp="20201126 19:45:35.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:35.216" endtime="20201126 19:45:35.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:35.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:35.237" endtime="20201126 19:45:35.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:35.241" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:35.239" endtime="20201126 19:45:35.242"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:35.212" endtime="20201126 19:45:35.242"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:35.209" endtime="20201126 19:45:35.243"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.208" endtime="20201126 19:45:35.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:35.247" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:35.246" endtime="20201126 19:45:35.248"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.244" endtime="20201126 19:45:35.248"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.207" endtime="20201126 19:45:35.248"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.206" endtime="20201126 19:45:35.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:35.249" endtime="20201126 19:45:35.251"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.205" endtime="20201126 19:45:35.251"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.203" endtime="20201126 19:45:35.252"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.179" endtime="20201126 19:45:35.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:35.259" endtime="20201126 19:45:35.272"></status>
</kw>
<msg timestamp="20201126 19:45:35.273" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:35.258" endtime="20201126 19:45:35.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:35.275" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:35.274" endtime="20201126 19:45:35.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:35.276" endtime="20201126 19:45:35.278"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.255" endtime="20201126 19:45:35.279"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.253" endtime="20201126 19:45:35.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:35.284" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201126 19:45:35.283" endtime="20201126 19:45:35.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:35.286" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201126 19:45:35.285" endtime="20201126 19:45:35.286"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.280" endtime="20201126 19:45:35.287"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:45:35.176" endtime="20201126 19:45:35.288" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:45:33.478" endtime="20201126 19:45:35.291"></status>
</suite>
<suite id="s1-s2" name="Drift" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/04__drift.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201126 19:45:35.344" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201126 19:45:35.352" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201126 19:45:36.318" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201126 19:45:35.343" endtime="20201126 19:45:36.319"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201126 19:45:36.321" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201126 19:45:36.320" endtime="20201126 19:45:36.321"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.341" endtime="20201126 19:45:36.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:36.324" endtime="20201126 19:45:36.548"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.323" endtime="20201126 19:45:36.548"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:36.560" endtime="20201126 19:45:36.580"></status>
</kw>
<msg timestamp="20201126 19:45:36.581" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:36.559" endtime="20201126 19:45:36.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:36.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:36.582" endtime="20201126 19:45:36.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:36.588" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:36.585" endtime="20201126 19:45:36.588"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:36.557" endtime="20201126 19:45:36.589"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:36.554" endtime="20201126 19:45:36.589"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.553" endtime="20201126 19:45:36.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:36.593" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:36.593" endtime="20201126 19:45:36.594"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.591" endtime="20201126 19:45:36.594"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.552" endtime="20201126 19:45:36.594"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.552" endtime="20201126 19:45:36.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:36.595" endtime="20201126 19:45:36.597"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.550" endtime="20201126 19:45:36.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:36.598" endtime="20201126 19:45:36.600"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.549" endtime="20201126 19:45:36.600"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:35.340" endtime="20201126 19:45:36.601"></status>
</kw>
<test id="s1-s2-t1" name="Measure Drift Template">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:36.608" endtime="20201126 19:45:36.627"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.605" endtime="20201126 19:45:36.628"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:36.642" endtime="20201126 19:45:36.658"></status>
</kw>
<msg timestamp="20201126 19:45:36.658" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:36.640" endtime="20201126 19:45:36.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:36.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:36.660" endtime="20201126 19:45:36.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201126 19:45:36.664" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201126 19:45:36.662" endtime="20201126 19:45:36.665"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:36.637" endtime="20201126 19:45:36.665"></status>
</kw>
<status status="FAIL" starttime="20201126 19:45:36.635" endtime="20201126 19:45:36.666"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.633" endtime="20201126 19:45:36.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201126 19:45:36.670" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201126 19:45:36.669" endtime="20201126 19:45:36.670"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.667" endtime="20201126 19:45:36.671"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.632" endtime="20201126 19:45:36.671"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.632" endtime="20201126 19:45:36.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:36.672" endtime="20201126 19:45:36.673"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.630" endtime="20201126 19:45:36.674"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.629" endtime="20201126 19:45:36.674"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.604" endtime="20201126 19:45:36.674"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:36.684" endtime="20201126 19:45:37.703"></status>
</kw>
<msg timestamp="20201126 19:45:37.704" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000022'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:36.682" endtime="20201126 19:45:37.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:37.709" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000022'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:37.706" endtime="20201126 19:45:37.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:37.712" endtime="20201126 19:45:37.717"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.679" endtime="20201126 19:45:37.718"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.677" endtime="20201126 19:45:37.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:37.728" level="INFO">NAME: dut-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:37.726" endtime="20201126 19:45:37.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:37.733" level="INFO">VALUE: ['1.000022']</msg>
<status status="PASS" starttime="20201126 19:45:37.731" endtime="20201126 19:45:37.734"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:37.721" endtime="20201126 19:45:37.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:37.749" endtime="20201126 19:45:38.037"></status>
</kw>
<msg timestamp="20201126 19:45:38.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065029319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.065138569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:45:37.746" endtime="20201126 19:45:38.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:38.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065029319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.065138569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201126 19:45:38.038" endtime="20201126 19:45:38.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:38.041" endtime="20201126 19:45:38.051"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:37.740" endtime="20201126 19:45:38.051"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:37.736" endtime="20201126 19:45:38.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:45:38.054" level="INFO">${PHILIP_RES} = [{'time': 1.065138569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.00010925, 'source_diff': 1.00010925}]</msg>
<status status="PASS" starttime="20201126 19:45:38.052" endtime="20201126 19:45:38.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:45:38.057" level="INFO">${RESULT} = {'source': 'DUT_IC', 'time': 1.065138569, 'source_diff': 1.00010925, 'event': 'FALLING', 'diff': 1.00010925}</msg>
<status status="PASS" starttime="20201126 19:45:38.055" endtime="20201126 19:45:38.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:38.061" level="INFO">NAME: philip-result-1000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:38.060" endtime="20201126 19:45:38.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:38.063" level="INFO">VALUE: 1.00010925</msg>
<status status="PASS" starttime="20201126 19:45:38.062" endtime="20201126 19:45:38.063"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:38.057" endtime="20201126 19:45:38.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:38.067" endtime="20201126 19:45:38.086"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:38.066" endtime="20201126 19:45:38.087"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:38.064" endtime="20201126 19:45:38.087"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:36.675" endtime="20201126 19:45:38.088"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:38.097" endtime="20201126 19:45:48.115"></status>
</kw>
<msg timestamp="20201126 19:45:48.116" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:38.095" endtime="20201126 19:45:48.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:48.121" level="INFO">${RESULT} = {'cmd': 'drift: 10000000 us', 'msg': ['drift 10000000\r\n'], 'data': ['10.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:48.118" endtime="20201126 19:45:48.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:48.123" endtime="20201126 19:45:48.127"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:38.093" endtime="20201126 19:45:48.128"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:38.091" endtime="20201126 19:45:48.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:48.139" level="INFO">NAME: dut-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:48.135" endtime="20201126 19:45:48.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:48.143" level="INFO">VALUE: ['10.000018']</msg>
<status status="PASS" starttime="20201126 19:45:48.141" endtime="20201126 19:45:48.144"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.130" endtime="20201126 19:45:48.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:48.158" endtime="20201126 19:45:48.414"></status>
</kw>
<msg timestamp="20201126 19:45:48.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01871225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.01965275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201126 19:45:48.155" endtime="20201126 19:45:48.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:45:48.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01871225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.01965275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201126 19:45:48.415" endtime="20201126 19:45:48.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:48.418" endtime="20201126 19:45:48.420"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.150" endtime="20201126 19:45:48.421"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.146" endtime="20201126 19:45:48.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:45:48.423" level="INFO">${PHILIP_RES} = [{'time': 10.01965275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 10.0009405, 'source_diff': 10.0009405}]</msg>
<status status="PASS" starttime="20201126 19:45:48.422" endtime="20201126 19:45:48.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:45:48.426" level="INFO">${RESULT} = {'source': 'DUT_IC', 'time': 10.01965275, 'source_diff': 10.0009405, 'event': 'FALLING', 'diff': 10.0009405}</msg>
<status status="PASS" starttime="20201126 19:45:48.424" endtime="20201126 19:45:48.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:45:48.430" level="INFO">NAME: philip-result-10000000-repeat</msg>
<status status="PASS" starttime="20201126 19:45:48.429" endtime="20201126 19:45:48.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:45:48.432" level="INFO">VALUE: 10.0009405</msg>
<status status="PASS" starttime="20201126 19:45:48.431" endtime="20201126 19:45:48.432"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.427" endtime="20201126 19:45:48.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:45:48.437" endtime="20201126 19:45:48.456"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.435" endtime="20201126 19:45:48.456"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.434" endtime="20201126 19:45:48.457"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:38.089" endtime="20201126 19:45:48.457"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>20000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:45:48.466" endtime="20201126 19:46:08.484"></status>
</kw>
<msg timestamp="20201126 19:46:08.485" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:45:48.464" endtime="20201126 19:46:08.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:08.491" level="INFO">${RESULT} = {'cmd': 'drift: 20000000 us', 'msg': ['drift 20000000\r\n'], 'data': ['20.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:08.488" endtime="20201126 19:46:08.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:08.493" endtime="20201126 19:46:08.496"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.462" endtime="20201126 19:46:08.497"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.460" endtime="20201126 19:46:08.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:08.506" level="INFO">NAME: dut-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:08.504" endtime="20201126 19:46:08.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:08.510" level="INFO">VALUE: ['20.000018']</msg>
<status status="PASS" starttime="20201126 19:46:08.508" endtime="20201126 19:46:08.511"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.499" endtime="20201126 19:46:08.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:08.528" endtime="20201126 19:46:08.783"></status>
</kw>
<msg timestamp="20201126 19:46:08.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.020228083, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:08.524" endtime="20201126 19:46:08.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:08.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.020228083, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:08.785" endtime="20201126 19:46:08.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:08.788" endtime="20201126 19:46:08.789"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.517" endtime="20201126 19:46:08.790"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.513" endtime="20201126 19:46:08.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:46:08.793" level="INFO">${PHILIP_RES} = [{'time': 20.020228083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 20.00186368, 'source_diff': 20.00186368}]</msg>
<status status="PASS" starttime="20201126 19:46:08.791" endtime="20201126 19:46:08.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:46:08.795" level="INFO">${RESULT} = {'source': 'DUT_IC', 'time': 20.020228083, 'source_diff': 20.00186368, 'event': 'FALLING', 'diff': 20.00186368}</msg>
<status status="PASS" starttime="20201126 19:46:08.794" endtime="20201126 19:46:08.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:08.799" level="INFO">NAME: philip-result-20000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:08.798" endtime="20201126 19:46:08.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:08.801" level="INFO">VALUE: 20.00186368</msg>
<status status="PASS" starttime="20201126 19:46:08.801" endtime="20201126 19:46:08.802"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.796" endtime="20201126 19:46:08.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:46:08.806" endtime="20201126 19:46:08.825"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.804" endtime="20201126 19:46:08.826"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.803" endtime="20201126 19:46:08.826"></status>
</kw>
<status status="PASS" starttime="20201126 19:45:48.458" endtime="20201126 19:46:08.826"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>30000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:08.835" endtime="20201126 19:46:38.853"></status>
</kw>
<msg timestamp="20201126 19:46:38.854" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:08.834" endtime="20201126 19:46:38.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:38.860" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:38.857" endtime="20201126 19:46:38.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:38.862" endtime="20201126 19:46:38.865"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.831" endtime="20201126 19:46:38.866"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.829" endtime="20201126 19:46:38.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:38.875" level="INFO">NAME: dut-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:38.873" endtime="20201126 19:46:38.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:38.880" level="INFO">VALUE: ['30.000018']</msg>
<status status="PASS" starttime="20201126 19:46:38.878" endtime="20201126 19:46:38.880"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:38.868" endtime="20201126 19:46:38.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:38.895" endtime="20201126 19:46:39.148"></status>
</kw>
<msg timestamp="20201126 19:46:39.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018688972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 30.021476597, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:38.892" endtime="20201126 19:46:39.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:46:39.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018688972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 30.021476597, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:46:39.149" endtime="20201126 19:46:39.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:39.152" endtime="20201126 19:46:39.155"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:38.886" endtime="20201126 19:46:39.156"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:38.883" endtime="20201126 19:46:39.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:46:39.159" level="INFO">${PHILIP_RES} = [{'time': 30.021476597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 30.002787625, 'source_diff': 30.002787625}]</msg>
<status status="PASS" starttime="20201126 19:46:39.157" endtime="20201126 19:46:39.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:46:39.161" level="INFO">${RESULT} = {'source': 'DUT_IC', 'time': 30.021476597, 'source_diff': 30.002787625, 'event': 'FALLING', 'diff': 30.002787625}</msg>
<status status="PASS" starttime="20201126 19:46:39.159" endtime="20201126 19:46:39.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:46:39.165" level="INFO">NAME: philip-result-30000000-repeat</msg>
<status status="PASS" starttime="20201126 19:46:39.164" endtime="20201126 19:46:39.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:46:39.167" level="INFO">VALUE: 30.002787625</msg>
<status status="PASS" starttime="20201126 19:46:39.166" endtime="20201126 19:46:39.168"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:39.162" endtime="20201126 19:46:39.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:46:39.172" endtime="20201126 19:46:39.191"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:39.170" endtime="20201126 19:46:39.192"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:39.169" endtime="20201126 19:46:39.192"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:08.827" endtime="20201126 19:46:39.192"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>40000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:46:39.201" endtime="20201126 19:47:19.220"></status>
</kw>
<msg timestamp="20201126 19:47:19.221" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:46:39.199" endtime="20201126 19:47:19.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:47:19.226" level="INFO">${RESULT} = {'cmd': 'drift: 40000000 us', 'msg': ['drift 40000000\r\n'], 'data': ['40.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:47:19.223" endtime="20201126 19:47:19.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:19.228" endtime="20201126 19:47:19.231"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:39.197" endtime="20201126 19:47:19.233"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:39.194" endtime="20201126 19:47:19.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:47:19.242" level="INFO">NAME: dut-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:47:19.240" endtime="20201126 19:47:19.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:47:19.246" level="INFO">VALUE: ['40.000018']</msg>
<status status="PASS" starttime="20201126 19:47:19.244" endtime="20201126 19:47:19.247"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.235" endtime="20201126 19:47:19.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:19.261" endtime="20201126 19:47:19.517"></status>
</kw>
<msg timestamp="20201126 19:47:19.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 40.022404528, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:47:19.258" endtime="20201126 19:47:19.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:47:19.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 40.022404528, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:47:19.518" endtime="20201126 19:47:19.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:19.521" endtime="20201126 19:47:19.523"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.252" endtime="20201126 19:47:19.523"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.249" endtime="20201126 19:47:19.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:47:19.526" level="INFO">${PHILIP_RES} = [{'time': 40.022404528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 40.0037115, 'source_diff': 40.0037115}]</msg>
<status status="PASS" starttime="20201126 19:47:19.525" endtime="20201126 19:47:19.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:47:19.529" level="INFO">${RESULT} = {'source': 'DUT_IC', 'time': 40.022404528, 'source_diff': 40.0037115, 'event': 'FALLING', 'diff': 40.0037115}</msg>
<status status="PASS" starttime="20201126 19:47:19.527" endtime="20201126 19:47:19.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:47:19.534" level="INFO">NAME: philip-result-40000000-repeat</msg>
<status status="PASS" starttime="20201126 19:47:19.533" endtime="20201126 19:47:19.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:47:19.536" level="INFO">VALUE: 40.0037115</msg>
<status status="PASS" starttime="20201126 19:47:19.535" endtime="20201126 19:47:19.536"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.530" endtime="20201126 19:47:19.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:47:19.540" endtime="20201126 19:47:19.560"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.539" endtime="20201126 19:47:19.560"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.538" endtime="20201126 19:47:19.561"></status>
</kw>
<status status="PASS" starttime="20201126 19:46:39.193" endtime="20201126 19:47:19.561"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>50000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:47:19.570" endtime="20201126 19:48:09.588"></status>
</kw>
<msg timestamp="20201126 19:48:09.589" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:47:19.568" endtime="20201126 19:48:09.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:48:09.594" level="INFO">${RESULT} = {'cmd': 'drift: 50000000 us', 'msg': ['drift 50000000\r\n'], 'data': ['50.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:48:09.591" endtime="20201126 19:48:09.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:09.596" endtime="20201126 19:48:09.599"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.565" endtime="20201126 19:48:09.600"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.563" endtime="20201126 19:48:09.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:48:09.609" level="INFO">NAME: dut-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:48:09.607" endtime="20201126 19:48:09.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:48:09.614" level="INFO">VALUE: ['50.000018']</msg>
<status status="PASS" starttime="20201126 19:48:09.612" endtime="20201126 19:48:09.614"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.602" endtime="20201126 19:48:09.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:09.629" endtime="20201126 19:48:09.885"></status>
</kw>
<msg timestamp="20201126 19:48:09.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 50.023333653, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:48:09.626" endtime="20201126 19:48:09.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:48:09.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 50.023333653, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201126 19:48:09.886" endtime="20201126 19:48:09.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:09.893" endtime="20201126 19:48:09.895"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.620" endtime="20201126 19:48:09.895"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.617" endtime="20201126 19:48:09.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:48:09.898" level="INFO">${PHILIP_RES} = [{'time': 50.023333653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 50.004636222, 'source_diff': 50.004636222}]</msg>
<status status="PASS" starttime="20201126 19:48:09.897" endtime="20201126 19:48:09.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:48:09.901" level="INFO">${RESULT} = {'source': 'DUT_IC', 'time': 50.023333653, 'source_diff': 50.004636222, 'event': 'FALLING', 'diff': 50.004636222}</msg>
<status status="PASS" starttime="20201126 19:48:09.899" endtime="20201126 19:48:09.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:48:09.905" level="INFO">NAME: philip-result-50000000-repeat</msg>
<status status="PASS" starttime="20201126 19:48:09.904" endtime="20201126 19:48:09.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:48:09.907" level="INFO">VALUE: 50.004636222</msg>
<status status="PASS" starttime="20201126 19:48:09.906" endtime="20201126 19:48:09.907"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.901" endtime="20201126 19:48:09.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:48:09.912" endtime="20201126 19:48:09.932"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.910" endtime="20201126 19:48:09.932"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.909" endtime="20201126 19:48:09.933"></status>
</kw>
<status status="PASS" starttime="20201126 19:47:19.562" endtime="20201126 19:48:09.933"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>59000000</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:48:09.941" endtime="20201126 19:49:08.960"></status>
</kw>
<msg timestamp="20201126 19:49:08.961" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:48:09.940" endtime="20201126 19:49:08.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:08.966" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000018'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201126 19:49:08.964" endtime="20201126 19:49:08.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:08.969" endtime="20201126 19:49:08.972"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.937" endtime="20201126 19:49:08.973"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.935" endtime="20201126 19:49:08.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:08.982" level="INFO">NAME: dut-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:08.980" endtime="20201126 19:49:08.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:08.987" level="INFO">VALUE: ['59.000018']</msg>
<status status="PASS" starttime="20201126 19:49:08.985" endtime="20201126 19:49:08.987"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:08.975" endtime="20201126 19:49:08.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:09.002" endtime="20201126 19:49:09.263"></status>
</kw>
<msg timestamp="20201126 19:49:09.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 59.0236405, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201126 19:49:08.999" endtime="20201126 19:49:09.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201126 19:49:09.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 59.0236405, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201126 19:49:09.265" endtime="20201126 19:49:09.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201126 19:49:09.268" endtime="20201126 19:49:09.269"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:08.993" endtime="20201126 19:49:09.270"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:08.990" endtime="20201126 19:49:09.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201126 19:49:09.273" level="INFO">${PHILIP_RES} = [{'time': 59.0236405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 59.005469514, 'source_diff': 59.005469514}]</msg>
<status status="PASS" starttime="20201126 19:49:09.271" endtime="20201126 19:49:09.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201126 19:49:09.275" level="INFO">${RESULT} = {'source': 'DUT_IC', 'time': 59.0236405, 'source_diff': 59.005469514, 'event': 'FALLING', 'diff': 59.005469514}</msg>
<status status="PASS" starttime="20201126 19:49:09.274" endtime="20201126 19:49:09.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201126 19:49:09.280" level="INFO">NAME: philip-result-59000000-repeat</msg>
<status status="PASS" starttime="20201126 19:49:09.279" endtime="20201126 19:49:09.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201126 19:49:09.282" level="INFO">VALUE: 59.005469514</msg>
<status status="PASS" starttime="20201126 19:49:09.281" endtime="20201126 19:49:09.282"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:09.276" endtime="20201126 19:49:09.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:09.286" endtime="20201126 19:49:09.306"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:09.285" endtime="20201126 19:49:09.306"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:09.284" endtime="20201126 19:49:09.306"></status>
</kw>
<status status="PASS" starttime="20201126 19:48:09.934" endtime="20201126 19:49:09.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201126 19:49:09.311" endtime="20201126 19:49:09.332"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:09.309" endtime="20201126 19:49:09.332"></status>
</kw>
<status status="PASS" starttime="20201126 19:49:09.308" endtime="20201126 19:49:09.333"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>long</tag>
</tags>
<status status="PASS" starttime="20201126 19:45:36.601" endtime="20201126 19:49:09.333" critical="yes"></status>
</test>
<status status="PASS" starttime="20201126 19:45:35.297" endtime="20201126 19:49:09.337"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201126 19:45:33.369" endtime="20201126 19:49:09.348"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="2" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="2" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="1" fail="0">dev</stat>
<stat pass="2" fail="0">long</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="1" fail="0" id="s1-s2" name="Drift">tests_ztimer_benchmarks.Drift</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
