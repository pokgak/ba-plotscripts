<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:53:06.327" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:06.887" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:06.895" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:08.754" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:06.886" endtime="20201112 09:53:08.755"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:08.758" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:08.756" endtime="20201112 09:53:08.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:06.884" endtime="20201112 09:53:08.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:08.761" endtime="20201112 09:53:08.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.759" endtime="20201112 09:53:08.944"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:08.957" endtime="20201112 09:53:08.973"></status>
</kw>
<msg timestamp="20201112 09:53:08.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tes...</msg>
<status status="PASS" starttime="20201112 09:53:08.956" endtime="20201112 09:53:08.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:08.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tes...</msg>
<status status="PASS" starttime="20201112 09:53:08.975" endtime="20201112 09:53:08.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:08.980" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:08.978" endtime="20201112 09:53:08.980"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:08.953" endtime="20201112 09:53:08.981"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:08.950" endtime="20201112 09:53:08.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.949" endtime="20201112 09:53:08.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:08.986" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:08.985" endtime="20201112 09:53:08.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.983" endtime="20201112 09:53:08.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.948" endtime="20201112 09:53:08.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.948" endtime="20201112 09:53:08.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:08.987" endtime="20201112 09:53:08.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.946" endtime="20201112 09:53:08.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:08.990" endtime="20201112 09:53:08.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.945" endtime="20201112 09:53:08.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:06.882" endtime="20201112 09:53:08.992"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:08.999" endtime="20201112 09:53:09.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.998" endtime="20201112 09:53:09.019"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:09.034" endtime="20201112 09:53:09.049"></status>
</kw>
<msg timestamp="20201112 09:53:09.050" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:09.032" endtime="20201112 09:53:09.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:09.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:09.051" endtime="20201112 09:53:09.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:09.055" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:09.053" endtime="20201112 09:53:09.056"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:09.030" endtime="20201112 09:53:09.056"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:09.027" endtime="20201112 09:53:09.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.025" endtime="20201112 09:53:09.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:09.061" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:09.060" endtime="20201112 09:53:09.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.058" endtime="20201112 09:53:09.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.025" endtime="20201112 09:53:09.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.024" endtime="20201112 09:53:09.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:09.062" endtime="20201112 09:53:09.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.022" endtime="20201112 09:53:09.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.020" endtime="20201112 09:53:09.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:08.996" endtime="20201112 09:53:09.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:09.073" endtime="20201112 09:53:09.083"></status>
</kw>
<msg timestamp="20201112 09:53:09.083" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:09.071" endtime="20201112 09:53:09.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:09.086" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:09.084" endtime="20201112 09:53:09.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:09.087" endtime="20201112 09:53:09.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.069" endtime="20201112 09:53:09.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.066" endtime="20201112 09:53:09.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:09.094" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:53:09.093" endtime="20201112 09:53:09.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:09.096" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:53:09.095" endtime="20201112 09:53:09.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.090" endtime="20201112 09:53:09.097"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:08.993" endtime="20201112 09:53:09.098" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:06.440" endtime="20201112 09:53:09.103"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:09.159" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:09.167" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:10.505" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:09.158" endtime="20201112 09:53:10.506"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:10.509" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:10.507" endtime="20201112 09:53:10.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.156" endtime="20201112 09:53:10.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:10.512" endtime="20201112 09:53:10.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.511" endtime="20201112 09:53:10.732"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:10.744" endtime="20201112 09:53:10.761"></status>
</kw>
<msg timestamp="20201112 09:53:10.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:10.742" endtime="20201112 09:53:10.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:10.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:10.762" endtime="20201112 09:53:10.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:10.767" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:10.765" endtime="20201112 09:53:10.767"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:10.740" endtime="20201112 09:53:10.768"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:10.738" endtime="20201112 09:53:10.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.737" endtime="20201112 09:53:10.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:10.772" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:10.772" endtime="20201112 09:53:10.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.770" endtime="20201112 09:53:10.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.736" endtime="20201112 09:53:10.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.735" endtime="20201112 09:53:10.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:10.774" endtime="20201112 09:53:10.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.734" endtime="20201112 09:53:10.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:10.777" endtime="20201112 09:53:10.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.732" endtime="20201112 09:53:10.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:09.154" endtime="20201112 09:53:10.779"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:10.785" endtime="20201112 09:53:10.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.784" endtime="20201112 09:53:10.805"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:10.818" endtime="20201112 09:53:10.835"></status>
</kw>
<msg timestamp="20201112 09:53:10.836" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:10.817" endtime="20201112 09:53:10.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:10.838" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:10.837" endtime="20201112 09:53:10.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:10.841" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:10.839" endtime="20201112 09:53:10.841"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:10.814" endtime="20201112 09:53:10.842"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:10.812" endtime="20201112 09:53:10.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.811" endtime="20201112 09:53:10.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:10.847" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:10.846" endtime="20201112 09:53:10.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.844" endtime="20201112 09:53:10.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.810" endtime="20201112 09:53:10.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.809" endtime="20201112 09:53:10.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:10.848" endtime="20201112 09:53:10.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.808" endtime="20201112 09:53:10.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.806" endtime="20201112 09:53:10.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.783" endtime="20201112 09:53:10.851"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:10.854" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:10.861" endtime="20201112 09:53:10.872"></status>
</kw>
<msg timestamp="20201112 09:53:10.873" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:10.860" endtime="20201112 09:53:10.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:10.875" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:10.874" endtime="20201112 09:53:10.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:10.876" endtime="20201112 09:53:10.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.857" endtime="20201112 09:53:10.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.855" endtime="20201112 09:53:10.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:10.886" endtime="20201112 09:53:11.174"></status>
</kw>
<msg timestamp="20201112 09:53:11.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066197167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066197639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:10.884" endtime="20201112 09:53:11.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066197167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066197639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:11.178" endtime="20201112 09:53:11.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.186" endtime="20201112 09:53:11.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.881" endtime="20201112 09:53:11.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.880" endtime="20201112 09:53:11.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.193" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:11.192" endtime="20201112 09:53:11.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.198" level="INFO">VALUE: [{'time': 0.066197167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066197639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066210042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2402999999994169e-05, 'source_diff': 1.2402999999994169e-05}, {'time': 0.066210514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066219, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.066219472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066228167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.066228639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066236014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999990028e-06, 'source_diff': 7.374999999990028e-06}, {'time': 0.066236486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066242847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999996397e-06, 'source_diff': 6.360999999996397e-06}, {'time': 0.066243319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066257167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.384800000001074e-05, 'source_diff': 1.384800000001074e-05}, {'time': 0.066257639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.0662695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.066269986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.066274347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999994397e-06, 'source_diff': 4.360999999994397e-06}, {'time': 0.066274819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066289333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000007132e-05, 'source_diff': 1.4514000000007132e-05}, {'time': 0.066289819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.066300333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.066300819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.066312181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1362000000000871e-05, 'source_diff': 1.1362000000000871e-05}, {'time': 0.066312653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066326347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999994655e-05, 'source_diff': 1.3693999999994655e-05}, {'time': 0.066326819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066333264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4450000000076946e-06, 'source_diff': 6.4450000000076946e-06}, {'time': 0.066333736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066341861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.066342333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066356361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.066356833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066369875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3041999999990894e-05, 'source_diff': 1.3041999999990894e-05}, {'time': 0.066370347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066375181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.834000000009109e-06, 'source_diff': 4.834000000009109e-06}, {'time': 0.066375653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066382347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999987654e-06, 'source_diff': 6.693999999987654e-06}, {'time': 0.066382833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.066396681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847999999996863e-05, 'source_diff': 1.3847999999996863e-05}, {'time': 0.066397167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.066406194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.02699999999479e-06, 'source_diff': 9.02699999999479e-06}, {'time': 0.066406667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.066417347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.066417833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.066422181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.066422667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.066434111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1443999999999344e-05, 'source_diff': 1.1443999999999344e-05}, {'time': 0.066434583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066445028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.0664455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066450861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999995397e-06, 'source_diff': 5.360999999995397e-06}, {'time': 0.066451333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066455708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.066456181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.066464861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.679999999997023e-06, 'source_diff': 8.679999999997023e-06}, {'time': 0.066465333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066474528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000003506e-06, 'source_diff': 9.195000000003506e-06}, {'time': 0.066475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066489708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4707999999988286e-05, 'source_diff': 1.4707999999988286e-05}, {'time': 0.066490181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.066502042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.066502514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066508042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.52800000000464e-06, 'source_diff': 5.52800000000464e-06}, {'time': 0.066508514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066522028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999992254e-05, 'source_diff': 1.3513999999992254e-05}, {'time': 0.0665225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066527028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.066527514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.066541069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.355499999999843e-05, 'source_diff': 1.355499999999843e-05}, {'time': 0.066541542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.066553722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180000000000524e-05, 'source_diff': 1.2180000000000524e-05}, {'time': 0.066554194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066568208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4014000000006632e-05, 'source_diff': 1.4014000000006632e-05}, {'time': 0.066568681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.066576111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4299999999888344e-06, 'source_diff': 7.4299999999888344e-06}, {'time': 0.066576583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066589903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.33200000000111e-05, 'source_diff': 1.33200000000111e-05}, {'time': 0.066590375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.066596375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0000000000060005e-06, 'source_diff': 6.0000000000060005e-06}, {'time': 0.066596847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066609056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.066609528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066617889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.066618361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066625597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.235999999993803e-06, 'source_diff': 7.235999999993803e-06}, {'time': 0.066626069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066637056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0987000000003966e-05, 'source_diff': 1.0987000000003966e-05}, {'time': 0.066637528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066651708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.066652194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.066665375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.066665861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.066676389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999995763e-05, 'source_diff': 1.0527999999995763e-05}, {'time': 0.066676861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066685056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.066685528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.066694222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.066694694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066704056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361999999998871e-06, 'source_diff': 9.361999999998871e-06}, {'time': 0.066704528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:11.195" endtime="20201112 09:53:11.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.190" endtime="20201112 09:53:11.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:11.225" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:11.202" endtime="20201112 09:53:11.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.228" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:11.228" endtime="20201112 09:53:11.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.233" level="INFO">VALUE: {'eventtime': [0.066197167, 0.066197639, 0.066210042, 0.066210514, 0.066219, 0.066219472, 0.066228167, 0.066228639, 0.066236014, 0.066236486, 0.066242847, 0.066243319, 0.066257167, 0.066257639, 0.0662695, 0.066269986, 0.066274347, 0.066274819, 0.066289333, 0.066289819, 0.066300333, 0.066300819, 0.066312181, 0.066312653, 0.066326347, 0.066326819, 0.066333264, 0.066333736, 0.066341861, 0.066342333, 0.066356361, 0.066356833, 0.066369875, 0.066370347, 0.066375181, 0.066375653, 0.066382347, 0.066382833, 0.066396681, 0.066397167, 0.066406194, 0.066406667, 0.066417347, 0.066417833, 0.066422181, 0.066422667, 0.066434111, 0.066434583, 0.066445028, 0.0664455, 0.066450861, 0.066451333, 0.066455708, 0.066456181, 0.066464861, 0.066465333, 0.066474528, 0.066475, 0.066489708, 0.066490181, 0.066502042, 0.066502514, 0.066508042, 0.066508514, 0.066522028, 0.0665225, 0.066527028, 0.066527514, 0.066541069, 0.066541542, 0.066553722, 0.066554194, 0.066568208, 0.066568681, 0.066576111, 0.066576583, 0.066589903, 0.066590375, 0.066596375, 0.066596847, 0.066609056, 0.066609528, 0.066617889, 0.066618361, 0.066625597, 0.066626069, 0.066637056, 0.066637528, 0.066651708, 0.066652194, 0.066665375, 0.066665861, 0.066676389, 0.066676861, 0.066685056, 0.066685528, 0.066694222, 0.066694694, 0.066704056, 0.066704528], 'sourcesource_diff': [0, 4.720000000013602e-07, 1.2402999999994169e-05, 4.720000000013602e-07, 8.486000000001992e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 7.374999999990028e-06, 4.720000000013602e-07, 6.360999999996397e-06, 4.720000000013602e-07, 1.384800000001074e-05, 4.7199999998748243e-07, 1.1861000000001898e-05, 4.86000000007869e-07, 4.360999999994397e-06, 4.720000000013602e-07, 1.4514000000007132e-05, 4.859999999939912e-07, 1.0514000000003132e-05, 4.859999999939912e-07, 1.1362000000000871e-05, 4.720000000013602e-07, 1.3693999999994655e-05, 4.720000000013602e-07, 6.4450000000076946e-06, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 1.3041999999990894e-05, 4.720000000013602e-07, 4.834000000009109e-06, 4.720000000013602e-07, 6.693999999987654e-06, 4.86000000007869e-07, 1.3847999999996863e-05, 4.86000000007869e-07, 9.02699999999479e-06, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.859999999939912e-07, 4.34800000000124e-06, 4.86000000007869e-07, 1.1443999999999344e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 5.360999999995397e-06, 4.720000000013602e-07, 4.375000000000906e-06, 4.7300000000083386e-07, 8.679999999997023e-06, 4.720000000013602e-07, 9.195000000003506e-06, 4.720000000013602e-07, 1.4707999999988286e-05, 4.7300000000083386e-07, 1.1861000000001898e-05, 4.720000000013602e-07, 5.52800000000464e-06, 4.720000000013602e-07, 1.3513999999992254e-05, 4.720000000013602e-07, 4.52800000000364e-06, 4.859999999939912e-07, 1.355499999999843e-05, 4.7300000000083386e-07, 1.2180000000000524e-05, 4.720000000013602e-07, 1.4014000000006632e-05, 4.7300000000083386e-07, 7.4299999999888344e-06, 4.720000000013602e-07, 1.33200000000111e-05, 4.7199999998748243e-07, 6.0000000000060005e-06, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.235999999993803e-06, 4.720000000013602e-07, 1.0987000000003966e-05, 4.720000000013602e-07, 1.4180000000002524e-05, 4.859999999939912e-07, 1.3181000000000997e-05, 4.86000000007869e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999998748243e-07, 8.694000000003532e-06, 4.720000000013602e-07, 9.361999999998871e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 1.2402999999994169e-05, 4.720000000013602e-07, 8.486000000001992e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 7.374999999990028e-06, 4.720000000013602e-07, 6.360999999996397e-06, 4.720000000013602e-07, 1.384800000001074e-05, 4.7199999998748243e-07, 1.1861000000001898e-05, 4.86000000007869e-07, 4.360999999994397e-06, 4.720000000013602e-07, 1.4514000000007132e-05, 4.859999999939912e-07, 1.0514000000003132e-05, 4.859999999939912e-07, 1.1362000000000871e-05, 4.720000000013602e-07, 1.3693999999994655e-05, 4.720000000013602e-07, 6.4450000000076946e-06, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 1.3041999999990894e-05, 4.720000000013602e-07, 4.834000000009109e-06, 4.720000000013602e-07, 6.693999999987654e-06, 4.86000000007869e-07, 1.3847999999996863e-05, 4.86000000007869e-07, 9.02699999999479e-06, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.859999999939912e-07, 4.34800000000124e-06, 4.86000000007869e-07, 1.1443999999999344e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 5.360999999995397e-06, 4.720000000013602e-07, 4.375000000000906e-06, 4.7300000000083386e-07, 8.679999999997023e-06, 4.720000000013602e-07, 9.195000000003506e-06, 4.720000000013602e-07, 1.4707999999988286e-05, 4.7300000000083386e-07, 1.1861000000001898e-05, 4.720000000013602e-07, 5.52800000000464e-06, 4.720000000013602e-07, 1.3513999999992254e-05, 4.720000000013602e-07, 4.52800000000364e-06, 4.859999999939912e-07, 1.355499999999843e-05, 4.7300000000083386e-07, 1.2180000000000524e-05, 4.720000000013602e-07, 1.4014000000006632e-05, 4.7300000000083386e-07, 7.4299999999888344e-06, 4.720000000013602e-07, 1.33200000000111e-05, 4.7199999998748243e-07, 6.0000000000060005e-06, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 7.235999999993803e-06, 4.720000000013602e-07, 1.0987000000003966e-05, 4.720000000013602e-07, 1.4180000000002524e-05, 4.859999999939912e-07, 1.3181000000000997e-05, 4.86000000007869e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999998748243e-07, 8.694000000003532e-06, 4.720000000013602e-07, 9.361999999998871e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:11.230" endtime="20201112 09:53:11.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.226" endtime="20201112 09:53:11.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:11.238" level="INFO">${RESULT} = [{'time': 0.066197639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.066210514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:11.235" endtime="20201112 09:53:11.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:11.251" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:11.239" endtime="20201112 09:53:11.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.256" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:11.255" endtime="20201112 09:53:11.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.258" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:11.257" endtime="20201112 09:53:11.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.252" endtime="20201112 09:53:11.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.261" endtime="20201112 09:53:11.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:11.265" endtime="20201112 09:53:11.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.263" endtime="20201112 09:53:11.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.260" endtime="20201112 09:53:11.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.854" endtime="20201112 09:53:11.285"></status>
</kw>
<msg timestamp="20201112 09:53:11.285" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.295" endtime="20201112 09:53:11.305"></status>
</kw>
<msg timestamp="20201112 09:53:11.305" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:11.293" endtime="20201112 09:53:11.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.308" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:11.307" endtime="20201112 09:53:11.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.309" endtime="20201112 09:53:11.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.289" endtime="20201112 09:53:11.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.287" endtime="20201112 09:53:11.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.318" endtime="20201112 09:53:11.606"></status>
</kw>
<msg timestamp="20201112 09:53:11.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:11.316" endtime="20201112 09:53:11.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:11.610" endtime="20201112 09:53:11.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.619" endtime="20201112 09:53:11.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.314" endtime="20201112 09:53:11.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.312" endtime="20201112 09:53:11.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.625" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:11.624" endtime="20201112 09:53:11.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.630" level="INFO">VALUE: [{'time': 0.020470819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020483153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.020483639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020496986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3346999999996889e-05, 'source_diff': 1.3346999999996889e-05}, {'time': 0.020497472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020502056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.020502528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.020515472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020521833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.020522306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.02052675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.020527222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020535833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.020536306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020541375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.020541847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0205495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.020549972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020564347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.020564819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020570833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.020571306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0205815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.020581972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020594014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2042000000000302e-05, 'source_diff': 1.2042000000000302e-05}, {'time': 0.020594486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020608014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.020608486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020621, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.020621486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020627681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999997036e-06, 'source_diff': 6.194999999997036e-06}, {'time': 0.020628153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020640014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.020640486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020648347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.020648819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020655347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.020655819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020666028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.0206665, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020678875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2374999999998498e-05, 'source_diff': 1.2374999999998498e-05}, {'time': 0.020679347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020684361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.020684833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020698028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.0206985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020703014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.0207035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02071825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.020718722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020730681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1959000000002357e-05, 'source_diff': 1.1959000000002357e-05}, {'time': 0.020731167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020735681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.020736167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020741347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.020741833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020756347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.020756833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020761694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.020762167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.02077, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020783028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.0207835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020793528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.020794, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020798167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.020798653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020811181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.020811653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020817194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.020817667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020829181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1513999999997193e-05, 'source_diff': 1.1513999999997193e-05}, {'time': 0.020829653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020844181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.020844653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020858681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.020859153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020870181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.020870653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020879014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.020879486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020884514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.020885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020896361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1360999999997928e-05, 'source_diff': 1.1360999999997928e-05}, {'time': 0.020896833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020907681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.020908167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020920208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2041000000000829e-05, 'source_diff': 1.2041000000000829e-05}, {'time': 0.020920681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020925847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.020926333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020940375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4042000000002303e-05, 'source_diff': 1.4042000000002303e-05}, {'time': 0.020940847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020946194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.020946667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020960542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.020961014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:11.626" endtime="20201112 09:53:11.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.622" endtime="20201112 09:53:11.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:11.656" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:11.633" endtime="20201112 09:53:11.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.660" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:11.659" endtime="20201112 09:53:11.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.664" level="INFO">VALUE: {'eventtime': [0.020470819, 0.020471306, 0.020483153, 0.020483639, 0.020496986, 0.020497472, 0.020502056, 0.020502528, 0.020515, 0.020515472, 0.020521833, 0.020522306, 0.02052675, 0.020527222, 0.020535833, 0.020536306, 0.020541375, 0.020541847, 0.0205495, 0.020549972, 0.020564347, 0.020564819, 0.020570833, 0.020571306, 0.0205815, 0.020581972, 0.020594014, 0.020594486, 0.020608014, 0.020608486, 0.020621, 0.020621486, 0.020627681, 0.020628153, 0.020640014, 0.020640486, 0.020648347, 0.020648819, 0.020655347, 0.020655819, 0.020666028, 0.0206665, 0.020678875, 0.020679347, 0.020684361, 0.020684833, 0.020698028, 0.0206985, 0.020703014, 0.0207035, 0.02071825, 0.020718722, 0.020730681, 0.020731167, 0.020735681, 0.020736167, 0.020741347, 0.020741833, 0.020756347, 0.020756833, 0.020761694, 0.020762167, 0.020769528, 0.02077, 0.020783028, 0.0207835, 0.020793528, 0.020794, 0.020798167, 0.020798653, 0.020811181, 0.020811653, 0.020817194, 0.020817667, 0.020829181, 0.020829653, 0.020844181, 0.020844653, 0.020858681, 0.020859153, 0.020870181, 0.020870653, 0.020879014, 0.020879486, 0.020884514, 0.020885, 0.020896361, 0.020896833, 0.020907681, 0.020908167, 0.020920208, 0.020920681, 0.020925847, 0.020926333, 0.020940375, 0.020940847, 0.020946194, 0.020946667, 0.020960542, 0.020961014], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.870000000004038e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 1.3346999999996889e-05, 4.860000000009301e-07, 4.58400000000192e-06, 4.7199999999789077e-07, 1.2471999999999483e-05, 4.720000000013602e-07, 6.360999999999867e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 5.068999999999907e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 1.2042000000000302e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 6.194999999997036e-06, 4.720000000013602e-07, 1.1861000000001898e-05, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 1.2374999999998498e-05, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 1.4750000000000874e-05, 4.7199999999789077e-07, 1.1959000000002357e-05, 4.860000000009301e-07, 4.513999999997131e-06, 4.860000000009301e-07, 5.180000000000462e-06, 4.860000000009301e-07, 1.4514000000000193e-05, 4.859999999974607e-07, 4.861000000001836e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 5.541000000001267e-06, 4.7300000000083386e-07, 1.1513999999997193e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.4027999999999263e-05, 4.7199999999789077e-07, 1.1028000000003202e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 1.1360999999997928e-05, 4.720000000013602e-07, 1.0848000000000801e-05, 4.859999999974607e-07, 1.2041000000000829e-05, 4.7300000000083386e-07, 5.166000000000892e-06, 4.859999999974607e-07, 1.4042000000002303e-05, 4.7199999999789077e-07, 5.347000000002766e-06, 4.729999999973644e-07, 1.3874999999999998e-05, 4.720000000013602e-07], 'diff': [0, 4.870000000004038e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 1.3346999999996889e-05, 4.860000000009301e-07, 4.58400000000192e-06, 4.7199999999789077e-07, 1.2471999999999483e-05, 4.720000000013602e-07, 6.360999999999867e-06, 4.7300000000083386e-07, 4.443999999999282e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 5.068999999999907e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 1.2042000000000302e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.2514000000001663e-05, 4.860000000009301e-07, 6.194999999997036e-06, 4.720000000013602e-07, 1.1861000000001898e-05, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 1.2374999999998498e-05, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 1.4750000000000874e-05, 4.7199999999789077e-07, 1.1959000000002357e-05, 4.860000000009301e-07, 4.513999999997131e-06, 4.860000000009301e-07, 5.180000000000462e-06, 4.860000000009301e-07, 1.4514000000000193e-05, 4.859999999974607e-07, 4.861000000001836e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 5.541000000001267e-06, 4.7300000000083386e-07, 1.1513999999997193e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.4027999999999263e-05, 4.7199999999789077e-07, 1.1028000000003202e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.860000000009301e-07, 1.1360999999997928e-05, 4.720000000013602e-07, 1.0848000000000801e-05, 4.859999999974607e-07, 1.2041000000000829e-05, 4.7300000000083386e-07, 5.166000000000892e-06, 4.859999999974607e-07, 1.4042000000002303e-05, 4.7199999999789077e-07, 5.347000000002766e-06, 4.729999999973644e-07, 1.3874999999999998e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:11.661" endtime="20201112 09:53:11.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.657" endtime="20201112 09:53:11.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:11.669" level="INFO">${RESULT} = [{'time': 0.020471306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020483639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:11.666" endtime="20201112 09:53:11.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:11.683" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:11.670" endtime="20201112 09:53:11.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.687" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:11.686" endtime="20201112 09:53:11.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.690" level="INFO">VALUE: [4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:11.688" endtime="20201112 09:53:11.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.684" endtime="20201112 09:53:11.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.693" endtime="20201112 09:53:11.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:11.696" endtime="20201112 09:53:11.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.695" endtime="20201112 09:53:11.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.691" endtime="20201112 09:53:11.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.286" endtime="20201112 09:53:11.717"></status>
</kw>
<msg timestamp="20201112 09:53:11.717" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.724" endtime="20201112 09:53:11.735"></status>
</kw>
<msg timestamp="20201112 09:53:11.735" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:11.723" endtime="20201112 09:53:11.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:11.738" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:11.736" endtime="20201112 09:53:11.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.739" endtime="20201112 09:53:11.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.720" endtime="20201112 09:53:11.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.719" endtime="20201112 09:53:11.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:11.748" endtime="20201112 09:53:12.034"></status>
</kw>
<msg timestamp="20201112 09:53:12.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018355069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:11.746" endtime="20201112 09:53:12.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:12.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018355069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:12.039" endtime="20201112 09:53:12.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:12.047" endtime="20201112 09:53:12.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.744" endtime="20201112 09:53:12.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.742" endtime="20201112 09:53:12.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:12.054" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:12.053" endtime="20201112 09:53:12.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:12.060" level="INFO">VALUE: [{'time': 0.018355069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018366917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.018367389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018376069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.679999999997023e-06, 'source_diff': 8.679999999997023e-06}, {'time': 0.018376556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018385903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018386389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018396931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0541999999998802e-05, 'source_diff': 1.0541999999998802e-05}, {'time': 0.018397403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018409917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.018410389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018417583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.018418056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018430417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.018430889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018435056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018435542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018450056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018450542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018456736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.018457208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018465917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.018466389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018479736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.018480208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018489236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.018489708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018496236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018496708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018509069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018509542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018515931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.018516403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018527736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1332999999998788e-05, 'source_diff': 1.1332999999998788e-05}, {'time': 0.018528222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018533569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018534056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018545569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1513000000001189e-05, 'source_diff': 1.1513000000001189e-05}, {'time': 0.018546056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018557917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.018558389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018569403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018569889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018579417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.018579889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018591764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.018592236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01860525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.018605722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01861975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.018620222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018630083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018630556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0186445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3944000000001844e-05, 'source_diff': 1.3944000000001844e-05}, {'time': 0.018644972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018652917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.018653403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018663931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0528000000002702e-05, 'source_diff': 1.0528000000002702e-05}, {'time': 0.018664403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01867225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018672736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018686431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3695000000001067e-05, 'source_diff': 1.3695000000001067e-05}, {'time': 0.018686903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018697083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.018697569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018702292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.018702764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018707111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018707583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018714764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.018715236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018725611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.018726083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018740597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018741069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018753292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2223000000002177e-05, 'source_diff': 1.2223000000002177e-05}, {'time': 0.018753764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018762597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.018763069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018773431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361999999999871e-05, 'source_diff': 1.0361999999999871e-05}, {'time': 0.018773917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018784597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.018785083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018794111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.018794583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018808097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018808583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018817986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.018818458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018824778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.01882525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018832444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018832917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018837944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.018838417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018852778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.01885325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018861944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018862417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:12.055" endtime="20201112 09:53:18.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:12.051" endtime="20201112 09:53:18.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:19.003" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:18.944" endtime="20201112 09:53:19.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.012" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:19.010" endtime="20201112 09:53:19.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.021" level="INFO">VALUE: {'eventtime': [0.018355069, 0.018355556, 0.018366917, 0.018367389, 0.018376069, 0.018376556, 0.018385903, 0.018386389, 0.018396931, 0.018397403, 0.018409917, 0.018410389, 0.018417583, 0.018418056, 0.018430417, 0.018430889, 0.018435056, 0.018435542, 0.018450056, 0.018450542, 0.018456736, 0.018457208, 0.018465917, 0.018466389, 0.018479736, 0.018480208, 0.018489236, 0.018489708, 0.018496236, 0.018496708, 0.018509069, 0.018509542, 0.018515931, 0.018516403, 0.018527736, 0.018528222, 0.018533569, 0.018534056, 0.018545569, 0.018546056, 0.018557917, 0.018558389, 0.018569403, 0.018569889, 0.018579417, 0.018579889, 0.018591764, 0.018592236, 0.01860525, 0.018605722, 0.01861975, 0.018620222, 0.018630083, 0.018630556, 0.0186445, 0.018644972, 0.018652917, 0.018653403, 0.018663931, 0.018664403, 0.01867225, 0.018672736, 0.018686431, 0.018686903, 0.018697083, 0.018697569, 0.018702292, 0.018702764, 0.018707111, 0.018707583, 0.018714764, 0.018715236, 0.018725611, 0.018726083, 0.018740597, 0.018741069, 0.018753292, 0.018753764, 0.018762597, 0.018763069, 0.018773431, 0.018773917, 0.018784597, 0.018785083, 0.018794111, 0.018794583, 0.018808097, 0.018808583, 0.018817986, 0.018818458, 0.018824778, 0.01882525, 0.018832444, 0.018832917, 0.018837944, 0.018838417, 0.018852778, 0.01885325, 0.018861944, 0.018862417], 'sourcesource_diff': [0, 4.869999999969343e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 8.679999999997023e-06, 4.870000000004038e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 1.2514000000001663e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.729999999973644e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 8.708999999999106e-06, 4.720000000013602e-07, 1.3347000000000359e-05, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 6.388999999999007e-06, 4.720000000013602e-07, 1.1332999999998788e-05, 4.860000000009301e-07, 5.346999999999297e-06, 4.870000000004038e-07, 1.1513000000001189e-05, 4.870000000004038e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.1875000000001468e-05, 4.720000000013602e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 1.4027999999999263e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 1.3944000000001844e-05, 4.7199999999789077e-07, 7.945000000002256e-06, 4.859999999974607e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 7.847000000001797e-06, 4.859999999974607e-07, 1.3695000000001067e-05, 4.720000000013602e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 4.722999999998145e-06, 4.720000000013602e-07, 4.346999999998297e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.4514000000000193e-05, 4.7199999999789077e-07, 1.2223000000002177e-05, 4.7199999999789077e-07, 8.832999999999758e-06, 4.720000000013602e-07, 1.0361999999999871e-05, 4.860000000009301e-07, 1.0679999999999024e-05, 4.860000000009301e-07, 9.027999999997732e-06, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 6.320000000000631e-06, 4.720000000013602e-07, 7.193999999998563e-06, 4.7300000000083386e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 8.694000000000063e-06, 4.7300000000083386e-07], 'diff': [0, 4.869999999969343e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 8.679999999997023e-06, 4.870000000004038e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 1.2514000000001663e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.729999999973644e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 8.708999999999106e-06, 4.720000000013602e-07, 1.3347000000000359e-05, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 6.388999999999007e-06, 4.720000000013602e-07, 1.1332999999998788e-05, 4.860000000009301e-07, 5.346999999999297e-06, 4.870000000004038e-07, 1.1513000000001189e-05, 4.870000000004038e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.1875000000001468e-05, 4.720000000013602e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 1.4027999999999263e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 1.3944000000001844e-05, 4.7199999999789077e-07, 7.945000000002256e-06, 4.859999999974607e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 7.847000000001797e-06, 4.859999999974607e-07, 1.3695000000001067e-05, 4.720000000013602e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 4.722999999998145e-06, 4.720000000013602e-07, 4.346999999998297e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 1.4514000000000193e-05, 4.7199999999789077e-07, 1.2223000000002177e-05, 4.7199999999789077e-07, 8.832999999999758e-06, 4.720000000013602e-07, 1.0361999999999871e-05, 4.860000000009301e-07, 1.0679999999999024e-05, 4.860000000009301e-07, 9.027999999997732e-06, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 9.402999999998107e-06, 4.720000000013602e-07, 6.320000000000631e-06, 4.720000000013602e-07, 7.193999999998563e-06, 4.7300000000083386e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 8.694000000000063e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:19.014" endtime="20201112 09:53:19.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.005" endtime="20201112 09:53:19.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:19.034" level="INFO">${RESULT} = [{'time': 0.018355556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018367389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:19.026" endtime="20201112 09:53:19.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:19.060" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:19.036" endtime="20201112 09:53:19.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.065" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:19.064" endtime="20201112 09:53:19.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.067" level="INFO">VALUE: [4.869999999969343e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:53:19.066" endtime="20201112 09:53:19.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.061" endtime="20201112 09:53:19.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.071" endtime="20201112 09:53:19.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:19.074" endtime="20201112 09:53:19.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.073" endtime="20201112 09:53:19.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.069" endtime="20201112 09:53:19.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:11.717" endtime="20201112 09:53:19.095"></status>
</kw>
<msg timestamp="20201112 09:53:19.095" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.103" endtime="20201112 09:53:19.113"></status>
</kw>
<msg timestamp="20201112 09:53:19.114" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:19.102" endtime="20201112 09:53:19.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.116" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:19.115" endtime="20201112 09:53:19.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.117" endtime="20201112 09:53:19.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.099" endtime="20201112 09:53:19.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.097" endtime="20201112 09:53:19.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.128" endtime="20201112 09:53:19.411"></status>
</kw>
<msg timestamp="20201112 09:53:19.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018911292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018911764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:19.126" endtime="20201112 09:53:19.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018911292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018911764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:19.415" endtime="20201112 09:53:19.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.424" endtime="20201112 09:53:19.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.123" endtime="20201112 09:53:19.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.121" endtime="20201112 09:53:19.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.431" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:19.430" endtime="20201112 09:53:19.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.436" level="INFO">VALUE: [{'time': 0.018911292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018911764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018921278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.01892175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018928264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.01892875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018943097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.018943583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018950764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.01895125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018963972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.018964444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018978278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3834000000000762e-05, 'source_diff': 1.3834000000000762e-05}, {'time': 0.01897875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018988111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018988583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019003111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.019003583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019010111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.019010583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019020278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.01902075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019026111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019026597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019041278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4680999999999028e-05, 'source_diff': 1.4680999999999028e-05}, {'time': 0.019041764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019052278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.019052764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019058278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.019058764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019070125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.019070597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019076319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.019076792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019088958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2166000000000954e-05, 'source_diff': 1.2166000000000954e-05}, {'time': 0.019089431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019103972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.454099999999986e-05, 'source_diff': 1.454099999999986e-05}, {'time': 0.019104444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019115292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847999999997332e-05, 'source_diff': 1.0847999999997332e-05}, {'time': 0.019115764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019121806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.019122278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019136139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019136611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019147792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.019148278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019161958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3679999999998554e-05, 'source_diff': 1.3679999999998554e-05}, {'time': 0.019162444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019174639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.019175111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019184139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.019184611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019189792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.019190278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019194819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.019195292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019203806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.019204278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019211986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.019212458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019219819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.019220292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019234472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4179999999999054e-05, 'source_diff': 1.4179999999999054e-05}, {'time': 0.019234944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019245986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041999999999302e-05, 'source_diff': 1.1041999999999302e-05}, {'time': 0.019246458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019250806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34799999999777e-06, 'source_diff': 4.34799999999777e-06}, {'time': 0.019251278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019257306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.019257778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.019264472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019277486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.019277958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019291653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3694999999997598e-05, 'source_diff': 1.3694999999997598e-05}, {'time': 0.019292125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0193015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.019301972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019307472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.019307958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0193195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.019319972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019330319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.019330792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019343486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.019343958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019349819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019350292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019359153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019359625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019372486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2861000000002898e-05, 'source_diff': 1.2861000000002898e-05}, {'time': 0.019372958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019378653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.019379125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2542000000000803e-05, 'source_diff': 1.2542000000000803e-05}, {'time': 0.019392139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019402319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.019402806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019407486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.019407972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:19.432" endtime="20201112 09:53:19.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.428" endtime="20201112 09:53:19.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:19.463" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:19.439" endtime="20201112 09:53:19.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.467" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:19.466" endtime="20201112 09:53:19.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.471" level="INFO">VALUE: {'eventtime': [0.018911292, 0.018911764, 0.018921278, 0.01892175, 0.018928264, 0.01892875, 0.018943097, 0.018943583, 0.018950764, 0.01895125, 0.018963972, 0.018964444, 0.018978278, 0.01897875, 0.018988111, 0.018988583, 0.019003111, 0.019003583, 0.019010111, 0.019010583, 0.019020278, 0.01902075, 0.019026111, 0.019026597, 0.019041278, 0.019041764, 0.019052278, 0.019052764, 0.019058278, 0.019058764, 0.019070125, 0.019070597, 0.019076319, 0.019076792, 0.019088958, 0.019089431, 0.019103972, 0.019104444, 0.019115292, 0.019115764, 0.019121806, 0.019122278, 0.019136139, 0.019136611, 0.019147792, 0.019148278, 0.019161958, 0.019162444, 0.019174639, 0.019175111, 0.019184139, 0.019184611, 0.019189792, 0.019190278, 0.019194819, 0.019195292, 0.019203806, 0.019204278, 0.019211986, 0.019212458, 0.019219819, 0.019220292, 0.019234472, 0.019234944, 0.019245986, 0.019246458, 0.019250806, 0.019251278, 0.019257306, 0.019257778, 0.019264, 0.019264472, 0.019277486, 0.019277958, 0.019291653, 0.019292125, 0.0193015, 0.019301972, 0.019307472, 0.019307958, 0.0193195, 0.019319972, 0.019330319, 0.019330792, 0.019343486, 0.019343958, 0.019349819, 0.019350292, 0.019359153, 0.019359625, 0.019372486, 0.019372958, 0.019378653, 0.019379125, 0.019391667, 0.019392139, 0.019402319, 0.019402806, 0.019407486, 0.019407972], 'sourcesource_diff': [0, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.434699999999789e-05, 4.860000000009301e-07, 7.180999999998466e-06, 4.860000000009301e-07, 1.2721999999999734e-05, 4.720000000013602e-07, 1.3834000000000762e-05, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 5.360999999998867e-06, 4.860000000009301e-07, 1.4680999999999028e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 5.514000000001601e-06, 4.859999999974607e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 5.721999999999672e-06, 4.729999999973644e-07, 1.2166000000000954e-05, 4.7300000000083386e-07, 1.454099999999986e-05, 4.720000000013602e-07, 1.0847999999997332e-05, 4.720000000013602e-07, 6.042000000001241e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.3679999999998554e-05, 4.860000000009301e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.860000000009301e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 1.4179999999999054e-05, 4.720000000013602e-07, 1.1041999999999302e-05, 4.720000000013602e-07, 4.34799999999777e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 1.3694999999997598e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.860000000009301e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.0346999999997358e-05, 4.7300000000083386e-07, 1.2694000000000594e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 8.860999999998898e-06, 4.7199999999789077e-07, 1.2861000000002898e-05, 4.7199999999789077e-07, 5.695000000000006e-06, 4.720000000013602e-07, 1.2542000000000803e-05, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.870000000004038e-07, 4.679999999999962e-06, 4.859999999974607e-07], 'diff': [0, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.434699999999789e-05, 4.860000000009301e-07, 7.180999999998466e-06, 4.860000000009301e-07, 1.2721999999999734e-05, 4.720000000013602e-07, 1.3834000000000762e-05, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 5.360999999998867e-06, 4.860000000009301e-07, 1.4680999999999028e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 5.514000000001601e-06, 4.859999999974607e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 5.721999999999672e-06, 4.729999999973644e-07, 1.2166000000000954e-05, 4.7300000000083386e-07, 1.454099999999986e-05, 4.720000000013602e-07, 1.0847999999997332e-05, 4.720000000013602e-07, 6.042000000001241e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.3679999999998554e-05, 4.860000000009301e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.860000000009301e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.707999999998633e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 1.4179999999999054e-05, 4.720000000013602e-07, 1.1041999999999302e-05, 4.720000000013602e-07, 4.34799999999777e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 1.3694999999997598e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.860000000009301e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.0346999999997358e-05, 4.7300000000083386e-07, 1.2694000000000594e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 8.860999999998898e-06, 4.7199999999789077e-07, 1.2861000000002898e-05, 4.7199999999789077e-07, 5.695000000000006e-06, 4.720000000013602e-07, 1.2542000000000803e-05, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.870000000004038e-07, 4.679999999999962e-06, 4.859999999974607e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:19.468" endtime="20201112 09:53:19.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.464" endtime="20201112 09:53:19.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:19.477" level="INFO">${RESULT} = [{'time': 0.018911764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01892175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:19.474" endtime="20201112 09:53:19.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:19.491" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:19.478" endtime="20201112 09:53:19.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.496" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:19.494" endtime="20201112 09:53:19.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.498" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201112 09:53:19.497" endtime="20201112 09:53:19.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.492" endtime="20201112 09:53:19.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.502" endtime="20201112 09:53:19.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:19.505" endtime="20201112 09:53:19.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.504" endtime="20201112 09:53:19.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.500" endtime="20201112 09:53:19.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.096" endtime="20201112 09:53:19.526"></status>
</kw>
<msg timestamp="20201112 09:53:19.526" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.534" endtime="20201112 09:53:19.545"></status>
</kw>
<msg timestamp="20201112 09:53:19.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:19.533" endtime="20201112 09:53:19.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:19.547" endtime="20201112 09:53:19.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.549" endtime="20201112 09:53:19.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.530" endtime="20201112 09:53:19.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.528" endtime="20201112 09:53:19.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.559" endtime="20201112 09:53:19.844"></status>
</kw>
<msg timestamp="20201112 09:53:19.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018856944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:19.557" endtime="20201112 09:53:19.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018856944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:19.848" endtime="20201112 09:53:19.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.856" endtime="20201112 09:53:19.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.554" endtime="20201112 09:53:19.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.553" endtime="20201112 09:53:19.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.863" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:19.862" endtime="20201112 09:53:19.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.868" level="INFO">VALUE: [{'time': 0.018856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018856944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018863792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8480000000002705e-06, 'source_diff': 6.8480000000002705e-06}, {'time': 0.018864278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018872958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.679999999997023e-06, 'source_diff': 8.679999999997023e-06}, {'time': 0.018873444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018884694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.018885167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018893972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.804999999997148e-06, 'source_diff': 8.804999999997148e-06}, {'time': 0.018894444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018908306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.018908778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018919639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.018920111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018926139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018926611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018930986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018931458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018943972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.018944458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018949639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018950125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018962472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018962958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018974306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1348000000001301e-05, 'source_diff': 1.1348000000001301e-05}, {'time': 0.018974792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018986986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018987458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0189955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.018995972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019003833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.019004306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019011653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.019012125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019022653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.019023125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019033, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.875000000002937e-06, 'source_diff': 9.875000000002937e-06}, {'time': 0.019033472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019046486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000002163e-05, 'source_diff': 1.3014000000002163e-05}, {'time': 0.019046958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019053, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.019053472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.019065472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019071986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.019072472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019080319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.019080806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019087819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013000000000158e-06, 'source_diff': 7.013000000000158e-06}, {'time': 0.019088306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019093319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.013000000001627e-06, 'source_diff': 5.013000000001627e-06}, {'time': 0.019093806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019106319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.251299999999872e-05, 'source_diff': 1.251299999999872e-05}, {'time': 0.019106806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019116167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.019116639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019125681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999997302e-06, 'source_diff': 9.041999999997302e-06}, {'time': 0.019126153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019138681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.019139153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019145667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.514000000002601e-06, 'source_diff': 6.514000000002601e-06}, {'time': 0.019146139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019159361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3222000000000234e-05, 'source_diff': 1.3222000000000234e-05}, {'time': 0.019159833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0191695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.019169972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019176833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.019177306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019188028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.0191885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019201667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3166999999997958e-05, 'source_diff': 1.3166999999997958e-05}, {'time': 0.019202153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019216667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.019217153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019224514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.019224986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019235681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000001537e-05, 'source_diff': 1.0695000000001537e-05}, {'time': 0.019236153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019241181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019241653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019247514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019247986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019254181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999997036e-06, 'source_diff': 6.194999999997036e-06}, {'time': 0.019254653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019263347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.019263819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019277028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3209000000000137e-05, 'source_diff': 1.3209000000000137e-05}, {'time': 0.0192775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019285222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.019285694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019299028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3334000000000262e-05, 'source_diff': 1.3334000000000262e-05}, {'time': 0.0192995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019310514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.019311, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019316014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.0193165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019326181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.019326667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019337014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.0193375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:19.864" endtime="20201112 09:53:19.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.860" endtime="20201112 09:53:19.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:19.895" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:19.871" endtime="20201112 09:53:19.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.898" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:19.897" endtime="20201112 09:53:19.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.903" level="INFO">VALUE: {'eventtime': [0.018856458, 0.018856944, 0.018863792, 0.018864278, 0.018872958, 0.018873444, 0.018884694, 0.018885167, 0.018893972, 0.018894444, 0.018908306, 0.018908778, 0.018919639, 0.018920111, 0.018926139, 0.018926611, 0.018930986, 0.018931458, 0.018943972, 0.018944458, 0.018949639, 0.018950125, 0.018962472, 0.018962958, 0.018974306, 0.018974792, 0.018986986, 0.018987458, 0.0189955, 0.018995972, 0.019003833, 0.019004306, 0.019011653, 0.019012125, 0.019022653, 0.019023125, 0.019033, 0.019033472, 0.019046486, 0.019046958, 0.019053, 0.019053472, 0.019065, 0.019065472, 0.019071986, 0.019072472, 0.019080319, 0.019080806, 0.019087819, 0.019088306, 0.019093319, 0.019093806, 0.019106319, 0.019106806, 0.019116167, 0.019116639, 0.019125681, 0.019126153, 0.019138681, 0.019139153, 0.019145667, 0.019146139, 0.019159361, 0.019159833, 0.0191695, 0.019169972, 0.019176833, 0.019177306, 0.019188028, 0.0191885, 0.019201667, 0.019202153, 0.019216667, 0.019217153, 0.019224514, 0.019224986, 0.019235681, 0.019236153, 0.019241181, 0.019241653, 0.019247514, 0.019247986, 0.019254181, 0.019254653, 0.019263347, 0.019263819, 0.019277028, 0.0192775, 0.019285222, 0.019285694, 0.019299028, 0.0192995, 0.019310514, 0.019311, 0.019316014, 0.0193165, 0.019326181, 0.019326667, 0.019337014, 0.0193375], 'sourcesource_diff': [0, 4.860000000009301e-07, 6.8480000000002705e-06, 4.860000000009301e-07, 8.679999999997023e-06, 4.860000000009301e-07, 1.1250000000000843e-05, 4.7300000000083386e-07, 8.804999999997148e-06, 4.720000000013602e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 4.375000000000906e-06, 4.720000000013602e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 5.180999999999936e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.859999999974607e-07, 1.1348000000001301e-05, 4.860000000009301e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.729999999973644e-07, 7.347000000001297e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 9.875000000002937e-06, 4.7199999999789077e-07, 1.3014000000002163e-05, 4.7199999999789077e-07, 6.042000000001241e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 6.513999999999132e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.870000000004038e-07, 7.013000000000158e-06, 4.870000000004038e-07, 5.013000000001627e-06, 4.870000000004038e-07, 1.251299999999872e-05, 4.870000000004038e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.041999999997302e-06, 4.720000000013602e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 6.514000000002601e-06, 4.7199999999789077e-07, 1.3222000000000234e-05, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 1.3166999999997958e-05, 4.860000000009301e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 6.194999999997036e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.720000000013602e-07, 1.3209000000000137e-05, 4.7199999999789077e-07, 7.722000000001672e-06, 4.7199999999789077e-07, 1.3334000000000262e-05, 4.720000000013602e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 5.014000000001101e-06, 4.860000000009301e-07, 9.681000000000967e-06, 4.859999999974607e-07, 1.0347000000000828e-05, 4.860000000009301e-07], 'diff': [0, 4.860000000009301e-07, 6.8480000000002705e-06, 4.860000000009301e-07, 8.679999999997023e-06, 4.860000000009301e-07, 1.1250000000000843e-05, 4.7300000000083386e-07, 8.804999999997148e-06, 4.720000000013602e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 4.375000000000906e-06, 4.720000000013602e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 5.180999999999936e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.859999999974607e-07, 1.1348000000001301e-05, 4.860000000009301e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 8.041999999999772e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.729999999973644e-07, 7.347000000001297e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 9.875000000002937e-06, 4.7199999999789077e-07, 1.3014000000002163e-05, 4.7199999999789077e-07, 6.042000000001241e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 6.513999999999132e-06, 4.860000000009301e-07, 7.846999999998328e-06, 4.870000000004038e-07, 7.013000000000158e-06, 4.870000000004038e-07, 5.013000000001627e-06, 4.870000000004038e-07, 1.251299999999872e-05, 4.870000000004038e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.041999999997302e-06, 4.720000000013602e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 6.514000000002601e-06, 4.7199999999789077e-07, 1.3222000000000234e-05, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 1.3166999999997958e-05, 4.860000000009301e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 6.194999999997036e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.720000000013602e-07, 1.3209000000000137e-05, 4.7199999999789077e-07, 7.722000000001672e-06, 4.7199999999789077e-07, 1.3334000000000262e-05, 4.720000000013602e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 5.014000000001101e-06, 4.860000000009301e-07, 9.681000000000967e-06, 4.859999999974607e-07, 1.0347000000000828e-05, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:19.899" endtime="20201112 09:53:19.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.895" endtime="20201112 09:53:19.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:19.908" level="INFO">${RESULT} = [{'time': 0.018856944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018864278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:19.905" endtime="20201112 09:53:19.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:19.921" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:19.909" endtime="20201112 09:53:19.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.926" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:19.925" endtime="20201112 09:53:19.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.928" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:53:19.927" endtime="20201112 09:53:19.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.922" endtime="20201112 09:53:19.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.931" endtime="20201112 09:53:19.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:19.935" endtime="20201112 09:53:19.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.933" endtime="20201112 09:53:19.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.930" endtime="20201112 09:53:19.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.527" endtime="20201112 09:53:19.955"></status>
</kw>
<msg timestamp="20201112 09:53:19.955" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.963" endtime="20201112 09:53:19.974"></status>
</kw>
<msg timestamp="20201112 09:53:19.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:19.962" endtime="20201112 09:53:19.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:19.977" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:19.975" endtime="20201112 09:53:19.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.978" endtime="20201112 09:53:19.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.959" endtime="20201112 09:53:19.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.957" endtime="20201112 09:53:19.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:19.987" endtime="20201112 09:53:20.275"></status>
</kw>
<msg timestamp="20201112 09:53:20.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018643069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018643542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:19.986" endtime="20201112 09:53:20.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018643069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018643542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:20.280" endtime="20201112 09:53:20.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.288" endtime="20201112 09:53:20.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.982" endtime="20201112 09:53:20.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.981" endtime="20201112 09:53:20.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.295" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:20.294" endtime="20201112 09:53:20.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.300" level="INFO">VALUE: [{'time': 0.018643069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018643542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018649125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018649597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01865675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018657222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018667569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.018668056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018673417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.018673889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018684639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.018685111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018690903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.018691389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018696083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018696556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018702264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018702736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018712083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018712556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018723597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1040999999999829e-05, 'source_diff': 1.1040999999999829e-05}, {'time': 0.018724069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018728944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018729417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018738458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.040999999997829e-06, 'source_diff': 9.040999999997829e-06}, {'time': 0.018738931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018750417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.018750889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018762417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018762889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01877325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0360999999996928e-05, 'source_diff': 1.0360999999996928e-05}, {'time': 0.018773736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01878225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.018782736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018795083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018795569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018809153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3583999999997043e-05, 'source_diff': 1.3583999999997043e-05}, {'time': 0.018809625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01881675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018817236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018824417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.018824903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018838097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.018838569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018852431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.018852903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018866764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018867236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018881764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018882236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018890958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.018891431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018896931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.018897417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018906625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.018907097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018919264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2167000000000427e-05, 'source_diff': 1.2167000000000427e-05}, {'time': 0.01891975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018924278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.01892475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018936764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2013999999997693e-05, 'source_diff': 1.2013999999997693e-05}, {'time': 0.01893725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018946125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018946597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018958611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2014000000001163e-05, 'source_diff': 1.2014000000001163e-05}, {'time': 0.018959083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018973278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4194999999998098e-05, 'source_diff': 1.4194999999998098e-05}, {'time': 0.01897375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018980611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.018981083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018987625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.018988097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018996444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.018996917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019010778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019011264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019021278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019021764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019028944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.019029431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019042986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3555000000001899e-05, 'source_diff': 1.3555000000001899e-05}, {'time': 0.019043458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019047944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.019048431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019055972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.019056444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019065792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.34800000000277e-06, 'source_diff': 9.34800000000277e-06}, {'time': 0.019066264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019070958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.019071431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019076792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019077264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019087125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019087597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019098125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.019098597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019103792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.195000000002975e-06, 'source_diff': 5.195000000002975e-06}, {'time': 0.019104264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019110958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.019111431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:20.296" endtime="20201112 09:53:20.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.291" endtime="20201112 09:53:20.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:20.325" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:20.302" endtime="20201112 09:53:20.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.329" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:20.328" endtime="20201112 09:53:20.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.333" level="INFO">VALUE: {'eventtime': [0.018643069, 0.018643542, 0.018649125, 0.018649597, 0.01865675, 0.018657222, 0.018667569, 0.018668056, 0.018673417, 0.018673889, 0.018684639, 0.018685111, 0.018690903, 0.018691389, 0.018696083, 0.018696556, 0.018702264, 0.018702736, 0.018712083, 0.018712556, 0.018723597, 0.018724069, 0.018728944, 0.018729417, 0.018738458, 0.018738931, 0.018750417, 0.018750889, 0.018762417, 0.018762889, 0.01877325, 0.018773736, 0.01878225, 0.018782736, 0.018795083, 0.018795569, 0.018809153, 0.018809625, 0.01881675, 0.018817236, 0.018824417, 0.018824903, 0.018838097, 0.018838569, 0.018852431, 0.018852903, 0.018866764, 0.018867236, 0.018881764, 0.018882236, 0.018890958, 0.018891431, 0.018896931, 0.018897417, 0.018906625, 0.018907097, 0.018919264, 0.01891975, 0.018924278, 0.01892475, 0.018936764, 0.01893725, 0.018946125, 0.018946597, 0.018958611, 0.018959083, 0.018973278, 0.01897375, 0.018980611, 0.018981083, 0.018987625, 0.018988097, 0.018996444, 0.018996917, 0.019010778, 0.019011264, 0.019021278, 0.019021764, 0.019028944, 0.019029431, 0.019042986, 0.019043458, 0.019047944, 0.019048431, 0.019055972, 0.019056444, 0.019065792, 0.019066264, 0.019070958, 0.019071431, 0.019076792, 0.019077264, 0.019087125, 0.019087597, 0.019098125, 0.019098597, 0.019103792, 0.019104264, 0.019110958, 0.019111431], 'sourcesource_diff': [0, 4.729999999973644e-07, 5.582999999999977e-06, 4.720000000013602e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.870000000004038e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.0750000000000343e-05, 4.720000000013602e-07, 5.791999999997521e-06, 4.860000000009301e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 1.1040999999999829e-05, 4.7199999999789077e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 9.040999999997829e-06, 4.7300000000083386e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 1.0360999999996928e-05, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 1.3583999999997043e-05, 4.720000000013602e-07, 7.125000000000187e-06, 4.860000000009301e-07, 7.180999999998466e-06, 4.860000000009301e-07, 1.3194000000001094e-05, 4.7199999999789077e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 8.721999999999203e-06, 4.7300000000083386e-07, 5.499999999998562e-06, 4.860000000009301e-07, 9.208000000000133e-06, 4.720000000013602e-07, 1.2167000000000427e-05, 4.859999999974607e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.2013999999997693e-05, 4.860000000009301e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 1.2014000000001163e-05, 4.720000000013602e-07, 1.4194999999998098e-05, 4.720000000013602e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 6.542000000001741e-06, 4.7199999999789077e-07, 8.347000000002297e-06, 4.729999999973644e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 7.179999999998993e-06, 4.870000000004038e-07, 1.3555000000001899e-05, 4.7199999999789077e-07, 4.486000000001461e-06, 4.870000000004038e-07, 7.540999999999798e-06, 4.7199999999789077e-07, 9.34800000000277e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 5.195000000002975e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.7300000000083386e-07], 'diff': [0, 4.729999999973644e-07, 5.582999999999977e-06, 4.720000000013602e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.0346999999997358e-05, 4.870000000004038e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.0750000000000343e-05, 4.720000000013602e-07, 5.791999999997521e-06, 4.860000000009301e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 1.1040999999999829e-05, 4.7199999999789077e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 9.040999999997829e-06, 4.7300000000083386e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 1.0360999999996928e-05, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 1.3583999999997043e-05, 4.720000000013602e-07, 7.125000000000187e-06, 4.860000000009301e-07, 7.180999999998466e-06, 4.860000000009301e-07, 1.3194000000001094e-05, 4.7199999999789077e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 8.721999999999203e-06, 4.7300000000083386e-07, 5.499999999998562e-06, 4.860000000009301e-07, 9.208000000000133e-06, 4.720000000013602e-07, 1.2167000000000427e-05, 4.859999999974607e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.2013999999997693e-05, 4.860000000009301e-07, 8.875000000001937e-06, 4.7199999999789077e-07, 1.2014000000001163e-05, 4.720000000013602e-07, 1.4194999999998098e-05, 4.720000000013602e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 6.542000000001741e-06, 4.7199999999789077e-07, 8.347000000002297e-06, 4.729999999973644e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 7.179999999998993e-06, 4.870000000004038e-07, 1.3555000000001899e-05, 4.7199999999789077e-07, 4.486000000001461e-06, 4.870000000004038e-07, 7.540999999999798e-06, 4.7199999999789077e-07, 9.34800000000277e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 5.195000000002975e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:20.330" endtime="20201112 09:53:20.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.326" endtime="20201112 09:53:20.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:20.339" level="INFO">${RESULT} = [{'time': 0.018643542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018649597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:20.335" endtime="20201112 09:53:20.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:20.352" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:20.340" endtime="20201112 09:53:20.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.357" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:20.356" endtime="20201112 09:53:20.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.359" level="INFO">VALUE: [4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:53:20.358" endtime="20201112 09:53:20.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.353" endtime="20201112 09:53:20.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.362" endtime="20201112 09:53:20.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:20.366" endtime="20201112 09:53:20.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.364" endtime="20201112 09:53:20.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.361" endtime="20201112 09:53:20.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:19.956" endtime="20201112 09:53:20.387"></status>
</kw>
<msg timestamp="20201112 09:53:20.387" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.395" endtime="20201112 09:53:20.406"></status>
</kw>
<msg timestamp="20201112 09:53:20.406" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:20.393" endtime="20201112 09:53:20.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:20.407" endtime="20201112 09:53:20.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.410" endtime="20201112 09:53:20.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.391" endtime="20201112 09:53:20.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.389" endtime="20201112 09:53:20.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.418" endtime="20201112 09:53:20.704"></status>
</kw>
<msg timestamp="20201112 09:53:20.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018262625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018263111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:20.417" endtime="20201112 09:53:20.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018262625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018263111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:20.708" endtime="20201112 09:53:20.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.716" endtime="20201112 09:53:20.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.414" endtime="20201112 09:53:20.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.413" endtime="20201112 09:53:20.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.723" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:20.722" endtime="20201112 09:53:20.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.728" level="INFO">VALUE: [{'time': 0.018262625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018263111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018277819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4708000000002164e-05, 'source_diff': 1.4708000000002164e-05}, {'time': 0.018278292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018287014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.018287486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.018295278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018306972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018307444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018311986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018312458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018324347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.018324819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018334819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.018335292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018346806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018347292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018357472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.018357958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018365306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.348000000000771e-06, 'source_diff': 7.348000000000771e-06}, {'time': 0.018365792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018370306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018370792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018377153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.018377625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018385639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013999999997162e-06, 'source_diff': 8.013999999997162e-06}, {'time': 0.018386125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018395486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018395958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018406167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.018406639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018411819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018412292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018424319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.018424792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018436986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018437458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018444167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018444639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018459153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018459625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018473319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.018473806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018484319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513000000000189e-05, 'source_diff': 1.0513000000000189e-05}, {'time': 0.018484806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018497819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.301299999999922e-05, 'source_diff': 1.301299999999922e-05}, {'time': 0.018498306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018508486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.018508972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01852, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018520472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018534333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018534806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018544014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.018544486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0185545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.018554972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018560681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018561153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018570333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.018570806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018580556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.018581028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018593181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.018593653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018598167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.018598653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018602819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018603292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018613319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.018613792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018621819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.018622292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018630667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.018631139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018639653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999997662e-06, 'source_diff': 8.513999999997662e-06}, {'time': 0.018640125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018651819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018652306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018661653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018662139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018673667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018674139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0186835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018683972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018693486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018693972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018704181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.018704653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018709181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.018709653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018719167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018719639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018733833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.018734306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018744167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018744639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018757, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018757472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:20.724" endtime="20201112 09:53:20.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.720" endtime="20201112 09:53:20.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:20.754" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:20.731" endtime="20201112 09:53:20.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.758" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:20.757" endtime="20201112 09:53:20.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.762" level="INFO">VALUE: {'eventtime': [0.018262625, 0.018263111, 0.018277819, 0.018278292, 0.018287014, 0.018287486, 0.018294806, 0.018295278, 0.018306972, 0.018307444, 0.018311986, 0.018312458, 0.018324347, 0.018324819, 0.018334819, 0.018335292, 0.018346806, 0.018347292, 0.018357472, 0.018357958, 0.018365306, 0.018365792, 0.018370306, 0.018370792, 0.018377153, 0.018377625, 0.018385639, 0.018386125, 0.018395486, 0.018395958, 0.018406167, 0.018406639, 0.018411819, 0.018412292, 0.018424319, 0.018424792, 0.018436986, 0.018437458, 0.018444167, 0.018444639, 0.018459153, 0.018459625, 0.018473319, 0.018473806, 0.018484319, 0.018484806, 0.018497819, 0.018498306, 0.018508486, 0.018508972, 0.01852, 0.018520472, 0.018534333, 0.018534806, 0.018544014, 0.018544486, 0.0185545, 0.018554972, 0.018560681, 0.018561153, 0.018570333, 0.018570806, 0.018580556, 0.018581028, 0.018593181, 0.018593653, 0.018598167, 0.018598653, 0.018602819, 0.018603292, 0.018613319, 0.018613792, 0.018621819, 0.018622292, 0.018630667, 0.018631139, 0.018639653, 0.018640125, 0.018651819, 0.018652306, 0.018661653, 0.018662139, 0.018673667, 0.018674139, 0.0186835, 0.018683972, 0.018693486, 0.018693972, 0.018704181, 0.018704653, 0.018709181, 0.018709653, 0.018719167, 0.018719639, 0.018733833, 0.018734306, 0.018744167, 0.018744639, 0.018757, 0.018757472], 'sourcesource_diff': [0, 4.859999999974607e-07, 1.4708000000002164e-05, 4.7300000000083386e-07, 8.721999999999203e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.720000000013602e-07, 1.1693999999999594e-05, 4.7199999999789077e-07, 4.541999999999741e-06, 4.720000000013602e-07, 1.1889000000001038e-05, 4.7199999999789077e-07, 9.999999999999593e-06, 4.7300000000083386e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 7.348000000000771e-06, 4.859999999974607e-07, 4.514000000000601e-06, 4.860000000009301e-07, 6.360999999999867e-06, 4.720000000013602e-07, 8.013999999997162e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.729999999973644e-07, 1.2194000000000094e-05, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 1.4514000000000193e-05, 4.720000000013602e-07, 1.3693999999998124e-05, 4.870000000004038e-07, 1.0513000000000189e-05, 4.870000000004038e-07, 1.301299999999922e-05, 4.870000000004038e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 9.208000000000133e-06, 4.7199999999789077e-07, 1.0014000000002632e-05, 4.7199999999789077e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 9.180000000000993e-06, 4.729999999973644e-07, 9.750000000002812e-06, 4.7199999999789077e-07, 1.2153000000000858e-05, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.027000000000728e-06, 4.729999999973644e-07, 8.375000000001437e-06, 4.720000000013602e-07, 8.513999999997662e-06, 4.720000000013602e-07, 1.1693999999999594e-05, 4.870000000004038e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.4193999999998624e-05, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07], 'diff': [0, 4.859999999974607e-07, 1.4708000000002164e-05, 4.7300000000083386e-07, 8.721999999999203e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.720000000013602e-07, 1.1693999999999594e-05, 4.7199999999789077e-07, 4.541999999999741e-06, 4.720000000013602e-07, 1.1889000000001038e-05, 4.7199999999789077e-07, 9.999999999999593e-06, 4.7300000000083386e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 7.348000000000771e-06, 4.859999999974607e-07, 4.514000000000601e-06, 4.860000000009301e-07, 6.360999999999867e-06, 4.720000000013602e-07, 8.013999999997162e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.729999999973644e-07, 1.2194000000000094e-05, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 1.4514000000000193e-05, 4.720000000013602e-07, 1.3693999999998124e-05, 4.870000000004038e-07, 1.0513000000000189e-05, 4.870000000004038e-07, 1.301299999999922e-05, 4.870000000004038e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 9.208000000000133e-06, 4.7199999999789077e-07, 1.0014000000002632e-05, 4.7199999999789077e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 9.180000000000993e-06, 4.729999999973644e-07, 9.750000000002812e-06, 4.7199999999789077e-07, 1.2153000000000858e-05, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.027000000000728e-06, 4.729999999973644e-07, 8.375000000001437e-06, 4.720000000013602e-07, 8.513999999997662e-06, 4.720000000013602e-07, 1.1693999999999594e-05, 4.870000000004038e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 4.527999999996701e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.4193999999998624e-05, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:20.759" endtime="20201112 09:53:20.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.755" endtime="20201112 09:53:20.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:20.768" level="INFO">${RESULT} = [{'time': 0.018263111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018278292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:20.764" endtime="20201112 09:53:20.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:20.781" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:20.769" endtime="20201112 09:53:20.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.786" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:20.785" endtime="20201112 09:53:20.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.789" level="INFO">VALUE: [4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:20.787" endtime="20201112 09:53:20.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.782" endtime="20201112 09:53:20.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.792" endtime="20201112 09:53:20.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:20.795" endtime="20201112 09:53:20.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.794" endtime="20201112 09:53:20.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.790" endtime="20201112 09:53:20.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.388" endtime="20201112 09:53:20.816"></status>
</kw>
<msg timestamp="20201112 09:53:20.816" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.824" endtime="20201112 09:53:20.834"></status>
</kw>
<msg timestamp="20201112 09:53:20.835" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:20.822" endtime="20201112 09:53:20.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:20.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:20.836" endtime="20201112 09:53:20.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.838" endtime="20201112 09:53:20.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.820" endtime="20201112 09:53:20.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.818" endtime="20201112 09:53:20.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:20.847" endtime="20201112 09:53:21.135"></status>
</kw>
<msg timestamp="20201112 09:53:21.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:20.846" endtime="20201112 09:53:21.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:21.139" endtime="20201112 09:53:21.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.148" endtime="20201112 09:53:21.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.843" endtime="20201112 09:53:21.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.841" endtime="20201112 09:53:21.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.154" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:21.153" endtime="20201112 09:53:21.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.159" level="INFO">VALUE: [{'time': 0.018466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.018475375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018484569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018485042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01849975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.018500222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018508236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018508708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018516903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.018517375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018522069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018522542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018533236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000002063e-05, 'source_diff': 1.0694000000002063e-05}, {'time': 0.018533708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018548069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.018548556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018560069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.151299999999772e-05, 'source_diff': 1.151299999999772e-05}, {'time': 0.018560556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018569736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.018570222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018582111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1888999999997568e-05, 'source_diff': 1.1888999999997568e-05}, {'time': 0.018582583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018590153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.570000000001881e-06, 'source_diff': 7.570000000001881e-06}, {'time': 0.018590625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018605097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.018605569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01861175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018612222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018617417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018617889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018623458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.018623931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018629917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018630389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018637083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.018637556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018644917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018645389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018654083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018654556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018668417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018668903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018673583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018674069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018682597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999997232e-06, 'source_diff': 8.527999999997232e-06}, {'time': 0.018683069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018696583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018697069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018708583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018709069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018721264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2195000000003037e-05, 'source_diff': 1.2195000000003037e-05}, {'time': 0.018721736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018729278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.01872975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018734431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018734903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018749097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.018749569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018763444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.018763917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018774264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.018774736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018781764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.01878225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018788111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018788583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018794264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.01879475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018805097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018805583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018819097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018819583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018825111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.018825583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018837931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2347999999998832e-05, 'source_diff': 1.2347999999998832e-05}, {'time': 0.018838417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018852292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.018852764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018865611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018866083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018876458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.018876931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018888611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.018889083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018895625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.018896097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018905611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018906097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018920319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4222000000001234e-05, 'source_diff': 1.4222000000001234e-05}, {'time': 0.018920792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018929111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.018929597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018940667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1070000000001912e-05, 'source_diff': 1.1070000000001912e-05}, {'time': 0.018941139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018945944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018946431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018960472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.404099999999936e-05, 'source_diff': 1.404099999999936e-05}, {'time': 0.018960944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:21.155" endtime="20201112 09:53:21.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.151" endtime="20201112 09:53:21.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:21.186" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:21.162" endtime="20201112 09:53:21.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.190" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:21.188" endtime="20201112 09:53:21.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.194" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.018466222, 0.018466708, 0.018474903, 0.018475375, 0.018484569, 0.018485042, 0.01849975, 0.018500222, 0.018508236, 0.018508708, 0.018516903, 0.018517375, 0.018522069, 0.018522542, 0.018533236, 0.018533708, 0.018548069, 0.018548556, 0.018560069, 0.018560556, 0.018569736, 0.018570222, 0.018582111, 0.018582583, 0.018590153, 0.018590625, 0.018605097, 0.018605569, 0.01861175, 0.018612222, 0.018617417, 0.018617889, 0.018623458, 0.018623931, 0.018629917, 0.018630389, 0.018637083, 0.018637556, 0.018644917, 0.018645389, 0.018654083, 0.018654556, 0.018668417, 0.018668903, 0.018673583, 0.018674069, 0.018682597, 0.018683069, 0.018696583, 0.018697069, 0.018708583, 0.018709069, 0.018721264, 0.018721736, 0.018729278, 0.01872975, 0.018734431, 0.018734903, 0.018749097, 0.018749569, 0.018763444, 0.018763917, 0.018774264, 0.018774736, 0.018781764, 0.01878225, 0.018788111, 0.018788583, 0.018794264, 0.01879475, 0.018805097, 0.018805583, 0.018819097, 0.018819583, 0.018825111, 0.018825583, 0.018837931, 0.018838417, 0.018852292, 0.018852764, 0.018865611, 0.018866083, 0.018876458, 0.018876931, 0.018888611, 0.018889083, 0.018895625, 0.018896097, 0.018905611, 0.018906097, 0.018920319, 0.018920792, 0.018929111, 0.018929597, 0.018940667, 0.018941139, 0.018945944, 0.018946431, 0.018960472, 0.018960944], 'sourcesource_diff': [0, 4.859999999974607e-07, 8.195000000002506e-06, 4.7199999999789077e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 1.4707999999998694e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 8.195000000002506e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.0694000000002063e-05, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.870000000004038e-07, 1.151299999999772e-05, 4.870000000004038e-07, 9.180000000000993e-06, 4.860000000009301e-07, 1.1888999999997568e-05, 4.720000000013602e-07, 7.570000000001881e-06, 4.7199999999789077e-07, 1.4472000000001484e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 5.569000000000407e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 4.679999999999962e-06, 4.860000000009301e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.859999999974607e-07, 1.2195000000003037e-05, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 4.680999999999436e-06, 4.720000000013602e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 1.3874999999999998e-05, 4.7300000000083386e-07, 1.0346999999997358e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.859999999974607e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 5.527999999997701e-06, 4.720000000013602e-07, 1.2347999999998832e-05, 4.860000000009301e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.1680000000000024e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.4222000000001234e-05, 4.729999999973644e-07, 8.318999999999688e-06, 4.860000000009301e-07, 1.1070000000001912e-05, 4.7199999999789077e-07, 4.805000000000087e-06, 4.870000000004038e-07, 1.404099999999936e-05, 4.720000000013602e-07], 'diff': [0, 4.859999999974607e-07, 8.195000000002506e-06, 4.7199999999789077e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 1.4707999999998694e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 8.195000000002506e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.0694000000002063e-05, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.870000000004038e-07, 1.151299999999772e-05, 4.870000000004038e-07, 9.180000000000993e-06, 4.860000000009301e-07, 1.1888999999997568e-05, 4.720000000013602e-07, 7.570000000001881e-06, 4.7199999999789077e-07, 1.4472000000001484e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 5.569000000000407e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 4.679999999999962e-06, 4.860000000009301e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.859999999974607e-07, 1.2195000000003037e-05, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 4.680999999999436e-06, 4.720000000013602e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 1.3874999999999998e-05, 4.7300000000083386e-07, 1.0346999999997358e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.860000000009301e-07, 5.860999999999367e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.859999999974607e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 5.527999999997701e-06, 4.720000000013602e-07, 1.2347999999998832e-05, 4.860000000009301e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.1680000000000024e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.4222000000001234e-05, 4.729999999973644e-07, 8.318999999999688e-06, 4.860000000009301e-07, 1.1070000000001912e-05, 4.7199999999789077e-07, 4.805000000000087e-06, 4.870000000004038e-07, 1.404099999999936e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:21.191" endtime="20201112 09:53:21.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.187" endtime="20201112 09:53:21.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:21.199" level="INFO">${RESULT} = [{'time': 0.018466708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018475375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:21.196" endtime="20201112 09:53:21.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:21.212" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:21.200" endtime="20201112 09:53:21.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.217" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:21.216" endtime="20201112 09:53:21.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.219" level="INFO">VALUE: [4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:21.218" endtime="20201112 09:53:21.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.213" endtime="20201112 09:53:21.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.222" endtime="20201112 09:53:21.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:21.226" endtime="20201112 09:53:21.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.224" endtime="20201112 09:53:21.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.221" endtime="20201112 09:53:21.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:20.817" endtime="20201112 09:53:21.246"></status>
</kw>
<msg timestamp="20201112 09:53:21.247" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.255" endtime="20201112 09:53:21.265"></status>
</kw>
<msg timestamp="20201112 09:53:21.265" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:21.253" endtime="20201112 09:53:21.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.268" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:21.266" endtime="20201112 09:53:21.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.269" endtime="20201112 09:53:21.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.250" endtime="20201112 09:53:21.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.248" endtime="20201112 09:53:21.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.278" endtime="20201112 09:53:21.561"></status>
</kw>
<msg timestamp="20201112 09:53:21.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019224208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:21.276" endtime="20201112 09:53:21.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019224208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:21.565" endtime="20201112 09:53:21.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.574" endtime="20201112 09:53:21.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.274" endtime="20201112 09:53:21.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.272" endtime="20201112 09:53:21.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.580" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:21.579" endtime="20201112 09:53:21.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.585" level="INFO">VALUE: [{'time': 0.019224208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019228847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.019229319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019244014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.0192445, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019251347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.019251833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019263681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1848000000001802e-05, 'source_diff': 1.1848000000001802e-05}, {'time': 0.019264167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019274181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.019274667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019283361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.019283833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019297042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3209000000000137e-05, 'source_diff': 1.3209000000000137e-05}, {'time': 0.019297514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.019312, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019325194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.019325667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019331194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.019331667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019337875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.019338347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019347861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.019348333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019354194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.019354681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.01936675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2068999999999969e-05, 'source_diff': 1.2068999999999969e-05}, {'time': 0.019367222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019374528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.019375014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019387194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180000000000524e-05, 'source_diff': 1.2180000000000524e-05}, {'time': 0.019387681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019399875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019400347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019404708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019405181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019416208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027000000000259e-05, 'source_diff': 1.1027000000000259e-05}, {'time': 0.019416681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019428222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.154099999999686e-05, 'source_diff': 1.154099999999686e-05}, {'time': 0.019428694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019434375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.019434847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019440389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.019440861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019446556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.019447028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019455056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027999999996732e-06, 'source_diff': 8.027999999996732e-06}, {'time': 0.019455528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019463875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.019464347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019471236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.019471708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019475861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019476333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019489028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.0194895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019494694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019495167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019509028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.0195095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019522375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2875000000002468e-05, 'source_diff': 1.2875000000002468e-05}, {'time': 0.019522847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019537542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.019538014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019551042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.019551514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019565694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.019566181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019571708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527000000001697e-06, 'source_diff': 5.527000000001697e-06}, {'time': 0.019572181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019577361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.019577847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019588208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019588681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019593875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019594347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019599389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.019599861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01960625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.019606722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019616056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.019616528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019629875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.019630347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019638556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.019639028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019644556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019645028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019654208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.019654694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019662056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3620000000003405e-06, 'source_diff': 7.3620000000003405e-06}, {'time': 0.019662528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019673583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1055000000002868e-05, 'source_diff': 1.1055000000002868e-05}, {'time': 0.019674056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019683708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652000000002353e-06, 'source_diff': 9.652000000002353e-06}, {'time': 0.019684194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019691542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.348000000000771e-06, 'source_diff': 7.348000000000771e-06}, {'time': 0.019692028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:21.582" endtime="20201112 09:53:21.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.577" endtime="20201112 09:53:21.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:21.611" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:21.588" endtime="20201112 09:53:21.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.615" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:21.614" endtime="20201112 09:53:21.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.619" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.019224208, 0.019224681, 0.019228847, 0.019229319, 0.019244014, 0.0192445, 0.019251347, 0.019251833, 0.019263681, 0.019264167, 0.019274181, 0.019274667, 0.019283361, 0.019283833, 0.019297042, 0.019297514, 0.019311528, 0.019312, 0.019325194, 0.019325667, 0.019331194, 0.019331667, 0.019337875, 0.019338347, 0.019347861, 0.019348333, 0.019354194, 0.019354681, 0.01936675, 0.019367222, 0.019374528, 0.019375014, 0.019387194, 0.019387681, 0.019399875, 0.019400347, 0.019404708, 0.019405181, 0.019416208, 0.019416681, 0.019428222, 0.019428694, 0.019434375, 0.019434847, 0.019440389, 0.019440861, 0.019446556, 0.019447028, 0.019455056, 0.019455528, 0.019463875, 0.019464347, 0.019471236, 0.019471708, 0.019475861, 0.019476333, 0.019489028, 0.0194895, 0.019494694, 0.019495167, 0.019509028, 0.0195095, 0.019522375, 0.019522847, 0.019537542, 0.019538014, 0.019551042, 0.019551514, 0.019565694, 0.019566181, 0.019571708, 0.019572181, 0.019577361, 0.019577847, 0.019588208, 0.019588681, 0.019593875, 0.019594347, 0.019599389, 0.019599861, 0.01960625, 0.019606722, 0.019616056, 0.019616528, 0.019629875, 0.019630347, 0.019638556, 0.019639028, 0.019644556, 0.019645028, 0.019654208, 0.019654694, 0.019662056, 0.019662528, 0.019673583, 0.019674056, 0.019683708, 0.019684194, 0.019691542, 0.019692028], 'sourcesource_diff': [0, 4.7300000000083386e-07, 4.165999999999892e-06, 4.720000000013602e-07, 1.4694999999998598e-05, 4.860000000009301e-07, 6.8469999999973274e-06, 4.860000000009301e-07, 1.1848000000001802e-05, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 8.694000000000063e-06, 4.720000000013602e-07, 1.3209000000000137e-05, 4.720000000013602e-07, 1.4013999999999693e-05, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 5.526999999998228e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 5.861000000002836e-06, 4.869999999969343e-07, 1.2068999999999969e-05, 4.720000000013602e-07, 7.305999999998591e-06, 4.860000000009301e-07, 1.2180000000000524e-05, 4.870000000004038e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 1.154099999999686e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.720000000013602e-07, 8.027999999996732e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.7199999999789077e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 1.2875000000002468e-05, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 1.4180000000002524e-05, 4.869999999969343e-07, 5.527000000001697e-06, 4.7300000000083386e-07, 5.180000000000462e-06, 4.859999999974607e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.3347000000000359e-05, 4.7199999999789077e-07, 8.209000000002076e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 9.180000000000993e-06, 4.860000000009301e-07, 7.3620000000003405e-06, 4.7199999999789077e-07, 1.1055000000002868e-05, 4.729999999973644e-07, 9.652000000002353e-06, 4.859999999974607e-07, 7.348000000000771e-06, 4.860000000009301e-07], 'diff': [0, 4.7300000000083386e-07, 4.165999999999892e-06, 4.720000000013602e-07, 1.4694999999998598e-05, 4.860000000009301e-07, 6.8469999999973274e-06, 4.860000000009301e-07, 1.1848000000001802e-05, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 8.694000000000063e-06, 4.720000000013602e-07, 1.3209000000000137e-05, 4.720000000013602e-07, 1.4013999999999693e-05, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 5.526999999998228e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 4.7199999999789077e-07, 5.861000000002836e-06, 4.869999999969343e-07, 1.2068999999999969e-05, 4.720000000013602e-07, 7.305999999998591e-06, 4.860000000009301e-07, 1.2180000000000524e-05, 4.870000000004038e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 1.154099999999686e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.720000000013602e-07, 8.027999999996732e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 6.888999999999507e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.7199999999789077e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 1.2875000000002468e-05, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 1.4180000000002524e-05, 4.869999999969343e-07, 5.527000000001697e-06, 4.7300000000083386e-07, 5.180000000000462e-06, 4.859999999974607e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 5.041999999996771e-06, 4.720000000013602e-07, 6.388999999999007e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 1.3347000000000359e-05, 4.7199999999789077e-07, 8.209000000002076e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 9.180000000000993e-06, 4.860000000009301e-07, 7.3620000000003405e-06, 4.7199999999789077e-07, 1.1055000000002868e-05, 4.729999999973644e-07, 9.652000000002353e-06, 4.859999999974607e-07, 7.348000000000771e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:21.616" endtime="20201112 09:53:21.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.612" endtime="20201112 09:53:21.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:21.625" level="INFO">${RESULT} = [{'time': 0.019224681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019229319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:21.622" endtime="20201112 09:53:21.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:21.639" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:21.626" endtime="20201112 09:53:21.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.643" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:21.642" endtime="20201112 09:53:21.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.645" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:53:21.644" endtime="20201112 09:53:21.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.640" endtime="20201112 09:53:21.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.648" endtime="20201112 09:53:21.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:21.652" endtime="20201112 09:53:21.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.650" endtime="20201112 09:53:21.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.647" endtime="20201112 09:53:21.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.247" endtime="20201112 09:53:21.672"></status>
</kw>
<msg timestamp="20201112 09:53:21.673" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.680" endtime="20201112 09:53:21.690"></status>
</kw>
<msg timestamp="20201112 09:53:21.691" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:21.679" endtime="20201112 09:53:21.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:21.693" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:21.692" endtime="20201112 09:53:21.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.694" endtime="20201112 09:53:21.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.676" endtime="20201112 09:53:21.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.675" endtime="20201112 09:53:21.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:21.703" endtime="20201112 09:53:21.990"></status>
</kw>
<msg timestamp="20201112 09:53:21.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018386861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018387333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:21.702" endtime="20201112 09:53:21.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018386861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018387333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:21.994" endtime="20201112 09:53:22.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.002" endtime="20201112 09:53:22.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.699" endtime="20201112 09:53:22.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.697" endtime="20201112 09:53:22.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.009" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:22.008" endtime="20201112 09:53:22.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.015" level="INFO">VALUE: [{'time': 0.018386861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018387333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018393028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.0183935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018402042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.018402514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018410361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018410833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018419708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018420181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018425542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018426014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018437528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018438, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018445361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018445847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018455528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.018456014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018466042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018466514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018481278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.01848175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018486861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018487347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208999999997137e-05, 'source_diff': 1.0208999999997137e-05}, {'time': 0.018498028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018503389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018503861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018513542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.018514014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018518181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}, {'time': 0.018518667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018526028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.0185265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018533028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.0185335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018541847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.018542333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018551694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018552167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018564194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.202699999999779e-05, 'source_diff': 1.202699999999779e-05}, {'time': 0.018564667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018578194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.352699999999929e-05, 'source_diff': 1.352699999999929e-05}, {'time': 0.018578667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018583569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.018584042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018596875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.018597347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018608042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000001537e-05, 'source_diff': 1.0695000000001537e-05}, {'time': 0.018608514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018621042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.018621514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018627194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.018627681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018634361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.018634847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018641028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018641514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018646194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018646681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018655208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.018655681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018669708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.402699999999979e-05, 'source_diff': 1.402699999999979e-05}, {'time': 0.018670181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018677208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.018677681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018684042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.018684514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018696056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.018696528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018708875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018709347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018716556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208999999997606e-06, 'source_diff': 7.208999999997606e-06}, {'time': 0.018717028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018724875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018725347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018732708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018733181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018747542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.018748028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018760875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018761361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018772542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.018773028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018777194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018777667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018781847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018782319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018793667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1348000000001301e-05, 'source_diff': 1.1348000000001301e-05}, {'time': 0.018794153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018807514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.018807986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018821069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3083000000000539e-05, 'source_diff': 1.3083000000000539e-05}, {'time': 0.018821542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018832417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.018832889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018839194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.018839667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018849708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.018850181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:22.010" endtime="20201112 09:53:22.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.006" endtime="20201112 09:53:22.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:22.040" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:22.018" endtime="20201112 09:53:22.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.044" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:22.043" endtime="20201112 09:53:22.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.048" level="INFO">VALUE: {'eventtime': [0.018386861, 0.018387333, 0.018393028, 0.0183935, 0.018402042, 0.018402514, 0.018410361, 0.018410833, 0.018419708, 0.018420181, 0.018425542, 0.018426014, 0.018437528, 0.018438, 0.018445361, 0.018445847, 0.018455528, 0.018456014, 0.018466042, 0.018466514, 0.018481278, 0.01848175, 0.018486861, 0.018487347, 0.018497556, 0.018498028, 0.018503389, 0.018503861, 0.018513542, 0.018514014, 0.018518181, 0.018518667, 0.018526028, 0.0185265, 0.018533028, 0.0185335, 0.018541847, 0.018542333, 0.018551694, 0.018552167, 0.018564194, 0.018564667, 0.018578194, 0.018578667, 0.018583569, 0.018584042, 0.018596875, 0.018597347, 0.018608042, 0.018608514, 0.018621042, 0.018621514, 0.018627194, 0.018627681, 0.018634361, 0.018634847, 0.018641028, 0.018641514, 0.018646194, 0.018646681, 0.018655208, 0.018655681, 0.018669708, 0.018670181, 0.018677208, 0.018677681, 0.018684042, 0.018684514, 0.018696056, 0.018696528, 0.018708875, 0.018709347, 0.018716556, 0.018717028, 0.018724875, 0.018725347, 0.018732708, 0.018733181, 0.018747542, 0.018748028, 0.018760875, 0.018761361, 0.018772542, 0.018773028, 0.018777194, 0.018777667, 0.018781847, 0.018782319, 0.018793667, 0.018794153, 0.018807514, 0.018807986, 0.018821069, 0.018821542, 0.018832417, 0.018832889, 0.018839194, 0.018839667, 0.018849708, 0.018850181], 'sourcesource_diff': [0, 4.7199999999789077e-07, 5.695000000000006e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.1514000000000663e-05, 4.7199999999789077e-07, 7.361000000000867e-06, 4.860000000009301e-07, 9.680999999997497e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 1.4764000000000443e-05, 4.720000000013602e-07, 5.110999999998617e-06, 4.860000000009301e-07, 1.0208999999997137e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 4.167000000002835e-06, 4.859999999974607e-07, 7.361000000000867e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 1.202699999999779e-05, 4.7300000000083386e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 4.902000000001072e-06, 4.729999999973644e-07, 1.2833000000000289e-05, 4.720000000013602e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 5.680000000000962e-06, 4.870000000004038e-07, 6.679999999998493e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.860000000009301e-07, 4.679999999999962e-06, 4.869999999969343e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 1.402699999999979e-05, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 6.360999999999867e-06, 4.7199999999789077e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.2346999999999358e-05, 4.720000000013602e-07, 7.208999999997606e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 1.4360999999997459e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 4.179999999999462e-06, 4.7199999999789077e-07, 1.1348000000001301e-05, 4.860000000009301e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 1.3083000000000539e-05, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 6.305000000001587e-06, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.7300000000083386e-07], 'diff': [0, 4.7199999999789077e-07, 5.695000000000006e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 7.847000000001797e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.1514000000000663e-05, 4.7199999999789077e-07, 7.361000000000867e-06, 4.860000000009301e-07, 9.680999999997497e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 1.4764000000000443e-05, 4.720000000013602e-07, 5.110999999998617e-06, 4.860000000009301e-07, 1.0208999999997137e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 4.167000000002835e-06, 4.859999999974607e-07, 7.361000000000867e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 1.202699999999779e-05, 4.7300000000083386e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 4.902000000001072e-06, 4.729999999973644e-07, 1.2833000000000289e-05, 4.720000000013602e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 5.680000000000962e-06, 4.870000000004038e-07, 6.679999999998493e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.860000000009301e-07, 4.679999999999962e-06, 4.869999999969343e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 1.402699999999979e-05, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 6.360999999999867e-06, 4.7199999999789077e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.2346999999999358e-05, 4.720000000013602e-07, 7.208999999997606e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 1.4360999999997459e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 4.179999999999462e-06, 4.7199999999789077e-07, 1.1348000000001301e-05, 4.860000000009301e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 1.3083000000000539e-05, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 6.305000000001587e-06, 4.7300000000083386e-07, 1.0040999999998829e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:22.045" endtime="20201112 09:53:22.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.041" endtime="20201112 09:53:22.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:22.054" level="INFO">${RESULT} = [{'time': 0.018387333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0183935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:22.051" endtime="20201112 09:53:22.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:22.067" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:22.055" endtime="20201112 09:53:22.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.071" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:22.070" endtime="20201112 09:53:22.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.074" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:53:22.072" endtime="20201112 09:53:22.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.068" endtime="20201112 09:53:22.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.077" endtime="20201112 09:53:22.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:22.080" endtime="20201112 09:53:22.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.079" endtime="20201112 09:53:22.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.075" endtime="20201112 09:53:22.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:21.673" endtime="20201112 09:53:22.101"></status>
</kw>
<msg timestamp="20201112 09:53:22.101" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.110" endtime="20201112 09:53:22.119"></status>
</kw>
<msg timestamp="20201112 09:53:22.120" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:22.107" endtime="20201112 09:53:22.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.122" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:22.121" endtime="20201112 09:53:22.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.123" endtime="20201112 09:53:22.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.105" endtime="20201112 09:53:22.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.103" endtime="20201112 09:53:22.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.132" endtime="20201112 09:53:22.416"></status>
</kw>
<msg timestamp="20201112 09:53:22.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019209903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019210375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:22.131" endtime="20201112 09:53:22.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019209903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019210375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:22.420" endtime="20201112 09:53:22.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.429" endtime="20201112 09:53:22.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.128" endtime="20201112 09:53:22.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.126" endtime="20201112 09:53:22.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.435" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:22.434" endtime="20201112 09:53:22.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.440" level="INFO">VALUE: [{'time': 0.019209903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019210375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019223556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.019224028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019234889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019235375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019241569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.019242042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019247931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.019248403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019256389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.019256875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019264556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.019265042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019278389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.019278875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019292417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.019292889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019298403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019298875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019306403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019306875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019316917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041999999998302e-05, 'source_diff': 1.0041999999998302e-05}, {'time': 0.019317389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019326236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.019326708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019334236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019334708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019339403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.695000000002475e-06, 'source_diff': 4.695000000002475e-06}, {'time': 0.019339875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019345403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019345875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019353236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.019353708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019365736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.019366222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019378903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.019379389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019392069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2680000000001024e-05, 'source_diff': 1.2680000000001024e-05}, {'time': 0.019392556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019398736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.019399222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019406583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.019407056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019413153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.019413625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019421083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999998383e-06, 'source_diff': 7.457999999998383e-06}, {'time': 0.019421556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01943225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000002063e-05, 'source_diff': 1.0694000000002063e-05}, {'time': 0.019432722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019440917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019441389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019454764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.019455236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019460653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.019461125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01947575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4625000000000749e-05, 'source_diff': 1.4625000000000749e-05}, {'time': 0.019476236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019489583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.019490069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019498097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.019498569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01950675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.019507236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01951975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.019520236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019524597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019525069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019532597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019533069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019541264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019541736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019545903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019546389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019558917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.019559389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019570903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.019571389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019576903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019577389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019589583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019590056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019602917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.019603389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01961425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019614722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019619417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019619889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019630764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0874999999996998e-05, 'source_diff': 1.0874999999996998e-05}, {'time': 0.019631236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019642417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.019642889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019657083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.019657569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019666417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.847999999998801e-06, 'source_diff': 8.847999999998801e-06}, {'time': 0.019666903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019674931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.019675403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019684417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.019684903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:22.436" endtime="20201112 09:53:22.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.432" endtime="20201112 09:53:22.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:22.467" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:22.443" endtime="20201112 09:53:22.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.470" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:22.469" endtime="20201112 09:53:22.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.474" level="INFO">VALUE: {'eventtime': [0.019209903, 0.019210375, 0.019223556, 0.019224028, 0.019234889, 0.019235375, 0.019241569, 0.019242042, 0.019247931, 0.019248403, 0.019256389, 0.019256875, 0.019264556, 0.019265042, 0.019278389, 0.019278875, 0.019292417, 0.019292889, 0.019298403, 0.019298875, 0.019306403, 0.019306875, 0.019316917, 0.019317389, 0.019326236, 0.019326708, 0.019334236, 0.019334708, 0.019339403, 0.019339875, 0.019345403, 0.019345875, 0.019353236, 0.019353708, 0.019365736, 0.019366222, 0.019378903, 0.019379389, 0.019392069, 0.019392556, 0.019398736, 0.019399222, 0.019406583, 0.019407056, 0.019413153, 0.019413625, 0.019421083, 0.019421556, 0.01943225, 0.019432722, 0.019440917, 0.019441389, 0.019454764, 0.019455236, 0.019460653, 0.019461125, 0.01947575, 0.019476236, 0.019489583, 0.019490069, 0.019498097, 0.019498569, 0.01950675, 0.019507236, 0.01951975, 0.019520236, 0.019524597, 0.019525069, 0.019532597, 0.019533069, 0.019541264, 0.019541736, 0.019545903, 0.019546389, 0.019558917, 0.019559389, 0.019570903, 0.019571389, 0.019576903, 0.019577389, 0.019589583, 0.019590056, 0.019602917, 0.019603389, 0.01961425, 0.019614722, 0.019619417, 0.019619889, 0.019630764, 0.019631236, 0.019642417, 0.019642889, 0.019657083, 0.019657569, 0.019666417, 0.019666903, 0.019674931, 0.019675403, 0.019684417, 0.019684903], 'sourcesource_diff': [0, 4.7199999999789077e-07, 1.3181000000000997e-05, 4.720000000013602e-07, 1.0861000000000898e-05, 4.859999999974607e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 7.985999999998022e-06, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 1.3541999999998333e-05, 4.720000000013602e-07, 5.5139999999981315e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 4.695000000002475e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.859999999974607e-07, 1.2681000000000497e-05, 4.860000000009301e-07, 1.2680000000001024e-05, 4.869999999969343e-07, 6.180000000001462e-06, 4.860000000009301e-07, 7.361000000000867e-06, 4.729999999973644e-07, 6.097000000000047e-06, 4.720000000013602e-07, 7.457999999998383e-06, 4.7300000000083386e-07, 1.0694000000002063e-05, 4.7199999999789077e-07, 8.194999999999036e-06, 4.720000000013602e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 5.417000000000616e-06, 4.7199999999789077e-07, 1.4625000000000749e-05, 4.860000000009301e-07, 1.3347000000000359e-05, 4.859999999974607e-07, 8.028000000000202e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 1.2194000000000094e-05, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 1.0874999999996998e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 1.4193999999998624e-05, 4.860000000009301e-07, 8.847999999998801e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07], 'diff': [0, 4.7199999999789077e-07, 1.3181000000000997e-05, 4.720000000013602e-07, 1.0861000000000898e-05, 4.859999999974607e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 7.985999999998022e-06, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 1.3541999999998333e-05, 4.720000000013602e-07, 5.5139999999981315e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 4.695000000002475e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.859999999974607e-07, 1.2681000000000497e-05, 4.860000000009301e-07, 1.2680000000001024e-05, 4.869999999969343e-07, 6.180000000001462e-06, 4.860000000009301e-07, 7.361000000000867e-06, 4.729999999973644e-07, 6.097000000000047e-06, 4.720000000013602e-07, 7.457999999998383e-06, 4.7300000000083386e-07, 1.0694000000002063e-05, 4.7199999999789077e-07, 8.194999999999036e-06, 4.720000000013602e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 5.417000000000616e-06, 4.7199999999789077e-07, 1.4625000000000749e-05, 4.860000000009301e-07, 1.3347000000000359e-05, 4.859999999974607e-07, 8.028000000000202e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 1.2194000000000094e-05, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 1.0874999999996998e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 1.4193999999998624e-05, 4.860000000009301e-07, 8.847999999998801e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:22.471" endtime="20201112 09:53:22.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.467" endtime="20201112 09:53:22.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:22.480" level="INFO">${RESULT} = [{'time': 0.019210375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019224028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:22.477" endtime="20201112 09:53:22.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:22.494" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:22.481" endtime="20201112 09:53:22.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.498" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:22.497" endtime="20201112 09:53:22.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.501" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:53:22.499" endtime="20201112 09:53:22.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.495" endtime="20201112 09:53:22.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.504" endtime="20201112 09:53:22.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:22.507" endtime="20201112 09:53:22.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.506" endtime="20201112 09:53:22.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.502" endtime="20201112 09:53:22.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.102" endtime="20201112 09:53:22.528"></status>
</kw>
<msg timestamp="20201112 09:53:22.528" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.536" endtime="20201112 09:53:22.545"></status>
</kw>
<msg timestamp="20201112 09:53:22.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:22.534" endtime="20201112 09:53:22.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:22.547" endtime="20201112 09:53:22.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.549" endtime="20201112 09:53:22.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.532" endtime="20201112 09:53:22.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.530" endtime="20201112 09:53:22.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.558" endtime="20201112 09:53:22.844"></status>
</kw>
<msg timestamp="20201112 09:53:22.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018352111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018352583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:22.557" endtime="20201112 09:53:22.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018352111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018352583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:22.848" endtime="20201112 09:53:22.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.857" endtime="20201112 09:53:22.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.554" endtime="20201112 09:53:22.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.552" endtime="20201112 09:53:22.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.863" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:22.862" endtime="20201112 09:53:22.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.868" level="INFO">VALUE: [{'time': 0.018352111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018352583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018363778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1195000000002037e-05, 'source_diff': 1.1195000000002037e-05}, {'time': 0.01836425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018375667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1416999999999677e-05, 'source_diff': 1.1416999999999677e-05}, {'time': 0.018376139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018388111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.018388597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018400278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.018400764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018408111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.018408597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018423278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4681000000002498e-05, 'source_diff': 1.4681000000002498e-05}, {'time': 0.018423764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018433, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.018433472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018440625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018441097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018453347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.018453819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018463125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.018463597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018473625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018474097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018481181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.084000000000951e-06, 'source_diff': 7.084000000000951e-06}, {'time': 0.018481653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018495958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.430499999999918e-05, 'source_diff': 1.430499999999918e-05}, {'time': 0.018496431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018510458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.402699999999979e-05, 'source_diff': 1.402699999999979e-05}, {'time': 0.018510944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018523806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2861999999998902e-05, 'source_diff': 1.2861999999998902e-05}, {'time': 0.018524278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018531625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.018532111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018540958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018541444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018546625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018547111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018552458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018552944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018561306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.36200000000134e-06, 'source_diff': 8.36200000000134e-06}, {'time': 0.018561778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018575833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.405499999999893e-05, 'source_diff': 1.405499999999893e-05}, {'time': 0.018576306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018582139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018582611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018593639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018594111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018601472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018601944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018608972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.018609444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018619806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361999999999871e-05, 'source_diff': 1.0361999999999871e-05}, {'time': 0.018620278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018631306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018631778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018638306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018638792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018647806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.018648292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018657472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.018657958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018666139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.181000000002936e-06, 'source_diff': 8.181000000002936e-06}, {'time': 0.018666625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018673639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018674125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018679653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018680125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018687333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.018687806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018699319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.151299999999772e-05, 'source_diff': 1.151299999999772e-05}, {'time': 0.018699792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018711153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.018711625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018721486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018721958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018729819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018730292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018743986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3694000000001594e-05, 'source_diff': 1.3694000000001594e-05}, {'time': 0.018744472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018753653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.018754139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018762333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018762806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018772153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018772639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018779653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018780139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018794667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018795139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018809528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.01881, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018817667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.018818139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018829514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1374999999997498e-05, 'source_diff': 1.1374999999997498e-05}, {'time': 0.018829986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018834333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.018834806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0188405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.018840972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:22.864" endtime="20201112 09:53:22.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.860" endtime="20201112 09:53:22.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:22.895" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:22.871" endtime="20201112 09:53:22.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.899" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:22.898" endtime="20201112 09:53:22.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.903" level="INFO">VALUE: {'eventtime': [0.018352111, 0.018352583, 0.018363778, 0.01836425, 0.018375667, 0.018376139, 0.018388111, 0.018388597, 0.018400278, 0.018400764, 0.018408111, 0.018408597, 0.018423278, 0.018423764, 0.018433, 0.018433472, 0.018440625, 0.018441097, 0.018453347, 0.018453819, 0.018463125, 0.018463597, 0.018473625, 0.018474097, 0.018481181, 0.018481653, 0.018495958, 0.018496431, 0.018510458, 0.018510944, 0.018523806, 0.018524278, 0.018531625, 0.018532111, 0.018540958, 0.018541444, 0.018546625, 0.018547111, 0.018552458, 0.018552944, 0.018561306, 0.018561778, 0.018575833, 0.018576306, 0.018582139, 0.018582611, 0.018593639, 0.018594111, 0.018601472, 0.018601944, 0.018608972, 0.018609444, 0.018619806, 0.018620278, 0.018631306, 0.018631778, 0.018638306, 0.018638792, 0.018647806, 0.018648292, 0.018657472, 0.018657958, 0.018666139, 0.018666625, 0.018673639, 0.018674125, 0.018679653, 0.018680125, 0.018687333, 0.018687806, 0.018699319, 0.018699792, 0.018711153, 0.018711625, 0.018721486, 0.018721958, 0.018729819, 0.018730292, 0.018743986, 0.018744472, 0.018753653, 0.018754139, 0.018762333, 0.018762806, 0.018772153, 0.018772639, 0.018779653, 0.018780139, 0.018794667, 0.018795139, 0.018809528, 0.01881, 0.018817667, 0.018818139, 0.018829514, 0.018829986, 0.018834333, 0.018834806, 0.0188405, 0.018840972], 'sourcesource_diff': [0, 4.7199999999789077e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 1.1416999999999677e-05, 4.720000000013602e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.1680999999999497e-05, 4.860000000009301e-07, 7.347000000001297e-06, 4.859999999974607e-07, 1.4681000000002498e-05, 4.859999999974607e-07, 9.236000000002742e-06, 4.7199999999789077e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.2249999999998373e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.7199999999789077e-07, 7.084000000000951e-06, 4.720000000013602e-07, 1.430499999999918e-05, 4.7300000000083386e-07, 1.402699999999979e-05, 4.860000000009301e-07, 1.2861999999998902e-05, 4.720000000013602e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 8.846999999999328e-06, 4.860000000009301e-07, 5.180999999999936e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.859999999974607e-07, 8.36200000000134e-06, 4.720000000013602e-07, 1.405499999999893e-05, 4.7300000000083386e-07, 5.833000000000227e-06, 4.7199999999789077e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.860000000009301e-07, 9.180000000000993e-06, 4.859999999974607e-07, 8.181000000002936e-06, 4.859999999974607e-07, 7.013999999999632e-06, 4.860000000009301e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.7300000000083386e-07, 1.151299999999772e-05, 4.7300000000083386e-07, 1.1361000000001398e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.729999999973644e-07, 1.3694000000001594e-05, 4.860000000009301e-07, 9.180999999996997e-06, 4.860000000009301e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 1.4389000000000068e-05, 4.720000000013602e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.1374999999997498e-05, 4.720000000013602e-07, 4.347000000001766e-06, 4.729999999973644e-07, 5.694000000000532e-06, 4.720000000013602e-07], 'diff': [0, 4.7199999999789077e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 1.1416999999999677e-05, 4.720000000013602e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.1680999999999497e-05, 4.860000000009301e-07, 7.347000000001297e-06, 4.859999999974607e-07, 1.4681000000002498e-05, 4.859999999974607e-07, 9.236000000002742e-06, 4.7199999999789077e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.2249999999998373e-05, 4.720000000013602e-07, 9.306000000000592e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.7199999999789077e-07, 7.084000000000951e-06, 4.720000000013602e-07, 1.430499999999918e-05, 4.7300000000083386e-07, 1.402699999999979e-05, 4.860000000009301e-07, 1.2861999999998902e-05, 4.720000000013602e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 8.846999999999328e-06, 4.860000000009301e-07, 5.180999999999936e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.859999999974607e-07, 8.36200000000134e-06, 4.720000000013602e-07, 1.405499999999893e-05, 4.7300000000083386e-07, 5.833000000000227e-06, 4.7199999999789077e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.860000000009301e-07, 9.180000000000993e-06, 4.859999999974607e-07, 8.181000000002936e-06, 4.859999999974607e-07, 7.013999999999632e-06, 4.860000000009301e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.208000000001602e-06, 4.7300000000083386e-07, 1.151299999999772e-05, 4.7300000000083386e-07, 1.1361000000001398e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.729999999973644e-07, 1.3694000000001594e-05, 4.860000000009301e-07, 9.180999999996997e-06, 4.860000000009301e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 1.4389000000000068e-05, 4.720000000013602e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.1374999999997498e-05, 4.720000000013602e-07, 4.347000000001766e-06, 4.729999999973644e-07, 5.694000000000532e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:22.900" endtime="20201112 09:53:22.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.896" endtime="20201112 09:53:22.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:22.908" level="INFO">${RESULT} = [{'time': 0.018352583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01836425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:53:22.905" endtime="20201112 09:53:22.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:22.922" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:22.909" endtime="20201112 09:53:22.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.926" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:22.925" endtime="20201112 09:53:22.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.928" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:53:22.927" endtime="20201112 09:53:22.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.922" endtime="20201112 09:53:22.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.931" endtime="20201112 09:53:22.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:22.935" endtime="20201112 09:53:22.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.933" endtime="20201112 09:53:22.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.930" endtime="20201112 09:53:22.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.529" endtime="20201112 09:53:22.955"></status>
</kw>
<msg timestamp="20201112 09:53:22.956" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.963" endtime="20201112 09:53:22.973"></status>
</kw>
<msg timestamp="20201112 09:53:22.973" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:22.962" endtime="20201112 09:53:22.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:22.976" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:22.974" endtime="20201112 09:53:22.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.977" endtime="20201112 09:53:22.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.959" endtime="20201112 09:53:22.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.957" endtime="20201112 09:53:22.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:22.986" endtime="20201112 09:53:23.273"></status>
</kw>
<msg timestamp="20201112 09:53:23.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:22.985" endtime="20201112 09:53:23.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:23.277" endtime="20201112 09:53:23.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.286" endtime="20201112 09:53:23.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.982" endtime="20201112 09:53:23.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.981" endtime="20201112 09:53:23.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.292" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:23.291" endtime="20201112 09:53:23.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.297" level="INFO">VALUE: [{'time': 0.018491694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018497528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018498014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018507722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.018508194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018513875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018514347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018524056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.018524528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018538542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4014000000003163e-05, 'source_diff': 1.4014000000003163e-05}, {'time': 0.018539014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018546875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018547347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018552542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.195000000002975e-06, 'source_diff': 5.195000000002975e-06}, {'time': 0.018553014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018558708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.018559181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018567542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.018568014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018578208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.018578681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018593208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.018593694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018603542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847999999999801e-06, 'source_diff': 9.847999999999801e-06}, {'time': 0.018604028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018609222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018609694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018620875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.018621361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018633556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.018634028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018643222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018643694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018657569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.018658042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018669611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.018670083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018680556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000000426e-05, 'source_diff': 1.0473000000000426e-05}, {'time': 0.018681028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018688222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.018688694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018698056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.36200000000234e-06, 'source_diff': 9.36200000000234e-06}, {'time': 0.018698542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018706222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.018706708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018716889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.018717375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018726389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.018726875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018731389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018731875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018742069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000001563e-05, 'source_diff': 1.0194000000001563e-05}, {'time': 0.018742542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018748403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018748875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018754903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018755375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018764236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018764708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018771292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018782069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0777000000000009e-05, 'source_diff': 1.0777000000000009e-05}, {'time': 0.018782542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018791403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.018791875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018798764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.018799236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018813236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.018813708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01882625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2542000000000803e-05, 'source_diff': 1.2542000000000803e-05}, {'time': 0.018826722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018835736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.018836222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018849944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.018850417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018860403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.018860889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018872917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.018873389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018887264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.018887736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018895764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018896236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018909931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3695000000001067e-05, 'source_diff': 1.3695000000001067e-05}, {'time': 0.018910403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018916083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.018916556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018928083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.152699999999729e-05, 'source_diff': 1.152699999999729e-05}, {'time': 0.018928556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018940917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.018941389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018946931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018947403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018959083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.018959569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01897325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3681000000001498e-05, 'source_diff': 1.3681000000001498e-05}, {'time': 0.018973736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018981958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.018982431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:23.293" endtime="20201112 09:53:23.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.289" endtime="20201112 09:53:23.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:23.323" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:23.300" endtime="20201112 09:53:23.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.327" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:23.326" endtime="20201112 09:53:23.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.331" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.018491694, 0.018492181, 0.018497528, 0.018498014, 0.018507722, 0.018508194, 0.018513875, 0.018514347, 0.018524056, 0.018524528, 0.018538542, 0.018539014, 0.018546875, 0.018547347, 0.018552542, 0.018553014, 0.018558708, 0.018559181, 0.018567542, 0.018568014, 0.018578208, 0.018578681, 0.018593208, 0.018593694, 0.018603542, 0.018604028, 0.018609222, 0.018609694, 0.018620875, 0.018621361, 0.018633556, 0.018634028, 0.018643222, 0.018643694, 0.018657569, 0.018658042, 0.018669611, 0.018670083, 0.018680556, 0.018681028, 0.018688222, 0.018688694, 0.018698056, 0.018698542, 0.018706222, 0.018706708, 0.018716889, 0.018717375, 0.018726389, 0.018726875, 0.018731389, 0.018731875, 0.018742069, 0.018742542, 0.018748403, 0.018748875, 0.018754903, 0.018755375, 0.018764236, 0.018764708, 0.018770819, 0.018771292, 0.018782069, 0.018782542, 0.018791403, 0.018791875, 0.018798764, 0.018799236, 0.018813236, 0.018813708, 0.01882625, 0.018826722, 0.018835736, 0.018836222, 0.018849944, 0.018850417, 0.018860403, 0.018860889, 0.018872917, 0.018873389, 0.018887264, 0.018887736, 0.018895764, 0.018896236, 0.018909931, 0.018910403, 0.018916083, 0.018916556, 0.018928083, 0.018928556, 0.018940917, 0.018941389, 0.018946931, 0.018947403, 0.018959083, 0.018959569, 0.01897325, 0.018973736, 0.018981958, 0.018982431], 'sourcesource_diff': [0, 4.870000000004038e-07, 5.346999999999297e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 5.681000000000436e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 1.4014000000003163e-05, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 5.195000000002975e-06, 4.7199999999789077e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 1.452700000000029e-05, 4.860000000009301e-07, 9.847999999999801e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.7300000000083386e-07, 1.1568999999999469e-05, 4.720000000013602e-07, 1.0473000000000426e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 9.36200000000234e-06, 4.859999999974607e-07, 7.680000000002962e-06, 4.859999999974607e-07, 1.0181000000001467e-05, 4.860000000009301e-07, 9.013999999998162e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.859999999974607e-07, 1.0194000000001563e-05, 4.7300000000083386e-07, 5.860999999999367e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 6.110999999999617e-06, 4.729999999973644e-07, 1.0777000000000009e-05, 4.7300000000083386e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.720000000013602e-07, 1.4000000000000123e-05, 4.7199999999789077e-07, 1.2542000000000803e-05, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.3722000000000734e-05, 4.7300000000083386e-07, 9.986000000000023e-06, 4.859999999974607e-07, 1.2028000000000733e-05, 4.720000000013602e-07, 1.3874999999999998e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.3695000000001067e-05, 4.7199999999789077e-07, 5.680000000000962e-06, 4.7300000000083386e-07, 1.152699999999729e-05, 4.7300000000083386e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 1.1680000000000024e-05, 4.859999999974607e-07, 1.3681000000001498e-05, 4.860000000009301e-07, 8.221999999998703e-06, 4.7300000000083386e-07], 'diff': [0, 4.870000000004038e-07, 5.346999999999297e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7199999999789077e-07, 5.681000000000436e-06, 4.720000000013602e-07, 9.709000000000106e-06, 4.7199999999789077e-07, 1.4014000000003163e-05, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 5.195000000002975e-06, 4.7199999999789077e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 1.452700000000029e-05, 4.860000000009301e-07, 9.847999999999801e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.7300000000083386e-07, 1.1568999999999469e-05, 4.720000000013602e-07, 1.0473000000000426e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 9.36200000000234e-06, 4.859999999974607e-07, 7.680000000002962e-06, 4.859999999974607e-07, 1.0181000000001467e-05, 4.860000000009301e-07, 9.013999999998162e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.859999999974607e-07, 1.0194000000001563e-05, 4.7300000000083386e-07, 5.860999999999367e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 6.110999999999617e-06, 4.729999999973644e-07, 1.0777000000000009e-05, 4.7300000000083386e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 6.888999999999507e-06, 4.720000000013602e-07, 1.4000000000000123e-05, 4.7199999999789077e-07, 1.2542000000000803e-05, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.3722000000000734e-05, 4.7300000000083386e-07, 9.986000000000023e-06, 4.859999999974607e-07, 1.2028000000000733e-05, 4.720000000013602e-07, 1.3874999999999998e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.3695000000001067e-05, 4.7199999999789077e-07, 5.680000000000962e-06, 4.7300000000083386e-07, 1.152699999999729e-05, 4.7300000000083386e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 5.542000000000741e-06, 4.720000000013602e-07, 1.1680000000000024e-05, 4.859999999974607e-07, 1.3681000000001498e-05, 4.860000000009301e-07, 8.221999999998703e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:23.328" endtime="20201112 09:53:23.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.324" endtime="20201112 09:53:23.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:23.337" level="INFO">${RESULT} = [{'time': 0.018492181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018498014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:23.334" endtime="20201112 09:53:23.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:23.351" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:23.338" endtime="20201112 09:53:23.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.355" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:23.354" endtime="20201112 09:53:23.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.357" level="INFO">VALUE: [4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:53:23.356" endtime="20201112 09:53:23.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.351" endtime="20201112 09:53:23.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.360" endtime="20201112 09:53:23.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:23.364" endtime="20201112 09:53:23.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.362" endtime="20201112 09:53:23.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.359" endtime="20201112 09:53:23.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:22.956" endtime="20201112 09:53:23.384"></status>
</kw>
<msg timestamp="20201112 09:53:23.385" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.392" endtime="20201112 09:53:23.402"></status>
</kw>
<msg timestamp="20201112 09:53:23.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:23.391" endtime="20201112 09:53:23.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.405" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:23.404" endtime="20201112 09:53:23.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.406" endtime="20201112 09:53:23.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.388" endtime="20201112 09:53:23.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.386" endtime="20201112 09:53:23.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.415" endtime="20201112 09:53:23.701"></status>
</kw>
<msg timestamp="20201112 09:53:23.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018344639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018345111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:23.414" endtime="20201112 09:53:23.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018344639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018345111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:23.705" endtime="20201112 09:53:23.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.713" endtime="20201112 09:53:23.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.411" endtime="20201112 09:53:23.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.409" endtime="20201112 09:53:23.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.720" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:23.719" endtime="20201112 09:53:23.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.725" level="INFO">VALUE: [{'time': 0.018344639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018345111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018357292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.018357764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018366194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430000000000243e-06, 'source_diff': 8.430000000000243e-06}, {'time': 0.018366667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018376958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0290999999999079e-05, 'source_diff': 1.0290999999999079e-05}, {'time': 0.018377444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018384319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.018384792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018399181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.018399653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018410806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018411278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018423181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.018423653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018429472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.018429944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018436972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018437444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018449806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361999999998402e-05, 'source_diff': 1.2361999999998402e-05}, {'time': 0.018450278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018457306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018457778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018462319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.018462792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018476806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.018477292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018483806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.018484292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018499, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4708000000002164e-05, 'source_diff': 1.4708000000002164e-05}, {'time': 0.018499472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018514167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.018514639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018526139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1500000000001093e-05, 'source_diff': 1.1500000000001093e-05}, {'time': 0.018526625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018535486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018535958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0185505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.018550972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018564319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.018564792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018572833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.018573306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018579153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018579625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018586653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.018587125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018591306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.018591778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0186, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.018600472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018604806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.018605278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018616153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.018616625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018626986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018627458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018638639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.018639111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018652806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3695000000001067e-05, 'source_diff': 1.3695000000001067e-05}, {'time': 0.018653278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018662819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541000000001798e-06, 'source_diff': 9.541000000001798e-06}, {'time': 0.018663292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018670639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.018671125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018681653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018682125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018695639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018696125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018703972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018704458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018716319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.018716792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0526999999999759e-05, 'source_diff': 1.0526999999999759e-05}, {'time': 0.018727792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018740333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2541000000001329e-05, 'source_diff': 1.2541000000001329e-05}, {'time': 0.018740806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018749333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.018749806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018760653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0846999999997858e-05, 'source_diff': 1.0846999999997858e-05}, {'time': 0.018761125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018773986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018774458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018789042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4583999999998043e-05, 'source_diff': 1.4583999999998043e-05}, {'time': 0.018789514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018797819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.018798306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018806486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.018806972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018821486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4513999999996724e-05, 'source_diff': 1.4513999999996724e-05}, {'time': 0.018821972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018834667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.018835139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018842, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.018842472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0188515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.018851972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018865333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.018865806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:23.721" endtime="20201112 09:53:23.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.716" endtime="20201112 09:53:23.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:23.751" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:23.727" endtime="20201112 09:53:23.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.755" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:23.754" endtime="20201112 09:53:23.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.759" level="INFO">VALUE: {'eventtime': [0.018344639, 0.018345111, 0.018357292, 0.018357764, 0.018366194, 0.018366667, 0.018376958, 0.018377444, 0.018384319, 0.018384792, 0.018399181, 0.018399653, 0.018410806, 0.018411278, 0.018423181, 0.018423653, 0.018429472, 0.018429944, 0.018436972, 0.018437444, 0.018449806, 0.018450278, 0.018457306, 0.018457778, 0.018462319, 0.018462792, 0.018476806, 0.018477292, 0.018483806, 0.018484292, 0.018499, 0.018499472, 0.018514167, 0.018514639, 0.018526139, 0.018526625, 0.018535486, 0.018535958, 0.0185505, 0.018550972, 0.018564319, 0.018564792, 0.018572833, 0.018573306, 0.018579153, 0.018579625, 0.018586653, 0.018587125, 0.018591306, 0.018591778, 0.0186, 0.018600472, 0.018604806, 0.018605278, 0.018616153, 0.018616625, 0.018626986, 0.018627458, 0.018638639, 0.018639111, 0.018652806, 0.018653278, 0.018662819, 0.018663292, 0.018670639, 0.018671125, 0.018681653, 0.018682125, 0.018695639, 0.018696125, 0.018703972, 0.018704458, 0.018716319, 0.018716792, 0.018727319, 0.018727792, 0.018740333, 0.018740806, 0.018749333, 0.018749806, 0.018760653, 0.018761125, 0.018773986, 0.018774458, 0.018789042, 0.018789514, 0.018797819, 0.018798306, 0.018806486, 0.018806972, 0.018821486, 0.018821972, 0.018834667, 0.018835139, 0.018842, 0.018842472, 0.0188515, 0.018851972, 0.018865333, 0.018865806], 'sourcesource_diff': [0, 4.720000000013602e-07, 1.2180999999999997e-05, 4.7199999999789077e-07, 8.430000000000243e-06, 4.7300000000083386e-07, 1.0290999999999079e-05, 4.860000000009301e-07, 6.874999999999937e-06, 4.7300000000083386e-07, 1.4389000000000068e-05, 4.7199999999789077e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.1903000000000608e-05, 4.720000000013602e-07, 5.8189999999971875e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.2361999999998402e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 4.541000000000267e-06, 4.729999999973644e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.4708000000002164e-05, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 1.1500000000001093e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.4541999999999333e-05, 4.7199999999789077e-07, 1.3347000000000359e-05, 4.7300000000083386e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 5.846999999999797e-06, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 8.221999999998703e-06, 4.720000000013602e-07, 4.33400000000167e-06, 4.7199999999789077e-07, 1.0875000000000468e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 1.3695000000001067e-05, 4.7199999999789077e-07, 9.541000000001798e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 1.2541000000001329e-05, 4.729999999973644e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 1.0846999999997858e-05, 4.720000000013602e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.4583999999998043e-05, 4.720000000013602e-07, 8.305000000000118e-06, 4.870000000004038e-07, 8.179999999999993e-06, 4.860000000009301e-07, 1.4513999999996724e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.729999999973644e-07], 'diff': [0, 4.720000000013602e-07, 1.2180999999999997e-05, 4.7199999999789077e-07, 8.430000000000243e-06, 4.7300000000083386e-07, 1.0290999999999079e-05, 4.860000000009301e-07, 6.874999999999937e-06, 4.7300000000083386e-07, 1.4389000000000068e-05, 4.7199999999789077e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.1903000000000608e-05, 4.720000000013602e-07, 5.8189999999971875e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.2361999999998402e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 4.541000000000267e-06, 4.729999999973644e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.4708000000002164e-05, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 1.1500000000001093e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.4541999999999333e-05, 4.7199999999789077e-07, 1.3347000000000359e-05, 4.7300000000083386e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 5.846999999999797e-06, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 8.221999999998703e-06, 4.720000000013602e-07, 4.33400000000167e-06, 4.7199999999789077e-07, 1.0875000000000468e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 1.3695000000001067e-05, 4.7199999999789077e-07, 9.541000000001798e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 1.2541000000001329e-05, 4.729999999973644e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 1.0846999999997858e-05, 4.720000000013602e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.4583999999998043e-05, 4.720000000013602e-07, 8.305000000000118e-06, 4.870000000004038e-07, 8.179999999999993e-06, 4.860000000009301e-07, 1.4513999999996724e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.729999999973644e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:23.756" endtime="20201112 09:53:23.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.752" endtime="20201112 09:53:23.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:23.765" level="INFO">${RESULT} = [{'time': 0.018345111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018357764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:23.761" endtime="20201112 09:53:23.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:23.778" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:23.766" endtime="20201112 09:53:23.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.782" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:23.781" endtime="20201112 09:53:23.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.785" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201112 09:53:23.783" endtime="20201112 09:53:23.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.779" endtime="20201112 09:53:23.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.788" endtime="20201112 09:53:23.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:23.791" endtime="20201112 09:53:23.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.790" endtime="20201112 09:53:23.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.786" endtime="20201112 09:53:23.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.385" endtime="20201112 09:53:23.812"></status>
</kw>
<msg timestamp="20201112 09:53:23.812" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.820" endtime="20201112 09:53:23.831"></status>
</kw>
<msg timestamp="20201112 09:53:23.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:23.818" endtime="20201112 09:53:23.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:23.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:23.832" endtime="20201112 09:53:23.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.835" endtime="20201112 09:53:23.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.816" endtime="20201112 09:53:23.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.814" endtime="20201112 09:53:23.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:23.845" endtime="20201112 09:53:24.135"></status>
</kw>
<msg timestamp="20201112 09:53:24.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018541917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018542389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:23.844" endtime="20201112 09:53:24.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018541917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018542389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:24.139" endtime="20201112 09:53:24.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.148" endtime="20201112 09:53:24.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.840" endtime="20201112 09:53:24.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.838" endtime="20201112 09:53:24.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.154" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:24.153" endtime="20201112 09:53:24.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.159" level="INFO">VALUE: [{'time': 0.018541917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018542389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018549403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018549875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018560583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.018561056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018569403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.018569875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01857525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.018575722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018581569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018582042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018589903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018590375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018600111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.018600583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018615069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.018615556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018621736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018622222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018636569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.018637056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018647597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0540999999999329e-05, 'source_diff': 1.0540999999999329e-05}, {'time': 0.018648069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018658417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.018658889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01866875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018669222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01867975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018680222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018688972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.018689444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018699083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.018699556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018712931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.018713403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018725083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.018725569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018736083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018736569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018750431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.018750903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018759417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.018759903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018765097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018765569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018780264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.018780736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018785944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018786417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018799764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.018800236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018809611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.018810083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018815264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.181000000003405e-06, 'source_diff': 5.181000000003405e-06}, {'time': 0.018815736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018821097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018821569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018834444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2874999999998998e-05, 'source_diff': 1.2874999999998998e-05}, {'time': 0.018834917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018842611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.018843083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018854431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1348000000001301e-05, 'source_diff': 1.1348000000001301e-05}, {'time': 0.018854917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018868431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3514000000002663e-05, 'source_diff': 1.3514000000002663e-05}, {'time': 0.018868917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018883097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.018883583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018897125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3542000000001803e-05, 'source_diff': 1.3542000000001803e-05}, {'time': 0.018897597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018901986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018902458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018910153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.018910625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018921278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.01892175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018929778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.01893025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018940486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.018940958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018953639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.018954111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018967778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3667000000001928e-05, 'source_diff': 1.3667000000001928e-05}, {'time': 0.018968264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018982514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4250000000000373e-05, 'source_diff': 1.4250000000000373e-05}, {'time': 0.018982986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018989611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.018990097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018996625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018997097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019007694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0596999999997608e-05, 'source_diff': 1.0596999999997608e-05}, {'time': 0.019008167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019018958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0790999999999579e-05, 'source_diff': 1.0790999999999579e-05}, {'time': 0.019019431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019023958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.019024431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019033958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.526999999998759e-06, 'source_diff': 9.526999999998759e-06}, {'time': 0.019034431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019046625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019047097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:24.155" endtime="20201112 09:53:24.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.151" endtime="20201112 09:53:24.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:24.185" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:24.162" endtime="20201112 09:53:24.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.189" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:24.188" endtime="20201112 09:53:24.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.193" level="INFO">VALUE: {'eventtime': [0.018541917, 0.018542389, 0.018549403, 0.018549875, 0.018560583, 0.018561056, 0.018569403, 0.018569875, 0.01857525, 0.018575722, 0.018581569, 0.018582042, 0.018589903, 0.018590375, 0.018600111, 0.018600583, 0.018615069, 0.018615556, 0.018621736, 0.018622222, 0.018636569, 0.018637056, 0.018647597, 0.018648069, 0.018658417, 0.018658889, 0.01866875, 0.018669222, 0.01867975, 0.018680222, 0.018688972, 0.018689444, 0.018699083, 0.018699556, 0.018712931, 0.018713403, 0.018725083, 0.018725569, 0.018736083, 0.018736569, 0.018750431, 0.018750903, 0.018759417, 0.018759903, 0.018765097, 0.018765569, 0.018780264, 0.018780736, 0.018785944, 0.018786417, 0.018799764, 0.018800236, 0.018809611, 0.018810083, 0.018815264, 0.018815736, 0.018821097, 0.018821569, 0.018834444, 0.018834917, 0.018842611, 0.018843083, 0.018854431, 0.018854917, 0.018868431, 0.018868917, 0.018883097, 0.018883583, 0.018897125, 0.018897597, 0.018901986, 0.018902458, 0.018910153, 0.018910625, 0.018921278, 0.01892175, 0.018929778, 0.01893025, 0.018940486, 0.018940958, 0.018953639, 0.018954111, 0.018967778, 0.018968264, 0.018982514, 0.018982986, 0.018989611, 0.018990097, 0.018996625, 0.018997097, 0.019007694, 0.019008167, 0.019018958, 0.019019431, 0.019023958, 0.019024431, 0.019033958, 0.019034431, 0.019046625, 0.019047097], 'sourcesource_diff': [0, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 5.375000000001906e-06, 4.7199999999789077e-07, 5.846999999999797e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 9.735999999999773e-06, 4.720000000013602e-07, 1.4486000000001054e-05, 4.869999999969343e-07, 6.180000000001462e-06, 4.860000000009301e-07, 1.434699999999789e-05, 4.870000000004038e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 8.750000000001812e-06, 4.7199999999789077e-07, 9.638999999998787e-06, 4.7300000000083386e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 1.1680000000000024e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.3861999999999902e-05, 4.7199999999789077e-07, 8.514000000001132e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 5.207999999999602e-06, 4.7300000000083386e-07, 1.3347000000000359e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 5.181000000003405e-06, 4.7199999999789077e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.2874999999998998e-05, 4.7300000000083386e-07, 7.693999999999063e-06, 4.720000000013602e-07, 1.1348000000001301e-05, 4.859999999974607e-07, 1.3514000000002663e-05, 4.859999999974607e-07, 1.4180000000002524e-05, 4.859999999974607e-07, 1.3542000000001803e-05, 4.7199999999789077e-07, 4.389000000000476e-06, 4.720000000013602e-07, 7.694999999998536e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 1.2681000000000497e-05, 4.7199999999789077e-07, 1.3667000000001928e-05, 4.859999999974607e-07, 1.4250000000000373e-05, 4.720000000013602e-07, 6.624999999999687e-06, 4.860000000009301e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0596999999997608e-05, 4.7300000000083386e-07, 1.0790999999999579e-05, 4.7300000000083386e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 9.526999999998759e-06, 4.7300000000083386e-07, 1.2194000000000094e-05, 4.7199999999789077e-07], 'diff': [0, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 5.375000000001906e-06, 4.7199999999789077e-07, 5.846999999999797e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 9.735999999999773e-06, 4.720000000013602e-07, 1.4486000000001054e-05, 4.869999999969343e-07, 6.180000000001462e-06, 4.860000000009301e-07, 1.434699999999789e-05, 4.870000000004038e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 8.750000000001812e-06, 4.7199999999789077e-07, 9.638999999998787e-06, 4.7300000000083386e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 1.1680000000000024e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.3861999999999902e-05, 4.7199999999789077e-07, 8.514000000001132e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 1.4695000000002068e-05, 4.7199999999789077e-07, 5.207999999999602e-06, 4.7300000000083386e-07, 1.3347000000000359e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 5.181000000003405e-06, 4.7199999999789077e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.2874999999998998e-05, 4.7300000000083386e-07, 7.693999999999063e-06, 4.720000000013602e-07, 1.1348000000001301e-05, 4.859999999974607e-07, 1.3514000000002663e-05, 4.859999999974607e-07, 1.4180000000002524e-05, 4.859999999974607e-07, 1.3542000000001803e-05, 4.7199999999789077e-07, 4.389000000000476e-06, 4.720000000013602e-07, 7.694999999998536e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 1.0236000000000273e-05, 4.720000000013602e-07, 1.2681000000000497e-05, 4.7199999999789077e-07, 1.3667000000001928e-05, 4.859999999974607e-07, 1.4250000000000373e-05, 4.720000000013602e-07, 6.624999999999687e-06, 4.860000000009301e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0596999999997608e-05, 4.7300000000083386e-07, 1.0790999999999579e-05, 4.7300000000083386e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 9.526999999998759e-06, 4.7300000000083386e-07, 1.2194000000000094e-05, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:24.190" endtime="20201112 09:53:24.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.186" endtime="20201112 09:53:24.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:24.199" level="INFO">${RESULT} = [{'time': 0.018542389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018549875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:24.195" endtime="20201112 09:53:24.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:24.212" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:24.200" endtime="20201112 09:53:24.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.216" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:24.215" endtime="20201112 09:53:24.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.219" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:53:24.217" endtime="20201112 09:53:24.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.213" endtime="20201112 09:53:24.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.223" endtime="20201112 09:53:24.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:24.226" endtime="20201112 09:53:24.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.224" endtime="20201112 09:53:24.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.221" endtime="20201112 09:53:24.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:23.813" endtime="20201112 09:53:24.247"></status>
</kw>
<msg timestamp="20201112 09:53:24.247" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.254" endtime="20201112 09:53:24.265"></status>
</kw>
<msg timestamp="20201112 09:53:24.265" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:24.253" endtime="20201112 09:53:24.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.268" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:24.267" endtime="20201112 09:53:24.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.269" endtime="20201112 09:53:24.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.250" endtime="20201112 09:53:24.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.249" endtime="20201112 09:53:24.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.278" endtime="20201112 09:53:24.566"></status>
</kw>
<msg timestamp="20201112 09:53:24.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018542542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:24.276" endtime="20201112 09:53:24.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018542542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:24.571" endtime="20201112 09:53:24.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.579" endtime="20201112 09:53:24.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.274" endtime="20201112 09:53:24.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.272" endtime="20201112 09:53:24.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.585" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:24.585" endtime="20201112 09:53:24.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.590" level="INFO">VALUE: [{'time': 0.018542542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018547875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018548361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018558069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.018558542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018571389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018571861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018584222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.018584694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018593403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.018593875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018605056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.018605528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018615222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.018615694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018626556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0862000000000371e-05, 'source_diff': 1.0862000000000371e-05}, {'time': 0.018627042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018641222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4179999999999054e-05, 'source_diff': 1.4179999999999054e-05}, {'time': 0.018641708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018648556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8480000000002705e-06, 'source_diff': 6.8480000000002705e-06}, {'time': 0.018649042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018658889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018659375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018664903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018665375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01867225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.018672722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018681903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.018682375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018688069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.018688542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018692903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018693375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018700236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.018700708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01870825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.018708722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018716569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018717042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018725236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018725708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018734583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018735056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018742069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013000000000158e-06, 'source_diff': 7.013000000000158e-06}, {'time': 0.018742556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018757069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.451300000000072e-05, 'source_diff': 1.451300000000072e-05}, {'time': 0.018757556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018761722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018762194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018772264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.018772736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018786569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}, {'time': 0.018787042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018797889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.018798361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018810722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018811208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018819889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018820375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01882775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018828222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018833403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018833875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018847736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018848208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018855417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208999999997606e-06, 'source_diff': 7.208999999997606e-06}, {'time': 0.018855889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018866736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0846999999997858e-05, 'source_diff': 1.0846999999997858e-05}, {'time': 0.018867208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018877236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018877708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018887069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018887542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018896069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.018896542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018908236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018908708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018920083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.018920556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018928569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.012999999997689e-06, 'source_diff': 8.012999999997689e-06}, {'time': 0.018929056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018936903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018937389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018946083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018946556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018952736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018953222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01896725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4028000000002733e-05, 'source_diff': 1.4028000000002733e-05}, {'time': 0.018967722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018978931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1209000000001607e-05, 'source_diff': 1.1209000000001607e-05}, {'time': 0.018979403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01899275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.018993222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019001764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.019002236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019009931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.019010403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019021944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541000000000329e-05, 'source_diff': 1.1541000000000329e-05}, {'time': 0.019022417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:24.587" endtime="20201112 09:53:24.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.582" endtime="20201112 09:53:24.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:24.617" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:24.593" endtime="20201112 09:53:24.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.621" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:24.620" endtime="20201112 09:53:24.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.625" level="INFO">VALUE: {'eventtime': [0.018542542, 0.018543028, 0.018547875, 0.018548361, 0.018558069, 0.018558542, 0.018571389, 0.018571861, 0.018584222, 0.018584694, 0.018593403, 0.018593875, 0.018605056, 0.018605528, 0.018615222, 0.018615694, 0.018626556, 0.018627042, 0.018641222, 0.018641708, 0.018648556, 0.018649042, 0.018658889, 0.018659375, 0.018664903, 0.018665375, 0.01867225, 0.018672722, 0.018681903, 0.018682375, 0.018688069, 0.018688542, 0.018692903, 0.018693375, 0.018700236, 0.018700708, 0.01870825, 0.018708722, 0.018716569, 0.018717042, 0.018725236, 0.018725708, 0.018734583, 0.018735056, 0.018742069, 0.018742556, 0.018757069, 0.018757556, 0.018761722, 0.018762194, 0.018772264, 0.018772736, 0.018786569, 0.018787042, 0.018797889, 0.018798361, 0.018810722, 0.018811208, 0.018819889, 0.018820375, 0.01882775, 0.018828222, 0.018833403, 0.018833875, 0.018847736, 0.018848208, 0.018855417, 0.018855889, 0.018866736, 0.018867208, 0.018877236, 0.018877708, 0.018887069, 0.018887542, 0.018896069, 0.018896542, 0.018908236, 0.018908708, 0.018920083, 0.018920556, 0.018928569, 0.018929056, 0.018936903, 0.018937389, 0.018946083, 0.018946556, 0.018952736, 0.018953222, 0.01896725, 0.018967722, 0.018978931, 0.018979403, 0.01899275, 0.018993222, 0.019001764, 0.019002236, 0.019009931, 0.019010403, 0.019021944, 0.019022417], 'sourcesource_diff': [0, 4.860000000009301e-07, 4.846999999998797e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 1.0862000000000371e-05, 4.860000000009301e-07, 1.4179999999999054e-05, 4.860000000009301e-07, 6.8480000000002705e-06, 4.860000000009301e-07, 9.847000000000328e-06, 4.859999999974607e-07, 5.528000000001171e-06, 4.720000000013602e-07, 6.874999999999937e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.729999999973644e-07, 4.361000000001336e-06, 4.720000000013602e-07, 6.860999999996897e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 8.193999999999563e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 7.013000000000158e-06, 4.870000000004038e-07, 1.451300000000072e-05, 4.870000000004038e-07, 4.165999999999892e-06, 4.7199999999789077e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 1.383299999999782e-05, 4.7300000000083386e-07, 1.0847000000001328e-05, 4.7199999999789077e-07, 1.2360999999998928e-05, 4.860000000009301e-07, 8.680999999999967e-06, 4.860000000009301e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 5.180999999999936e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 7.208999999997606e-06, 4.720000000013602e-07, 1.0846999999997858e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 8.527000000001228e-06, 4.729999999973644e-07, 1.1693999999999594e-05, 4.720000000013602e-07, 1.1375000000000968e-05, 4.7300000000083386e-07, 8.012999999997689e-06, 4.870000000004038e-07, 7.847000000001797e-06, 4.859999999974607e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 6.180000000001462e-06, 4.859999999974607e-07, 1.4028000000002733e-05, 4.7199999999789077e-07, 1.1209000000001607e-05, 4.7199999999789077e-07, 1.3347000000000359e-05, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 7.695000000002006e-06, 4.7199999999789077e-07, 1.1541000000000329e-05, 4.7300000000083386e-07], 'diff': [0, 4.860000000009301e-07, 4.846999999998797e-06, 4.860000000009301e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 1.0862000000000371e-05, 4.860000000009301e-07, 1.4179999999999054e-05, 4.860000000009301e-07, 6.8480000000002705e-06, 4.860000000009301e-07, 9.847000000000328e-06, 4.859999999974607e-07, 5.528000000001171e-06, 4.720000000013602e-07, 6.874999999999937e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 5.694000000000532e-06, 4.729999999973644e-07, 4.361000000001336e-06, 4.720000000013602e-07, 6.860999999996897e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.7300000000083386e-07, 8.193999999999563e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 7.013000000000158e-06, 4.870000000004038e-07, 1.451300000000072e-05, 4.870000000004038e-07, 4.165999999999892e-06, 4.7199999999789077e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 1.383299999999782e-05, 4.7300000000083386e-07, 1.0847000000001328e-05, 4.7199999999789077e-07, 1.2360999999998928e-05, 4.860000000009301e-07, 8.680999999999967e-06, 4.860000000009301e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 5.180999999999936e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 7.208999999997606e-06, 4.720000000013602e-07, 1.0846999999997858e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 8.527000000001228e-06, 4.729999999973644e-07, 1.1693999999999594e-05, 4.720000000013602e-07, 1.1375000000000968e-05, 4.7300000000083386e-07, 8.012999999997689e-06, 4.870000000004038e-07, 7.847000000001797e-06, 4.859999999974607e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 6.180000000001462e-06, 4.859999999974607e-07, 1.4028000000002733e-05, 4.7199999999789077e-07, 1.1209000000001607e-05, 4.7199999999789077e-07, 1.3347000000000359e-05, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 7.695000000002006e-06, 4.7199999999789077e-07, 1.1541000000000329e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:24.622" endtime="20201112 09:53:24.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.618" endtime="20201112 09:53:24.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:24.631" level="INFO">${RESULT} = [{'time': 0.018543028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018548361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:24.627" endtime="20201112 09:53:24.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:24.644" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:24.632" endtime="20201112 09:53:24.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.648" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:24.647" endtime="20201112 09:53:24.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.651" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:53:24.649" endtime="20201112 09:53:24.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.645" endtime="20201112 09:53:24.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.654" endtime="20201112 09:53:24.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:24.657" endtime="20201112 09:53:24.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.656" endtime="20201112 09:53:24.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.652" endtime="20201112 09:53:24.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.247" endtime="20201112 09:53:24.678"></status>
</kw>
<msg timestamp="20201112 09:53:24.678" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.686" endtime="20201112 09:53:24.696"></status>
</kw>
<msg timestamp="20201112 09:53:24.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:24.684" endtime="20201112 09:53:24.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:24.699" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:24.698" endtime="20201112 09:53:24.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.700" endtime="20201112 09:53:24.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.682" endtime="20201112 09:53:24.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.680" endtime="20201112 09:53:24.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:24.710" endtime="20201112 09:53:24.998"></status>
</kw>
<msg timestamp="20201112 09:53:25.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018508792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018509278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:24.708" endtime="20201112 09:53:25.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018508792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018509278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:25.003" endtime="20201112 09:53:25.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.011" endtime="20201112 09:53:25.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.705" endtime="20201112 09:53:25.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.703" endtime="20201112 09:53:25.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.018" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:25.017" endtime="20201112 09:53:25.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.023" level="INFO">VALUE: [{'time': 0.018508792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018509278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018518125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018518611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018532972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.018533444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018542819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.018543292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018552306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.018552778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018564986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.018565458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018571472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018571944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018583319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.018583792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018591639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018592111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018597306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018597778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018606306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.018606778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018619819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.304099999999836e-05, 'source_diff': 1.304099999999836e-05}, {'time': 0.018620292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018631153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018631625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018640139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.018640625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018648806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.018649292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018657639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.018658125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018671986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018672458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018681333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018681806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018696153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000001359e-05, 'source_diff': 1.4347000000001359e-05}, {'time': 0.018696625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018706667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041999999998302e-05, 'source_diff': 1.0041999999998302e-05}, {'time': 0.018707139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018718319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1179999999999524e-05, 'source_diff': 1.1179999999999524e-05}, {'time': 0.018718792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018732194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3401999999999165e-05, 'source_diff': 1.3401999999999165e-05}, {'time': 0.018732667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018738319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.018738806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.0187465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.018746972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018760653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3680999999998028e-05, 'source_diff': 1.3680999999998028e-05}, {'time': 0.018761139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018768153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018768639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018773153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018773639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018784653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013999999996693e-05, 'source_diff': 1.1013999999996693e-05}, {'time': 0.018785139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018796181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041999999999302e-05, 'source_diff': 1.1041999999999302e-05}, {'time': 0.018796653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018806472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018817014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0541999999998802e-05, 'source_diff': 1.0541999999998802e-05}, {'time': 0.018817486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018825472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018837333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.018837806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018845167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018845639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018850333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018850806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018862014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1207999999998663e-05, 'source_diff': 1.1207999999998663e-05}, {'time': 0.018862486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018874333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.018874819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018886014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1194999999998567e-05, 'source_diff': 1.1194999999998567e-05}, {'time': 0.018886486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018896681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.018897153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0189055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.018905986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018912014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018912486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018917194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018917667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018930014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018930486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018940861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.018941333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018948208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.018948681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018956222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.018956694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018962347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018962819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018977014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.018977486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018989181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1695000000002537e-05, 'source_diff': 1.1695000000002537e-05}, {'time': 0.018989667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.018996, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:25.019" endtime="20201112 09:53:25.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.014" endtime="20201112 09:53:25.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:25.048" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:25.025" endtime="20201112 09:53:25.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.052" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:25.051" endtime="20201112 09:53:25.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.056" level="INFO">VALUE: {'eventtime': [0.018508792, 0.018509278, 0.018518125, 0.018518611, 0.018532972, 0.018533444, 0.018542819, 0.018543292, 0.018552306, 0.018552778, 0.018564986, 0.018565458, 0.018571472, 0.018571944, 0.018583319, 0.018583792, 0.018591639, 0.018592111, 0.018597306, 0.018597778, 0.018606306, 0.018606778, 0.018619819, 0.018620292, 0.018631153, 0.018631625, 0.018640139, 0.018640625, 0.018648806, 0.018649292, 0.018657639, 0.018658125, 0.018671986, 0.018672458, 0.018681333, 0.018681806, 0.018696153, 0.018696625, 0.018706667, 0.018707139, 0.018718319, 0.018718792, 0.018732194, 0.018732667, 0.018738319, 0.018738806, 0.0187465, 0.018746972, 0.018760653, 0.018761139, 0.018768153, 0.018768639, 0.018773153, 0.018773639, 0.018784653, 0.018785139, 0.018796181, 0.018796653, 0.018806, 0.018806472, 0.018817014, 0.018817486, 0.018825, 0.018825472, 0.018837333, 0.018837806, 0.018845167, 0.018845639, 0.018850333, 0.018850806, 0.018862014, 0.018862486, 0.018874333, 0.018874819, 0.018886014, 0.018886486, 0.018896681, 0.018897153, 0.0189055, 0.018905986, 0.018912014, 0.018912486, 0.018917194, 0.018917667, 0.018930014, 0.018930486, 0.018940861, 0.018941333, 0.018948208, 0.018948681, 0.018956222, 0.018956694, 0.018962347, 0.018962819, 0.018977014, 0.018977486, 0.018989181, 0.018989667, 0.018995528, 0.018996], 'sourcesource_diff': [0, 4.860000000009301e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 9.374999999998967e-06, 4.7300000000083386e-07, 9.014000000001632e-06, 4.7199999999789077e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.1375000000000968e-05, 4.729999999973644e-07, 7.847000000001797e-06, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 8.528000000000702e-06, 4.720000000013602e-07, 1.304099999999836e-05, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 8.514000000001132e-06, 4.860000000009301e-07, 8.180999999999466e-06, 4.860000000009301e-07, 8.346999999998828e-06, 4.860000000009301e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 8.875000000001937e-06, 4.729999999973644e-07, 1.4347000000001359e-05, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 1.1179999999999524e-05, 4.7300000000083386e-07, 1.3401999999999165e-05, 4.7300000000083386e-07, 5.651999999998353e-06, 4.870000000004038e-07, 7.693999999999063e-06, 4.720000000013602e-07, 1.3680999999998028e-05, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.860000000009301e-07, 1.1013999999996693e-05, 4.860000000009301e-07, 1.1041999999999302e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 1.1861000000001898e-05, 4.729999999973644e-07, 7.361000000000867e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 1.1194999999998567e-05, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 4.707999999999102e-06, 4.7300000000083386e-07, 1.2346999999999358e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 6.874999999999937e-06, 4.729999999973644e-07, 7.540999999999798e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 1.1695000000002537e-05, 4.859999999974607e-07, 5.861000000002836e-06, 4.7199999999789077e-07], 'diff': [0, 4.860000000009301e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 9.374999999998967e-06, 4.7300000000083386e-07, 9.014000000001632e-06, 4.7199999999789077e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.1375000000000968e-05, 4.729999999973644e-07, 7.847000000001797e-06, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 8.528000000000702e-06, 4.720000000013602e-07, 1.304099999999836e-05, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 8.514000000001132e-06, 4.860000000009301e-07, 8.180999999999466e-06, 4.860000000009301e-07, 8.346999999998828e-06, 4.860000000009301e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 8.875000000001937e-06, 4.729999999973644e-07, 1.4347000000001359e-05, 4.720000000013602e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 1.1179999999999524e-05, 4.7300000000083386e-07, 1.3401999999999165e-05, 4.7300000000083386e-07, 5.651999999998353e-06, 4.870000000004038e-07, 7.693999999999063e-06, 4.720000000013602e-07, 1.3680999999998028e-05, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 4.514000000000601e-06, 4.860000000009301e-07, 1.1013999999996693e-05, 4.860000000009301e-07, 1.1041999999999302e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.7199999999789077e-07, 1.1861000000001898e-05, 4.729999999973644e-07, 7.361000000000867e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 1.1194999999998567e-05, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 4.707999999999102e-06, 4.7300000000083386e-07, 1.2346999999999358e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 6.874999999999937e-06, 4.729999999973644e-07, 7.540999999999798e-06, 4.720000000013602e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 1.1695000000002537e-05, 4.859999999974607e-07, 5.861000000002836e-06, 4.7199999999789077e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:25.053" endtime="20201112 09:53:25.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.049" endtime="20201112 09:53:25.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:25.062" level="INFO">${RESULT} = [{'time': 0.018509278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018518611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:25.059" endtime="20201112 09:53:25.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:25.075" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:25.063" endtime="20201112 09:53:25.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.080" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:25.079" endtime="20201112 09:53:25.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.082" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:53:25.081" endtime="20201112 09:53:25.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.076" endtime="20201112 09:53:25.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.085" endtime="20201112 09:53:25.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:25.089" endtime="20201112 09:53:25.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.087" endtime="20201112 09:53:25.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.084" endtime="20201112 09:53:25.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:24.679" endtime="20201112 09:53:25.110"></status>
</kw>
<msg timestamp="20201112 09:53:25.110" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.118" endtime="20201112 09:53:25.128"></status>
</kw>
<msg timestamp="20201112 09:53:25.129" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.116" endtime="20201112 09:53:25.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.131" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.130" endtime="20201112 09:53:25.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.132" endtime="20201112 09:53:25.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.114" endtime="20201112 09:53:25.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.112" endtime="20201112 09:53:25.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.141" endtime="20201112 09:53:25.427"></status>
</kw>
<msg timestamp="20201112 09:53:25.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018412236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018412708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:25.140" endtime="20201112 09:53:25.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018412236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018412708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:25.432" endtime="20201112 09:53:25.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.440" endtime="20201112 09:53:25.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.137" endtime="20201112 09:53:25.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.136" endtime="20201112 09:53:25.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.447" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:25.446" endtime="20201112 09:53:25.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.452" level="INFO">VALUE: [{'time': 0.018412236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018412708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018420736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018421208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018431069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018431542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018444611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3069000000000969e-05, 'source_diff': 1.3069000000000969e-05}, {'time': 0.018445083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018453903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.018454375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018468264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889000000003038e-05, 'source_diff': 1.3889000000003038e-05}, {'time': 0.018468736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018478083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018478556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018488069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.512999999999189e-06, 'source_diff': 9.512999999999189e-06}, {'time': 0.018488556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018494569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.012999999999158e-06, 'source_diff': 6.012999999999158e-06}, {'time': 0.018495056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018503903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018504389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01851525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018515722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01852225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.018522722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018532125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.018532597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01854225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.018542722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018549417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.018549889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018560431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0541999999998802e-05, 'source_diff': 1.0541999999998802e-05}, {'time': 0.018560903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018565778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.01856625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018575431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.018575903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01858875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018589236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018601583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2347000000002828e-05, 'source_diff': 1.2347000000002828e-05}, {'time': 0.018602069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018613583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018614069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018623417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.018623903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018637083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3179999999998054e-05, 'source_diff': 1.3179999999998054e-05}, {'time': 0.018637569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018646764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018647236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018654097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.018654569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018662444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.018662917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018669431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.018669903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018681597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018682069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018690264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.018690736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018696764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018697236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018701597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018702069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018713931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861999999997902e-05, 'source_diff': 1.1861999999997902e-05}, {'time': 0.018714417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018723931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018724417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018737264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.01873775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018749597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.018750083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018759431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.018759917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018764597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018765083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018773653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.570000000002881e-06, 'source_diff': 8.570000000002881e-06}, {'time': 0.018774125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018788778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.01878925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018796125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.018796597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018801278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.01880175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018805917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018806403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018814917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.018815403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018827153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1749999999997873e-05, 'source_diff': 1.1749999999997873e-05}, {'time': 0.018827625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018837597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018838069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018842431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.018842903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018847597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018848069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018860931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2862000000002372e-05, 'source_diff': 1.2862000000002372e-05}, {'time': 0.018861403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018867111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018867583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018879944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018880417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:25.448" endtime="20201112 09:53:25.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.443" endtime="20201112 09:53:25.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:25.478" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:25.454" endtime="20201112 09:53:25.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.482" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:25.481" endtime="20201112 09:53:25.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.486" level="INFO">VALUE: {'eventtime': [0.018412236, 0.018412708, 0.018420736, 0.018421208, 0.018431069, 0.018431542, 0.018444611, 0.018445083, 0.018453903, 0.018454375, 0.018468264, 0.018468736, 0.018478083, 0.018478556, 0.018488069, 0.018488556, 0.018494569, 0.018495056, 0.018503903, 0.018504389, 0.01851525, 0.018515722, 0.01852225, 0.018522722, 0.018532125, 0.018532597, 0.01854225, 0.018542722, 0.018549417, 0.018549889, 0.018560431, 0.018560903, 0.018565778, 0.01856625, 0.018575431, 0.018575903, 0.01858875, 0.018589236, 0.018601583, 0.018602069, 0.018613583, 0.018614069, 0.018623417, 0.018623903, 0.018637083, 0.018637569, 0.018646764, 0.018647236, 0.018654097, 0.018654569, 0.018662444, 0.018662917, 0.018669431, 0.018669903, 0.018681597, 0.018682069, 0.018690264, 0.018690736, 0.018696764, 0.018697236, 0.018701597, 0.018702069, 0.018713931, 0.018714417, 0.018723931, 0.018724417, 0.018737264, 0.01873775, 0.018749597, 0.018750083, 0.018759431, 0.018759917, 0.018764597, 0.018765083, 0.018773653, 0.018774125, 0.018788778, 0.01878925, 0.018796125, 0.018796597, 0.018801278, 0.01880175, 0.018805917, 0.018806403, 0.018814917, 0.018815403, 0.018827153, 0.018827625, 0.018837597, 0.018838069, 0.018842431, 0.018842903, 0.018847597, 0.018848069, 0.018860931, 0.018861403, 0.018867111, 0.018867583, 0.018879944, 0.018880417], 'sourcesource_diff': [0, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.729999999973644e-07, 1.3069000000000969e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.7199999999789077e-07, 1.3889000000003038e-05, 4.7199999999789077e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 9.512999999999189e-06, 4.870000000004038e-07, 6.012999999999158e-06, 4.870000000004038e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 9.403000000001577e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 4.875000000001406e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.859999999974607e-07, 1.2347000000002828e-05, 4.859999999974607e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 9.195000000000036e-06, 4.720000000013602e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 7.875000000000937e-06, 4.7300000000083386e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.1693999999999594e-05, 4.7199999999789077e-07, 8.195000000002506e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 4.361000000001336e-06, 4.720000000013602e-07, 1.1861999999997902e-05, 4.860000000009301e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 4.679999999999962e-06, 4.859999999974607e-07, 8.570000000002881e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 6.874999999999937e-06, 4.720000000013602e-07, 4.680999999999436e-06, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 1.1749999999997873e-05, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 4.36200000000081e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7199999999789077e-07, 1.2862000000002372e-05, 4.7199999999789077e-07, 5.708000000000102e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.860999999999898e-06, 4.729999999973644e-07, 1.3069000000000969e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.7199999999789077e-07, 1.3889000000003038e-05, 4.7199999999789077e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 9.512999999999189e-06, 4.870000000004038e-07, 6.012999999999158e-06, 4.870000000004038e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 9.403000000001577e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 4.875000000001406e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.859999999974607e-07, 1.2347000000002828e-05, 4.859999999974607e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 9.195000000000036e-06, 4.720000000013602e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 7.875000000000937e-06, 4.7300000000083386e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.1693999999999594e-05, 4.7199999999789077e-07, 8.195000000002506e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 4.361000000001336e-06, 4.720000000013602e-07, 1.1861999999997902e-05, 4.860000000009301e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 4.679999999999962e-06, 4.859999999974607e-07, 8.570000000002881e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 6.874999999999937e-06, 4.720000000013602e-07, 4.680999999999436e-06, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 1.1749999999997873e-05, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 4.36200000000081e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7199999999789077e-07, 1.2862000000002372e-05, 4.7199999999789077e-07, 5.708000000000102e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:25.483" endtime="20201112 09:53:25.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.479" endtime="20201112 09:53:25.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:25.492" level="INFO">${RESULT} = [{'time': 0.018412708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018421208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:25.489" endtime="20201112 09:53:25.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:25.505" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:25.493" endtime="20201112 09:53:25.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.509" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:25.508" endtime="20201112 09:53:25.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.512" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:53:25.510" endtime="20201112 09:53:25.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.506" endtime="20201112 09:53:25.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.515" endtime="20201112 09:53:25.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:25.518" endtime="20201112 09:53:25.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.517" endtime="20201112 09:53:25.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.513" endtime="20201112 09:53:25.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.111" endtime="20201112 09:53:25.539"></status>
</kw>
<msg timestamp="20201112 09:53:25.539" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.547" endtime="20201112 09:53:25.557"></status>
</kw>
<msg timestamp="20201112 09:53:25.557" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.545" endtime="20201112 09:53:25.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.560" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.558" endtime="20201112 09:53:25.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.561" endtime="20201112 09:53:25.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.543" endtime="20201112 09:53:25.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.541" endtime="20201112 09:53:25.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.570" endtime="20201112 09:53:25.855"></status>
</kw>
<msg timestamp="20201112 09:53:25.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018277722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018278208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:25.568" endtime="20201112 09:53:25.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018277722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018278208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:25.860" endtime="20201112 09:53:25.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.869" endtime="20201112 09:53:25.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.566" endtime="20201112 09:53:25.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.564" endtime="20201112 09:53:25.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.875" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:25.874" endtime="20201112 09:53:25.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.880" level="INFO">VALUE: [{'time': 0.018277722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018278208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018292556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4348000000000832e-05, 'source_diff': 1.4348000000000832e-05}, {'time': 0.018293042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018304556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018305042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01831975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.018320222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018330069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018330542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018339736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018340208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01835475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.018355222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018365236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.018365708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018372417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708999999997106e-06, 'source_diff': 6.708999999997106e-06}, {'time': 0.018372889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018377417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018377889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018387069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.018387556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018397069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.512999999999189e-06, 'source_diff': 9.512999999999189e-06}, {'time': 0.018397556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018403569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.013000000002627e-06, 'source_diff': 6.013000000002627e-06}, {'time': 0.018404056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018415083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027000000000259e-05, 'source_diff': 1.1027000000000259e-05}, {'time': 0.018415556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018428417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018428889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018434097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018434569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018445597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018446069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018454417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.34800000000177e-06, 'source_diff': 8.34800000000177e-06}, {'time': 0.018454889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018468417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.018468889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018483417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018483889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018498583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018499069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018513583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018514069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018526917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2847999999999332e-05, 'source_diff': 1.2847999999999332e-05}, {'time': 0.018527403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018536264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018536736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018545597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018546069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018559264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.018559736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018572097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018572569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018584097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018584569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018597764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.018598236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018608014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.018608486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018616278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.01861675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018624097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.018624583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018635931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1348000000001301e-05, 'source_diff': 1.1348000000001301e-05}, {'time': 0.018636417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018645778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.01864625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018655931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.018656417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018660597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018661069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018665597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018666069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018670917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.018671389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018677417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018677889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01869175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018692236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018700083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018700569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018704917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.018705403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018718597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.018719069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018729264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.018729736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018734097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018734569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018738736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018739222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018752931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3709000000000637e-05, 'source_diff': 1.3709000000000637e-05}, {'time': 0.018753403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018766403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3000000000002593e-05, 'source_diff': 1.3000000000002593e-05}, {'time': 0.018766889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018776236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000003297e-06, 'source_diff': 9.347000000003297e-06}, {'time': 0.018776722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018784903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.018785389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:25.876" endtime="20201112 09:53:25.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.872" endtime="20201112 09:53:25.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:25.906" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:25.883" endtime="20201112 09:53:25.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.910" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:25.909" endtime="20201112 09:53:25.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.914" level="INFO">VALUE: {'eventtime': [0.018277722, 0.018278208, 0.018292556, 0.018293042, 0.018304556, 0.018305042, 0.01831975, 0.018320222, 0.018330069, 0.018330542, 0.018339736, 0.018340208, 0.01835475, 0.018355222, 0.018365236, 0.018365708, 0.018372417, 0.018372889, 0.018377417, 0.018377889, 0.018387069, 0.018387556, 0.018397069, 0.018397556, 0.018403569, 0.018404056, 0.018415083, 0.018415556, 0.018428417, 0.018428889, 0.018434097, 0.018434569, 0.018445597, 0.018446069, 0.018454417, 0.018454889, 0.018468417, 0.018468889, 0.018483417, 0.018483889, 0.018498583, 0.018499069, 0.018513583, 0.018514069, 0.018526917, 0.018527403, 0.018536264, 0.018536736, 0.018545597, 0.018546069, 0.018559264, 0.018559736, 0.018572097, 0.018572569, 0.018584097, 0.018584569, 0.018597764, 0.018598236, 0.018608014, 0.018608486, 0.018616278, 0.01861675, 0.018624097, 0.018624583, 0.018635931, 0.018636417, 0.018645778, 0.01864625, 0.018655931, 0.018656417, 0.018660597, 0.018661069, 0.018665597, 0.018666069, 0.018670917, 0.018671389, 0.018677417, 0.018677889, 0.01869175, 0.018692236, 0.018700083, 0.018700569, 0.018704917, 0.018705403, 0.018718597, 0.018719069, 0.018729264, 0.018729736, 0.018734097, 0.018734569, 0.018738736, 0.018739222, 0.018752931, 0.018753403, 0.018766403, 0.018766889, 0.018776236, 0.018776722, 0.018784903, 0.018785389], 'sourcesource_diff': [0, 4.860000000009301e-07, 1.4348000000000832e-05, 4.859999999974607e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.4707999999998694e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.729999999973644e-07, 9.194000000000563e-06, 4.720000000013602e-07, 1.4541999999999333e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 6.708999999997106e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.870000000004038e-07, 9.512999999999189e-06, 4.870000000004038e-07, 6.013000000002627e-06, 4.869999999969343e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 5.207999999999602e-06, 4.720000000013602e-07, 1.1027999999999732e-05, 4.7199999999789077e-07, 8.34800000000177e-06, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.4693999999999124e-05, 4.860000000009301e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 1.2847999999999332e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7199999999789077e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 9.777999999998482e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 1.1348000000001301e-05, 4.859999999974607e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.860000000009301e-07, 4.179999999999462e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 4.84799999999827e-06, 4.720000000013602e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 4.34800000000124e-06, 4.859999999974607e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.3709000000000637e-05, 4.7199999999789077e-07, 1.3000000000002593e-05, 4.859999999974607e-07, 9.347000000003297e-06, 4.859999999974607e-07, 8.180999999999466e-06, 4.860000000009301e-07], 'diff': [0, 4.860000000009301e-07, 1.4348000000000832e-05, 4.859999999974607e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.4707999999998694e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.729999999973644e-07, 9.194000000000563e-06, 4.720000000013602e-07, 1.4541999999999333e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 6.708999999997106e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.870000000004038e-07, 9.512999999999189e-06, 4.870000000004038e-07, 6.013000000002627e-06, 4.869999999969343e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 5.207999999999602e-06, 4.720000000013602e-07, 1.1027999999999732e-05, 4.7199999999789077e-07, 8.34800000000177e-06, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.4693999999999124e-05, 4.860000000009301e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 1.2847999999999332e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7199999999789077e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 9.777999999998482e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 1.1348000000001301e-05, 4.859999999974607e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.860000000009301e-07, 4.179999999999462e-06, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 4.84799999999827e-06, 4.720000000013602e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 4.34800000000124e-06, 4.859999999974607e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.3709000000000637e-05, 4.7199999999789077e-07, 1.3000000000002593e-05, 4.859999999974607e-07, 9.347000000003297e-06, 4.859999999974607e-07, 8.180999999999466e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:25.911" endtime="20201112 09:53:25.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.907" endtime="20201112 09:53:25.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:25.920" level="INFO">${RESULT} = [{'time': 0.018278208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018293042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:25.916" endtime="20201112 09:53:25.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:25.933" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:25.921" endtime="20201112 09:53:25.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.937" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:25.936" endtime="20201112 09:53:25.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.940" level="INFO">VALUE: [4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:53:25.939" endtime="20201112 09:53:25.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.934" endtime="20201112 09:53:25.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.943" endtime="20201112 09:53:25.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:25.946" endtime="20201112 09:53:25.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.945" endtime="20201112 09:53:25.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.941" endtime="20201112 09:53:25.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.540" endtime="20201112 09:53:25.967"></status>
</kw>
<msg timestamp="20201112 09:53:25.967" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.976" endtime="20201112 09:53:25.986"></status>
</kw>
<msg timestamp="20201112 09:53:25.987" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.974" endtime="20201112 09:53:25.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:25.989" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:25.988" endtime="20201112 09:53:25.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.990" endtime="20201112 09:53:25.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.972" endtime="20201112 09:53:25.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.969" endtime="20201112 09:53:25.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:25.999" endtime="20201112 09:53:26.285"></status>
</kw>
<msg timestamp="20201112 09:53:26.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019303167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019303639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:25.998" endtime="20201112 09:53:26.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019303167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019303639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:26.289" endtime="20201112 09:53:26.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.298" endtime="20201112 09:53:26.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.995" endtime="20201112 09:53:26.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.994" endtime="20201112 09:53:26.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.304" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:26.303" endtime="20201112 09:53:26.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.309" level="INFO">VALUE: [{'time': 0.019303167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019303639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0193145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.019314972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0193285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.019328972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019340514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.019340986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019350333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019350819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019357667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8480000000002705e-06, 'source_diff': 6.8480000000002705e-06}, {'time': 0.019358153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019372, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.019372486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019386833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.019387319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019393681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.36199999999934e-06, 'source_diff': 6.36199999999934e-06}, {'time': 0.019394153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019398694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.019399167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019405181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.019405653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019419514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019419986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019427181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.019427653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019440347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.019440819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019449528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.01945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019456694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.019457167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019463208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.019463681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019468014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.0194685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019476847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.019477333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019486514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.019487, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019494514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019509514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.01951, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019514167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019514639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0195255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019525972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019530333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019530819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019544333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.019544819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019549833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.019550319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019562167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1847999999998332e-05, 'source_diff': 1.1847999999998332e-05}, {'time': 0.019562653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019569167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.019569653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019574333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.019574819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019588681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.019589153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019594181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.019594653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019603847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.019604319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019615347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.019615819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019620861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019621333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019626347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.019626819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019639681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2861999999998902e-05, 'source_diff': 1.2861999999998902e-05}, {'time': 0.019640153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019645014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.019645486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019656042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0555999999998372e-05, 'source_diff': 1.0555999999998372e-05}, {'time': 0.019656514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019670181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3666999999998458e-05, 'source_diff': 1.3666999999998458e-05}, {'time': 0.019670667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019677681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019678167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019688042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.019688514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019697514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.019698, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019705708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.019706181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019714042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.019714514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019723542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.019724014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019732194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.019732667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019745028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.0197455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019753694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.019754167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019761194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.019761667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:53:26.305" endtime="20201112 09:53:26.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.301" endtime="20201112 09:53:26.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:26.335" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:53:26.312" endtime="20201112 09:53:26.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.339" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:26.338" endtime="20201112 09:53:26.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.343" level="INFO">VALUE: {'eventtime': [0.019303167, 0.019303639, 0.0193145, 0.019314972, 0.0193285, 0.019328972, 0.019340514, 0.019340986, 0.019350333, 0.019350819, 0.019357667, 0.019358153, 0.019372, 0.019372486, 0.019386833, 0.019387319, 0.019393681, 0.019394153, 0.019398694, 0.019399167, 0.019405181, 0.019405653, 0.019419514, 0.019419986, 0.019427181, 0.019427653, 0.019440347, 0.019440819, 0.019449528, 0.01945, 0.019456694, 0.019457167, 0.019463208, 0.019463681, 0.019468014, 0.0194685, 0.019476847, 0.019477333, 0.019486514, 0.019487, 0.019494514, 0.019495, 0.019509514, 0.01951, 0.019514167, 0.019514639, 0.0195255, 0.019525972, 0.019530333, 0.019530819, 0.019544333, 0.019544819, 0.019549833, 0.019550319, 0.019562167, 0.019562653, 0.019569167, 0.019569653, 0.019574333, 0.019574819, 0.019588681, 0.019589153, 0.019594181, 0.019594653, 0.019603847, 0.019604319, 0.019615347, 0.019615819, 0.019620861, 0.019621333, 0.019626347, 0.019626819, 0.019639681, 0.019640153, 0.019645014, 0.019645486, 0.019656042, 0.019656514, 0.019670181, 0.019670667, 0.019677681, 0.019678167, 0.019688042, 0.019688514, 0.019697514, 0.019698, 0.019705708, 0.019706181, 0.019714042, 0.019714514, 0.019723542, 0.019724014, 0.019732194, 0.019732667, 0.019745028, 0.0197455, 0.019753694, 0.019754167, 0.019761194, 0.019761667], 'sourcesource_diff': [0, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 6.8480000000002705e-06, 4.860000000009301e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 1.434699999999789e-05, 4.860000000009301e-07, 6.36199999999934e-06, 4.720000000013602e-07, 4.541000000000267e-06, 4.729999999973644e-07, 6.014000000002101e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 7.195000000001506e-06, 4.7199999999789077e-07, 1.2694000000000594e-05, 4.720000000013602e-07, 8.708999999999106e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 6.040999999998298e-06, 4.7300000000083386e-07, 4.332999999998727e-06, 4.860000000009301e-07, 8.346999999998828e-06, 4.860000000009301e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.859999999974607e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.860000000009301e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 1.1847999999998332e-05, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 4.679999999999962e-06, 4.860000000009301e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 1.1028000000003202e-05, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 1.2861999999998902e-05, 4.720000000013602e-07, 4.860999999998367e-06, 4.720000000013602e-07, 1.0555999999998372e-05, 4.720000000013602e-07, 1.3666999999998458e-05, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.860000000009301e-07, 7.707999999998633e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 8.179999999999993e-06, 4.729999999973644e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 6.8480000000002705e-06, 4.860000000009301e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 1.434699999999789e-05, 4.860000000009301e-07, 6.36199999999934e-06, 4.720000000013602e-07, 4.541000000000267e-06, 4.729999999973644e-07, 6.014000000002101e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 7.195000000001506e-06, 4.7199999999789077e-07, 1.2694000000000594e-05, 4.720000000013602e-07, 8.708999999999106e-06, 4.7199999999789077e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 6.040999999998298e-06, 4.7300000000083386e-07, 4.332999999998727e-06, 4.860000000009301e-07, 8.346999999998828e-06, 4.860000000009301e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.859999999974607e-07, 1.4514000000000193e-05, 4.860000000009301e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 4.361000000001336e-06, 4.860000000009301e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 1.1847999999998332e-05, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 4.679999999999962e-06, 4.860000000009301e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 1.1028000000003202e-05, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 1.2861999999998902e-05, 4.720000000013602e-07, 4.860999999998367e-06, 4.720000000013602e-07, 1.0555999999998372e-05, 4.720000000013602e-07, 1.3666999999998458e-05, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.999999999998592e-06, 4.860000000009301e-07, 7.707999999998633e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 8.179999999999993e-06, 4.729999999973644e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 09:53:26.340" endtime="20201112 09:53:26.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.336" endtime="20201112 09:53:26.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:26.349" level="INFO">${RESULT} = [{'time': 0.019303639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019314972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:26.345" endtime="20201112 09:53:26.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:26.362" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:26.350" endtime="20201112 09:53:26.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.367" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:26.366" endtime="20201112 09:53:26.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.369" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:53:26.368" endtime="20201112 09:53:26.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.363" endtime="20201112 09:53:26.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.372" endtime="20201112 09:53:26.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:26.375" endtime="20201112 09:53:26.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.374" endtime="20201112 09:53:26.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.371" endtime="20201112 09:53:26.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:25.968" endtime="20201112 09:53:26.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:10.852" endtime="20201112 09:53:26.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:26.404" endtime="20201112 09:53:26.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.402" endtime="20201112 09:53:26.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.401" endtime="20201112 09:53:26.425"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:10.780" endtime="20201112 09:53:26.425" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:26.433" endtime="20201112 09:53:26.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.431" endtime="20201112 09:53:26.453"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.465" endtime="20201112 09:53:26.482"></status>
</kw>
<msg timestamp="20201112 09:53:26.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:26.464" endtime="20201112 09:53:26.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.485" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:26.484" endtime="20201112 09:53:26.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.488" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:26.487" endtime="20201112 09:53:26.489"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:26.461" endtime="20201112 09:53:26.489"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:26.459" endtime="20201112 09:53:26.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.458" endtime="20201112 09:53:26.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:26.494" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:26.493" endtime="20201112 09:53:26.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.491" endtime="20201112 09:53:26.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.457" endtime="20201112 09:53:26.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.456" endtime="20201112 09:53:26.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.496" endtime="20201112 09:53:26.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.455" endtime="20201112 09:53:26.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.453" endtime="20201112 09:53:26.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.430" endtime="20201112 09:53:26.498"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:26.501" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.508" endtime="20201112 09:53:26.521"></status>
</kw>
<msg timestamp="20201112 09:53:26.521" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:26.507" endtime="20201112 09:53:26.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.523" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:26.522" endtime="20201112 09:53:26.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.524" endtime="20201112 09:53:26.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.504" endtime="20201112 09:53:26.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.503" endtime="20201112 09:53:26.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.533" endtime="20201112 09:53:26.819"></status>
</kw>
<msg timestamp="20201112 09:53:26.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066630667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066633389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:26.532" endtime="20201112 09:53:26.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066630667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066633389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:26.823" endtime="20201112 09:53:26.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.832" endtime="20201112 09:53:26.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.529" endtime="20201112 09:53:26.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.528" endtime="20201112 09:53:26.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:26.838" level="INFO">${RESULT} = [{'time': 0.066633389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.066640875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:26.835" endtime="20201112 09:53:26.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:26.853" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:26.839" endtime="20201112 09:53:26.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.858" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:26.857" endtime="20201112 09:53:26.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.860" level="INFO">VALUE: [2.7219999999966715e-06, 2.6810000000043743e-06, 2.679999999991023e-06, 2.6949999999970053e-06, 2.6669999999978655e-06, 2.6660000000122697e-06, 2.665999999998392e-06, 2.610999999999586e-06, 2.6530000000052345e-06, 2.6530000000052345e-06, 2.665999999998392e-06, 2.6809999999904965e-06, 2.6800000000049007e-06, 2.5979999999925507e-06, 2.6530000000052345e-06, 2.6529999999913567e-06, 2.6800000000049007e-06, 2.6529999999913567e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6670000000117433e-06, 2.6669999999978655e-06, 2.6250000000060947e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.6529999999913567e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6530000000052345e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.679999999991023e-06, 2.6669999999978655e-06, 2.6529999999913567e-06, 2.624999999992217e-06, 2.6250000000060947e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6810000000043743e-06, 2.6530000000052345e-06, 2.6809999999904965e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6530000000052345e-06]</msg>
<status status="PASS" starttime="20201112 09:53:26.859" endtime="20201112 09:53:26.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.854" endtime="20201112 09:53:26.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.863" endtime="20201112 09:53:26.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:26.867" endtime="20201112 09:53:26.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.865" endtime="20201112 09:53:26.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.862" endtime="20201112 09:53:26.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.501" endtime="20201112 09:53:26.888"></status>
</kw>
<msg timestamp="20201112 09:53:26.888" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.896" endtime="20201112 09:53:26.907"></status>
</kw>
<msg timestamp="20201112 09:53:26.908" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:26.894" endtime="20201112 09:53:26.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:26.910" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:26.909" endtime="20201112 09:53:26.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.911" endtime="20201112 09:53:26.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.891" endtime="20201112 09:53:26.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.890" endtime="20201112 09:53:26.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:26.920" endtime="20201112 09:53:27.208"></status>
</kw>
<msg timestamp="20201112 09:53:27.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:26.919" endtime="20201112 09:53:27.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:27.212" endtime="20201112 09:53:27.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.220" endtime="20201112 09:53:27.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.916" endtime="20201112 09:53:27.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.914" endtime="20201112 09:53:27.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:27.226" level="INFO">${RESULT} = [{'time': 0.019521222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.019536069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:27.223" endtime="20201112 09:53:27.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:27.241" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:27.228" endtime="20201112 09:53:27.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:27.244" endtime="20201112 09:53:27.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.247" level="INFO">VALUE: [2.6660000000018613e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.735999999999711e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.653000000001765e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.6800000000014312e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.639000000002195e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201112 09:53:27.246" endtime="20201112 09:53:27.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.242" endtime="20201112 09:53:27.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.251" endtime="20201112 09:53:27.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:27.254" endtime="20201112 09:53:27.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.252" endtime="20201112 09:53:27.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.249" endtime="20201112 09:53:27.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.888" endtime="20201112 09:53:27.275"></status>
</kw>
<msg timestamp="20201112 09:53:27.275" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.282" endtime="20201112 09:53:27.294"></status>
</kw>
<msg timestamp="20201112 09:53:27.295" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:27.281" endtime="20201112 09:53:27.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.297" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:27.296" endtime="20201112 09:53:27.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.298" endtime="20201112 09:53:27.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.278" endtime="20201112 09:53:27.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.277" endtime="20201112 09:53:27.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.307" endtime="20201112 09:53:27.593"></status>
</kw>
<msg timestamp="20201112 09:53:27.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:27.306" endtime="20201112 09:53:27.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:27.597" endtime="20201112 09:53:27.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.605" endtime="20201112 09:53:27.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.303" endtime="20201112 09:53:27.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.301" endtime="20201112 09:53:27.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:27.612" level="INFO">${RESULT} = [{'time': 0.019559625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.019576597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:27.609" endtime="20201112 09:53:27.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:27.626" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:27.613" endtime="20201112 09:53:27.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.630" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:27.629" endtime="20201112 09:53:27.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.633" level="INFO">VALUE: [2.708000000000571e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6809999999974354e-06, 2.7219999999966715e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201112 09:53:27.632" endtime="20201112 09:53:27.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.627" endtime="20201112 09:53:27.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.636" endtime="20201112 09:53:27.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:27.639" endtime="20201112 09:53:27.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.638" endtime="20201112 09:53:27.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.634" endtime="20201112 09:53:27.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.275" endtime="20201112 09:53:27.660"></status>
</kw>
<msg timestamp="20201112 09:53:27.660" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.668" endtime="20201112 09:53:27.679"></status>
</kw>
<msg timestamp="20201112 09:53:27.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:27.666" endtime="20201112 09:53:27.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.682" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:27.681" endtime="20201112 09:53:27.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.683" endtime="20201112 09:53:27.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.664" endtime="20201112 09:53:27.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.662" endtime="20201112 09:53:27.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:27.692" endtime="20201112 09:53:27.984"></status>
</kw>
<msg timestamp="20201112 09:53:27.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019406306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:27.690" endtime="20201112 09:53:27.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:27.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019406306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:27.988" endtime="20201112 09:53:28.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.008" endtime="20201112 09:53:28.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.688" endtime="20201112 09:53:28.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.686" endtime="20201112 09:53:28.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:28.014" level="INFO">${RESULT} = [{'time': 0.019406306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019413333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:28.011" endtime="20201112 09:53:28.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:28.028" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:28.016" endtime="20201112 09:53:28.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.033" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:28.032" endtime="20201112 09:53:28.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.035" level="INFO">VALUE: [2.667000000001335e-06, 2.6520000000022914e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.735999999999711e-06, 2.6809999999974354e-06, 2.749999999999281e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6250000000026252e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.708000000000571e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.695000000000475e-06, 2.708000000000571e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201112 09:53:28.034" endtime="20201112 09:53:28.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.029" endtime="20201112 09:53:28.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.038" endtime="20201112 09:53:28.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:28.042" endtime="20201112 09:53:28.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.040" endtime="20201112 09:53:28.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.037" endtime="20201112 09:53:28.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:27.661" endtime="20201112 09:53:28.062"></status>
</kw>
<msg timestamp="20201112 09:53:28.063" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.070" endtime="20201112 09:53:28.082"></status>
</kw>
<msg timestamp="20201112 09:53:28.083" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.068" endtime="20201112 09:53:28.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.085" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.084" endtime="20201112 09:53:28.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.086" endtime="20201112 09:53:28.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.066" endtime="20201112 09:53:28.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.064" endtime="20201112 09:53:28.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.095" endtime="20201112 09:53:28.398"></status>
</kw>
<msg timestamp="20201112 09:53:28.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:28.094" endtime="20201112 09:53:28.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:28.403" endtime="20201112 09:53:28.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.411" endtime="20201112 09:53:28.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.091" endtime="20201112 09:53:28.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.090" endtime="20201112 09:53:28.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:28.418" level="INFO">${RESULT} = [{'time': 0.019409069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.019419597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:28.414" endtime="20201112 09:53:28.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:28.432" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:28.419" endtime="20201112 09:53:28.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.437" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:28.436" endtime="20201112 09:53:28.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.439" level="INFO">VALUE: [2.6660000000018613e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.651999999998822e-06, 2.695000000000475e-06, 2.6389999999987257e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.695000000000475e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6520000000022914e-06]</msg>
<status status="PASS" starttime="20201112 09:53:28.438" endtime="20201112 09:53:28.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.433" endtime="20201112 09:53:28.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.442" endtime="20201112 09:53:28.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:28.446" endtime="20201112 09:53:28.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.444" endtime="20201112 09:53:28.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.441" endtime="20201112 09:53:28.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.063" endtime="20201112 09:53:28.466"></status>
</kw>
<msg timestamp="20201112 09:53:28.467" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.474" endtime="20201112 09:53:28.486"></status>
</kw>
<msg timestamp="20201112 09:53:28.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.473" endtime="20201112 09:53:28.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.488" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.487" endtime="20201112 09:53:28.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.490" endtime="20201112 09:53:28.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.470" endtime="20201112 09:53:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.468" endtime="20201112 09:53:28.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.499" endtime="20201112 09:53:28.783"></status>
</kw>
<msg timestamp="20201112 09:53:28.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:28.497" endtime="20201112 09:53:28.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:28.787" endtime="20201112 09:53:28.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.796" endtime="20201112 09:53:28.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.494" endtime="20201112 09:53:28.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.493" endtime="20201112 09:53:28.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:28.802" level="INFO">${RESULT} = [{'time': 0.019872458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.019887806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:28.799" endtime="20201112 09:53:28.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:28.816" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:28.803" endtime="20201112 09:53:28.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.820" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:28.819" endtime="20201112 09:53:28.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.823" level="INFO">VALUE: [2.679999999997962e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.651999999998822e-06, 2.7229999999996146e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.6250000000026252e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.708000000000571e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6250000000026252e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6250000000026252e-06, 2.6809999999974354e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.749999999999281e-06, 2.6669999999978655e-06, 2.6809999999974354e-06]</msg>
<status status="PASS" starttime="20201112 09:53:28.822" endtime="20201112 09:53:28.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.817" endtime="20201112 09:53:28.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.826" endtime="20201112 09:53:28.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:28.829" endtime="20201112 09:53:28.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.828" endtime="20201112 09:53:28.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.824" endtime="20201112 09:53:28.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.467" endtime="20201112 09:53:28.850"></status>
</kw>
<msg timestamp="20201112 09:53:28.850" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.858" endtime="20201112 09:53:28.870"></status>
</kw>
<msg timestamp="20201112 09:53:28.870" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.856" endtime="20201112 09:53:28.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:28.873" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:28.872" endtime="20201112 09:53:28.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.874" endtime="20201112 09:53:28.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.854" endtime="20201112 09:53:28.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.852" endtime="20201112 09:53:28.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:28.884" endtime="20201112 09:53:29.171"></status>
</kw>
<msg timestamp="20201112 09:53:29.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:28.882" endtime="20201112 09:53:29.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:29.175" endtime="20201112 09:53:29.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.183" endtime="20201112 09:53:29.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.879" endtime="20201112 09:53:29.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.878" endtime="20201112 09:53:29.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:29.190" level="INFO">${RESULT} = [{'time': 0.019561292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019568486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:29.186" endtime="20201112 09:53:29.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:29.203" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:29.191" endtime="20201112 09:53:29.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.208" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:29.207" endtime="20201112 09:53:29.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.210" level="INFO">VALUE: [2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6949999999970053e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.6380000000027215e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.694000000001001e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.708000000000571e-06, 2.6809999999974354e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.6809999999974354e-06, 2.7090000000000447e-06]</msg>
<status status="PASS" starttime="20201112 09:53:29.209" endtime="20201112 09:53:29.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.204" endtime="20201112 09:53:29.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.213" endtime="20201112 09:53:29.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:29.217" endtime="20201112 09:53:29.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.215" endtime="20201112 09:53:29.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.212" endtime="20201112 09:53:29.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:28.851" endtime="20201112 09:53:29.237"></status>
</kw>
<msg timestamp="20201112 09:53:29.237" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.245" endtime="20201112 09:53:29.257"></status>
</kw>
<msg timestamp="20201112 09:53:29.258" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:29.243" endtime="20201112 09:53:29.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.261" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:29.259" endtime="20201112 09:53:29.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.262" endtime="20201112 09:53:29.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.241" endtime="20201112 09:53:29.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.239" endtime="20201112 09:53:29.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.271" endtime="20201112 09:53:29.558"></status>
</kw>
<msg timestamp="20201112 09:53:29.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019385097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:29.269" endtime="20201112 09:53:29.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019385097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:29.562" endtime="20201112 09:53:29.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.571" endtime="20201112 09:53:29.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.267" endtime="20201112 09:53:29.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.265" endtime="20201112 09:53:29.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:29.577" level="INFO">${RESULT} = [{'time': 0.019385097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.019392792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:29.574" endtime="20201112 09:53:29.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:29.591" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:29.578" endtime="20201112 09:53:29.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.596" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:29.594" endtime="20201112 09:53:29.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.598" level="INFO">VALUE: [2.653000000001765e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.708000000000571e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.735999999999711e-06, 2.6669999999978655e-06, 2.7090000000000447e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 09:53:29.597" endtime="20201112 09:53:29.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.592" endtime="20201112 09:53:29.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.601" endtime="20201112 09:53:29.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:29.605" endtime="20201112 09:53:29.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.603" endtime="20201112 09:53:29.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.599" endtime="20201112 09:53:29.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.238" endtime="20201112 09:53:29.625"></status>
</kw>
<msg timestamp="20201112 09:53:29.625" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.633" endtime="20201112 09:53:29.645"></status>
</kw>
<msg timestamp="20201112 09:53:29.646" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:29.631" endtime="20201112 09:53:29.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.648" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:29.647" endtime="20201112 09:53:29.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.649" endtime="20201112 09:53:29.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.629" endtime="20201112 09:53:29.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.627" endtime="20201112 09:53:29.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.658" endtime="20201112 09:53:29.941"></status>
</kw>
<msg timestamp="20201112 09:53:29.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:29.657" endtime="20201112 09:53:29.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:29.945" endtime="20201112 09:53:29.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.954" endtime="20201112 09:53:29.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.654" endtime="20201112 09:53:29.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.652" endtime="20201112 09:53:29.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:29.960" level="INFO">${RESULT} = [{'time': 0.019869847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.019879722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:29.957" endtime="20201112 09:53:29.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:29.975" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:29.961" endtime="20201112 09:53:29.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.979" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:29.978" endtime="20201112 09:53:29.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:29.982" level="INFO">VALUE: [2.665999999998392e-06, 2.6939999999975317e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.610999999999586e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.639000000002195e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.639000000002195e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.6110000000030553e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.722000000000141e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 09:53:29.980" endtime="20201112 09:53:29.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.976" endtime="20201112 09:53:29.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:29.985" endtime="20201112 09:53:29.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:29.988" endtime="20201112 09:53:30.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.987" endtime="20201112 09:53:30.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.983" endtime="20201112 09:53:30.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:29.626" endtime="20201112 09:53:30.009"></status>
</kw>
<msg timestamp="20201112 09:53:30.009" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.017" endtime="20201112 09:53:30.029"></status>
</kw>
<msg timestamp="20201112 09:53:30.030" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.016" endtime="20201112 09:53:30.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.031" endtime="20201112 09:53:30.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.033" endtime="20201112 09:53:30.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.013" endtime="20201112 09:53:30.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.011" endtime="20201112 09:53:30.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.042" endtime="20201112 09:53:30.326"></status>
</kw>
<msg timestamp="20201112 09:53:30.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:30.041" endtime="20201112 09:53:30.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:53:30.330" endtime="20201112 09:53:30.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.338" endtime="20201112 09:53:30.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.038" endtime="20201112 09:53:30.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.036" endtime="20201112 09:53:30.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:30.344" level="INFO">${RESULT} = [{'time': 0.019932, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.019940181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:30.341" endtime="20201112 09:53:30.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:30.358" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:30.345" endtime="20201112 09:53:30.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.363" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:30.362" endtime="20201112 09:53:30.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.365" level="INFO">VALUE: [2.6809999999974354e-06, 2.695000000000475e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.695000000000475e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.749999999999281e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.612000000002529e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.610999999999586e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 09:53:30.364" endtime="20201112 09:53:30.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.359" endtime="20201112 09:53:30.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.368" endtime="20201112 09:53:30.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:30.372" endtime="20201112 09:53:30.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.370" endtime="20201112 09:53:30.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.366" endtime="20201112 09:53:30.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.010" endtime="20201112 09:53:30.393"></status>
</kw>
<msg timestamp="20201112 09:53:30.393" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.400" endtime="20201112 09:53:30.413"></status>
</kw>
<msg timestamp="20201112 09:53:30.413" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.399" endtime="20201112 09:53:30.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.416" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.414" endtime="20201112 09:53:30.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.417" endtime="20201112 09:53:30.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.396" endtime="20201112 09:53:30.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.395" endtime="20201112 09:53:30.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.426" endtime="20201112 09:53:30.714"></status>
</kw>
<msg timestamp="20201112 09:53:30.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019412736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:30.424" endtime="20201112 09:53:30.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019412736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:30.719" endtime="20201112 09:53:30.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.727" endtime="20201112 09:53:30.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.422" endtime="20201112 09:53:30.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.420" endtime="20201112 09:53:30.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:30.734" level="INFO">${RESULT} = [{'time': 0.019415417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019425931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:30.730" endtime="20201112 09:53:30.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:30.747" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:30.734" endtime="20201112 09:53:30.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.752" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:30.751" endtime="20201112 09:53:30.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.754" level="INFO">VALUE: [2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.722000000000141e-06, 2.651999999998822e-06, 2.7500000000027502e-06, 2.6389999999987257e-06, 2.6119999999990595e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.6660000000018613e-06]</msg>
<status status="PASS" starttime="20201112 09:53:30.753" endtime="20201112 09:53:30.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.748" endtime="20201112 09:53:30.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.758" endtime="20201112 09:53:30.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:30.761" endtime="20201112 09:53:30.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.760" endtime="20201112 09:53:30.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.756" endtime="20201112 09:53:30.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.393" endtime="20201112 09:53:30.782"></status>
</kw>
<msg timestamp="20201112 09:53:30.782" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.790" endtime="20201112 09:53:30.802"></status>
</kw>
<msg timestamp="20201112 09:53:30.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.788" endtime="20201112 09:53:30.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:30.805" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:30.803" endtime="20201112 09:53:30.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.806" endtime="20201112 09:53:30.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.785" endtime="20201112 09:53:30.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.784" endtime="20201112 09:53:30.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:30.814" endtime="20201112 09:53:31.103"></status>
</kw>
<msg timestamp="20201112 09:53:31.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019476028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019478708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:30.813" endtime="20201112 09:53:31.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019476028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019478708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:31.107" endtime="20201112 09:53:31.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.115" endtime="20201112 09:53:31.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.810" endtime="20201112 09:53:31.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.809" endtime="20201112 09:53:31.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:31.122" level="INFO">${RESULT} = [{'time': 0.019478708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.019493222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:31.119" endtime="20201112 09:53:31.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:31.136" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:31.123" endtime="20201112 09:53:31.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.140" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:31.139" endtime="20201112 09:53:31.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.143" level="INFO">VALUE: [2.6800000000014312e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.610999999999586e-06, 2.6660000000018613e-06, 2.6520000000022914e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.735999999999711e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.694000000001001e-06]</msg>
<status status="PASS" starttime="20201112 09:53:31.142" endtime="20201112 09:53:31.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.137" endtime="20201112 09:53:31.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.146" endtime="20201112 09:53:31.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:31.150" endtime="20201112 09:53:31.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.148" endtime="20201112 09:53:31.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.145" endtime="20201112 09:53:31.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:30.783" endtime="20201112 09:53:31.171"></status>
</kw>
<msg timestamp="20201112 09:53:31.171" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.179" endtime="20201112 09:53:31.190"></status>
</kw>
<msg timestamp="20201112 09:53:31.191" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.177" endtime="20201112 09:53:31.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.193" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.192" endtime="20201112 09:53:31.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.194" endtime="20201112 09:53:31.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.174" endtime="20201112 09:53:31.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.173" endtime="20201112 09:53:31.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.203" endtime="20201112 09:53:31.486"></status>
</kw>
<msg timestamp="20201112 09:53:31.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019771792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:31.202" endtime="20201112 09:53:31.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019771792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:31.491" endtime="20201112 09:53:31.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.499" endtime="20201112 09:53:31.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.199" endtime="20201112 09:53:31.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.197" endtime="20201112 09:53:31.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:31.505" level="INFO">${RESULT} = [{'time': 0.019771792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019780319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:31.502" endtime="20201112 09:53:31.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:31.520" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:31.506" endtime="20201112 09:53:31.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.524" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:31.523" endtime="20201112 09:53:31.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.527" level="INFO">VALUE: [2.667000000001335e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6520000000022914e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.5979999999994896e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6250000000026252e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.749999999999281e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.6660000000018613e-06]</msg>
<status status="PASS" starttime="20201112 09:53:31.525" endtime="20201112 09:53:31.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.521" endtime="20201112 09:53:31.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.530" endtime="20201112 09:53:31.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:31.534" endtime="20201112 09:53:31.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.532" endtime="20201112 09:53:31.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.529" endtime="20201112 09:53:31.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.171" endtime="20201112 09:53:31.554"></status>
</kw>
<msg timestamp="20201112 09:53:31.555" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.562" endtime="20201112 09:53:31.574"></status>
</kw>
<msg timestamp="20201112 09:53:31.575" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.561" endtime="20201112 09:53:31.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.577" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.576" endtime="20201112 09:53:31.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.578" endtime="20201112 09:53:31.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.558" endtime="20201112 09:53:31.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.556" endtime="20201112 09:53:31.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.587" endtime="20201112 09:53:31.874"></status>
</kw>
<msg timestamp="20201112 09:53:31.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01951825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019520944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:31.586" endtime="20201112 09:53:31.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01951825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019520944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:31.878" endtime="20201112 09:53:31.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.887" endtime="20201112 09:53:31.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.583" endtime="20201112 09:53:31.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.581" endtime="20201112 09:53:31.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:31.893" level="INFO">${RESULT} = [{'time': 0.019520944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.019527944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:31.890" endtime="20201112 09:53:31.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:31.907" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:31.894" endtime="20201112 09:53:31.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.912" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:31.910" endtime="20201112 09:53:31.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.914" level="INFO">VALUE: [2.6939999999975317e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6949999999970053e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.610999999999586e-06, 2.6800000000014312e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.6520000000022914e-06]</msg>
<status status="PASS" starttime="20201112 09:53:31.913" endtime="20201112 09:53:31.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.908" endtime="20201112 09:53:31.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.918" endtime="20201112 09:53:31.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:31.921" endtime="20201112 09:53:31.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.919" endtime="20201112 09:53:31.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.916" endtime="20201112 09:53:31.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.555" endtime="20201112 09:53:31.942"></status>
</kw>
<msg timestamp="20201112 09:53:31.942" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.950" endtime="20201112 09:53:31.962"></status>
</kw>
<msg timestamp="20201112 09:53:31.963" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.948" endtime="20201112 09:53:31.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:31.965" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:31.964" endtime="20201112 09:53:31.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.966" endtime="20201112 09:53:31.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.945" endtime="20201112 09:53:31.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.944" endtime="20201112 09:53:31.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:31.975" endtime="20201112 09:53:32.263"></status>
</kw>
<msg timestamp="20201112 09:53:32.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02044, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442681, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:53:31.973" endtime="20201112 09:53:32.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02044, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442681, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:53:32.267" endtime="20201112 09:53:32.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.275" endtime="20201112 09:53:32.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.971" endtime="20201112 09:53:32.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.969" endtime="20201112 09:53:32.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:32.282" level="INFO">${RESULT} = [{'time': 0.020442681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.020457361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:32.278" endtime="20201112 09:53:32.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:32.295" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:32.283" endtime="20201112 09:53:32.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.300" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:32.299" endtime="20201112 09:53:32.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.302" level="INFO">VALUE: [2.681000000000905e-06, 2.653000000001765e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.7369999999991845e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.708000000000571e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6250000000026252e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6250000000026252e-06]</msg>
<status status="PASS" starttime="20201112 09:53:32.301" endtime="20201112 09:53:32.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.296" endtime="20201112 09:53:32.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.306" endtime="20201112 09:53:32.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:32.309" endtime="20201112 09:53:32.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.308" endtime="20201112 09:53:32.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.304" endtime="20201112 09:53:32.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:31.942" endtime="20201112 09:53:32.330"></status>
</kw>
<msg timestamp="20201112 09:53:32.330" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.338" endtime="20201112 09:53:32.350"></status>
</kw>
<msg timestamp="20201112 09:53:32.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.336" endtime="20201112 09:53:32.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.353" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.351" endtime="20201112 09:53:32.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.354" endtime="20201112 09:53:32.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.334" endtime="20201112 09:53:32.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.332" endtime="20201112 09:53:32.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.363" endtime="20201112 09:53:32.651"></status>
</kw>
<msg timestamp="20201112 09:53:32.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:32.361" endtime="20201112 09:53:32.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:32.655" endtime="20201112 09:53:32.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.663" endtime="20201112 09:53:32.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.358" endtime="20201112 09:53:32.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.357" endtime="20201112 09:53:32.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:32.670" level="INFO">${RESULT} = [{'time': 0.019407292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019418458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:32.667" endtime="20201112 09:53:32.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:32.684" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:32.671" endtime="20201112 09:53:32.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.688" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:32.687" endtime="20201112 09:53:32.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.691" level="INFO">VALUE: [2.681000000000905e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.679999999997962e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.695000000000475e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.6380000000027215e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201112 09:53:32.689" endtime="20201112 09:53:32.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.685" endtime="20201112 09:53:32.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.694" endtime="20201112 09:53:32.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:32.698" endtime="20201112 09:53:32.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.696" endtime="20201112 09:53:32.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.693" endtime="20201112 09:53:32.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.331" endtime="20201112 09:53:32.718"></status>
</kw>
<msg timestamp="20201112 09:53:32.719" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.726" endtime="20201112 09:53:32.738"></status>
</kw>
<msg timestamp="20201112 09:53:32.738" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.725" endtime="20201112 09:53:32.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:32.741" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:32.739" endtime="20201112 09:53:32.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.742" endtime="20201112 09:53:32.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.722" endtime="20201112 09:53:32.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.720" endtime="20201112 09:53:32.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:32.751" endtime="20201112 09:53:33.038"></status>
</kw>
<msg timestamp="20201112 09:53:33.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019315472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019318125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:32.749" endtime="20201112 09:53:33.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019315472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019318125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.042" endtime="20201112 09:53:33.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.050" endtime="20201112 09:53:33.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.747" endtime="20201112 09:53:33.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.745" endtime="20201112 09:53:33.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:33.057" level="INFO">${RESULT} = [{'time': 0.019318125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.019326653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:33.054" endtime="20201112 09:53:33.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:33.072" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:33.058" endtime="20201112 09:53:33.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.076" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:33.075" endtime="20201112 09:53:33.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.078" level="INFO">VALUE: [2.6529999999982956e-06, 2.6249999999991558e-06, 2.6250000000026252e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.7369999999991845e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.651999999998822e-06]</msg>
<status status="PASS" starttime="20201112 09:53:33.077" endtime="20201112 09:53:33.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.072" endtime="20201112 09:53:33.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.082" endtime="20201112 09:53:33.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:33.086" endtime="20201112 09:53:33.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.084" endtime="20201112 09:53:33.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.080" endtime="20201112 09:53:33.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:32.719" endtime="20201112 09:53:33.106"></status>
</kw>
<msg timestamp="20201112 09:53:33.107" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.114" endtime="20201112 09:53:33.127"></status>
</kw>
<msg timestamp="20201112 09:53:33.127" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.113" endtime="20201112 09:53:33.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.129" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.128" endtime="20201112 09:53:33.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.131" endtime="20201112 09:53:33.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.110" endtime="20201112 09:53:33.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.108" endtime="20201112 09:53:33.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.140" endtime="20201112 09:53:33.426"></status>
</kw>
<msg timestamp="20201112 09:53:33.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.138" endtime="20201112 09:53:33.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.431" endtime="20201112 09:53:33.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.439" endtime="20201112 09:53:33.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.135" endtime="20201112 09:53:33.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.134" endtime="20201112 09:53:33.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:33.445" level="INFO">${RESULT} = [{'time': 0.019504944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.019515972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:33.442" endtime="20201112 09:53:33.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:33.459" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:33.446" endtime="20201112 09:53:33.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.463" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:33.462" endtime="20201112 09:53:33.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.466" level="INFO">VALUE: [2.6249999999991558e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.735999999999711e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6249999999991558e-06, 2.6520000000022914e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.610999999999586e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.639000000002195e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.597000000000016e-06, 2.6800000000014312e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 09:53:33.464" endtime="20201112 09:53:33.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.460" endtime="20201112 09:53:33.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.469" endtime="20201112 09:53:33.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:33.473" endtime="20201112 09:53:33.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.471" endtime="20201112 09:53:33.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.468" endtime="20201112 09:53:33.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.107" endtime="20201112 09:53:33.493"></status>
</kw>
<msg timestamp="20201112 09:53:33.494" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.501" endtime="20201112 09:53:33.513"></status>
</kw>
<msg timestamp="20201112 09:53:33.514" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.500" endtime="20201112 09:53:33.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.516" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.515" endtime="20201112 09:53:33.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.517" endtime="20201112 09:53:33.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.497" endtime="20201112 09:53:33.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.495" endtime="20201112 09:53:33.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.526" endtime="20201112 09:53:33.813"></status>
</kw>
<msg timestamp="20201112 09:53:33.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.524" endtime="20201112 09:53:33.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.817" endtime="20201112 09:53:33.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.825" endtime="20201112 09:53:33.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.522" endtime="20201112 09:53:33.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.520" endtime="20201112 09:53:33.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:33.832" level="INFO">${RESULT} = [{'time': 0.019389569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.01940125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:33.828" endtime="20201112 09:53:33.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:33.846" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:33.833" endtime="20201112 09:53:33.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.850" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:33.849" endtime="20201112 09:53:33.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.852" level="INFO">VALUE: [2.679999999997962e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.610999999999586e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.695000000000475e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.708000000000571e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.5979999999994896e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.5979999999994896e-06, 2.749999999999281e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.7229999999996146e-06, 2.6800000000014312e-06, 2.6949999999970053e-06, 2.695000000000475e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201112 09:53:33.851" endtime="20201112 09:53:33.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.847" endtime="20201112 09:53:33.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.856" endtime="20201112 09:53:33.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:33.859" endtime="20201112 09:53:33.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.858" endtime="20201112 09:53:33.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.854" endtime="20201112 09:53:33.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.494" endtime="20201112 09:53:33.880"></status>
</kw>
<msg timestamp="20201112 09:53:33.880" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.888" endtime="20201112 09:53:33.900"></status>
</kw>
<msg timestamp="20201112 09:53:33.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.886" endtime="20201112 09:53:33.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:33.903" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:33.901" endtime="20201112 09:53:33.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.904" endtime="20201112 09:53:33.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.884" endtime="20201112 09:53:33.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.882" endtime="20201112 09:53:33.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:33.913" endtime="20201112 09:53:34.201"></status>
</kw>
<msg timestamp="20201112 09:53:34.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:33.911" endtime="20201112 09:53:34.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.205" endtime="20201112 09:53:34.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.213" endtime="20201112 09:53:34.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.909" endtime="20201112 09:53:34.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.907" endtime="20201112 09:53:34.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:34.220" level="INFO">${RESULT} = [{'time': 0.019537125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019550139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:34.217" endtime="20201112 09:53:34.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:34.234" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:34.221" endtime="20201112 09:53:34.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.238" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:53:34.237" endtime="20201112 09:53:34.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.241" level="INFO">VALUE: [2.6669999999978655e-06, 2.653000000001765e-06, 2.637999999999252e-06, 2.667000000001335e-06, 2.637999999999252e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.639000000002195e-06, 2.6800000000014312e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6520000000022914e-06, 2.639000000002195e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.637999999999252e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6250000000026252e-06]</msg>
<status status="PASS" starttime="20201112 09:53:34.239" endtime="20201112 09:53:34.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.235" endtime="20201112 09:53:34.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.244" endtime="20201112 09:53:34.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.248" endtime="20201112 09:53:34.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.246" endtime="20201112 09:53:34.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.243" endtime="20201112 09:53:34.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:33.881" endtime="20201112 09:53:34.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:26.500" endtime="20201112 09:53:34.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.273" endtime="20201112 09:53:34.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.271" endtime="20201112 09:53:34.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.270" endtime="20201112 09:53:34.294"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:26.427" endtime="20201112 09:53:34.294" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.301" endtime="20201112 09:53:34.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.300" endtime="20201112 09:53:34.321"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.334" endtime="20201112 09:53:34.351"></status>
</kw>
<msg timestamp="20201112 09:53:34.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.333" endtime="20201112 09:53:34.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.353" endtime="20201112 09:53:34.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.357" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:34.355" endtime="20201112 09:53:34.358"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:34.330" endtime="20201112 09:53:34.358"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:34.328" endtime="20201112 09:53:34.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.326" endtime="20201112 09:53:34.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:34.363" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:34.362" endtime="20201112 09:53:34.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.360" endtime="20201112 09:53:34.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.326" endtime="20201112 09:53:34.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.325" endtime="20201112 09:53:34.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.365" endtime="20201112 09:53:34.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.324" endtime="20201112 09:53:34.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.322" endtime="20201112 09:53:34.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.298" endtime="20201112 09:53:34.367"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.376" endtime="20201112 09:53:34.396"></status>
</kw>
<msg timestamp="20201112 09:53:34.396" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.375" endtime="20201112 09:53:34.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.399" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.398" endtime="20201112 09:53:34.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.400" endtime="20201112 09:53:34.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.372" endtime="20201112 09:53:34.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.370" endtime="20201112 09:53:34.403"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.405" endtime="20201112 09:53:34.406"></status>
</kw>
<msg timestamp="20201112 09:53:34.407" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:34.404" endtime="20201112 09:53:34.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.411" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:34.410" endtime="20201112 09:53:34.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.413" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:34.412" endtime="20201112 09:53:34.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.408" endtime="20201112 09:53:34.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.418" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:34.417" endtime="20201112 09:53:34.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.420" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:34.419" endtime="20201112 09:53:34.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.414" endtime="20201112 09:53:34.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.427" endtime="20201112 09:53:34.713"></status>
</kw>
<msg timestamp="20201112 09:53:34.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067962167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067969722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.425" endtime="20201112 09:53:34.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067962167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067969722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.717" endtime="20201112 09:53:34.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.726" endtime="20201112 09:53:34.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.423" endtime="20201112 09:53:34.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.421" endtime="20201112 09:53:34.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:34.732" level="INFO">${RESULT} = [{'time': 0.067969722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554999999992429e-06, 'source_diff': 7.554999999992429e-06}, {'time': 0.067990722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:34.729" endtime="20201112 09:53:34.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:34.746" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:34.734" endtime="20201112 09:53:34.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.750" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:53:34.749" endtime="20201112 09:53:34.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.753" level="INFO">VALUE: [7.554999999992429e-06, 7.624999999997217e-06, 7.652999999996357e-06, 7.638999999989848e-06, 7.625000000011095e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.638000000004252e-06, 7.651999999996884e-06, 7.694000000002532e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.638000000004252e-06, 7.652999999996357e-06, 7.637999999990375e-06, 7.667000000002866e-06, 7.597000000011955e-06, 7.583999999991042e-06, 7.624999999997217e-06, 7.625000000011095e-06, 7.652999999996357e-06, 7.611000000004586e-06, 7.625000000011095e-06, 7.624999999997217e-06, 7.6109999999907085e-06, 7.638999999989848e-06, 7.611000000004586e-06, 7.624999999997217e-06, 7.625000000011095e-06, 7.639000000003726e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.638999999989848e-06, 7.6109999999907085e-06, 7.624999999997217e-06, 7.625000000011095e-06, 7.652999999996357e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.611000000004586e-06, 7.624999999997217e-06, 7.568999999998938e-06, 1.826300000000447e-05, 7.624999999997217e-06, 7.653000000010235e-06, 7.624999999997217e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201112 09:53:34.752" endtime="20201112 09:53:34.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.747" endtime="20201112 09:53:34.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.756" endtime="20201112 09:53:34.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.760" endtime="20201112 09:53:34.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.758" endtime="20201112 09:53:34.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.755" endtime="20201112 09:53:34.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.368" endtime="20201112 09:53:34.781"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:34.296" endtime="20201112 09:53:34.781" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:34.789" endtime="20201112 09:53:34.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.787" endtime="20201112 09:53:34.809"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.821" endtime="20201112 09:53:34.839"></status>
</kw>
<msg timestamp="20201112 09:53:34.839" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.820" endtime="20201112 09:53:34.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.840" endtime="20201112 09:53:34.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.845" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:34.843" endtime="20201112 09:53:34.845"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:34.817" endtime="20201112 09:53:34.846"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:34.815" endtime="20201112 09:53:34.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.814" endtime="20201112 09:53:34.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:34.850" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:34.849" endtime="20201112 09:53:34.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.847" endtime="20201112 09:53:34.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.813" endtime="20201112 09:53:34.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.812" endtime="20201112 09:53:34.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.852" endtime="20201112 09:53:34.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.811" endtime="20201112 09:53:34.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.809" endtime="20201112 09:53:34.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.786" endtime="20201112 09:53:34.855"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.864" endtime="20201112 09:53:34.963"></status>
</kw>
<msg timestamp="20201112 09:53:34.963" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.862" endtime="20201112 09:53:34.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.966" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:34.964" endtime="20201112 09:53:34.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.967" endtime="20201112 09:53:34.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.860" endtime="20201112 09:53:34.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.857" endtime="20201112 09:53:34.969"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.972" endtime="20201112 09:53:34.973"></status>
</kw>
<msg timestamp="20201112 09:53:34.974" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:34.970" endtime="20201112 09:53:34.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.978" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:34.977" endtime="20201112 09:53:34.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.980" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:34.979" endtime="20201112 09:53:34.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.974" endtime="20201112 09:53:34.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.985" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:34.983" endtime="20201112 09:53:34.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:34.987" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:34.986" endtime="20201112 09:53:34.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.981" endtime="20201112 09:53:34.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:34.994" endtime="20201112 09:53:35.287"></status>
</kw>
<msg timestamp="20201112 09:53:35.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069309181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069365667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:34.992" endtime="20201112 09:53:35.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069309181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069365667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.291" endtime="20201112 09:53:35.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.299" endtime="20201112 09:53:35.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.990" endtime="20201112 09:53:35.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.988" endtime="20201112 09:53:35.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:35.306" level="INFO">${RESULT} = [{'time': 0.069365667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.648600000000836e-05, 'source_diff': 5.648600000000836e-05}, {'time': 0.070972028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:35.303" endtime="20201112 09:53:35.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:35.319" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:35.307" endtime="20201112 09:53:35.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.324" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:53:35.323" endtime="20201112 09:53:35.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.327" level="INFO">VALUE: [5.648600000000836e-05, 5.659700000000545e-05, 5.6569999999991905e-05, 5.659700000000545e-05, 5.659700000000545e-05, 5.658299999999894e-05, 5.6555999999999274e-05, 5.659699999999157e-05, 5.655600000001315e-05, 5.658299999999894e-05, 5.658299999999894e-05, 5.659699999999157e-05, 5.659700000000545e-05, 5.658399999999841e-05, 5.658299999999894e-05, 5.658300000001282e-05, 5.658299999999894e-05, 5.659700000000545e-05, 5.658399999999841e-05, 5.657000000000578e-05, 5.658299999999894e-05, 5.658299999999894e-05, 5.656900000000631e-05, 5.658399999999841e-05, 5.657000000000578e-05, 5.658299999999894e-05, 5.661099999999808e-05, 5.661099999999808e-05, 5.658299999999894e-05, 5.658299999999894e-05, 5.659699999999157e-05, 5.656900000000631e-05, 5.658300000001282e-05, 5.658299999999894e-05, 5.654200000000664e-05, 5.658299999999894e-05, 5.659699999999157e-05, 5.661200000001143e-05, 5.661100000001196e-05, 5.658299999999894e-05, 5.658299999999894e-05, 5.655500000001368e-05, 5.663899999999722e-05, 5.658299999999894e-05, 5.656899999997855e-05, 5.661100000001196e-05, 5.658299999999894e-05, 5.661100000001196e-05, 5.658299999999894e-05, 5.659699999999157e-05]</msg>
<status status="PASS" starttime="20201112 09:53:35.325" endtime="20201112 09:53:35.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.320" endtime="20201112 09:53:35.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.330" endtime="20201112 09:53:35.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:35.333" endtime="20201112 09:53:35.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.332" endtime="20201112 09:53:35.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.328" endtime="20201112 09:53:35.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:34.855" endtime="20201112 09:53:35.354"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:34.783" endtime="20201112 09:53:35.354" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:35.362" endtime="20201112 09:53:35.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.360" endtime="20201112 09:53:35.382"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.396" endtime="20201112 09:53:35.412"></status>
</kw>
<msg timestamp="20201112 09:53:35.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.393" endtime="20201112 09:53:35.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.415" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.413" endtime="20201112 09:53:35.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.418" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:35.416" endtime="20201112 09:53:35.418"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:35.391" endtime="20201112 09:53:35.419"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:35.388" endtime="20201112 09:53:35.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.387" endtime="20201112 09:53:35.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:35.423" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:35.423" endtime="20201112 09:53:35.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.421" endtime="20201112 09:53:35.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.386" endtime="20201112 09:53:35.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.386" endtime="20201112 09:53:35.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.425" endtime="20201112 09:53:35.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.384" endtime="20201112 09:53:35.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.382" endtime="20201112 09:53:35.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.359" endtime="20201112 09:53:35.428"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.437" endtime="20201112 09:53:35.747"></status>
</kw>
<msg timestamp="20201112 09:53:35.747" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.436" endtime="20201112 09:53:35.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.750" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:35.749" endtime="20201112 09:53:35.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.751" endtime="20201112 09:53:35.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.433" endtime="20201112 09:53:35.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.431" endtime="20201112 09:53:35.754"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.756" endtime="20201112 09:53:35.757"></status>
</kw>
<msg timestamp="20201112 09:53:35.758" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:35.754" endtime="20201112 09:53:35.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.762" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:35.761" endtime="20201112 09:53:35.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.764" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:35.763" endtime="20201112 09:53:35.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.758" endtime="20201112 09:53:35.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.769" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:35.768" endtime="20201112 09:53:35.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:35.771" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:35.770" endtime="20201112 09:53:35.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.765" endtime="20201112 09:53:35.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:35.779" endtime="20201112 09:53:36.070"></status>
</kw>
<msg timestamp="20201112 09:53:36.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072972306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:35.776" endtime="20201112 09:53:36.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072972306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.074" endtime="20201112 09:53:36.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.081" endtime="20201112 09:53:36.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.774" endtime="20201112 09:53:36.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.772" endtime="20201112 09:53:36.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:36.088" level="INFO">${RESULT} = [{'time': 0.073079847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010754100000000266, 'source_diff': 0.00010754100000000266}, {'time': 0.078907444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:36.084" endtime="20201112 09:53:36.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:36.101" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:36.089" endtime="20201112 09:53:36.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.106" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:53:36.105" endtime="20201112 09:53:36.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.108" level="INFO">VALUE: [0.00010754100000000266, 0.00010705499999999479, 0.0001070690000000013, 0.00010704100000000216, 0.00010704100000000216, 0.00010702799999999513, 0.00010708300000000781, 0.00010705500000000867, 0.0001070690000000013, 0.00010701400000001637, 0.0001069730000000102, 0.00010712500000001346, 0.00010704200000000164, 0.00010704199999997388, 0.00010705499999999479, 0.00010704200000000164, 0.00010705499999999479, 0.00010705500000002255, 0.00010705499999999479, 0.00010704200000000164, 0.00010709700000000044, 0.00010705599999999427, 0.00010705499999999479, 0.00010705599999999427, 0.00010705499999999479, 0.00010708400000000728, 0.00010705599999999427, 0.00010706899999998742, 0.00010704100000000216, 0.0001070409999999744, 0.00010708300000000781, 0.00010705599999999427, 0.00010706899999995967, 0.00010704200000000164, 0.00010705599999999427, 0.00010706900000001518, 0.0001069859999999756, 0.00010700000000002374, 0.00010705600000004978, 0.00010711099999999307, 0.00010705599999999427, 0.0001070409999999744, 0.00010709700000000044, 0.00010706900000001518, 0.00010706899999995967, 0.00010704200000000164, 0.00010708400000003504, 0.00010704200000000164, 0.00010704199999994612, 0.0001070409999999744]</msg>
<status status="PASS" starttime="20201112 09:53:36.107" endtime="20201112 09:53:36.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.102" endtime="20201112 09:53:36.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.113" endtime="20201112 09:53:36.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.120" endtime="20201112 09:53:36.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.117" endtime="20201112 09:53:36.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.110" endtime="20201112 09:53:36.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:35.429" endtime="20201112 09:53:36.144"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:35.356" endtime="20201112 09:53:36.146" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.160" endtime="20201112 09:53:36.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.157" endtime="20201112 09:53:36.183"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.211" endtime="20201112 09:53:36.227"></status>
</kw>
<msg timestamp="20201112 09:53:36.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.208" endtime="20201112 09:53:36.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.228" endtime="20201112 09:53:36.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.233" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:36.231" endtime="20201112 09:53:36.233"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:36.201" endtime="20201112 09:53:36.234"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:36.196" endtime="20201112 09:53:36.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.194" endtime="20201112 09:53:36.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:36.239" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:36.238" endtime="20201112 09:53:36.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.236" endtime="20201112 09:53:36.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.192" endtime="20201112 09:53:36.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.191" endtime="20201112 09:53:36.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.241" endtime="20201112 09:53:36.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.188" endtime="20201112 09:53:36.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.184" endtime="20201112 09:53:36.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.155" endtime="20201112 09:53:36.243"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.252" endtime="20201112 09:53:36.273"></status>
</kw>
<msg timestamp="20201112 09:53:36.273" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.251" endtime="20201112 09:53:36.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.276" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.274" endtime="20201112 09:53:36.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.277" endtime="20201112 09:53:36.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.248" endtime="20201112 09:53:36.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.246" endtime="20201112 09:53:36.279"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.281" endtime="20201112 09:53:36.283"></status>
</kw>
<msg timestamp="20201112 09:53:36.283" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:36.280" endtime="20201112 09:53:36.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.288" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:36.287" endtime="20201112 09:53:36.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.290" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:36.289" endtime="20201112 09:53:36.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.284" endtime="20201112 09:53:36.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.295" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:36.294" endtime="20201112 09:53:36.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.296" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:36.296" endtime="20201112 09:53:36.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.291" endtime="20201112 09:53:36.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.307" endtime="20201112 09:53:36.593"></status>
</kw>
<msg timestamp="20201112 09:53:36.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084342792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084345097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.305" endtime="20201112 09:53:36.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084342792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084345097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:36.597" endtime="20201112 09:53:36.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.605" endtime="20201112 09:53:36.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.300" endtime="20201112 09:53:36.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.298" endtime="20201112 09:53:36.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:36.612" level="INFO">${RESULT} = [{'time': 0.084345097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3049999999941173e-06, 'source_diff': 2.3049999999941173e-06}, {'time': 0.084361611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:36.609" endtime="20201112 09:53:36.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:36.625" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:36.613" endtime="20201112 09:53:36.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.630" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:53:36.629" endtime="20201112 09:53:36.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.632" level="INFO">VALUE: [2.3049999999941173e-06, 2.319000000000626e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.319000000000626e-06, 2.277999999994451e-06, 2.2769999999949775e-06, 2.3060000000074687e-06, 2.305999999993591e-06, 2.3049999999941173e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.277999999994451e-06, 2.278000000008329e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.3060000000074687e-06, 2.305000000007995e-06, 2.2630000000023465e-06, 2.305999999993591e-06, 2.2769999999949775e-06, 2.2910000000014863e-06, 2.305999999993591e-06, 2.250000000009189e-06, 2.305999999993591e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2639999999879423e-06, 2.277999999994451e-06, 2.305999999993591e-06, 2.29200000000096e-06, 2.3049999999941173e-06, 2.360999999992397e-06, 2.3060000000074687e-06, 2.3049999999941173e-06, 2.3340000000066086e-06, 2.29200000000096e-06, 2.305000000007995e-06, 2.29200000000096e-06, 2.305999999993591e-06, 2.250000000009189e-06, 2.3060000000074687e-06, 2.277999999994451e-06, 2.29200000000096e-06, 2.278000000008329e-06, 2.2359999999888025e-06, 2.3060000000074687e-06, 2.29200000000096e-06]</msg>
<status status="PASS" starttime="20201112 09:53:36.631" endtime="20201112 09:53:36.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.626" endtime="20201112 09:53:36.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.635" endtime="20201112 09:53:36.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.639" endtime="20201112 09:53:36.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.637" endtime="20201112 09:53:36.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.634" endtime="20201112 09:53:36.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.244" endtime="20201112 09:53:36.660"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:36.149" endtime="20201112 09:53:36.660" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:36.668" endtime="20201112 09:53:36.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.666" endtime="20201112 09:53:36.688"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.701" endtime="20201112 09:53:36.718"></status>
</kw>
<msg timestamp="20201112 09:53:36.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.700" endtime="20201112 09:53:36.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.721" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.719" endtime="20201112 09:53:36.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.724" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:36.722" endtime="20201112 09:53:36.724"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:36.696" endtime="20201112 09:53:36.725"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:36.694" endtime="20201112 09:53:36.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.693" endtime="20201112 09:53:36.726"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:36.730" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:36.729" endtime="20201112 09:53:36.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.727" endtime="20201112 09:53:36.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.692" endtime="20201112 09:53:36.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.691" endtime="20201112 09:53:36.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.731" endtime="20201112 09:53:36.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.690" endtime="20201112 09:53:36.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.688" endtime="20201112 09:53:36.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.665" endtime="20201112 09:53:36.734"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.743" endtime="20201112 09:53:36.844"></status>
</kw>
<msg timestamp="20201112 09:53:36.844" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.741" endtime="20201112 09:53:36.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.847" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:36.845" endtime="20201112 09:53:36.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.848" endtime="20201112 09:53:36.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.739" endtime="20201112 09:53:36.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.736" endtime="20201112 09:53:36.850"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.852" endtime="20201112 09:53:36.854"></status>
</kw>
<msg timestamp="20201112 09:53:36.854" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:36.851" endtime="20201112 09:53:36.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.858" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:36.857" endtime="20201112 09:53:36.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.860" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:36.860" endtime="20201112 09:53:36.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.855" endtime="20201112 09:53:36.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.865" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:36.864" endtime="20201112 09:53:36.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:36.867" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:36.866" endtime="20201112 09:53:36.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.862" endtime="20201112 09:53:36.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:36.875" endtime="20201112 09:53:37.168"></status>
</kw>
<msg timestamp="20201112 09:53:37.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07033975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070356347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:36.873" endtime="20201112 09:53:37.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07033975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070356347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:37.172" endtime="20201112 09:53:37.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.180" endtime="20201112 09:53:37.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.870" endtime="20201112 09:53:37.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.868" endtime="20201112 09:53:37.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:37.187" level="INFO">${RESULT} = [{'time': 0.070356347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.65969999999932e-05, 'source_diff': 1.65969999999932e-05}, {'time': 0.071971236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:37.184" endtime="20201112 09:53:37.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:37.200" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:37.188" endtime="20201112 09:53:37.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.205" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:53:37.204" endtime="20201112 09:53:37.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.207" level="INFO">VALUE: [1.65969999999932e-05, 1.65969999999932e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.65969999999932e-05, 1.65969999999932e-05, 1.656900000000794e-05, 1.6653000000005358e-05, 1.6584000000000043e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.661099999999971e-05, 1.6598000000006552e-05, 1.6570000000007412e-05, 1.656900000000794e-05, 1.65969999999932e-05, 1.656900000000794e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.6569999999993534e-05, 1.6584000000000043e-05, 1.6639000000012727e-05, 1.6625000000006218e-05, 1.658300000000057e-05, 1.65969999999932e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.656899999999406e-05, 1.6584000000000043e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.665299999999148e-05, 1.6569999999993534e-05, 1.659700000000708e-05, 1.651400000002301e-05, 1.6598000000006552e-05, 1.661099999999971e-05, 1.6569000000021816e-05, 1.657000000002129e-05, 1.6582999999986692e-05, 1.658400000001392e-05, 1.659700000000708e-05, 1.659700000000708e-05, 1.6583000000014447e-05, 1.6583000000014447e-05, 1.6569000000021816e-05, 1.6569999999993534e-05, 1.6583000000014447e-05, 1.6652999999977602e-05]</msg>
<status status="PASS" starttime="20201112 09:53:37.206" endtime="20201112 09:53:37.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.201" endtime="20201112 09:53:37.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.211" endtime="20201112 09:53:37.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.214" endtime="20201112 09:53:37.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.213" endtime="20201112 09:53:37.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.209" endtime="20201112 09:53:37.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:36.735" endtime="20201112 09:53:37.235"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:36.662" endtime="20201112 09:53:37.235" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:37.243" endtime="20201112 09:53:37.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.241" endtime="20201112 09:53:37.263"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.276" endtime="20201112 09:53:37.292"></status>
</kw>
<msg timestamp="20201112 09:53:37.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.274" endtime="20201112 09:53:37.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.294" endtime="20201112 09:53:37.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.299" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:37.296" endtime="20201112 09:53:37.299"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:37.271" endtime="20201112 09:53:37.300"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:37.269" endtime="20201112 09:53:37.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.268" endtime="20201112 09:53:37.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:37.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:37.303" endtime="20201112 09:53:37.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.301" endtime="20201112 09:53:37.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.267" endtime="20201112 09:53:37.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.266" endtime="20201112 09:53:37.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.306" endtime="20201112 09:53:37.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.265" endtime="20201112 09:53:37.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.263" endtime="20201112 09:53:37.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.240" endtime="20201112 09:53:37.308"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.317" endtime="20201112 09:53:37.633"></status>
</kw>
<msg timestamp="20201112 09:53:37.634" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.316" endtime="20201112 09:53:37.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.639" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:37.636" endtime="20201112 09:53:37.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.642" endtime="20201112 09:53:37.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.313" endtime="20201112 09:53:37.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.311" endtime="20201112 09:53:37.647"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.651" endtime="20201112 09:53:37.654"></status>
</kw>
<msg timestamp="20201112 09:53:37.655" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:53:37.649" endtime="20201112 09:53:37.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.664" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:53:37.662" endtime="20201112 09:53:37.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.668" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:53:37.666" endtime="20201112 09:53:37.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.657" endtime="20201112 09:53:37.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.677" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:53:37.675" endtime="20201112 09:53:37.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:37.682" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:53:37.680" endtime="20201112 09:53:37.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.671" endtime="20201112 09:53:37.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:37.697" endtime="20201112 09:53:37.992"></status>
</kw>
<msg timestamp="20201112 09:53:37.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073183736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073214889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.694" endtime="20201112 09:53:37.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073183736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073214889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:37.996" endtime="20201112 09:53:38.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.004" endtime="20201112 09:53:38.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.688" endtime="20201112 09:53:38.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.685" endtime="20201112 09:53:38.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:38.011" level="INFO">${RESULT} = [{'time': 0.073214889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.115300000000598e-05, 'source_diff': 3.115300000000598e-05}, {'time': 0.079167625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:38.007" endtime="20201112 09:53:38.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:38.024" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:38.012" endtime="20201112 09:53:38.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.028" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:53:38.027" endtime="20201112 09:53:38.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.031" level="INFO">VALUE: [3.115300000000598e-05, 3.118100000000512e-05, 3.1111999999999806e-05, 3.1152999999992104e-05, 3.112500000000684e-05, 3.119499999999775e-05, 3.116599999999914e-05, 3.119399999999828e-05, 3.115300000000598e-05, 3.116699999999861e-05, 3.116699999999861e-05, 3.1124999999992964e-05, 3.116599999999914e-05, 3.124999999998268e-05, 3.119500000001163e-05, 3.1082999999987315e-05, 3.112500000002072e-05, 3.115200000000651e-05, 3.116699999999861e-05, 3.1222000000025174e-05, 3.116599999999914e-05, 3.116699999999861e-05, 3.1180999999991243e-05, 3.116599999999914e-05, 3.11939999999844e-05, 3.116599999999914e-05, 3.115200000000651e-05, 3.116599999999914e-05, 3.116699999999861e-05, 3.116699999999861e-05, 3.115300000000598e-05, 3.1179999999964014e-05, 3.113899999995784e-05, 3.1180999999991243e-05, 3.120800000000479e-05, 3.116699999999861e-05, 3.113899999995784e-05, 3.116599999997138e-05, 3.1180999999991243e-05, 3.116699999999861e-05, 3.111100000002809e-05, 3.1180999999991243e-05, 3.116699999999861e-05, 3.1180000000019525e-05, 3.116599999997138e-05, 3.1180999999991243e-05, 3.1179999999964014e-05, 3.1152000000034263e-05, 3.1195000000039386e-05, 3.116699999999861e-05]</msg>
<status status="PASS" starttime="20201112 09:53:38.030" endtime="20201112 09:53:38.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.025" endtime="20201112 09:53:38.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:38.034" endtime="20201112 09:53:38.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:38.037" endtime="20201112 09:53:38.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.036" endtime="20201112 09:53:38.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.032" endtime="20201112 09:53:38.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:37.309" endtime="20201112 09:53:38.058"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:37.237" endtime="20201112 09:53:38.059" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:09.111" endtime="20201112 09:53:38.066"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:38.132" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:38.140" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:39.330" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:38.131" endtime="20201112 09:53:39.331"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.336" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:39.333" endtime="20201112 09:53:39.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.130" endtime="20201112 09:53:39.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.342" endtime="20201112 09:53:39.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.340" endtime="20201112 09:53:39.527"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.540" endtime="20201112 09:53:39.556"></status>
</kw>
<msg timestamp="20201112 09:53:39.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'test...</msg>
<status status="PASS" starttime="20201112 09:53:39.538" endtime="20201112 09:53:39.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.559" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'test...</msg>
<status status="PASS" starttime="20201112 09:53:39.558" endtime="20201112 09:53:39.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.562" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:39.560" endtime="20201112 09:53:39.563"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:39.536" endtime="20201112 09:53:39.563"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:39.534" endtime="20201112 09:53:39.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.532" endtime="20201112 09:53:39.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:39.569" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:39.567" endtime="20201112 09:53:39.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.565" endtime="20201112 09:53:39.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.531" endtime="20201112 09:53:39.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.531" endtime="20201112 09:53:39.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.571" endtime="20201112 09:53:39.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.529" endtime="20201112 09:53:39.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.574" endtime="20201112 09:53:39.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.528" endtime="20201112 09:53:39.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:38.128" endtime="20201112 09:53:39.576"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:39.582" endtime="20201112 09:53:39.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.581" endtime="20201112 09:53:39.602"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.615" endtime="20201112 09:53:39.631"></status>
</kw>
<msg timestamp="20201112 09:53:39.631" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.613" endtime="20201112 09:53:39.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.632" endtime="20201112 09:53:39.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.637" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:39.635" endtime="20201112 09:53:39.637"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:39.611" endtime="20201112 09:53:39.638"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:39.608" endtime="20201112 09:53:39.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.607" endtime="20201112 09:53:39.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:39.643" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:39.642" endtime="20201112 09:53:39.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.639" endtime="20201112 09:53:39.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.606" endtime="20201112 09:53:39.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.606" endtime="20201112 09:53:39.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.644" endtime="20201112 09:53:39.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.604" endtime="20201112 09:53:39.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.603" endtime="20201112 09:53:39.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.579" endtime="20201112 09:53:39.647"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.658" endtime="20201112 09:53:39.673"></status>
</kw>
<msg timestamp="20201112 09:53:39.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.657" endtime="20201112 09:53:39.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:39.675" endtime="20201112 09:53:39.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.677" endtime="20201112 09:53:39.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.653" endtime="20201112 09:53:39.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.651" endtime="20201112 09:53:39.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.686" endtime="20201112 09:53:39.977"></status>
</kw>
<msg timestamp="20201112 09:53:39.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068557972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068562139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.685" endtime="20201112 09:53:39.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:39.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068557972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068562139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:39.981" endtime="20201112 09:53:39.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:39.989" endtime="20201112 09:53:39.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.682" endtime="20201112 09:53:39.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.681" endtime="20201112 09:53:39.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:39.996" level="INFO">${RESULT} = [{'time': 0.068562139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.068580083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:39.993" endtime="20201112 09:53:39.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:40.010" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:39.997" endtime="20201112 09:53:40.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.014" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:53:40.013" endtime="20201112 09:53:40.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.017" level="INFO">VALUE: [4.166999999999366e-06, 4.776999999997478e-06, 4.76400000000432e-06, 4.180999999991997e-06, 4.153000000006735e-06, 4.721999999998672e-06, 5.347000000002766e-06, 5.361999999994871e-06, 4.750000000011689e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 5.958000000000352e-06, 5.333000000010135e-06, 4.7910000000039865e-06, 4.709000000005514e-06, 5.332999999996257e-06, 4.153000000006735e-06, 4.153000000006735e-06, 4.7499999999978115e-06, 5.360999999995397e-06, 4.152999999992857e-06, 4.777999999996951e-06, 4.76400000000432e-06, 5.985999999999492e-06, 4.139000000000226e-06, 4.166999999999366e-06, 4.76400000000432e-06, 4.7499999999978115e-06, 5.958000000000352e-06, 4.153000000006735e-06, 5.361999999994871e-06, 5.958000000000352e-06, 5.347000000002766e-06, 4.735999999991303e-06, 5.9589999999998255e-06, 4.7360000000051805e-06, 5.347000000002766e-06, 5.943999999993843e-06, 5.360999999995397e-06, 5.347000000002766e-06, 4.76400000000432e-06, 5.347000000002766e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 4.76400000000432e-06, 4.166999999999366e-06, 4.7360000000051805e-06, 4.693999999999532e-06, 4.7360000000051805e-06, 5.971999999992983e-06]</msg>
<status status="PASS" starttime="20201112 09:53:40.015" endtime="20201112 09:53:40.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.011" endtime="20201112 09:53:40.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.020" endtime="20201112 09:53:40.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.024" endtime="20201112 09:53:40.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.022" endtime="20201112 09:53:40.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.019" endtime="20201112 09:53:40.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.649" endtime="20201112 09:53:40.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.649" endtime="20201112 09:53:40.044"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.053" endtime="20201112 09:53:40.069"></status>
</kw>
<msg timestamp="20201112 09:53:40.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.052" endtime="20201112 09:53:40.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.071" endtime="20201112 09:53:40.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.073" endtime="20201112 09:53:40.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.049" endtime="20201112 09:53:40.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.047" endtime="20201112 09:53:40.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.084" endtime="20201112 09:53:40.369"></status>
</kw>
<msg timestamp="20201112 09:53:40.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023249528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.082" endtime="20201112 09:53:40.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023249528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.374" endtime="20201112 09:53:40.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.382" endtime="20201112 09:53:40.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.079" endtime="20201112 09:53:40.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.077" endtime="20201112 09:53:40.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.388" level="INFO">${RESULT} = [{'time': 0.023256694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.023276556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:40.385" endtime="20201112 09:53:40.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:40.402" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:40.389" endtime="20201112 09:53:40.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.406" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:53:40.405" endtime="20201112 09:53:40.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.409" level="INFO">VALUE: [7.166000000002892e-06, 7.181000000001936e-06, 7.764000000000382e-06, 6.570000000000881e-06, 6.5980000000000205e-06, 7.167000000002366e-06, 6.554999999998368e-06, 6.584000000000451e-06, 6.556000000001311e-06, 7.165999999999423e-06, 7.236000000000742e-06, 7.208000000001602e-06, 6.637999999999783e-06, 7.138999999999757e-06, 7.777999999999952e-06, 6.569999999997411e-06, 7.153000000002796e-06, 7.167000000002366e-06, 7.763000000000908e-06, 6.500000000003031e-06, 7.167000000002366e-06, 6.555000000001837e-06, 5.945000000000256e-06, 5.971999999999922e-06, 7.1669999999988965e-06, 5.9579999999968825e-06, 7.179999999998993e-06, 7.165999999999423e-06, 7.764000000000382e-06, 6.5980000000000205e-06, 6.528000000002171e-06, 7.777999999999952e-06, 5.958000000000352e-06, 7.165999999999423e-06, 7.167000000002366e-06, 6.570000000000881e-06, 7.777999999999952e-06, 7.819999999998661e-06, 6.556000000001311e-06, 7.181000000001936e-06, 5.945000000000256e-06, 7.167000000002366e-06, 5.958000000000352e-06, 7.792000000002991e-06, 6.555000000001837e-06, 7.1529999999993266e-06, 7.764000000000382e-06, 7.2230000000006456e-06, 7.764000000000382e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201112 09:53:40.407" endtime="20201112 09:53:40.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.403" endtime="20201112 09:53:40.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.412" endtime="20201112 09:53:40.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.416" endtime="20201112 09:53:40.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.414" endtime="20201112 09:53:40.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.411" endtime="20201112 09:53:40.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.045" endtime="20201112 09:53:40.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.045" endtime="20201112 09:53:40.436"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.445" endtime="20201112 09:53:40.459"></status>
</kw>
<msg timestamp="20201112 09:53:40.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.443" endtime="20201112 09:53:40.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.461" endtime="20201112 09:53:40.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.463" endtime="20201112 09:53:40.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.441" endtime="20201112 09:53:40.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.439" endtime="20201112 09:53:40.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.473" endtime="20201112 09:53:40.758"></status>
</kw>
<msg timestamp="20201112 09:53:40.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.472" endtime="20201112 09:53:40.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.762" endtime="20201112 09:53:40.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.771" endtime="20201112 09:53:40.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.469" endtime="20201112 09:53:40.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.467" endtime="20201112 09:53:40.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:40.777" level="INFO">${RESULT} = [{'time': 0.021934514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.021956264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:40.774" endtime="20201112 09:53:40.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:40.791" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:40.778" endtime="20201112 09:53:40.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.795" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:53:40.794" endtime="20201112 09:53:40.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.798" level="INFO">VALUE: [8.971999999999453e-06, 9.583000000000508e-06, 8.375000000001437e-06, 8.375000000001437e-06, 8.292000000000022e-06, 8.985999999999023e-06, 9.583999999999981e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.375000000001437e-06, 9.597000000000078e-06, 8.374999999997967e-06, 8.360999999998397e-06, 8.971999999999453e-06, 8.958999999999356e-06, 9.638999999998787e-06, 1.0195000000001037e-05, 9.583000000000508e-06, 8.986000000002492e-06, 8.375000000001437e-06, 9.583000000000508e-06, 9.569000000000938e-06, 7.764000000000382e-06, 9.583000000000508e-06, 8.985999999999023e-06, 9.624999999999218e-06, 8.986000000002492e-06, 8.917000000000647e-06, 8.986999999998496e-06, 9.570000000000412e-06, 8.985999999999023e-06, 8.374999999997967e-06, 8.971999999999453e-06, 8.361000000001867e-06, 8.347000000002297e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.361000000001867e-06, 8.388999999997537e-06, 8.972999999998926e-06, 1.0180000000001993e-05, 9.569000000000938e-06, 9.597000000000078e-06, 8.999999999998592e-06, 1.0207999999997663e-05, 1.0195000000001037e-05, 8.374999999997967e-06, 8.971999999999453e-06]</msg>
<status status="PASS" starttime="20201112 09:53:40.796" endtime="20201112 09:53:40.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.791" endtime="20201112 09:53:40.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.801" endtime="20201112 09:53:40.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:40.805" endtime="20201112 09:53:40.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.803" endtime="20201112 09:53:40.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.800" endtime="20201112 09:53:40.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.437" endtime="20201112 09:53:40.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.437" endtime="20201112 09:53:40.825"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.834" endtime="20201112 09:53:40.849"></status>
</kw>
<msg timestamp="20201112 09:53:40.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.832" endtime="20201112 09:53:40.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:40.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:40.850" endtime="20201112 09:53:40.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.853" endtime="20201112 09:53:40.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.830" endtime="20201112 09:53:40.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.828" endtime="20201112 09:53:40.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:40.863" endtime="20201112 09:53:41.149"></status>
</kw>
<msg timestamp="20201112 09:53:41.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:40.861" endtime="20201112 09:53:41.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.153" endtime="20201112 09:53:41.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.161" endtime="20201112 09:53:41.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.859" endtime="20201112 09:53:41.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.857" endtime="20201112 09:53:41.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.168" level="INFO">${RESULT} = [{'time': 0.021697889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.021720222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:41.165" endtime="20201112 09:53:41.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:41.183" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:41.169" endtime="20201112 09:53:41.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.187" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:53:41.186" endtime="20201112 09:53:41.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.189" level="INFO">VALUE: [1.1403000000000107e-05, 1.1986000000002023e-05, 1.0805000000002618e-05, 1.0804999999999149e-05, 1.2000000000001593e-05, 1.0167000000001897e-05, 1.1375000000000968e-05, 1.2000000000001593e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.1375000000000968e-05, 1.1416000000000204e-05, 1.0791999999999052e-05, 1.0791999999999052e-05, 1.1416999999999677e-05, 1.2000000000001593e-05, 1.1429999999999774e-05, 1.0763999999999913e-05, 1.0790999999999579e-05, 1.0179999999998524e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1999999999998123e-05, 1.1389000000000538e-05, 1.0790999999999579e-05, 1.0138999999999287e-05, 1.0209000000000606e-05, 1.0818999999998719e-05, 1.0791999999999052e-05, 1.1402000000000634e-05, 1.1985999999998553e-05, 1.0791999999999052e-05, 1.0195000000001037e-05, 1.0777999999999482e-05, 1.1403000000000107e-05, 1.0777999999999482e-05, 1.0179999999998524e-05, 1.1389000000000538e-05, 1.2000000000001593e-05, 1.1403000000000107e-05, 1.2013999999997693e-05, 1.0778000000002952e-05, 1.0277999999998982e-05, 1.1416999999999677e-05, 1.0181000000001467e-05, 1.0790999999999579e-05, 1.1388999999997068e-05, 1.0791999999999052e-05, 1.0777999999999482e-05, 1.0791999999999052e-05]</msg>
<status status="PASS" starttime="20201112 09:53:41.188" endtime="20201112 09:53:41.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.183" endtime="20201112 09:53:41.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.193" endtime="20201112 09:53:41.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.197" endtime="20201112 09:53:41.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.195" endtime="20201112 09:53:41.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.191" endtime="20201112 09:53:41.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.826" endtime="20201112 09:53:41.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:40.826" endtime="20201112 09:53:41.217"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.226" endtime="20201112 09:53:41.241"></status>
</kw>
<msg timestamp="20201112 09:53:41.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.224" endtime="20201112 09:53:41.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.242" endtime="20201112 09:53:41.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.245" endtime="20201112 09:53:41.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.222" endtime="20201112 09:53:41.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.220" endtime="20201112 09:53:41.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.255" endtime="20201112 09:53:41.539"></status>
</kw>
<msg timestamp="20201112 09:53:41.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022026833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.253" endtime="20201112 09:53:41.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022026833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:41.543" endtime="20201112 09:53:41.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.551" endtime="20201112 09:53:41.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.251" endtime="20201112 09:53:41.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.249" endtime="20201112 09:53:41.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.558" level="INFO">${RESULT} = [{'time': 0.022040639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3806000000001623e-05, 'source_diff': 1.3806000000001623e-05}, {'time': 0.022060917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:41.555" endtime="20201112 09:53:41.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:41.572" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:41.559" endtime="20201112 09:53:41.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.576" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:53:41.575" endtime="20201112 09:53:41.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.578" level="INFO">VALUE: [1.3806000000001623e-05, 1.2610999999999178e-05, 1.2014000000001163e-05, 1.204099999999736e-05, 1.2596999999999609e-05, 1.3152000000002384e-05, 1.2624999999998748e-05, 1.3208000000000664e-05, 1.2569999999999942e-05, 1.2555000000000899e-05, 1.2014000000001163e-05, 1.3222000000000234e-05, 1.3847000000000859e-05, 1.2610999999999178e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.2000000000001593e-05, 1.2596999999999609e-05, 1.3208000000000664e-05, 1.2583999999999512e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.2624999999998748e-05, 1.3819999999997723e-05, 1.3736000000000304e-05, 1.2597000000003078e-05, 1.2611000000002648e-05, 1.3806000000001623e-05, 1.3805000000002149e-05, 1.2596999999999609e-05, 1.2611000000002648e-05, 1.1999999999998123e-05, 1.3806000000001623e-05, 1.2583000000000039e-05, 1.1986999999998027e-05, 1.2000000000001593e-05, 1.2611000000002648e-05, 1.2027000000001259e-05, 1.2597999999999082e-05, 1.2013999999997693e-05, 1.3263999999998943e-05, 1.3207999999997194e-05, 1.2583999999999512e-05, 1.3777999999999013e-05, 1.3847000000000859e-05, 1.3805999999998153e-05, 1.1985999999998553e-05, 1.2014000000001163e-05, 1.3749999999999873e-05, 1.2597000000003078e-05]</msg>
<status status="PASS" starttime="20201112 09:53:41.577" endtime="20201112 09:53:41.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.572" endtime="20201112 09:53:41.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.582" endtime="20201112 09:53:41.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.585" endtime="20201112 09:53:41.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.584" endtime="20201112 09:53:41.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.580" endtime="20201112 09:53:41.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.218" endtime="20201112 09:53:41.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.218" endtime="20201112 09:53:41.606"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.615" endtime="20201112 09:53:41.629"></status>
</kw>
<msg timestamp="20201112 09:53:41.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.613" endtime="20201112 09:53:41.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:41.631" endtime="20201112 09:53:41.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.633" endtime="20201112 09:53:41.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.611" endtime="20201112 09:53:41.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.609" endtime="20201112 09:53:41.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.643" endtime="20201112 09:53:41.928"></status>
</kw>
<msg timestamp="20201112 09:53:41.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:41.642" endtime="20201112 09:53:41.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:41.932" endtime="20201112 09:53:41.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.941" endtime="20201112 09:53:41.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.639" endtime="20201112 09:53:41.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.637" endtime="20201112 09:53:41.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:41.947" level="INFO">${RESULT} = [{'time': 0.021673125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.562500000000175e-05, 'source_diff': 1.562500000000175e-05}, {'time': 0.021695125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:41.944" endtime="20201112 09:53:41.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:41.961" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:41.948" endtime="20201112 09:53:41.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.965" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:53:41.964" endtime="20201112 09:53:41.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:41.968" level="INFO">VALUE: [1.562500000000175e-05, 1.566700000000046e-05, 1.6249999999998904e-05, 1.4389000000000068e-05, 1.6236999999998808e-05, 1.4415999999999735e-05, 1.5041999999999833e-05, 1.4415999999999735e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.4417000000002678e-05, 1.4403000000003108e-05, 1.4417000000002678e-05, 1.5569e-05, 1.5569999999999473e-05, 1.4430999999998778e-05, 1.5028000000000263e-05, 1.4402999999999638e-05, 1.6250000000002374e-05, 1.562500000000175e-05, 1.3806000000001623e-05, 1.4416999999999208e-05, 1.5014000000000693e-05, 1.562500000000175e-05, 1.4415999999999735e-05, 1.4402999999999638e-05, 1.563900000000132e-05, 1.4416999999999208e-05, 1.4999999999997654e-05, 1.4431000000002248e-05, 1.5028000000000263e-05, 1.434699999999789e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.4415999999999735e-05, 1.505499999999993e-05, 1.4402999999999638e-05, 1.562500000000175e-05, 1.502699999999732e-05, 1.3819000000001719e-05, 1.6222999999999238e-05, 1.4417000000002678e-05, 1.562499999999828e-05, 1.561099999999871e-05, 1.4402999999999638e-05, 1.4416000000003204e-05, 1.5069999999998973e-05, 1.4416999999999208e-05, 1.4416999999999208e-05, 1.4375000000000498e-05]</msg>
<status status="PASS" starttime="20201112 09:53:41.966" endtime="20201112 09:53:41.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.962" endtime="20201112 09:53:41.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:41.971" endtime="20201112 09:53:41.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:41.975" endtime="20201112 09:53:41.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.973" endtime="20201112 09:53:41.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.970" endtime="20201112 09:53:41.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.607" endtime="20201112 09:53:41.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.607" endtime="20201112 09:53:41.995"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.004" endtime="20201112 09:53:42.020"></status>
</kw>
<msg timestamp="20201112 09:53:42.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.003" endtime="20201112 09:53:42.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.022" endtime="20201112 09:53:42.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.024" endtime="20201112 09:53:42.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.000" endtime="20201112 09:53:42.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.998" endtime="20201112 09:53:42.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.034" endtime="20201112 09:53:42.320"></status>
</kw>
<msg timestamp="20201112 09:53:42.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.033" endtime="20201112 09:53:42.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.324" endtime="20201112 09:53:42.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.332" endtime="20201112 09:53:42.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.030" endtime="20201112 09:53:42.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.028" endtime="20201112 09:53:42.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.339" level="INFO">${RESULT} = [{'time': 0.022430861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.680499999999821e-05, 'source_diff': 1.680499999999821e-05}, {'time': 0.022462597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:42.336" endtime="20201112 09:53:42.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:42.352" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:42.340" endtime="20201112 09:53:42.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.357" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:53:42.356" endtime="20201112 09:53:42.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.359" level="INFO">VALUE: [1.680499999999821e-05, 1.6235999999999334e-05, 1.6806000000001153e-05, 1.743099999999831e-05, 1.7429999999998835e-05, 1.6834000000000293e-05, 1.743099999999831e-05, 1.743099999999831e-05, 1.744499999999788e-05, 1.6834000000000293e-05, 1.804099999999989e-05, 1.6915999999998765e-05, 1.6847999999999863e-05, 1.680500000000168e-05, 1.8042000000002834e-05, 1.681900000000125e-05, 1.6263999999998474e-05, 1.6749999999999404e-05, 1.683299999999735e-05, 1.687499999999953e-05, 1.681899999999778e-05, 1.7458000000001445e-05, 1.6235999999999334e-05, 1.6222999999999238e-05, 1.7443999999998405e-05, 1.8041999999999364e-05, 1.7429999999998835e-05, 1.7972000000001515e-05, 1.686099999999996e-05, 1.744500000000135e-05, 1.6291999999997614e-05, 1.7443999999998405e-05, 1.6834000000000293e-05, 1.683299999999735e-05, 1.684700000000039e-05, 1.7527999999999294e-05, 1.684700000000039e-05, 1.683300000000082e-05, 1.683300000000082e-05, 1.7458000000001445e-05, 1.8014000000000224e-05, 1.7457999999997975e-05, 1.6236000000002804e-05, 1.7430000000002305e-05, 1.681899999999778e-05, 1.681899999999778e-05, 1.7473000000000488e-05, 1.7429999999998835e-05, 1.684700000000039e-05, 1.683299999999735e-05]</msg>
<status status="PASS" starttime="20201112 09:53:42.358" endtime="20201112 09:53:42.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.353" endtime="20201112 09:53:42.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.363" endtime="20201112 09:53:42.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.367" endtime="20201112 09:53:42.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.365" endtime="20201112 09:53:42.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.361" endtime="20201112 09:53:42.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.996" endtime="20201112 09:53:42.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:41.996" endtime="20201112 09:53:42.387"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.396" endtime="20201112 09:53:42.411"></status>
</kw>
<msg timestamp="20201112 09:53:42.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.394" endtime="20201112 09:53:42.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.412" endtime="20201112 09:53:42.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.415" endtime="20201112 09:53:42.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.392" endtime="20201112 09:53:42.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.390" endtime="20201112 09:53:42.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.425" endtime="20201112 09:53:42.710"></status>
</kw>
<msg timestamp="20201112 09:53:42.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.423" endtime="20201112 09:53:42.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.714" endtime="20201112 09:53:42.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.723" endtime="20201112 09:53:42.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.421" endtime="20201112 09:53:42.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.419" endtime="20201112 09:53:42.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:42.729" level="INFO">${RESULT} = [{'time': 0.022051847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8027999999999794e-05, 'source_diff': 1.8027999999999794e-05}, {'time': 0.022080125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:42.726" endtime="20201112 09:53:42.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:42.743" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:42.730" endtime="20201112 09:53:42.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.748" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:53:42.747" endtime="20201112 09:53:42.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.751" level="INFO">VALUE: [1.8027999999999794e-05, 1.9263999999998005e-05, 1.984699999999992e-05, 1.861100000000171e-05, 1.863900000000085e-05, 1.9236000000002335e-05, 1.865300000000042e-05, 1.865300000000042e-05, 1.862500000000128e-05, 1.987499999999906e-05, 1.9916000000001766e-05, 1.9250000000001904e-05, 1.987499999999906e-05, 1.863900000000085e-05, 1.865300000000042e-05, 1.80690000000025e-05, 1.984699999999992e-05, 1.9306000000000184e-05, 1.7972000000001515e-05, 1.804099999999989e-05, 1.863900000000085e-05, 1.9249999999998435e-05, 1.865300000000042e-05, 1.863899999999738e-05, 1.9249999999998435e-05, 1.9848000000002863e-05, 1.9249999999998435e-05, 1.9235999999998865e-05, 1.8693999999999655e-05, 1.9250000000001904e-05, 1.9235999999998865e-05, 1.865300000000042e-05, 1.8042000000002834e-05, 1.986099999999949e-05, 1.9264000000001474e-05, 1.865300000000042e-05, 1.986099999999949e-05, 1.984699999999992e-05, 1.865300000000042e-05, 1.9277999999997575e-05, 1.859700000000214e-05, 1.865299999999695e-05, 1.9263999999998005e-05, 1.866699999999999e-05, 1.984699999999992e-05, 1.9250000000001904e-05, 1.859699999999867e-05, 1.8056000000002403e-05, 1.863900000000085e-05, 1.9235999999998865e-05]</msg>
<status status="PASS" starttime="20201112 09:53:42.749" endtime="20201112 09:53:42.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.744" endtime="20201112 09:53:42.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.754" endtime="20201112 09:53:42.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:42.758" endtime="20201112 09:53:42.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.756" endtime="20201112 09:53:42.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.753" endtime="20201112 09:53:42.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.388" endtime="20201112 09:53:42.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.388" endtime="20201112 09:53:42.778"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.787" endtime="20201112 09:53:42.801"></status>
</kw>
<msg timestamp="20201112 09:53:42.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.785" endtime="20201112 09:53:42.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:42.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:42.803" endtime="20201112 09:53:42.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.805" endtime="20201112 09:53:42.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.783" endtime="20201112 09:53:42.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.781" endtime="20201112 09:53:42.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:42.815" endtime="20201112 09:53:43.101"></status>
</kw>
<msg timestamp="20201112 09:53:43.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:42.814" endtime="20201112 09:53:43.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.105" endtime="20201112 09:53:43.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.113" endtime="20201112 09:53:43.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.811" endtime="20201112 09:53:43.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.809" endtime="20201112 09:53:43.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.121" level="INFO">${RESULT} = [{'time': 0.021779181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.048700000000306e-05, 'source_diff': 2.048700000000306e-05}, {'time': 0.021805194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:43.117" endtime="20201112 09:53:43.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:43.135" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:43.122" endtime="20201112 09:53:43.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.139" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:53:43.138" endtime="20201112 09:53:43.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.142" level="INFO">VALUE: [2.048700000000306e-05, 2.105499999999899e-05, 2.043100000000131e-05, 2.045899999999698e-05, 2.166699999999952e-05, 2.1069999999998035e-05, 2.0514000000002724e-05, 2.166699999999952e-05, 3.116699999999861e-05, 2.0458000000000975e-05, 2.166699999999952e-05, 2.108299999999813e-05, 2.1652000000000476e-05, 2.1041999999998895e-05, 2.105499999999899e-05, 2.166699999999952e-05, 2.106899999999856e-05, 2.1055999999998465e-05, 2.1027999999999325e-05, 1.983299999999688e-05, 2.1679999999999616e-05, 2.169499999999866e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.10830000000016e-05, 2.106899999999856e-05, 1.984699999999992e-05, 2.1069999999998035e-05, 2.045900000000045e-05, 2.0458000000000975e-05, 2.1070000000001504e-05, 2.044500000000088e-05, 2.0472000000000545e-05, 1.984699999999992e-05, 2.1013999999999755e-05, 2.166699999999952e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 1.983299999999688e-05, 2.045900000000045e-05, 2.1070000000001504e-05, 2.1708000000002226e-05, 2.166699999999952e-05, 2.1098000000000644e-05, 2.166700000000299e-05, 1.984699999999992e-05, 1.986099999999949e-05, 2.0472000000000545e-05, 2.166699999999952e-05, 2.166699999999952e-05]</msg>
<status status="PASS" starttime="20201112 09:53:43.140" endtime="20201112 09:53:43.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.135" endtime="20201112 09:53:43.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.145" endtime="20201112 09:53:43.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.149" endtime="20201112 09:53:43.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.147" endtime="20201112 09:53:43.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.144" endtime="20201112 09:53:43.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.779" endtime="20201112 09:53:43.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:42.779" endtime="20201112 09:53:43.169"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.178" endtime="20201112 09:53:43.193"></status>
</kw>
<msg timestamp="20201112 09:53:43.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.176" endtime="20201112 09:53:43.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.195" endtime="20201112 09:53:43.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.197" endtime="20201112 09:53:43.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.174" endtime="20201112 09:53:43.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.172" endtime="20201112 09:53:43.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.207" endtime="20201112 09:53:43.493"></status>
</kw>
<msg timestamp="20201112 09:53:43.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.206" endtime="20201112 09:53:43.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.497" endtime="20201112 09:53:43.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.505" endtime="20201112 09:53:43.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.203" endtime="20201112 09:53:43.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.202" endtime="20201112 09:53:43.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.512" level="INFO">${RESULT} = [{'time': 0.021968375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3527999999998356e-05, 'source_diff': 2.3527999999998356e-05}, {'time': 0.021998319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:43.509" endtime="20201112 09:53:43.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:43.525" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:43.513" endtime="20201112 09:53:43.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.530" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:53:43.529" endtime="20201112 09:53:43.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.532" level="INFO">VALUE: [2.3527999999998356e-05, 2.3499999999999216e-05, 2.286100000000249e-05, 2.3499999999999216e-05, 2.2278000000000575e-05, 2.3485999999999646e-05, 2.4098000000000175e-05, 2.3430000000001366e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.2292000000000145e-05, 2.22770000000011e-05, 2.288899999999816e-05, 2.4084000000000605e-05, 2.3485999999999646e-05, 2.2847999999998925e-05, 2.345899999999998e-05, 2.288899999999816e-05, 2.287499999999859e-05, 2.412499999999984e-05, 2.287500000000206e-05, 2.3472000000000076e-05, 2.288900000000163e-05, 2.233299999999938e-05, 2.2305999999999715e-05, 2.287500000000206e-05, 2.347299999999955e-05, 2.2290999999997202e-05, 2.287500000000206e-05, 2.287499999999859e-05, 2.2262999999998062e-05, 2.3444000000000936e-05, 2.2292000000000145e-05, 2.286100000000249e-05, 2.3458000000000506e-05, 2.284699999999945e-05, 2.4082999999997662e-05, 2.288900000000163e-05, 2.2249999999997966e-05, 2.29030000000012e-05, 2.2222000000002295e-05, 2.4084000000000605e-05, 2.2806000000000215e-05, 2.288900000000163e-05, 2.4042000000001895e-05, 2.3472000000000076e-05, 2.2263999999997536e-05, 2.22770000000011e-05, 2.286100000000249e-05, 2.3485999999999646e-05]</msg>
<status status="PASS" starttime="20201112 09:53:43.531" endtime="20201112 09:53:43.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.526" endtime="20201112 09:53:43.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.536" endtime="20201112 09:53:43.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.540" endtime="20201112 09:53:43.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.538" endtime="20201112 09:53:43.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.534" endtime="20201112 09:53:43.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.170" endtime="20201112 09:53:43.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.170" endtime="20201112 09:53:43.560"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.569" endtime="20201112 09:53:43.584"></status>
</kw>
<msg timestamp="20201112 09:53:43.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.567" endtime="20201112 09:53:43.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.586" endtime="20201112 09:53:43.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.588" endtime="20201112 09:53:43.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.565" endtime="20201112 09:53:43.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.563" endtime="20201112 09:53:43.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.598" endtime="20201112 09:53:43.884"></status>
</kw>
<msg timestamp="20201112 09:53:43.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02203575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:43.596" endtime="20201112 09:53:43.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02203575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:43.888" endtime="20201112 09:53:43.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.896" endtime="20201112 09:53:43.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.594" endtime="20201112 09:53:43.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.592" endtime="20201112 09:53:43.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:43.903" level="INFO">${RESULT} = [{'time': 0.02203575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.022075694, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:53:43.900" endtime="20201112 09:53:43.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:43.916" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:43.904" endtime="20201112 09:53:43.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.921" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:53:43.920" endtime="20201112 09:53:43.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.923" level="INFO">VALUE: [2.5278000000000106e-05, 2.5916000000000827e-05, 2.4084000000000605e-05, 2.5277000000000632e-05, 2.5278000000000106e-05, 2.5291999999999676e-05, 2.5304999999999772e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.5264000000000536e-05, 2.588900000000116e-05, 2.5291999999999676e-05, 2.408300000000113e-05, 2.590300000000073e-05, 2.4082999999997662e-05, 2.5888000000001687e-05, 2.590299999999726e-05, 2.5305999999999246e-05, 2.4068999999998092e-05, 2.470900000000123e-05, 2.5291000000000202e-05, 2.59170000000003e-05, 2.4694000000002186e-05, 2.59170000000003e-05, 2.4665999999999577e-05, 2.4694000000002186e-05, 2.588900000000116e-05, 2.5862000000001495e-05, 2.4707999999998287e-05, 2.59170000000003e-05, 2.4679999999999147e-05, 2.5319999999998816e-05, 2.468099999999862e-05, 2.469499999999819e-05, 2.59170000000003e-05, 2.4693999999998717e-05, 2.5304999999999772e-05, 2.4693999999998717e-05, 2.5348000000001425e-05, 2.587500000000159e-05, 2.470899999999776e-05, 2.470899999999776e-05, 2.4027999999998856e-05, 2.4694000000002186e-05, 2.4082999999997662e-05, 2.408300000000113e-05, 2.5291999999999676e-05, 2.408300000000113e-05, 2.5291999999999676e-05, 2.4070000000001035e-05]</msg>
<status status="PASS" starttime="20201112 09:53:43.922" endtime="20201112 09:53:43.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.917" endtime="20201112 09:53:43.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.927" endtime="20201112 09:53:43.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:43.930" endtime="20201112 09:53:43.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.929" endtime="20201112 09:53:43.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.925" endtime="20201112 09:53:43.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.561" endtime="20201112 09:53:43.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.561" endtime="20201112 09:53:43.951"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.960" endtime="20201112 09:53:43.975"></status>
</kw>
<msg timestamp="20201112 09:53:43.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.958" endtime="20201112 09:53:43.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:43.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:43.977" endtime="20201112 09:53:43.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.979" endtime="20201112 09:53:43.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.956" endtime="20201112 09:53:43.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.954" endtime="20201112 09:53:43.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:43.989" endtime="20201112 09:53:44.275"></status>
</kw>
<msg timestamp="20201112 09:53:44.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:43.987" endtime="20201112 09:53:44.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.279" endtime="20201112 09:53:44.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.287" endtime="20201112 09:53:44.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.985" endtime="20201112 09:53:44.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.983" endtime="20201112 09:53:44.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:44.294" level="INFO">${RESULT} = [{'time': 0.021950444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7097000000000232e-05, 'source_diff': 2.7097000000000232e-05}, {'time': 0.021990167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:44.291" endtime="20201112 09:53:44.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:44.308" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:44.295" endtime="20201112 09:53:44.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.313" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:53:44.312" endtime="20201112 09:53:44.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.315" level="INFO">VALUE: [2.7097000000000232e-05, 2.772300000000033e-05, 2.770900000000076e-05, 2.719500000000069e-05, 2.7736000000000427e-05, 2.7708000000001287e-05, 2.6486000000002646e-05, 2.590300000000073e-05, 2.6514000000001786e-05, 2.6499999999998747e-05, 2.5957999999999537e-05, 2.7124999999999372e-05, 2.6514000000001786e-05, 2.6485999999999177e-05, 2.769499999999772e-05, 2.590299999999726e-05, 2.7708000000001287e-05, 2.6485999999999177e-05, 2.588900000000116e-05, 2.590299999999726e-05, 2.7110999999999802e-05, 2.711100000000327e-05, 2.7097000000000232e-05, 2.6514000000001786e-05, 2.7693999999998248e-05, 2.5916000000000827e-05, 2.7110999999999802e-05, 2.588900000000116e-05, 2.7110999999999802e-05, 2.7722000000000857e-05, 2.6542000000000926e-05, 2.6458000000000037e-05, 2.6485999999999177e-05, 2.7707999999997818e-05, 2.770900000000076e-05, 2.7708000000001287e-05, 2.7679999999998678e-05, 2.7707999999997818e-05, 2.7124999999999372e-05, 2.7694000000001717e-05, 2.7791999999998707e-05, 2.7084000000000136e-05, 2.772300000000033e-05, 2.6528000000001356e-05, 2.6499999999998747e-05, 2.7110999999999802e-05, 2.7110999999999802e-05, 2.590300000000073e-05, 2.711100000000327e-05, 2.7069000000001092e-05]</msg>
<status status="PASS" starttime="20201112 09:53:44.314" endtime="20201112 09:53:44.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.309" endtime="20201112 09:53:44.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.319" endtime="20201112 09:53:44.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.322" endtime="20201112 09:53:44.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.321" endtime="20201112 09:53:44.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.317" endtime="20201112 09:53:44.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.952" endtime="20201112 09:53:44.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:43.952" endtime="20201112 09:53:44.343"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.352" endtime="20201112 09:53:44.368"></status>
</kw>
<msg timestamp="20201112 09:53:44.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.350" endtime="20201112 09:53:44.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.370" endtime="20201112 09:53:44.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.372" endtime="20201112 09:53:44.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.348" endtime="20201112 09:53:44.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.346" endtime="20201112 09:53:44.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.382" endtime="20201112 09:53:44.667"></status>
</kw>
<msg timestamp="20201112 09:53:44.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.380" endtime="20201112 09:53:44.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:44.671" endtime="20201112 09:53:44.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.680" endtime="20201112 09:53:44.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.378" endtime="20201112 09:53:44.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.376" endtime="20201112 09:53:44.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:44.686" level="INFO">${RESULT} = [{'time': 0.022046653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9542000000000457e-05, 'source_diff': 2.9542000000000457e-05}, {'time': 0.022080514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:44.683" endtime="20201112 09:53:44.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:44.700" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:44.687" endtime="20201112 09:53:44.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.704" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:53:44.703" endtime="20201112 09:53:44.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.707" level="INFO">VALUE: [2.9542000000000457e-05, 2.769499999999772e-05, 2.9569000000000123e-05, 2.9513000000001843e-05, 2.9514000000001317e-05, 2.9512999999998374e-05, 2.8903000000000262e-05, 2.8277999999999637e-05, 2.9542000000000457e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.8903000000000262e-05, 2.89309999999994e-05, 2.8306000000002246e-05, 2.9513000000001843e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9526999999997944e-05, 2.9540999999997514e-05, 2.8943999999999498e-05, 3.013800000000247e-05, 2.9485999999998708e-05, 2.9542000000000457e-05, 2.8916000000000358e-05, 2.8290999999999733e-05, 2.8846999999998513e-05, 2.8902999999996792e-05, 2.9527999999997417e-05, 2.8846999999998513e-05, 2.8318999999998873e-05, 2.8971999999998638e-05, 2.8332999999998443e-05, 2.8332999999998443e-05, 2.8305999999998777e-05, 2.9499999999998278e-05, 2.8306000000002246e-05, 2.8319000000002342e-05, 2.9527999999997417e-05, 2.9541000000000983e-05, 2.8916000000000358e-05, 2.9527999999997417e-05, 2.8916999999999832e-05, 2.9528000000000887e-05, 2.9527000000001413e-05, 2.9527000000001413e-05, 2.8986000000001677e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9512999999998374e-05, 2.8903000000000262e-05]</msg>
<status status="PASS" starttime="20201112 09:53:44.705" endtime="20201112 09:53:44.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.700" endtime="20201112 09:53:44.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.710" endtime="20201112 09:53:44.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:44.714" endtime="20201112 09:53:44.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.712" endtime="20201112 09:53:44.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.709" endtime="20201112 09:53:44.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.344" endtime="20201112 09:53:44.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.343" endtime="20201112 09:53:44.734"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.743" endtime="20201112 09:53:44.759"></status>
</kw>
<msg timestamp="20201112 09:53:44.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.741" endtime="20201112 09:53:44.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:44.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:44.761" endtime="20201112 09:53:44.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.763" endtime="20201112 09:53:44.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.739" endtime="20201112 09:53:44.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.737" endtime="20201112 09:53:44.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:44.773" endtime="20201112 09:53:45.058"></status>
</kw>
<msg timestamp="20201112 09:53:45.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02187625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:44.772" endtime="20201112 09:53:45.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02187625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:45.062" endtime="20201112 09:53:45.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.070" endtime="20201112 09:53:45.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.769" endtime="20201112 09:53:45.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.768" endtime="20201112 09:53:45.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.077" level="INFO">${RESULT} = [{'time': 0.021906306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0056000000000527e-05, 'source_diff': 3.0056000000000527e-05}, {'time': 0.021950042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:45.073" endtime="20201112 09:53:45.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:45.090" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:45.078" endtime="20201112 09:53:45.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.094" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:53:45.093" endtime="20201112 09:53:45.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.097" level="INFO">VALUE: [3.0056000000000527e-05, 3.070900000000029e-05, 3.073599999999996e-05, 3.138899999999972e-05, 3.0110999999999333e-05, 3.063899999999897e-05, 3.017999999999771e-05, 3.131999999999788e-05, 3.133399999999745e-05, 3.0124999999998903e-05, 3.072200000000039e-05, 3.0125000000002372e-05, 3.074999999999953e-05, 3.134700000000101e-05, 3.073599999999996e-05, 3.0194000000000748e-05, 3.073599999999996e-05, 3.190299999999979e-05, 3.0110999999999333e-05, 3.074999999999953e-05, 3.194500000000197e-05, 3.073599999999996e-05, 3.136100000000058e-05, 3.0112000000002276e-05, 3.134700000000101e-05, 3.070800000000082e-05, 3.133300000000144e-05, 3.0137999999999e-05, 3.082000000000085e-05, 3.0110999999999333e-05, 3.132000000000135e-05, 3.192999999999946e-05, 3.1346999999997543e-05, 3.073599999999996e-05, 3.19310000000024e-05, 3.1362000000000056e-05, 3.133399999999745e-05, 3.074999999999953e-05, 3.073599999999996e-05, 3.074999999999953e-05, 3.016599999999814e-05, 3.0125000000002372e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.133300000000144e-05, 3.073599999999996e-05, 3.0139000000001942e-05, 3.066700000000158e-05, 3.195900000000154e-05, 3.194500000000197e-05]</msg>
<status status="PASS" starttime="20201112 09:53:45.095" endtime="20201112 09:53:45.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.091" endtime="20201112 09:53:45.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.100" endtime="20201112 09:53:45.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.104" endtime="20201112 09:53:45.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.102" endtime="20201112 09:53:45.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.099" endtime="20201112 09:53:45.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.735" endtime="20201112 09:53:45.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:44.735" endtime="20201112 09:53:45.125"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.133" endtime="20201112 09:53:45.150"></status>
</kw>
<msg timestamp="20201112 09:53:45.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.132" endtime="20201112 09:53:45.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.151" endtime="20201112 09:53:45.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.154" endtime="20201112 09:53:45.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.129" endtime="20201112 09:53:45.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.127" endtime="20201112 09:53:45.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.165" endtime="20201112 09:53:45.450"></status>
</kw>
<msg timestamp="20201112 09:53:45.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021803556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.164" endtime="20201112 09:53:45.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021803556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.454" endtime="20201112 09:53:45.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.462" endtime="20201112 09:53:45.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.161" endtime="20201112 09:53:45.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.159" endtime="20201112 09:53:45.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.469" level="INFO">${RESULT} = [{'time': 0.021835514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.19579999999986e-05, 'source_diff': 3.19579999999986e-05}, {'time': 0.021875875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:45.466" endtime="20201112 09:53:45.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:45.482" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:45.470" endtime="20201112 09:53:45.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.487" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:53:45.486" endtime="20201112 09:53:45.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.489" level="INFO">VALUE: [3.19579999999986e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.374999999999906e-05, 3.376399999999863e-05, 3.315300000000104e-05, 3.374999999999906e-05, 3.254199999999999e-05, 3.3069000000000154e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.315300000000104e-05, 3.313900000000147e-05, 3.2541000000000514e-05, 3.255600000000303e-05, 3.37640000000021e-05, 3.376399999999863e-05, 3.31519999999981e-05, 3.315299999999757e-05, 3.322200000000289e-05, 3.254199999999999e-05, 3.188800000000075e-05, 3.251400000000085e-05, 3.195800000000207e-05, 3.200000000000078e-05, 3.376399999999863e-05, 3.188900000000022e-05, 3.194500000000197e-05, 3.2582999999999224e-05, 3.3138999999998e-05, 3.194399999999903e-05, 3.374999999999906e-05, 3.3138999999998e-05, 3.3776999999998725e-05, 3.251399999999738e-05, 3.376399999999863e-05, 3.2555000000000084e-05, 3.31519999999981e-05, 3.3096999999999294e-05, 3.193099999999893e-05, 3.37640000000021e-05, 3.3138000000002e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.255599999999956e-05, 3.2527000000000944e-05, 3.2555000000000084e-05, 3.3777000000002194e-05, 3.316600000000114e-05]</msg>
<status status="PASS" starttime="20201112 09:53:45.488" endtime="20201112 09:53:45.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.483" endtime="20201112 09:53:45.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.493" endtime="20201112 09:53:45.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.496" endtime="20201112 09:53:45.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.495" endtime="20201112 09:53:45.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.491" endtime="20201112 09:53:45.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.126" endtime="20201112 09:53:45.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.125" endtime="20201112 09:53:45.517"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.525" endtime="20201112 09:53:45.541"></status>
</kw>
<msg timestamp="20201112 09:53:45.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.524" endtime="20201112 09:53:45.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.543" endtime="20201112 09:53:45.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.545" endtime="20201112 09:53:45.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.521" endtime="20201112 09:53:45.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.519" endtime="20201112 09:53:45.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.555" endtime="20201112 09:53:45.839"></status>
</kw>
<msg timestamp="20201112 09:53:45.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.554" endtime="20201112 09:53:45.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.844" endtime="20201112 09:53:45.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.852" endtime="20201112 09:53:45.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.551" endtime="20201112 09:53:45.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.549" endtime="20201112 09:53:45.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:45.859" level="INFO">${RESULT} = [{'time': 0.021938181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.436199999999959e-05, 'source_diff': 3.436199999999959e-05}, {'time': 0.021978208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:45.855" endtime="20201112 09:53:45.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:45.873" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:45.860" endtime="20201112 09:53:45.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.877" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:53:45.876" endtime="20201112 09:53:45.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.880" level="INFO">VALUE: [3.436199999999959e-05, 3.4361000000000114e-05, 3.557000000000213e-05, 3.4374999999999684e-05, 3.490199999999985e-05, 3.4361000000000114e-05, 3.620799999999938e-05, 3.495900000000107e-05, 3.438900000000272e-05, 3.556999999999866e-05, 3.369400000000078e-05, 3.556999999999866e-05, 3.5611000000001364e-05, 3.4388999999999253e-05, 3.4347000000000544e-05, 3.555599999999909e-05, 3.4374999999999684e-05, 3.4374999999999684e-05, 3.5569000000002654e-05, 3.5569000000002654e-05, 3.49580000000016e-05, 3.4361000000000114e-05, 3.4347000000000544e-05, 3.4361000000000114e-05, 3.497300000000064e-05, 3.5541000000000045e-05, 3.495799999999813e-05, 3.4347000000000544e-05, 3.491599999999942e-05, 3.4361000000000114e-05, 3.4305000000001834e-05, 3.5582999999998755e-05, 3.55840000000017e-05, 3.616600000000067e-05, 3.4374999999999684e-05, 3.491700000000236e-05, 3.555599999999909e-05, 3.497200000000117e-05, 3.555599999999909e-05, 3.5569000000002654e-05, 3.556999999999866e-05, 3.49589999999976e-05, 3.4361000000000114e-05, 3.548600000000124e-05, 3.497200000000117e-05, 3.6167000000000143e-05, 3.555599999999909e-05, 3.495799999999813e-05, 3.495900000000107e-05, 3.618000000000024e-05]</msg>
<status status="PASS" starttime="20201112 09:53:45.878" endtime="20201112 09:53:45.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.874" endtime="20201112 09:53:45.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.884" endtime="20201112 09:53:45.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:45.887" endtime="20201112 09:53:45.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.885" endtime="20201112 09:53:45.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.882" endtime="20201112 09:53:45.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.518" endtime="20201112 09:53:45.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.517" endtime="20201112 09:53:45.908"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.916" endtime="20201112 09:53:45.934"></status>
</kw>
<msg timestamp="20201112 09:53:45.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.915" endtime="20201112 09:53:45.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:45.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:45.935" endtime="20201112 09:53:45.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.938" endtime="20201112 09:53:45.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.912" endtime="20201112 09:53:45.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.910" endtime="20201112 09:53:45.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:45.948" endtime="20201112 09:53:46.233"></status>
</kw>
<msg timestamp="20201112 09:53:46.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:45.946" endtime="20201112 09:53:46.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.237" endtime="20201112 09:53:46.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.246" endtime="20201112 09:53:46.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.944" endtime="20201112 09:53:46.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.942" endtime="20201112 09:53:46.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.252" level="INFO">${RESULT} = [{'time': 0.021873583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7374999999999214e-05, 'source_diff': 3.7374999999999214e-05}, {'time': 0.021919431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:46.249" endtime="20201112 09:53:46.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:46.266" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:46.253" endtime="20201112 09:53:46.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.270" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:53:46.269" endtime="20201112 09:53:46.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.273" level="INFO">VALUE: [3.7374999999999214e-05, 3.619499999999928e-05, 3.672199999999945e-05, 3.79720000000007e-05, 3.6167000000000143e-05, 3.676400000000163e-05, 3.730599999999737e-05, 3.799999999999984e-05, 3.7360999999999644e-05, 3.798699999999974e-05, 3.619399999999981e-05, 3.616600000000067e-05, 3.67780000000012e-05, 3.676399999999816e-05, 3.676399999999816e-05, 3.684799999999905e-05, 3.7374999999999214e-05, 3.618100000000318e-05, 3.6791000000001295e-05, 3.7374999999999214e-05, 3.798600000000027e-05, 3.8040999999999076e-05, 3.7374999999999214e-05, 3.7360999999999644e-05, 3.7374999999999214e-05, 3.619399999999981e-05, 3.679200000000077e-05, 3.619499999999928e-05, 3.625000000000156e-05, 3.798600000000027e-05, 3.676400000000163e-05, 3.7374999999999214e-05, 3.738799999999931e-05, 3.79720000000007e-05, 3.674999999999859e-05, 3.798600000000027e-05, 3.67780000000012e-05, 3.616600000000067e-05, 3.7388999999998784e-05, 3.675000000000206e-05, 3.67780000000012e-05, 3.67780000000012e-05, 3.672199999999945e-05, 3.675000000000206e-05, 3.6180999999999713e-05, 3.799999999999984e-05, 3.7388999999998784e-05, 3.679200000000077e-05, 3.799999999999984e-05, 3.7360999999999644e-05]</msg>
<status status="PASS" starttime="20201112 09:53:46.271" endtime="20201112 09:53:46.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.267" endtime="20201112 09:53:46.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.276" endtime="20201112 09:53:46.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.280" endtime="20201112 09:53:46.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.278" endtime="20201112 09:53:46.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.275" endtime="20201112 09:53:46.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.909" endtime="20201112 09:53:46.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:45.908" endtime="20201112 09:53:46.301"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.309" endtime="20201112 09:53:46.326"></status>
</kw>
<msg timestamp="20201112 09:53:46.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.308" endtime="20201112 09:53:46.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.327" endtime="20201112 09:53:46.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.330" endtime="20201112 09:53:46.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.305" endtime="20201112 09:53:46.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.303" endtime="20201112 09:53:46.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.340" endtime="20201112 09:53:46.625"></status>
</kw>
<msg timestamp="20201112 09:53:46.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.338" endtime="20201112 09:53:46.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.629" endtime="20201112 09:53:46.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.637" endtime="20201112 09:53:46.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.336" endtime="20201112 09:53:46.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.334" endtime="20201112 09:53:46.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:46.644" level="INFO">${RESULT} = [{'time': 0.022487264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8582999999998285e-05, 'source_diff': 3.8582999999998285e-05}, {'time': 0.022535319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:46.641" endtime="20201112 09:53:46.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:46.657" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:46.645" endtime="20201112 09:53:46.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.662" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:53:46.661" endtime="20201112 09:53:46.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.664" level="INFO">VALUE: [3.8582999999998285e-05, 3.919400000000281e-05, 3.980599999999987e-05, 3.97920000000003e-05, 3.856999999999819e-05, 3.919400000000281e-05, 3.9805000000000396e-05, 3.97920000000003e-05, 3.920800000000238e-05, 3.8597000000001325e-05, 3.799999999999984e-05, 3.8597000000001325e-05, 3.973599999999855e-05, 3.9791000000000826e-05, 3.856999999999819e-05, 3.8596999999997855e-05, 3.799999999999984e-05, 3.798600000000027e-05, 3.8583000000001755e-05, 3.8596999999997855e-05, 3.97920000000003e-05, 3.976399999999769e-05, 3.799999999999984e-05, 3.795799999999766e-05, 3.8583000000001755e-05, 3.917999999999977e-05, 3.8611000000000895e-05, 3.980599999999987e-05, 3.919399999999934e-05, 3.919399999999934e-05, 3.8569000000002185e-05, 3.919400000000281e-05, 3.97920000000003e-05, 3.8596999999997855e-05, 3.920799999999891e-05, 3.9790999999997356e-05, 3.858399999999776e-05, 3.8527000000000006e-05, 3.858400000000123e-05, 3.79720000000007e-05, 3.85980000000008e-05, 3.9139000000000534e-05, 3.8568999999998715e-05, 3.980599999999987e-05, 3.920800000000238e-05, 3.8583000000001755e-05, 3.8652999999999604e-05, 3.798600000000027e-05, 3.980599999999987e-05, 3.8582999999998285e-05]</msg>
<status status="PASS" starttime="20201112 09:53:46.663" endtime="20201112 09:53:46.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.658" endtime="20201112 09:53:46.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.668" endtime="20201112 09:53:46.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:46.671" endtime="20201112 09:53:46.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.670" endtime="20201112 09:53:46.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.666" endtime="20201112 09:53:46.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.301" endtime="20201112 09:53:46.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.301" endtime="20201112 09:53:46.692"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.701" endtime="20201112 09:53:46.717"></status>
</kw>
<msg timestamp="20201112 09:53:46.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.699" endtime="20201112 09:53:46.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:46.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:46.718" endtime="20201112 09:53:46.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.721" endtime="20201112 09:53:46.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.696" endtime="20201112 09:53:46.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.694" endtime="20201112 09:53:46.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:46.731" endtime="20201112 09:53:47.016"></status>
</kw>
<msg timestamp="20201112 09:53:47.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:46.729" endtime="20201112 09:53:47.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.020" endtime="20201112 09:53:47.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.028" endtime="20201112 09:53:47.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.727" endtime="20201112 09:53:47.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.725" endtime="20201112 09:53:47.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.035" level="INFO">${RESULT} = [{'time': 0.021894986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0403000000001354e-05, 'source_diff': 4.0403000000001354e-05}, {'time': 0.021951167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:47.032" endtime="20201112 09:53:47.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:47.048" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:47.036" endtime="20201112 09:53:47.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.053" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:53:47.052" endtime="20201112 09:53:47.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.055" level="INFO">VALUE: [4.0403000000001354e-05, 4.099999999999937e-05, 4.1597000000000856e-05, 4.0403000000001354e-05, 4.1597000000000856e-05, 4.1597000000000856e-05, 4.099999999999937e-05, 4.101399999999894e-05, 4.0389000000001785e-05, 4.0986999999999274e-05, 4.1611000000000425e-05, 4.220799999999844e-05, 4.099999999999937e-05, 3.9805000000000396e-05, 4.0402999999997885e-05, 4.0388999999998315e-05, 4.220800000000191e-05, 4.0402999999997885e-05, 4.1611000000000425e-05, 4.099999999999937e-05, 4.040199999999841e-05, 4.0374999999998745e-05, 4.0374999999998745e-05, 4.041599999999798e-05, 4.0416999999997455e-05, 4.040200000000188e-05, 4.0375000000002215e-05, 4.1638999999999565e-05, 4.0402999999997885e-05, 4.1596999999997386e-05, 4.099999999999937e-05, 4.16660000000027e-05, 4.0403000000001354e-05, 4.1597000000000856e-05, 4.1611000000000425e-05, 4.101399999999894e-05, 4.041599999999798e-05, 4.0388999999998315e-05, 4.101399999999894e-05, 4.1624999999999995e-05, 4.099999999999937e-05, 4.101399999999894e-05, 4.0403000000001354e-05, 4.099999999999937e-05, 4.0417000000000924e-05, 4.1012999999999467e-05, 4.1680999999998275e-05, 4.0403000000001354e-05, 4.1611000000000425e-05, 4.101399999999894e-05]</msg>
<status status="PASS" starttime="20201112 09:53:47.054" endtime="20201112 09:53:47.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.049" endtime="20201112 09:53:47.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.059" endtime="20201112 09:53:47.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.062" endtime="20201112 09:53:47.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.061" endtime="20201112 09:53:47.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.057" endtime="20201112 09:53:47.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.693" endtime="20201112 09:53:47.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.692" endtime="20201112 09:53:47.083"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.092" endtime="20201112 09:53:47.109"></status>
</kw>
<msg timestamp="20201112 09:53:47.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.090" endtime="20201112 09:53:47.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.110" endtime="20201112 09:53:47.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.113" endtime="20201112 09:53:47.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.088" endtime="20201112 09:53:47.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.086" endtime="20201112 09:53:47.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.123" endtime="20201112 09:53:47.407"></status>
</kw>
<msg timestamp="20201112 09:53:47.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.121" endtime="20201112 09:53:47.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.412" endtime="20201112 09:53:47.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.420" endtime="20201112 09:53:47.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.118" endtime="20201112 09:53:47.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.117" endtime="20201112 09:53:47.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.426" level="INFO">${RESULT} = [{'time': 0.022004806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2222999999997485e-05, 'source_diff': 4.2222999999997485e-05}, {'time': 0.022058681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:47.423" endtime="20201112 09:53:47.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:47.441" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:47.427" endtime="20201112 09:53:47.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.445" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:53:47.444" endtime="20201112 09:53:47.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.448" level="INFO">VALUE: [4.2222999999997485e-05, 4.2209000000001384e-05, 4.343000000000055e-05, 4.401399999999847e-05, 4.3431000000000025e-05, 4.280600000000287e-05, 4.2818999999999496e-05, 4.34999999999984e-05, 4.2860999999998206e-05, 4.219400000000234e-05, 4.3416999999996986e-05, 4.341599999999751e-05, 4.409799999999936e-05, 4.216599999999973e-05, 4.281999999999897e-05, 4.222199999999801e-05, 4.343000000000055e-05, 4.2804999999999926e-05, 4.279099999999689e-05, 4.39999999999989e-05, 4.3360999999998706e-05, 4.276400000000069e-05, 4.274999999999765e-05, 4.282000000000244e-05, 4.282000000000244e-05, 4.3417000000000455e-05, 4.222200000000148e-05, 4.344400000000012e-05, 4.2832999999999066e-05, 4.226400000000019e-05, 4.3431000000000025e-05, 4.2208999999997915e-05, 4.402799999999804e-05, 4.219400000000234e-05, 4.402799999999804e-05, 4.2195000000001814e-05, 4.2223000000000954e-05, 4.2209000000001384e-05, 4.2818999999999496e-05, 4.3431000000000025e-05, 4.2180999999998775e-05, 4.3417000000000455e-05, 4.222200000000148e-05, 4.3417000000000455e-05, 4.341600000000098e-05, 4.222199999999801e-05, 4.281999999999897e-05, 4.283400000000201e-05, 4.2832999999999066e-05, 4.2208999999997915e-05]</msg>
<status status="PASS" starttime="20201112 09:53:47.446" endtime="20201112 09:53:47.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.442" endtime="20201112 09:53:47.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.451" endtime="20201112 09:53:47.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.455" endtime="20201112 09:53:47.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.453" endtime="20201112 09:53:47.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.450" endtime="20201112 09:53:47.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.084" endtime="20201112 09:53:47.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.084" endtime="20201112 09:53:47.475"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.484" endtime="20201112 09:53:47.500"></status>
</kw>
<msg timestamp="20201112 09:53:47.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.482" endtime="20201112 09:53:47.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.502" endtime="20201112 09:53:47.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.504" endtime="20201112 09:53:47.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.480" endtime="20201112 09:53:47.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.478" endtime="20201112 09:53:47.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.514" endtime="20201112 09:53:47.800"></status>
</kw>
<msg timestamp="20201112 09:53:47.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022284222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.513" endtime="20201112 09:53:47.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022284222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.804" endtime="20201112 09:53:47.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.812" endtime="20201112 09:53:47.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.510" endtime="20201112 09:53:47.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.508" endtime="20201112 09:53:47.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:47.819" level="INFO">${RESULT} = [{'time': 0.022284222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4624999999999526e-05, 'source_diff': 4.4624999999999526e-05}, {'time': 0.022333917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:47.816" endtime="20201112 09:53:47.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:47.832" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:47.820" endtime="20201112 09:53:47.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.837" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:53:47.836" endtime="20201112 09:53:47.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.839" level="INFO">VALUE: [4.4624999999999526e-05, 4.402799999999804e-05, 4.58329999999986e-05, 4.4638999999999096e-05, 4.581899999999903e-05, 4.5166999999998736e-05, 4.401300000000247e-05, 4.5875000000000776e-05, 4.520800000000144e-05, 4.522200000000101e-05, 4.4638999999999096e-05, 4.525000000000015e-05, 4.401399999999847e-05, 4.402800000000151e-05, 4.3987000000002274e-05, 4.517999999999883e-05, 4.4625000000002996e-05, 4.5237000000000055e-05, 4.4653000000002135e-05, 4.581899999999903e-05, 4.402800000000151e-05, 4.5847000000001636e-05, 4.58329999999986e-05, 4.522200000000101e-05, 4.4638999999999096e-05, 4.4639000000002566e-05, 4.522200000000101e-05, 4.401399999999847e-05, 4.525000000000015e-05, 4.5195000000001345e-05, 4.397200000000323e-05, 4.584800000000111e-05, 4.523600000000058e-05, 4.58199999999985e-05, 4.4681000000001275e-05, 4.523600000000058e-05, 4.5223000000000485e-05, 4.4624999999999526e-05, 4.402799999999804e-05, 4.4638999999999096e-05, 4.402700000000204e-05, 4.4625000000002996e-05, 4.4652999999998666e-05, 4.526399999999972e-05, 4.523600000000058e-05, 4.4624999999999526e-05, 4.4583000000000816e-05, 4.58329999999986e-05, 4.581899999999903e-05, 4.4610999999999956e-05]</msg>
<status status="PASS" starttime="20201112 09:53:47.838" endtime="20201112 09:53:47.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.833" endtime="20201112 09:53:47.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.843" endtime="20201112 09:53:47.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:47.846" endtime="20201112 09:53:47.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.845" endtime="20201112 09:53:47.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.841" endtime="20201112 09:53:47.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.476" endtime="20201112 09:53:47.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.476" endtime="20201112 09:53:47.867"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.876" endtime="20201112 09:53:47.892"></status>
</kw>
<msg timestamp="20201112 09:53:47.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.874" endtime="20201112 09:53:47.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:47.894" endtime="20201112 09:53:47.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.896" endtime="20201112 09:53:47.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.872" endtime="20201112 09:53:47.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.870" endtime="20201112 09:53:47.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:47.906" endtime="20201112 09:53:48.192"></status>
</kw>
<msg timestamp="20201112 09:53:48.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:47.905" endtime="20201112 09:53:48.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.196" endtime="20201112 09:53:48.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.205" endtime="20201112 09:53:48.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.902" endtime="20201112 09:53:48.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.900" endtime="20201112 09:53:48.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:48.213" level="INFO">${RESULT} = [{'time': 0.021815681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6416999999999986e-05, 'source_diff': 4.6416999999999986e-05}, {'time': 0.021875722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:48.209" endtime="20201112 09:53:48.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:48.227" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:48.214" endtime="20201112 09:53:48.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.232" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:53:48.231" endtime="20201112 09:53:48.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.234" level="INFO">VALUE: [4.6416999999999986e-05, 4.705500000000071e-05, 4.583400000000154e-05, 4.699999999999843e-05, 4.704200000000061e-05, 4.822200000000054e-05, 4.6431000000003025e-05, 4.7639000000002096e-05, 4.643000000000008e-05, 4.706900000000028e-05, 4.644399999999965e-05, 4.644399999999965e-05, 4.6445000000002595e-05, 4.6444999999999126e-05, 4.7653000000001666e-05, 4.76529999999982e-05, 4.644399999999965e-05, 4.705500000000071e-05, 4.826399999999925e-05, 4.7111000000002456e-05, 4.644400000000312e-05, 4.645799999999922e-05, 4.827699999999935e-05, 4.709699999999942e-05, 4.705600000000018e-05, 4.76529999999982e-05, 4.7639000000002096e-05, 4.704100000000114e-05, 4.712499999999856e-05, 4.645800000000269e-05, 4.644399999999965e-05, 4.6431000000003025e-05, 4.6403000000000416e-05, 4.704200000000061e-05, 4.7681000000000806e-05, 4.705500000000071e-05, 4.698599999999886e-05, 4.763899999999863e-05, 4.765199999999872e-05, 4.58329999999986e-05, 4.7667000000001236e-05, 4.8223000000000016e-05, 4.704100000000114e-05, 4.762499999999906e-05, 4.65000000000014e-05, 4.6430999999999556e-05, 4.706900000000028e-05, 4.824999999999968e-05, 4.772200000000004e-05, 4.6445000000002595e-05]</msg>
<status status="PASS" starttime="20201112 09:53:48.233" endtime="20201112 09:53:48.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.228" endtime="20201112 09:53:48.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.238" endtime="20201112 09:53:48.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.242" endtime="20201112 09:53:48.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.240" endtime="20201112 09:53:48.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.236" endtime="20201112 09:53:48.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.868" endtime="20201112 09:53:48.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:47.867" endtime="20201112 09:53:48.262"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.271" endtime="20201112 09:53:48.288"></status>
</kw>
<msg timestamp="20201112 09:53:48.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.269" endtime="20201112 09:53:48.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.289" endtime="20201112 09:53:48.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.292" endtime="20201112 09:53:48.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.267" endtime="20201112 09:53:48.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.265" endtime="20201112 09:53:48.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.302" endtime="20201112 09:53:48.588"></status>
</kw>
<msg timestamp="20201112 09:53:48.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.300" endtime="20201112 09:53:48.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.592" endtime="20201112 09:53:48.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.600" endtime="20201112 09:53:48.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.298" endtime="20201112 09:53:48.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.296" endtime="20201112 09:53:48.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:48.607" level="INFO">${RESULT} = [{'time': 0.022110264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.950000000000093e-05, 'source_diff': 4.950000000000093e-05}, {'time': 0.02217425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:53:48.604" endtime="20201112 09:53:48.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:48.620" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:48.608" endtime="20201112 09:53:48.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.625" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:53:48.624" endtime="20201112 09:53:48.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.628" level="INFO">VALUE: [4.950000000000093e-05, 4.884700000000117e-05, 4.886100000000074e-05, 4.890299999999945e-05, 4.826299999999978e-05, 4.887500000000031e-05, 4.947199999999832e-05, 5.004100000000067e-05, 4.947200000000179e-05, 4.826399999999925e-05, 4.947200000000179e-05, 4.945800000000222e-05, 4.884700000000117e-05, 4.824999999999968e-05, 4.819399999999793e-05, 4.947200000000179e-05, 4.818000000000183e-05, 5.006899999999981e-05, 5.004100000000067e-05, 4.824999999999968e-05, 4.886099999999727e-05, 4.947199999999832e-05, 4.827800000000229e-05, 4.886100000000074e-05, 4.881999999999803e-05, 4.8887999999996934e-05, 4.824999999999968e-05, 4.886100000000074e-05, 4.826400000000272e-05, 4.816699999999827e-05, 4.88200000000015e-05, 4.824999999999968e-05, 4.945800000000222e-05, 4.824999999999968e-05, 4.824999999999968e-05, 4.886099999999727e-05, 5.009699999999895e-05, 4.88469999999977e-05, 4.881999999999803e-05, 4.944399999999918e-05, 4.945799999999875e-05, 4.945799999999875e-05, 4.886100000000074e-05, 4.826299999999978e-05, 4.826399999999925e-05, 4.886099999999727e-05, 4.824999999999968e-05, 4.88330000000016e-05, 4.9458999999998227e-05, 4.887500000000031e-05]</msg>
<status status="PASS" starttime="20201112 09:53:48.626" endtime="20201112 09:53:48.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.621" endtime="20201112 09:53:48.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.632" endtime="20201112 09:53:48.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.635" endtime="20201112 09:53:48.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.634" endtime="20201112 09:53:48.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.630" endtime="20201112 09:53:48.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.263" endtime="20201112 09:53:48.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.263" endtime="20201112 09:53:48.656"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.665" endtime="20201112 09:53:48.682"></status>
</kw>
<msg timestamp="20201112 09:53:48.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.664" endtime="20201112 09:53:48.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:48.684" endtime="20201112 09:53:48.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.686" endtime="20201112 09:53:48.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.661" endtime="20201112 09:53:48.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.659" endtime="20201112 09:53:48.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.696" endtime="20201112 09:53:48.982"></status>
</kw>
<msg timestamp="20201112 09:53:48.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.695" endtime="20201112 09:53:48.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:48.986" endtime="20201112 09:53:48.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:48.994" endtime="20201112 09:53:48.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.692" endtime="20201112 09:53:48.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.690" endtime="20201112 09:53:48.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:49.001" level="INFO">${RESULT} = [{'time': 0.022509722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0665999999997824e-05, 'source_diff': 5.0665999999997824e-05}, {'time': 0.022565611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:48.998" endtime="20201112 09:53:49.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:49.016" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:49.002" endtime="20201112 09:53:49.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.020" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:53:49.019" endtime="20201112 09:53:49.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.023" level="INFO">VALUE: [5.0665999999997824e-05, 5.069400000000043e-05, 5.123599999999964e-05, 5.187499999999984e-05, 5.068000000000086e-05, 5.186100000000027e-05, 5.127800000000182e-05, 5.061099999999902e-05, 5.186100000000027e-05, 5.004200000000014e-05, 5.125000000000268e-05, 5.186100000000027e-05, 5.005500000000024e-05, 5.006999999999928e-05, 5.126400000000225e-05, 5.191699999999855e-05, 5.068000000000086e-05, 5.069400000000043e-05, 5.124999999999921e-05, 5.005599999999971e-05, 5.126400000000225e-05, 5.06530000000012e-05, 5.006899999999981e-05, 5.126399999999878e-05, 5.069499999999991e-05, 5.009799999999842e-05, 5.129100000000192e-05, 5.066700000000077e-05, 5.066700000000077e-05, 5.186199999999974e-05, 5.011100000000199e-05, 5.188899999999941e-05, 5.006899999999981e-05, 5.066700000000077e-05, 5.187499999999984e-05, 5.065299999999773e-05, 5.06669999999973e-05, 5.188899999999941e-05, 5.188899999999941e-05, 5.005500000000024e-05, 5.063899999999816e-05, 5.129200000000139e-05, 5.0651999999998254e-05, 5.06669999999973e-05, 5.008400000000232e-05, 5.066700000000077e-05, 5.125000000000268e-05, 5.005599999999971e-05, 5.187499999999984e-05, 5.186100000000027e-05]</msg>
<status status="PASS" starttime="20201112 09:53:49.021" endtime="20201112 09:53:49.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.017" endtime="20201112 09:53:49.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.026" endtime="20201112 09:53:49.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.030" endtime="20201112 09:53:49.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.028" endtime="20201112 09:53:49.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.025" endtime="20201112 09:53:49.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.657" endtime="20201112 09:53:49.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.657" endtime="20201112 09:53:49.050"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.059" endtime="20201112 09:53:49.076"></status>
</kw>
<msg timestamp="20201112 09:53:49.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.057" endtime="20201112 09:53:49.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.077" endtime="20201112 09:53:49.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.080" endtime="20201112 09:53:49.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.055" endtime="20201112 09:53:49.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.053" endtime="20201112 09:53:49.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.090" endtime="20201112 09:53:49.376"></status>
</kw>
<msg timestamp="20201112 09:53:49.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.088" endtime="20201112 09:53:49.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.380" endtime="20201112 09:53:49.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.388" endtime="20201112 09:53:49.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.085" endtime="20201112 09:53:49.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.084" endtime="20201112 09:53:49.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:49.395" level="INFO">${RESULT} = [{'time': 0.022344125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3693999999999964e-05, 'source_diff': 5.3693999999999964e-05}, {'time': 0.022405889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:49.392" endtime="20201112 09:53:49.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:49.408" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:49.396" endtime="20201112 09:53:49.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.413" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:53:49.412" endtime="20201112 09:53:49.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.415" level="INFO">VALUE: [5.3693999999999964e-05, 5.311099999999805e-05, 5.308299999999891e-05, 5.309799999999795e-05, 5.250000000000046e-05, 5.369500000000291e-05, 5.306900000000281e-05, 5.30280000000001e-05, 5.186100000000027e-05, 5.24730000000008e-05, 5.3707999999999534e-05, 5.248600000000089e-05, 5.2485999999997424e-05, 5.3693999999999964e-05, 5.308299999999891e-05, 5.305600000000271e-05, 5.370899999999901e-05, 5.2485999999997424e-05, 5.248600000000089e-05, 5.2499999999996994e-05, 5.3693999999999964e-05, 5.30280000000001e-05, 5.309799999999795e-05, 5.248600000000089e-05, 5.3680000000000394e-05, 5.3693999999999964e-05, 5.188900000000288e-05, 5.2443999999998714e-05, 5.188899999999941e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3680000000000394e-05, 5.309700000000195e-05, 5.251400000000003e-05, 5.2471999999997854e-05, 5.306899999999934e-05, 5.24730000000008e-05, 5.306999999999881e-05, 5.369500000000291e-05, 5.308299999999891e-05, 5.244400000000218e-05, 5.245800000000175e-05, 5.311099999999805e-05, 5.188899999999941e-05, 5.369499999999944e-05, 5.308299999999891e-05, 5.306999999999881e-05, 5.309700000000195e-05, 5.251400000000003e-05, 5.311099999999805e-05]</msg>
<status status="PASS" starttime="20201112 09:53:49.414" endtime="20201112 09:53:49.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.409" endtime="20201112 09:53:49.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.419" endtime="20201112 09:53:49.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.422" endtime="20201112 09:53:49.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.421" endtime="20201112 09:53:49.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.417" endtime="20201112 09:53:49.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.051" endtime="20201112 09:53:49.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.051" endtime="20201112 09:53:49.443"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.452" endtime="20201112 09:53:49.469"></status>
</kw>
<msg timestamp="20201112 09:53:49.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.450" endtime="20201112 09:53:49.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.471" endtime="20201112 09:53:49.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.473" endtime="20201112 09:53:49.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.447" endtime="20201112 09:53:49.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.445" endtime="20201112 09:53:49.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.483" endtime="20201112 09:53:49.768"></status>
</kw>
<msg timestamp="20201112 09:53:49.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.482" endtime="20201112 09:53:49.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.773" endtime="20201112 09:53:49.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.781" endtime="20201112 09:53:49.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.479" endtime="20201112 09:53:49.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.477" endtime="20201112 09:53:49.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:49.788" level="INFO">${RESULT} = [{'time': 0.021763111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.488900000000241e-05, 'source_diff': 5.488900000000241e-05}, {'time': 0.021830917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:49.784" endtime="20201112 09:53:49.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:49.801" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:49.788" endtime="20201112 09:53:49.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.805" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:53:49.804" endtime="20201112 09:53:49.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.808" level="INFO">VALUE: [5.488900000000241e-05, 5.4291999999997453e-05, 5.4235999999999174e-05, 5.5513999999999564e-05, 5.490300000000198e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.4943999999997745e-05, 5.551400000000303e-05, 5.491700000000155e-05, 5.4888000000002934e-05, 5.5499999999999994e-05, 5.615299999999976e-05, 5.430600000000049e-05, 5.490299999999851e-05, 5.5541999999998704e-05, 5.488900000000241e-05, 5.5499999999999994e-05, 5.5485999999996954e-05, 5.427800000000135e-05, 5.430600000000049e-05, 5.4291999999997453e-05, 5.611100000000105e-05, 5.5472000000000854e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.551300000000009e-05, 5.4888000000002934e-05, 5.5486000000000424e-05, 5.488899999999894e-05, 5.5499999999999994e-05, 5.484700000000023e-05, 5.5513999999999564e-05, 5.432000000000006e-05, 5.488899999999894e-05, 5.429100000000145e-05, 5.427800000000135e-05, 5.430600000000049e-05, 5.4263999999998314e-05, 5.429100000000145e-05, 5.5513999999999564e-05, 5.430499999999755e-05, 5.4943999999997745e-05, 5.4972000000000354e-05, 5.490299999999851e-05, 5.5499999999999994e-05, 5.430500000000102e-05, 5.5527999999999134e-05, 5.429200000000092e-05, 5.5499999999999994e-05]</msg>
<status status="PASS" starttime="20201112 09:53:49.806" endtime="20201112 09:53:49.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.802" endtime="20201112 09:53:49.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.811" endtime="20201112 09:53:49.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.815" endtime="20201112 09:53:49.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.813" endtime="20201112 09:53:49.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.810" endtime="20201112 09:53:49.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.444" endtime="20201112 09:53:49.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.443" endtime="20201112 09:53:49.836"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.844" endtime="20201112 09:53:49.861"></status>
</kw>
<msg timestamp="20201112 09:53:49.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.843" endtime="20201112 09:53:49.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.863" endtime="20201112 09:53:49.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.865" endtime="20201112 09:53:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.840" endtime="20201112 09:53:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.838" endtime="20201112 09:53:49.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.875" endtime="20201112 09:53:50.160"></status>
</kw>
<msg timestamp="20201112 09:53:50.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:49.874" endtime="20201112 09:53:50.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.164" endtime="20201112 09:53:50.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.172" endtime="20201112 09:53:50.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.871" endtime="20201112 09:53:50.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.869" endtime="20201112 09:53:50.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:50.179" level="INFO">${RESULT} = [{'time': 0.021850792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611100000000105e-05, 'source_diff': 5.611100000000105e-05}, {'time': 0.021912833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:50.175" endtime="20201112 09:53:50.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:50.192" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:50.180" endtime="20201112 09:53:50.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.196" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:53:50.195" endtime="20201112 09:53:50.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.199" level="INFO">VALUE: [5.611100000000105e-05, 5.6652000000000785e-05, 5.6707999999999065e-05, 5.609699999999801e-05, 5.612499999999715e-05, 5.793100000000065e-05, 5.790299999999804e-05, 5.6707999999999065e-05, 5.791700000000108e-05, 5.7306000000000024e-05, 5.663900000000069e-05, 5.6722000000002104e-05, 5.731900000000012e-05, 5.612500000000062e-05, 5.731900000000012e-05, 5.6707999999999065e-05, 5.732000000000306e-05, 5.612500000000062e-05, 5.7235999999998705e-05, 5.791699999999761e-05, 5.791699999999761e-05, 5.611099999999758e-05, 5.612500000000062e-05, 5.6707999999999065e-05, 5.732000000000306e-05, 5.6722000000002104e-05, 5.606999999999834e-05, 5.609699999999801e-05, 5.677700000000091e-05, 5.7306000000000024e-05, 5.7319999999999593e-05, 5.731900000000012e-05, 5.733299999999969e-05, 5.7319999999999593e-05, 5.6721999999998635e-05, 5.663900000000069e-05, 5.7278000000000884e-05, 5.6736000000001674e-05, 5.670900000000201e-05, 5.611100000000105e-05, 5.672300000000158e-05, 5.731900000000012e-05, 5.6722000000002104e-05, 5.611100000000105e-05, 5.734699999999926e-05, 5.611100000000105e-05, 5.733299999999969e-05, 5.6679999999999925e-05, 5.73480000000022e-05, 5.730500000000055e-05]</msg>
<status status="PASS" starttime="20201112 09:53:50.198" endtime="20201112 09:53:50.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.193" endtime="20201112 09:53:50.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.203" endtime="20201112 09:53:50.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.206" endtime="20201112 09:53:50.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.204" endtime="20201112 09:53:50.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.201" endtime="20201112 09:53:50.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.837" endtime="20201112 09:53:50.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.836" endtime="20201112 09:53:50.227"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.236" endtime="20201112 09:53:50.254"></status>
</kw>
<msg timestamp="20201112 09:53:50.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.235" endtime="20201112 09:53:50.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.256" endtime="20201112 09:53:50.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.258" endtime="20201112 09:53:50.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.232" endtime="20201112 09:53:50.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.230" endtime="20201112 09:53:50.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.268" endtime="20201112 09:53:50.553"></status>
</kw>
<msg timestamp="20201112 09:53:50.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023518944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.267" endtime="20201112 09:53:50.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023518944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.558" endtime="20201112 09:53:50.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.566" endtime="20201112 09:53:50.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.264" endtime="20201112 09:53:50.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.262" endtime="20201112 09:53:50.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:50.573" level="INFO">${RESULT} = [{'time': 0.023578069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.912500000000015e-05, 'source_diff': 5.912500000000015e-05}, {'time': 0.023642431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:50.569" endtime="20201112 09:53:50.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:50.587" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:50.574" endtime="20201112 09:53:50.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.592" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:53:50.591" endtime="20201112 09:53:50.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.594" level="INFO">VALUE: [5.912500000000015e-05, 5.845899999999682e-05, 5.913899999999972e-05, 5.9722000000001635e-05, 5.854099999999876e-05, 5.911099999999711e-05, 5.9151999999999816e-05, 5.8527999999998664e-05, 5.8528000000002134e-05, 5.8527999999998664e-05, 5.8541999999998234e-05, 5.9749999999997305e-05, 5.9764000000000345e-05, 5.852699999999919e-05, 5.8541999999998234e-05, 5.9736000000001205e-05, 5.9721999999998165e-05, 5.977700000000044e-05, 5.913899999999972e-05, 5.8458000000000815e-05, 5.9736000000001205e-05, 5.9750000000000775e-05, 5.852699999999919e-05, 5.912500000000015e-05, 5.8485999999999955e-05, 5.8597999999999983e-05, 5.9750000000000775e-05, 5.793100000000065e-05, 5.790300000000151e-05, 5.7915999999998136e-05, 5.8527999999998664e-05, 5.913899999999972e-05, 5.8541999999998234e-05, 5.912500000000015e-05, 5.9750000000000775e-05, 5.9736000000001205e-05, 5.9736000000001205e-05, 5.9165999999999386e-05, 5.9736000000001205e-05, 5.912500000000015e-05, 5.8542000000001704e-05, 5.913899999999972e-05, 5.7915999999998136e-05, 5.913899999999972e-05, 5.911100000000058e-05, 5.9736000000001205e-05, 5.8514000000002564e-05, 5.9722000000001635e-05, 5.913899999999972e-05, 5.8528000000002134e-05]</msg>
<status status="PASS" starttime="20201112 09:53:50.593" endtime="20201112 09:53:50.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.588" endtime="20201112 09:53:50.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.598" endtime="20201112 09:53:50.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.601" endtime="20201112 09:53:50.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.599" endtime="20201112 09:53:50.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.596" endtime="20201112 09:53:50.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.228" endtime="20201112 09:53:50.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.227" endtime="20201112 09:53:50.622"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.630" endtime="20201112 09:53:50.648"></status>
</kw>
<msg timestamp="20201112 09:53:50.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.629" endtime="20201112 09:53:50.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:50.649" endtime="20201112 09:53:50.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.652" endtime="20201112 09:53:50.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.626" endtime="20201112 09:53:50.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.624" endtime="20201112 09:53:50.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.662" endtime="20201112 09:53:50.946"></status>
</kw>
<msg timestamp="20201112 09:53:50.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.660" endtime="20201112 09:53:50.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:50.950" endtime="20201112 09:53:50.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.959" endtime="20201112 09:53:50.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.657" endtime="20201112 09:53:50.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.656" endtime="20201112 09:53:50.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:50.965" level="INFO">${RESULT} = [{'time': 0.021834181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.094499999999975e-05, 'source_diff': 6.094499999999975e-05}, {'time': 0.0219025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:50.962" endtime="20201112 09:53:50.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:50.979" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:50.966" endtime="20201112 09:53:50.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.983" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:53:50.982" endtime="20201112 09:53:50.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:50.986" level="INFO">VALUE: [6.094499999999975e-05, 6.031899999999965e-05, 6.0944000000000276e-05, 6.095899999999932e-05, 6.15690000000009e-05, 6.154200000000123e-05, 6.154099999999829e-05, 6.155500000000133e-05, 6.154100000000176e-05, 6.034700000000226e-05, 6.029100000000051e-05, 6.0334000000002164e-05, 6.034699999999879e-05, 6.15279999999982e-05, 6.0944000000000276e-05, 6.215199999999935e-05, 6.155500000000133e-05, 5.9750000000000775e-05, 6.0957999999999846e-05, 6.036100000000183e-05, 6.154200000000123e-05, 6.0334000000002164e-05, 6.041700000000011e-05, 6.037499999999793e-05, 6.0348000000001734e-05, 6.15560000000008e-05, 6.0944000000000276e-05, 6.0930000000000706e-05, 6.161099999999961e-05, 6.155500000000133e-05, 6.0333999999998694e-05, 6.216700000000186e-05, 6.15560000000008e-05, 6.031899999999965e-05, 6.154099999999829e-05, 6.219400000000153e-05, 6.034699999999879e-05, 6.031899999999965e-05, 6.0319999999999124e-05, 6.093100000000018e-05, 6.0944000000000276e-05, 6.034700000000226e-05, 6.033299999999922e-05, 6.159700000000004e-05, 5.9722000000001635e-05, 6.148700000000243e-05, 6.15690000000009e-05, 6.215199999999935e-05, 6.030500000000008e-05, 6.0944000000000276e-05]</msg>
<status status="PASS" starttime="20201112 09:53:50.984" endtime="20201112 09:53:50.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.980" endtime="20201112 09:53:50.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:50.989" endtime="20201112 09:53:50.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:50.993" endtime="20201112 09:53:51.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.991" endtime="20201112 09:53:51.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.988" endtime="20201112 09:53:51.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.623" endtime="20201112 09:53:51.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:50.622" endtime="20201112 09:53:51.014"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.022" endtime="20201112 09:53:51.041"></status>
</kw>
<msg timestamp="20201112 09:53:51.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.021" endtime="20201112 09:53:51.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.042" endtime="20201112 09:53:51.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.045" endtime="20201112 09:53:51.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.018" endtime="20201112 09:53:51.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.016" endtime="20201112 09:53:51.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.055" endtime="20201112 09:53:51.340"></status>
</kw>
<msg timestamp="20201112 09:53:51.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.053" endtime="20201112 09:53:51.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.344" endtime="20201112 09:53:51.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.352" endtime="20201112 09:53:51.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.051" endtime="20201112 09:53:51.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.049" endtime="20201112 09:53:51.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.359" level="INFO">${RESULT} = [{'time': 0.022279028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.836099999999942e-05, 'source_diff': 6.836099999999942e-05}, {'time': 0.022361014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:51.356" endtime="20201112 09:53:51.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:51.373" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:51.360" endtime="20201112 09:53:51.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.377" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:53:51.376" endtime="20201112 09:53:51.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.379" level="INFO">VALUE: [6.836099999999942e-05, 6.895799999999744e-05, 6.772199999999923e-05, 6.725000000000134e-05, 6.866599999999848e-05, 6.729100000000057e-05, 6.823600000000277e-05, 6.818099999999702e-05, 6.7277000000001e-05, 6.806899999999699e-05, 6.705599999999937e-05, 6.751399999999769e-05, 6.837499999999899e-05, 6.861099999999967e-05, 6.748600000000202e-05, 6.879199999999808e-05, 6.852799999999826e-05, 6.772300000000217e-05, 6.863799999999934e-05, 6.745799999999941e-05, 6.815300000000135e-05, 6.865299999999838e-05, 6.844400000000084e-05, 6.831900000000071e-05, 6.865300000000185e-05, 6.883400000000026e-05, 6.820800000000016e-05, 6.880600000000112e-05, 6.886099999999992e-05, 6.712500000000121e-05, 6.869400000000109e-05, 6.798599999999905e-05, 6.795799999999991e-05, 6.779100000000107e-05, 6.738900000000103e-05, 6.876399999999894e-05, 6.888900000000253e-05, 6.813900000000178e-05, 6.862499999999924e-05, 6.797199999999948e-05, 6.798599999999905e-05, 6.84299999999978e-05, 6.797299999999895e-05, 6.713799999999784e-05, 6.848599999999955e-05, 6.729100000000057e-05, 6.767999999999705e-05, 6.763899999999781e-05, 6.877800000000198e-05, 6.737500000000146e-05]</msg>
<status status="PASS" starttime="20201112 09:53:51.378" endtime="20201112 09:53:51.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.373" endtime="20201112 09:53:51.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.383" endtime="20201112 09:53:51.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.386" endtime="20201112 09:53:51.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.385" endtime="20201112 09:53:51.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.381" endtime="20201112 09:53:51.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.015" endtime="20201112 09:53:51.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.014" endtime="20201112 09:53:51.407"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.416" endtime="20201112 09:53:51.435"></status>
</kw>
<msg timestamp="20201112 09:53:51.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.414" endtime="20201112 09:53:51.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.437" endtime="20201112 09:53:51.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.439" endtime="20201112 09:53:51.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.412" endtime="20201112 09:53:51.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.410" endtime="20201112 09:53:51.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.449" endtime="20201112 09:53:51.735"></status>
</kw>
<msg timestamp="20201112 09:53:51.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.448" endtime="20201112 09:53:51.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:51.739" endtime="20201112 09:53:51.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.748" endtime="20201112 09:53:51.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.445" endtime="20201112 09:53:51.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.443" endtime="20201112 09:53:51.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:51.754" level="INFO">${RESULT} = [{'time': 0.022129986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.987500000000049e-05, 'source_diff': 6.987500000000049e-05}, {'time': 0.022215986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:51.751" endtime="20201112 09:53:51.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:51.768" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:51.755" endtime="20201112 09:53:51.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.772" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:53:51.771" endtime="20201112 09:53:51.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.775" level="INFO">VALUE: [6.987500000000049e-05, 7.063900000000081e-05, 7.079200000000008e-05, 6.922200000000073e-05, 7.081999999999922e-05, 7.01109999999977e-05, 6.956999999999797e-05, 6.92360000000003e-05, 7.095899999999891e-05, 6.97909999999996e-05, 6.905500000000189e-05, 7.037500000000099e-05, 7.061100000000167e-05, 7.034700000000185e-05, 6.905600000000137e-05, 7.052800000000026e-05, 6.920800000000116e-05, 6.980600000000212e-05, 6.905600000000137e-05, 6.908300000000103e-05, 6.906899999999799e-05, 7.00420000000028e-05, 6.954099999999935e-05, 7.055499999999992e-05, 7.005499999999942e-05, 7.072199999999876e-05, 6.930599999999815e-05, 7.038900000000056e-05, 6.962499999999677e-05, 6.995799999999844e-05, 7.030599999999915e-05, 7.02230000000012e-05, 6.995899999999791e-05, 6.980500000000264e-05, 7.087499999999802e-05, 6.945800000000141e-05, 7.045799999999894e-05, 7.097199999999901e-05, 6.947200000000098e-05, 6.976399999999994e-05, 7.069399999999962e-05, 6.932000000000119e-05, 6.952799999999926e-05, 6.969499999999809e-05, 6.95559999999984e-05, 7.080599999999965e-05, 7.090200000000116e-05, 6.966699999999895e-05, 7.049999999999765e-05, 7.030499999999967e-05]</msg>
<status status="PASS" starttime="20201112 09:53:51.773" endtime="20201112 09:53:51.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.768" endtime="20201112 09:53:51.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.778" endtime="20201112 09:53:51.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.782" endtime="20201112 09:53:51.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.780" endtime="20201112 09:53:51.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.776" endtime="20201112 09:53:51.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.408" endtime="20201112 09:53:51.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.408" endtime="20201112 09:53:51.802"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.811" endtime="20201112 09:53:51.829"></status>
</kw>
<msg timestamp="20201112 09:53:51.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.809" endtime="20201112 09:53:51.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.830" endtime="20201112 09:53:51.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.833" endtime="20201112 09:53:51.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.807" endtime="20201112 09:53:51.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.805" endtime="20201112 09:53:51.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.843" endtime="20201112 09:53:52.127"></status>
</kw>
<msg timestamp="20201112 09:53:52.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:51.841" endtime="20201112 09:53:52.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:53:52.132" endtime="20201112 09:53:52.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.140" endtime="20201112 09:53:52.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.839" endtime="20201112 09:53:52.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.837" endtime="20201112 09:53:52.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.146" level="INFO">${RESULT} = [{'time': 0.021930667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.216700000000145e-05, 'source_diff': 7.216700000000145e-05}, {'time': 0.022022681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.143" endtime="20201112 09:53:52.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:52.161" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:52.147" endtime="20201112 09:53:52.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.165" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:53:52.164" endtime="20201112 09:53:52.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.168" level="INFO">VALUE: [7.216700000000145e-05, 7.254199999999836e-05, 7.122199999999926e-05, 7.195800000000044e-05, 7.197200000000001e-05, 7.281899999999827e-05, 7.105500000000042e-05, 7.148599999999908e-05, 7.204200000000133e-05, 7.204199999999786e-05, 7.104200000000033e-05, 7.229200000000158e-05, 7.213900000000231e-05, 7.254200000000183e-05, 7.158399999999954e-05, 7.297200000000101e-05, 7.263900000000281e-05, 7.297200000000101e-05, 7.297199999999754e-05, 7.129200000000058e-05, 7.12360000000023e-05, 7.180599999999718e-05, 7.104200000000033e-05, 7.204200000000133e-05, 7.216700000000145e-05, 7.154200000000083e-05, 7.177799999999804e-05, 7.169400000000062e-05, 7.18049999999977e-05, 7.155500000000092e-05, 7.108300000000303e-05, 7.227799999999854e-05, 7.180600000000065e-05, 7.270800000000119e-05, 7.297200000000101e-05, 7.2069999999997e-05, 7.198700000000252e-05, 7.148599999999908e-05, 7.247199999999704e-05, 7.262499999999977e-05, 7.297200000000101e-05, 7.168099999999705e-05, 7.300000000000015e-05, 7.230500000000167e-05, 7.204199999999786e-05, 7.10559999999999e-05, 7.15560000000004e-05, 7.286100000000045e-05, 7.294500000000134e-05, 7.112499999999827e-05]</msg>
<status status="PASS" starttime="20201112 09:53:52.166" endtime="20201112 09:53:52.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.162" endtime="20201112 09:53:52.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.171" endtime="20201112 09:53:52.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.175" endtime="20201112 09:53:52.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.173" endtime="20201112 09:53:52.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.170" endtime="20201112 09:53:52.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.803" endtime="20201112 09:53:52.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.803" endtime="20201112 09:53:52.196"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.204" endtime="20201112 09:53:52.223"></status>
</kw>
<msg timestamp="20201112 09:53:52.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.203" endtime="20201112 09:53:52.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.224" endtime="20201112 09:53:52.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.227" endtime="20201112 09:53:52.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.200" endtime="20201112 09:53:52.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.198" endtime="20201112 09:53:52.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.237" endtime="20201112 09:53:52.522"></status>
</kw>
<msg timestamp="20201112 09:53:52.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.235" endtime="20201112 09:53:52.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.526" endtime="20201112 09:53:52.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.535" endtime="20201112 09:53:52.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.233" endtime="20201112 09:53:52.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.231" endtime="20201112 09:53:52.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.541" level="INFO">${RESULT} = [{'time': 0.022145833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.370799999999872e-05, 'source_diff': 7.370799999999872e-05}, {'time': 0.022233833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.538" endtime="20201112 09:53:52.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:52.555" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:52.542" endtime="20201112 09:53:52.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.559" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:53:52.558" endtime="20201112 09:53:52.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.562" level="INFO">VALUE: [7.370799999999872e-05, 7.448600000000208e-05, 7.390300000000016e-05, 7.479099999999766e-05, 7.322200000000126e-05, 7.39309999999993e-05, 7.429200000000011e-05, 7.436099999999848e-05, 7.465300000000091e-05, 7.494499999999987e-05, 7.38049999999997e-05, 7.355499999999945e-05, 7.306899999999852e-05, 7.388900000000059e-05, 7.49440000000004e-05, 7.379100000000013e-05, 7.405499999999995e-05, 7.32500000000004e-05, 7.463900000000134e-05, 7.415300000000041e-05, 7.315299999999941e-05, 7.397299999999801e-05, 7.467999999999711e-05, 7.37370000000008e-05, 7.355500000000292e-05, 7.455500000000045e-05, 7.355499999999945e-05, 7.32500000000004e-05, 7.413900000000084e-05, 7.413900000000084e-05, 7.347200000000151e-05, 7.461099999999873e-05, 7.413900000000084e-05, 7.313899999999984e-05, 7.477800000000104e-05, 7.404199999999986e-05, 7.320799999999822e-05, 7.463899999999787e-05, 7.33049999999992e-05, 7.487499999999855e-05, 7.429200000000011e-05, 7.372199999999829e-05, 7.313899999999984e-05, 7.362500000000077e-05, 7.41249999999978e-05, 7.480599999999671e-05, 7.420899999999869e-05, 7.376400000000047e-05, 7.370800000000219e-05, 7.447199999999904e-05]</msg>
<status status="PASS" starttime="20201112 09:53:52.560" endtime="20201112 09:53:52.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.555" endtime="20201112 09:53:52.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.565" endtime="20201112 09:53:52.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.569" endtime="20201112 09:53:52.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.567" endtime="20201112 09:53:52.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.564" endtime="20201112 09:53:52.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.196" endtime="20201112 09:53:52.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.196" endtime="20201112 09:53:52.590"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.598" endtime="20201112 09:53:52.616"></status>
</kw>
<msg timestamp="20201112 09:53:52.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.597" endtime="20201112 09:53:52.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.617" endtime="20201112 09:53:52.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.620" endtime="20201112 09:53:52.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.594" endtime="20201112 09:53:52.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.592" endtime="20201112 09:53:52.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.630" endtime="20201112 09:53:52.915"></status>
</kw>
<msg timestamp="20201112 09:53:52.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.628" endtime="20201112 09:53:52.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.920" endtime="20201112 09:53:52.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.928" endtime="20201112 09:53:52.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.626" endtime="20201112 09:53:52.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.624" endtime="20201112 09:53:52.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.935" level="INFO">${RESULT} = [{'time': 0.021797083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.552699999999885e-05, 'source_diff': 7.552699999999885e-05}, {'time': 0.021885097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:52.931" endtime="20201112 09:53:52.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:52.948" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:52.936" endtime="20201112 09:53:52.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.953" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:53:52.952" endtime="20201112 09:53:52.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.955" level="INFO">VALUE: [7.552699999999885e-05, 7.61249999999998e-05, 7.580499999999823e-05, 7.519400000000065e-05, 7.700000000000068e-05, 7.532000000000025e-05, 7.537500000000252e-05, 7.577799999999857e-05, 7.605600000000143e-05, 7.640199999999972e-05, 7.661200000000021e-05, 7.51249999999988e-05, 7.598600000000011e-05, 7.598600000000011e-05, 7.579200000000161e-05, 7.558299999999712e-05, 7.569400000000115e-05, 7.665199999999997e-05, 7.522199999999979e-05, 7.587499999999955e-05, 7.633400000000082e-05, 7.537500000000252e-05, 7.61379999999999e-05, 7.665299999999944e-05, 7.663899999999987e-05, 7.613899999999937e-05, 7.530599999999721e-05, 7.505600000000043e-05, 7.669400000000215e-05, 7.69449999999984e-05, 7.645900000000094e-05, 7.583300000000084e-05, 7.670899999999772e-05, 7.679199999999914e-05, 7.638899999999962e-05, 7.59579999999975e-05, 7.663899999999987e-05, 7.583299999999737e-05, 7.594500000000087e-05, 7.680600000000218e-05, 7.652799999999932e-05, 7.670799999999825e-05, 7.547299999999951e-05, 7.580599999999771e-05, 7.555600000000093e-05, 7.670800000000172e-05, 7.645800000000147e-05, 7.52769999999986e-05, 7.555500000000145e-05, 7.691700000000273e-05]</msg>
<status status="PASS" starttime="20201112 09:53:52.954" endtime="20201112 09:53:52.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.949" endtime="20201112 09:53:52.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.959" endtime="20201112 09:53:52.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.962" endtime="20201112 09:53:52.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.960" endtime="20201112 09:53:52.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.957" endtime="20201112 09:53:52.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.591" endtime="20201112 09:53:52.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.590" endtime="20201112 09:53:52.983"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.991" endtime="20201112 09:53:53.009"></status>
</kw>
<msg timestamp="20201112 09:53:53.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.990" endtime="20201112 09:53:53.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.011" endtime="20201112 09:53:53.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.013" endtime="20201112 09:53:53.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.987" endtime="20201112 09:53:53.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.985" endtime="20201112 09:53:53.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.024" endtime="20201112 09:53:53.308"></status>
</kw>
<msg timestamp="20201112 09:53:53.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.022" endtime="20201112 09:53:53.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.313" endtime="20201112 09:53:53.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.321" endtime="20201112 09:53:53.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.019" endtime="20201112 09:53:53.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.018" endtime="20201112 09:53:53.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.328" level="INFO">${RESULT} = [{'time': 0.021991861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.851400000000175e-05, 'source_diff': 7.851400000000175e-05}, {'time': 0.022089889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:53.324" endtime="20201112 09:53:53.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:53.341" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:53.329" endtime="20201112 09:53:53.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.345" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:53:53.344" endtime="20201112 09:53:53.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.348" level="INFO">VALUE: [7.851400000000175e-05, 7.847200000000304e-05, 7.781999999999928e-05, 7.872200000000329e-05, 7.745899999999847e-05, 7.729199999999964e-05, 7.852800000000132e-05, 7.775000000000143e-05, 7.81380000000019e-05, 7.748600000000161e-05, 7.863900000000187e-05, 7.794399999999993e-05, 7.829200000000064e-05, 7.805599999999996e-05, 7.788900000000112e-05, 7.880600000000071e-05, 7.837500000000205e-05, 7.830600000000021e-05, 7.701400000000025e-05, 7.723600000000136e-05, 7.81250000000018e-05, 7.779100000000067e-05, 7.772199999999882e-05, 7.86250000000023e-05, 7.879199999999767e-05, 7.836099999999901e-05, 7.831999999999978e-05, 7.838899999999815e-05, 7.829199999999717e-05, 7.852800000000132e-05, 7.754199999999989e-05, 7.886099999999951e-05, 7.78189999999998e-05, 7.706900000000252e-05, 7.804099999999745e-05, 7.887499999999908e-05, 7.829200000000064e-05, 7.805599999999996e-05, 7.829100000000117e-05, 7.827800000000107e-05, 7.873699999999886e-05, 7.815200000000147e-05, 7.798599999999864e-05, 7.73189999999993e-05, 7.854099999999795e-05, 7.722199999999832e-05, 7.730499999999974e-05, 7.837500000000205e-05, 7.766700000000001e-05, 7.729199999999964e-05]</msg>
<status status="PASS" starttime="20201112 09:53:53.347" endtime="20201112 09:53:53.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.342" endtime="20201112 09:53:53.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.352" endtime="20201112 09:53:53.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.355" endtime="20201112 09:53:53.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.353" endtime="20201112 09:53:53.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.350" endtime="20201112 09:53:53.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.984" endtime="20201112 09:53:53.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.983" endtime="20201112 09:53:53.376"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.384" endtime="20201112 09:53:53.403"></status>
</kw>
<msg timestamp="20201112 09:53:53.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.383" endtime="20201112 09:53:53.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.405" endtime="20201112 09:53:53.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.407" endtime="20201112 09:53:53.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.380" endtime="20201112 09:53:53.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.378" endtime="20201112 09:53:53.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.417" endtime="20201112 09:53:53.702"></status>
</kw>
<msg timestamp="20201112 09:53:53.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.415" endtime="20201112 09:53:53.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.706" endtime="20201112 09:53:53.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.714" endtime="20201112 09:53:53.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.413" endtime="20201112 09:53:53.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.411" endtime="20201112 09:53:53.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.721" level="INFO">${RESULT} = [{'time': 0.021943236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.901400000000225e-05, 'source_diff': 7.901400000000225e-05}, {'time': 0.022039264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:53.718" endtime="20201112 09:53:53.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:53.735" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:53.722" endtime="20201112 09:53:53.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.740" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:53:53.739" endtime="20201112 09:53:53.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.743" level="INFO">VALUE: [7.901400000000225e-05, 7.998600000000064e-05, 7.979199999999867e-05, 7.922200000000032e-05, 7.995900000000097e-05, 7.9458999999997e-05, 8.076400000000053e-05, 7.938799999999968e-05, 8.07910000000002e-05, 7.987500000000008e-05, 7.977800000000257e-05, 7.987500000000008e-05, 8.030599999999874e-05, 7.990299999999922e-05, 7.929200000000164e-05, 8.051400000000028e-05, 8.054199999999942e-05, 8.088900000000065e-05, 8.097200000000207e-05, 8.044400000000243e-05, 8.047200000000157e-05, 8.030499999999927e-05, 7.906900000000106e-05, 8.020799999999828e-05, 8.037500000000058e-05, 8.079199999999967e-05, 8.086100000000151e-05, 8.080600000000271e-05, 8.023600000000089e-05, 8.06520000000005e-05, 8.045799999999853e-05, 8.06390000000004e-05, 8.030499999999927e-05, 7.955499999999852e-05, 8.022199999999785e-05, 7.962499999999983e-05, 7.9458000000001e-05, 8.050000000000071e-05, 8.065299999999997e-05, 7.979200000000214e-05, 8.092999999999989e-05, 7.9458000000001e-05, 8.01389999999999e-05, 7.947200000000057e-05, 8.030499999999927e-05, 7.99169999999988e-05, 8.09719999999986e-05, 7.980600000000171e-05, 8.007000000000153e-05, 7.956999999999756e-05]</msg>
<status status="PASS" starttime="20201112 09:53:53.741" endtime="20201112 09:53:53.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.736" endtime="20201112 09:53:53.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.807" endtime="20201112 09:53:53.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.810" endtime="20201112 09:53:53.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.809" endtime="20201112 09:53:53.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.805" endtime="20201112 09:53:53.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.377" endtime="20201112 09:53:53.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.376" endtime="20201112 09:53:53.831"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.840" endtime="20201112 09:53:53.858"></status>
</kw>
<msg timestamp="20201112 09:53:53.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.838" endtime="20201112 09:53:53.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.859" endtime="20201112 09:53:53.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.862" endtime="20201112 09:53:53.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.836" endtime="20201112 09:53:53.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.834" endtime="20201112 09:53:53.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.872" endtime="20201112 09:53:54.156"></status>
</kw>
<msg timestamp="20201112 09:53:54.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.870" endtime="20201112 09:53:54.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.161" endtime="20201112 09:53:54.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.169" endtime="20201112 09:53:54.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.867" endtime="20201112 09:53:54.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.866" endtime="20201112 09:53:54.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.176" level="INFO">${RESULT} = [{'time': 0.021905944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.270800000000078e-05, 'source_diff': 8.270800000000078e-05}, {'time': 0.022001958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:54.172" endtime="20201112 09:53:54.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:54.189" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:54.177" endtime="20201112 09:53:54.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.197" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:53:54.195" endtime="20201112 09:53:54.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.203" level="INFO">VALUE: [8.270800000000078e-05, 8.255499999999805e-05, 8.222199999999985e-05, 8.131899999999984e-05, 8.222199999999985e-05, 8.190300000000122e-05, 8.16390000000014e-05, 8.24720000000001e-05, 8.181999999999981e-05, 8.240300000000172e-05, 8.219400000000071e-05, 8.219399999999724e-05, 8.24720000000001e-05, 8.29720000000006e-05, 8.17910000000012e-05, 8.188900000000165e-05, 8.212500000000234e-05, 8.17780000000011e-05, 8.102800000000035e-05, 8.122200000000232e-05, 8.147299999999857e-05, 8.213899999999844e-05, 8.115199999999753e-05, 8.279099999999873e-05, 8.102700000000088e-05, 8.188900000000165e-05, 8.19719999999996e-05, 8.11390000000009e-05, 8.212499999999887e-05, 8.162500000000183e-05, 8.181999999999981e-05, 8.104199999999992e-05, 8.259700000000023e-05, 8.12780000000006e-05, 8.294400000000146e-05, 8.162500000000183e-05, 8.24720000000001e-05, 8.162500000000183e-05, 8.11390000000009e-05, 8.179200000000067e-05, 8.202800000000135e-05, 8.181999999999981e-05, 8.231999999999684e-05, 8.287499999999962e-05, 8.290199999999928e-05, 8.123600000000189e-05, 8.286100000000005e-05, 8.23330000000004e-05, 8.257000000000056e-05, 8.172199999999935e-05]</msg>
<status status="PASS" starttime="20201112 09:53:54.200" endtime="20201112 09:53:54.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.190" endtime="20201112 09:53:54.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.210" endtime="20201112 09:53:54.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.217" endtime="20201112 09:53:54.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.214" endtime="20201112 09:53:54.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.207" endtime="20201112 09:53:54.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.832" endtime="20201112 09:53:54.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.832" endtime="20201112 09:53:54.242"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.261" endtime="20201112 09:53:54.282"></status>
</kw>
<msg timestamp="20201112 09:53:54.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.257" endtime="20201112 09:53:54.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.285" endtime="20201112 09:53:54.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.291" endtime="20201112 09:53:54.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.252" endtime="20201112 09:53:54.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.248" endtime="20201112 09:53:54.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.302" endtime="20201112 09:53:54.586"></status>
</kw>
<msg timestamp="20201112 09:53:54.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036114028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036198222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.300" endtime="20201112 09:53:54.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036114028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036198222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.590" endtime="20201112 09:53:54.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.598" endtime="20201112 09:53:54.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.298" endtime="20201112 09:53:54.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.296" endtime="20201112 09:53:54.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.605" level="INFO">${RESULT} = [{'time': 0.036198222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.419400000000271e-05, 'source_diff': 8.419400000000271e-05}, {'time': 0.036298236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:54.602" endtime="20201112 09:53:54.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:54.618" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:54.606" endtime="20201112 09:53:54.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.623" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:53:54.622" endtime="20201112 09:53:54.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.626" level="INFO">VALUE: [8.419400000000271e-05, 8.405499999999955e-05, 8.372200000000135e-05, 8.327799999999913e-05, 8.307000000000453e-05, 8.436099999999808e-05, 8.36390000000034e-05, 8.362500000000384e-05, 8.48050000000003e-05, 8.370800000000178e-05, 8.477799999999369e-05, 8.420800000000228e-05, 8.444399999999602e-05, 8.445800000000253e-05, 8.331999999999784e-05, 8.4846999999999e-05, 8.380599999999877e-05, 8.455599999999952e-05, 8.488799999999824e-05, 8.329099999999923e-05, 8.34720000000011e-05, 8.372200000000135e-05, 8.48050000000003e-05, 8.388900000000366e-05, 8.337499999999665e-05, 8.337500000000359e-05, 8.407000000000553e-05, 8.380600000000571e-05, 8.372200000000135e-05, 8.395800000000203e-05, 8.481899999999987e-05, 8.436099999999808e-05, 8.44720000000021e-05, 8.431899999999937e-05, 8.355599999999852e-05, 8.359799999999723e-05, 8.420900000000175e-05, 8.309699999999726e-05, 8.430599999999927e-05, 8.422200000000185e-05, 8.345800000000153e-05, 8.48050000000003e-05, 8.455500000000005e-05, 8.454100000000048e-05, 8.454199999999995e-05, 8.487499999999815e-05, 8.330599999999827e-05, 8.355599999999852e-05, 8.338899999999622e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201112 09:53:54.624" endtime="20201112 09:53:54.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.619" endtime="20201112 09:53:54.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.629" endtime="20201112 09:53:54.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.633" endtime="20201112 09:53:54.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.631" endtime="20201112 09:53:54.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.628" endtime="20201112 09:53:54.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.244" endtime="20201112 09:53:54.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.243" endtime="20201112 09:53:54.653"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.662" endtime="20201112 09:53:54.681"></status>
</kw>
<msg timestamp="20201112 09:53:54.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.661" endtime="20201112 09:53:54.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.682" endtime="20201112 09:53:54.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.685" endtime="20201112 09:53:54.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.658" endtime="20201112 09:53:54.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.656" endtime="20201112 09:53:54.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.695" endtime="20201112 09:53:54.980"></status>
</kw>
<msg timestamp="20201112 09:53:54.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.693" endtime="20201112 09:53:54.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.984" endtime="20201112 09:53:54.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.992" endtime="20201112 09:53:54.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.691" endtime="20201112 09:53:54.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.689" endtime="20201112 09:53:54.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.999" level="INFO">${RESULT} = [{'time': 0.022021514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.552799999999791e-05, 'source_diff': 8.552799999999791e-05}, {'time': 0.022123528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:54.996" endtime="20201112 09:53:54.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.012" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:55.000" endtime="20201112 09:53:55.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.017" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.016" endtime="20201112 09:53:55.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.019" level="INFO">VALUE: [8.552799999999791e-05, 8.545899999999954e-05, 8.663899999999947e-05, 8.565199999999856e-05, 8.547199999999963e-05, 8.629100000000223e-05, 8.568000000000117e-05, 8.66249999999999e-05, 8.613900000000244e-05, 8.679199999999873e-05, 8.557000000000009e-05, 8.554200000000095e-05, 8.520899999999929e-05, 8.51249999999984e-05, 8.615200000000253e-05, 8.513800000000196e-05, 8.663899999999947e-05, 8.681900000000187e-05, 8.638899999999922e-05, 8.609700000000026e-05, 8.51249999999984e-05, 8.563899999999847e-05, 8.64860000000002e-05, 8.563900000000194e-05, 8.616599999999863e-05, 8.595800000000056e-05, 8.626399999999909e-05, 8.570800000000031e-05, 8.597200000000013e-05, 8.527799999999766e-05, 8.519399999999677e-05, 8.545800000000006e-05, 8.52920000000007e-05, 8.505600000000002e-05, 8.569500000000022e-05, 8.579199999999773e-05, 8.538899999999822e-05, 8.531900000000037e-05, 8.627799999999866e-05, 8.663899999999947e-05, 8.584799999999948e-05, 8.616700000000158e-05, 8.64730000000001e-05, 8.53469999999995e-05, 8.59859999999997e-05, 8.540200000000178e-05, 8.627699999999919e-05, 8.586099999999958e-05, 8.580499999999783e-05, 8.558300000000019e-05]</msg>
<status status="PASS" starttime="20201112 09:53:55.018" endtime="20201112 09:53:55.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.013" endtime="20201112 09:53:55.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.023" endtime="20201112 09:53:55.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.026" endtime="20201112 09:53:55.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.025" endtime="20201112 09:53:55.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.021" endtime="20201112 09:53:55.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.654" endtime="20201112 09:53:55.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.654" endtime="20201112 09:53:55.047"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.056" endtime="20201112 09:53:55.075"></status>
</kw>
<msg timestamp="20201112 09:53:55.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.054" endtime="20201112 09:53:55.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.076" endtime="20201112 09:53:55.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.079" endtime="20201112 09:53:55.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.052" endtime="20201112 09:53:55.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.050" endtime="20201112 09:53:55.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.089" endtime="20201112 09:53:55.373"></status>
</kw>
<msg timestamp="20201112 09:53:55.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.087" endtime="20201112 09:53:55.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.378" endtime="20201112 09:53:55.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.386" endtime="20201112 09:53:55.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.085" endtime="20201112 09:53:55.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.083" endtime="20201112 09:53:55.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.393" level="INFO">${RESULT} = [{'time': 0.021933417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.770900000000179e-05, 'source_diff': 8.770900000000179e-05}, {'time': 0.022039417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:55.389" endtime="20201112 09:53:55.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.407" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:55.394" endtime="20201112 09:53:55.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.411" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.410" endtime="20201112 09:53:55.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.414" level="INFO">VALUE: [8.770900000000179e-05, 8.804199999999998e-05, 8.740200000000031e-05, 8.780499999999983e-05, 8.805500000000008e-05, 8.705499999999908e-05, 8.872199999999941e-05, 8.858299999999972e-05, 8.86800000000007e-05, 8.86670000000006e-05, 8.751300000000087e-05, 8.733300000000194e-05, 8.790200000000081e-05, 8.713800000000049e-05, 8.777700000000069e-05, 8.820799999999934e-05, 8.81250000000014e-05, 8.856900000000015e-05, 8.763900000000047e-05, 8.78059999999993e-05, 8.738900000000022e-05, 8.713899999999997e-05, 8.770799999999884e-05, 8.76250000000009e-05, 8.873599999999898e-05, 8.770799999999884e-05, 8.894400000000052e-05, 8.76669999999996e-05, 8.877800000000116e-05, 8.741699999999936e-05, 8.713899999999997e-05, 8.827800000000066e-05, 8.823600000000195e-05, 8.71120000000003e-05, 8.897200000000313e-05, 8.83189999999999e-05, 8.872199999999941e-05, 8.745799999999859e-05, 8.824999999999805e-05, 8.804199999999998e-05, 8.720800000000181e-05, 8.797199999999866e-05, 8.847299999999864e-05, 8.848599999999873e-05, 8.780499999999983e-05, 8.888900000000172e-05, 8.745799999999859e-05, 8.779100000000026e-05, 8.806899999999965e-05, 8.854200000000048e-05]</msg>
<status status="PASS" starttime="20201112 09:53:55.412" endtime="20201112 09:53:55.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.408" endtime="20201112 09:53:55.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.417" endtime="20201112 09:53:55.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.421" endtime="20201112 09:53:55.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.419" endtime="20201112 09:53:55.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.416" endtime="20201112 09:53:55.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.048" endtime="20201112 09:53:55.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.047" endtime="20201112 09:53:55.442"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.450" endtime="20201112 09:53:55.469"></status>
</kw>
<msg timestamp="20201112 09:53:55.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.449" endtime="20201112 09:53:55.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.471" endtime="20201112 09:53:55.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.473" endtime="20201112 09:53:55.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.446" endtime="20201112 09:53:55.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.444" endtime="20201112 09:53:55.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.483" endtime="20201112 09:53:55.768"></status>
</kw>
<msg timestamp="20201112 09:53:55.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.482" endtime="20201112 09:53:55.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.772" endtime="20201112 09:53:55.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.781" endtime="20201112 09:53:55.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.479" endtime="20201112 09:53:55.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.478" endtime="20201112 09:53:55.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.787" level="INFO">${RESULT} = [{'time': 0.021846458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.06939999999988e-05, 'source_diff': 9.06939999999988e-05}, {'time': 0.021956472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:55.784" endtime="20201112 09:53:55.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:55.801" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:55.788" endtime="20201112 09:53:55.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.805" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:53:55.804" endtime="20201112 09:53:55.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.808" level="INFO">VALUE: [9.06939999999988e-05, 8.919400000000077e-05, 8.929199999999776e-05, 8.938899999999875e-05, 9.045799999999812e-05, 9.062500000000043e-05, 8.923599999999948e-05, 8.905600000000055e-05, 9.022200000000091e-05, 8.995800000000109e-05, 8.929100000000176e-05, 9.033300000000147e-05, 9.0332999999998e-05, 8.954200000000148e-05, 9.020799999999787e-05, 9.016600000000263e-05, 9.04589999999976e-05, 9.062500000000043e-05, 9.062500000000043e-05, 9.012499999999993e-05, 8.96250000000029e-05, 8.945800000000059e-05, 8.96670000000016e-05, 9.019500000000125e-05, 9.080599999999883e-05, 8.986100000000011e-05, 8.929200000000123e-05, 9.037500000000018e-05, 9.009800000000026e-05, 8.945800000000059e-05, 8.963900000000247e-05, 8.979099999999879e-05, 8.901399999999837e-05, 8.938900000000222e-05, 9.03060000000018e-05, 9.020799999999787e-05, 8.93060000000008e-05, 9.072300000000089e-05, 9.097199999999819e-05, 9.063800000000052e-05, 8.915299999999807e-05, 9.026399999999962e-05, 8.972200000000041e-05, 8.961099999999986e-05, 9.029199999999876e-05, 9.054199999999901e-05, 9.072199999999794e-05, 9.062500000000043e-05, 9.013800000000002e-05, 8.947200000000016e-05]</msg>
<status status="PASS" starttime="20201112 09:53:55.806" endtime="20201112 09:53:55.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.802" endtime="20201112 09:53:55.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.811" endtime="20201112 09:53:55.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.815" endtime="20201112 09:53:55.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.813" endtime="20201112 09:53:55.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.810" endtime="20201112 09:53:55.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.443" endtime="20201112 09:53:55.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.442" endtime="20201112 09:53:55.835"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.844" endtime="20201112 09:53:55.864"></status>
</kw>
<msg timestamp="20201112 09:53:55.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.842" endtime="20201112 09:53:55.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.865" endtime="20201112 09:53:55.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.868" endtime="20201112 09:53:55.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.840" endtime="20201112 09:53:55.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.838" endtime="20201112 09:53:55.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.878" endtime="20201112 09:53:56.163"></status>
</kw>
<msg timestamp="20201112 09:53:56.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.876" endtime="20201112 09:53:56.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.167" endtime="20201112 09:53:56.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.176" endtime="20201112 09:53:56.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.874" endtime="20201112 09:53:56.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.872" endtime="20201112 09:53:56.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.183" level="INFO">${RESULT} = [{'time': 0.022205319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.26940000000008e-05, 'source_diff': 9.26940000000008e-05}, {'time': 0.022317319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:56.179" endtime="20201112 09:53:56.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:56.196" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:56.183" endtime="20201112 09:53:56.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.200" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:53:56.199" endtime="20201112 09:53:56.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.203" level="INFO">VALUE: [9.26940000000008e-05, 9.13879999999978e-05, 9.130499999999986e-05, 9.184699999999907e-05, 9.301299999999943e-05, 9.14719999999987e-05, 9.279200000000126e-05, 9.183400000000244e-05, 9.198699999999824e-05, 9.112500000000093e-05, 9.147299999999817e-05, 9.215199999999812e-05, 9.1639000000001e-05, 9.247200000000316e-05, 9.280499999999789e-05, 9.222199999999944e-05, 9.14719999999987e-05, 9.180599999999983e-05, 9.187500000000168e-05, 9.247299999999917e-05, 9.14589999999986e-05, 9.248599999999926e-05, 9.197200000000266e-05, 9.186100000000211e-05, 9.172199999999894e-05, 9.162500000000143e-05, 9.132000000000237e-05, 9.205600000000008e-05, 9.205600000000008e-05, 9.225000000000205e-05, 9.29720000000002e-05, 9.229099999999782e-05, 9.274999999999908e-05, 9.179100000000079e-05, 9.274999999999908e-05, 9.165300000000057e-05, 9.211099999999889e-05, 9.230600000000033e-05, 9.220899999999935e-05, 9.212500000000193e-05, 9.299999999999933e-05, 9.231899999999696e-05, 9.205500000000061e-05, 9.137500000000118e-05, 9.195799999999962e-05, 9.230600000000033e-05, 9.138900000000075e-05, 9.19719999999992e-05, 9.262499999999896e-05, 9.212499999999846e-05]</msg>
<status status="PASS" starttime="20201112 09:53:56.201" endtime="20201112 09:53:56.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.197" endtime="20201112 09:53:56.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.206" endtime="20201112 09:53:56.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.210" endtime="20201112 09:53:56.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.208" endtime="20201112 09:53:56.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.205" endtime="20201112 09:53:56.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.836" endtime="20201112 09:53:56.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.836" endtime="20201112 09:53:56.231"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.239" endtime="20201112 09:53:56.258"></status>
</kw>
<msg timestamp="20201112 09:53:56.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.238" endtime="20201112 09:53:56.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.260" endtime="20201112 09:53:56.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.262" endtime="20201112 09:53:56.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.235" endtime="20201112 09:53:56.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.233" endtime="20201112 09:53:56.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.272" endtime="20201112 09:53:56.558"></status>
</kw>
<msg timestamp="20201112 09:53:56.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.271" endtime="20201112 09:53:56.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.562" endtime="20201112 09:53:56.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.571" endtime="20201112 09:53:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.268" endtime="20201112 09:53:56.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.266" endtime="20201112 09:53:56.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.577" level="INFO">${RESULT} = [{'time': 0.022054972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.317999999999826e-05, 'source_diff': 9.317999999999826e-05}, {'time': 0.022160986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:56.574" endtime="20201112 09:53:56.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:56.590" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:56.578" endtime="20201112 09:53:56.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.595" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:53:56.594" endtime="20201112 09:53:56.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.597" level="INFO">VALUE: [9.317999999999826e-05, 9.322200000000044e-05, 9.363899999999953e-05, 9.4027e-05, 9.413900000000003e-05, 9.380599999999836e-05, 9.404199999999904e-05, 9.405499999999914e-05, 9.31390000000025e-05, 9.322200000000044e-05, 9.413900000000003e-05, 9.463900000000053e-05, 9.31390000000025e-05, 9.46530000000001e-05, 9.362499999999996e-05, 9.330600000000133e-05, 9.488900000000078e-05, 9.34720000000007e-05, 9.3639000000003e-05, 9.481899999999946e-05, 9.402799999999947e-05, 9.320800000000087e-05, 9.49720000000022e-05, 9.397199999999772e-05, 9.429199999999929e-05, 9.391599999999944e-05, 9.49590000000021e-05, 9.420900000000135e-05, 9.495799999999915e-05, 9.413900000000003e-05, 9.430499999999939e-05, 9.323600000000001e-05, 9.477800000000022e-05, 9.337499999999971e-05, 9.430600000000233e-05, 9.323699999999949e-05, 9.44720000000017e-05, 9.463800000000105e-05, 9.366699999999867e-05, 9.430499999999939e-05, 9.391699999999892e-05, 9.379200000000226e-05, 9.457000000000215e-05, 9.313899999999903e-05, 9.31659999999987e-05, 9.433299999999853e-05, 9.370899999999738e-05, 9.433299999999853e-05, 9.306900000000118e-05, 9.406899999999871e-05]</msg>
<status status="PASS" starttime="20201112 09:53:56.596" endtime="20201112 09:53:56.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.591" endtime="20201112 09:53:56.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.601" endtime="20201112 09:53:56.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.604" endtime="20201112 09:53:56.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.603" endtime="20201112 09:53:56.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.599" endtime="20201112 09:53:56.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.232" endtime="20201112 09:53:56.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.231" endtime="20201112 09:53:56.625"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.634" endtime="20201112 09:53:56.653"></status>
</kw>
<msg timestamp="20201112 09:53:56.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.632" endtime="20201112 09:53:56.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.655" endtime="20201112 09:53:56.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.657" endtime="20201112 09:53:56.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.630" endtime="20201112 09:53:56.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.628" endtime="20201112 09:53:56.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.667" endtime="20201112 09:53:56.952"></status>
</kw>
<msg timestamp="20201112 09:53:56.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.666" endtime="20201112 09:53:56.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.956" endtime="20201112 09:53:56.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.964" endtime="20201112 09:53:56.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.663" endtime="20201112 09:53:56.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.661" endtime="20201112 09:53:56.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.971" level="INFO">${RESULT} = [{'time': 0.022189431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.608399999999975e-05, 'source_diff': 9.608399999999975e-05}, {'time': 0.022299403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:56.967" endtime="20201112 09:53:56.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:56.985" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:56.972" endtime="20201112 09:53:56.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.990" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:53:56.989" endtime="20201112 09:53:56.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.992" level="INFO">VALUE: [9.608399999999975e-05, 9.565299999999763e-05, 9.529200000000029e-05, 9.690300000000235e-05, 9.618000000000126e-05, 9.547199999999922e-05, 9.629099999999835e-05, 9.683299999999756e-05, 9.613899999999856e-05, 9.530599999999986e-05, 9.688899999999931e-05, 9.647200000000022e-05, 9.613900000000203e-05, 9.67920000000018e-05, 9.605499999999767e-05, 9.605500000000114e-05, 9.586100000000264e-05, 9.679100000000232e-05, 9.672200000000047e-05, 9.580600000000036e-05, 9.638899999999881e-05, 9.62920000000013e-05, 9.655600000000111e-05, 9.566700000000067e-05, 9.662499999999949e-05, 9.530500000000039e-05, 9.6027999999998e-05, 9.605500000000114e-05, 9.683300000000103e-05, 9.70140000000029e-05, 9.577800000000122e-05, 9.670900000000038e-05, 9.59729999999992e-05, 9.694499999999759e-05, 9.562499999999849e-05, 9.613899999999856e-05, 9.663899999999906e-05, 9.61530000000016e-05, 9.636099999999967e-05, 9.590299999999788e-05, 9.63470000000001e-05, 9.569499999999981e-05, 9.52079999999994e-05, 9.515200000000112e-05, 9.547199999999922e-05, 9.580500000000089e-05, 9.51940000000033e-05, 9.645800000000065e-05, 9.51530000000006e-05, 9.662499999999949e-05]</msg>
<status status="PASS" starttime="20201112 09:53:56.991" endtime="20201112 09:53:56.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.986" endtime="20201112 09:53:56.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.996" endtime="20201112 09:53:56.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.999" endtime="20201112 09:53:57.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.998" endtime="20201112 09:53:57.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.994" endtime="20201112 09:53:57.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.626" endtime="20201112 09:53:57.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.625" endtime="20201112 09:53:57.020"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.029" endtime="20201112 09:53:57.049"></status>
</kw>
<msg timestamp="20201112 09:53:57.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.027" endtime="20201112 09:53:57.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.051" endtime="20201112 09:53:57.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.053" endtime="20201112 09:53:57.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.025" endtime="20201112 09:53:57.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.023" endtime="20201112 09:53:57.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.063" endtime="20201112 09:53:57.349"></status>
</kw>
<msg timestamp="20201112 09:53:57.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.062" endtime="20201112 09:53:57.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.353" endtime="20201112 09:53:57.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.362" endtime="20201112 09:53:57.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.059" endtime="20201112 09:53:57.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.057" endtime="20201112 09:53:57.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.368" level="INFO">${RESULT} = [{'time': 0.022258583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.851399999999746e-05, 'source_diff': 9.851399999999746e-05}, {'time': 0.022370611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:57.365" endtime="20201112 09:53:57.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:57.382" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:57.369" endtime="20201112 09:53:57.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.386" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:53:57.385" endtime="20201112 09:53:57.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.389" level="INFO">VALUE: [9.851399999999746e-05, 9.865299999999716e-05, 9.797200000000172e-05, 9.712499999999999e-05, 9.79860000000013e-05, 9.780600000000236e-05, 9.822299999999798e-05, 9.776400000000018e-05, 9.82219999999985e-05, 9.797200000000172e-05, 9.862500000000149e-05, 9.781899999999899e-05, 9.8721999999999e-05, 9.831999999999896e-05, 9.770900000000138e-05, 9.883300000000303e-05, 9.737500000000024e-05, 9.862500000000149e-05, 9.762500000000049e-05, 9.829099999999688e-05, 9.83609999999982e-05, 9.762500000000049e-05, 9.750000000000036e-05, 9.730600000000186e-05, 9.888899999999784e-05, 9.713900000000303e-05, 9.81799999999998e-05, 9.711100000000042e-05, 9.763900000000006e-05, 9.830499999999992e-05, 9.738899999999981e-05, 9.78059999999989e-05, 9.787499999999727e-05, 9.713899999999956e-05, 9.881899999999999e-05, 9.806899999999924e-05, 9.738800000000034e-05, 9.879100000000085e-05, 9.777799999999975e-05, 9.711100000000042e-05, 9.801399999999696e-05, 9.88059999999999e-05, 9.788900000000031e-05, 9.786100000000117e-05, 9.8028e-05, 9.722200000000097e-05, 9.77080000000019e-05, 9.847200000000222e-05, 9.838900000000081e-05, 9.806899999999924e-05]</msg>
<status status="PASS" starttime="20201112 09:53:57.387" endtime="20201112 09:53:57.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.383" endtime="20201112 09:53:57.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.392" endtime="20201112 09:53:57.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.396" endtime="20201112 09:53:57.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.394" endtime="20201112 09:53:57.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.391" endtime="20201112 09:53:57.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.021" endtime="20201112 09:53:57.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.020" endtime="20201112 09:53:57.417"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.425" endtime="20201112 09:53:57.445"></status>
</kw>
<msg timestamp="20201112 09:53:57.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.424" endtime="20201112 09:53:57.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.447" endtime="20201112 09:53:57.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.449" endtime="20201112 09:53:57.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.421" endtime="20201112 09:53:57.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.419" endtime="20201112 09:53:57.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.459" endtime="20201112 09:53:57.745"></status>
</kw>
<msg timestamp="20201112 09:53:57.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.458" endtime="20201112 09:53:57.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.749" endtime="20201112 09:53:57.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.757" endtime="20201112 09:53:57.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.455" endtime="20201112 09:53:57.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.453" endtime="20201112 09:53:57.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.764" level="INFO">${RESULT} = [{'time': 0.022377028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010068100000000177, 'source_diff': 0.00010068100000000177}, {'time': 0.022491056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:57.760" endtime="20201112 09:53:57.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:57.777" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:57.765" endtime="20201112 09:53:57.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.781" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:53:57.780" endtime="20201112 09:53:57.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.784" level="INFO">VALUE: [0.00010068100000000177, 9.905600000000014e-05, 9.902700000000153e-05, 9.95549999999977e-05, 9.938899999999834e-05, 0.00010098600000000083, 9.947199999999976e-05, 9.997200000000026e-05, 9.995800000000069e-05, 9.94999999999989e-05, 0.00010080599999999842, 0.00010005599999999767, 9.927800000000125e-05, 9.908299999999981e-05, 0.00010033300000000106, 0.00010080500000000242, 9.912499999999852e-05, 9.963900000000206e-05, 0.00010095800000000169, 0.00010026399999999921, 9.95280000000015e-05, 0.0001000549999999982, 9.900000000000186e-05, 9.952699999999856e-05, 9.904099999999763e-05, 9.92219999999995e-05, 9.93609999999992e-05, 0.0001002220000000005, 9.947199999999976e-05, 9.997299999999973e-05, 0.00010015199999999919, 0.00010062500000000002, 9.930500000000092e-05, 0.00010070800000000144, 0.00010097200000000126, 0.0001003060000000014, 0.0001007359999999971, 9.997200000000026e-05, 0.00010001399999999896, 0.00010024999999999964, 9.905500000000067e-05, 0.00010056900000000174, 0.00010038899999999934, 0.00010090299999999941, 0.0001008060000000019, 0.00010005600000000114, 0.00010073600000000058, 0.00010079199999999885, 9.990199999999894e-05, 0.00010043100000000152]</msg>
<status status="PASS" starttime="20201112 09:53:57.783" endtime="20201112 09:53:57.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.778" endtime="20201112 09:53:57.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.787" endtime="20201112 09:53:57.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.791" endtime="20201112 09:53:57.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.789" endtime="20201112 09:53:57.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.786" endtime="20201112 09:53:57.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.417" endtime="20201112 09:53:57.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.417" endtime="20201112 09:53:57.812"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.820" endtime="20201112 09:53:57.839"></status>
</kw>
<msg timestamp="20201112 09:53:57.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.819" endtime="20201112 09:53:57.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.841" endtime="20201112 09:53:57.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.843" endtime="20201112 09:53:57.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.816" endtime="20201112 09:53:57.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.814" endtime="20201112 09:53:57.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.853" endtime="20201112 09:53:58.139"></status>
</kw>
<msg timestamp="20201112 09:53:58.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021919597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.852" endtime="20201112 09:53:58.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021919597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.143" endtime="20201112 09:53:58.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.151" endtime="20201112 09:53:58.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.849" endtime="20201112 09:53:58.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.847" endtime="20201112 09:53:58.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.158" level="INFO">${RESULT} = [{'time': 0.021919597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010102799999999953, 'source_diff': 0.00010102799999999953}, {'time': 0.022039681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:58.155" endtime="20201112 09:53:58.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:58.171" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:58.159" endtime="20201112 09:53:58.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.175" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:53:58.174" endtime="20201112 09:53:58.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.178" level="INFO">VALUE: [0.00010102799999999953, 0.0001030139999999985, 0.00010230599999999992, 0.00010138900000000034, 0.00010179199999999985, 0.0001015419999999996, 0.00010144399999999915, 0.00010213800000000162, 0.00010263900000000159, 0.00010162500000000102, 0.00010148599999999786, 0.00010226400000000122, 0.0001015419999999996, 0.00010106999999999824, 0.00010237500000000177, 0.00010197300000000173, 0.00010198599999999836, 0.00010248600000000233, 0.00010112500000000052, 0.00010213900000000109, 0.00010236099999999873, 0.00010237500000000177, 0.00010212500000000152, 0.00010280600000000042, 0.00010205599999999967, 0.00010238800000000187, 0.00010147199999999829, 0.00010215300000000066, 0.00010144400000000262, 0.00010148599999999786, 0.00010295800000000022, 0.00010298599999999936, 0.00010230599999999992, 0.00010251400000000147, 0.00010268000000000083, 0.00010230500000000045, 0.00010152800000000003, 0.00010122199999999804, 0.00010233299999999959, 0.00010287500000000227, 0.00010280600000000042, 0.00010187500000000127, 0.00010297299999999926, 0.00010115200000000019, 0.00010230500000000045, 0.000102722000000003, 0.00010197199999999879, 0.00010113900000000009, 0.00010282, 0.000101722000000002]</msg>
<status status="PASS" starttime="20201112 09:53:58.176" endtime="20201112 09:53:58.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.172" endtime="20201112 09:53:58.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.182" endtime="20201112 09:53:58.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.185" endtime="20201112 09:53:58.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.183" endtime="20201112 09:53:58.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.180" endtime="20201112 09:53:58.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.813" endtime="20201112 09:53:58.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.812" endtime="20201112 09:53:58.206"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.214" endtime="20201112 09:53:58.235"></status>
</kw>
<msg timestamp="20201112 09:53:58.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.213" endtime="20201112 09:53:58.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.236" endtime="20201112 09:53:58.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.239" endtime="20201112 09:53:58.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.210" endtime="20201112 09:53:58.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.208" endtime="20201112 09:53:58.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.248" endtime="20201112 09:53:58.535"></status>
</kw>
<msg timestamp="20201112 09:53:58.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.247" endtime="20201112 09:53:58.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.539" endtime="20201112 09:53:58.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.547" endtime="20201112 09:53:58.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.244" endtime="20201112 09:53:58.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.243" endtime="20201112 09:53:58.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.554" level="INFO">${RESULT} = [{'time': 0.022192861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010448600000000086, 'source_diff': 0.00010448600000000086}, {'time': 0.022316875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:58.550" endtime="20201112 09:53:58.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:58.568" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:58.555" endtime="20201112 09:53:58.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.572" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:53:58.571" endtime="20201112 09:53:58.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.575" level="INFO">VALUE: [0.00010448600000000086, 0.00010380600000000142, 0.00010372199999999707, 0.00010480599999999896, 0.00010323700000000255, 0.00010380600000000142, 0.00010455499999999923, 0.00010473599999999764, 0.0001036810000000013, 0.00010363899999999912, 0.00010462500000000055, 0.00010347200000000029, 0.00010397200000000079, 0.00010312500000000252, 0.00010429200000000236, 0.00010383300000000109, 0.0001041949999999979, 0.00010365299999999869, 0.00010497200000000179, 0.00010462500000000055, 0.00010358400000000031, 0.00010463900000000012, 0.00010395899999999722, 0.0001043750000000003, 0.00010340199999999897, 0.0001035550000000017, 0.00010330500000000145, 0.00010356900000000127, 0.00010440299999999944, 0.0001036940000000014, 0.00010380599999999796, 0.00010455600000000217, 0.00010356900000000127, 0.00010305499999999773, 0.00010405499999999873, 0.00010483299999999862, 0.00010445799999999825, 0.00010363899999999912, 0.00010397200000000079, 0.00010447199999999782, 0.000104514, 0.00010495900000000169, 0.00010430499999999898, 0.00010415300000000266, 0.00010315299999999819, 0.00010399999999999993, 0.00010413899999999962, 0.00010347200000000029, 0.00010448600000000086, 0.00010313900000000209]</msg>
<status status="PASS" starttime="20201112 09:53:58.573" endtime="20201112 09:53:58.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.568" endtime="20201112 09:53:58.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.578" endtime="20201112 09:53:58.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.582" endtime="20201112 09:53:58.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.580" endtime="20201112 09:53:58.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.576" endtime="20201112 09:53:58.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.207" endtime="20201112 09:53:58.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.206" endtime="20201112 09:53:58.603"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.611" endtime="20201112 09:53:58.631"></status>
</kw>
<msg timestamp="20201112 09:53:58.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.610" endtime="20201112 09:53:58.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.633" endtime="20201112 09:53:58.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.635" endtime="20201112 09:53:58.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.607" endtime="20201112 09:53:58.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.605" endtime="20201112 09:53:58.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.645" endtime="20201112 09:53:58.932"></status>
</kw>
<msg timestamp="20201112 09:53:58.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.644" endtime="20201112 09:53:58.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.936" endtime="20201112 09:53:58.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.944" endtime="20201112 09:53:58.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.641" endtime="20201112 09:53:58.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.640" endtime="20201112 09:53:58.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.951" level="INFO">${RESULT} = [{'time': 0.022179069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010636099999999926, 'source_diff': 0.00010636099999999926}, {'time': 0.022303097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:58.947" endtime="20201112 09:53:58.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:58.964" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:58.951" endtime="20201112 09:53:58.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.968" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:53:58.967" endtime="20201112 09:53:58.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.971" level="INFO">VALUE: [0.00010636099999999926, 0.00010565300000000069, 0.00010580500000000048, 0.0001052360000000016, 0.00010529199999999989, 0.0001068889999999989, 0.00010615300000000119, 0.00010530599999999946, 0.00010605500000000073, 0.000106208, 0.00010538900000000087, 0.00010579100000000091, 0.00010605499999999726, 0.00010501399999999703, 0.00010637499999999883, 0.00010647299999999929, 0.00010579200000000039, 0.00010504199999999964, 0.00010669400000000093, 0.00010547199999999882, 0.00010579200000000039, 0.00010658399999999985, 0.00010683300000000062, 0.00010691699999999804, 0.00010658399999999985, 0.00010613900000000162, 0.00010595799999999975, 0.00010547199999999882, 0.00010580500000000048, 0.0001058889999999979, 0.00010580599999999996, 0.00010504199999999964, 0.0001055559999999997, 0.00010590300000000094, 0.00010695900000000022, 0.00010702800000000207, 0.00010580500000000048, 0.0001060690000000003, 0.00010690299999999847, 0.00010612499999999858, 0.00010547199999999882, 0.00010630600000000046, 0.00010579200000000039, 0.00010662499999999908, 0.00010697200000000032, 0.00010663899999999865, 0.00010695800000000075, 0.00010575000000000168, 0.00010638900000000187, 0.00010679200000000139]</msg>
<status status="PASS" starttime="20201112 09:53:58.969" endtime="20201112 09:53:58.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.964" endtime="20201112 09:53:58.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.974" endtime="20201112 09:53:58.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.977" endtime="20201112 09:53:58.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.976" endtime="20201112 09:53:58.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.972" endtime="20201112 09:53:58.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.603" endtime="20201112 09:53:58.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.603" endtime="20201112 09:53:58.998"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.007" endtime="20201112 09:53:59.026"></status>
</kw>
<msg timestamp="20201112 09:53:59.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.006" endtime="20201112 09:53:59.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.028" endtime="20201112 09:53:59.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.030" endtime="20201112 09:53:59.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.003" endtime="20201112 09:53:59.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.001" endtime="20201112 09:53:59.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.041" endtime="20201112 09:53:59.327"></status>
</kw>
<msg timestamp="20201112 09:53:59.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.039" endtime="20201112 09:53:59.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.331" endtime="20201112 09:53:59.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.339" endtime="20201112 09:53:59.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.036" endtime="20201112 09:53:59.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.035" endtime="20201112 09:53:59.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.346" level="INFO">${RESULT} = [{'time': 0.022245306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010736199999999974, 'source_diff': 0.00010736199999999974}, {'time': 0.022375319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.343" endtime="20201112 09:53:59.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:59.359" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:59.347" endtime="20201112 09:53:59.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.364" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:53:59.363" endtime="20201112 09:53:59.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.366" level="INFO">VALUE: [0.00010736199999999974, 0.00010880500000000001, 0.00010837499999999736, 0.00010897199999999885, 0.00010747200000000082, 0.00010779199999999892, 0.0001085560000000027, 0.00010870900000000197, 0.00010830599999999899, 0.00010723600000000014, 0.00010812500000000058, 0.00010848600000000139, 0.00010734700000000069, 0.00010719400000000143, 0.00010883399999999863, 0.00010837500000000083, 0.00010747300000000029, 0.00010813900000000015, 0.00010762500000000008, 0.00010844399999999921, 0.00010847199999999835, 0.00010747199999999735, 0.00010780599999999849, 0.00010705599999999774, 0.0001073889999999994, 0.00010713899999999915, 0.00010847299999999782, 0.00010762500000000008, 0.00010813900000000015, 0.00010797199999999785, 0.00010730499999999851, 0.0001075560000000017, 0.0001080699999999983, 0.00010840299999999997, 0.00010830599999999899, 0.00010794399999999871, 0.00010763800000000018, 0.00010730499999999851, 0.00010766599999999932, 0.00010865300000000022, 0.00010829199999999942, 0.0001088890000000009, 0.00010827799999999985, 0.00010786100000000076, 0.00010880500000000001, 0.00010855499999999976, 0.00010841699999999954, 0.00010895799999999928, 0.00010847200000000182, 0.00010901299999999808]</msg>
<status status="PASS" starttime="20201112 09:53:59.365" endtime="20201112 09:53:59.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.360" endtime="20201112 09:53:59.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.370" endtime="20201112 09:53:59.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.374" endtime="20201112 09:53:59.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.372" endtime="20201112 09:53:59.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.368" endtime="20201112 09:53:59.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.999" endtime="20201112 09:53:59.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.999" endtime="20201112 09:53:59.395"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.403" endtime="20201112 09:53:59.423"></status>
</kw>
<msg timestamp="20201112 09:53:59.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.402" endtime="20201112 09:53:59.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.425" endtime="20201112 09:53:59.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.427" endtime="20201112 09:53:59.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.399" endtime="20201112 09:53:59.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.397" endtime="20201112 09:53:59.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.437" endtime="20201112 09:53:59.723"></status>
</kw>
<msg timestamp="20201112 09:53:59.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.436" endtime="20201112 09:53:59.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.727" endtime="20201112 09:53:59.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.735" endtime="20201112 09:53:59.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.433" endtime="20201112 09:53:59.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.431" endtime="20201112 09:53:59.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.741" level="INFO">${RESULT} = [{'time': 0.022319403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001105280000000021, 'source_diff': 0.0001105280000000021}, {'time': 0.022451417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:59.738" endtime="20201112 09:53:59.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:53:59.754" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:53:59.742" endtime="20201112 09:53:59.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.759" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:53:59.758" endtime="20201112 09:53:59.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.761" level="INFO">VALUE: [0.0001105280000000021, 0.00011045900000000025, 0.00011013900000000215, 0.00010961099999999904, 0.00010930500000000051, 0.00011055500000000176, 0.0001105419999999982, 0.00010900000000000146, 0.00010972200000000307, 0.00011063900000000265, 0.00011062499999999961, 0.00011095899999999728, 0.00011044400000000121, 0.00011086100000000029, 0.00011023599999999967, 0.00010963900000000165, 0.00011065300000000222, 0.0001100700000000003, 0.00011026400000000228, 0.00011055600000000124, 0.00010930500000000051, 0.00010945799999999978, 0.00011031900000000108, 0.00010988899999999843, 0.00010941700000000054, 0.00010982000000000006, 0.00011087499999999986, 0.00010913900000000115, 0.00010997299999999932, 0.00010911100000000201, 0.00010913899999999768, 0.00011062499999999961, 0.00011026400000000228, 0.00010972200000000307, 0.00010983399999999963, 0.00010972299999999907, 0.00010995800000000028, 0.00010962500000000208, 0.00011080499999999854, 0.00011005500000000126, 0.00010987500000000233, 0.00010915300000000072, 0.00010913899999999768, 0.00010983399999999963, 0.00011005500000000126, 0.00011088799999999996, 0.00010913900000000115, 0.00011097200000000085, 0.00010927799999999738, 0.00010937499999999836]</msg>
<status status="PASS" starttime="20201112 09:53:59.760" endtime="20201112 09:53:59.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.755" endtime="20201112 09:53:59.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.765" endtime="20201112 09:53:59.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.768" endtime="20201112 09:53:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.767" endtime="20201112 09:53:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.763" endtime="20201112 09:53:59.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.396" endtime="20201112 09:53:59.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.395" endtime="20201112 09:53:59.789"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.798" endtime="20201112 09:53:59.818"></status>
</kw>
<msg timestamp="20201112 09:53:59.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.796" endtime="20201112 09:53:59.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.820" endtime="20201112 09:53:59.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.822" endtime="20201112 09:53:59.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.794" endtime="20201112 09:53:59.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.792" endtime="20201112 09:53:59.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.832" endtime="20201112 09:54:00.118"></status>
</kw>
<msg timestamp="20201112 09:54:00.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.831" endtime="20201112 09:54:00.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.123" endtime="20201112 09:54:00.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.131" endtime="20201112 09:54:00.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.828" endtime="20201112 09:54:00.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.827" endtime="20201112 09:54:00.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.137" level="INFO">${RESULT} = [{'time': 0.022102278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001120419999999997, 'source_diff': 0.0001120419999999997}, {'time': 0.022236278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:00.134" endtime="20201112 09:54:00.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:00.151" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:00.138" endtime="20201112 09:54:00.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.156" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:54:00.155" endtime="20201112 09:54:00.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.158" level="INFO">VALUE: [0.0001120419999999997, 0.00011213900000000068, 0.00011148700000000039, 0.00011286100000000229, 0.00011123600000000067, 0.00011281900000000011, 0.00011177799999999988, 0.00011127800000000285, 0.00011104200000000217, 0.00011169499999999846, 0.00011297299999999885, 0.00011130600000000199, 0.0001119160000000001, 0.00011180499999999954, 0.00011269399999999999, 0.00011295799999999981, 0.00011247199999999888, 0.00011211100000000154, 0.00011113899999999968, 0.00011279200000000045, 0.00011187500000000086, 0.00011245800000000278, 0.00011243000000000017, 0.00011165299999999975, 0.00011113899999999968, 0.00011180600000000249, 0.00011206999999999884, 0.00011159700000000147, 0.00011211100000000154, 0.00011170800000000203, 0.00011295799999999981, 0.00011263900000000118, 0.00011197199999999838, 0.00011212499999999764, 0.00011245800000000278, 0.00011197299999999785, 0.00011197300000000132, 0.00011120799999999806, 0.00011130499999999904, 0.0001120549999999998, 0.00011106899999999836, 0.00011236100000000179, 0.00011262500000000161, 0.00011213900000000068, 0.00011298699999999842, 0.00011198600000000142, 0.0001119160000000001, 0.00011202800000000013, 0.00011263899999999771, 0.00011297199999999938]</msg>
<status status="PASS" starttime="20201112 09:54:00.157" endtime="20201112 09:54:00.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.152" endtime="20201112 09:54:00.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.162" endtime="20201112 09:54:00.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.165" endtime="20201112 09:54:00.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.164" endtime="20201112 09:54:00.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.160" endtime="20201112 09:54:00.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.790" endtime="20201112 09:54:00.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.790" endtime="20201112 09:54:00.186"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.195" endtime="20201112 09:54:00.215"></status>
</kw>
<msg timestamp="20201112 09:54:00.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.193" endtime="20201112 09:54:00.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.216" endtime="20201112 09:54:00.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.219" endtime="20201112 09:54:00.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.191" endtime="20201112 09:54:00.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.188" endtime="20201112 09:54:00.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.229" endtime="20201112 09:54:00.514"></status>
</kw>
<msg timestamp="20201112 09:54:00.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.227" endtime="20201112 09:54:00.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.518" endtime="20201112 09:54:00.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.526" endtime="20201112 09:54:00.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.225" endtime="20201112 09:54:00.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.223" endtime="20201112 09:54:00.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.533" level="INFO">${RESULT} = [{'time': 0.022004944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011472199999999766, 'source_diff': 0.00011472199999999766}, {'time': 0.022132944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:00.530" endtime="20201112 09:54:00.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:00.546" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:00.534" endtime="20201112 09:54:00.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.551" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:54:00.550" endtime="20201112 09:54:00.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.553" level="INFO">VALUE: [0.00011472199999999766, 0.00011488800000000049, 0.00011315300000000125, 0.00011365300000000175, 0.00011347199999999988, 0.00011479200000000245, 0.00011488899999999996, 0.00011347199999999988, 0.00011430599999999805, 0.0001130689999999969, 0.00011370799999999709, 0.00011363900000000218, 0.00011362500000000261, 0.00011332000000000009, 0.000114903000000003, 0.00011433400000000066, 0.0001132229999999991, 0.00011447300000000035, 0.00011313799999999874, 0.00011395799999999734, 0.00011413900000000268, 0.00011348599999999945, 0.00011411100000000007, 0.00011363899999999871, 0.00011395900000000028, 0.00011347300000000282, 0.00011330500000000104, 0.00011372200000000013, 0.00011447200000000088, 0.00011316700000000082, 0.00011484800000000073, 0.00011420800000000106, 0.00011463899999999971, 0.00011332000000000009, 0.00011488899999999996, 0.0001145689999999984, 0.00011358300000000043, 0.00011430499999999857, 0.00011308299999999993, 0.0001133749999999989, 0.00011504099999999975, 0.00011376399999999884, 0.00011369500000000046, 0.00011397200000000038, 0.00011412499999999964, 0.00011447199999999741, 0.00011348599999999945, 0.00011447200000000088, 0.00011498600000000095, 0.00011497300000000085]</msg>
<status status="PASS" starttime="20201112 09:54:00.552" endtime="20201112 09:54:00.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.547" endtime="20201112 09:54:00.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.557" endtime="20201112 09:54:00.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.560" endtime="20201112 09:54:00.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.558" endtime="20201112 09:54:00.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.555" endtime="20201112 09:54:00.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.187" endtime="20201112 09:54:00.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.186" endtime="20201112 09:54:00.581"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.590" endtime="20201112 09:54:00.610"></status>
</kw>
<msg timestamp="20201112 09:54:00.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.588" endtime="20201112 09:54:00.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.611" endtime="20201112 09:54:00.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.614" endtime="20201112 09:54:00.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.586" endtime="20201112 09:54:00.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.583" endtime="20201112 09:54:00.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.624" endtime="20201112 09:54:00.908"></status>
</kw>
<msg timestamp="20201112 09:54:00.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.622" endtime="20201112 09:54:00.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.912" endtime="20201112 09:54:00.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.921" endtime="20201112 09:54:00.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.620" endtime="20201112 09:54:00.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.618" endtime="20201112 09:54:00.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.928" level="INFO">${RESULT} = [{'time': 0.022230625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011654200000000073, 'source_diff': 0.00011654200000000073}, {'time': 0.022364639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:00.924" endtime="20201112 09:54:00.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:00.941" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:00.929" endtime="20201112 09:54:00.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.945" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:54:00.944" endtime="20201112 09:54:00.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.948" level="INFO">VALUE: [0.00011654200000000073, 0.00011563899999999724, 0.00011597200000000238, 0.00011679200000000098, 0.00011576400000000084, 0.00011677700000000193, 0.000116388999999998, 0.00011597199999999891, 0.00011663900000000171, 0.00011547199999999841, 0.00011530599999999905, 0.00011522299999999763, 0.00011656999999999987, 0.00011663799999999877, 0.00011680500000000107, 0.00011520799999999859, 0.00011530599999999905, 0.0001167499999999988, 0.00011695899999999981, 0.00011633399999999919, 0.00011534800000000123, 0.00011629099999999754, 0.00011506900000000236, 0.00011505499999999932, 0.00011604200000000023, 0.0001163750000000019, 0.00011563900000000071, 0.00011663900000000171, 0.00011629200000000048, 0.00011522200000000163, 0.00011581899999999964, 0.00011655500000000082, 0.00011655499999999736, 0.0001153750000000009, 0.00011583399999999869, 0.0001158750000000014, 0.00011512500000000064, 0.00011613799999999827, 0.00011645799999999984, 0.00011597199999999891, 0.00011698599999999948, 0.00011598599999999848, 0.00011698599999999948, 0.00011644499999999974, 0.00011544499999999874, 0.0001152499999999973, 0.00011601400000000109, 0.00011529199999999948, 0.00011597200000000238, 0.00011647199999999941]</msg>
<status status="PASS" starttime="20201112 09:54:00.946" endtime="20201112 09:54:00.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.942" endtime="20201112 09:54:00.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.951" endtime="20201112 09:54:00.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.955" endtime="20201112 09:54:00.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.953" endtime="20201112 09:54:00.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.950" endtime="20201112 09:54:00.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.582" endtime="20201112 09:54:00.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.581" endtime="20201112 09:54:00.976"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.984" endtime="20201112 09:54:01.005"></status>
</kw>
<msg timestamp="20201112 09:54:01.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.983" endtime="20201112 09:54:01.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.007" endtime="20201112 09:54:01.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.009" endtime="20201112 09:54:01.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.980" endtime="20201112 09:54:01.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.978" endtime="20201112 09:54:01.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.019" endtime="20201112 09:54:01.306"></status>
</kw>
<msg timestamp="20201112 09:54:01.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.018" endtime="20201112 09:54:01.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.310" endtime="20201112 09:54:01.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.318" endtime="20201112 09:54:01.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.015" endtime="20201112 09:54:01.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.014" endtime="20201112 09:54:01.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.324" level="INFO">${RESULT} = [{'time': 0.022356917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011818100000000192, 'source_diff': 0.00011818100000000192}, {'time': 0.022494944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:01.321" endtime="20201112 09:54:01.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:01.338" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:01.325" endtime="20201112 09:54:01.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.342" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:54:01.341" endtime="20201112 09:54:01.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.346" level="INFO">VALUE: [0.00011818100000000192, 0.00011873599999999776, 0.00011822200000000116, 0.00011769400000000152, 0.00011880599999999908, 0.00011822200000000116, 0.00011854099999999979, 0.00011863900000000024, 0.00011780599999999808, 0.0001188890000000005, 0.0001184439999999988, 0.00011901400000000062, 0.00011763899999999924, 0.00011833400000000119, 0.00011876299999999743, 0.00011847300000000088, 0.00011862500000000067, 0.00011813899999999974, 0.00011777699999999947, 0.000118389, 0.00011831900000000214, 0.0001178889999999995, 0.0001176110000000001, 0.00011727799999999844, 0.00011890300000000006, 0.00011747299999999988, 0.00011897199999999844, 0.00011713899999999874, 0.00011859699999999807, 0.00011795799999999787, 0.0001172499999999993, 0.00011837499999999695, 0.00011745900000000031, 0.00011815199999999984, 0.0001186249999999972, 0.00011727800000000191, 0.00011888899999999702, 0.00011879199999999951, 0.0001175699999999974, 0.00011822200000000116, 0.00011901400000000062, 0.00011763899999999924, 0.0001178049999999986, 0.00011887500000000092, 0.00011858300000000196, 0.00011845800000000184, 0.00011712499999999917, 0.00011729199999999801, 0.00011807000000000137, 0.00011872200000000166]</msg>
<status status="PASS" starttime="20201112 09:54:01.344" endtime="20201112 09:54:01.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.338" endtime="20201112 09:54:01.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.351" endtime="20201112 09:54:01.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.355" endtime="20201112 09:54:01.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.353" endtime="20201112 09:54:01.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.348" endtime="20201112 09:54:01.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.976" endtime="20201112 09:54:01.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.976" endtime="20201112 09:54:01.379"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.392" endtime="20201112 09:54:01.415"></status>
</kw>
<msg timestamp="20201112 09:54:01.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.390" endtime="20201112 09:54:01.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.416" endtime="20201112 09:54:01.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.419" endtime="20201112 09:54:01.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.386" endtime="20201112 09:54:01.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.383" endtime="20201112 09:54:01.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.429" endtime="20201112 09:54:01.714"></status>
</kw>
<msg timestamp="20201112 09:54:01.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029102833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029222361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.427" endtime="20201112 09:54:01.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029102833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029222361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.718" endtime="20201112 09:54:01.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.726" endtime="20201112 09:54:01.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.425" endtime="20201112 09:54:01.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.423" endtime="20201112 09:54:01.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.733" level="INFO">${RESULT} = [{'time': 0.029222361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011952799999999722, 'source_diff': 0.00011952799999999722}, {'time': 0.029360375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:01.730" endtime="20201112 09:54:01.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:01.747" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:01.734" endtime="20201112 09:54:01.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.752" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:54:01.751" endtime="20201112 09:54:01.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.754" level="INFO">VALUE: [0.00011952799999999722, 0.00012030600000000058, 0.00012086099999999989, 0.00012063899999999877, 0.0001196249999999982, 0.00012030499999999764, 0.00012072200000000019, 0.00011997199999999944, 0.00012098600000000001, 0.00012079200000000151, 0.00011904199999999976, 0.00012005600000000033, 0.0001198890000000015, 0.00011913800000000127, 0.00012016700000000088, 0.00012047200000000341, 0.0001201249999999987, 0.0001196249999999982, 0.00012074999999999586, 0.00012088899999999903, 0.00011941599999999719, 0.00012080499999999467, 0.00012002700000000172, 0.00012073600000000323, 0.00012065299999999834, 0.0001191249999999977, 0.00012095899999999687, 0.00012095900000000381, 0.00012015199999999837, 0.0001191379999999978, 0.00012031900000000068, 0.00011922199999999522, 0.0001204579999999969, 0.00012082000000000065, 0.00011931999999999915, 0.00012016599999999794, 0.00011995900000000281, 0.00012048600000000298, 0.00012013899999999827, 0.00011995800000000334, 0.00012063899999999877, 0.00011963900000000471, 0.00012033399999999972, 0.00011970900000000256, 0.00011947300000000188, 0.00011979100000000104, 0.00012005499999999392, 0.00011937499999999795, 0.00011965299999999734, 0.00011945800000000284]</msg>
<status status="PASS" starttime="20201112 09:54:01.753" endtime="20201112 09:54:01.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.748" endtime="20201112 09:54:01.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.757" endtime="20201112 09:54:01.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.761" endtime="20201112 09:54:01.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.759" endtime="20201112 09:54:01.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.756" endtime="20201112 09:54:01.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.381" endtime="20201112 09:54:01.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.380" endtime="20201112 09:54:01.782"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.791" endtime="20201112 09:54:01.811"></status>
</kw>
<msg timestamp="20201112 09:54:01.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.789" endtime="20201112 09:54:01.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.812" endtime="20201112 09:54:01.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.815" endtime="20201112 09:54:01.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.786" endtime="20201112 09:54:01.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.784" endtime="20201112 09:54:01.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.825" endtime="20201112 09:54:02.111"></status>
</kw>
<msg timestamp="20201112 09:54:02.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.823" endtime="20201112 09:54:02.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.116" endtime="20201112 09:54:02.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.124" endtime="20201112 09:54:02.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.821" endtime="20201112 09:54:02.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.819" endtime="20201112 09:54:02.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.130" level="INFO">${RESULT} = [{'time': 0.022243667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012136100000000039, 'source_diff': 0.00012136100000000039}, {'time': 0.022387694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:02.127" endtime="20201112 09:54:02.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.143" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:02.131" endtime="20201112 09:54:02.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.148" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.147" endtime="20201112 09:54:02.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.151" level="INFO">VALUE: [0.00012136100000000039, 0.00012198600000000101, 0.00012130499999999864, 0.00012177799999999947, 0.00012192999999999926, 0.0001228059999999996, 0.00012188900000000003, 0.00012180600000000208, 0.00012188900000000003, 0.00012145800000000137, 0.00012197200000000144, 0.0001227909999999971, 0.0001214449999999978, 0.00012147200000000094, 0.000122083000000002, 0.00012197300000000091, 0.0001221250000000007, 0.00012180499999999914, 0.00012205500000000286, 0.00012137499999999996, 0.0001219579999999984, 0.00012265299999999688, 0.00012297199999999897, 0.00012113899999999928, 0.00012197299999999744, 0.000122986000000002, 0.00012147200000000094, 0.0001212090000000006, 0.00012145800000000137, 0.00012213900000000028, 0.00012197300000000091, 0.00012130600000000158, 0.00012155600000000183, 0.00012138800000000005, 0.00012198600000000101, 0.0001211249999999997, 0.00012232000000000215, 0.00012225000000000083, 0.00012215299999999985, 0.00012152800000000269, 0.00012247300000000141, 0.00012129099999999907, 0.00012152699999999975, 0.00012225000000000083, 0.0001219579999999984, 0.00012215299999999985, 0.00012180599999999861, 0.00012105599999999786, 0.0001222090000000016, 0.00012261100000000164]</msg>
<status status="PASS" starttime="20201112 09:54:02.149" endtime="20201112 09:54:02.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.144" endtime="20201112 09:54:02.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.154" endtime="20201112 09:54:02.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.157" endtime="20201112 09:54:02.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.156" endtime="20201112 09:54:02.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.152" endtime="20201112 09:54:02.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.783" endtime="20201112 09:54:02.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.782" endtime="20201112 09:54:02.178"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.187" endtime="20201112 09:54:02.208"></status>
</kw>
<msg timestamp="20201112 09:54:02.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.185" endtime="20201112 09:54:02.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.210" endtime="20201112 09:54:02.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.212" endtime="20201112 09:54:02.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.183" endtime="20201112 09:54:02.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.181" endtime="20201112 09:54:02.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.222" endtime="20201112 09:54:02.509"></status>
</kw>
<msg timestamp="20201112 09:54:02.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.221" endtime="20201112 09:54:02.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.513" endtime="20201112 09:54:02.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.521" endtime="20201112 09:54:02.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.218" endtime="20201112 09:54:02.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.216" endtime="20201112 09:54:02.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.528" level="INFO">${RESULT} = [{'time': 0.022071472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000123680000000001, 'source_diff': 0.000123680000000001}, {'time': 0.022215486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:02.524" endtime="20201112 09:54:02.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.541" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:02.529" endtime="20201112 09:54:02.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.545" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.544" endtime="20201112 09:54:02.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.548" level="INFO">VALUE: [0.000123680000000001, 0.00012417999999999804, 0.00012347199999999947, 0.00012430599999999764, 0.00012336099999999892, 0.00012397199999999997, 0.00012319400000000008, 0.0001241389999999988, 0.00012330500000000064, 0.0001247360000000003, 0.0001243060000000011, 0.00012457000000000093, 0.00012420900000000012, 0.00012379200000000104, 0.0001247360000000003, 0.00012363900000000178, 0.00012412499999999924, 0.00012320799999999965, 0.00012365300000000135, 0.00012329200000000054, 0.00012488899999999956, 0.00012497300000000044, 0.00012497200000000097, 0.00012397199999999997, 0.0001236389999999983, 0.0001242779999999985, 0.0001235420000000008, 0.00012419499999999709, 0.0001243060000000011, 0.00012405500000000139, 0.00012341700000000067, 0.0001244169999999982, 0.00012484700000000085, 0.00012472200000000072, 0.0001249719999999975, 0.00012320799999999965, 0.0001231519999999979, 0.00012380500000000114, 0.00012320799999999965, 0.00012397199999999997, 0.00012465300000000235, 0.0001231389999999978, 0.00012445900000000037, 0.0001239450000000003, 0.0001249450000000013, 0.00012406900000000096, 0.0001249719999999975, 0.0001240970000000001, 0.00012397199999999997, 0.00012482000000000118]</msg>
<status status="PASS" starttime="20201112 09:54:02.546" endtime="20201112 09:54:02.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.542" endtime="20201112 09:54:02.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.551" endtime="20201112 09:54:02.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.555" endtime="20201112 09:54:02.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.553" endtime="20201112 09:54:02.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.550" endtime="20201112 09:54:02.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.179" endtime="20201112 09:54:02.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.179" endtime="20201112 09:54:02.575"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.584" endtime="20201112 09:54:02.605"></status>
</kw>
<msg timestamp="20201112 09:54:02.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.583" endtime="20201112 09:54:02.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.607" endtime="20201112 09:54:02.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.609" endtime="20201112 09:54:02.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.580" endtime="20201112 09:54:02.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.578" endtime="20201112 09:54:02.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.619" endtime="20201112 09:54:02.905"></status>
</kw>
<msg timestamp="20201112 09:54:02.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.617" endtime="20201112 09:54:02.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.909" endtime="20201112 09:54:02.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.917" endtime="20201112 09:54:02.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.615" endtime="20201112 09:54:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.613" endtime="20201112 09:54:02.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.923" level="INFO">${RESULT} = [{'time': 0.022081403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012654200000000032, 'source_diff': 0.00012654200000000032}, {'time': 0.022223417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:02.920" endtime="20201112 09:54:02.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:02.936" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:02.924" endtime="20201112 09:54:02.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.941" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:54:02.940" endtime="20201112 09:54:02.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.943" level="INFO">VALUE: [0.00012654200000000032, 0.00012697299999999898, 0.00012581899999999924, 0.00012555499999999942, 0.00012522200000000122, 0.00012680500000000067, 0.00012618000000000004, 0.00012559699999999813, 0.0001269719999999995, 0.00012536100000000092, 0.0001267230000000022, 0.00012595799999999893, 0.00012580499999999967, 0.00012588900000000056, 0.00012530599999999864, 0.00012512500000000024, 0.00012673599999999882, 0.00012562500000000074, 0.0001261390000000008, 0.00012595799999999893, 0.00012615300000000038, 0.00012630599999999964, 0.0001260559999999994, 0.00012543100000000224, 0.00012697299999999898, 0.00012626400000000093, 0.00012638900000000106, 0.000125471999999998, 0.00012558300000000203, 0.0001251389999999998, 0.00012575000000000086, 0.00012519500000000156, 0.00012512500000000024, 0.00012563800000000083, 0.00012511100000000067, 0.0001259719999999985, 0.00012513900000000328, 0.00012562500000000074, 0.00012676400000000143, 0.00012572200000000172, 0.00012662499999999827, 0.00012580499999999967, 0.00012616600000000047, 0.00012512500000000024, 0.00012697200000000297, 0.00012663899999999784, 0.00012630599999999964, 0.00012656999999999946, 0.0001258879999999976, 0.00012561100000000117]</msg>
<status status="PASS" starttime="20201112 09:54:02.942" endtime="20201112 09:54:02.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.937" endtime="20201112 09:54:02.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.947" endtime="20201112 09:54:02.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.950" endtime="20201112 09:54:02.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.949" endtime="20201112 09:54:02.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.945" endtime="20201112 09:54:02.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.576" endtime="20201112 09:54:02.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.576" endtime="20201112 09:54:02.971"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.980" endtime="20201112 09:54:03.001"></status>
</kw>
<msg timestamp="20201112 09:54:03.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.978" endtime="20201112 09:54:03.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.003" endtime="20201112 09:54:03.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.005" endtime="20201112 09:54:03.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.976" endtime="20201112 09:54:03.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.974" endtime="20201112 09:54:03.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.015" endtime="20201112 09:54:03.300"></status>
</kw>
<msg timestamp="20201112 09:54:03.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.014" endtime="20201112 09:54:03.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.304" endtime="20201112 09:54:03.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.312" endtime="20201112 09:54:03.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.011" endtime="20201112 09:54:03.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.009" endtime="20201112 09:54:03.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.319" level="INFO">${RESULT} = [{'time': 0.022322458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001271940000000006, 'source_diff': 0.0001271940000000006}, {'time': 0.0224645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:03.316" endtime="20201112 09:54:03.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.333" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:03.320" endtime="20201112 09:54:03.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.337" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.336" endtime="20201112 09:54:03.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.340" level="INFO">VALUE: [0.0001271940000000006, 0.00012806899999999802, 0.0001283889999999996, 0.0001278200000000007, 0.00012737499999999902, 0.00012848700000000005, 0.00012712500000000224, 0.0001279720000000005, 0.00012834700000000088, 0.00012705500000000092, 0.0001280560000000014, 0.0001282499999999999, 0.00012808400000000053, 0.00012812499999999977, 0.000128472000000001, 0.0001279720000000005, 0.00012798600000000007, 0.00012880599999999867, 0.00012872200000000125, 0.000128472000000001, 0.00012713899999999834, 0.00012730599999999717, 0.00012840299999999916, 0.00012836100000000045, 0.00012790300000000213, 0.00012833400000000078, 0.0001288890000000001, 0.00012858400000000103, 0.00012798600000000007, 0.0001281110000000002, 0.0001289720000000015, 0.0001288049999999992, 0.00012819500000000109, 0.00012884800000000085, 0.0001280560000000014, 0.00012887500000000052, 0.0001274589999999999, 0.00012881900000000224, 0.00012855500000000242, 0.00012873600000000082, 0.0001272780000000015, 0.00012723599999999932, 0.00012831999999999774, 0.0001280690000000015, 0.00012854099999999938, 0.00012872200000000125, 0.0001288049999999992, 0.00012840299999999916, 0.00012776399999999896, 0.0001272499999999989]</msg>
<status status="PASS" starttime="20201112 09:54:03.338" endtime="20201112 09:54:03.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.334" endtime="20201112 09:54:03.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.344" endtime="20201112 09:54:03.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.347" endtime="20201112 09:54:03.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.345" endtime="20201112 09:54:03.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.342" endtime="20201112 09:54:03.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.972" endtime="20201112 09:54:03.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.972" endtime="20201112 09:54:03.368"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.376" endtime="20201112 09:54:03.398"></status>
</kw>
<msg timestamp="20201112 09:54:03.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.375" endtime="20201112 09:54:03.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.399" endtime="20201112 09:54:03.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.402" endtime="20201112 09:54:03.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.372" endtime="20201112 09:54:03.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.370" endtime="20201112 09:54:03.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.412" endtime="20201112 09:54:03.696"></status>
</kw>
<msg timestamp="20201112 09:54:03.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02206475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:03.410" endtime="20201112 09:54:03.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02206475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:03.700" endtime="20201112 09:54:03.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.708" endtime="20201112 09:54:03.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.408" endtime="20201112 09:54:03.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.406" endtime="20201112 09:54:03.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.715" level="INFO">${RESULT} = [{'time': 0.02206475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013019400000000014, 'source_diff': 0.00013019400000000014}, {'time': 0.022206764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:03.712" endtime="20201112 09:54:03.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:03.728" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:03.716" endtime="20201112 09:54:03.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.733" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:54:03.732" endtime="20201112 09:54:03.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.735" level="INFO">VALUE: [0.00013019400000000014, 0.00012904199999999935, 0.00012973599999999835, 0.00013095899999999994, 0.00013062500000000227, 0.000129472000000002, 0.00012973600000000182, 0.00013005599999999992, 0.0001297079999999992, 0.00012997199999999903, 0.00012997300000000198, 0.0001294590000000019, 0.0001296530000000004, 0.0001291110000000012, 0.0001298050000000002, 0.00013073599999999935, 0.00012945899999999844, 0.0001299590000000024, 0.00013030600000000017, 0.0001309440000000009, 0.00013016700000000048, 0.00012980499999999673, 0.00012976400000000096, 0.00013080600000000067, 0.00012987499999999805, 0.00013062500000000227, 0.00013031900000000027, 0.00013022199999999928, 0.00012998600000000207, 0.0001304859999999991, 0.0001291249999999973, 0.0001306249999999988, 0.00013045899999999944, 0.00013004200000000035, 0.00013063900000000184, 0.0001301249999999983, 0.00012947199999999853, 0.0001308059999999972, 0.00012904199999999935, 0.00012972300000000173, 0.00012994499999999937, 0.00013013800000000186, 0.0001296110000000017, 0.0001306530000000014, 0.0001309859999999996, 0.00012947199999999853, 0.00012994499999999937, 0.00012926400000000046, 0.00012937500000000102, 0.00013029099999999766]</msg>
<status status="PASS" starttime="20201112 09:54:03.734" endtime="20201112 09:54:03.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.729" endtime="20201112 09:54:03.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.739" endtime="20201112 09:54:03.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.742" endtime="20201112 09:54:03.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.740" endtime="20201112 09:54:03.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.737" endtime="20201112 09:54:03.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.369" endtime="20201112 09:54:03.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.368" endtime="20201112 09:54:03.763"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.772" endtime="20201112 09:54:03.793"></status>
</kw>
<msg timestamp="20201112 09:54:03.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.770" endtime="20201112 09:54:03.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.794" endtime="20201112 09:54:03.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.797" endtime="20201112 09:54:03.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.767" endtime="20201112 09:54:03.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.765" endtime="20201112 09:54:03.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.807" endtime="20201112 09:54:04.093"></status>
</kw>
<msg timestamp="20201112 09:54:04.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02232075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:03.805" endtime="20201112 09:54:04.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02232075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:04.097" endtime="20201112 09:54:04.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.105" endtime="20201112 09:54:04.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.803" endtime="20201112 09:54:04.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.801" endtime="20201112 09:54:04.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.112" level="INFO">${RESULT} = [{'time': 0.02232075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001328189999999993, 'source_diff': 0.0001328189999999993}, {'time': 0.022466778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:04.109" endtime="20201112 09:54:04.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.126" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:04.113" endtime="20201112 09:54:04.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.131" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.129" endtime="20201112 09:54:04.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.133" level="INFO">VALUE: [0.0001328189999999993, 0.00013283399999999834, 0.00013255599999999895, 0.00013141600000000225, 0.0001313189999999978, 0.0001325409999999999, 0.0001322219999999978, 0.0001320969999999977, 0.00013265299999999994, 0.00013215299999999944, 0.00013115299999999844, 0.000132264, 0.00013140199999999921, 0.00013280499999999973, 0.00013238900000000012, 0.00013195800000000146, 0.00013197199999999756, 0.00013279199999999963, 0.00013204199999999888, 0.00013172300000000026, 0.0001313470000000004, 0.00013156899999999805, 0.0001318890000000031, 0.00013247200000000153, 0.00013180600000000167, 0.00013225000000000042, 0.00013247200000000153, 0.00013183300000000134, 0.00013133300000000084, 0.00013297199999999856, 0.00013127800000000203, 0.00013222200000000128, 0.00013279199999999963, 0.00013237500000000055, 0.0001321380000000004, 0.00013244399999999892, 0.00013280499999999973, 0.00013151399999999924, 0.00013205600000000192, 0.00013122299999999976, 0.00013195900000000094, 0.00013186100000000048, 0.0001326250000000008, 0.0001320279999999993, 0.00013255600000000242, 0.00013138899999999912, 0.0001328059999999992, 0.0001327640000000005, 0.00013195900000000094, 0.0001328189999999993]</msg>
<status status="PASS" starttime="20201112 09:54:04.132" endtime="20201112 09:54:04.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.127" endtime="20201112 09:54:04.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.144" endtime="20201112 09:54:04.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.147" endtime="20201112 09:54:04.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.146" endtime="20201112 09:54:04.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.142" endtime="20201112 09:54:04.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.764" endtime="20201112 09:54:04.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.763" endtime="20201112 09:54:04.168"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.178" endtime="20201112 09:54:04.202"></status>
</kw>
<msg timestamp="20201112 09:54:04.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.176" endtime="20201112 09:54:04.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.205" endtime="20201112 09:54:04.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.211" endtime="20201112 09:54:04.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.173" endtime="20201112 09:54:04.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.171" endtime="20201112 09:54:04.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.233" endtime="20201112 09:54:04.537"></status>
</kw>
<msg timestamp="20201112 09:54:04.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023712181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023845347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.229" endtime="20201112 09:54:04.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023712181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023845347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.541" endtime="20201112 09:54:04.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.549" endtime="20201112 09:54:04.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.224" endtime="20201112 09:54:04.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.220" endtime="20201112 09:54:04.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.556" level="INFO">${RESULT} = [{'time': 0.023845347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013316600000000053, 'source_diff': 0.00013316600000000053}, {'time': 0.023991389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.553" endtime="20201112 09:54:04.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.570" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:04.557" endtime="20201112 09:54:04.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.574" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.573" endtime="20201112 09:54:04.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.577" level="INFO">VALUE: [0.00013316600000000053, 0.00013356999999999952, 0.00013384699999999944, 0.00013398599999999913, 0.0001334999999999982, 0.0001331380000000014, 0.0001334579999999995, 0.00013447200000000006, 0.0001344580000000005, 0.00013482000000000077, 0.00013484700000000044, 0.00013415200000000196, 0.0001338060000000002, 0.00013372199999999931, 0.00013415300000000144, 0.00013347200000000253, 0.0001339449999999999, 0.000133167, 0.00013345900000000244, 0.000133651999999998, 0.0001344580000000005, 0.00013315300000000044, 0.0001341389999999984, 0.00013480599999999773, 0.00013372199999999931, 0.00013498600000000013, 0.00013419400000000067, 0.00013344399999999992, 0.00013315299999999697, 0.00013430599999999723, 0.00013373600000000235, 0.0001343060000000007, 0.00013420899999999972, 0.0001333059999999997, 0.00013438800000000264, 0.0001344580000000005, 0.00013362499999999833, 0.00013397199999999956, 0.00013433399999999984, 0.00013356999999999952, 0.00013437499999999908, 0.00013448599999999963, 0.0001348190000000013, 0.00013455500000000148, 0.0001336800000000006, 0.00013383399999999934, 0.00013337499999999808, 0.00013412499999999883, 0.00013466600000000203, 0.00013379100000000116]</msg>
<status status="PASS" starttime="20201112 09:54:04.575" endtime="20201112 09:54:04.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.570" endtime="20201112 09:54:04.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.581" endtime="20201112 09:54:04.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.584" endtime="20201112 09:54:04.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.583" endtime="20201112 09:54:04.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.579" endtime="20201112 09:54:04.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.169" endtime="20201112 09:54:04.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.169" endtime="20201112 09:54:04.605"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.614" endtime="20201112 09:54:04.636"></status>
</kw>
<msg timestamp="20201112 09:54:04.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.613" endtime="20201112 09:54:04.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.638" endtime="20201112 09:54:04.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.640" endtime="20201112 09:54:04.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.610" endtime="20201112 09:54:04.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.608" endtime="20201112 09:54:04.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.651" endtime="20201112 09:54:04.938"></status>
</kw>
<msg timestamp="20201112 09:54:04.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.649" endtime="20201112 09:54:04.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.942" endtime="20201112 09:54:04.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.951" endtime="20201112 09:54:04.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.647" endtime="20201112 09:54:04.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.645" endtime="20201112 09:54:04.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.958" level="INFO">${RESULT} = [{'time': 0.022689653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013652800000000034, 'source_diff': 0.00013652800000000034}, {'time': 0.022839694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.954" endtime="20201112 09:54:04.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:04.972" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:04.959" endtime="20201112 09:54:04.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.977" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:54:04.976" endtime="20201112 09:54:04.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.980" level="INFO">VALUE: [0.00013652800000000034, 0.00013648600000000163, 0.00013515200000000296, 0.00013543000000000235, 0.0001356389999999999, 0.00013598600000000113, 0.00013579199999999916, 0.00013588900000000015, 0.0001356389999999999, 0.00013698600000000213, 0.00013630500000000323, 0.00013590299999999972, 0.0001366390000000009, 0.0001354580000000015, 0.00013680599999999973, 0.00013605599999999898, 0.00013504099999999894, 0.00013570800000000174, 0.00013530500000000223, 0.00013572199999999784, 0.0001361390000000004, 0.0001351389999999994, 0.00013612500000000083, 0.00013629199999999966, 0.0001360549999999995, 0.00013622199999999834, 0.00013631899999999933, 0.00013606999999999855, 0.00013555600000000195, 0.00013655599999999948, 0.00013655599999999948, 0.00013608300000000212, 0.00013688900000000115, 0.0001361390000000004, 0.00013665300000000047, 0.00013698599999999866, 0.0001351389999999994, 0.0001362780000000001, 0.00013624999999999748, 0.00013695799999999952, 0.00013513900000000287, 0.00013597200000000156, 0.00013548599999999716, 0.00013547300000000054, 0.0001356389999999999, 0.00013592999999999938, 0.00013547200000000106, 0.00013547200000000106, 0.00013513900000000287, 0.00013679200000000016]</msg>
<status status="PASS" starttime="20201112 09:54:04.978" endtime="20201112 09:54:04.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.973" endtime="20201112 09:54:04.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.983" endtime="20201112 09:54:04.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.987" endtime="20201112 09:54:05.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.985" endtime="20201112 09:54:05.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.982" endtime="20201112 09:54:05.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.606" endtime="20201112 09:54:05.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.606" endtime="20201112 09:54:05.008"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.017" endtime="20201112 09:54:05.039"></status>
</kw>
<msg timestamp="20201112 09:54:05.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.015" endtime="20201112 09:54:05.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.041" endtime="20201112 09:54:05.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.043" endtime="20201112 09:54:05.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.013" endtime="20201112 09:54:05.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.011" endtime="20201112 09:54:05.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.054" endtime="20201112 09:54:05.339"></status>
</kw>
<msg timestamp="20201112 09:54:05.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.052" endtime="20201112 09:54:05.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.344" endtime="20201112 09:54:05.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.352" endtime="20201112 09:54:05.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.050" endtime="20201112 09:54:05.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.048" endtime="20201112 09:54:05.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.359" level="INFO">${RESULT} = [{'time': 0.022730958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001378330000000004, 'source_diff': 0.0001378330000000004}, {'time': 0.022886986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:05.356" endtime="20201112 09:54:05.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.373" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:05.360" endtime="20201112 09:54:05.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.377" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.376" endtime="20201112 09:54:05.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.380" level="INFO">VALUE: [0.0001378330000000004, 0.00013865300000000247, 0.00013731899999999686, 0.00013805600000000098, 0.00013857000000000105, 0.00013887499999999664, 0.00013813800000000293, 0.0001386110000000003, 0.0001371810000000001, 0.0001371390000000014, 0.00013783399999999987, 0.00013854200000000191, 0.00013888899999999968, 0.0001383049999999983, 0.0001370550000000005, 0.00013840300000000222, 0.00013780500000000126, 0.00013870800000000127, 0.00013763899999999843, 0.0001376390000000019, 0.00013763799999999896, 0.00013865300000000247, 0.00013895800000000152, 0.00013795800000000052, 0.00013779200000000116, 0.00013755600000000048, 0.00013772199999999984, 0.00013763899999999843, 0.00013762499999999886, 0.00013763899999999843, 0.00013897199999999763, 0.0001388200000000013, 0.00013706999999999955, 0.0001388750000000001, 0.00013779200000000116, 0.00013890299999999925, 0.0001377910000000017, 0.00013706900000000008, 0.00013873599999999695, 0.00013898600000000066, 0.00013729200000000066, 0.00013788899999999868, 0.00013804199999999794, 0.00013747200000000306, 0.00013863899999999943, 0.00013784799999999944, 0.00013805600000000098, 0.00013859700000000072, 0.00013854200000000191, 0.00013722199999999934]</msg>
<status status="PASS" starttime="20201112 09:54:05.378" endtime="20201112 09:54:05.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.373" endtime="20201112 09:54:05.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.384" endtime="20201112 09:54:05.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.387" endtime="20201112 09:54:05.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.386" endtime="20201112 09:54:05.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.382" endtime="20201112 09:54:05.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.009" endtime="20201112 09:54:05.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.008" endtime="20201112 09:54:05.408"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.417" endtime="20201112 09:54:05.439"></status>
</kw>
<msg timestamp="20201112 09:54:05.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.416" endtime="20201112 09:54:05.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.441" endtime="20201112 09:54:05.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.443" endtime="20201112 09:54:05.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.413" endtime="20201112 09:54:05.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.411" endtime="20201112 09:54:05.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.454" endtime="20201112 09:54:05.754"></status>
</kw>
<msg timestamp="20201112 09:54:05.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022782569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.452" endtime="20201112 09:54:05.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022782569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.759" endtime="20201112 09:54:05.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.767" endtime="20201112 09:54:05.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.450" endtime="20201112 09:54:05.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.448" endtime="20201112 09:54:05.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.774" level="INFO">${RESULT} = [{'time': 0.022782569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013969399999999924, 'source_diff': 0.00013969399999999924}, {'time': 0.022936583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:05.771" endtime="20201112 09:54:05.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:05.787" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:05.775" endtime="20201112 09:54:05.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.792" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:54:05.791" endtime="20201112 09:54:05.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.795" level="INFO">VALUE: [0.00013969399999999924, 0.00014022199999999888, 0.0001403050000000003, 0.00014022200000000234, 0.0001401249999999979, 0.0001391529999999995, 0.0001399729999999981, 0.00014073600000000241, 0.0001398750000000011, 0.00014018099999999964, 0.0001391529999999995, 0.00013995799999999906, 0.00013973599999999795, 0.00014070899999999928, 0.00014044399999999999, 0.00013930500000000276, 0.00014022199999999888, 0.0001392919999999992, 0.00013988900000000068, 0.000140346999999999, 0.00014072299999999885, 0.0001403050000000003, 0.00013994499999999896, 0.00013963900000000043, 0.0001397919999999997, 0.0001398889999999972, 0.00014031999999999933, 0.0001406110000000023, 0.0001408880000000022, 0.00013912500000000036, 0.0001391529999999995, 0.00014080600000000026, 0.00013922200000000134, 0.0001401530000000005, 0.00013981900000000283, 0.00014022199999999888, 0.00014047199999999913, 0.00013997199999999863, 0.0001398339999999984, 0.00014022200000000234, 0.00013918000000000263, 0.0001402920000000002, 0.00014055500000000054, 0.00013973600000000141, 0.0001406249999999984, 0.00013963900000000043, 0.00013963899999999696, 0.00013931999999999833, 0.00014022300000000182, 0.00014063799999999849]</msg>
<status status="PASS" starttime="20201112 09:54:05.793" endtime="20201112 09:54:05.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.788" endtime="20201112 09:54:05.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.799" endtime="20201112 09:54:05.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.802" endtime="20201112 09:54:05.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.801" endtime="20201112 09:54:05.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.797" endtime="20201112 09:54:05.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.409" endtime="20201112 09:54:05.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.409" endtime="20201112 09:54:05.823"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.832" endtime="20201112 09:54:05.854"></status>
</kw>
<msg timestamp="20201112 09:54:05.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.831" endtime="20201112 09:54:05.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.855" endtime="20201112 09:54:05.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.858" endtime="20201112 09:54:05.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.828" endtime="20201112 09:54:05.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.826" endtime="20201112 09:54:05.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.868" endtime="20201112 09:54:06.155"></status>
</kw>
<msg timestamp="20201112 09:54:06.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.867" endtime="20201112 09:54:06.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.160" endtime="20201112 09:54:06.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.168" endtime="20201112 09:54:06.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.864" endtime="20201112 09:54:06.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.862" endtime="20201112 09:54:06.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.175" level="INFO">${RESULT} = [{'time': 0.022621139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014170799999999734, 'source_diff': 0.00014170799999999734}, {'time': 0.022785153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:06.171" endtime="20201112 09:54:06.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.188" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:06.176" endtime="20201112 09:54:06.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.193" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.192" endtime="20201112 09:54:06.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.196" level="INFO">VALUE: [0.00014170799999999734, 0.0001423059999999983, 0.00014145900000000003, 0.00014159700000000025, 0.00014265299999999953, 0.00014197200000000063, 0.00014197200000000063, 0.00014251399999999984, 0.00014180600000000126, 0.00014222300000000035, 0.00014213899999999946, 0.00014165299999999853, 0.00014148600000000316, 0.00014231900000000186, 0.0001413889999999987, 0.00014245900000000103, 0.00014236100000000057, 0.0001419019999999993, 0.00014163899999999896, 0.00014131900000000086, 0.00014240299999999928, 0.0001426799999999992, 0.00014234699999999753, 0.00014154200000000144, 0.00014122199999999988, 0.0001418050000000018, 0.00014283300000000193, 0.00014247200000000113, 0.00014233300000000143, 0.00014225000000000002, 0.0001427920000000027, 0.00014104100000000147, 0.0001413889999999987, 0.0001419860000000002, 0.0001426250000000004, 0.00014159700000000025, 0.00014231999999999786, 0.00014272300000000085, 0.0001416379999999995, 0.0001429860000000012, 0.00014174999999999952, 0.00014291699999999935, 0.00014279199999999923, 0.00014190299999999878, 0.00014165199999999906, 0.00014179099999999875, 0.00014205499999999857, 0.00014104200000000094, 0.0001418889999999992, 0.0001424860000000007]</msg>
<status status="PASS" starttime="20201112 09:54:06.194" endtime="20201112 09:54:06.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.189" endtime="20201112 09:54:06.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.199" endtime="20201112 09:54:06.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.203" endtime="20201112 09:54:06.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.201" endtime="20201112 09:54:06.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.198" endtime="20201112 09:54:06.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.824" endtime="20201112 09:54:06.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.824" endtime="20201112 09:54:06.224"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.233" endtime="20201112 09:54:06.255"></status>
</kw>
<msg timestamp="20201112 09:54:06.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.231" endtime="20201112 09:54:06.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.257" endtime="20201112 09:54:06.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.259" endtime="20201112 09:54:06.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.229" endtime="20201112 09:54:06.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.227" endtime="20201112 09:54:06.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.270" endtime="20201112 09:54:06.563"></status>
</kw>
<msg timestamp="20201112 09:54:06.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.268" endtime="20201112 09:54:06.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.567" endtime="20201112 09:54:06.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.575" endtime="20201112 09:54:06.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.265" endtime="20201112 09:54:06.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.264" endtime="20201112 09:54:06.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.582" level="INFO">${RESULT} = [{'time': 0.022737556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001442089999999993, 'source_diff': 0.0001442089999999993}, {'time': 0.022901569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:06.579" endtime="20201112 09:54:06.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.597" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:06.583" endtime="20201112 09:54:06.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.602" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:54:06.600" endtime="20201112 09:54:06.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.604" level="INFO">VALUE: [0.0001442089999999993, 0.00014305499999999957, 0.00014355500000000007, 0.00014383299999999946, 0.0001446389999999985, 0.00014448599999999923, 0.00014369399999999977, 0.00014330600000000276, 0.00014405500000000057, 0.00014387500000000164, 0.0001431250000000009, 0.00014462499999999892, 0.00014397200000000263, 0.0001441250000000019, 0.00014363799999999802, 0.0001431950000000022, 0.00014481899999999742, 0.0001442219999999994, 0.0001436389999999975, 0.0001438059999999998, 0.00014405600000000005, 0.000144041000000001, 0.0001435410000000005, 0.0001438890000000012, 0.0001443060000000003, 0.00014473599999999948, 0.00014395900000000253, 0.00014398599999999873, 0.00014463799999999902, 0.00014315300000000003, 0.00014334699999999853, 0.0001447219999999999, 0.00014357000000000258, 0.00014394500000000296, 0.00014315200000000056, 0.00014329100000000025, 0.0001442219999999994, 0.00014397199999999916, 0.00014382000000000283, 0.00014457000000000012, 0.0001443890000000017, 0.0001441800000000007, 0.00014415300000000103, 0.00014309699999999828, 0.00014340300000000028, 0.00014379200000000023, 0.00014473599999999948, 0.00014363900000000096, 0.00014480500000000132, 0.00014490300000000178]</msg>
<status status="PASS" starttime="20201112 09:54:06.603" endtime="20201112 09:54:06.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.598" endtime="20201112 09:54:06.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.608" endtime="20201112 09:54:06.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.611" endtime="20201112 09:54:06.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.610" endtime="20201112 09:54:06.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.606" endtime="20201112 09:54:06.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.225" endtime="20201112 09:54:06.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.224" endtime="20201112 09:54:06.632"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.641" endtime="20201112 09:54:06.664"></status>
</kw>
<msg timestamp="20201112 09:54:06.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.640" endtime="20201112 09:54:06.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.665" endtime="20201112 09:54:06.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.668" endtime="20201112 09:54:06.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.637" endtime="20201112 09:54:06.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.635" endtime="20201112 09:54:06.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.678" endtime="20201112 09:54:06.963"></status>
</kw>
<msg timestamp="20201112 09:54:06.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.677" endtime="20201112 09:54:06.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.968" endtime="20201112 09:54:06.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.976" endtime="20201112 09:54:06.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.674" endtime="20201112 09:54:06.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.672" endtime="20201112 09:54:06.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.983" level="INFO">${RESULT} = [{'time': 0.022765097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014570800000000134, 'source_diff': 0.00014570800000000134}, {'time': 0.022929111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:06.980" endtime="20201112 09:54:06.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:06.997" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:06.984" endtime="20201112 09:54:06.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.001" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.000" endtime="20201112 09:54:07.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.004" level="INFO">VALUE: [0.00014570800000000134, 0.0001450549999999981, 0.00014507000000000062, 0.0001468749999999977, 0.00014611100000000085, 0.00014647200000000166, 0.00014648599999999776, 0.00014648600000000123, 0.00014615299999999956, 0.00014563900000000296, 0.00014582000000000137, 0.00014656899999999917, 0.00014506900000000114, 0.00014558299999999774, 0.00014504200000000148, 0.00014625000000000055, 0.0001453060000000013, 0.00014573700000000342, 0.0001451519999999991, 0.0001453190000000014, 0.0001457220000000009, 0.0001469719999999987, 0.00014633399999999797, 0.00014606999999999815, 0.0001467229999999979, 0.0001458190000000019, 0.00014673600000000148, 0.00014548600000000023, 0.00014594399999999855, 0.00014530599999999783, 0.0001452220000000004, 0.00014662499999999745, 0.00014679100000000028, 0.00014656899999999917, 0.00014588899999999974, 0.00014580599999999833, 0.00014606999999999815, 0.00014565299999999906, 0.00014580499999999885, 0.00014538899999999924, 0.00014629099999999978, 0.00014606899999999867, 0.00014656999999999865, 0.00014538899999999924, 0.0001468199999999989, 0.0001467220000000019, 0.0001469719999999987, 0.0001463190000000024, 0.0001465419999999995, 0.00014643099999999895]</msg>
<status status="PASS" starttime="20201112 09:54:07.003" endtime="20201112 09:54:07.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.998" endtime="20201112 09:54:07.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.008" endtime="20201112 09:54:07.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.011" endtime="20201112 09:54:07.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.010" endtime="20201112 09:54:07.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.006" endtime="20201112 09:54:07.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.633" endtime="20201112 09:54:07.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.633" endtime="20201112 09:54:07.032"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.042" endtime="20201112 09:54:07.064"></status>
</kw>
<msg timestamp="20201112 09:54:07.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.040" endtime="20201112 09:54:07.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.066" endtime="20201112 09:54:07.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.068" endtime="20201112 09:54:07.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.037" endtime="20201112 09:54:07.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.035" endtime="20201112 09:54:07.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.079" endtime="20201112 09:54:07.364"></status>
</kw>
<msg timestamp="20201112 09:54:07.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.077" endtime="20201112 09:54:07.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.368" endtime="20201112 09:54:07.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.377" endtime="20201112 09:54:07.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.075" endtime="20201112 09:54:07.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.073" endtime="20201112 09:54:07.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.383" level="INFO">${RESULT} = [{'time': 0.022733972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014820800000000037, 'source_diff': 0.00014820800000000037}, {'time': 0.022898014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:07.380" endtime="20201112 09:54:07.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.397" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:07.384" endtime="20201112 09:54:07.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.402" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.401" endtime="20201112 09:54:07.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.404" level="INFO">VALUE: [0.00014820800000000037, 0.0001470830000000027, 0.0001489169999999984, 0.0001479719999999997, 0.0001488200000000009, 0.0001478879999999988, 0.0001475420000000005, 0.00014711099999999838, 0.00014812500000000242, 0.00014883400000000047, 0.00014720899999999884, 0.00014830600000000083, 0.00014870800000000087, 0.0001479719999999997, 0.00014848599999999976, 0.00014719499999999927, 0.000147139000000001, 0.00014762499999999845, 0.00014847299999999966, 0.0001483330000000005, 0.00014741700000000038, 0.00014863899999999902, 0.0001486529999999986, 0.0001479719999999997, 0.00014730599999999983, 0.00014738800000000177, 0.00014805499999999763, 0.0001477909999999978, 0.00014702800000000044, 0.00014755600000000008, 0.0001472229999999984, 0.00014747299999999866, 0.00014863799999999955, 0.00014715300000000056, 0.00014829200000000126, 0.00014755600000000008, 0.0001479030000000013, 0.0001479870000000022, 0.00014805600000000058, 0.00014779100000000128, 0.0001480969999999998, 0.000148736, 0.00014830599999999736, 0.00014805600000000058, 0.00014725000000000155, 0.00014763799999999855, 0.0001486529999999986, 0.00014826400000000212, 0.0001476810000000002, 0.0001482919999999978]</msg>
<status status="PASS" starttime="20201112 09:54:07.403" endtime="20201112 09:54:07.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.398" endtime="20201112 09:54:07.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.408" endtime="20201112 09:54:07.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.412" endtime="20201112 09:54:07.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.410" endtime="20201112 09:54:07.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.406" endtime="20201112 09:54:07.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.033" endtime="20201112 09:54:07.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.033" endtime="20201112 09:54:07.433"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.442" endtime="20201112 09:54:07.463"></status>
</kw>
<msg timestamp="20201112 09:54:07.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.440" endtime="20201112 09:54:07.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.465" endtime="20201112 09:54:07.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.467" endtime="20201112 09:54:07.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.437" endtime="20201112 09:54:07.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.435" endtime="20201112 09:54:07.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.478" endtime="20201112 09:54:07.778"></status>
</kw>
<msg timestamp="20201112 09:54:07.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.476" endtime="20201112 09:54:07.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.782" endtime="20201112 09:54:07.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.791" endtime="20201112 09:54:07.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.474" endtime="20201112 09:54:07.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.472" endtime="20201112 09:54:07.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.798" level="INFO">${RESULT} = [{'time': 0.022714625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001502079999999989, 'source_diff': 0.0001502079999999989}, {'time': 0.022880639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:07.794" endtime="20201112 09:54:07.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:07.811" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:07.799" endtime="20201112 09:54:07.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.816" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:54:07.815" endtime="20201112 09:54:07.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.818" level="INFO">VALUE: [0.0001502079999999989, 0.00015070800000000287, 0.0001493200000000014, 0.00015020899999999837, 0.00014945799999999815, 0.0001499299999999995, 0.00015098600000000226, 0.00014995800000000212, 0.00015013900000000052, 0.0001501530000000001, 0.00014930599999999836, 0.00015073599999999854, 0.00015080500000000038, 0.00014930500000000235, 0.00015063900000000102, 0.0001497919999999993, 0.0001508889999999978, 0.00015027700000000074, 0.00014922200000000094, 0.00014931899999999845, 0.000149736000000001, 0.0001503339999999985, 0.00014944399999999858, 0.00014947300000000066, 0.00014965200000000012, 0.00015013899999999705, 0.00015094400000000008, 0.00014941700000000238, 0.0001497919999999993, 0.00015072299999999844, 0.00014930499999999888, 0.00014972199999999797, 0.00015011100000000138, 0.00015054100000000056, 0.0001501530000000001, 0.0001496659999999997, 0.00015041599999999697, 0.0001494720000000012, 0.00014930499999999888, 0.00014938899999999977, 0.00015081999999999943, 0.0001494169999999989, 0.00015026400000000065, 0.00014926399999999965, 0.00014912499999999995, 0.00015097199999999922, 0.00014912499999999995, 0.00015063899999999755, 0.00015076400000000115, 0.00014938899999999977]</msg>
<status status="PASS" starttime="20201112 09:54:07.817" endtime="20201112 09:54:07.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.812" endtime="20201112 09:54:07.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.822" endtime="20201112 09:54:07.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.826" endtime="20201112 09:54:07.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.824" endtime="20201112 09:54:07.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.821" endtime="20201112 09:54:07.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.434" endtime="20201112 09:54:07.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.433" endtime="20201112 09:54:07.847"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.856" endtime="20201112 09:54:07.878"></status>
</kw>
<msg timestamp="20201112 09:54:07.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.854" endtime="20201112 09:54:07.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.880" endtime="20201112 09:54:07.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.883" endtime="20201112 09:54:07.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.852" endtime="20201112 09:54:07.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.849" endtime="20201112 09:54:07.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.893" endtime="20201112 09:54:08.179"></status>
</kw>
<msg timestamp="20201112 09:54:08.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.892" endtime="20201112 09:54:08.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.184" endtime="20201112 09:54:08.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.192" endtime="20201112 09:54:08.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.889" endtime="20201112 09:54:08.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.887" endtime="20201112 09:54:08.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.199" level="INFO">${RESULT} = [{'time': 0.022752889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001512079999999999, 'source_diff': 0.0001512079999999999}, {'time': 0.022924931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:08.195" endtime="20201112 09:54:08.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.213" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:08.200" endtime="20201112 09:54:08.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.218" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.217" endtime="20201112 09:54:08.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.221" level="INFO">VALUE: [0.0001512079999999999, 0.0001517499999999991, 0.00015226399999999918, 0.0001522080000000009, 0.00015247200000000072, 0.0001519859999999998, 0.0001519859999999998, 0.00015263899999999955, 0.00015165299999999812, 0.00015115200000000162, 0.00015304199999999907, 0.00015213899999999905, 0.00015231899999999798, 0.0001528889999999998, 0.00015177799999999825, 0.0001512079999999999, 0.0001513469999999996, 0.00015220799999999743, 0.00015152800000000147, 0.0001512920000000008, 0.00015290299999999937, 0.00015130600000000036, 0.00015270900000000087, 0.0001514859999999993, 0.00015131900000000045, 0.00015143100000000048, 0.00015182000000000043, 0.00015222200000000047, 0.00015215199999999915, 0.00015280499999999891, 0.00015201399999999893, 0.00015205499999999816, 0.00015140300000000134, 0.00015263899999999955, 0.00015281899999999848, 0.000151430000000001, 0.00015230500000000188, 0.00015188900000000227, 0.0001529860000000008, 0.00015247199999999725, 0.0001521799999999983, 0.00015133300000000002, 0.00015240200000000287, 0.0001514439999999971, 0.00015163899999999855, 0.00015297199999999775, 0.0001517920000000013, 0.00015287500000000023, 0.00015280500000000238, 0.0001518889999999988]</msg>
<status status="PASS" starttime="20201112 09:54:08.219" endtime="20201112 09:54:08.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.214" endtime="20201112 09:54:08.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.224" endtime="20201112 09:54:08.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.228" endtime="20201112 09:54:08.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.226" endtime="20201112 09:54:08.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.223" endtime="20201112 09:54:08.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.848" endtime="20201112 09:54:08.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.847" endtime="20201112 09:54:08.249"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.259" endtime="20201112 09:54:08.281"></status>
</kw>
<msg timestamp="20201112 09:54:08.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.256" endtime="20201112 09:54:08.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.284" endtime="20201112 09:54:08.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.287" endtime="20201112 09:54:08.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.254" endtime="20201112 09:54:08.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.252" endtime="20201112 09:54:08.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.298" endtime="20201112 09:54:08.598"></status>
</kw>
<msg timestamp="20201112 09:54:08.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023537806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.296" endtime="20201112 09:54:08.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023537806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.602" endtime="20201112 09:54:08.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.611" endtime="20201112 09:54:08.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.293" endtime="20201112 09:54:08.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.292" endtime="20201112 09:54:08.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.617" level="INFO">${RESULT} = [{'time': 0.023691181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015337499999999726, 'source_diff': 0.00015337499999999726}, {'time': 0.023861208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:08.614" endtime="20201112 09:54:08.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:08.631" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:08.618" endtime="20201112 09:54:08.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.636" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:54:08.635" endtime="20201112 09:54:08.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.638" level="INFO">VALUE: [0.00015337499999999726, 0.00015498599999999932, 0.00015318100000000223, 0.0001543059999999999, 0.00015354199999999957, 0.00015455600000000014, 0.0001539020000000009, 0.00015480500000000091, 0.00015305500000000263, 0.00015322200000000147, 0.00015434800000000207, 0.0001549310000000005, 0.00015431999999999946, 0.0001532089999999979, 0.00015474999999999864, 0.0001538890000000008, 0.00015445800000000315, 0.00015462499999999851, 0.00015494500000000008, 0.00015400000000000136, 0.00015433299999999955, 0.00015437500000000173, 0.00015413900000000105, 0.00015431899999999998, 0.00015491700000000094, 0.00015479200000000082, 0.00015452700000000152, 0.00015306899999999873, 0.00015405500000000016, 0.00015441700000000044, 0.0001548060000000004, 0.0001548890000000018, 0.00015312500000000048, 0.00015377700000000077, 0.00015305499999999916, 0.00015354199999999957, 0.0001548890000000018, 0.00015463899999999808, 0.00015395899999999865, 0.0001534860000000013, 0.00015380499999999991, 0.00015390300000000037, 0.00015363900000000055, 0.00015431999999999946, 0.00015322300000000094, 0.00015313900000000352, 0.00015331900000000592, 0.00015487499999999876, 0.00015397200000000222, 0.0001544860000000023]</msg>
<status status="PASS" starttime="20201112 09:54:08.637" endtime="20201112 09:54:08.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.632" endtime="20201112 09:54:08.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.642" endtime="20201112 09:54:08.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.646" endtime="20201112 09:54:08.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.644" endtime="20201112 09:54:08.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.640" endtime="20201112 09:54:08.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.250" endtime="20201112 09:54:08.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.249" endtime="20201112 09:54:08.667"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.677" endtime="20201112 09:54:08.700"></status>
</kw>
<msg timestamp="20201112 09:54:08.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.675" endtime="20201112 09:54:08.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.701" endtime="20201112 09:54:08.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.704" endtime="20201112 09:54:08.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.672" endtime="20201112 09:54:08.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.669" endtime="20201112 09:54:08.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.715" endtime="20201112 09:54:09.001"></status>
</kw>
<msg timestamp="20201112 09:54:09.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023927778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024084306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.714" endtime="20201112 09:54:09.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023927778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024084306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.006" endtime="20201112 09:54:09.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.014" endtime="20201112 09:54:09.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.711" endtime="20201112 09:54:09.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.709" endtime="20201112 09:54:09.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.021" level="INFO">${RESULT} = [{'time': 0.024084306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015652799999999953, 'source_diff': 0.00015652799999999953}, {'time': 0.024262333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:09.017" endtime="20201112 09:54:09.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.034" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:09.022" endtime="20201112 09:54:09.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.039" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.038" endtime="20201112 09:54:09.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.042" level="INFO">VALUE: [0.00015652799999999953, 0.00015597200000000075, 0.00015663900000000008, 0.00015663900000000008, 0.00015597200000000075, 0.00015597199999999728, 0.00015613899999999958, 0.0001559579999999977, 0.00015697199999999828, 0.00015631900000000198, 0.0001550700000000002, 0.00015548599999999982, 0.00015572299999999997, 0.00015512499999999901, 0.0001554440000000011, 0.00015630499999999894, 0.0001557220000000005, 0.0001559999999999999, 0.0001565000000000004, 0.00015623600000000057, 0.00015673600000000107, 0.00015581899999999801, 0.00015623600000000057, 0.0001563480000000006, 0.00015536100000000316, 0.00015647300000000072, 0.00015698600000000132, 0.00015530499999999794, 0.00015541700000000144, 0.00015563899999999908, 0.0001553060000000009, 0.0001556809999999978, 0.00015581900000000148, 0.00015559700000000037, 0.00015505600000000064, 0.00015538899999999883, 0.00015565300000000212, 0.00015649999999999692, 0.00015633300000000155, 0.00015634700000000112, 0.00015545800000000068, 0.0001564579999999982, 0.00015548599999999982, 0.00015648700000000376, 0.00015581900000000148, 0.00015505500000000116, 0.00015572200000000397, 0.00015682000000000196, 0.00015588899999999933, 0.0001564860000000043]</msg>
<status status="PASS" starttime="20201112 09:54:09.040" endtime="20201112 09:54:09.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.035" endtime="20201112 09:54:09.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.046" endtime="20201112 09:54:09.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.049" endtime="20201112 09:54:09.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.047" endtime="20201112 09:54:09.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.044" endtime="20201112 09:54:09.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.668" endtime="20201112 09:54:09.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.667" endtime="20201112 09:54:09.070"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.079" endtime="20201112 09:54:09.102"></status>
</kw>
<msg timestamp="20201112 09:54:09.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.077" endtime="20201112 09:54:09.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.104" endtime="20201112 09:54:09.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.106" endtime="20201112 09:54:09.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.075" endtime="20201112 09:54:09.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.073" endtime="20201112 09:54:09.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.117" endtime="20201112 09:54:09.402"></status>
</kw>
<msg timestamp="20201112 09:54:09.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.115" endtime="20201112 09:54:09.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.407" endtime="20201112 09:54:09.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.415" endtime="20201112 09:54:09.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.112" endtime="20201112 09:54:09.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.111" endtime="20201112 09:54:09.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.422" level="INFO">${RESULT} = [{'time': 0.022960597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001574579999999992, 'source_diff': 0.0001574579999999992}, {'time': 0.023132625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:09.418" endtime="20201112 09:54:09.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.435" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:09.423" endtime="20201112 09:54:09.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.440" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.439" endtime="20201112 09:54:09.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.443" level="INFO">VALUE: [0.0001574579999999992, 0.00015741699999999997, 0.00015899999999999942, 0.00015763900000000108, 0.0001579870000000018, 0.0001575420000000001, 0.00015730499999999994, 0.00015773600000000207, 0.0001579449999999996, 0.00015815300000000115, 0.00015745899999999868, 0.00015766600000000075, 0.00015863799999999914, 0.00015880500000000145, 0.00015722199999999853, 0.00015845799999999674, 0.00015780599999999992, 0.00015838900000000183, 0.00015843000000000107, 0.00015747199999999878, 0.00015815299999999768, 0.00015863899999999861, 0.00015730599999999942, 0.0001570969999999984, 0.00015705600000000264, 0.0001582359999999991, 0.00015748600000000182, 0.00015765300000000065, 0.00015713900000000058, 0.0001578199999999995, 0.00015875000000000264, 0.00015847199999999978, 0.00015765300000000065, 0.0001589580000000007, 0.00015780599999999992, 0.0001582359999999991, 0.00015865300000000165, 0.00015880500000000145, 0.00015788900000000133, 0.00015875000000000264, 0.0001574030000000004, 0.00015713900000000058, 0.00015801400000000146, 0.00015856900000000076, 0.00015780499999999698, 0.00015825000000000214, 0.00015813900000000158, 0.00015745899999999868, 0.00015763899999999761, 0.00015781899999999655]</msg>
<status status="PASS" starttime="20201112 09:54:09.441" endtime="20201112 09:54:09.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.436" endtime="20201112 09:54:09.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.451" endtime="20201112 09:54:09.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.455" endtime="20201112 09:54:09.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.453" endtime="20201112 09:54:09.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.449" endtime="20201112 09:54:09.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.071" endtime="20201112 09:54:09.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.070" endtime="20201112 09:54:09.476"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.485" endtime="20201112 09:54:09.508"></status>
</kw>
<msg timestamp="20201112 09:54:09.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.483" endtime="20201112 09:54:09.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.510" endtime="20201112 09:54:09.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.512" endtime="20201112 09:54:09.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.481" endtime="20201112 09:54:09.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.478" endtime="20201112 09:54:09.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.523" endtime="20201112 09:54:09.808"></status>
</kw>
<msg timestamp="20201112 09:54:09.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.521" endtime="20201112 09:54:09.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.812" endtime="20201112 09:54:09.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.820" endtime="20201112 09:54:09.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.518" endtime="20201112 09:54:09.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.516" endtime="20201112 09:54:09.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.826" level="INFO">${RESULT} = [{'time': 0.022730944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016087499999999783, 'source_diff': 0.00016087499999999783}, {'time': 0.022904958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:09.823" endtime="20201112 09:54:09.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:09.840" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:09.827" endtime="20201112 09:54:09.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.845" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:54:09.844" endtime="20201112 09:54:09.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.847" level="INFO">VALUE: [0.00016087499999999783, 0.00015963899999999961, 0.00016033299999999862, 0.0001590559999999977, 0.0001590000000000029, 0.00015990299999999943, 0.00016031899999999905, 0.0001602360000000011, 0.0001590970000000004, 0.00016047200000000178, 0.00015972199999999756, 0.0001600559999999987, 0.00016022299999999753, 0.00016031900000000252, 0.00016055499999999973, 0.0001600689999999988, 0.0001608750000000013, 0.00016034800000000113, 0.0001608880000000014, 0.00016002799999999956, 0.00015963899999999961, 0.00015997200000000128, 0.0001601940000000024, 0.00016013900000000011, 0.0001595139999999995, 0.0001596519999999997, 0.00016030499999999948, 0.0001605689999999993, 0.0001595139999999995, 0.0001605840000000018, 0.0001598620000000002, 0.00016034699999999819, 0.0001604169999999995, 0.00015915300000000215, 0.00015963899999999961, 0.00016013900000000011, 0.00016095899999999871, 0.00015963800000000014, 0.00015908299999999737, 0.0001599719999999978, 0.00015965299999999918, 0.00016015299999999968, 0.00016066600000000028, 0.000160610999999998, 0.00015930500000000195, 0.00016072199999999856, 0.00015915299999999868, 0.00015930599999999795, 0.00016063899999999715, 0.00016034700000000512]</msg>
<status status="PASS" starttime="20201112 09:54:09.846" endtime="20201112 09:54:09.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.841" endtime="20201112 09:54:09.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.851" endtime="20201112 09:54:09.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.854" endtime="20201112 09:54:09.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.853" endtime="20201112 09:54:09.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.849" endtime="20201112 09:54:09.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.477" endtime="20201112 09:54:09.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.476" endtime="20201112 09:54:09.875"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.884" endtime="20201112 09:54:09.907"></status>
</kw>
<msg timestamp="20201112 09:54:09.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.882" endtime="20201112 09:54:09.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.908" endtime="20201112 09:54:09.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.911" endtime="20201112 09:54:09.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.880" endtime="20201112 09:54:09.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.878" endtime="20201112 09:54:09.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.921" endtime="20201112 09:54:10.222"></status>
</kw>
<msg timestamp="20201112 09:54:10.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.919" endtime="20201112 09:54:10.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.226" endtime="20201112 09:54:10.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.234" endtime="20201112 09:54:10.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.917" endtime="20201112 09:54:10.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.915" endtime="20201112 09:54:10.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.240" level="INFO">${RESULT} = [{'time': 0.022165847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016237499999999933, 'source_diff': 0.00016237499999999933}, {'time': 0.022343875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:10.237" endtime="20201112 09:54:10.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.253" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:10.241" endtime="20201112 09:54:10.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.258" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.257" endtime="20201112 09:54:10.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.260" level="INFO">VALUE: [0.00016237499999999933, 0.00016130599999999995, 0.00016154200000000063, 0.00016156999999999977, 0.0001628889999999994, 0.00016299999999999995, 0.00016191600000000153, 0.0001619719999999998, 0.00016280599999999798, 0.00016237499999999933, 0.00016186099999999926, 0.00016188799999999892, 0.00016231900000000105, 0.00016237499999999933, 0.00016215299999999822, 0.00016162500000000204, 0.00016297300000000028, 0.00016213900000000211, 0.00016163899999999815, 0.00016222200000000006, 0.0001620560000000007, 0.00016172199999999956, 0.00016215299999999822, 0.00016133299999999962, 0.00016287499999999983, 0.0001621950000000004, 0.00016163899999999815, 0.00016201399999999852, 0.00016176399999999827, 0.00016195800000000024, 0.0001629720000000008, 0.00016231899999999758, 0.00016223599999999963, 0.00016232000000000052, 0.00016173700000000207, 0.00016263799999999967, 0.00016280500000000198, 0.0001614170000000005, 0.00016245800000000074, 0.00016279200000000188, 0.0001614719999999993, 0.00016187499999999883, 0.0001613750000000018, 0.0001617499999999987, 0.00016265300000000218, 0.00016194500000000014, 0.00016195899999999971, 0.00016226400000000224, 0.00016187499999999883, 0.00016265300000000218]</msg>
<status status="PASS" starttime="20201112 09:54:10.259" endtime="20201112 09:54:10.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.254" endtime="20201112 09:54:10.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.264" endtime="20201112 09:54:10.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.267" endtime="20201112 09:54:10.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.266" endtime="20201112 09:54:10.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.262" endtime="20201112 09:54:10.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.876" endtime="20201112 09:54:10.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.876" endtime="20201112 09:54:10.288"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.297" endtime="20201112 09:54:10.319"></status>
</kw>
<msg timestamp="20201112 09:54:10.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.295" endtime="20201112 09:54:10.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.321" endtime="20201112 09:54:10.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.323" endtime="20201112 09:54:10.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.293" endtime="20201112 09:54:10.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.291" endtime="20201112 09:54:10.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.333" endtime="20201112 09:54:10.619"></status>
</kw>
<msg timestamp="20201112 09:54:10.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02193275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:10.332" endtime="20201112 09:54:10.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02193275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:10.623" endtime="20201112 09:54:10.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.631" endtime="20201112 09:54:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.329" endtime="20201112 09:54:10.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.327" endtime="20201112 09:54:10.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.638" level="INFO">${RESULT} = [{'time': 0.022096458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016370799999999852, 'source_diff': 0.00016370799999999852}, {'time': 0.022278472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:10.634" endtime="20201112 09:54:10.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:10.651" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:10.639" endtime="20201112 09:54:10.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.655" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:54:10.654" endtime="20201112 09:54:10.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.658" level="INFO">VALUE: [0.00016370799999999852, 0.00016322200000000106, 0.000164305, 0.00016455599999999973, 0.00016455599999999973, 0.00016322300000000053, 0.00016424999999999773, 0.00016373600000000113, 0.00016315300000000268, 0.00016432000000000252, 0.00016423599999999816, 0.00016497299999999882, 0.0001644720000000023, 0.00016465299999999725, 0.00016315300000000268, 0.00016434699999999872, 0.00016373600000000113, 0.00016331899999999858, 0.000163402, 0.00016443000000000013, 0.0001649859999999989, 0.00016480599999999998, 0.00016373600000000113, 0.00016363900000000015, 0.00016445799999999927, 0.00016431900000000305, 0.00016373600000000113, 0.00016345799999999827, 0.00016430599999999948, 0.00016404199999999966, 0.00016372200000000156, 0.00016350000000000045, 0.00016433399999999862, 0.00016454200000000016, 0.0001638890000000004, 0.0001647920000000004, 0.00016387500000000083, 0.00016424999999999773, 0.00016440300000000047, 0.00016381999999999855, 0.00016404199999999966, 0.000163402, 0.0001644720000000023, 0.00016431900000000305, 0.00016473600000000213, 0.00016348600000000088, 0.00016380599999999898, 0.00016486100000000226, 0.00016379099999999994, 0.00016358300000000187]</msg>
<status status="PASS" starttime="20201112 09:54:10.656" endtime="20201112 09:54:10.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.652" endtime="20201112 09:54:10.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.661" endtime="20201112 09:54:10.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.665" endtime="20201112 09:54:10.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.663" endtime="20201112 09:54:10.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.660" endtime="20201112 09:54:10.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.289" endtime="20201112 09:54:10.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.289" endtime="20201112 09:54:10.686"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.694" endtime="20201112 09:54:10.717"></status>
</kw>
<msg timestamp="20201112 09:54:10.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.693" endtime="20201112 09:54:10.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.718" endtime="20201112 09:54:10.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.721" endtime="20201112 09:54:10.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.690" endtime="20201112 09:54:10.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.688" endtime="20201112 09:54:10.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.731" endtime="20201112 09:54:11.016"></status>
</kw>
<msg timestamp="20201112 09:54:11.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.729" endtime="20201112 09:54:11.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.020" endtime="20201112 09:54:11.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.028" endtime="20201112 09:54:11.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.727" endtime="20201112 09:54:11.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.725" endtime="20201112 09:54:11.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.034" level="INFO">${RESULT} = [{'time': 0.022210014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016504200000000066, 'source_diff': 0.00016504200000000066}, {'time': 0.022390014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:11.031" endtime="20201112 09:54:11.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.047" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:11.035" endtime="20201112 09:54:11.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.052" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.051" endtime="20201112 09:54:11.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.054" level="INFO">VALUE: [0.00016504200000000066, 0.0001652920000000009, 0.00016673700000000014, 0.0001662920000000019, 0.0001665830000000014, 0.0001650410000000012, 0.0001667220000000011, 0.00016580600000000098, 0.0001653890000000019, 0.0001663189999999981, 0.0001650829999999999, 0.00016568100000000086, 0.000165305999999997, 0.00016587499999999936, 0.00016698599999999744, 0.00016530600000000048, 0.0001665549999999988, 0.00016538899999999843, 0.00016533300000000015, 0.0001655419999999977, 0.0001660419999999982, 0.00016622300000000007, 0.0001661249999999996, 0.0001664860000000004, 0.00016630600000000148, 0.00016590300000000197, 0.0001652920000000009, 0.00016638899999999943, 0.00016595800000000077, 0.0001668189999999986, 0.00016555600000000073, 0.00016551399999999855, 0.00016659700000000097, 0.00016640199999999952, 0.00016531900000000058, 0.00016555500000000126, 0.00016554200000000116, 0.0001659029999999985, 0.00016697300000000082, 0.00016601399999999905, 0.00016563900000000215, 0.00016516699999999732, 0.00016645800000000127, 0.0001664860000000004, 0.00016595899999999678, 0.00016533300000000015, 0.00016588899999999893, 0.00016581900000000108, 0.00016601399999999905, 0.00016673600000000066]</msg>
<status status="PASS" starttime="20201112 09:54:11.053" endtime="20201112 09:54:11.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.048" endtime="20201112 09:54:11.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.058" endtime="20201112 09:54:11.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.062" endtime="20201112 09:54:11.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.060" endtime="20201112 09:54:11.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.056" endtime="20201112 09:54:11.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.687" endtime="20201112 09:54:11.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.686" endtime="20201112 09:54:11.082"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.091" endtime="20201112 09:54:11.113"></status>
</kw>
<msg timestamp="20201112 09:54:11.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.089" endtime="20201112 09:54:11.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.115" endtime="20201112 09:54:11.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.117" endtime="20201112 09:54:11.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.087" endtime="20201112 09:54:11.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.085" endtime="20201112 09:54:11.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.127" endtime="20201112 09:54:11.413"></status>
</kw>
<msg timestamp="20201112 09:54:11.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.126" endtime="20201112 09:54:11.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.417" endtime="20201112 09:54:11.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.425" endtime="20201112 09:54:11.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.123" endtime="20201112 09:54:11.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.122" endtime="20201112 09:54:11.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.431" level="INFO">${RESULT} = [{'time': 0.022257486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016738900000000043, 'source_diff': 0.00016738900000000043}, {'time': 0.022445486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:11.428" endtime="20201112 09:54:11.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.445" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:11.432" endtime="20201112 09:54:11.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.450" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.449" endtime="20201112 09:54:11.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.452" level="INFO">VALUE: [0.00016738900000000043, 0.0001689580000000003, 0.0001684860000000024, 0.0001681389999999977, 0.00016891700000000107, 0.0001677220000000021, 0.0001676250000000011, 0.00016798599999999844, 0.00016797200000000234, 0.00016781999999999908, 0.00016723600000000116, 0.000168096999999999, 0.0001689580000000003, 0.000168999999999999, 0.00016898599999999944, 0.000168999999999999, 0.00016898599999999944, 0.00016880500000000104, 0.00016737500000000086, 0.00016882000000000008, 0.00016823600000000216, 0.00016861100000000254, 0.00016800000000000148, 0.00016829100000000097, 0.000167403, 0.00016731999999999858, 0.0001670700000000018, 0.00016705600000000223, 0.00016870800000000005, 0.00016748599999999794, 0.0001679860000000019, 0.0001678059999999995, 0.00016868100000000039, 0.00016797299999999835, 0.00016726299999999736, 0.00016822199999999912, 0.0001677640000000008, 0.00016723600000000116, 0.0001681800000000004, 0.00016879200000000094, 0.00016888799999999898, 0.0001679579999999993, 0.00016780500000000004, 0.00016725000000000073, 0.000168306, 0.00016790199999999755, 0.0001678189999999996, 0.00016890299999999803, 0.00016765300000000025, 0.00016811099999999857]</msg>
<status status="PASS" starttime="20201112 09:54:11.451" endtime="20201112 09:54:11.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.446" endtime="20201112 09:54:11.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.456" endtime="20201112 09:54:11.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.460" endtime="20201112 09:54:11.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.458" endtime="20201112 09:54:11.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.454" endtime="20201112 09:54:11.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.083" endtime="20201112 09:54:11.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.083" endtime="20201112 09:54:11.481"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.489" endtime="20201112 09:54:11.513"></status>
</kw>
<msg timestamp="20201112 09:54:11.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.488" endtime="20201112 09:54:11.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.515" endtime="20201112 09:54:11.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.517" endtime="20201112 09:54:11.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.485" endtime="20201112 09:54:11.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.483" endtime="20201112 09:54:11.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.527" endtime="20201112 09:54:11.814"></status>
</kw>
<msg timestamp="20201112 09:54:11.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.526" endtime="20201112 09:54:11.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.818" endtime="20201112 09:54:11.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.826" endtime="20201112 09:54:11.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.523" endtime="20201112 09:54:11.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.522" endtime="20201112 09:54:11.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.832" level="INFO">${RESULT} = [{'time': 0.022189583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001698749999999999, 'source_diff': 0.0001698749999999999}, {'time': 0.022375625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:11.829" endtime="20201112 09:54:11.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:11.845" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:11.833" endtime="20201112 09:54:11.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.850" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:54:11.849" endtime="20201112 09:54:11.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.852" level="INFO">VALUE: [0.0001698749999999999, 0.0001693190000000011, 0.00017056999999999836, 0.0001707230000000011, 0.00016998699999999992, 0.00017030499999999907, 0.00016908300000000043, 0.0001700550000000023, 0.00016941700000000157, 0.00017032000000000158, 0.0001690420000000012, 0.0001698749999999999, 0.00016966700000000182, 0.0001699719999999974, 0.00016988899999999946, 0.00016932000000000058, 0.00017055600000000226, 0.0001699160000000026, 0.00017002799999999915, 0.00016912499999999914, 0.00017098600000000144, 0.00016997300000000035, 0.00016931899999999764, 0.00017043099999999867, 0.00016962499999999964, 0.0001706109999999976, 0.00016997300000000035, 0.00017017999999999894, 0.00016948599999999994, 0.00017011100000000057, 0.00016947200000000037, 0.00016972200000000062, 0.00016930599999999754, 0.00017041599999999962, 0.00016913799999999923, 0.00017068099999999892, 0.00016965299999999878, 0.00016948599999999994, 0.00016995900000000078, 0.00017001399999999958, 0.0001708329999999987, 0.00016988899999999946, 0.00017070899999999806, 0.0001704580000000018, 0.00017082000000000208, 0.00016934799999999972, 0.0001706390000000002, 0.00017026399999999983, 0.000169403000000002, 0.0001709719999999984]</msg>
<status status="PASS" starttime="20201112 09:54:11.851" endtime="20201112 09:54:11.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.846" endtime="20201112 09:54:11.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.856" endtime="20201112 09:54:11.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.860" endtime="20201112 09:54:11.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.858" endtime="20201112 09:54:11.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.854" endtime="20201112 09:54:11.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.482" endtime="20201112 09:54:11.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.481" endtime="20201112 09:54:11.881"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.889" endtime="20201112 09:54:11.913"></status>
</kw>
<msg timestamp="20201112 09:54:11.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.888" endtime="20201112 09:54:11.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.914" endtime="20201112 09:54:11.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.917" endtime="20201112 09:54:11.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.885" endtime="20201112 09:54:11.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.883" endtime="20201112 09:54:11.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.927" endtime="20201112 09:54:12.212"></status>
</kw>
<msg timestamp="20201112 09:54:12.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:11.925" endtime="20201112 09:54:12.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:12.216" endtime="20201112 09:54:12.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.224" endtime="20201112 09:54:12.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.923" endtime="20201112 09:54:12.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.921" endtime="20201112 09:54:12.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.231" level="INFO">${RESULT} = [{'time': 0.02223175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001718750000000019, 'source_diff': 0.0001718750000000019}, {'time': 0.022423778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:12.228" endtime="20201112 09:54:12.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.244" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:12.232" endtime="20201112 09:54:12.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.248" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.247" endtime="20201112 09:54:12.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.251" level="INFO">VALUE: [0.0001718750000000019, 0.0001723200000000001, 0.0001715559999999998, 0.000171888999999998, 0.00017231899999999717, 0.00017287499999999942, 0.00017265300000000178, 0.0001721390000000017, 0.00017163899999999774, 0.0001726109999999996, 0.0001728049999999981, 0.0001727499999999993, 0.00017281999999999714, 0.00017188900000000146, 0.00017148700000000142, 0.00017147200000000237, 0.00017231900000000064, 0.00017290299999999856, 0.00017183399999999918, 0.0001723200000000001, 0.0001724170000000011, 0.00017180500000000057, 0.00017286099999999985, 0.00017120799999999908, 0.00017179200000000047, 0.0001725139999999986, 0.00017116699999999985, 0.00017148599999999847, 0.00017230500000000107, 0.00017106999999999886, 0.0001713889999999975, 0.00017233399999999968, 0.00017241600000000162, 0.00017195799999999983, 0.00017151400000000108, 0.0001724719999999999, 0.00017143099999999967, 0.00017180600000000004, 0.00017180500000000057, 0.00017279099999999853, 0.0001715689999999999, 0.0001715559999999998, 0.00017254200000000122, 0.00017140200000000105, 0.0001725139999999986, 0.00017279099999999853, 0.00017170800000000305, 0.0001723200000000001, 0.000171097000000002, 0.000172179999999994]</msg>
<status status="PASS" starttime="20201112 09:54:12.250" endtime="20201112 09:54:12.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.245" endtime="20201112 09:54:12.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.254" endtime="20201112 09:54:12.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.258" endtime="20201112 09:54:12.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.256" endtime="20201112 09:54:12.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.253" endtime="20201112 09:54:12.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.882" endtime="20201112 09:54:12.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.881" endtime="20201112 09:54:12.279"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.287" endtime="20201112 09:54:12.311"></status>
</kw>
<msg timestamp="20201112 09:54:12.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.286" endtime="20201112 09:54:12.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.313" endtime="20201112 09:54:12.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.315" endtime="20201112 09:54:12.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.283" endtime="20201112 09:54:12.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.281" endtime="20201112 09:54:12.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.325" endtime="20201112 09:54:12.611"></status>
</kw>
<msg timestamp="20201112 09:54:12.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.324" endtime="20201112 09:54:12.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.615" endtime="20201112 09:54:12.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.623" endtime="20201112 09:54:12.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.321" endtime="20201112 09:54:12.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.319" endtime="20201112 09:54:12.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.630" level="INFO">${RESULT} = [{'time': 0.022009292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017355599999999832, 'source_diff': 0.00017355599999999832}, {'time': 0.022201306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:12.627" endtime="20201112 09:54:12.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:12.643" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:12.631" endtime="20201112 09:54:12.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.648" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:54:12.647" endtime="20201112 09:54:12.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.650" level="INFO">VALUE: [0.00017355599999999832, 0.0001746530000000003, 0.0001743049999999996, 0.0001743890000000005, 0.00017469499999999902, 0.00017397199999999793, 0.00017463900000000074, 0.00017315199999999933, 0.00017413899999999677, 0.00017450000000000104, 0.00017483299999999924, 0.00017423599999999775, 0.0001738200000000016, 0.00017405499999999935, 0.00017323600000000022, 0.00017348600000000047, 0.00017373599999999725, 0.00017490300000000056, 0.00017412500000000067, 0.00017479099999999706, 0.00017408300000000196, 0.00017472199999999868, 0.00017399999999999707, 0.00017380599999999857, 0.00017391600000000312, 0.0001741659999999999, 0.00017445799999999886, 0.000174792, 0.0001744439999999993, 0.00017498700000000145, 0.00017381899999999867, 0.00017320799999999761, 0.00017431899999999917, 0.000174098000000001, 0.00017357000000000136, 0.00017305599999999782, 0.00017355499999999885, 0.00017408300000000196, 0.000173889, 0.00017315300000000228, 0.00017380599999999857, 0.0001745560000000028, 0.00017456899999999942, 0.00017323600000000022, 0.0001743200000000021, 0.00017411099999999763, 0.0001735560000000018, 0.00017318000000000194, 0.00017412500000000067, 0.00017379200000000247]</msg>
<status status="PASS" starttime="20201112 09:54:12.649" endtime="20201112 09:54:12.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.644" endtime="20201112 09:54:12.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.654" endtime="20201112 09:54:12.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.657" endtime="20201112 09:54:12.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.656" endtime="20201112 09:54:12.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.652" endtime="20201112 09:54:12.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.280" endtime="20201112 09:54:12.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.279" endtime="20201112 09:54:12.678"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.687" endtime="20201112 09:54:12.711"></status>
</kw>
<msg timestamp="20201112 09:54:12.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.685" endtime="20201112 09:54:12.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.712" endtime="20201112 09:54:12.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.715" endtime="20201112 09:54:12.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.683" endtime="20201112 09:54:12.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.681" endtime="20201112 09:54:12.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.725" endtime="20201112 09:54:13.010"></status>
</kw>
<msg timestamp="20201112 09:54:13.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.723" endtime="20201112 09:54:13.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.014" endtime="20201112 09:54:13.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.022" endtime="20201112 09:54:13.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.721" endtime="20201112 09:54:13.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.719" endtime="20201112 09:54:13.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.029" level="INFO">${RESULT} = [{'time': 0.022031806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001762090000000001, 'source_diff': 0.0001762090000000001}, {'time': 0.022229833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:13.026" endtime="20201112 09:54:13.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.088" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:13.030" endtime="20201112 09:54:13.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.092" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.091" endtime="20201112 09:54:13.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.095" level="INFO">VALUE: [0.0001762090000000001, 0.00017673600000000025, 0.0001761249999999992, 0.00017518099999999995, 0.00017649999999999957, 0.00017570800000000011, 0.00017631900000000117, 0.00017620800000000061, 0.00017630499999999813, 0.00017605600000000082, 0.00017672200000000068, 0.00017620800000000061, 0.00017600000000000254, 0.00017649999999999957, 0.00017583300000000024, 0.0001764310000000012, 0.000176486, 0.00017512500000000167, 0.00017597199999999993, 0.0001769860000000005, 0.0001758059999999971, 0.0001752089999999991, 0.00017530600000000007, 0.00017672200000000068, 0.00017631900000000117, 0.00017572199999999968, 0.0001764449999999973, 0.00017545899999999934, 0.0001769730000000004, 0.0001759859999999995, 0.0001760830000000005, 0.0001758189999999972, 0.00017505599999999982, 0.00017656999999999742, 0.00017566599999999793, 0.0001753050000000006, 0.0001769029999999991, 0.00017530600000000007, 0.00017573599999999925, 0.00017633300000000074, 0.0001755140000000016, 0.00017540300000000106, 0.00017651399999999914, 0.0001759859999999995, 0.0001759859999999995, 0.00017613899999999877, 0.00017629099999999856, 0.00017502800000000068, 0.00017576400000000186, 0.00017580600000000057]</msg>
<status status="PASS" starttime="20201112 09:54:13.093" endtime="20201112 09:54:13.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.089" endtime="20201112 09:54:13.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.098" endtime="20201112 09:54:13.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.102" endtime="20201112 09:54:13.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.101" endtime="20201112 09:54:13.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.097" endtime="20201112 09:54:13.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.679" endtime="20201112 09:54:13.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.678" endtime="20201112 09:54:13.123"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.132" endtime="20201112 09:54:13.154"></status>
</kw>
<msg timestamp="20201112 09:54:13.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.130" endtime="20201112 09:54:13.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.156" endtime="20201112 09:54:13.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.158" endtime="20201112 09:54:13.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.128" endtime="20201112 09:54:13.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.126" endtime="20201112 09:54:13.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.168" endtime="20201112 09:54:13.454"></status>
</kw>
<msg timestamp="20201112 09:54:13.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.166" endtime="20201112 09:54:13.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.458" endtime="20201112 09:54:13.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.466" endtime="20201112 09:54:13.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.164" endtime="20201112 09:54:13.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.162" endtime="20201112 09:54:13.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.473" level="INFO">${RESULT} = [{'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017869400000000008, 'source_diff': 0.00017869400000000008}, {'time': 0.022316597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:13.469" endtime="20201112 09:54:13.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.486" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:13.473" endtime="20201112 09:54:13.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.490" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.489" endtime="20201112 09:54:13.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.493" level="INFO">VALUE: [0.00017869400000000008, 0.00017722200000000118, 0.00017727799999999946, 0.00017804199999999978, 0.00017788900000000052, 0.00017848599999999853, 0.00017847199999999896, 0.00017713899999999977, 0.00017881999999999967, 0.00017788900000000052, 0.00017763900000000027, 0.00017836100000000188, 0.00017788900000000052, 0.0001788190000000002, 0.00017888899999999805, 0.00017865300000000084, 0.00017880500000000063, 0.00017772199999999821, 0.0001788190000000002, 0.00017873600000000225, 0.00017713899999999977, 0.00017765200000000037, 0.0001776799999999995, 0.000178486000000002, 0.0001783059999999996, 0.00017722199999999771, 0.00017761099999999766, 0.0001783189999999997, 0.00017805499999999988, 0.0001779030000000001, 0.00017901400000000164, 0.00017779199999999953, 0.00017818099999999948, 0.0001778050000000031, 0.0001774449999999983, 0.00017709700000000106, 0.0001781250000000012, 0.000177179999999999, 0.00017784699999999834, 0.00017772200000000168, 0.0001771669999999989, 0.00017782000000000214, 0.00017873599999999878, 0.00017883299999999977, 0.00017742999999999925, 0.00017715299999999934, 0.00017840299999999712, 0.00017865299999999737, 0.00017847199999999896, 0.0001779590000000053]</msg>
<status status="PASS" starttime="20201112 09:54:13.492" endtime="20201112 09:54:13.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.487" endtime="20201112 09:54:13.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.496" endtime="20201112 09:54:13.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.500" endtime="20201112 09:54:13.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.498" endtime="20201112 09:54:13.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.495" endtime="20201112 09:54:13.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.124" endtime="20201112 09:54:13.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.123" endtime="20201112 09:54:13.521"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.529" endtime="20201112 09:54:13.553"></status>
</kw>
<msg timestamp="20201112 09:54:13.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.528" endtime="20201112 09:54:13.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.554" endtime="20201112 09:54:13.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.557" endtime="20201112 09:54:13.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.525" endtime="20201112 09:54:13.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.523" endtime="20201112 09:54:13.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.566" endtime="20201112 09:54:13.852"></status>
</kw>
<msg timestamp="20201112 09:54:13.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.565" endtime="20201112 09:54:13.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.856" endtime="20201112 09:54:13.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.864" endtime="20201112 09:54:13.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.562" endtime="20201112 09:54:13.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.560" endtime="20201112 09:54:13.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.872" level="INFO">${RESULT} = [{'time': 0.022122583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017969400000000108, 'source_diff': 0.00017969400000000108}, {'time': 0.022320597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:13.868" endtime="20201112 09:54:13.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:13.885" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:13.873" endtime="20201112 09:54:13.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.890" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:54:13.888" endtime="20201112 09:54:13.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.892" level="INFO">VALUE: [0.00017969400000000108, 0.00017988900000000252, 0.00018081899999999873, 0.00018044399999999836, 0.00017957000000000042, 0.00017919400000000058, 0.00017997200000000046, 0.00017947199999999996, 0.00018034700000000084, 0.00018088900000000005, 0.0001808329999999983, 0.00017956900000000095, 0.00017973599999999978, 0.0001801670000000019, 0.0001808060000000021, 0.00017988899999999905, 0.00018001399999999917, 0.00018080499999999916, 0.00017987499999999948, 0.0001808199999999982, 0.00018026299999999995, 0.00018012499999999973, 0.00017961099999999966, 0.0001794999999999991, 0.00017965300000000184, 0.00017963900000000227, 0.0001809589999999979, 0.0001793190000000007, 0.00017927800000000146, 0.00018048599999999707, 0.00017965300000000184, 0.00018032000000000117, 0.0001790700000000034, 0.00018020800000000115, 0.00018098600000000103, 0.0001793190000000007, 0.00017966699999999794, 0.0001805000000000001, 0.00018101400000000017, 0.0001806389999999998, 0.00017962499999999923, 0.00017929200000000103, 0.00017954199999999781, 0.00018040199999999965, 0.00017947199999999996, 0.00017997200000000046, 0.00017952699999999877, 0.00017998599999999657, 0.00018029199999999856, 0.00018026399999999942]</msg>
<status status="PASS" starttime="20201112 09:54:13.891" endtime="20201112 09:54:13.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.886" endtime="20201112 09:54:13.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.896" endtime="20201112 09:54:13.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.899" endtime="20201112 09:54:13.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.897" endtime="20201112 09:54:13.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.894" endtime="20201112 09:54:13.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.522" endtime="20201112 09:54:13.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.521" endtime="20201112 09:54:13.920"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.928" endtime="20201112 09:54:13.952"></status>
</kw>
<msg timestamp="20201112 09:54:13.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.927" endtime="20201112 09:54:13.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.954" endtime="20201112 09:54:13.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.956" endtime="20201112 09:54:13.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.924" endtime="20201112 09:54:13.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.922" endtime="20201112 09:54:13.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.965" endtime="20201112 09:54:14.252"></status>
</kw>
<msg timestamp="20201112 09:54:14.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.964" endtime="20201112 09:54:14.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.256" endtime="20201112 09:54:14.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.264" endtime="20201112 09:54:14.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.961" endtime="20201112 09:54:14.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.959" endtime="20201112 09:54:14.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.271" level="INFO">${RESULT} = [{'time': 0.022301694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018256900000000048, 'source_diff': 0.00018256900000000048}, {'time': 0.022497694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:14.267" endtime="20201112 09:54:14.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.284" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:14.272" endtime="20201112 09:54:14.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.288" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.287" endtime="20201112 09:54:14.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.291" level="INFO">VALUE: [0.00018256900000000048, 0.00018198599999999857, 0.0001829439999999974, 0.00018248599999999907, 0.00018248599999999907, 0.00018283399999999977, 0.00018155599999999938, 0.00018191600000000072, 0.0001824719999999995, 0.00018198600000000204, 0.00018198599999999857, 0.0001814450000000023, 0.0001828330000000003, 0.0001813749999999975, 0.0001825550000000009, 0.00018281900000000073, 0.00018274999999999889, 0.00018182000000000267, 0.00018156899999999948, 0.0001820139999999977, 0.00018238900000000155, 0.000181971999999999, 0.00018165300000000037, 0.00018130599999999913, 0.000182568999999997, 0.00018156899999999948, 0.00018175000000000135, 0.00018251400000000167, 0.0001829309999999973, 0.00018148600000000153, 0.00018269500000000008, 0.00018147200000000197, 0.00018202700000000127, 0.0001811390000000003, 0.00018280599999999717, 0.00018290199999999868, 0.00018286099999999944, 0.00018188900000000105, 0.00018198599999999857, 0.00018105600000000235, 0.00018230500000000066, 0.0001825550000000009, 0.00018155599999999938, 0.00018256999999999995, 0.00018273599999999932, 0.00018147299999999797, 0.00018193000000000376, 0.0001824859999999956, 0.00018197199999999553, 0.00018213899999999783]</msg>
<status status="PASS" starttime="20201112 09:54:14.289" endtime="20201112 09:54:14.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.285" endtime="20201112 09:54:14.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.294" endtime="20201112 09:54:14.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.297" endtime="20201112 09:54:14.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.296" endtime="20201112 09:54:14.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.292" endtime="20201112 09:54:14.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.921" endtime="20201112 09:54:14.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.920" endtime="20201112 09:54:14.318"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.327" endtime="20201112 09:54:14.351"></status>
</kw>
<msg timestamp="20201112 09:54:14.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.325" endtime="20201112 09:54:14.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.352" endtime="20201112 09:54:14.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.355" endtime="20201112 09:54:14.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.323" endtime="20201112 09:54:14.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.321" endtime="20201112 09:54:14.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.364" endtime="20201112 09:54:14.652"></status>
</kw>
<msg timestamp="20201112 09:54:14.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.362" endtime="20201112 09:54:14.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.656" endtime="20201112 09:54:14.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.664" endtime="20201112 09:54:14.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.360" endtime="20201112 09:54:14.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.358" endtime="20201112 09:54:14.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.671" level="INFO">${RESULT} = [{'time': 0.022026056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001832369999999993, 'source_diff': 0.0001832369999999993}, {'time': 0.022222069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:14.667" endtime="20201112 09:54:14.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:14.685" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:14.672" endtime="20201112 09:54:14.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.689" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:54:14.688" endtime="20201112 09:54:14.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.692" level="INFO">VALUE: [0.0001832369999999993, 0.00018341600000000222, 0.00018315199999999893, 0.00018502800000000028, 0.00018481899999999926, 0.00018366700000000194, 0.00018480600000000263, 0.00018322200000000025, 0.00018365300000000237, 0.00018349999999999964, 0.0001831529999999984, 0.00018480600000000263, 0.00018352799999999878, 0.00018355499999999844, 0.00018372200000000075, 0.00018463900000000033, 0.000184278000000003, 0.00018440299999999965, 0.0001844439999999989, 0.0001841529999999994, 0.0001839439999999984, 0.00018438900000000008, 0.00018430600000000213, 0.00018391599999999925, 0.0001843049999999992, 0.00018323600000000329, 0.00018312500000000273, 0.00018363899999999933, 0.00018415300000000287, 0.0001838330000000013, 0.0001842919999999991, 0.0001843330000000018, 0.00018391699999999872, 0.00018363899999999933, 0.0001833049999999982, 0.00018405499999999894, 0.000183875, 0.00018409700000000112, 0.00018433400000000127, 0.00018405600000000188, 0.00018490200000000068, 0.00018445800000000193, 0.00018362499999999976, 0.00018450000000000064, 0.00018447300000000097, 0.00018397199999999753, 0.0001849859999999981, 0.0001836529999999989, 0.0001841529999999994, 0.00018395900000000437]</msg>
<status status="PASS" starttime="20201112 09:54:14.690" endtime="20201112 09:54:14.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.686" endtime="20201112 09:54:14.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.699" endtime="20201112 09:54:14.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.703" endtime="20201112 09:54:14.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.701" endtime="20201112 09:54:14.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.698" endtime="20201112 09:54:14.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.319" endtime="20201112 09:54:14.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.319" endtime="20201112 09:54:14.724"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.732" endtime="20201112 09:54:14.756"></status>
</kw>
<msg timestamp="20201112 09:54:14.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.731" endtime="20201112 09:54:14.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.758" endtime="20201112 09:54:14.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.760" endtime="20201112 09:54:14.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.728" endtime="20201112 09:54:14.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.726" endtime="20201112 09:54:14.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.769" endtime="20201112 09:54:15.056"></status>
</kw>
<msg timestamp="20201112 09:54:15.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.768" endtime="20201112 09:54:15.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.060" endtime="20201112 09:54:15.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.068" endtime="20201112 09:54:15.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.765" endtime="20201112 09:54:15.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.763" endtime="20201112 09:54:15.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.074" level="INFO">${RESULT} = [{'time': 0.022069153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018630600000000067, 'source_diff': 0.00018630600000000067}, {'time': 0.022271181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:15.071" endtime="20201112 09:54:15.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.087" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:15.075" endtime="20201112 09:54:15.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.092" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.091" endtime="20201112 09:54:15.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.094" level="INFO">VALUE: [0.00018630600000000067, 0.00018641700000000122, 0.00018683299999999736, 0.0001857079999999997, 0.00018663900000000233, 0.00018550000000000164, 0.000186973, 0.00018565200000000143, 0.0001869860000000001, 0.0001856530000000009, 0.00018547199999999903, 0.00018648600000000307, 0.0001856530000000009, 0.0001870279999999988, 0.00018699999999999967, 0.0001861249999999988, 0.00018613899999999836, 0.0001868470000000004, 0.00018624999999999892, 0.0001863469999999999, 0.0001850689999999995, 0.00018606999999999999, 0.00018593000000000082, 0.00018562500000000176, 0.00018637499999999904, 0.00018541700000000022, 0.00018663899999999886, 0.00018615299999999793, 0.00018638900000000208, 0.00018655499999999797, 0.00018527800000000053, 0.000186666999999998, 0.00018563900000000133, 0.0001855140000000012, 0.00018697200000000053, 0.0001856530000000009, 0.0001859859999999991, 0.00018611099999999922, 0.00018697200000000053, 0.00018531899999999976, 0.00018609699999999965, 0.00018540300000000065, 0.00018563899999999786, 0.00018665299999999843, 0.00018648699999999907, 0.00018597199999999953, 0.00018643000000000132, 0.00018680600000000464, 0.00018537499999999457, 0.00018616700000000097]</msg>
<status status="PASS" starttime="20201112 09:54:15.093" endtime="20201112 09:54:15.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.088" endtime="20201112 09:54:15.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.098" endtime="20201112 09:54:15.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.101" endtime="20201112 09:54:15.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.100" endtime="20201112 09:54:15.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.096" endtime="20201112 09:54:15.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.724" endtime="20201112 09:54:15.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.724" endtime="20201112 09:54:15.122"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.131" endtime="20201112 09:54:15.155"></status>
</kw>
<msg timestamp="20201112 09:54:15.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.129" endtime="20201112 09:54:15.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.156" endtime="20201112 09:54:15.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.159" endtime="20201112 09:54:15.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.127" endtime="20201112 09:54:15.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.125" endtime="20201112 09:54:15.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.168" endtime="20201112 09:54:15.454"></status>
</kw>
<msg timestamp="20201112 09:54:15.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.166" endtime="20201112 09:54:15.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.458" endtime="20201112 09:54:15.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.466" endtime="20201112 09:54:15.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.164" endtime="20201112 09:54:15.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.162" endtime="20201112 09:54:15.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.473" level="INFO">${RESULT} = [{'time': 0.022069944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018837500000000104, 'source_diff': 0.00018837500000000104}, {'time': 0.022274014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:15.470" endtime="20201112 09:54:15.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.486" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:15.474" endtime="20201112 09:54:15.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.490" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.489" endtime="20201112 09:54:15.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.493" level="INFO">VALUE: [0.00018837500000000104, 0.00018733300000000133, 0.00018891700000000025, 0.00018713899999999936, 0.0001884860000000016, 0.00018747199999999756, 0.00018842999999999985, 0.00018879200000000013, 0.00018823599999999788, 0.00018769399999999867, 0.00018845899999999846, 0.0001890280000000008, 0.00018780499999999922, 0.0001877219999999978, 0.0001871530000000024, 0.00018782000000000174, 0.00018708300000000108, 0.00018890300000000068, 0.00018798599999999763, 0.0001884999999999977, 0.00018848700000000107, 0.0001876380000000004, 0.00018763899999999986, 0.00018898599999999863, 0.00018747200000000103, 0.0001871530000000024, 0.0001889860000000021, 0.00018830499999999972, 0.0001889029999999972, 0.00018713899999999936, 0.0001876250000000003, 0.0001873059999999982, 0.00018825000000000092, 0.00018830499999999972, 0.00018740299999999918, 0.00018766700000000247, 0.00018876399999999752, 0.00018791599999999978, 0.00018877800000000056, 0.0001875829999999981, 0.00018708400000000056, 0.00018855599999999945, 0.00018758300000000158, 0.0001878890000000001, 0.00018797199999999806, 0.0001876389999999964, 0.0001884860000000016, 0.00018880600000000664, 0.00018819400000000264, 0.00018763900000000333]</msg>
<status status="PASS" starttime="20201112 09:54:15.491" endtime="20201112 09:54:15.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.487" endtime="20201112 09:54:15.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.496" endtime="20201112 09:54:15.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.500" endtime="20201112 09:54:15.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.498" endtime="20201112 09:54:15.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.494" endtime="20201112 09:54:15.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.123" endtime="20201112 09:54:15.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.122" endtime="20201112 09:54:15.520"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.529" endtime="20201112 09:54:15.553"></status>
</kw>
<msg timestamp="20201112 09:54:15.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.527" endtime="20201112 09:54:15.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.554" endtime="20201112 09:54:15.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.557" endtime="20201112 09:54:15.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.525" endtime="20201112 09:54:15.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.523" endtime="20201112 09:54:15.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.566" endtime="20201112 09:54:15.852"></status>
</kw>
<msg timestamp="20201112 09:54:15.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.564" endtime="20201112 09:54:15.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.856" endtime="20201112 09:54:15.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.864" endtime="20201112 09:54:15.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.562" endtime="20201112 09:54:15.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.560" endtime="20201112 09:54:15.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.871" level="INFO">${RESULT} = [{'time': 0.022286639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018904200000000038, 'source_diff': 0.00018904200000000038}, {'time': 0.022492639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:15.867" endtime="20201112 09:54:15.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:15.884" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:15.872" endtime="20201112 09:54:15.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.888" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:54:15.887" endtime="20201112 09:54:15.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.891" level="INFO">VALUE: [0.00018904200000000038, 0.0001899719999999966, 0.00018995900000000343, 0.00018980500000000122, 0.00018923599999999888, 0.00019080499999999875, 0.00018958399999999959, 0.00019088899999999964, 0.00018997200000000006, 0.00018947199999999956, 0.0001908190000000018, 0.00019088899999999964, 0.0001899999999999992, 0.0001904999999999997, 0.000189151999999998, 0.00018933299999999986, 0.00019062499999999982, 0.00018954200000000088, 0.00018973700000000232, 0.00019084699999999746, 0.00018970800000000024, 0.00018915300000000093, 0.00018983399999999984, 0.0001909029999999992, 0.00018983300000000036, 0.00018927800000000106, 0.00018929200000000063, 0.00018923600000000235, 0.000189667000000001, 0.00018913799999999842, 0.00019043000000000185, 0.00018972299999999928, 0.00018998599999999963, 0.00018913900000000136, 0.00018947299999999903, 0.00018913900000000136, 0.00018991600000000178, 0.00019011099999999975, 0.0001906389999999994, 0.00019082000000000127, 0.00019037499999999957, 0.00018997200000000006, 0.00018911099999999875, 0.00018983399999999984, 0.00019018100000000107, 0.00019024999999999598, 0.00019005500000000147, 0.0001904029999999987, 0.00018945800000000346, 0.00019059800000000016]</msg>
<status status="PASS" starttime="20201112 09:54:15.889" endtime="20201112 09:54:15.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.885" endtime="20201112 09:54:15.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.894" endtime="20201112 09:54:15.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.898" endtime="20201112 09:54:15.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.896" endtime="20201112 09:54:15.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.893" endtime="20201112 09:54:15.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.521" endtime="20201112 09:54:15.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.521" endtime="20201112 09:54:15.918"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.927" endtime="20201112 09:54:15.951"></status>
</kw>
<msg timestamp="20201112 09:54:15.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.925" endtime="20201112 09:54:15.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.952" endtime="20201112 09:54:15.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.955" endtime="20201112 09:54:15.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.923" endtime="20201112 09:54:15.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.921" endtime="20201112 09:54:15.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.964" endtime="20201112 09:54:16.251"></status>
</kw>
<msg timestamp="20201112 09:54:16.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.962" endtime="20201112 09:54:16.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.255" endtime="20201112 09:54:16.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.263" endtime="20201112 09:54:16.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.960" endtime="20201112 09:54:16.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.958" endtime="20201112 09:54:16.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.270" level="INFO">${RESULT} = [{'time': 0.022269806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019106999999999805, 'source_diff': 0.00019106999999999805}, {'time': 0.022479806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:16.267" endtime="20201112 09:54:16.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.284" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:16.271" endtime="20201112 09:54:16.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.289" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.288" endtime="20201112 09:54:16.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.291" level="INFO">VALUE: [0.00019106999999999805, 0.00019215300000000046, 0.0001924719999999991, 0.00019280500000000075, 0.00019124999999999698, 0.0001928199999999998, 0.0001922229999999983, 0.0001923329999999994, 0.00019172199999999834, 0.00019116699999999903, 0.00019179199999999966, 0.00019109700000000118, 0.00019240200000000124, 0.00019195799999999902, 0.0001911389999999999, 0.00019301400000000177, 0.00019115299999999946, 0.00019166600000000006, 0.00019130500000000272, 0.0001917359999999979, 0.0001928199999999998, 0.00019138900000000014, 0.00019175000000000095, 0.00019258299999999964, 0.0001913749999999971, 0.00019198599999999816, 0.00019115300000000293, 0.00019226299999999807, 0.0001916939999999992, 0.0001912779999999996, 0.0001919030000000002, 0.00019156999999999855, 0.0001927919999999972, 0.0001925269999999979, 0.000191054999999999, 0.0001927359999999989, 0.00019197200000000206, 0.00019283399999999937, 0.0001918610000000015, 0.00019215300000000046, 0.00019226400000000102, 0.00019106999999999805, 0.0001926810000000001, 0.00019129200000000263, 0.0001911939999999987, 0.00019154200000000288, 0.00019281999999999633, 0.00019272199999999934, 0.00019297299999999906, 0.00019233299999999592]</msg>
<status status="PASS" starttime="20201112 09:54:16.290" endtime="20201112 09:54:16.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.285" endtime="20201112 09:54:16.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.295" endtime="20201112 09:54:16.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.298" endtime="20201112 09:54:16.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.297" endtime="20201112 09:54:16.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.293" endtime="20201112 09:54:16.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.919" endtime="20201112 09:54:16.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.919" endtime="20201112 09:54:16.319"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.327" endtime="20201112 09:54:16.352"></status>
</kw>
<msg timestamp="20201112 09:54:16.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.326" endtime="20201112 09:54:16.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.354" endtime="20201112 09:54:16.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.356" endtime="20201112 09:54:16.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.323" endtime="20201112 09:54:16.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.321" endtime="20201112 09:54:16.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.365" endtime="20201112 09:54:16.654"></status>
</kw>
<msg timestamp="20201112 09:54:16.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.364" endtime="20201112 09:54:16.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.658" endtime="20201112 09:54:16.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.667" endtime="20201112 09:54:16.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.361" endtime="20201112 09:54:16.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.359" endtime="20201112 09:54:16.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.673" level="INFO">${RESULT} = [{'time': 0.021917056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001930420000000009, 'source_diff': 0.0001930420000000009}, {'time': 0.022131083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:16.670" endtime="20201112 09:54:16.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:16.686" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:16.674" endtime="20201112 09:54:16.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.691" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:54:16.690" endtime="20201112 09:54:16.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.693" level="INFO">VALUE: [0.0001930420000000009, 0.00019330499999999778, 0.00019356900000000107, 0.00019450000000000023, 0.00019476300000000057, 0.00019312500000000232, 0.00019431899999999835, 0.00019308300000000014, 0.0001938749999999996, 0.00019412499999999985, 0.0001949859999999977, 0.0001936659999999986, 0.00019309700000000318, 0.00019316699999999756, 0.00019348599999999966, 0.0001939870000000031, 0.0001944720000000011, 0.00019448600000000066, 0.00019481899999999885, 0.000193055999999997, 0.00019470899999999777, 0.00019481899999999885, 0.00019327799999999812, 0.0001933200000000003, 0.00019388899999999917, 0.0001943200000000013, 0.000193055000000001, 0.00019422200000000084, 0.00019434700000000096, 0.0001939030000000022, 0.00019469399999999873, 0.00019315199999999852, 0.00019363899999999892, 0.00019430499999999878, 0.00019407000000000105, 0.0001937229999999998, 0.00019331900000000082, 0.00019440199999999977, 0.00019463899999999992, 0.0001933200000000003, 0.00019472199999999787, 0.00019413899999999942, 0.0001942780000000026, 0.00019454199999999894, 0.00019390299999999874, 0.00019462500000000382, 0.00019430599999999826, 0.00019406900000000504, 0.00019337499999999563, 0.0001945830000000051]</msg>
<status status="PASS" starttime="20201112 09:54:16.692" endtime="20201112 09:54:16.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.687" endtime="20201112 09:54:16.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.697" endtime="20201112 09:54:16.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.700" endtime="20201112 09:54:16.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.699" endtime="20201112 09:54:16.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.695" endtime="20201112 09:54:16.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.320" endtime="20201112 09:54:16.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.319" endtime="20201112 09:54:16.721"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.730" endtime="20201112 09:54:16.754"></status>
</kw>
<msg timestamp="20201112 09:54:16.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.728" endtime="20201112 09:54:16.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.755" endtime="20201112 09:54:16.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.758" endtime="20201112 09:54:16.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.726" endtime="20201112 09:54:16.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.723" endtime="20201112 09:54:16.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.767" endtime="20201112 09:54:17.053"></status>
</kw>
<msg timestamp="20201112 09:54:17.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.765" endtime="20201112 09:54:17.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.057" endtime="20201112 09:54:17.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.065" endtime="20201112 09:54:17.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.763" endtime="20201112 09:54:17.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.761" endtime="20201112 09:54:17.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.072" level="INFO">${RESULT} = [{'time': 0.022062972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019605500000000053, 'source_diff': 0.00019605500000000053}, {'time': 0.022275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:17.069" endtime="20201112 09:54:17.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.085" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:17.073" endtime="20201112 09:54:17.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.089" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.088" endtime="20201112 09:54:17.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.092" level="INFO">VALUE: [0.00019605500000000053, 0.000196153000000001, 0.00019600000000000173, 0.00019548600000000166, 0.00019565200000000102, 0.0001964859999999992, 0.00019613900000000142, 0.0001953200000000023, 0.00019559699999999874, 0.0001958880000000017, 0.0001951660000000001, 0.00019531899999999935, 0.0001952360000000014, 0.0001950970000000017, 0.0001962920000000007, 0.0001962360000000024, 0.000196153000000001, 0.00019519500000000217, 0.00019663900000000192, 0.0001961660000000011, 0.00019577699999999768, 0.00019505499999999953, 0.0001958889999999977, 0.00019548600000000166, 0.00019530499999999978, 0.000195749999999998, 0.00019545799999999905, 0.0001955689999999996, 0.0001964859999999992, 0.00019613900000000142, 0.00019680499999999782, 0.0001968889999999987, 0.0001964859999999992, 0.0001959859999999987, 0.00019597300000000206, 0.00019681899999999738, 0.00019558300000000264, 0.000195055999999999, 0.00019666700000000106, 0.0001960140000000013, 0.00019565200000000102, 0.00019563900000000092, 0.00019697200000000012, 0.00019697200000000012, 0.0001954729999999981, 0.00019580500000000028, 0.00019655500000000103, 0.00019643100000000385, 0.00019580599999999976, 0.0001952360000000014]</msg>
<status status="PASS" starttime="20201112 09:54:17.090" endtime="20201112 09:54:17.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.086" endtime="20201112 09:54:17.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.095" endtime="20201112 09:54:17.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.099" endtime="20201112 09:54:17.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.097" endtime="20201112 09:54:17.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.094" endtime="20201112 09:54:17.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.722" endtime="20201112 09:54:17.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.721" endtime="20201112 09:54:17.120"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.128" endtime="20201112 09:54:17.153"></status>
</kw>
<msg timestamp="20201112 09:54:17.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.127" endtime="20201112 09:54:17.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.155" endtime="20201112 09:54:17.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.157" endtime="20201112 09:54:17.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.124" endtime="20201112 09:54:17.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.122" endtime="20201112 09:54:17.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.167" endtime="20201112 09:54:17.453"></status>
</kw>
<msg timestamp="20201112 09:54:17.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:17.165" endtime="20201112 09:54:17.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022291208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:17.457" endtime="20201112 09:54:17.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.465" endtime="20201112 09:54:17.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.162" endtime="20201112 09:54:17.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.161" endtime="20201112 09:54:17.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.472" level="INFO">${RESULT} = [{'time': 0.022291208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019820799999999833, 'source_diff': 0.00019820799999999833}, {'time': 0.02250925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:17.469" endtime="20201112 09:54:17.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.485" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:17.473" endtime="20201112 09:54:17.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.489" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.488" endtime="20201112 09:54:17.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.492" level="INFO">VALUE: [0.00019820799999999833, 0.00019873600000000144, 0.0001974860000000002, 0.00019834800000000097, 0.00019722200000000037, 0.00019880499999999982, 0.0001982500000000005, 0.00019763899999999945, 0.00019881999999999886, 0.00019887500000000113, 0.00019809700000000124, 0.00019733300000000092, 0.00019804200000000244, 0.00019886100000000156, 0.00019713900000000242, 0.0001979860000000007, 0.00019733300000000092, 0.0001983890000000002, 0.0001978059999999983, 0.00019704200000000144, 0.0001983890000000002, 0.00019716700000000156, 0.00019747200000000062, 0.00019749999999999976, 0.00019881999999999886, 0.0001983890000000002, 0.00019847200000000162, 0.00019897200000000212, 0.0001983059999999988, 0.00019855599999999904, 0.00019758300000000117, 0.000197540999999999, 0.0001978889999999997, 0.00019883399999999843, 0.0001987370000000009, 0.0001979860000000007, 0.00019883299999999896, 0.0001987080000000023, 0.00019765299999999902, 0.00019795800000000155, 0.00019797200000000112, 0.00019730500000000178, 0.00019825000000000398, 0.00019815299999999952, 0.0001977920000000022, 0.00019705500000000153, 0.00019809700000000124, 0.0001987360000000049, 0.00019800000000000373, 0.00019711099999999981]</msg>
<status status="PASS" starttime="20201112 09:54:17.490" endtime="20201112 09:54:17.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.486" endtime="20201112 09:54:17.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.495" endtime="20201112 09:54:17.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.499" endtime="20201112 09:54:17.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.497" endtime="20201112 09:54:17.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.494" endtime="20201112 09:54:17.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.121" endtime="20201112 09:54:17.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.120" endtime="20201112 09:54:17.520"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.528" endtime="20201112 09:54:17.553"></status>
</kw>
<msg timestamp="20201112 09:54:17.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.527" endtime="20201112 09:54:17.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.555" endtime="20201112 09:54:17.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.557" endtime="20201112 09:54:17.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.524" endtime="20201112 09:54:17.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.522" endtime="20201112 09:54:17.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.566" endtime="20201112 09:54:17.852"></status>
</kw>
<msg timestamp="20201112 09:54:17.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.565" endtime="20201112 09:54:17.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.857" endtime="20201112 09:54:17.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.865" endtime="20201112 09:54:17.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.562" endtime="20201112 09:54:17.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.560" endtime="20201112 09:54:17.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.871" level="INFO">${RESULT} = [{'time': 0.022142236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020087499999999966, 'source_diff': 0.00020087499999999966}, {'time': 0.022354278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:17.868" endtime="20201112 09:54:17.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:17.886" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:17.872" endtime="20201112 09:54:17.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.890" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:54:17.889" endtime="20201112 09:54:17.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.893" level="INFO">VALUE: [0.00020087499999999966, 0.00020029200000000122, 0.00020041699999999787, 0.00020079099999999878, 0.00019955500000000057, 0.00019988899999999823, 0.0001994999999999983, 0.00020019400000000076, 0.00020030500000000132, 0.00020056900000000114, 0.00020005500000000107, 0.0002000700000000001, 0.00020023600000000294, 0.00020092999999999847, 0.00020065299999999855, 0.00019947199999999915, 0.00020048599999999972, 0.0001994999999999983, 0.00019951399999999786, 0.00019945799999999958, 0.00019998599999999922, 0.00020041699999999787, 0.0001994860000000022, 0.00019998599999999922, 0.00020097200000000065, 0.00020048599999999972, 0.00019997199999999965, 0.00019966699999999712, 0.0001994860000000022, 0.00019988899999999823, 0.00019905500000000007, 0.0001999029999999978, 0.00019933399999999893, 0.00020029200000000122, 0.00020084699999999706, 0.00019920799999999933, 0.0002003479999999995, 0.0001992500000000015, 0.00020015200000000205, 0.0002004999999999993, 0.000200444000000001, 0.00019927800000000065, 0.00019940300000000077, 0.0002004999999999993, 0.00019913900000000095, 0.0001993749999999947, 0.0001997219999999994, 0.00019998599999999922, 0.00020051399999999886, 0.0002007639999999991]</msg>
<status status="PASS" starttime="20201112 09:54:17.891" endtime="20201112 09:54:17.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.887" endtime="20201112 09:54:17.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.896" endtime="20201112 09:54:17.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.900" endtime="20201112 09:54:17.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.898" endtime="20201112 09:54:17.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.894" endtime="20201112 09:54:17.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.521" endtime="20201112 09:54:17.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.520" endtime="20201112 09:54:17.920"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.929" endtime="20201112 09:54:17.953"></status>
</kw>
<msg timestamp="20201112 09:54:17.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.927" endtime="20201112 09:54:17.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.955" endtime="20201112 09:54:17.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.957" endtime="20201112 09:54:17.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.925" endtime="20201112 09:54:17.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.923" endtime="20201112 09:54:17.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.966" endtime="20201112 09:54:18.253"></status>
</kw>
<msg timestamp="20201112 09:54:18.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:17.965" endtime="20201112 09:54:18.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.257" endtime="20201112 09:54:18.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.265" endtime="20201112 09:54:18.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.962" endtime="20201112 09:54:18.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.960" endtime="20201112 09:54:18.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.272" level="INFO">${RESULT} = [{'time': 0.022138917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020115300000000252, 'source_diff': 0.00020115300000000252}, {'time': 0.022360944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:18.268" endtime="20201112 09:54:18.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.285" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:18.273" endtime="20201112 09:54:18.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.289" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.288" endtime="20201112 09:54:18.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.292" level="INFO">VALUE: [0.00020115300000000252, 0.00020223600000000147, 0.00020179099999999978, 0.00020284700000000253, 0.0002015000000000003, 0.00020198600000000122, 0.00020229100000000028, 0.00020237500000000117, 0.00020168100000000216, 0.0002021670000000031, 0.00020270799999999936, 0.00020215200000000058, 0.0002012769999999997, 0.00020237500000000117, 0.00020244500000000248, 0.00020220800000000233, 0.00020231899999999942, 0.00020237500000000117, 0.00020213900000000048, 0.00020282000000000286, 0.00020142999999999897, 0.00020281899999999992, 0.00020288899999999777, 0.0002013610000000006, 0.00020104200000000197, 0.00020158400000000118, 0.00020140199999999983, 0.00020281899999999992, 0.0002010549999999986, 0.00020188900000000023, 0.00020147300000000062, 0.00020130500000000232, 0.00020241700000000334, 0.00020265300000000055, 0.00020263900000000099, 0.00020283399999999896, 0.0002025550000000001, 0.00020191699999999937, 0.0002013060000000018, 0.0002019029999999998, 0.00020115300000000252, 0.00020112499999999991, 0.00020280500000000035, 0.00020106899999999817, 0.00020105599999999807, 0.00020188899999999677, 0.00020263800000000498, 0.00020198600000000122, 0.00020301400000000136, 0.00020248599999999478]</msg>
<status status="PASS" starttime="20201112 09:54:18.290" endtime="20201112 09:54:18.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.286" endtime="20201112 09:54:18.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.295" endtime="20201112 09:54:18.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.299" endtime="20201112 09:54:18.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.297" endtime="20201112 09:54:18.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.294" endtime="20201112 09:54:18.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.921" endtime="20201112 09:54:18.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.921" endtime="20201112 09:54:18.320"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.328" endtime="20201112 09:54:18.353"></status>
</kw>
<msg timestamp="20201112 09:54:18.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.327" endtime="20201112 09:54:18.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.355" endtime="20201112 09:54:18.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.357" endtime="20201112 09:54:18.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.324" endtime="20201112 09:54:18.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.322" endtime="20201112 09:54:18.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.366" endtime="20201112 09:54:18.653"></status>
</kw>
<msg timestamp="20201112 09:54:18.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.365" endtime="20201112 09:54:18.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.657" endtime="20201112 09:54:18.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.665" endtime="20201112 09:54:18.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.362" endtime="20201112 09:54:18.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.361" endtime="20201112 09:54:18.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.672" level="INFO">${RESULT} = [{'time': 0.022218333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020354100000000153, 'source_diff': 0.00020354100000000153}, {'time': 0.022442347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:18.668" endtime="20201112 09:54:18.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:18.685" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:18.673" endtime="20201112 09:54:18.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.690" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:54:18.689" endtime="20201112 09:54:18.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.693" level="INFO">VALUE: [0.00020354100000000153, 0.00020313900000000149, 0.00020330600000000032, 0.00020438899999999927, 0.00020380600000000082, 0.000204236, 0.00020431900000000142, 0.00020490299999999934, 0.00020380600000000082, 0.000203235999999999, 0.00020449999999999982, 0.00020398599999999975, 0.00020343100000000044, 0.00020366699999999766, 0.00020395900000000008, 0.00020480499999999888, 0.0002032640000000016, 0.0002038200000000004, 0.00020306999999999964, 0.0002030550000000006, 0.0002033610000000026, 0.0002032640000000016, 0.00020407000000000064, 0.00020325000000000204, 0.00020330499999999738, 0.0002033610000000026, 0.00020397200000000018, 0.00020413900000000249, 0.00020363899999999852, 0.00020380499999999788, 0.00020475000000000007, 0.0002042779999999987, 0.00020440299999999884, 0.00020468000000000222, 0.00020348600000000272, 0.00020415299999999859, 0.00020500000000000032, 0.00020500000000000032, 0.00020430600000000132, 0.00020490199999999986, 0.00020352799999999796, 0.00020449999999999982, 0.00020466699999999866, 0.00020451399999999592, 0.00020463800000000004, 0.00020429100000000228, 0.00020390299999999834, 0.00020315299999999759, 0.00020416599999999868, 0.00020313799999999854]</msg>
<status status="PASS" starttime="20201112 09:54:18.691" endtime="20201112 09:54:18.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.686" endtime="20201112 09:54:18.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.696" endtime="20201112 09:54:18.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.700" endtime="20201112 09:54:18.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.698" endtime="20201112 09:54:18.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.695" endtime="20201112 09:54:18.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.321" endtime="20201112 09:54:18.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.320" endtime="20201112 09:54:18.721"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.729" endtime="20201112 09:54:18.755"></status>
</kw>
<msg timestamp="20201112 09:54:18.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.728" endtime="20201112 09:54:18.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.756" endtime="20201112 09:54:18.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.759" endtime="20201112 09:54:18.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.725" endtime="20201112 09:54:18.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.723" endtime="20201112 09:54:18.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.768" endtime="20201112 09:54:19.054"></status>
</kw>
<msg timestamp="20201112 09:54:19.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.766" endtime="20201112 09:54:19.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.058" endtime="20201112 09:54:19.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.066" endtime="20201112 09:54:19.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.764" endtime="20201112 09:54:19.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.762" endtime="20201112 09:54:19.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.073" level="INFO">${RESULT} = [{'time': 0.022342889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020654200000000053, 'source_diff': 0.00020654200000000053}, {'time': 0.022568917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:19.070" endtime="20201112 09:54:19.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.086" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:19.074" endtime="20201112 09:54:19.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.090" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.089" endtime="20201112 09:54:19.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.093" level="INFO">VALUE: [0.00020654200000000053, 0.00020613900000000102, 0.00020663899999999805, 0.00020698599999999928, 0.00020530599999999885, 0.0002058339999999985, 0.00020704199999999756, 0.0002062910000000008, 0.00020640300000000084, 0.00020631899999999995, 0.0002057360000000015, 0.00020613900000000102, 0.00020630500000000038, 0.0002053750000000007, 0.00020698599999999928, 0.00020602699999999752, 0.0002061659999999972, 0.0002061520000000011, 0.00020598600000000175, 0.00020609699999999884, 0.00020644499999999955, 0.00020698599999999928, 0.00020648599999999878, 0.00020631899999999995, 0.00020658399999999924, 0.0002050559999999986, 0.00020622199999999896, 0.00020681900000000045, 0.0002057360000000015, 0.00020698599999999928, 0.00020679200000000078, 0.00020541599999999993, 0.0002052909999999998, 0.00020688900000000177, 0.0002055140000000004, 0.00020598599999999828, 0.00020580499999999988, 0.0002060970000000023, 0.0002068889999999983, 0.00020629200000000028, 0.00020506999999999817, 0.00020565300000000009, 0.0002064170000000004, 0.00020644499999999955, 0.00020513900000000002, 0.00020680600000000382, 0.00020623599999999853, 0.00020530500000000285, 0.0002057220000000054, 0.00020595899999999862]</msg>
<status status="PASS" starttime="20201112 09:54:19.091" endtime="20201112 09:54:19.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.087" endtime="20201112 09:54:19.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.096" endtime="20201112 09:54:19.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.100" endtime="20201112 09:54:19.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.098" endtime="20201112 09:54:19.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.095" endtime="20201112 09:54:19.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.722" endtime="20201112 09:54:19.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.721" endtime="20201112 09:54:19.121"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.129" endtime="20201112 09:54:19.154"></status>
</kw>
<msg timestamp="20201112 09:54:19.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.128" endtime="20201112 09:54:19.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.156" endtime="20201112 09:54:19.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.158" endtime="20201112 09:54:19.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.125" endtime="20201112 09:54:19.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.123" endtime="20201112 09:54:19.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.167" endtime="20201112 09:54:19.453"></status>
</kw>
<msg timestamp="20201112 09:54:19.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:19.165" endtime="20201112 09:54:19.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:19.457" endtime="20201112 09:54:19.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.465" endtime="20201112 09:54:19.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.163" endtime="20201112 09:54:19.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.161" endtime="20201112 09:54:19.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.472" level="INFO">${RESULT} = [{'time': 0.0224015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020793100000000148, 'source_diff': 0.00020793100000000148}, {'time': 0.022631528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:19.469" endtime="20201112 09:54:19.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.486" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:19.473" endtime="20201112 09:54:19.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.491" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.490" endtime="20201112 09:54:19.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.493" level="INFO">VALUE: [0.00020793100000000148, 0.00020790300000000234, 0.00020880600000000235, 0.00020769400000000132, 0.0002084720000000012, 0.00020729200000000128, 0.0002083889999999998, 0.00020897300000000119, 0.0002089859999999978, 0.00020781899999999798, 0.00020890300000000334, 0.00020830599999999838, 0.0002073889999999988, 0.0002084720000000012, 0.00020815299999999912, 0.00020898600000000128, 0.00020815199999999964, 0.00020798600000000028, 0.00020716700000000116, 0.00020881900000000245, 0.00020722199999999996, 0.00020815299999999912, 0.0002089859999999978, 0.00020798600000000028, 0.00020763900000000252, 0.00020815299999999912, 0.00020765199999999914, 0.0002084859999999973, 0.00020881899999999898, 0.00020837500000000023, 0.000207334, 0.0002077499999999996, 0.00020781900000000145, 0.00020790299999999887, 0.00020848600000000078, 0.00020830600000000185, 0.00020773600000000003, 0.00020859700000000134, 0.00020708300000000027, 0.00020830600000000185, 0.00020722299999999597, 0.00020834700000000456, 0.00020856899999999873, 0.0002080829999999978, 0.00020757000000000414, 0.00020826399999999967, 0.00020815199999999617, 0.00020797199999999377, 0.00020830599999999838, 0.0002074170000000014]</msg>
<status status="PASS" starttime="20201112 09:54:19.492" endtime="20201112 09:54:19.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.487" endtime="20201112 09:54:19.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.497" endtime="20201112 09:54:19.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.500" endtime="20201112 09:54:19.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.499" endtime="20201112 09:54:19.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.495" endtime="20201112 09:54:19.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.122" endtime="20201112 09:54:19.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.121" endtime="20201112 09:54:19.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:39.648" endtime="20201112 09:54:19.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.526" endtime="20201112 09:54:19.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.524" endtime="20201112 09:54:19.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.523" endtime="20201112 09:54:19.546"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:39.577" endtime="20201112 09:54:19.546" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.554" endtime="20201112 09:54:19.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.552" endtime="20201112 09:54:19.574"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.587" endtime="20201112 09:54:19.604"></status>
</kw>
<msg timestamp="20201112 09:54:19.605" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.585" endtime="20201112 09:54:19.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.607" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.606" endtime="20201112 09:54:19.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.610" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:19.608" endtime="20201112 09:54:19.610"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:19.582" endtime="20201112 09:54:19.611"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:19.580" endtime="20201112 09:54:19.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.579" endtime="20201112 09:54:19.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:19.615" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:19.615" endtime="20201112 09:54:19.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.613" endtime="20201112 09:54:19.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.578" endtime="20201112 09:54:19.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.577" endtime="20201112 09:54:19.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.617" endtime="20201112 09:54:19.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.576" endtime="20201112 09:54:19.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.574" endtime="20201112 09:54:19.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.551" endtime="20201112 09:54:19.620"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.630" endtime="20201112 09:54:19.645"></status>
</kw>
<msg timestamp="20201112 09:54:19.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.628" endtime="20201112 09:54:19.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:19.647" endtime="20201112 09:54:19.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.649" endtime="20201112 09:54:19.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.626" endtime="20201112 09:54:19.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.624" endtime="20201112 09:54:19.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.658" endtime="20201112 09:54:19.944"></status>
</kw>
<msg timestamp="20201112 09:54:19.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069237806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069246861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.657" endtime="20201112 09:54:19.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069237806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069246861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:19.948" endtime="20201112 09:54:19.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.956" endtime="20201112 09:54:19.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.654" endtime="20201112 09:54:19.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.652" endtime="20201112 09:54:19.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:19.963" level="INFO">${RESULT} = [{'time': 0.069246861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.055000000007807e-06, 'source_diff': 9.055000000007807e-06}, {'time': 0.069267056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:19.959" endtime="20201112 09:54:19.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:19.977" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:19.964" endtime="20201112 09:54:19.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.982" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:54:19.981" endtime="20201112 09:54:19.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:19.984" level="INFO">VALUE: [9.055000000007807e-06, 9.652999999998357e-06, 1.0875000000007407e-05, 9.05600000000728e-06, 9.680999999997497e-06, 9.054999999993929e-06, 9.069999999999911e-06, 1.0278000000002452e-05, 1.0874999999993529e-05, 1.0291999999995083e-05, 1.0889000000000038e-05, 9.667000000004866e-06, 9.652999999998357e-06, 9.679999999998024e-06, 9.055999999993403e-06, 9.680999999997497e-06, 9.666000000005393e-06, 9.069000000000438e-06, 1.02769999999891e-05, 1.0250000000003312e-05, 9.069000000000438e-06, 9.069000000000438e-06, 9.666999999990988e-06, 9.624999999999218e-06, 1.0889000000000038e-05, 1.026400000000982e-05, 9.666999999990988e-06, 9.069999999999911e-06, 9.679999999998024e-06, 1.026400000000982e-05, 9.610999999992709e-06, 9.666999999990988e-06, 9.055999999993403e-06, 1.0250000000003312e-05, 1.0263999999995943e-05, 1.0263999999995943e-05, 9.069999999999911e-06, 1.0875000000007407e-05, 9.069000000000438e-06, 1.0889000000000038e-05, 1.0263999999995943e-05, 9.069000000000438e-06, 9.082999999993069e-06, 1.0847000000008267e-05, 1.0263999999995943e-05, 9.082999999993069e-06, 1.0875000000007407e-05, 9.083000000006947e-06, 9.652999999998357e-06, 1.026299999999647e-05]</msg>
<status status="PASS" starttime="20201112 09:54:19.983" endtime="20201112 09:54:19.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.978" endtime="20201112 09:54:19.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:19.987" endtime="20201112 09:54:19.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:19.991" endtime="20201112 09:54:20.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.989" endtime="20201112 09:54:20.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.986" endtime="20201112 09:54:20.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.622" endtime="20201112 09:54:20.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.621" endtime="20201112 09:54:20.012"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.021" endtime="20201112 09:54:20.036"></status>
</kw>
<msg timestamp="20201112 09:54:20.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.019" endtime="20201112 09:54:20.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.037" endtime="20201112 09:54:20.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.040" endtime="20201112 09:54:20.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.017" endtime="20201112 09:54:20.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.014" endtime="20201112 09:54:20.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.049" endtime="20201112 09:54:20.334"></status>
</kw>
<msg timestamp="20201112 09:54:20.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.047" endtime="20201112 09:54:20.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.338" endtime="20201112 09:54:20.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.347" endtime="20201112 09:54:20.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.045" endtime="20201112 09:54:20.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.043" endtime="20201112 09:54:20.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.353" level="INFO">${RESULT} = [{'time': 0.022481917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.022504292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:20.350" endtime="20201112 09:54:20.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.367" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:20.354" endtime="20201112 09:54:20.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.372" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.371" endtime="20201112 09:54:20.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.375" level="INFO">VALUE: [1.1486000000001523e-05, 1.2680999999997028e-05, 1.2679999999997554e-05, 1.0833000000001758e-05, 1.1485999999998053e-05, 1.0889000000000038e-05, 1.2083999999999012e-05, 1.1472000000001953e-05, 1.1486000000001523e-05, 1.0875000000000468e-05, 1.1486000000001523e-05, 1.1458999999998387e-05, 1.2709000000003107e-05, 1.2082999999999539e-05, 1.2695000000000067e-05, 1.2082999999999539e-05, 1.2070000000002912e-05, 1.2693999999997124e-05, 1.2082999999999539e-05, 1.1486000000001523e-05, 1.2679999999997554e-05, 1.1471999999998483e-05, 1.2082999999999539e-05, 1.1528000000000233e-05, 1.2096999999999108e-05, 1.2679999999997554e-05, 1.2083000000003008e-05, 1.2708999999999637e-05, 1.1485999999998053e-05, 1.1458000000002383e-05, 1.1514000000000663e-05, 1.2082999999999539e-05, 1.2082999999999539e-05, 1.1487000000000996e-05, 1.2708000000000164e-05, 1.2082999999999539e-05, 1.2681000000000497e-05, 1.2722999999999207e-05, 1.2694000000000594e-05, 1.1485999999998053e-05, 1.2680000000001024e-05, 1.2082999999999539e-05, 1.2082999999999539e-05, 1.1472999999997957e-05, 1.1472000000001953e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.1471999999998483e-05, 1.1472000000001953e-05, 1.1485999999998053e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.373" endtime="20201112 09:54:20.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.368" endtime="20201112 09:54:20.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.378" endtime="20201112 09:54:20.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.382" endtime="20201112 09:54:20.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.380" endtime="20201112 09:54:20.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.376" endtime="20201112 09:54:20.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.013" endtime="20201112 09:54:20.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.012" endtime="20201112 09:54:20.403"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.411" endtime="20201112 09:54:20.427"></status>
</kw>
<msg timestamp="20201112 09:54:20.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.410" endtime="20201112 09:54:20.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.429" endtime="20201112 09:54:20.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.431" endtime="20201112 09:54:20.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.407" endtime="20201112 09:54:20.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.405" endtime="20201112 09:54:20.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.440" endtime="20201112 09:54:20.727"></status>
</kw>
<msg timestamp="20201112 09:54:20.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.439" endtime="20201112 09:54:20.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.731" endtime="20201112 09:54:20.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.739" endtime="20201112 09:54:20.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.436" endtime="20201112 09:54:20.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.434" endtime="20201112 09:54:20.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:20.747" level="INFO">${RESULT} = [{'time': 0.022335431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4487000000000527e-05, 'source_diff': 1.4487000000000527e-05}, {'time': 0.022357792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:20.743" endtime="20201112 09:54:20.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:20.760" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:20.748" endtime="20201112 09:54:20.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.764" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:54:20.763" endtime="20201112 09:54:20.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.767" level="INFO">VALUE: [1.4487000000000527e-05, 1.4500000000000624e-05, 1.3360999999999928e-05, 1.4500000000000624e-05, 1.3292000000001553e-05, 1.4472000000001484e-05, 1.3291999999998083e-05, 1.3915999999999235e-05, 1.3847000000000859e-05, 1.329099999999861e-05, 1.3291999999998083e-05, 1.3306000000001122e-05, 1.3291999999998083e-05, 1.3888000000000095e-05, 1.3291000000002079e-05, 1.2736000000002773e-05, 1.4555999999998903e-05, 1.3320000000000692e-05, 1.330499999999818e-05, 1.3278000000001983e-05, 1.3264000000002413e-05, 1.3833000000001289e-05, 1.4500000000000624e-05, 1.3374999999999498e-05, 1.3249999999999373e-05, 1.5111000000001679e-05, 1.4485999999997584e-05, 1.4500000000000624e-05, 1.3292000000001553e-05, 1.455499999999943e-05, 1.3223000000003177e-05, 1.329099999999861e-05, 1.4500000000000624e-05, 1.3292000000001553e-05, 1.330499999999818e-05, 1.4499999999997154e-05, 1.4429999999999304e-05, 1.3901999999999665e-05, 1.3902999999999138e-05, 1.4430999999998778e-05, 1.3306000000001122e-05, 1.3291999999998083e-05, 1.4500000000000624e-05, 1.4444999999998348e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.4486000000001054e-05, 1.4555000000002899e-05, 1.3888000000000095e-05, 1.4500000000000624e-05]</msg>
<status status="PASS" starttime="20201112 09:54:20.766" endtime="20201112 09:54:20.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.761" endtime="20201112 09:54:20.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.771" endtime="20201112 09:54:20.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.774" endtime="20201112 09:54:20.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.773" endtime="20201112 09:54:20.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.769" endtime="20201112 09:54:20.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.403" endtime="20201112 09:54:20.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.403" endtime="20201112 09:54:20.795"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.804" endtime="20201112 09:54:20.819"></status>
</kw>
<msg timestamp="20201112 09:54:20.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.802" endtime="20201112 09:54:20.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:20.820" endtime="20201112 09:54:20.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.823" endtime="20201112 09:54:20.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.799" endtime="20201112 09:54:20.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.797" endtime="20201112 09:54:20.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:20.832" endtime="20201112 09:54:21.118"></status>
</kw>
<msg timestamp="20201112 09:54:21.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:20.830" endtime="20201112 09:54:21.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.122" endtime="20201112 09:54:21.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.131" endtime="20201112 09:54:21.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.827" endtime="20201112 09:54:21.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.826" endtime="20201112 09:54:21.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.137" level="INFO">${RESULT} = [{'time': 0.021941639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6305999999997184e-05, 'source_diff': 1.6305999999997184e-05}, {'time': 0.021964139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:21.134" endtime="20201112 09:54:21.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.150" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:21.138" endtime="20201112 09:54:21.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.155" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.154" endtime="20201112 09:54:21.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.157" level="INFO">VALUE: [1.6305999999997184e-05, 1.6306000000000653e-05, 1.5139000000000818e-05, 1.5708000000003164e-05, 1.5652000000001415e-05, 1.5721999999999264e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.508299999999907e-05, 1.5694000000000125e-05, 1.6930000000001805e-05, 1.5707999999999694e-05, 1.5097999999998113e-05, 1.5722999999998738e-05, 1.5707999999999694e-05, 1.5695000000003068e-05, 1.511099999999821e-05, 1.5750000000001874e-05, 1.6320000000000223e-05, 1.633300000000032e-05, 1.691699999999824e-05, 1.631900000000075e-05, 1.631900000000075e-05, 1.5721999999999264e-05, 1.5097000000002109e-05, 1.6945000000000848e-05, 1.631900000000075e-05, 1.630500000000118e-05, 1.5083000000002539e-05, 1.5097000000002109e-05, 1.6334000000003263e-05, 1.511099999999821e-05, 1.5125000000001249e-05, 1.693099999999781e-05, 1.693099999999781e-05, 1.6986000000000084e-05, 1.6320000000000223e-05, 1.691699999999824e-05, 1.509699999999864e-05, 1.511099999999821e-05, 1.5722999999998738e-05, 1.6305999999997184e-05, 1.6333999999999793e-05, 1.5694000000000125e-05, 1.630500000000118e-05, 1.6930000000001805e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.5708999999999168e-05, 1.5111000000001679e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.156" endtime="20201112 09:54:21.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.151" endtime="20201112 09:54:21.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.161" endtime="20201112 09:54:21.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.164" endtime="20201112 09:54:21.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.163" endtime="20201112 09:54:21.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.159" endtime="20201112 09:54:21.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.796" endtime="20201112 09:54:21.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.795" endtime="20201112 09:54:21.185"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.194" endtime="20201112 09:54:21.209"></status>
</kw>
<msg timestamp="20201112 09:54:21.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.192" endtime="20201112 09:54:21.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.210" endtime="20201112 09:54:21.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.213" endtime="20201112 09:54:21.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.190" endtime="20201112 09:54:21.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.188" endtime="20201112 09:54:21.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.222" endtime="20201112 09:54:21.506"></status>
</kw>
<msg timestamp="20201112 09:54:21.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.220" endtime="20201112 09:54:21.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.511" endtime="20201112 09:54:21.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.519" endtime="20201112 09:54:21.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.218" endtime="20201112 09:54:21.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.216" endtime="20201112 09:54:21.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.526" level="INFO">${RESULT} = [{'time': 0.021899736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.811100000000121e-05, 'source_diff': 1.811100000000121e-05}, {'time': 0.021923625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.522" endtime="20201112 09:54:21.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.539" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:21.527" endtime="20201112 09:54:21.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.543" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.542" endtime="20201112 09:54:21.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.546" level="INFO">VALUE: [1.811100000000121e-05, 1.7527999999999294e-05, 1.811099999999774e-05, 1.813899999999688e-05, 1.7514000000003194e-05, 1.7584000000001043e-05, 1.809700000000164e-05, 1.818099999999906e-05, 1.813900000000035e-05, 1.8735999999998365e-05, 1.7513999999999724e-05, 1.7513999999999724e-05, 1.868099999999956e-05, 1.7528000000002764e-05, 1.693099999999781e-05, 1.7541999999998864e-05, 1.8138000000000876e-05, 1.7527999999999294e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.6916000000002235e-05, 1.809700000000164e-05, 1.755499999999896e-05, 1.6915999999998765e-05, 1.813900000000035e-05, 1.8735999999998365e-05, 1.811100000000121e-05, 1.8749999999997935e-05, 1.8735999999998365e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.8735999999998365e-05, 1.811099999999774e-05, 1.8778000000000544e-05, 1.7584000000001043e-05, 1.690300000000214e-05, 1.811100000000121e-05, 1.691700000000171e-05, 1.7500000000000154e-05, 1.7513999999999724e-05, 1.7528000000002764e-05, 1.6929999999998335e-05, 1.7527999999999294e-05, 1.6959000000000418e-05, 1.812500000000078e-05, 1.7541999999998864e-05, 1.751300000000025e-05, 1.690299999999867e-05, 1.7513999999999724e-05, 1.812500000000078e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.544" endtime="20201112 09:54:21.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.540" endtime="20201112 09:54:21.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.549" endtime="20201112 09:54:21.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.553" endtime="20201112 09:54:21.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.551" endtime="20201112 09:54:21.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.548" endtime="20201112 09:54:21.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.186" endtime="20201112 09:54:21.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.186" endtime="20201112 09:54:21.574"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.582" endtime="20201112 09:54:21.597"></status>
</kw>
<msg timestamp="20201112 09:54:21.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.581" endtime="20201112 09:54:21.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.599" endtime="20201112 09:54:21.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.601" endtime="20201112 09:54:21.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.578" endtime="20201112 09:54:21.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.576" endtime="20201112 09:54:21.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.610" endtime="20201112 09:54:21.898"></status>
</kw>
<msg timestamp="20201112 09:54:21.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.609" endtime="20201112 09:54:21.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.903" endtime="20201112 09:54:21.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.911" endtime="20201112 09:54:21.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.606" endtime="20201112 09:54:21.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.605" endtime="20201112 09:54:21.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.917" level="INFO">${RESULT} = [{'time': 0.022158542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9333999999999324e-05, 'source_diff': 1.9333999999999324e-05}, {'time': 0.022186431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:21.914" endtime="20201112 09:54:21.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.931" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:21.918" endtime="20201112 09:54:21.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.935" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.934" endtime="20201112 09:54:21.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.938" level="INFO">VALUE: [1.9333999999999324e-05, 2.0541999999998395e-05, 2.059700000000067e-05, 2.059700000000067e-05, 1.9348000000002363e-05, 2.0542000000001864e-05, 1.9930000000001336e-05, 1.9915999999998296e-05, 1.931900000000028e-05, 1.865300000000042e-05, 1.9930000000001336e-05, 2.0500000000003155e-05, 1.934699999999942e-05, 2.0541999999998395e-05, 1.993100000000081e-05, 2.0556000000001434e-05, 2.054099999999892e-05, 1.9348000000002363e-05, 1.933299999999985e-05, 2.12090000000012e-05, 2.0541999999998395e-05, 1.8721999999998795e-05, 1.9292000000000614e-05, 2.0541999999998395e-05, 2.054100000000239e-05, 1.993099999999734e-05, 2.0541999999998395e-05, 2.0541999999998395e-05, 2.055500000000196e-05, 1.9930000000001336e-05, 1.9292000000000614e-05, 1.993099999999734e-05, 1.933299999999985e-05, 2.0541999999998395e-05, 1.933299999999985e-05, 2.056899999999806e-05, 1.9944000000000905e-05, 2.0542000000001864e-05, 1.994500000000038e-05, 1.994500000000038e-05, 1.9944000000000905e-05, 1.9916000000001766e-05, 1.9347999999998894e-05, 1.991700000000124e-05, 1.994499999999691e-05, 1.9958000000000475e-05, 2.0541999999998395e-05, 1.993100000000081e-05, 1.994500000000038e-05, 2.055499999999849e-05]</msg>
<status status="PASS" starttime="20201112 09:54:21.936" endtime="20201112 09:54:21.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.932" endtime="20201112 09:54:21.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.941" endtime="20201112 09:54:21.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.945" endtime="20201112 09:54:21.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.943" endtime="20201112 09:54:21.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.940" endtime="20201112 09:54:21.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.574" endtime="20201112 09:54:21.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.574" endtime="20201112 09:54:21.965"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.974" endtime="20201112 09:54:21.990"></status>
</kw>
<msg timestamp="20201112 09:54:21.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.973" endtime="20201112 09:54:21.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.992" endtime="20201112 09:54:21.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.994" endtime="20201112 09:54:21.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.970" endtime="20201112 09:54:21.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.968" endtime="20201112 09:54:21.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.003" endtime="20201112 09:54:22.289"></status>
</kw>
<msg timestamp="20201112 09:54:22.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220415, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:22.002" endtime="20201112 09:54:22.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220415, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:22.293" endtime="20201112 09:54:22.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.302" endtime="20201112 09:54:22.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.999" endtime="20201112 09:54:22.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.997" endtime="20201112 09:54:22.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.308" level="INFO">${RESULT} = [{'time': 0.0220415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2971999999999576e-05, 'source_diff': 2.2971999999999576e-05}, {'time': 0.022073528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:22.305" endtime="20201112 09:54:22.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.321" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:22.309" endtime="20201112 09:54:22.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.326" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.325" endtime="20201112 09:54:22.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.329" level="INFO">VALUE: [2.2971999999999576e-05, 2.118099999999859e-05, 2.230500000000024e-05, 2.2278000000000575e-05, 2.1764000000000505e-05, 2.236099999999852e-05, 2.111099999999727e-05, 2.237500000000156e-05, 2.1763999999997036e-05, 2.116699999999902e-05, 2.24030000000007e-05, 2.115300000000292e-05, 2.295899999999948e-05, 2.2347999999998425e-05, 2.111099999999727e-05, 2.231899999999981e-05, 2.113899999999988e-05, 2.1736000000001365e-05, 2.234699999999895e-05, 2.2348000000001894e-05, 2.1778000000000075e-05, 2.294499999999991e-05, 2.1070000000001504e-05, 2.1750000000000935e-05, 2.115299999999945e-05, 2.240299999999723e-05, 2.1112000000000214e-05, 2.112500000000031e-05, 2.1749999999997466e-05, 2.2361999999997995e-05, 2.116700000000249e-05, 2.1735999999997896e-05, 2.234699999999895e-05, 2.1750000000000935e-05, 2.115299999999945e-05, 2.241700000000027e-05, 2.236100000000199e-05, 2.1151999999999976e-05, 2.238900000000113e-05, 2.236099999999852e-05, 2.1736000000001365e-05, 2.236099999999852e-05, 2.233300000000285e-05, 2.115299999999945e-05, 2.1778000000000075e-05, 2.2320000000002754e-05, 2.10969999999977e-05, 2.1764000000000505e-05, 2.297300000000252e-05, 2.1763999999997036e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.327" endtime="20201112 09:54:22.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.322" endtime="20201112 09:54:22.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.332" endtime="20201112 09:54:22.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.336" endtime="20201112 09:54:22.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.334" endtime="20201112 09:54:22.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.331" endtime="20201112 09:54:22.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.966" endtime="20201112 09:54:22.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.966" endtime="20201112 09:54:22.356"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.365" endtime="20201112 09:54:22.380"></status>
</kw>
<msg timestamp="20201112 09:54:22.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.364" endtime="20201112 09:54:22.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.382" endtime="20201112 09:54:22.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.384" endtime="20201112 09:54:22.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.361" endtime="20201112 09:54:22.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.359" endtime="20201112 09:54:22.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.393" endtime="20201112 09:54:22.681"></status>
</kw>
<msg timestamp="20201112 09:54:22.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022089069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.392" endtime="20201112 09:54:22.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022089069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.685" endtime="20201112 09:54:22.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.694" endtime="20201112 09:54:22.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.389" endtime="20201112 09:54:22.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.388" endtime="20201112 09:54:22.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.700" level="INFO">${RESULT} = [{'time': 0.022112014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.294499999999991e-05, 'source_diff': 2.294499999999991e-05}, {'time': 0.022148028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:22.697" endtime="20201112 09:54:22.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.713" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:22.701" endtime="20201112 09:54:22.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.718" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.717" endtime="20201112 09:54:22.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.720" level="INFO">VALUE: [2.294499999999991e-05, 2.411100000000027e-05, 2.4777999999999606e-05, 2.4166000000002547e-05, 2.4165999999999077e-05, 2.2958000000000006e-05, 2.4763000000000562e-05, 2.4763000000000562e-05, 2.4792000000002645e-05, 2.3568999999997592e-05, 2.3556000000000965e-05, 2.4790999999999702e-05, 2.295899999999948e-05, 2.415299999999898e-05, 2.35970000000002e-05, 2.4777000000000132e-05, 2.4180000000002116e-05, 2.2958000000000006e-05, 2.2958000000000006e-05, 2.2943999999996967e-05, 2.4165999999999077e-05, 2.415300000000245e-05, 2.4179999999998647e-05, 2.4750000000000466e-05, 2.4791999999999176e-05, 2.4180000000002116e-05, 2.356900000000106e-05, 2.4791999999999176e-05, 2.3568999999997592e-05, 2.2958000000000006e-05, 2.3556000000000965e-05, 2.4764000000000036e-05, 2.2958000000000006e-05, 2.3584000000000105e-05, 2.4207999999997787e-05, 2.4193999999998217e-05, 2.4764000000000036e-05, 2.416700000000202e-05, 2.2971999999999576e-05, 2.4165999999999077e-05, 2.297299999999905e-05, 2.3012999999998812e-05, 2.4222000000000826e-05, 2.356900000000106e-05, 2.358300000000063e-05, 2.2985999999999146e-05, 2.295899999999948e-05, 2.416699999999855e-05, 2.297299999999905e-05, 2.3554999999998022e-05]</msg>
<status status="PASS" starttime="20201112 09:54:22.719" endtime="20201112 09:54:22.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.714" endtime="20201112 09:54:22.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.724" endtime="20201112 09:54:22.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.727" endtime="20201112 09:54:22.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.726" endtime="20201112 09:54:22.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.722" endtime="20201112 09:54:22.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.357" endtime="20201112 09:54:22.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.357" endtime="20201112 09:54:22.749"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.758" endtime="20201112 09:54:22.774"></status>
</kw>
<msg timestamp="20201112 09:54:22.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.756" endtime="20201112 09:54:22.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.776" endtime="20201112 09:54:22.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.778" endtime="20201112 09:54:22.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.754" endtime="20201112 09:54:22.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.751" endtime="20201112 09:54:22.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.787" endtime="20201112 09:54:23.075"></status>
</kw>
<msg timestamp="20201112 09:54:23.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023135736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.786" endtime="20201112 09:54:23.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023135736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.079" endtime="20201112 09:54:23.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.087" endtime="20201112 09:54:23.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.783" endtime="20201112 09:54:23.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.781" endtime="20201112 09:54:23.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.094" level="INFO">${RESULT} = [{'time': 0.023135736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.536100000000152e-05, 'source_diff': 2.536100000000152e-05}, {'time': 0.023167514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:23.091" endtime="20201112 09:54:23.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.107" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:23.095" endtime="20201112 09:54:23.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.112" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.111" endtime="20201112 09:54:23.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.114" level="INFO">VALUE: [2.536100000000152e-05, 2.6583000000000162e-05, 2.593099999999987e-05, 2.536100000000152e-05, 2.665300000000148e-05, 2.5986000000002146e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.534700000000195e-05, 2.537499999999762e-05, 2.6583999999999636e-05, 2.536100000000152e-05, 2.5402000000000757e-05, 2.6000000000001716e-05, 2.5971999999999107e-05, 2.593099999999987e-05, 2.6583000000000162e-05, 2.5985999999998677e-05, 2.661100000000277e-05, 2.5972000000002576e-05, 2.5985999999998677e-05, 2.5360999999998052e-05, 2.5971999999999107e-05, 2.6013000000001812e-05, 2.4777999999999606e-05, 2.6596999999999732e-05, 2.540299999999676e-05, 2.537500000000109e-05, 2.716699999999808e-05, 2.540300000000023e-05, 2.4750000000000466e-05, 2.537499999999762e-05, 2.537499999999762e-05, 2.538900000000066e-05, 2.6514000000001786e-05, 2.5346999999998482e-05, 2.5986000000002146e-05, 2.6569000000000592e-05, 2.6611999999998776e-05, 2.5972000000002576e-05, 2.5334000000001855e-05, 2.5999999999998247e-05, 2.5986000000002146e-05, 2.537499999999762e-05, 2.4777999999999606e-05, 2.538900000000066e-05, 2.5985999999998677e-05, 2.5971999999999107e-05, 2.5985999999998677e-05, 2.4777999999999606e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.113" endtime="20201112 09:54:23.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.108" endtime="20201112 09:54:23.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.118" endtime="20201112 09:54:23.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.122" endtime="20201112 09:54:23.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.120" endtime="20201112 09:54:23.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.116" endtime="20201112 09:54:23.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.750" endtime="20201112 09:54:23.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.749" endtime="20201112 09:54:23.142"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.151" endtime="20201112 09:54:23.167"></status>
</kw>
<msg timestamp="20201112 09:54:23.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.149" endtime="20201112 09:54:23.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.168" endtime="20201112 09:54:23.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.171" endtime="20201112 09:54:23.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.147" endtime="20201112 09:54:23.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.145" endtime="20201112 09:54:23.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.180" endtime="20201112 09:54:23.467"></status>
</kw>
<msg timestamp="20201112 09:54:23.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.178" endtime="20201112 09:54:23.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.471" endtime="20201112 09:54:23.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.479" endtime="20201112 09:54:23.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.176" endtime="20201112 09:54:23.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.174" endtime="20201112 09:54:23.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.486" level="INFO">${RESULT} = [{'time': 0.022082083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7804999999998803e-05, 'source_diff': 2.7804999999998803e-05}, {'time': 0.022119889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:23.483" endtime="20201112 09:54:23.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.499" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:23.487" endtime="20201112 09:54:23.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.504" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.503" endtime="20201112 09:54:23.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.506" level="INFO">VALUE: [2.7804999999998803e-05, 2.7777999999999137e-05, 2.7264000000002536e-05, 2.7207999999997318e-05, 2.7208000000000787e-05, 2.7791999999998707e-05, 2.8347999999997486e-05, 2.7151999999999038e-05, 2.8402999999999762e-05, 2.7791999999998707e-05, 2.8402999999999762e-05, 2.7249999999999497e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.718099999999765e-05, 2.7791000000002702e-05, 2.8402999999999762e-05, 2.840300000000323e-05, 2.9000000000001247e-05, 2.7820000000001316e-05, 2.841699999999933e-05, 2.7790999999999233e-05, 2.8402000000000288e-05, 2.8985999999998208e-05, 2.7194000000001217e-05, 2.7792000000002176e-05, 2.7180000000001647e-05, 2.8389000000000192e-05, 2.9000000000001247e-05, 2.8347000000001482e-05, 2.7763999999999567e-05, 2.7792000000002176e-05, 2.7194000000001217e-05, 2.8389000000000192e-05, 2.8985999999998208e-05, 2.8402999999999762e-05, 2.720900000000026e-05, 2.720900000000026e-05, 2.8402999999999762e-05, 2.720900000000026e-05, 2.7193999999997748e-05, 2.7749999999999997e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.7791999999998707e-05, 2.7790999999999233e-05, 2.841699999999933e-05, 2.719500000000069e-05, 2.843100000000237e-05, 2.7819999999997846e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.505" endtime="20201112 09:54:23.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.500" endtime="20201112 09:54:23.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.510" endtime="20201112 09:54:23.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.513" endtime="20201112 09:54:23.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.512" endtime="20201112 09:54:23.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.508" endtime="20201112 09:54:23.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.143" endtime="20201112 09:54:23.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.143" endtime="20201112 09:54:23.534"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.543" endtime="20201112 09:54:23.559"></status>
</kw>
<msg timestamp="20201112 09:54:23.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.541" endtime="20201112 09:54:23.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.561" endtime="20201112 09:54:23.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.563" endtime="20201112 09:54:23.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.539" endtime="20201112 09:54:23.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.537" endtime="20201112 09:54:23.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.572" endtime="20201112 09:54:23.858"></status>
</kw>
<msg timestamp="20201112 09:54:23.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022108514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.571" endtime="20201112 09:54:23.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022108514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.862" endtime="20201112 09:54:23.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.871" endtime="20201112 09:54:23.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.568" endtime="20201112 09:54:23.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.566" endtime="20201112 09:54:23.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.877" level="INFO">${RESULT} = [{'time': 0.022138139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9625000000001872e-05, 'source_diff': 2.9625000000001872e-05}, {'time': 0.022173847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:23.874" endtime="20201112 09:54:23.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.891" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:23.878" endtime="20201112 09:54:23.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.895" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.894" endtime="20201112 09:54:23.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.897" level="INFO">VALUE: [2.9625000000001872e-05, 3.0208000000000318e-05, 2.9014000000000817e-05, 3.080600000000128e-05, 3.081900000000137e-05, 2.9610999999998833e-05, 2.9597000000002732e-05, 3.080599999999781e-05, 2.9542000000000457e-05, 3.083300000000094e-05, 3.019500000000022e-05, 3.020899999999979e-05, 3.081900000000137e-05, 3.0790999999998764e-05, 3.0236000000002927e-05, 2.9596999999999263e-05, 3.017999999999771e-05, 2.9652999999997542e-05, 3.0221999999999888e-05, 2.9027999999996917e-05, 3.0804999999998334e-05, 2.8999999999997778e-05, 3.0804999999998334e-05, 3.0194000000000748e-05, 3.0208000000000318e-05, 3.020900000000326e-05, 2.8986000000001677e-05, 2.9596999999999263e-05, 2.9610999999998833e-05, 2.9611000000002302e-05, 2.9596999999999263e-05, 2.8999999999997778e-05, 2.9028000000000387e-05, 3.0221999999999888e-05, 2.9625000000001872e-05, 2.9625000000001872e-05, 2.9611000000002302e-05, 2.9624999999998403e-05, 3.0208000000000318e-05, 3.081900000000137e-05, 3.0167000000001082e-05, 2.9681000000000152e-05, 2.9000000000001247e-05, 3.022300000000283e-05, 3.019500000000022e-05, 2.9000000000001247e-05, 2.9596999999999263e-05, 3.0208000000000318e-05, 3.020899999999979e-05, 3.020899999999979e-05]</msg>
<status status="PASS" starttime="20201112 09:54:23.896" endtime="20201112 09:54:23.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.891" endtime="20201112 09:54:23.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.901" endtime="20201112 09:54:23.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.905" endtime="20201112 09:54:23.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.903" endtime="20201112 09:54:23.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.899" endtime="20201112 09:54:23.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.535" endtime="20201112 09:54:23.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.535" endtime="20201112 09:54:23.925"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.934" endtime="20201112 09:54:23.950"></status>
</kw>
<msg timestamp="20201112 09:54:23.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.933" endtime="20201112 09:54:23.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.951" endtime="20201112 09:54:23.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.954" endtime="20201112 09:54:23.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.930" endtime="20201112 09:54:23.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.928" endtime="20201112 09:54:23.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.963" endtime="20201112 09:54:24.250"></status>
</kw>
<msg timestamp="20201112 09:54:24.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.961" endtime="20201112 09:54:24.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.255" endtime="20201112 09:54:24.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.263" endtime="20201112 09:54:24.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.959" endtime="20201112 09:54:24.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.957" endtime="20201112 09:54:24.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.269" level="INFO">${RESULT} = [{'time': 0.022314625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.269399999999978e-05, 'source_diff': 3.269399999999978e-05}, {'time': 0.022356167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:24.266" endtime="20201112 09:54:24.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.283" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:24.270" endtime="20201112 09:54:24.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.287" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.286" endtime="20201112 09:54:24.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.290" level="INFO">VALUE: [3.269399999999978e-05, 3.137500000000015e-05, 3.14310000000019e-05, 3.199999999999731e-05, 3.26250000000014e-05, 3.202799999999992e-05, 3.2582999999999224e-05, 3.202799999999992e-05, 3.143000000000243e-05, 3.269399999999978e-05, 3.202800000000339e-05, 3.265300000000054e-05, 3.143099999999843e-05, 3.080600000000128e-05, 3.26380000000015e-05, 3.141699999999886e-05, 3.14310000000019e-05, 3.204199999999949e-05, 3.08050000000018e-05, 3.0804999999998334e-05, 3.14310000000019e-05, 3.2624999999997933e-05, 3.2027000000000444e-05, 3.2582999999999224e-05, 3.141700000000233e-05, 3.26389999999975e-05, 3.269400000000325e-05, 3.083300000000094e-05, 3.201400000000035e-05, 3.201400000000035e-05, 3.265300000000054e-05, 3.140300000000276e-05, 3.141699999999886e-05, 3.141599999999939e-05, 3.201400000000035e-05, 3.081900000000137e-05, 3.198599999999774e-05, 3.201399999999688e-05, 3.2624999999997933e-05, 3.145900000000104e-05, 3.080600000000128e-05, 3.2624999999997933e-05, 3.2624999999997933e-05, 3.201400000000035e-05, 3.261100000000183e-05, 3.2624999999997933e-05, 3.136100000000058e-05, 3.201400000000035e-05, 3.261100000000183e-05, 3.2027000000000444e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.288" endtime="20201112 09:54:24.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.284" endtime="20201112 09:54:24.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.293" endtime="20201112 09:54:24.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.296" endtime="20201112 09:54:24.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.295" endtime="20201112 09:54:24.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.291" endtime="20201112 09:54:24.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.926" endtime="20201112 09:54:24.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.926" endtime="20201112 09:54:24.317"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.326" endtime="20201112 09:54:24.342"></status>
</kw>
<msg timestamp="20201112 09:54:24.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.324" endtime="20201112 09:54:24.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.344" endtime="20201112 09:54:24.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.346" endtime="20201112 09:54:24.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.322" endtime="20201112 09:54:24.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.320" endtime="20201112 09:54:24.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.355" endtime="20201112 09:54:24.641"></status>
</kw>
<msg timestamp="20201112 09:54:24.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.354" endtime="20201112 09:54:24.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.645" endtime="20201112 09:54:24.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.653" endtime="20201112 09:54:24.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.351" endtime="20201112 09:54:24.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.349" endtime="20201112 09:54:24.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.660" level="INFO">${RESULT} = [{'time': 0.022029028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.323599999999899e-05, 'source_diff': 3.323599999999899e-05}, {'time': 0.022076958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:24.657" endtime="20201112 09:54:24.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.673" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:24.661" endtime="20201112 09:54:24.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.678" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.677" endtime="20201112 09:54:24.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.680" level="INFO">VALUE: [3.323599999999899e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.32640000000016e-05, 3.380600000000081e-05, 3.318100000000018e-05, 3.3847000000000044e-05, 3.4445000000001e-05, 3.318099999999671e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.5040999999999545e-05, 3.3818999999997434e-05, 3.5055000000002584e-05, 3.326399999999813e-05, 3.329200000000074e-05, 3.323599999999899e-05, 3.323600000000246e-05, 3.3833000000000474e-05, 3.3791000000001764e-05, 3.390299999999832e-05, 3.449999999999981e-05, 3.502800000000292e-05, 3.3819000000000904e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.444399999999806e-05, 3.3847000000000044e-05, 3.3874999999999184e-05, 3.450000000000328e-05, 3.500000000000031e-05, 3.322199999999942e-05, 3.3847000000000044e-05, 3.443100000000143e-05, 3.443099999999796e-05, 3.3847000000000044e-05, 3.443100000000143e-05, 3.322200000000289e-05, 3.444400000000153e-05, 3.384799999999952e-05, 3.44580000000011e-05, 3.316700000000061e-05, 3.322199999999942e-05, 3.4445000000001e-05, 3.37779999999982e-05, 3.322200000000289e-05, 3.323600000000246e-05, 3.382000000000038e-05, 3.323700000000193e-05, 3.322300000000236e-05]</msg>
<status status="PASS" starttime="20201112 09:54:24.679" endtime="20201112 09:54:24.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.674" endtime="20201112 09:54:24.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.684" endtime="20201112 09:54:24.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.688" endtime="20201112 09:54:24.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.686" endtime="20201112 09:54:24.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.683" endtime="20201112 09:54:24.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.318" endtime="20201112 09:54:24.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.318" endtime="20201112 09:54:24.708"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.717" endtime="20201112 09:54:24.732"></status>
</kw>
<msg timestamp="20201112 09:54:24.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.715" endtime="20201112 09:54:24.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.734" endtime="20201112 09:54:24.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.736" endtime="20201112 09:54:24.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.713" endtime="20201112 09:54:24.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.711" endtime="20201112 09:54:24.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.745" endtime="20201112 09:54:25.031"></status>
</kw>
<msg timestamp="20201112 09:54:25.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.744" endtime="20201112 09:54:25.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.035" endtime="20201112 09:54:25.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.044" endtime="20201112 09:54:25.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.741" endtime="20201112 09:54:25.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.740" endtime="20201112 09:54:25.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.050" level="INFO">${RESULT} = [{'time': 0.022038903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6846999999999575e-05, 'source_diff': 3.6846999999999575e-05}, {'time': 0.022084431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:25.047" endtime="20201112 09:54:25.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.064" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:25.051" endtime="20201112 09:54:25.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.068" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.067" endtime="20201112 09:54:25.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.071" level="INFO">VALUE: [3.6846999999999575e-05, 3.566700000000311e-05, 3.5639000000000504e-05, 3.504199999999902e-05, 3.5055000000002584e-05, 3.626400000000113e-05, 3.505599999999859e-05, 3.502799999999945e-05, 3.624999999999809e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.5040999999999545e-05, 3.624999999999809e-05, 3.568100000000268e-05, 3.504199999999902e-05, 3.5639000000000504e-05, 3.6805000000000865e-05, 3.6874999999998714e-05, 3.6263000000001655e-05, 3.622299999999842e-05, 3.5653000000000074e-05, 3.505599999999859e-05, 3.505599999999859e-05, 3.624999999999809e-05, 3.626399999999766e-05, 3.5653000000000074e-05, 3.6874999999998714e-05, 3.622200000000242e-05, 3.5555000000003084e-05, 3.620799999999938e-05, 3.5625000000000934e-05, 3.568100000000268e-05, 3.502799999999945e-05, 3.5639000000000504e-05, 3.5610999999997894e-05, 3.5596999999998324e-05, 3.5639000000000504e-05, 3.6846999999999575e-05, 3.626400000000113e-05, 3.624999999999809e-05, 3.623600000000199e-05, 3.5666999999999643e-05, 3.5666999999999643e-05, 3.568099999999921e-05, 3.624999999999809e-05, 3.502799999999945e-05, 3.626399999999766e-05, 3.625000000000156e-05, 3.626400000000113e-05, 3.56520000000006e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.069" endtime="20201112 09:54:25.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.064" endtime="20201112 09:54:25.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.078" endtime="20201112 09:54:25.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.081" endtime="20201112 09:54:25.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.080" endtime="20201112 09:54:25.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.076" endtime="20201112 09:54:25.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.709" endtime="20201112 09:54:25.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.709" endtime="20201112 09:54:25.102"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.111" endtime="20201112 09:54:25.127"></status>
</kw>
<msg timestamp="20201112 09:54:25.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.109" endtime="20201112 09:54:25.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.129" endtime="20201112 09:54:25.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.131" endtime="20201112 09:54:25.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.106" endtime="20201112 09:54:25.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.104" endtime="20201112 09:54:25.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.140" endtime="20201112 09:54:25.426"></status>
</kw>
<msg timestamp="20201112 09:54:25.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022108514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.139" endtime="20201112 09:54:25.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022108514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.431" endtime="20201112 09:54:25.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.439" endtime="20201112 09:54:25.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.136" endtime="20201112 09:54:25.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.135" endtime="20201112 09:54:25.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.446" level="INFO">${RESULT} = [{'time': 0.022145319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6805000000000865e-05, 'source_diff': 3.6805000000000865e-05}, {'time': 0.022187375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:25.442" endtime="20201112 09:54:25.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.459" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:25.447" endtime="20201112 09:54:25.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.463" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.462" endtime="20201112 09:54:25.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.466" level="INFO">VALUE: [3.6805000000000865e-05, 3.6888999999998284e-05, 3.8040999999999076e-05, 3.8055000000002115e-05, 3.8681000000002214e-05, 3.748599999999977e-05, 3.8082999999997785e-05, 3.8083000000001255e-05, 3.8639000000000034e-05, 3.745800000000063e-05, 3.74720000000002e-05, 3.806999999999769e-05, 3.7403000000001824e-05, 3.869400000000231e-05, 3.869399999999884e-05, 3.747299999999967e-05, 3.6860999999999144e-05, 3.868000000000274e-05, 3.807000000000116e-05, 3.8083000000001255e-05, 3.807000000000116e-05, 3.74590000000001e-05, 3.6888999999998284e-05, 3.805600000000159e-05, 3.74590000000001e-05, 3.86659999999997e-05, 3.6874999999998714e-05, 3.6875000000002184e-05, 3.8666999999999174e-05, 3.684799999999905e-05, 3.7445000000000533e-05, 3.86659999999997e-05, 3.6875000000002184e-05, 3.8681000000002214e-05, 3.8055000000002115e-05, 3.74720000000002e-05, 3.6875000000002184e-05, 3.744399999999759e-05, 3.74720000000002e-05, 3.686200000000209e-05, 3.808400000000073e-05, 3.8069000000001685e-05, 3.8068999999998215e-05, 3.8124999999999964e-05, 3.749999999999934e-05, 3.74590000000001e-05, 3.872199999999798e-05, 3.747300000000314e-05, 3.86659999999997e-05, 3.7526999999999006e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.464" endtime="20201112 09:54:25.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.460" endtime="20201112 09:54:25.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.469" endtime="20201112 09:54:25.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.473" endtime="20201112 09:54:25.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.471" endtime="20201112 09:54:25.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.468" endtime="20201112 09:54:25.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.103" endtime="20201112 09:54:25.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.102" endtime="20201112 09:54:25.494"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.502" endtime="20201112 09:54:25.519"></status>
</kw>
<msg timestamp="20201112 09:54:25.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.501" endtime="20201112 09:54:25.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.520" endtime="20201112 09:54:25.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.523" endtime="20201112 09:54:25.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.498" endtime="20201112 09:54:25.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.496" endtime="20201112 09:54:25.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.532" endtime="20201112 09:54:25.819"></status>
</kw>
<msg timestamp="20201112 09:54:25.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.530" endtime="20201112 09:54:25.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.823" endtime="20201112 09:54:25.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.832" endtime="20201112 09:54:25.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.528" endtime="20201112 09:54:25.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.526" endtime="20201112 09:54:25.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.838" level="INFO">${RESULT} = [{'time': 0.022047319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9277000000000756e-05, 'source_diff': 3.9277000000000756e-05}, {'time': 0.022099278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:25.835" endtime="20201112 09:54:25.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.852" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:25.839" endtime="20201112 09:54:25.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.856" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.855" endtime="20201112 09:54:25.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.859" level="INFO">VALUE: [3.9277000000000756e-05, 3.926400000000066e-05, 3.92919999999998e-05, 3.9277000000000756e-05, 3.9875000000001715e-05, 3.9846999999999105e-05, 4.0512999999998967e-05, 3.9903000000000854e-05, 3.9930999999999994e-05, 3.9291000000000326e-05, 3.924999999999762e-05, 3.923600000000152e-05, 4.04859999999993e-05, 3.9874999999998245e-05, 3.927800000000023e-05, 3.927800000000023e-05, 4.0445000000000064e-05, 4.049999999999887e-05, 4.049999999999887e-05, 4.04859999999993e-05, 4.048600000000277e-05, 4.1138999999999065e-05, 4.048600000000277e-05, 3.92919999999998e-05, 3.9903000000000854e-05, 3.9277000000000756e-05, 4.0472999999999204e-05, 3.927800000000023e-05, 4.047199999999973e-05, 3.927800000000023e-05, 4.047199999999973e-05, 3.926400000000066e-05, 4.04859999999993e-05, 3.931999999999894e-05, 3.9861000000002145e-05, 3.9318999999999465e-05, 3.9889000000001285e-05, 3.927800000000023e-05, 3.926400000000066e-05, 4.04859999999993e-05, 4.04859999999993e-05, 3.927800000000023e-05, 3.9861000000002145e-05, 4.054200000000105e-05, 4.044400000000059e-05, 4.04859999999993e-05, 3.9889000000001285e-05, 3.9861000000002145e-05, 4.1083000000000786e-05, 3.92919999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.857" endtime="20201112 09:54:25.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.853" endtime="20201112 09:54:25.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.862" endtime="20201112 09:54:25.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.866" endtime="20201112 09:54:25.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.864" endtime="20201112 09:54:25.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.861" endtime="20201112 09:54:25.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.494" endtime="20201112 09:54:25.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.494" endtime="20201112 09:54:25.886"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.895" endtime="20201112 09:54:25.912"></status>
</kw>
<msg timestamp="20201112 09:54:25.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.894" endtime="20201112 09:54:25.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.913" endtime="20201112 09:54:25.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.916" endtime="20201112 09:54:25.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.891" endtime="20201112 09:54:25.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.889" endtime="20201112 09:54:25.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.925" endtime="20201112 09:54:26.212"></status>
</kw>
<msg timestamp="20201112 09:54:26.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022154056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02219575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:25.923" endtime="20201112 09:54:26.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022154056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02219575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:26.216" endtime="20201112 09:54:26.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.224" endtime="20201112 09:54:26.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.921" endtime="20201112 09:54:26.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.919" endtime="20201112 09:54:26.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.231" level="INFO">${RESULT} = [{'time': 0.02219575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.169400000000184e-05, 'source_diff': 4.169400000000184e-05}, {'time': 0.022247681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:26.227" endtime="20201112 09:54:26.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.244" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:26.232" endtime="20201112 09:54:26.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.249" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.248" endtime="20201112 09:54:26.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.251" level="INFO">VALUE: [4.169400000000184e-05, 4.2902999999996916e-05, 4.1097000000000355e-05, 4.107000000000069e-05, 4.108400000000026e-05, 4.225000000000062e-05, 4.108400000000026e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.2277000000000287e-05, 4.1124999999999495e-05, 4.1695000000001314e-05, 4.22920000000028e-05, 4.226400000000019e-05, 4.169399999999837e-05, 4.1083000000000786e-05, 4.1694999999997845e-05, 4.1083000000000786e-05, 4.1097000000000355e-05, 4.2889000000000815e-05, 4.229199999999933e-05, 4.1082999999997316e-05, 4.23059999999989e-05, 4.1681000000001744e-05, 4.2846999999998636e-05, 4.1110999999999925e-05, 4.2318999999998996e-05, 4.1082999999997316e-05, 4.1708999999997415e-05, 4.1680999999998275e-05, 4.1082999999997316e-05, 4.2304999999999426e-05, 4.230600000000237e-05, 4.226400000000019e-05, 4.1110999999999925e-05, 4.1695000000001314e-05, 4.16799999999988e-05, 4.169399999999837e-05, 4.2889000000000815e-05, 4.1083000000000786e-05, 4.23059999999989e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.2277000000000287e-05, 4.1695000000001314e-05, 4.1054999999998176e-05, 4.1097000000000355e-05, 4.290200000000091e-05, 4.169400000000184e-05, 4.1096999999996886e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.250" endtime="20201112 09:54:26.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.245" endtime="20201112 09:54:26.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.255" endtime="20201112 09:54:26.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.258" endtime="20201112 09:54:26.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.257" endtime="20201112 09:54:26.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.253" endtime="20201112 09:54:26.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.887" endtime="20201112 09:54:26.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.887" endtime="20201112 09:54:26.279"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.288" endtime="20201112 09:54:26.304"></status>
</kw>
<msg timestamp="20201112 09:54:26.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.286" endtime="20201112 09:54:26.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.306" endtime="20201112 09:54:26.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.308" endtime="20201112 09:54:26.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.283" endtime="20201112 09:54:26.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.281" endtime="20201112 09:54:26.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.317" endtime="20201112 09:54:26.603"></status>
</kw>
<msg timestamp="20201112 09:54:26.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02219475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:26.316" endtime="20201112 09:54:26.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02219475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:26.607" endtime="20201112 09:54:26.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.615" endtime="20201112 09:54:26.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.313" endtime="20201112 09:54:26.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.311" endtime="20201112 09:54:26.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.622" level="INFO">${RESULT} = [{'time': 0.022238819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4069000000000746e-05, 'source_diff': 4.4069000000000746e-05}, {'time': 0.022290583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:26.619" endtime="20201112 09:54:26.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.635" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:26.623" endtime="20201112 09:54:26.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.640" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.639" endtime="20201112 09:54:26.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.642" level="INFO">VALUE: [4.4069000000000746e-05, 4.290200000000091e-05, 4.352800000000101e-05, 4.474999999999965e-05, 4.2903000000000385e-05, 4.4111000000002926e-05, 4.46939999999979e-05, 4.472200000000051e-05, 4.347200000000273e-05, 4.473600000000008e-05, 4.351400000000144e-05, 4.4110999999999456e-05, 4.348599999999883e-05, 4.470799999999747e-05, 4.4110999999999456e-05, 4.472200000000051e-05, 4.2875000000001245e-05, 4.4110999999999456e-05, 4.350000000000187e-05, 4.351400000000144e-05, 4.34999999999984e-05, 4.472200000000051e-05, 4.351400000000144e-05, 4.2972999999998235e-05, 4.352699999999807e-05, 4.350000000000187e-05, 4.34999999999984e-05, 4.34860000000023e-05, 4.4110999999999456e-05, 4.2889000000000815e-05, 4.350000000000187e-05, 4.2903000000000385e-05, 4.348599999999883e-05, 4.4110999999999456e-05, 4.472200000000051e-05, 4.4111000000002926e-05, 4.350000000000187e-05, 4.351400000000144e-05, 4.4695000000000845e-05, 4.4096999999999886e-05, 4.470800000000094e-05, 4.470800000000094e-05, 4.351400000000144e-05, 4.351399999999797e-05, 4.34999999999984e-05, 4.351400000000144e-05, 4.351400000000144e-05, 4.46939999999979e-05, 4.4096999999999886e-05, 4.352800000000101e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.641" endtime="20201112 09:54:26.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.636" endtime="20201112 09:54:26.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.646" endtime="20201112 09:54:26.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.649" endtime="20201112 09:54:26.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.648" endtime="20201112 09:54:26.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.644" endtime="20201112 09:54:26.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.280" endtime="20201112 09:54:26.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.279" endtime="20201112 09:54:26.670"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.679" endtime="20201112 09:54:26.696"></status>
</kw>
<msg timestamp="20201112 09:54:26.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.677" endtime="20201112 09:54:26.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.697" endtime="20201112 09:54:26.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.700" endtime="20201112 09:54:26.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.675" endtime="20201112 09:54:26.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.673" endtime="20201112 09:54:26.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.709" endtime="20201112 09:54:26.994"></status>
</kw>
<msg timestamp="20201112 09:54:26.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.707" endtime="20201112 09:54:26.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.998" endtime="20201112 09:54:27.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.007" endtime="20201112 09:54:27.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.705" endtime="20201112 09:54:27.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.703" endtime="20201112 09:54:27.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.013" level="INFO">${RESULT} = [{'time': 0.022107556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5902999999999916e-05, 'source_diff': 4.5902999999999916e-05}, {'time': 0.022167931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:27.010" endtime="20201112 09:54:27.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.027" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:27.014" endtime="20201112 09:54:27.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.031" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.030" endtime="20201112 09:54:27.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.034" level="INFO">VALUE: [4.5902999999999916e-05, 4.649999999999793e-05, 4.4667000000001705e-05, 4.5916999999999486e-05, 4.5916999999999486e-05, 4.592999999999958e-05, 4.472200000000051e-05, 4.5861000000001206e-05, 4.651400000000097e-05, 4.651299999999803e-05, 4.591600000000001e-05, 4.654199999999664e-05, 4.529199999999886e-05, 4.65000000000014e-05, 4.5930999999999056e-05, 4.713899999999813e-05, 4.71529999999977e-05, 4.530500000000243e-05, 4.5902999999999916e-05, 4.656999999999925e-05, 4.532000000000147e-05, 4.530499999999896e-05, 4.593000000000305e-05, 4.5902999999999916e-05, 4.652700000000107e-05, 4.5319000000001997e-05, 4.712499999999856e-05, 4.651400000000097e-05, 4.652700000000107e-05, 4.5917000000002955e-05, 4.5319000000001997e-05, 4.5319000000001997e-05, 4.651400000000097e-05, 4.4708999999996946e-05, 4.647200000000226e-05, 4.533400000000104e-05, 4.7111000000002456e-05, 4.531899999999853e-05, 4.531899999999853e-05, 4.654200000000011e-05, 4.594399999999915e-05, 4.5944999999998626e-05, 4.532000000000147e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.654099999999717e-05, 4.65139999999975e-05, 4.53060000000019e-05, 4.713899999999813e-05, 4.651400000000097e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.032" endtime="20201112 09:54:27.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.028" endtime="20201112 09:54:27.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.037" endtime="20201112 09:54:27.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.041" endtime="20201112 09:54:27.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.039" endtime="20201112 09:54:27.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.036" endtime="20201112 09:54:27.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.671" endtime="20201112 09:54:27.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.671" endtime="20201112 09:54:27.062"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.070" endtime="20201112 09:54:27.087"></status>
</kw>
<msg timestamp="20201112 09:54:27.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.069" endtime="20201112 09:54:27.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.089" endtime="20201112 09:54:27.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.091" endtime="20201112 09:54:27.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.066" endtime="20201112 09:54:27.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.064" endtime="20201112 09:54:27.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.100" endtime="20201112 09:54:27.387"></status>
</kw>
<msg timestamp="20201112 09:54:27.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.099" endtime="20201112 09:54:27.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.392" endtime="20201112 09:54:27.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.400" endtime="20201112 09:54:27.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.096" endtime="20201112 09:54:27.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.094" endtime="20201112 09:54:27.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.407" level="INFO">${RESULT} = [{'time': 0.022159847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.773599999999961e-05, 'source_diff': 4.773599999999961e-05}, {'time': 0.022212264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:27.403" endtime="20201112 09:54:27.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.420" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:27.408" endtime="20201112 09:54:27.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.424" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.423" endtime="20201112 09:54:27.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.427" level="INFO">VALUE: [4.773599999999961e-05, 4.773599999999961e-05, 4.777800000000179e-05, 4.831900000000153e-05, 4.894399999999868e-05, 4.780600000000093e-05, 4.7125000000002026e-05, 4.773600000000308e-05, 4.8945000000001626e-05, 4.867999999999886e-05, 4.834700000000067e-05, 4.722199999999954e-05, 4.894399999999868e-05, 4.831900000000153e-05, 4.7125000000002026e-05, 4.712499999999856e-05, 4.836100000000024e-05, 4.834700000000067e-05, 4.83330000000011e-05, 4.892999999999911e-05, 4.838899999999938e-05, 4.83469999999972e-05, 4.773599999999961e-05, 4.7125000000002026e-05, 4.776399999999875e-05, 4.7125000000002026e-05, 4.834700000000067e-05, 4.774999999999918e-05, 4.776399999999875e-05, 4.895799999999825e-05, 4.7736999999999086e-05, 4.779200000000136e-05, 4.833299999999763e-05, 4.7736999999999086e-05, 4.833299999999763e-05, 4.708299999999985e-05, 4.833400000000057e-05, 4.836100000000024e-05, 4.831899999999806e-05, 4.892999999999911e-05, 4.772199999999657e-05, 4.773599999999961e-05, 4.773599999999961e-05, 4.836100000000024e-05, 4.773599999999961e-05, 4.894399999999868e-05, 4.894400000000215e-05, 4.712499999999856e-05, 4.7125000000002026e-05, 4.83330000000011e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.425" endtime="20201112 09:54:27.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.421" endtime="20201112 09:54:27.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.430" endtime="20201112 09:54:27.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.434" endtime="20201112 09:54:27.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.432" endtime="20201112 09:54:27.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.429" endtime="20201112 09:54:27.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.063" endtime="20201112 09:54:27.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.062" endtime="20201112 09:54:27.455"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.463" endtime="20201112 09:54:27.480"></status>
</kw>
<msg timestamp="20201112 09:54:27.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.462" endtime="20201112 09:54:27.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.482" endtime="20201112 09:54:27.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.484" endtime="20201112 09:54:27.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.459" endtime="20201112 09:54:27.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.457" endtime="20201112 09:54:27.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.493" endtime="20201112 09:54:27.779"></status>
</kw>
<msg timestamp="20201112 09:54:27.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:27.492" endtime="20201112 09:54:27.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:27.783" endtime="20201112 09:54:27.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.792" endtime="20201112 09:54:27.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.489" endtime="20201112 09:54:27.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.487" endtime="20201112 09:54:27.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.798" level="INFO">${RESULT} = [{'time': 0.022117278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.952800000000007e-05, 'source_diff': 4.952800000000007e-05}, {'time': 0.022179347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:27.795" endtime="20201112 09:54:27.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.812" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:27.799" endtime="20201112 09:54:27.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.816" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.815" endtime="20201112 09:54:27.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.819" level="INFO">VALUE: [4.952800000000007e-05, 5.02079999999995e-05, 5.013900000000113e-05, 4.955600000000268e-05, 5.079200000000089e-05, 4.892999999999911e-05, 5.012499999999809e-05, 4.955499999999974e-05, 5.01669999999968e-05, 5.076399999999828e-05, 4.95270000000006e-05, 5.0151999999997754e-05, 5.013900000000113e-05, 4.954100000000017e-05, 4.95270000000006e-05, 5.048600000000236e-05, 5.074999999999871e-05, 4.954199999999964e-05, 4.893099999999859e-05, 5.080600000000046e-05, 5.016700000000027e-05, 4.954100000000017e-05, 4.954100000000017e-05, 5.02079999999995e-05, 5.073599999999914e-05, 5.015299999999723e-05, 4.892999999999911e-05, 5.016700000000027e-05, 5.068100000000034e-05, 5.009699999999895e-05, 5.015299999999723e-05, 5.075000000000218e-05, 5.076399999999828e-05, 5.077700000000185e-05, 5.075000000000218e-05, 4.891699999999902e-05, 5.074999999999871e-05, 4.892999999999911e-05, 5.01530000000007e-05, 4.899999999999696e-05, 4.955499999999974e-05, 4.955499999999974e-05, 5.016700000000027e-05, 4.955599999999921e-05, 5.02079999999995e-05, 4.955599999999921e-05, 4.8931000000002056e-05, 4.95140000000005e-05, 5.015200000000122e-05, 5.072199999999957e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.817" endtime="20201112 09:54:27.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.813" endtime="20201112 09:54:27.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.823" endtime="20201112 09:54:27.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.827" endtime="20201112 09:54:27.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.825" endtime="20201112 09:54:27.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.821" endtime="20201112 09:54:27.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.455" endtime="20201112 09:54:27.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.455" endtime="20201112 09:54:27.848"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.856" endtime="20201112 09:54:27.874"></status>
</kw>
<msg timestamp="20201112 09:54:27.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.855" endtime="20201112 09:54:27.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.875" endtime="20201112 09:54:27.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.878" endtime="20201112 09:54:27.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.852" endtime="20201112 09:54:27.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.850" endtime="20201112 09:54:27.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.887" endtime="20201112 09:54:28.174"></status>
</kw>
<msg timestamp="20201112 09:54:28.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.885" endtime="20201112 09:54:28.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.179" endtime="20201112 09:54:28.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.187" endtime="20201112 09:54:28.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.883" endtime="20201112 09:54:28.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.881" endtime="20201112 09:54:28.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.194" level="INFO">${RESULT} = [{'time': 0.022336639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.258299999999841e-05, 'source_diff': 5.258299999999841e-05}, {'time': 0.022396611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:28.190" endtime="20201112 09:54:28.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.207" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:28.195" endtime="20201112 09:54:28.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.212" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.211" endtime="20201112 09:54:28.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.214" level="INFO">VALUE: [5.258299999999841e-05, 5.262500000000059e-05, 5.082000000000003e-05, 5.197200000000082e-05, 5.137499999999934e-05, 5.1915999999999074e-05, 5.248600000000089e-05, 5.136099999999977e-05, 5.199999999999996e-05, 5.1943999999998214e-05, 5.136099999999977e-05, 5.258400000000135e-05, 5.232000000000153e-05, 5.259700000000145e-05, 5.137499999999934e-05, 5.136099999999977e-05, 5.19730000000003e-05, 5.195800000000125e-05, 5.257000000000178e-05, 5.134799999999967e-05, 5.136199999999924e-05, 5.136099999999977e-05, 5.136099999999977e-05, 5.13470000000002e-05, 5.1971999999997354e-05, 5.195800000000125e-05, 5.20279999999991e-05, 5.201399999999953e-05, 5.1957999999997784e-05, 5.263900000000016e-05, 5.256900000000231e-05, 5.201399999999953e-05, 5.0709000000002946e-05, 5.136099999999977e-05, 5.136099999999977e-05, 5.255599999999874e-05, 5.136099999999977e-05, 5.136099999999977e-05, 5.136100000000324e-05, 5.136099999999977e-05, 5.261100000000102e-05, 5.194500000000116e-05, 5.075000000000218e-05, 5.197200000000082e-05, 5.134799999999967e-05, 5.1401999999999004e-05, 5.132000000000053e-05, 5.1957999999997784e-05, 5.199999999999996e-05, 5.076299999999881e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.213" endtime="20201112 09:54:28.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.208" endtime="20201112 09:54:28.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.218" endtime="20201112 09:54:28.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.221" endtime="20201112 09:54:28.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.220" endtime="20201112 09:54:28.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.216" endtime="20201112 09:54:28.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.849" endtime="20201112 09:54:28.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.848" endtime="20201112 09:54:28.242"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.250" endtime="20201112 09:54:28.268"></status>
</kw>
<msg timestamp="20201112 09:54:28.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.249" endtime="20201112 09:54:28.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.269" endtime="20201112 09:54:28.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.272" endtime="20201112 09:54:28.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.246" endtime="20201112 09:54:28.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.244" endtime="20201112 09:54:28.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.281" endtime="20201112 09:54:28.568"></status>
</kw>
<msg timestamp="20201112 09:54:28.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.279" endtime="20201112 09:54:28.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.572" endtime="20201112 09:54:28.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.581" endtime="20201112 09:54:28.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.277" endtime="20201112 09:54:28.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.275" endtime="20201112 09:54:28.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.587" level="INFO">${RESULT} = [{'time': 0.022182694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3166000000000324e-05, 'source_diff': 5.3166000000000324e-05}, {'time': 0.022242583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:28.584" endtime="20201112 09:54:28.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.600" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:28.588" endtime="20201112 09:54:28.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.605" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.604" endtime="20201112 09:54:28.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.607" level="INFO">VALUE: [5.3166000000000324e-05, 5.437499999999887e-05, 5.377800000000085e-05, 5.377800000000085e-05, 5.4999999999999494e-05, 5.311100000000152e-05, 5.315300000000023e-05, 5.497299999999983e-05, 5.49869999999994e-05, 5.43609999999993e-05, 5.381999999999956e-05, 5.377800000000085e-05, 5.313900000000066e-05, 5.377800000000085e-05, 5.379200000000042e-05, 5.31669999999998e-05, 5.3763999999997814e-05, 5.437499999999887e-05, 5.4429999999997675e-05, 5.381999999999956e-05, 5.3763999999997814e-05, 5.437500000000234e-05, 5.376400000000128e-05, 5.438899999999844e-05, 5.375000000000171e-05, 5.437499999999887e-05, 5.322200000000207e-05, 5.376300000000181e-05, 5.4387999999998965e-05, 5.437499999999887e-05, 5.3777999999997383e-05, 5.4972000000000354e-05, 5.311099999999805e-05, 5.3207999999999034e-05, 5.437500000000234e-05, 5.3179999999999894e-05, 5.377800000000085e-05, 5.316700000000327e-05, 5.3179999999999894e-05, 5.4972000000000354e-05, 5.318099999999937e-05, 5.313899999999719e-05, 5.318099999999937e-05, 5.377800000000085e-05, 5.377800000000085e-05, 5.43609999999993e-05, 5.377800000000085e-05, 5.437500000000234e-05, 5.377800000000085e-05, 5.379200000000042e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.606" endtime="20201112 09:54:28.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.601" endtime="20201112 09:54:28.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.611" endtime="20201112 09:54:28.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.614" endtime="20201112 09:54:28.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.613" endtime="20201112 09:54:28.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.609" endtime="20201112 09:54:28.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.243" endtime="20201112 09:54:28.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.242" endtime="20201112 09:54:28.635"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.644" endtime="20201112 09:54:28.662"></status>
</kw>
<msg timestamp="20201112 09:54:28.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.643" endtime="20201112 09:54:28.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.663" endtime="20201112 09:54:28.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.665" endtime="20201112 09:54:28.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.640" endtime="20201112 09:54:28.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.638" endtime="20201112 09:54:28.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.674" endtime="20201112 09:54:28.963"></status>
</kw>
<msg timestamp="20201112 09:54:28.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.673" endtime="20201112 09:54:28.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.967" endtime="20201112 09:54:28.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.975" endtime="20201112 09:54:28.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.670" endtime="20201112 09:54:28.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.669" endtime="20201112 09:54:28.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.982" level="INFO">${RESULT} = [{'time': 0.022517597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.561100000000055e-05, 'source_diff': 5.561100000000055e-05}, {'time': 0.022579903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:28.978" endtime="20201112 09:54:28.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.995" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:28.983" endtime="20201112 09:54:28.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.000" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.999" endtime="20201112 09:54:29.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.002" level="INFO">VALUE: [5.561100000000055e-05, 5.6791999999999954e-05, 5.6179999999999425e-05, 5.559700000000098e-05, 5.5555999999998273e-05, 5.6179999999999425e-05, 5.4985999999999924e-05, 5.6250000000000744e-05, 5.6778000000000384e-05, 5.6749999999997774e-05, 5.6250000000000744e-05, 5.5555999999998273e-05, 5.559699999999751e-05, 5.559699999999751e-05, 5.557000000000131e-05, 5.5555999999998273e-05, 5.679200000000342e-05, 5.619500000000194e-05, 5.615299999999976e-05, 5.4999999999999494e-05, 5.49869999999994e-05, 5.679100000000048e-05, 5.561100000000055e-05, 5.495900000000026e-05, 5.618100000000237e-05, 5.4985999999999924e-05, 5.619499999999847e-05, 5.6805999999999524e-05, 5.561099999999708e-05, 5.558400000000088e-05, 5.619500000000194e-05, 5.557000000000131e-05, 5.6791999999999954e-05, 5.565300000000273e-05, 5.558399999999741e-05, 5.559700000000098e-05, 5.619499999999847e-05, 5.558400000000088e-05, 5.559700000000098e-05, 5.558300000000141e-05, 5.498600000000339e-05, 5.619499999999847e-05, 5.6207999999998565e-05, 5.6207999999998565e-05, 5.6805999999999524e-05, 5.6819999999999093e-05, 5.561100000000055e-05, 5.6791999999999954e-05, 5.61809999999989e-05, 5.681899999999962e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.001" endtime="20201112 09:54:29.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.996" endtime="20201112 09:54:29.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.006" endtime="20201112 09:54:29.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.009" endtime="20201112 09:54:29.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.008" endtime="20201112 09:54:29.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.004" endtime="20201112 09:54:29.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.636" endtime="20201112 09:54:29.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.636" endtime="20201112 09:54:29.030"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.039" endtime="20201112 09:54:29.056"></status>
</kw>
<msg timestamp="20201112 09:54:29.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.037" endtime="20201112 09:54:29.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.058" endtime="20201112 09:54:29.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.060" endtime="20201112 09:54:29.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.035" endtime="20201112 09:54:29.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.033" endtime="20201112 09:54:29.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.069" endtime="20201112 09:54:29.355"></status>
</kw>
<msg timestamp="20201112 09:54:29.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.067" endtime="20201112 09:54:29.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.360" endtime="20201112 09:54:29.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.368" endtime="20201112 09:54:29.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.065" endtime="20201112 09:54:29.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.063" endtime="20201112 09:54:29.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.375" level="INFO">${RESULT} = [{'time': 0.022213264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.738900000000144e-05, 'source_diff': 5.738900000000144e-05}, {'time': 0.02228475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:29.371" endtime="20201112 09:54:29.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.388" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:29.376" endtime="20201112 09:54:29.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.392" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.391" endtime="20201112 09:54:29.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.395" level="INFO">VALUE: [5.738900000000144e-05, 5.6791999999999954e-05, 5.8570000000000844e-05, 5.73749999999984e-05, 5.859700000000051e-05, 5.79870000000024e-05, 5.862499999999965e-05, 5.801299999999912e-05, 5.7999999999999025e-05, 5.734699999999926e-05, 5.7958000000000315e-05, 5.8014000000002064e-05, 5.740300000000101e-05, 5.741699999999711e-05, 5.740300000000101e-05, 5.740300000000101e-05, 5.861100000000008e-05, 5.740300000000101e-05, 5.738899999999797e-05, 5.7401999999998066e-05, 5.861100000000008e-05, 5.741700000000058e-05, 5.856900000000137e-05, 5.738900000000144e-05, 5.6764000000000814e-05, 5.861100000000008e-05, 5.7401999999998066e-05, 5.8027999999998164e-05, 5.8013999999998594e-05, 5.861099999999661e-05, 5.8013999999998594e-05, 5.8000000000002494e-05, 5.859699999999704e-05, 5.862500000000312e-05, 5.8013999999998594e-05, 5.680500000000005e-05, 5.740299999999754e-05, 5.862500000000312e-05, 5.801299999999912e-05, 5.8014000000002064e-05, 5.8584000000000414e-05, 5.7402000000001535e-05, 5.8013999999998594e-05, 5.862499999999965e-05, 5.8014000000002064e-05, 5.73749999999984e-05, 5.6791999999999954e-05, 5.86810000000014e-05, 5.804100000000173e-05, 5.740300000000101e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.394" endtime="20201112 09:54:29.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.389" endtime="20201112 09:54:29.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.398" endtime="20201112 09:54:29.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.402" endtime="20201112 09:54:29.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.401" endtime="20201112 09:54:29.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.397" endtime="20201112 09:54:29.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.031" endtime="20201112 09:54:29.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.030" endtime="20201112 09:54:29.423"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.432" endtime="20201112 09:54:29.448"></status>
</kw>
<msg timestamp="20201112 09:54:29.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.430" endtime="20201112 09:54:29.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.450" endtime="20201112 09:54:29.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.452" endtime="20201112 09:54:29.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.427" endtime="20201112 09:54:29.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.425" endtime="20201112 09:54:29.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.461" endtime="20201112 09:54:29.749"></status>
</kw>
<msg timestamp="20201112 09:54:29.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.460" endtime="20201112 09:54:29.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.753" endtime="20201112 09:54:29.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.761" endtime="20201112 09:54:29.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.457" endtime="20201112 09:54:29.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.455" endtime="20201112 09:54:29.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.768" level="INFO">${RESULT} = [{'time': 0.022237444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.980499999999958e-05, 'source_diff': 5.980499999999958e-05}, {'time': 0.022311292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:29.765" endtime="20201112 09:54:29.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.781" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:29.769" endtime="20201112 09:54:29.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.785" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.785" endtime="20201112 09:54:29.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.788" level="INFO">VALUE: [5.980499999999958e-05, 5.9819999999998624e-05, 5.981899999999915e-05, 6.038900000000097e-05, 6.037499999999793e-05, 5.9805999999999054e-05, 6.041700000000011e-05, 5.9207999999998095e-05, 5.920900000000104e-05, 5.9862000000000803e-05, 5.9819999999998624e-05, 6.106999999999987e-05, 5.9833999999998194e-05, 5.9221999999997665e-05, 5.9819999999998624e-05, 6.0416000000000636e-05, 5.980499999999958e-05, 6.104100000000126e-05, 6.041700000000011e-05, 6.045900000000229e-05, 6.0430000000000206e-05, 6.043099999999968e-05, 5.9820000000002094e-05, 6.1028000000001165e-05, 6.041700000000011e-05, 6.1028000000001165e-05, 5.9207999999998095e-05, 5.920900000000104e-05, 5.9750000000000775e-05, 6.0472000000002385e-05, 5.9222000000001135e-05, 6.041700000000011e-05, 5.980499999999958e-05, 5.9221999999997665e-05, 5.9221999999997665e-05, 6.044499999999925e-05, 5.9805999999999054e-05, 5.922300000000061e-05, 6.1027999999997695e-05, 5.9208000000001565e-05, 5.988900000000047e-05, 6.041700000000011e-05, 6.040300000000054e-05, 5.981900000000262e-05, 5.9221999999997665e-05, 6.043099999999968e-05, 6.0415999999997166e-05, 5.981899999999915e-05, 5.986099999999786e-05, 5.920899999999757e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.787" endtime="20201112 09:54:29.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.782" endtime="20201112 09:54:29.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.792" endtime="20201112 09:54:29.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.795" endtime="20201112 09:54:29.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.794" endtime="20201112 09:54:29.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.790" endtime="20201112 09:54:29.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.424" endtime="20201112 09:54:29.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.423" endtime="20201112 09:54:29.816"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.824" endtime="20201112 09:54:29.841"></status>
</kw>
<msg timestamp="20201112 09:54:29.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.823" endtime="20201112 09:54:29.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.843" endtime="20201112 09:54:29.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.845" endtime="20201112 09:54:29.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.820" endtime="20201112 09:54:29.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.818" endtime="20201112 09:54:29.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.855" endtime="20201112 09:54:30.142"></status>
</kw>
<msg timestamp="20201112 09:54:30.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:29.853" endtime="20201112 09:54:30.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:30.146" endtime="20201112 09:54:30.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.155" endtime="20201112 09:54:30.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.851" endtime="20201112 09:54:30.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.849" endtime="20201112 09:54:30.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.162" level="INFO">${RESULT} = [{'time': 0.022101, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222200000000067e-05, 'source_diff': 6.222200000000067e-05}, {'time': 0.022175264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:30.158" endtime="20201112 09:54:30.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.175" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:30.163" endtime="20201112 09:54:30.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.179" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.178" endtime="20201112 09:54:30.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.182" level="INFO">VALUE: [6.222200000000067e-05, 6.290299999999957e-05, 6.163899999999875e-05, 6.283300000000172e-05, 6.222300000000014e-05, 6.22219999999972e-05, 6.276399999999988e-05, 6.223700000000318e-05, 6.102700000000169e-05, 6.158399999999994e-05, 6.283299999999825e-05, 6.223699999999971e-05, 6.223600000000024e-05, 6.0985999999998985e-05, 6.108299999999997e-05, 6.223600000000024e-05, 6.162500000000265e-05, 6.161099999999961e-05, 6.163899999999875e-05, 6.223600000000024e-05, 6.1027999999997695e-05, 6.222200000000067e-05, 6.161099999999961e-05, 6.277699999999997e-05, 6.163900000000222e-05, 6.284700000000129e-05, 6.284800000000076e-05, 6.284700000000129e-05, 6.22219999999972e-05, 6.163899999999875e-05, 6.0971999999999416e-05, 6.286099999999739e-05, 6.0999999999998555e-05, 6.22219999999972e-05, 6.280599999999859e-05, 6.163799999999928e-05, 6.163899999999875e-05, 6.104099999999779e-05, 6.159700000000004e-05, 6.162500000000265e-05, 6.223600000000024e-05, 6.219400000000153e-05, 6.218099999999796e-05, 6.165300000000179e-05, 6.162499999999918e-05, 6.161099999999961e-05, 6.1027999999997695e-05, 6.1027999999997695e-05, 6.162499999999918e-05, 6.1028000000001165e-05]</msg>
<status status="PASS" starttime="20201112 09:54:30.180" endtime="20201112 09:54:30.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.176" endtime="20201112 09:54:30.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.192" endtime="20201112 09:54:30.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.196" endtime="20201112 09:54:30.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.194" endtime="20201112 09:54:30.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.191" endtime="20201112 09:54:30.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.817" endtime="20201112 09:54:30.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.816" endtime="20201112 09:54:30.217"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.225" endtime="20201112 09:54:30.243"></status>
</kw>
<msg timestamp="20201112 09:54:30.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.224" endtime="20201112 09:54:30.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.244" endtime="20201112 09:54:30.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.247" endtime="20201112 09:54:30.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.221" endtime="20201112 09:54:30.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.219" endtime="20201112 09:54:30.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.256" endtime="20201112 09:54:30.544"></status>
</kw>
<msg timestamp="20201112 09:54:30.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.254" endtime="20201112 09:54:30.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.548" endtime="20201112 09:54:30.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.556" endtime="20201112 09:54:30.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.252" endtime="20201112 09:54:30.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.250" endtime="20201112 09:54:30.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.563" level="INFO">${RESULT} = [{'time': 0.022481514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.283300000000172e-05, 'source_diff': 6.283300000000172e-05}, {'time': 0.022555778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.559" endtime="20201112 09:54:30.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.576" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:30.564" endtime="20201112 09:54:30.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.581" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.579" endtime="20201112 09:54:30.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.583" level="INFO">VALUE: [6.283300000000172e-05, 6.40699999999994e-05, 6.344499999999878e-05, 6.40280000000007e-05, 6.343099999999921e-05, 6.404200000000027e-05, 6.284800000000076e-05, 6.345899999999835e-05, 6.344400000000278e-05, 6.404200000000027e-05, 6.406899999999993e-05, 6.412499999999821e-05, 6.347199999999845e-05, 6.350000000000106e-05, 6.465300000000132e-05, 6.281900000000215e-05, 6.463799999999881e-05, 6.283300000000172e-05, 6.34439999999993e-05, 6.348600000000149e-05, 6.405500000000036e-05, 6.404100000000079e-05, 6.345899999999835e-05, 6.465200000000185e-05, 6.465199999999838e-05, 6.342999999999974e-05, 6.344499999999878e-05, 6.344499999999878e-05, 6.463799999999881e-05, 6.343100000000268e-05, 6.405500000000036e-05, 6.345900000000182e-05, 6.463900000000175e-05, 6.465199999999838e-05, 6.344500000000225e-05, 6.465300000000132e-05, 6.284700000000129e-05, 6.405599999999984e-05, 6.344499999999878e-05, 6.405599999999984e-05, 6.405599999999984e-05, 6.469400000000056e-05, 6.408399999999898e-05, 6.405599999999984e-05, 6.286100000000086e-05, 6.465300000000132e-05, 6.404200000000027e-05, 6.345799999999888e-05, 6.404200000000027e-05, 6.469500000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:54:30.582" endtime="20201112 09:54:30.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.577" endtime="20201112 09:54:30.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.587" endtime="20201112 09:54:30.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.590" endtime="20201112 09:54:30.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.588" endtime="20201112 09:54:30.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.585" endtime="20201112 09:54:30.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.217" endtime="20201112 09:54:30.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.217" endtime="20201112 09:54:30.611"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.619" endtime="20201112 09:54:30.637"></status>
</kw>
<msg timestamp="20201112 09:54:30.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.618" endtime="20201112 09:54:30.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.638" endtime="20201112 09:54:30.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.641" endtime="20201112 09:54:30.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.615" endtime="20201112 09:54:30.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.613" endtime="20201112 09:54:30.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.650" endtime="20201112 09:54:30.937"></status>
</kw>
<msg timestamp="20201112 09:54:30.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.648" endtime="20201112 09:54:30.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.941" endtime="20201112 09:54:30.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.950" endtime="20201112 09:54:30.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.646" endtime="20201112 09:54:30.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.644" endtime="20201112 09:54:30.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.956" level="INFO">${RESULT} = [{'time': 0.022374653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.645900000000135e-05, 'source_diff': 6.645900000000135e-05}, {'time': 0.022446542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.953" endtime="20201112 09:54:30.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.970" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:30.957" endtime="20201112 09:54:30.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.974" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.973" endtime="20201112 09:54:30.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.977" level="INFO">VALUE: [6.645900000000135e-05, 6.586100000000039e-05, 6.584700000000082e-05, 6.650000000000059e-05, 6.647200000000145e-05, 6.584700000000082e-05, 6.647200000000145e-05, 6.645899999999788e-05, 6.47219999999997e-05, 6.530599999999762e-05, 6.524999999999934e-05, 6.586100000000039e-05, 6.524999999999934e-05, 6.645799999999841e-05, 6.586100000000039e-05, 6.645799999999841e-05, 6.648599999999755e-05, 6.586199999999987e-05, 6.524999999999934e-05, 6.706900000000293e-05, 6.522299999999967e-05, 6.706899999999946e-05, 6.647200000000145e-05, 6.647199999999798e-05, 6.586100000000039e-05, 6.701300000000118e-05, 6.586100000000039e-05, 6.524999999999934e-05, 6.645900000000135e-05, 6.58480000000003e-05, 6.588899999999953e-05, 6.527700000000247e-05, 6.526400000000238e-05, 6.648599999999755e-05, 6.52090000000001e-05, 6.645900000000135e-05, 6.706899999999946e-05, 6.652799999999973e-05, 6.586100000000039e-05, 6.524999999999934e-05, 6.584700000000082e-05, 6.645900000000135e-05, 6.58480000000003e-05, 6.529200000000152e-05, 6.523699999999924e-05, 6.645800000000188e-05, 6.586100000000039e-05, 6.645799999999841e-05, 6.586100000000039e-05, 6.587499999999996e-05]</msg>
<status status="PASS" starttime="20201112 09:54:30.975" endtime="20201112 09:54:30.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.971" endtime="20201112 09:54:30.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.980" endtime="20201112 09:54:30.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.984" endtime="20201112 09:54:31.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.982" endtime="20201112 09:54:31.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.979" endtime="20201112 09:54:31.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.612" endtime="20201112 09:54:31.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.611" endtime="20201112 09:54:31.005"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.013" endtime="20201112 09:54:31.032"></status>
</kw>
<msg timestamp="20201112 09:54:31.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.012" endtime="20201112 09:54:31.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.034" endtime="20201112 09:54:31.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.036" endtime="20201112 09:54:31.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.009" endtime="20201112 09:54:31.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.007" endtime="20201112 09:54:31.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.045" endtime="20201112 09:54:31.332"></status>
</kw>
<msg timestamp="20201112 09:54:31.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.043" endtime="20201112 09:54:31.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.336" endtime="20201112 09:54:31.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.344" endtime="20201112 09:54:31.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.041" endtime="20201112 09:54:31.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.039" endtime="20201112 09:54:31.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.351" level="INFO">${RESULT} = [{'time': 0.022372722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.306900000000159e-05, 'source_diff': 8.306900000000159e-05}, {'time': 0.02246875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:31.348" endtime="20201112 09:54:31.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.364" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:31.352" endtime="20201112 09:54:31.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.369" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.368" endtime="20201112 09:54:31.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.371" level="INFO">VALUE: [8.306900000000159e-05, 8.433299999999894e-05, 8.331900000000184e-05, 8.416699999999958e-05, 8.448600000000167e-05, 8.348600000000067e-05, 8.365300000000297e-05, 8.36529999999995e-05, 8.348700000000014e-05, 8.465200000000103e-05, 8.281899999999787e-05, 8.43330000000024e-05, 8.333299999999794e-05, 8.395799999999856e-05, 8.416699999999958e-05, 8.298600000000017e-05, 8.4153e-05, 8.438900000000069e-05, 8.3152999999999e-05, 8.297300000000007e-05, 8.448700000000114e-05, 8.365200000000003e-05, 8.433299999999894e-05, 8.320900000000075e-05, 8.333299999999794e-05, 8.387500000000062e-05, 8.398600000000117e-05, 8.380600000000224e-05, 8.301399999999931e-05, 8.381999999999834e-05, 8.299999999999974e-05, 8.448700000000114e-05, 8.329099999999923e-05, 8.383299999999844e-05, 8.415200000000053e-05, 8.398600000000117e-05, 8.331900000000184e-05, 8.316699999999858e-05, 8.409699999999826e-05, 8.330599999999827e-05, 8.332000000000131e-05, 8.44859999999982e-05, 8.315300000000247e-05, 8.382000000000181e-05, 8.448600000000167e-05, 8.39720000000016e-05, 8.283299999999744e-05, 8.36529999999995e-05, 8.38330000000019e-05, 8.348600000000067e-05]</msg>
<status status="PASS" starttime="20201112 09:54:31.370" endtime="20201112 09:54:31.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.365" endtime="20201112 09:54:31.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.375" endtime="20201112 09:54:31.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.378" endtime="20201112 09:54:31.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.377" endtime="20201112 09:54:31.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.373" endtime="20201112 09:54:31.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.006" endtime="20201112 09:54:31.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.005" endtime="20201112 09:54:31.399"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.407" endtime="20201112 09:54:31.427"></status>
</kw>
<msg timestamp="20201112 09:54:31.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.406" endtime="20201112 09:54:31.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.429" endtime="20201112 09:54:31.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.431" endtime="20201112 09:54:31.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.403" endtime="20201112 09:54:31.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.401" endtime="20201112 09:54:31.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.440" endtime="20201112 09:54:31.727"></status>
</kw>
<msg timestamp="20201112 09:54:31.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.439" endtime="20201112 09:54:31.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.731" endtime="20201112 09:54:31.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.740" endtime="20201112 09:54:31.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.436" endtime="20201112 09:54:31.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.434" endtime="20201112 09:54:31.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.746" level="INFO">${RESULT} = [{'time': 0.022521681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.488900000000119e-05, 'source_diff': 8.488900000000119e-05}, {'time': 0.02261775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:31.743" endtime="20201112 09:54:31.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.760" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:31.747" endtime="20201112 09:54:31.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.764" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.763" endtime="20201112 09:54:31.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.767" level="INFO">VALUE: [8.488900000000119e-05, 8.487499999999815e-05, 8.581900000000087e-05, 8.599999999999927e-05, 8.64860000000002e-05, 8.558300000000019e-05, 8.64860000000002e-05, 8.550000000000224e-05, 8.613899999999897e-05, 8.499999999999827e-05, 8.513900000000144e-05, 8.497300000000207e-05, 8.652799999999891e-05, 8.500000000000174e-05, 8.54859999999992e-05, 8.669499999999775e-05, 8.64860000000002e-05, 8.64860000000002e-05, 8.531900000000037e-05, 8.586099999999958e-05, 8.616700000000158e-05, 8.56530000000015e-05, 8.613899999999897e-05, 8.530499999999733e-05, 8.481899999999987e-05, 8.566700000000108e-05, 8.570800000000031e-05, 8.5153000000001e-05, 8.481899999999987e-05, 8.632000000000084e-05, 8.481899999999987e-05, 8.502799999999741e-05, 8.576399999999859e-05, 8.562500000000237e-05, 8.583300000000044e-05, 8.531999999999984e-05, 8.583300000000044e-05, 8.597200000000013e-05, 8.631900000000137e-05, 8.533299999999994e-05, 8.49859999999987e-05, 8.56530000000015e-05, 8.615299999999854e-05, 8.583399999999991e-05, 8.56669999999976e-05, 8.645900000000054e-05, 8.666599999999913e-05, 8.5847e-05, 8.515199999999806e-05, 8.61660000000021e-05]</msg>
<status status="PASS" starttime="20201112 09:54:31.765" endtime="20201112 09:54:31.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.761" endtime="20201112 09:54:31.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.770" endtime="20201112 09:54:31.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.774" endtime="20201112 09:54:31.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.772" endtime="20201112 09:54:31.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.769" endtime="20201112 09:54:31.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.400" endtime="20201112 09:54:31.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.399" endtime="20201112 09:54:31.794"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.803" endtime="20201112 09:54:31.822"></status>
</kw>
<msg timestamp="20201112 09:54:31.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.802" endtime="20201112 09:54:31.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.824" endtime="20201112 09:54:31.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.826" endtime="20201112 09:54:31.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.799" endtime="20201112 09:54:31.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.797" endtime="20201112 09:54:31.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.835" endtime="20201112 09:54:32.124"></status>
</kw>
<msg timestamp="20201112 09:54:32.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02224975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:31.834" endtime="20201112 09:54:32.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02224975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:32.128" endtime="20201112 09:54:32.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.136" endtime="20201112 09:54:32.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.831" endtime="20201112 09:54:32.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.830" endtime="20201112 09:54:32.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.143" level="INFO">${RESULT} = [{'time': 0.022337972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.822200000000238e-05, 'source_diff': 8.822200000000238e-05}, {'time': 0.022434042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.139" endtime="20201112 09:54:32.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.156" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:32.144" endtime="20201112 09:54:32.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.161" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.160" endtime="20201112 09:54:32.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.163" level="INFO">VALUE: [8.822200000000238e-05, 8.838900000000122e-05, 8.865300000000104e-05, 8.847199999999916e-05, 8.732000000000184e-05, 8.747200000000163e-05, 8.733400000000141e-05, 8.715299999999954e-05, 8.715299999999954e-05, 8.730499999999933e-05, 8.720800000000181e-05, 8.715200000000006e-05, 8.700000000000027e-05, 8.86670000000006e-05, 8.697200000000113e-05, 8.81389999999975e-05, 8.7153000000003e-05, 8.863900000000147e-05, 8.74860000000012e-05, 8.715299999999954e-05, 8.69860000000007e-05, 8.795799999999909e-05, 8.800000000000127e-05, 8.811099999999836e-05, 8.683300000000144e-05, 8.750000000000077e-05, 8.81670000000001e-05, 8.780600000000277e-05, 8.863900000000147e-05, 8.779199999999973e-05, 8.715200000000006e-05, 8.847199999999916e-05, 8.831900000000337e-05, 8.86519999999981e-05, 8.715299999999954e-05, 8.68189999999984e-05, 8.74860000000012e-05, 8.73059999999988e-05, 8.784699999999854e-05, 8.715299999999954e-05, 8.682000000000134e-05, 8.708400000000116e-05, 8.682000000000134e-05, 8.862499999999843e-05, 8.765200000000056e-05, 8.834700000000251e-05, 8.850000000000177e-05, 8.79860000000017e-05, 8.73189999999989e-05, 8.763900000000047e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.162" endtime="20201112 09:54:32.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.157" endtime="20201112 09:54:32.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.167" endtime="20201112 09:54:32.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.170" endtime="20201112 09:54:32.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.169" endtime="20201112 09:54:32.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.165" endtime="20201112 09:54:32.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.795" endtime="20201112 09:54:32.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.795" endtime="20201112 09:54:32.191"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.200" endtime="20201112 09:54:32.219"></status>
</kw>
<msg timestamp="20201112 09:54:32.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.198" endtime="20201112 09:54:32.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.220" endtime="20201112 09:54:32.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.223" endtime="20201112 09:54:32.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.195" endtime="20201112 09:54:32.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.193" endtime="20201112 09:54:32.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.232" endtime="20201112 09:54:32.519"></status>
</kw>
<msg timestamp="20201112 09:54:32.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.230" endtime="20201112 09:54:32.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.523" endtime="20201112 09:54:32.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.531" endtime="20201112 09:54:32.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.227" endtime="20201112 09:54:32.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.226" endtime="20201112 09:54:32.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.538" level="INFO">${RESULT} = [{'time': 0.022415833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.941599999999841e-05, 'source_diff': 8.941599999999841e-05}, {'time': 0.022509833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.535" endtime="20201112 09:54:32.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.551" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:32.539" endtime="20201112 09:54:32.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.556" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.555" endtime="20201112 09:54:32.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.558" level="INFO">VALUE: [8.941599999999841e-05, 8.96519999999991e-05, 8.981899999999793e-05, 8.913900000000197e-05, 8.968100000000118e-05, 8.89860000000027e-05, 8.881999999999987e-05, 8.91670000000011e-05, 8.93199999999969e-05, 9.065299999999957e-05, 8.96519999999991e-05, 8.998600000000023e-05, 8.94999999999993e-05, 8.958300000000072e-05, 9.048600000000073e-05, 8.983300000000097e-05, 8.94999999999993e-05, 8.965299999999857e-05, 8.94999999999993e-05, 8.998600000000023e-05, 9.01389999999995e-05, 8.933300000000047e-05, 8.915200000000206e-05, 9.06520000000001e-05, 8.98190000000014e-05, 9.012499999999993e-05, 9.018099999999821e-05, 9.065299999999957e-05, 9.029199999999876e-05, 8.983400000000044e-05, 9.059800000000076e-05, 8.900000000000227e-05, 9.031899999999843e-05, 8.948599999999973e-05, 8.916599999999816e-05, 9.015300000000254e-05, 8.987499999999968e-05, 8.984800000000001e-05, 8.993100000000143e-05, 8.933399999999994e-05, 9.065299999999957e-05, 8.93199999999969e-05, 8.933300000000047e-05, 8.986100000000011e-05, 8.916599999999816e-05, 9.048600000000073e-05, 8.969499999999728e-05, 8.998600000000023e-05, 8.951400000000234e-05, 8.966699999999814e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.557" endtime="20201112 09:54:32.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.552" endtime="20201112 09:54:32.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.562" endtime="20201112 09:54:32.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.565" endtime="20201112 09:54:32.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.564" endtime="20201112 09:54:32.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.560" endtime="20201112 09:54:32.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.192" endtime="20201112 09:54:32.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.191" endtime="20201112 09:54:32.586"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.595" endtime="20201112 09:54:32.614"></status>
</kw>
<msg timestamp="20201112 09:54:32.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.593" endtime="20201112 09:54:32.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.615" endtime="20201112 09:54:32.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.618" endtime="20201112 09:54:32.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.591" endtime="20201112 09:54:32.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.588" endtime="20201112 09:54:32.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.627" endtime="20201112 09:54:32.913"></status>
</kw>
<msg timestamp="20201112 09:54:32.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.625" endtime="20201112 09:54:32.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.917" endtime="20201112 09:54:32.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.925" endtime="20201112 09:54:32.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.623" endtime="20201112 09:54:32.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.621" endtime="20201112 09:54:32.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.932" level="INFO">${RESULT} = [{'time': 0.022212361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.156899999999968e-05, 'source_diff': 9.156899999999968e-05}, {'time': 0.022310375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.929" endtime="20201112 09:54:32.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.945" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:32.933" endtime="20201112 09:54:32.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.950" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.949" endtime="20201112 09:54:32.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.952" level="INFO">VALUE: [9.156899999999968e-05, 9.130599999999933e-05, 9.184699999999907e-05, 9.115300000000007e-05, 9.18199999999994e-05, 9.233399999999947e-05, 9.131899999999943e-05, 9.147200000000216e-05, 9.151400000000087e-05, 9.19719999999992e-05, 9.099999999999733e-05, 9.148600000000173e-05, 9.148599999999826e-05, 9.18329999999995e-05, 9.08199999999984e-05, 9.08199999999984e-05, 9.180599999999983e-05, 9.077799999999969e-05, 9.18329999999995e-05, 9.15139999999974e-05, 9.081899999999893e-05, 9.08190000000024e-05, 9.220899999999935e-05, 9.184699999999907e-05, 9.105499999999961e-05, 9.265300000000157e-05, 9.148600000000173e-05, 9.230599999999686e-05, 9.082000000000187e-05, 9.131899999999943e-05, 9.148600000000173e-05, 9.26529999999981e-05, 9.130499999999986e-05, 9.115300000000007e-05, 9.25000000000023e-05, 9.14719999999987e-05, 9.099999999999733e-05, 9.216699999999717e-05, 9.198600000000223e-05, 9.081899999999893e-05, 9.215199999999812e-05, 9.131899999999943e-05, 9.202799999999747e-05, 9.237500000000218e-05, 9.081899999999893e-05, 9.073600000000098e-05, 9.098599999999776e-05, 9.11390000000005e-05, 9.198599999999876e-05, 9.15000000000013e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.951" endtime="20201112 09:54:32.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.946" endtime="20201112 09:54:32.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.956" endtime="20201112 09:54:32.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.959" endtime="20201112 09:54:32.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.958" endtime="20201112 09:54:32.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.954" endtime="20201112 09:54:32.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.587" endtime="20201112 09:54:32.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.586" endtime="20201112 09:54:32.980"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.989" endtime="20201112 09:54:33.009"></status>
</kw>
<msg timestamp="20201112 09:54:33.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.987" endtime="20201112 09:54:33.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.010" endtime="20201112 09:54:33.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.013" endtime="20201112 09:54:33.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.985" endtime="20201112 09:54:33.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.983" endtime="20201112 09:54:33.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.022" endtime="20201112 09:54:33.308"></status>
</kw>
<msg timestamp="20201112 09:54:33.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.020" endtime="20201112 09:54:33.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.312" endtime="20201112 09:54:33.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.321" endtime="20201112 09:54:33.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.018" endtime="20201112 09:54:33.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.016" endtime="20201112 09:54:33.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.327" level="INFO">${RESULT} = [{'time': 0.022162361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.390299999999935e-05, 'source_diff': 9.390299999999935e-05}, {'time': 0.022262417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:33.324" endtime="20201112 09:54:33.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.340" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:33.328" endtime="20201112 09:54:33.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.345" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.344" endtime="20201112 09:54:33.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.347" level="INFO">VALUE: [9.390299999999935e-05, 9.418099999999874e-05, 9.348600000000026e-05, 9.313899999999903e-05, 9.466699999999967e-05, 9.434700000000157e-05, 9.315300000000207e-05, 9.415200000000012e-05, 9.299999999999933e-05, 9.400000000000033e-05, 9.430500000000286e-05, 9.363899999999953e-05, 9.469499999999881e-05, 9.390300000000282e-05, 9.340299999999885e-05, 9.279199999999779e-05, 9.298699999999924e-05, 9.326400000000262e-05, 9.383299999999803e-05, 9.330499999999839e-05, 9.316700000000164e-05, 9.354199999999854e-05, 9.415300000000307e-05, 9.299999999999933e-05, 9.349999999999983e-05, 9.383400000000097e-05, 9.363899999999953e-05, 9.28330000000005e-05, 9.297199999999672e-05, 9.44859999999978e-05, 9.331899999999796e-05, 9.316699999999817e-05, 9.404200000000251e-05, 9.387500000000021e-05, 9.330599999999786e-05, 9.43200000000019e-05, 9.38339999999975e-05, 9.469399999999933e-05, 9.465200000000062e-05, 9.317999999999826e-05, 9.281900000000093e-05, 9.331899999999796e-05, 9.333299999999753e-05, 9.287499999999921e-05, 9.433400000000147e-05, 9.333400000000047e-05, 9.469399999999933e-05, 9.38200000000014e-05, 9.41659999999997e-05, 9.393000000000248e-05]</msg>
<status status="PASS" starttime="20201112 09:54:33.346" endtime="20201112 09:54:33.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.341" endtime="20201112 09:54:33.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.351" endtime="20201112 09:54:33.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.354" endtime="20201112 09:54:33.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.353" endtime="20201112 09:54:33.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.349" endtime="20201112 09:54:33.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.981" endtime="20201112 09:54:33.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.981" endtime="20201112 09:54:33.375"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.384" endtime="20201112 09:54:33.403"></status>
</kw>
<msg timestamp="20201112 09:54:33.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.382" endtime="20201112 09:54:33.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.404" endtime="20201112 09:54:33.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.407" endtime="20201112 09:54:33.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.380" endtime="20201112 09:54:33.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.378" endtime="20201112 09:54:33.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.416" endtime="20201112 09:54:33.703"></status>
</kw>
<msg timestamp="20201112 09:54:33.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022089778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.414" endtime="20201112 09:54:33.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022089778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.708" endtime="20201112 09:54:33.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.716" endtime="20201112 09:54:33.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.412" endtime="20201112 09:54:33.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.410" endtime="20201112 09:54:33.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.722" level="INFO">${RESULT} = [{'time': 0.022186375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.659700000000035e-05, 'source_diff': 9.659700000000035e-05}, {'time': 0.022296361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:33.719" endtime="20201112 09:54:33.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.735" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:33.723" endtime="20201112 09:54:33.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.740" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.739" endtime="20201112 09:54:33.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.742" level="INFO">VALUE: [9.659700000000035e-05, 9.631900000000096e-05, 9.499999999999786e-05, 9.56530000000011e-05, 9.616700000000117e-05, 9.6334e-05, 9.547300000000217e-05, 9.58469999999996e-05, 9.631900000000096e-05, 9.61799999999978e-05, 9.566700000000067e-05, 9.48330000000025e-05, 9.616700000000117e-05, 9.531899999999996e-05, 9.531999999999943e-05, 9.54720000000027e-05, 9.479199999999979e-05, 9.649999999999936e-05, 9.565199999999816e-05, 9.645800000000065e-05, 9.501399999999743e-05, 9.531899999999996e-05, 9.513900000000103e-05, 9.481899999999946e-05, 9.484800000000154e-05, 9.531999999999943e-05, 9.549999999999836e-05, 9.600000000000233e-05, 9.50140000000009e-05, 9.566599999999773e-05, 9.665299999999863e-05, 9.54720000000027e-05, 9.59859999999993e-05, 9.59859999999993e-05, 9.576400000000165e-05, 9.522199999999897e-05, 9.663899999999906e-05, 9.58339999999995e-05, 9.663900000000253e-05, 9.662499999999949e-05, 9.538900000000128e-05, 9.497199999999872e-05, 9.597199999999972e-05, 9.631899999999749e-05, 9.544400000000008e-05, 9.632000000000043e-05, 9.516700000000017e-05, 9.649999999999936e-05, 9.600000000000233e-05, 9.499999999999786e-05]</msg>
<status status="PASS" starttime="20201112 09:54:33.741" endtime="20201112 09:54:33.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.736" endtime="20201112 09:54:33.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.746" endtime="20201112 09:54:33.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.749" endtime="20201112 09:54:33.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.748" endtime="20201112 09:54:33.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.744" endtime="20201112 09:54:33.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.376" endtime="20201112 09:54:33.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.376" endtime="20201112 09:54:33.770"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.779" endtime="20201112 09:54:33.798"></status>
</kw>
<msg timestamp="20201112 09:54:33.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.777" endtime="20201112 09:54:33.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.800" endtime="20201112 09:54:33.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.802" endtime="20201112 09:54:33.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.775" endtime="20201112 09:54:33.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.773" endtime="20201112 09:54:33.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.811" endtime="20201112 09:54:34.098"></status>
</kw>
<msg timestamp="20201112 09:54:34.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.810" endtime="20201112 09:54:34.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.103" endtime="20201112 09:54:34.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.111" endtime="20201112 09:54:34.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.807" endtime="20201112 09:54:34.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.805" endtime="20201112 09:54:34.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.117" level="INFO">${RESULT} = [{'time': 0.022228986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.725000000000011e-05, 'source_diff': 9.725000000000011e-05}, {'time': 0.022332986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:34.114" endtime="20201112 09:54:34.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.131" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:34.118" endtime="20201112 09:54:34.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.135" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.134" endtime="20201112 09:54:34.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.138" level="INFO">VALUE: [9.725000000000011e-05, 9.69860000000003e-05, 9.71530000000026e-05, 9.751300000000046e-05, 9.7334000000001e-05, 9.786100000000117e-05, 9.833399999999853e-05, 9.797299999999773e-05, 9.813800000000109e-05, 9.865300000000063e-05, 9.79999999999974e-05, 9.713899999999956e-05, 9.850000000000136e-05, 9.777799999999975e-05, 9.784800000000107e-05, 9.866699999999673e-05, 9.84999999999979e-05, 9.816600000000023e-05, 9.781899999999899e-05, 9.676399999999918e-05, 9.815300000000013e-05, 9.820899999999841e-05, 9.783299999999856e-05, 9.733300000000153e-05, 9.813899999999709e-05, 9.848599999999832e-05, 9.733399999999753e-05, 9.815300000000013e-05, 9.715199999999966e-05, 9.716599999999923e-05, 9.800000000000086e-05, 9.800000000000086e-05, 9.768100000000224e-05, 9.850000000000136e-05, 9.73059999999984e-05, 9.84860000000018e-05, 9.682000000000093e-05, 9.698699999999977e-05, 9.815200000000066e-05, 9.86800000000003e-05, 9.85280000000005e-05, 9.813900000000056e-05, 9.74860000000008e-05, 9.765299999999963e-05, 9.865300000000063e-05, 9.747199999999775e-05, 9.83059999999994e-05, 9.74860000000008e-05, 9.866600000000073e-05, 9.783300000000203e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.136" endtime="20201112 09:54:34.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.132" endtime="20201112 09:54:34.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.141" endtime="20201112 09:54:34.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.145" endtime="20201112 09:54:34.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.143" endtime="20201112 09:54:34.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.140" endtime="20201112 09:54:34.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.771" endtime="20201112 09:54:34.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.771" endtime="20201112 09:54:34.165"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.174" endtime="20201112 09:54:34.193"></status>
</kw>
<msg timestamp="20201112 09:54:34.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.173" endtime="20201112 09:54:34.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.195" endtime="20201112 09:54:34.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.197" endtime="20201112 09:54:34.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.170" endtime="20201112 09:54:34.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.168" endtime="20201112 09:54:34.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.206" endtime="20201112 09:54:34.492"></status>
</kw>
<msg timestamp="20201112 09:54:34.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.205" endtime="20201112 09:54:34.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.497" endtime="20201112 09:54:34.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.505" endtime="20201112 09:54:34.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.202" endtime="20201112 09:54:34.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.200" endtime="20201112 09:54:34.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.512" level="INFO">${RESULT} = [{'time': 0.022212347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.976399999999871e-05, 'source_diff': 9.976399999999871e-05}, {'time': 0.022316333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:34.508" endtime="20201112 09:54:34.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.525" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:34.513" endtime="20201112 09:54:34.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.529" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.528" endtime="20201112 09:54:34.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.532" level="INFO">VALUE: [9.976399999999871e-05, 9.962499999999902e-05, 0.00010016699999999823, 9.980500000000142e-05, 0.00010065300000000263, 0.00010066699999999873, 9.915299999999766e-05, 9.96670000000012e-05, 9.984700000000013e-05, 9.916600000000123e-05, 9.997200000000026e-05, 0.00010045799999999772, 9.965300000000163e-05, 9.948599999999932e-05, 9.94860000000028e-05, 0.00010048600000000033, 9.931999999999996e-05, 9.883399999999903e-05, 0.00010065300000000263, 0.00010013899999999909, 9.981899999999752e-05, 9.881899999999999e-05, 9.897199999999926e-05, 0.00010065299999999916, 9.931999999999996e-05, 0.00010047200000000076, 0.00010018100000000127, 9.966699999999773e-05, 0.0001006670000000022, 0.00010032000000000096, 9.931900000000049e-05, 9.984700000000013e-05, 9.96670000000012e-05, 9.965300000000163e-05, 9.913899999999809e-05, 9.94020000000019e-05, 0.00010002799999999853, 9.99999999999994e-05, 9.91670000000007e-05, 9.931999999999996e-05, 9.966600000000173e-05, 0.00010027699999999931, 9.881899999999999e-05, 9.898599999999882e-05, 9.981899999999752e-05, 9.99999999999994e-05, 9.93479999999991e-05, 9.965300000000163e-05, 9.983400000000003e-05, 9.913900000000156e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.530" endtime="20201112 09:54:34.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.526" endtime="20201112 09:54:34.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.535" endtime="20201112 09:54:34.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.539" endtime="20201112 09:54:34.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.537" endtime="20201112 09:54:34.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.534" endtime="20201112 09:54:34.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.166" endtime="20201112 09:54:34.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.166" endtime="20201112 09:54:34.560"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.568" endtime="20201112 09:54:34.588"></status>
</kw>
<msg timestamp="20201112 09:54:34.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.567" endtime="20201112 09:54:34.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.590" endtime="20201112 09:54:34.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.592" endtime="20201112 09:54:34.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.564" endtime="20201112 09:54:34.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.562" endtime="20201112 09:54:34.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.601" endtime="20201112 09:54:34.888"></status>
</kw>
<msg timestamp="20201112 09:54:34.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.600" endtime="20201112 09:54:34.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.892" endtime="20201112 09:54:34.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.900" endtime="20201112 09:54:34.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.597" endtime="20201112 09:54:34.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.595" endtime="20201112 09:54:34.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.907" level="INFO">${RESULT} = [{'time': 0.022296528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010224999999999818, 'source_diff': 0.00010224999999999818}, {'time': 0.022412528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:34.904" endtime="20201112 09:54:34.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.920" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:34.908" endtime="20201112 09:54:34.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.925" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.924" endtime="20201112 09:54:34.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.927" level="INFO">VALUE: [0.00010224999999999818, 0.00010263900000000159, 0.00010204100000000063, 0.000101819999999999, 0.00010115200000000019, 0.00010148600000000133, 0.00010147199999999829, 0.00010166699999999973, 0.00010172300000000148, 0.0001020000000000014, 0.00010116699999999923, 0.00010265300000000116, 0.00010215299999999719, 0.0001009870000000003, 0.00010116599999999976, 0.00010081900000000199, 0.00010147199999999829, 0.00010116699999999923, 0.0001010419999999991, 0.00010183299999999909, 0.00010216700000000023, 0.00010082000000000146, 0.00010216700000000023, 0.00010265300000000116, 0.00010165199999999722, 0.00010130499999999945, 0.00010231900000000002, 0.00010115299999999966, 0.00010166699999999973, 0.00010215299999999719, 0.000101819999999999, 0.00010182000000000246, 0.00010116599999999976, 0.00010184700000000213, 0.00010229100000000088, 0.00010266700000000073, 0.00010247199999999929, 0.00010181899999999952, 0.00010131900000000249, 0.00010215300000000066, 0.00010266700000000073, 0.00010213900000000109, 0.0001023199999999995, 0.00010216600000000076, 0.00010231900000000002, 0.00010268000000000083, 0.00010133300000000206, 0.00010075000000000014, 0.00010209700000000238, 0.00010180599999999942]</msg>
<status status="PASS" starttime="20201112 09:54:34.926" endtime="20201112 09:54:34.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.921" endtime="20201112 09:54:34.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.931" endtime="20201112 09:54:34.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.935" endtime="20201112 09:54:34.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.933" endtime="20201112 09:54:34.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.929" endtime="20201112 09:54:34.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.560" endtime="20201112 09:54:34.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.560" endtime="20201112 09:54:34.956"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.965" endtime="20201112 09:54:34.985"></status>
</kw>
<msg timestamp="20201112 09:54:34.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.963" endtime="20201112 09:54:34.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.986" endtime="20201112 09:54:34.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.989" endtime="20201112 09:54:34.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.961" endtime="20201112 09:54:34.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.958" endtime="20201112 09:54:34.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.998" endtime="20201112 09:54:35.286"></status>
</kw>
<msg timestamp="20201112 09:54:35.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.996" endtime="20201112 09:54:35.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.290" endtime="20201112 09:54:35.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.298" endtime="20201112 09:54:35.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.994" endtime="20201112 09:54:35.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.992" endtime="20201112 09:54:35.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.304" level="INFO">${RESULT} = [{'time': 0.022715694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030550000000012, 'source_diff': 0.0001030550000000012}, {'time': 0.022833764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.301" endtime="20201112 09:54:35.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.317" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:35.305" endtime="20201112 09:54:35.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.322" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.321" endtime="20201112 09:54:35.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.324" level="INFO">VALUE: [0.0001030550000000012, 0.000104207999999998, 0.00010433299999999812, 0.0001035420000000016, 0.00010348599999999986, 0.00010431999999999803, 0.00010316699999999776, 0.00010316700000000123, 0.00010357000000000074, 0.00010354199999999814, 0.00010279100000000138, 0.00010315199999999872, 0.00010399999999999993, 0.00010281900000000052, 0.00010365299999999869, 0.0001043200000000015, 0.000103820000000001, 0.00010449999999999696, 0.00010282, 0.00010434699999999769, 0.00010281900000000052, 0.00010431900000000202, 0.00010298599999999936, 0.00010431899999999855, 0.00010331899999999755, 0.00010462500000000055, 0.00010315300000000166, 0.00010313900000000209, 0.00010333299999999712, 0.00010313899999999862, 0.00010465200000000022, 0.00010334700000000016, 0.00010299999999999893, 0.00010315300000000166, 0.00010315299999999819, 0.00010298599999999936, 0.00010381999999999753, 0.00010279199999999739, 0.00010282, 0.00010331900000000102, 0.00010331900000000102, 0.00010363900000000259, 0.00010412500000000005, 0.00010315299999999819, 0.00010324999999999918, 0.00010416699999999876, 0.0001033200000000005, 0.000103820000000001, 0.00010366599999999879, 0.00010293000000000108]</msg>
<status status="PASS" starttime="20201112 09:54:35.323" endtime="20201112 09:54:35.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.318" endtime="20201112 09:54:35.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.332" endtime="20201112 09:54:35.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.336" endtime="20201112 09:54:35.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.334" endtime="20201112 09:54:35.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.331" endtime="20201112 09:54:35.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.957" endtime="20201112 09:54:35.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.956" endtime="20201112 09:54:35.357"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.365" endtime="20201112 09:54:35.386"></status>
</kw>
<msg timestamp="20201112 09:54:35.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.364" endtime="20201112 09:54:35.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.387" endtime="20201112 09:54:35.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.390" endtime="20201112 09:54:35.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.361" endtime="20201112 09:54:35.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.359" endtime="20201112 09:54:35.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.398" endtime="20201112 09:54:35.684"></status>
</kw>
<msg timestamp="20201112 09:54:35.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.397" endtime="20201112 09:54:35.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.688" endtime="20201112 09:54:35.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.696" endtime="20201112 09:54:35.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.394" endtime="20201112 09:54:35.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.393" endtime="20201112 09:54:35.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.703" level="INFO">${RESULT} = [{'time': 0.022736847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010572200000000254, 'source_diff': 0.00010572200000000254}, {'time': 0.022856847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:35.699" endtime="20201112 09:54:35.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:35.704" endtime="20201112 09:54:35.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.720" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.719" endtime="20201112 09:54:35.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.723" level="INFO">VALUE: [0.00010572200000000254, 0.00010633300000000012, 0.00010508300000000234, 0.00010480499999999948, 0.00010598600000000236, 0.00010517999999999986, 0.00010548599999999839, 0.00010480599999999896, 0.00010665299999999822, 0.00010580500000000048, 0.00010565199999999775, 0.00010631900000000055, 0.00010649999999999896, 0.00010668100000000083, 0.00010500000000000093, 0.00010590300000000094, 0.00010615300000000119, 0.00010647299999999929, 0.00010632000000000003, 0.00010598600000000236, 0.00010491600000000004, 0.00010666699999999779, 0.00010565300000000069, 0.00010481999999999853, 0.00010476400000000025, 0.00010619400000000043, 0.00010515300000000019, 0.000105207999999999, 0.00010483299999999862, 0.00010600000000000193, 0.00010497199999999832, 0.00010629200000000089, 0.00010666699999999779, 0.00010583299999999962, 0.00010562500000000155, 0.00010566700000000026, 0.00010566700000000026, 0.00010502800000000007, 0.00010666700000000126, 0.00010561100000000198, 0.00010498600000000136, 0.00010530499999999998, 0.00010665300000000169, 0.00010548599999999839, 0.00010584800000000213, 0.00010630600000000046, 0.00010584799999999867, 0.00010631900000000055, 0.0001057079999999995, 0.00010545799999999925]</msg>
<status status="PASS" starttime="20201112 09:54:35.721" endtime="20201112 09:54:35.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.717" endtime="20201112 09:54:35.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.726" endtime="20201112 09:54:35.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.730" endtime="20201112 09:54:35.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.728" endtime="20201112 09:54:35.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.725" endtime="20201112 09:54:35.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.357" endtime="20201112 09:54:35.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.357" endtime="20201112 09:54:35.751"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.759" endtime="20201112 09:54:35.779"></status>
</kw>
<msg timestamp="20201112 09:54:35.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.758" endtime="20201112 09:54:35.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.781" endtime="20201112 09:54:35.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.783" endtime="20201112 09:54:35.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.755" endtime="20201112 09:54:35.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.753" endtime="20201112 09:54:35.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.792" endtime="20201112 09:54:36.079"></status>
</kw>
<msg timestamp="20201112 09:54:36.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.791" endtime="20201112 09:54:36.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.083" endtime="20201112 09:54:36.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.091" endtime="20201112 09:54:36.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.788" endtime="20201112 09:54:36.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.786" endtime="20201112 09:54:36.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.098" level="INFO">${RESULT} = [{'time': 0.022406264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010823599999999767, 'source_diff': 0.00010823599999999767}, {'time': 0.022520278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:36.094" endtime="20201112 09:54:36.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.111" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:36.099" endtime="20201112 09:54:36.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.115" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.114" endtime="20201112 09:54:36.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.118" level="INFO">VALUE: [0.00010823599999999767, 0.00010691700000000151, 0.00010752699999999962, 0.00010830599999999899, 0.00010748599999999692, 0.00010717999999999839, 0.00010800000000000046, 0.00010872300000000154, 0.00010801400000000003, 0.00010783300000000162, 0.00010716700000000176, 0.0001078340000000011, 0.00010765299999999922, 0.00010797300000000079, 0.00010849999999999749, 0.00010850000000000096, 0.00010865300000000022, 0.00010848599999999792, 0.00010848600000000139, 0.00010748600000000039, 0.00010699999999999946, 0.00010749999999999996, 0.00010694500000000065, 0.00010727700000000284, 0.00010865200000000075, 0.00010715299999999872, 0.00010833299999999865, 0.00010848599999999792, 0.00010766699999999879, 0.00010812500000000058, 0.00010801400000000003, 0.00010700000000000293, 0.00010816599999999982, 0.00010730500000000198, 0.00010840299999999997, 0.00010694399999999771, 0.00010683299999999715, 0.00010784700000000119, 0.00010831999999999856, 0.00010748600000000039, 0.00010749999999999996, 0.00010765299999999922, 0.00010831900000000255, 0.00010865199999999728, 0.0001076950000000014, 0.00010795799999999828, 0.00010848600000000139, 0.00010715299999999872, 0.00010727799999999885, 0.00010779199999999892]</msg>
<status status="PASS" starttime="20201112 09:54:36.116" endtime="20201112 09:54:36.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.112" endtime="20201112 09:54:36.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.121" endtime="20201112 09:54:36.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.125" endtime="20201112 09:54:36.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.123" endtime="20201112 09:54:36.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.120" endtime="20201112 09:54:36.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.751" endtime="20201112 09:54:36.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.751" endtime="20201112 09:54:36.145"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.154" endtime="20201112 09:54:36.174"></status>
</kw>
<msg timestamp="20201112 09:54:36.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.153" endtime="20201112 09:54:36.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.176" endtime="20201112 09:54:36.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.178" endtime="20201112 09:54:36.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.150" endtime="20201112 09:54:36.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.148" endtime="20201112 09:54:36.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.187" endtime="20201112 09:54:36.473"></status>
</kw>
<msg timestamp="20201112 09:54:36.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.186" endtime="20201112 09:54:36.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.477" endtime="20201112 09:54:36.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.485" endtime="20201112 09:54:36.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.183" endtime="20201112 09:54:36.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.182" endtime="20201112 09:54:36.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.492" level="INFO">${RESULT} = [{'time': 0.022334931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011023699999999914, 'source_diff': 0.00011023699999999914}, {'time': 0.022448958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:36.488" endtime="20201112 09:54:36.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.504" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:36.492" endtime="20201112 09:54:36.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.509" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.508" endtime="20201112 09:54:36.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.512" level="INFO">VALUE: [0.00011023699999999914, 0.00010968000000000089, 0.00010933299999999965, 0.00010929100000000094, 0.00010881899999999958, 0.00010965300000000122, 0.000110209, 0.00011065300000000222, 0.00010898599999999842, 0.00010948599999999892, 0.00011015300000000172, 0.00011047200000000035, 0.00011015199999999878, 0.00011050000000000296, 0.00010963900000000165, 0.00010965299999999775, 0.00010879199999999992, 0.00010998599999999942, 0.00011069400000000146, 0.00010998699999999889, 0.00011029099999999847, 0.00010975000000000221, 0.00010937499999999836, 0.00010886100000000176, 0.00011063899999999918, 0.00011050000000000296, 0.00011065300000000222, 0.0001088340000000021, 0.00010966600000000132, 0.00010999999999999899, 0.00010930499999999704, 0.00011048599999999992, 0.00011049999999999949, 0.00010954200000000067, 0.00011032000000000056, 0.00010947199999999935, 0.00011033400000000013, 0.00010931999999999956, 0.00010897199999999885, 0.00010931900000000008, 0.00010965300000000122, 0.00010915300000000072, 0.00010965299999999775, 0.00011048599999999992, 0.00011048599999999992, 0.00010933399999999913, 0.00010934699999999922, 0.00010883299999999915, 0.00010883300000000262, 0.00011067999999999842]</msg>
<status status="PASS" starttime="20201112 09:54:36.510" endtime="20201112 09:54:36.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.505" endtime="20201112 09:54:36.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.515" endtime="20201112 09:54:36.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.519" endtime="20201112 09:54:36.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.517" endtime="20201112 09:54:36.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.513" endtime="20201112 09:54:36.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.146" endtime="20201112 09:54:36.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.146" endtime="20201112 09:54:36.539"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.548" endtime="20201112 09:54:36.567"></status>
</kw>
<msg timestamp="20201112 09:54:36.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.546" endtime="20201112 09:54:36.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.569" endtime="20201112 09:54:36.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.571" endtime="20201112 09:54:36.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.544" endtime="20201112 09:54:36.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.542" endtime="20201112 09:54:36.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.580" endtime="20201112 09:54:36.868"></status>
</kw>
<msg timestamp="20201112 09:54:36.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.579" endtime="20201112 09:54:36.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.872" endtime="20201112 09:54:36.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.880" endtime="20201112 09:54:36.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.576" endtime="20201112 09:54:36.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.574" endtime="20201112 09:54:36.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.887" level="INFO">${RESULT} = [{'time': 0.022159028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245900000000225, 'source_diff': 0.00011245900000000225}, {'time': 0.022279, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:36.884" endtime="20201112 09:54:36.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.900" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:36.888" endtime="20201112 09:54:36.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.904" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.903" endtime="20201112 09:54:36.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.907" level="INFO">VALUE: [0.00011245900000000225, 0.00011251400000000106, 0.00011265300000000075, 0.00011099999999999999, 0.00011250000000000149, 0.00011116699999999882, 0.00011250000000000149, 0.00011083300000000115, 0.00011151400000000006, 0.00011201400000000056, 0.00011119500000000143, 0.00011186100000000129, 0.00011136099999999732, 0.0001118480000000012, 0.0001112220000000011, 0.00011145800000000178, 0.00011268000000000042, 0.00011133299999999818, 0.00011255599999999977, 0.00011250000000000149, 0.00011200000000000099, 0.00011216699999999982, 0.00011116700000000229, 0.00011265300000000075, 0.00011269399999999999, 0.00011101399999999956, 0.00011133299999999818, 0.00011131899999999861, 0.00011133299999999818, 0.00011184699999999825, 0.00011133400000000113, 0.00011211100000000154, 0.00011079199999999845, 0.00011180599999999902, 0.00011197199999999838, 0.00011197200000000185, 0.00011198600000000142, 0.00011245800000000278, 0.00011116699999999882, 0.00011115299999999925, 0.0001113480000000007, 0.00011248599999999845, 0.00011255599999999977, 0.00011079099999999897, 0.00011148600000000092, 0.00011266699999999685, 0.00011144500000000168, 0.00011129200000000242, 0.00011254100000000072, 0.00011197199999999838]</msg>
<status status="PASS" starttime="20201112 09:54:36.905" endtime="20201112 09:54:36.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.901" endtime="20201112 09:54:36.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.910" endtime="20201112 09:54:36.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.914" endtime="20201112 09:54:36.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.912" endtime="20201112 09:54:36.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.909" endtime="20201112 09:54:36.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.540" endtime="20201112 09:54:36.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.540" endtime="20201112 09:54:36.934"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.943" endtime="20201112 09:54:36.964"></status>
</kw>
<msg timestamp="20201112 09:54:36.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.942" endtime="20201112 09:54:36.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.966" endtime="20201112 09:54:36.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.969" endtime="20201112 09:54:36.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.939" endtime="20201112 09:54:36.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.937" endtime="20201112 09:54:36.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.979" endtime="20201112 09:54:37.265"></status>
</kw>
<msg timestamp="20201112 09:54:37.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.977" endtime="20201112 09:54:37.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.270" endtime="20201112 09:54:37.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.278" endtime="20201112 09:54:37.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.974" endtime="20201112 09:54:37.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.972" endtime="20201112 09:54:37.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.284" level="INFO">${RESULT} = [{'time': 0.022199431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001128749999999984, 'source_diff': 0.0001128749999999984}, {'time': 0.022325458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:37.281" endtime="20201112 09:54:37.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.297" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:37.285" endtime="20201112 09:54:37.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.302" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.301" endtime="20201112 09:54:37.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.304" level="INFO">VALUE: [0.0001128749999999984, 0.00011333300000000018, 0.00011431899999999814, 0.00011431899999999814, 0.00011281900000000011, 0.00011348599999999945, 0.00011348599999999945, 0.00011451399999999959, 0.00011283399999999916, 0.00011312499999999864, 0.00011436100000000032, 0.00011366599999999838, 0.00011281900000000011, 0.00011436100000000032, 0.00011283300000000315, 0.00011351399999999859, 0.00011448600000000045, 0.00011301300000000208, 0.00011313799999999874, 0.0001127909999999975, 0.00011333300000000018, 0.00011383300000000068, 0.00011466700000000232, 0.00011348599999999945, 0.00011465299999999928, 0.00011450000000000002, 0.00011401399999999909, 0.00011348600000000292, 0.00011398599999999995, 0.00011348599999999945, 0.00011468100000000189, 0.00011333399999999966, 0.00011348599999999945, 0.00011398599999999995, 0.00011365299999999828, 0.00011433300000000118, 0.00011381899999999764, 0.00011324999999999877, 0.00011365299999999828, 0.0001128480000000022, 0.00011300000000000199, 0.00011448600000000045, 0.00011397200000000038, 0.00011450000000000002, 0.00011369399999999752, 0.00011365200000000228, 0.00011374999999999927, 0.00011463899999999971, 0.00011365300000000175, 0.00011450000000000002]</msg>
<status status="PASS" starttime="20201112 09:54:37.303" endtime="20201112 09:54:37.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.298" endtime="20201112 09:54:37.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.308" endtime="20201112 09:54:37.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.311" endtime="20201112 09:54:37.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.310" endtime="20201112 09:54:37.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.306" endtime="20201112 09:54:37.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.935" endtime="20201112 09:54:37.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.935" endtime="20201112 09:54:37.332"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.341" endtime="20201112 09:54:37.361"></status>
</kw>
<msg timestamp="20201112 09:54:37.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.339" endtime="20201112 09:54:37.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.362" endtime="20201112 09:54:37.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.365" endtime="20201112 09:54:37.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.336" endtime="20201112 09:54:37.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.334" endtime="20201112 09:54:37.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.374" endtime="20201112 09:54:37.661"></status>
</kw>
<msg timestamp="20201112 09:54:37.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.372" endtime="20201112 09:54:37.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.665" endtime="20201112 09:54:37.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.673" endtime="20201112 09:54:37.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.370" endtime="20201112 09:54:37.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.368" endtime="20201112 09:54:37.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.679" level="INFO">${RESULT} = [{'time': 0.022251611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001160689999999999, 'source_diff': 0.0001160689999999999}, {'time': 0.022377667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:37.676" endtime="20201112 09:54:37.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.692" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:37.680" endtime="20201112 09:54:37.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.697" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.696" endtime="20201112 09:54:37.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.699" level="INFO">VALUE: [0.0001160689999999999, 0.00011484800000000073, 0.00011631999999999962, 0.00011530599999999905, 0.00011563800000000124, 0.00011633299999999971, 0.00011566700000000332, 0.00011566599999999691, 0.00011515299999999978, 0.00011481899999999864, 0.00011598599999999848, 0.00011480600000000202, 0.00011633399999999919, 0.00011615300000000078, 0.00011630500000000057, 0.00011601399999999762, 0.00011565300000000028, 0.00011531899999999914, 0.00011633299999999971, 0.00011647199999999941, 0.00011565300000000028, 0.00011515299999999978, 0.00011550000000000102, 0.00011587499999999792, 0.00011665200000000181, 0.00011515299999999978, 0.00011501400000000009, 0.00011497200000000138, 0.00011647199999999941, 0.00011498600000000095, 0.00011647299999999888, 0.00011627700000000143, 0.00011650000000000202, 0.00011583299999999921, 0.00011548599999999798, 0.00011666700000000085, 0.00011666699999999738, 0.00011483400000000116, 0.00011500000000000052, 0.00011629199999999701, 0.00011508300000000193, 0.00011583300000000268, 0.00011581899999999964, 0.00011584699999999878, 0.00011650000000000202, 0.00011497300000000085, 0.00011572200000000213, 0.00011658399999999944, 0.00011566599999999691, 0.00011599999999999805]</msg>
<status status="PASS" starttime="20201112 09:54:37.698" endtime="20201112 09:54:37.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.693" endtime="20201112 09:54:37.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.703" endtime="20201112 09:54:37.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.706" endtime="20201112 09:54:37.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.705" endtime="20201112 09:54:37.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.701" endtime="20201112 09:54:37.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.333" endtime="20201112 09:54:37.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.332" endtime="20201112 09:54:37.727"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.736" endtime="20201112 09:54:37.756"></status>
</kw>
<msg timestamp="20201112 09:54:37.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.734" endtime="20201112 09:54:37.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.757" endtime="20201112 09:54:37.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.760" endtime="20201112 09:54:37.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.732" endtime="20201112 09:54:37.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.730" endtime="20201112 09:54:37.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.769" endtime="20201112 09:54:38.055"></status>
</kw>
<msg timestamp="20201112 09:54:38.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:37.767" endtime="20201112 09:54:38.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:38.060" endtime="20201112 09:54:38.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.068" endtime="20201112 09:54:38.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.765" endtime="20201112 09:54:38.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.763" endtime="20201112 09:54:38.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.074" level="INFO">${RESULT} = [{'time': 0.022197, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011773600000000023, 'source_diff': 0.00011773600000000023}, {'time': 0.022329014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:38.071" endtime="20201112 09:54:38.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.087" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:38.075" endtime="20201112 09:54:38.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.092" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.091" endtime="20201112 09:54:38.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.094" level="INFO">VALUE: [0.00011773600000000023, 0.00011748599999999998, 0.00011782000000000112, 0.00011798600000000048, 0.00011816599999999941, 0.00011779099999999904, 0.00011798600000000048, 0.00011715299999999831, 0.00011866699999999938, 0.00011751399999999912, 0.00011784800000000026, 0.00011834700000000128, 0.00011749999999999955, 0.00011817999999999898, 0.00011683300000000021, 0.00011766699999999838, 0.00011833400000000119, 0.00011831900000000214, 0.00011748599999999998, 0.00011695899999999981, 0.00011733400000000019, 0.00011815299999999931, 0.00011681899999999718, 0.00011833300000000171, 0.00011766699999999838, 0.00011827800000000291, 0.00011765299999999881, 0.00011716700000000135, 0.00011784800000000026, 0.00011716700000000135, 0.0001182630000000004, 0.00011833299999999825, 0.00011783300000000121, 0.00011733299999999725, 0.00011766699999999838, 0.00011686199999999883, 0.00011798600000000048, 0.00011865299999999981, 0.00011732000000000062, 0.00011681900000000064, 0.00011784700000000078, 0.00011683299999999675, 0.00011818099999999845, 0.00011681900000000064, 0.00011854099999999979, 0.00011765299999999881, 0.00011784700000000078, 0.00011850000000000055, 0.00011783300000000121, 0.00011817999999999898]</msg>
<status status="PASS" starttime="20201112 09:54:38.093" endtime="20201112 09:54:38.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.088" endtime="20201112 09:54:38.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.098" endtime="20201112 09:54:38.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.101" endtime="20201112 09:54:38.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.100" endtime="20201112 09:54:38.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.096" endtime="20201112 09:54:38.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.728" endtime="20201112 09:54:38.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.727" endtime="20201112 09:54:38.122"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.131" endtime="20201112 09:54:38.151"></status>
</kw>
<msg timestamp="20201112 09:54:38.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.129" endtime="20201112 09:54:38.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.152" endtime="20201112 09:54:38.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.155" endtime="20201112 09:54:38.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.126" endtime="20201112 09:54:38.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.124" endtime="20201112 09:54:38.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.164" endtime="20201112 09:54:38.451"></status>
</kw>
<msg timestamp="20201112 09:54:38.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.162" endtime="20201112 09:54:38.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.455" endtime="20201112 09:54:38.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.463" endtime="20201112 09:54:38.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.160" endtime="20201112 09:54:38.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.158" endtime="20201112 09:54:38.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.470" level="INFO">${RESULT} = [{'time': 0.022150458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011891600000000016, 'source_diff': 0.00011891600000000016}, {'time': 0.022284542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:38.466" endtime="20201112 09:54:38.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.483" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:38.471" endtime="20201112 09:54:38.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.487" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.486" endtime="20201112 09:54:38.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.489" level="INFO">VALUE: [0.00011891600000000016, 0.00011970900000000256, 0.00012065299999999834, 0.00011948599999999851, 0.00011951400000000112, 0.00011898600000000148, 0.00012033399999999972, 0.00012033300000000025, 0.00011999999999999858, 0.00011966600000000091, 0.00012063900000000224, 0.00012051400000000212, 0.00011900000000000105, 0.00011931999999999915, 0.00011999999999999858, 0.00011890300000000006, 0.00012049999999999908, 0.00012031900000000068, 0.00011998599999999901, 0.00011965300000000081, 0.00011916699999999988, 0.0001188890000000005, 0.00011983399999999922, 0.00011944499999999927, 0.00011916600000000041, 0.00012068000000000148, 0.00012001399999999815, 0.00012063899999999877, 0.00011998599999999901, 0.00012044500000000027, 0.00011980600000000008, 0.00011980600000000008, 0.00011930499999999664, 0.00011951399999999765, 0.00011933300000000271, 0.00011984699999999932, 0.00011901400000000062, 0.00012004200000000076, 0.00011884799999999779, 0.00011998700000000195, 0.0001201249999999987, 0.00011915200000000084, 0.00011948600000000198, 0.00011900000000000105, 0.00012018100000000045, 0.00012029200000000101, 0.00012016700000000088, 0.00012016700000000088, 0.00011916699999999988, 0.00011968000000000048]</msg>
<status status="PASS" starttime="20201112 09:54:38.488" endtime="20201112 09:54:38.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.483" endtime="20201112 09:54:38.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.493" endtime="20201112 09:54:38.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.496" endtime="20201112 09:54:38.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.495" endtime="20201112 09:54:38.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.491" endtime="20201112 09:54:38.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.123" endtime="20201112 09:54:38.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.122" endtime="20201112 09:54:38.517"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.526" endtime="20201112 09:54:38.546"></status>
</kw>
<msg timestamp="20201112 09:54:38.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.525" endtime="20201112 09:54:38.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.548" endtime="20201112 09:54:38.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.550" endtime="20201112 09:54:38.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.522" endtime="20201112 09:54:38.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.520" endtime="20201112 09:54:38.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.559" endtime="20201112 09:54:38.846"></status>
</kw>
<msg timestamp="20201112 09:54:38.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022719736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.558" endtime="20201112 09:54:38.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022719736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.850" endtime="20201112 09:54:38.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.858" endtime="20201112 09:54:38.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.555" endtime="20201112 09:54:38.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.553" endtime="20201112 09:54:38.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.865" level="INFO">${RESULT} = [{'time': 0.022719736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012072200000000019, 'source_diff': 0.00012072200000000019}, {'time': 0.022853764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:38.862" endtime="20201112 09:54:38.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.878" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:38.866" endtime="20201112 09:54:38.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.883" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.882" endtime="20201112 09:54:38.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.885" level="INFO">VALUE: [0.00012072200000000019, 0.00012265300000000035, 0.00012102700000000272, 0.00012198600000000101, 0.00012229199999999954, 0.00012097299999999991, 0.00012083300000000075, 0.00012250000000000108, 0.0001227229999999982, 0.00012208299999999853, 0.00012165299999999934, 0.00012131999999999768, 0.00012087500000000292, 0.0001209310000000012, 0.0001218189999999987, 0.0001218050000000026, 0.00012083300000000075, 0.0001213189999999982, 0.00012233300000000225, 0.00012238900000000053, 0.00012133399999999725, 0.00012116699999999841, 0.00012250000000000108, 0.00012098600000000001, 0.00012165299999999934, 0.00012263900000000078, 0.0001213189999999982, 0.00012115300000000231, 0.00012266699999999991, 0.00012237499999999749, 0.00012083300000000075, 0.00012183299999999828, 0.00012117999999999851, 0.00012169499999999805, 0.0001208189999999977, 0.00012265300000000035, 0.00012200000000000058, 0.00012117999999999851, 0.00012165300000000281, 0.00012247200000000194, 0.00012266600000000044, 0.00012165299999999934, 0.00012215299999999985, 0.00012268099999999948, 0.00012116699999999841, 0.00012218099999999898, 0.00012149999999999661, 0.0001226519999999974, 0.00012147200000000094, 0.00012098600000000001]</msg>
<status status="PASS" starttime="20201112 09:54:38.884" endtime="20201112 09:54:38.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.879" endtime="20201112 09:54:38.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.889" endtime="20201112 09:54:38.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.892" endtime="20201112 09:54:38.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.891" endtime="20201112 09:54:38.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.887" endtime="20201112 09:54:38.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.518" endtime="20201112 09:54:38.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.518" endtime="20201112 09:54:38.913"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.922" endtime="20201112 09:54:38.943"></status>
</kw>
<msg timestamp="20201112 09:54:38.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.920" endtime="20201112 09:54:38.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.944" endtime="20201112 09:54:38.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.946" endtime="20201112 09:54:38.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.917" endtime="20201112 09:54:38.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.915" endtime="20201112 09:54:38.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.955" endtime="20201112 09:54:39.242"></status>
</kw>
<msg timestamp="20201112 09:54:39.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.954" endtime="20201112 09:54:39.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.246" endtime="20201112 09:54:39.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.254" endtime="20201112 09:54:39.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.951" endtime="20201112 09:54:39.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.950" endtime="20201112 09:54:39.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.261" level="INFO">${RESULT} = [{'time': 0.022534264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001229169999999967, 'source_diff': 0.0001229169999999967}, {'time': 0.022670292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.258" endtime="20201112 09:54:39.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.274" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:39.262" endtime="20201112 09:54:39.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.278" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.277" endtime="20201112 09:54:39.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.281" level="INFO">VALUE: [0.0001229169999999967, 0.00012368100000000048, 0.00012366699999999745, 0.00012298700000000148, 0.00012397199999999997, 0.0001233190000000002, 0.00012384699999999985, 0.0001228189999999997, 0.00012447200000000047, 0.00012418100000000099, 0.00012345899999999937, 0.00012447299999999994, 0.00012398599999999954, 0.0001229999999999981, 0.00012431899999999774, 0.00012448600000000004, 0.0001243060000000011, 0.00012298599999999854, 0.00012416700000000142, 0.0001239999999999991, 0.00012466599999999897, 0.0001236519999999984, 0.00012451399999999918, 0.00012365300000000135, 0.0001231389999999978, 0.0001228059999999996, 0.0001239999999999991, 0.0001234999999999986, 0.00012384699999999985, 0.00012384699999999985, 0.00012316700000000042, 0.00012383300000000028, 0.00012461100000000017, 0.00012382000000000018, 0.00012281999999999918, 0.00012334699999999935, 0.0001237909999999981, 0.00012366600000000144, 0.00012334700000000282, 0.00012413900000000228, 0.0001228189999999997, 0.00012365300000000135, 0.00012316700000000042, 0.00012297300000000191, 0.00012315300000000085, 0.00012401400000000215, 0.00012283299999999928, 0.0001238190000000007, 0.00012366700000000092, 0.00012429200000000154]</msg>
<status status="PASS" starttime="20201112 09:54:39.280" endtime="20201112 09:54:39.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.275" endtime="20201112 09:54:39.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.284" endtime="20201112 09:54:39.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.288" endtime="20201112 09:54:39.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.286" endtime="20201112 09:54:39.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.283" endtime="20201112 09:54:39.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.914" endtime="20201112 09:54:39.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.913" endtime="20201112 09:54:39.309"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.317" endtime="20201112 09:54:39.338"></status>
</kw>
<msg timestamp="20201112 09:54:39.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.316" endtime="20201112 09:54:39.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.340" endtime="20201112 09:54:39.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.342" endtime="20201112 09:54:39.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.313" endtime="20201112 09:54:39.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.311" endtime="20201112 09:54:39.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.351" endtime="20201112 09:54:39.638"></status>
</kw>
<msg timestamp="20201112 09:54:39.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.350" endtime="20201112 09:54:39.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.642" endtime="20201112 09:54:39.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.650" endtime="20201112 09:54:39.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.347" endtime="20201112 09:54:39.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.345" endtime="20201112 09:54:39.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.656" level="INFO">${RESULT} = [{'time': 0.022312208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012658299999999956, 'source_diff': 0.00012658299999999956}, {'time': 0.022446236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:39.653" endtime="20201112 09:54:39.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.669" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:39.657" endtime="20201112 09:54:39.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.674" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.673" endtime="20201112 09:54:39.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.676" level="INFO">VALUE: [0.00012658299999999956, 0.00012516700000000242, 0.0001260000000000011, 0.00012566699999999945, 0.00012615300000000038, 0.00012516699999999895, 0.00012498600000000054, 0.00012502799999999925, 0.0001266520000000014, 0.00012483300000000128, 0.00012649999999999814, 0.00012483300000000128, 0.00012630599999999964, 0.00012565299999999988, 0.00012483400000000075, 0.00012567999999999954, 0.00012570799999999868, 0.00012668000000000054, 0.0001255000000000006, 0.00012615300000000038, 0.00012634699999999888, 0.00012633399999999878, 0.00012648599999999857, 0.0001258329999999988, 0.0001259719999999985, 0.00012566599999999997, 0.00012619500000000256, 0.00012649999999999814, 0.0001265000000000016, 0.00012598599999999807, 0.00012633400000000225, 0.00012530599999999864, 0.00012630500000000017, 0.00012604199999999982, 0.00012598599999999807, 0.00012659699999999913, 0.00012630599999999964, 0.00012583400000000175, 0.00012598600000000154, 0.00012548700000000051, 0.00012633300000000278, 0.00012629099999999713, 0.0001255000000000006, 0.00012598600000000154, 0.00012516699999999895, 0.00012548599999999757, 0.00012515299999999938, 0.00012648700000000151, 0.00012547200000000147, 0.00012534699999999788]</msg>
<status status="PASS" starttime="20201112 09:54:39.675" endtime="20201112 09:54:39.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.670" endtime="20201112 09:54:39.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.680" endtime="20201112 09:54:39.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.683" endtime="20201112 09:54:39.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.682" endtime="20201112 09:54:39.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.678" endtime="20201112 09:54:39.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.310" endtime="20201112 09:54:39.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.309" endtime="20201112 09:54:39.704"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.713" endtime="20201112 09:54:39.734"></status>
</kw>
<msg timestamp="20201112 09:54:39.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.711" endtime="20201112 09:54:39.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.736" endtime="20201112 09:54:39.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.738" endtime="20201112 09:54:39.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.709" endtime="20201112 09:54:39.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.707" endtime="20201112 09:54:39.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.747" endtime="20201112 09:54:40.035"></status>
</kw>
<msg timestamp="20201112 09:54:40.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022410597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.746" endtime="20201112 09:54:40.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022410597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.039" endtime="20201112 09:54:40.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.047" endtime="20201112 09:54:40.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.743" endtime="20201112 09:54:40.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.742" endtime="20201112 09:54:40.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.053" level="INFO">${RESULT} = [{'time': 0.022539167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000128569999999998, 'source_diff': 0.000128569999999998}, {'time': 0.022677208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:40.050" endtime="20201112 09:54:40.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.066" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:40.054" endtime="20201112 09:54:40.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.071" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.070" endtime="20201112 09:54:40.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.073" level="INFO">VALUE: [0.000128569999999998, 0.00012734699999999988, 0.00012718000000000104, 0.00012818100000000152, 0.000127569999999997, 0.00012731900000000074, 0.0001286390000000033, 0.00012863899999999984, 0.00012766699999999798, 0.000127472, 0.00012834700000000088, 0.000128472000000001, 0.0001286529999999994, 0.000127472, 0.00012816700000000195, 0.00012798600000000007, 0.0001283330000000013, 0.00012748599999999957, 0.00012786099999999995, 0.00012829099999999913, 0.00012781899999999777, 0.00012848600000000057, 0.00012815300000000238, 0.0001270000000000021, 0.00012749999999999914, 0.00012798600000000007, 0.00012781900000000124, 0.00012781900000000124, 0.00012730500000000117, 0.000127472, 0.00012734799999999935, 0.00012718100000000052, 0.00012684699999999938, 0.00012749999999999914, 0.00012730500000000117, 0.00012816700000000195, 0.0001277499999999994, 0.00012684699999999938, 0.00012850000000000014, 0.00012766699999999798, 0.0001274300000000013, 0.00012781899999999777, 0.00012716699999999748, 0.00012831900000000174, 0.00012716700000000095, 0.00012749999999999914, 0.000128472000000001, 0.00012813899999999934, 0.00012679200000000057, 0.00012848600000000057]</msg>
<status status="PASS" starttime="20201112 09:54:40.072" endtime="20201112 09:54:40.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.067" endtime="20201112 09:54:40.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.077" endtime="20201112 09:54:40.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.080" endtime="20201112 09:54:40.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.079" endtime="20201112 09:54:40.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.075" endtime="20201112 09:54:40.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.705" endtime="20201112 09:54:40.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.705" endtime="20201112 09:54:40.101"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.110" endtime="20201112 09:54:40.131"></status>
</kw>
<msg timestamp="20201112 09:54:40.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.108" endtime="20201112 09:54:40.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.133" endtime="20201112 09:54:40.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.135" endtime="20201112 09:54:40.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.106" endtime="20201112 09:54:40.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.104" endtime="20201112 09:54:40.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.144" endtime="20201112 09:54:40.430"></status>
</kw>
<msg timestamp="20201112 09:54:40.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.143" endtime="20201112 09:54:40.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.434" endtime="20201112 09:54:40.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.442" endtime="20201112 09:54:40.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.140" endtime="20201112 09:54:40.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.138" endtime="20201112 09:54:40.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.448" level="INFO">${RESULT} = [{'time': 0.022558028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013041700000000073, 'source_diff': 0.00013041700000000073}, {'time': 0.022696042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:40.445" endtime="20201112 09:54:40.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.461" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:40.449" endtime="20201112 09:54:40.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.466" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.465" endtime="20201112 09:54:40.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.468" level="INFO">VALUE: [0.00013041700000000073, 0.00013041700000000073, 0.00012968000000000007, 0.00013031900000000027, 0.0001296530000000004, 0.00013065299999999794, 0.00012997199999999903, 0.00013016700000000048, 0.00012968099999999955, 0.0001303339999999993, 0.00012880600000000214, 0.00013065199999999846, 0.00013018000000000057, 0.0001296530000000004, 0.00013033299999999984, 0.00012884700000000138, 0.0001293339999999983, 0.00012950000000000114, 0.00012881900000000224, 0.00012900000000000064, 0.00012979099999999716, 0.00013066700000000098, 0.00012933299999999884, 0.0001296530000000004, 0.0001296530000000004, 0.0001288200000000017, 0.00012981999999999924, 0.0001305140000000017, 0.00012933299999999884, 0.00013055600000000042, 0.00012900000000000064, 0.00012916700000000295, 0.00012963900000000084, 0.00013049999999999867, 0.00013036100000000245, 0.0001296660000000005, 0.0001289859999999976, 0.00012926400000000046, 0.00012966699999999998, 0.0001299859999999986, 0.00013013900000000134, 0.00013036100000000245, 0.0001294859999999981, 0.00012898600000000107, 0.00013031900000000027, 0.00012931899999999927, 0.00012950000000000114, 0.00012950000000000114, 0.0001290140000000002, 0.00013030600000000017]</msg>
<status status="PASS" starttime="20201112 09:54:40.467" endtime="20201112 09:54:40.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.462" endtime="20201112 09:54:40.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.475" endtime="20201112 09:54:40.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.479" endtime="20201112 09:54:40.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.477" endtime="20201112 09:54:40.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.474" endtime="20201112 09:54:40.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.102" endtime="20201112 09:54:40.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.102" endtime="20201112 09:54:40.500"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.508" endtime="20201112 09:54:40.530"></status>
</kw>
<msg timestamp="20201112 09:54:40.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.507" endtime="20201112 09:54:40.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.532" endtime="20201112 09:54:40.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.534" endtime="20201112 09:54:40.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.504" endtime="20201112 09:54:40.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.502" endtime="20201112 09:54:40.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.543" endtime="20201112 09:54:40.830"></status>
</kw>
<msg timestamp="20201112 09:54:40.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.541" endtime="20201112 09:54:40.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.834" endtime="20201112 09:54:40.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.842" endtime="20201112 09:54:40.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.539" endtime="20201112 09:54:40.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.537" endtime="20201112 09:54:40.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.849" level="INFO">${RESULT} = [{'time': 0.022337444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013223600000000085, 'source_diff': 0.00013223600000000085}, {'time': 0.022481444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:40.845" endtime="20201112 09:54:40.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.862" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:40.850" endtime="20201112 09:54:40.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.866" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.865" endtime="20201112 09:54:40.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.869" level="INFO">VALUE: [0.00013223600000000085, 0.0001323189999999988, 0.00013149999999999967, 0.00013086099999999948, 0.00013149999999999967, 0.00013118100000000105, 0.0001311530000000019, 0.0001316669999999985, 0.00013115299999999844, 0.00013216599999999953, 0.00013149999999999967, 0.00013133300000000084, 0.00013231900000000227, 0.0001324860000000011, 0.0001309859999999996, 0.0001308469999999999, 0.00013216599999999953, 0.00013233300000000184, 0.0001316530000000024, 0.00013263900000000037, 0.00013231999999999827, 0.00013129199999999813, 0.00013084799999999938, 0.00013194399999999842, 0.0001309859999999996, 0.00013172300000000026, 0.00013201399999999974, 0.000131166999999998, 0.00013151399999999924, 0.0001318340000000008, 0.00013184800000000038, 0.00013182000000000124, 0.0001312769999999991, 0.00013186100000000048, 0.00013133299999999737, 0.00013165299999999894, 0.00013080600000000067, 0.0001312080000000007, 0.00013151299999999977, 0.00013216599999999953, 0.00013080499999999773, 0.00013230499999999923, 0.0001322090000000012, 0.0001316669999999985, 0.00013149999999999967, 0.0001308339999999998, 0.000131473, 0.00013245800000000196, 0.00013229099999999966, 0.00013225000000000042]</msg>
<status status="PASS" starttime="20201112 09:54:40.867" endtime="20201112 09:54:40.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.862" endtime="20201112 09:54:40.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.872" endtime="20201112 09:54:40.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.876" endtime="20201112 09:54:40.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.874" endtime="20201112 09:54:40.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.871" endtime="20201112 09:54:40.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.501" endtime="20201112 09:54:40.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.500" endtime="20201112 09:54:40.896"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.905" endtime="20201112 09:54:40.926"></status>
</kw>
<msg timestamp="20201112 09:54:40.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.903" endtime="20201112 09:54:40.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.927" endtime="20201112 09:54:40.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.930" endtime="20201112 09:54:40.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.901" endtime="20201112 09:54:40.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.899" endtime="20201112 09:54:40.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.939" endtime="20201112 09:54:41.225"></status>
</kw>
<msg timestamp="20201112 09:54:41.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.937" endtime="20201112 09:54:41.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.229" endtime="20201112 09:54:41.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.237" endtime="20201112 09:54:41.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.935" endtime="20201112 09:54:41.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.933" endtime="20201112 09:54:41.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.244" level="INFO">${RESULT} = [{'time': 0.022333819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013376300000000202, 'source_diff': 0.00013376300000000202}, {'time': 0.022481833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:41.241" endtime="20201112 09:54:41.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.257" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:41.245" endtime="20201112 09:54:41.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.261" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.260" endtime="20201112 09:54:41.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.264" level="INFO">VALUE: [0.00013376300000000202, 0.00013401399999999827, 0.00013337499999999808, 0.0001338190000000003, 0.00013315299999999697, 0.00013388899999999815, 0.0001340549999999975, 0.00013383399999999934, 0.0001334860000000021, 0.00013433300000000037, 0.00013338900000000112, 0.00013363900000000137, 0.0001346809999999976, 0.00013450000000000267, 0.00013459799999999966, 0.00013282000000000224, 0.0001344999999999992, 0.00013365200000000146, 0.00013415299999999797, 0.000133167, 0.00013454200000000138, 0.00013365300000000094, 0.00013319399999999967, 0.00013281999999999877, 0.00013441599999999831, 0.00013345800000000296, 0.000133167, 0.0001346670000000015, 0.00013365299999999747, 0.00013383399999999934, 0.00013433399999999984, 0.00013297199999999856, 0.00013466599999999856, 0.00013443000000000135, 0.0001343609999999995, 0.0001333059999999997, 0.000133167, 0.0001344999999999992, 0.0001329449999999989, 0.0001343190000000008, 0.0001333189999999998, 0.00013350000000000167, 0.00013368100000000008, 0.0001344580000000005, 0.00013448599999999963, 0.0001334869999999981, 0.00013345900000000244, 0.00013466599999999856, 0.00013431899999999733, 0.00013448599999999963]</msg>
<status status="PASS" starttime="20201112 09:54:41.262" endtime="20201112 09:54:41.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.258" endtime="20201112 09:54:41.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.268" endtime="20201112 09:54:41.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.271" endtime="20201112 09:54:41.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.269" endtime="20201112 09:54:41.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.266" endtime="20201112 09:54:41.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.897" endtime="20201112 09:54:41.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.897" endtime="20201112 09:54:41.292"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.300" endtime="20201112 09:54:41.322"></status>
</kw>
<msg timestamp="20201112 09:54:41.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.299" endtime="20201112 09:54:41.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.324" endtime="20201112 09:54:41.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.326" endtime="20201112 09:54:41.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.296" endtime="20201112 09:54:41.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.294" endtime="20201112 09:54:41.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.335" endtime="20201112 09:54:41.623"></status>
</kw>
<msg timestamp="20201112 09:54:41.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.333" endtime="20201112 09:54:41.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.627" endtime="20201112 09:54:41.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.635" endtime="20201112 09:54:41.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.331" endtime="20201112 09:54:41.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.329" endtime="20201112 09:54:41.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.642" level="INFO">${RESULT} = [{'time': 0.022260444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013473599999999988, 'source_diff': 0.00013473599999999988}, {'time': 0.022410458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:41.639" endtime="20201112 09:54:41.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.655" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:41.643" endtime="20201112 09:54:41.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.660" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.658" endtime="20201112 09:54:41.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.662" level="INFO">VALUE: [0.00013473599999999988, 0.00013530500000000223, 0.000135861000000001, 0.00013601400000000027, 0.00013537500000000008, 0.00013582000000000177, 0.00013630599999999923, 0.00013566599999999956, 0.00013488899999999915, 0.0001350970000000007, 0.0001356389999999999, 0.0001348060000000012, 0.0001355000000000002, 0.00013533400000000084, 0.00013477699999999912, 0.00013631899999999933, 0.00013548599999999716, 0.0001349999999999997, 0.0001360000000000007, 0.0001348199999999973, 0.0001354719999999976, 0.00013498600000000013, 0.00013562500000000033, 0.00013634699999999847, 0.00013666600000000056, 0.0001349999999999997, 0.00013565299999999947, 0.00013497200000000056, 0.00013649999999999773, 0.00013549999999999673, 0.0001358190000000023, 0.0001366390000000009, 0.0001360000000000007, 0.00013666700000000004, 0.00013515299999999897, 0.00013598600000000113, 0.0001366390000000009, 0.00013656999999999905, 0.00013666600000000056, 0.0001348190000000013, 0.00013515300000000244, 0.00013540199999999974, 0.00013540299999999922, 0.00013598600000000113, 0.00013567999999999913, 0.00013566600000000303, 0.00013597200000000156, 0.00013551399999999977, 0.0001358329999999984, 0.00013620900000000172]</msg>
<status status="PASS" starttime="20201112 09:54:41.661" endtime="20201112 09:54:41.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.656" endtime="20201112 09:54:41.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.665" endtime="20201112 09:54:41.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.669" endtime="20201112 09:54:41.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.668" endtime="20201112 09:54:41.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.664" endtime="20201112 09:54:41.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.293" endtime="20201112 09:54:41.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.292" endtime="20201112 09:54:41.690"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.698" endtime="20201112 09:54:41.720"></status>
</kw>
<msg timestamp="20201112 09:54:41.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.697" endtime="20201112 09:54:41.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.721" endtime="20201112 09:54:41.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.724" endtime="20201112 09:54:41.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.694" endtime="20201112 09:54:41.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.692" endtime="20201112 09:54:41.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.733" endtime="20201112 09:54:42.019"></status>
</kw>
<msg timestamp="20201112 09:54:42.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.731" endtime="20201112 09:54:42.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.024" endtime="20201112 09:54:42.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.032" endtime="20201112 09:54:42.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.729" endtime="20201112 09:54:42.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.727" endtime="20201112 09:54:42.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.038" level="INFO">${RESULT} = [{'time': 0.022125611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013774999999999898, 'source_diff': 0.00013774999999999898}, {'time': 0.022275639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:42.035" endtime="20201112 09:54:42.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.052" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:42.039" endtime="20201112 09:54:42.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.056" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.055" endtime="20201112 09:54:42.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.059" level="INFO">VALUE: [0.00013774999999999898, 0.0001383330000000009, 0.00013848600000000016, 0.0001385269999999994, 0.00013749999999999873, 0.00013792999999999792, 0.0001381520000000025, 0.00013786099999999954, 0.0001371109999999988, 0.0001371810000000001, 0.00013762499999999886, 0.00013798599999999966, 0.0001383330000000009, 0.0001375000000000022, 0.00013715300000000097, 0.0001370000000000017, 0.00013694499999999943, 0.0001381529999999985, 0.00013749999999999873, 0.000138652999999999, 0.00013766600000000156, 0.00013765199999999853, 0.00013781899999999736, 0.00013766700000000104, 0.00013748599999999916, 0.00013815300000000197, 0.0001375000000000022, 0.0001386659999999991, 0.0001368329999999994, 0.00013731900000000033, 0.00013859700000000072, 0.00013819500000000068, 0.000138652999999999, 0.0001371390000000014, 0.00013865199999999953, 0.00013716600000000106, 0.00013681899999999983, 0.00013731900000000033, 0.0001381390000000024, 0.00013715300000000097, 0.00013683399999999887, 0.00013799999999999923, 0.00013766600000000156, 0.0001383049999999983, 0.00013776399999999855, 0.00013838899999999918, 0.00013790199999999878, 0.00013733399999999937, 0.0001380979999999997, 0.0001371659999999976]</msg>
<status status="PASS" starttime="20201112 09:54:42.058" endtime="20201112 09:54:42.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.053" endtime="20201112 09:54:42.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.063" endtime="20201112 09:54:42.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.066" endtime="20201112 09:54:42.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.064" endtime="20201112 09:54:42.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.061" endtime="20201112 09:54:42.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.691" endtime="20201112 09:54:42.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.690" endtime="20201112 09:54:42.087"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.095" endtime="20201112 09:54:42.117"></status>
</kw>
<msg timestamp="20201112 09:54:42.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.094" endtime="20201112 09:54:42.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.118" endtime="20201112 09:54:42.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.121" endtime="20201112 09:54:42.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.091" endtime="20201112 09:54:42.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.089" endtime="20201112 09:54:42.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.130" endtime="20201112 09:54:42.415"></status>
</kw>
<msg timestamp="20201112 09:54:42.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.128" endtime="20201112 09:54:42.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.420" endtime="20201112 09:54:42.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.428" endtime="20201112 09:54:42.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.126" endtime="20201112 09:54:42.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.124" endtime="20201112 09:54:42.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.434" level="INFO">${RESULT} = [{'time': 0.022654375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013870800000000127, 'source_diff': 0.00013870800000000127}, {'time': 0.022798389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:42.431" endtime="20201112 09:54:42.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.447" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:42.435" endtime="20201112 09:54:42.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.452" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.451" endtime="20201112 09:54:42.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.454" level="INFO">VALUE: [0.00013870800000000127, 0.00013916699999999907, 0.0001399309999999994, 0.0001388339999999974, 0.00013983299999999893, 0.00014031899999999986, 0.00013983299999999893, 0.0001390139999999998, 0.0001401530000000005, 0.00013963900000000043, 0.00013934799999999747, 0.00013951300000000083, 0.00013948600000000116, 0.00013898600000000066, 0.00013926400000000005, 0.0001398469999999985, 0.00013933299999999843, 0.00013918099999999864, 0.00013984800000000144, 0.0001388330000000014, 0.00014034700000000247, 0.00013983299999999893, 0.00013981899999999936, 0.0001395140000000003, 0.00014016700000000007, 0.00013963899999999696, 0.00014048699999999817, 0.0001396660000000001, 0.0001395140000000003, 0.0001388330000000014, 0.00014065299999999753, 0.0001403339999999989, 0.0001391529999999995, 0.00013986100000000154, 0.00013965199999999706, 0.00013931900000000233, 0.00014030499999999682, 0.0001394859999999977, 0.00014049999999999827, 0.00013933400000000137, 0.00014000000000000123, 0.00014049999999999827, 0.00014050000000000173, 0.0001388750000000001, 0.0001401530000000005, 0.00013933299999999843, 0.00014015299999999703, 0.0001389859999999972, 0.0001392079999999983, 0.00014050000000000173]</msg>
<status status="PASS" starttime="20201112 09:54:42.453" endtime="20201112 09:54:42.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.448" endtime="20201112 09:54:42.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.458" endtime="20201112 09:54:42.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.461" endtime="20201112 09:54:42.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.460" endtime="20201112 09:54:42.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.456" endtime="20201112 09:54:42.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.088" endtime="20201112 09:54:42.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.087" endtime="20201112 09:54:42.482"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.490" endtime="20201112 09:54:42.512"></status>
</kw>
<msg timestamp="20201112 09:54:42.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.489" endtime="20201112 09:54:42.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.513" endtime="20201112 09:54:42.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.516" endtime="20201112 09:54:42.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.486" endtime="20201112 09:54:42.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.484" endtime="20201112 09:54:42.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.525" endtime="20201112 09:54:42.812"></status>
</kw>
<msg timestamp="20201112 09:54:42.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.523" endtime="20201112 09:54:42.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.816" endtime="20201112 09:54:42.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.825" endtime="20201112 09:54:42.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.521" endtime="20201112 09:54:42.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.519" endtime="20201112 09:54:42.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.831" level="INFO">${RESULT} = [{'time': 0.022264083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014191599999999888, 'source_diff': 0.00014191599999999888}, {'time': 0.022412125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:42.828" endtime="20201112 09:54:42.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.844" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:42.832" endtime="20201112 09:54:42.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.849" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.848" endtime="20201112 09:54:42.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.851" level="INFO">VALUE: [0.00014191599999999888, 0.00014084700000000297, 0.0001413059999999973, 0.0001413339999999999, 0.00014084800000000244, 0.0001409859999999992, 0.00014250000000000027, 0.00014188900000000268, 0.00014166700000000157, 0.00014147200000000013, 0.0001414859999999997, 0.00014118100000000064, 0.0001408339999999994, 0.00014219400000000174, 0.00014222200000000088, 0.0001412920000000012, 0.00014130499999999782, 0.0001414310000000009, 0.00014122199999999988, 0.0001427219999999979, 0.00014094499999999996, 0.00014115199999999856, 0.0001416799999999982, 0.00014166700000000157, 0.00014265299999999953, 0.00014080600000000026, 0.00014116700000000107, 0.0001421249999999999, 0.00014165200000000253, 0.00014092999999999745, 0.00014116700000000107, 0.00014208300000000118, 0.00014130600000000076, 0.00014115299999999803, 0.00014083299999999993, 0.00014083299999999993, 0.00014168000000000167, 0.00014166700000000157, 0.00014150000000000273, 0.0001416669999999981, 0.0001411530000000015, 0.0001409729999999991, 0.00014151399999999884, 0.0001411799999999977, 0.0001414859999999997, 0.00014184699999999703, 0.000142347000000001, 0.00014166700000000157, 0.00014150000000000273, 0.00014199999999999977]</msg>
<status status="PASS" starttime="20201112 09:54:42.850" endtime="20201112 09:54:42.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.845" endtime="20201112 09:54:42.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.855" endtime="20201112 09:54:42.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.858" endtime="20201112 09:54:42.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.857" endtime="20201112 09:54:42.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.853" endtime="20201112 09:54:42.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.483" endtime="20201112 09:54:42.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.482" endtime="20201112 09:54:42.879"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.888" endtime="20201112 09:54:42.909"></status>
</kw>
<msg timestamp="20201112 09:54:42.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.886" endtime="20201112 09:54:42.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.911" endtime="20201112 09:54:42.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.913" endtime="20201112 09:54:42.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.883" endtime="20201112 09:54:42.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.881" endtime="20201112 09:54:42.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.923" endtime="20201112 09:54:43.210"></status>
</kw>
<msg timestamp="20201112 09:54:43.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02229075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:42.921" endtime="20201112 09:54:43.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02229075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:43.214" endtime="20201112 09:54:43.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.222" endtime="20201112 09:54:43.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.918" endtime="20201112 09:54:43.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.917" endtime="20201112 09:54:43.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.228" level="INFO">${RESULT} = [{'time': 0.02229075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014340300000000028, 'source_diff': 0.00014340300000000028}, {'time': 0.022446778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:43.225" endtime="20201112 09:54:43.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:43.229" endtime="20201112 09:54:43.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.246" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.245" endtime="20201112 09:54:43.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.248" level="INFO">VALUE: [0.00014340300000000028, 0.00014431999999999987, 0.00014450000000000227, 0.0001436800000000002, 0.00014347199999999866, 0.00014334699999999853, 0.0001434860000000017, 0.00014365299999999706, 0.00014383399999999893, 0.00014418100000000017, 0.00014400000000000177, 0.0001428189999999989, 0.0001441519999999981, 0.00014305600000000251, 0.00014465300000000153, 0.00014415300000000103, 0.00014465300000000153, 0.0001443890000000017, 0.00014333300000000243, 0.0001438189999999999, 0.0001436670000000001, 0.0001436670000000001, 0.00014451399999999837, 0.00014431999999999987, 0.0001444999999999988, 0.00014300000000000077, 0.00014333299999999896, 0.00014398599999999873, 0.00014365299999999706, 0.00014330600000000276, 0.00014431999999999987, 0.00014400000000000177, 0.00014365200000000106, 0.00014316600000000013, 0.00014433299999999996, 0.0001444999999999988, 0.00014301400000000034, 0.00014365300000000053, 0.00014398700000000167, 0.0001427769999999967, 0.00014388899999999774, 0.00014315300000000003, 0.0001445280000000014, 0.00014411099999999885, 0.00014281999999999836, 0.00014466699999999763, 0.00014283300000000193, 0.00014434699999999953, 0.0001446389999999985, 0.00014398599999999873]</msg>
<status status="PASS" starttime="20201112 09:54:43.247" endtime="20201112 09:54:43.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.242" endtime="20201112 09:54:43.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.252" endtime="20201112 09:54:43.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.255" endtime="20201112 09:54:43.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.254" endtime="20201112 09:54:43.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.250" endtime="20201112 09:54:43.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.880" endtime="20201112 09:54:43.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.879" endtime="20201112 09:54:43.276"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.285" endtime="20201112 09:54:43.307"></status>
</kw>
<msg timestamp="20201112 09:54:43.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.283" endtime="20201112 09:54:43.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.309" endtime="20201112 09:54:43.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.311" endtime="20201112 09:54:43.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.281" endtime="20201112 09:54:43.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.278" endtime="20201112 09:54:43.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.320" endtime="20201112 09:54:43.606"></status>
</kw>
<msg timestamp="20201112 09:54:43.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.319" endtime="20201112 09:54:43.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.610" endtime="20201112 09:54:43.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.618" endtime="20201112 09:54:43.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.316" endtime="20201112 09:54:43.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.314" endtime="20201112 09:54:43.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.625" level="INFO">${RESULT} = [{'time': 0.022516528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014655600000000255, 'source_diff': 0.00014655600000000255}, {'time': 0.022668542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:43.622" endtime="20201112 09:54:43.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.638" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:43.626" endtime="20201112 09:54:43.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.643" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.642" endtime="20201112 09:54:43.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.645" level="INFO">VALUE: [0.00014655600000000255, 0.00014548600000000023, 0.00014615299999999956, 0.0001459719999999977, 0.00014665300000000006, 0.00014531899999999792, 0.00014565299999999906, 0.0001461520000000001, 0.00014532000000000087, 0.0001453610000000001, 0.0001466520000000006, 0.00014576399999999962, 0.00014534700000000053, 0.00014518100000000117, 0.0001456389999999995, 0.00014617999999999923, 0.00014616599999999966, 0.00014616600000000313, 0.00014548600000000023, 0.00014498599999999973, 0.00014634699999999806, 0.00014533400000000044, 0.00014498599999999973, 0.00014566599999999916, 0.00014636099999999763, 0.00014566599999999916, 0.00014481899999999742, 0.0001449999999999993, 0.00014532000000000087, 0.00014649999999999733, 0.00014616599999999966, 0.00014616600000000313, 0.00014567999999999873, 0.00014598599999999726, 0.00014598600000000073, 0.00014616699999999913, 0.00014649999999999733, 0.00014566599999999916, 0.0001451519999999991, 0.00014659700000000178, 0.00014516699999999813, 0.00014631899999999892, 0.00014518100000000117, 0.00014588899999999974, 0.00014666600000000016, 0.00014484700000000003, 0.0001465000000000008, 0.00014566699999999863, 0.0001448190000000009, 0.0001454999999999998]</msg>
<status status="PASS" starttime="20201112 09:54:43.644" endtime="20201112 09:54:43.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.639" endtime="20201112 09:54:43.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.649" endtime="20201112 09:54:43.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.652" endtime="20201112 09:54:43.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.651" endtime="20201112 09:54:43.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.647" endtime="20201112 09:54:43.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.277" endtime="20201112 09:54:43.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.276" endtime="20201112 09:54:43.673"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.682" endtime="20201112 09:54:43.703"></status>
</kw>
<msg timestamp="20201112 09:54:43.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.680" endtime="20201112 09:54:43.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.705" endtime="20201112 09:54:43.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.707" endtime="20201112 09:54:43.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.677" endtime="20201112 09:54:43.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.675" endtime="20201112 09:54:43.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.716" endtime="20201112 09:54:44.003"></status>
</kw>
<msg timestamp="20201112 09:54:44.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.715" endtime="20201112 09:54:44.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.007" endtime="20201112 09:54:44.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.015" endtime="20201112 09:54:44.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.712" endtime="20201112 09:54:44.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.710" endtime="20201112 09:54:44.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.021" level="INFO">${RESULT} = [{'time': 0.022657278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014826399999999865, 'source_diff': 0.00014826399999999865}, {'time': 0.022809292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:44.018" endtime="20201112 09:54:44.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.034" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:44.023" endtime="20201112 09:54:44.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.039" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.038" endtime="20201112 09:54:44.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.041" level="INFO">VALUE: [0.00014826399999999865, 0.00014733399999999897, 0.00014783399999999947, 0.00014751400000000137, 0.00014680499999999985, 0.0001486810000000012, 0.00014816700000000113, 0.0001476390000000015, 0.00014716700000000013, 0.00014780600000000033, 0.00014780499999999738, 0.00014683300000000246, 0.0001473329999999995, 0.0001470000000000013, 0.0001486529999999986, 0.00014818099999999723, 0.00014815300000000156, 0.0001486520000000026, 0.00014801400000000187, 0.00014865300000000206, 0.0001477090000000028, 0.0001474719999999992, 0.00014766700000000063, 0.00014749999999999833, 0.00014681899999999942, 0.0001483330000000005, 0.00014716700000000013, 0.00014808300000000024, 0.00014748599999999876, 0.0001478480000000025, 0.0001469870000000012, 0.00014716600000000066, 0.00014701400000000087, 0.00014766699999999716, 0.00014866700000000163, 0.00014844500000000052, 0.0001483200000000004, 0.0001483200000000004, 0.0001483330000000005, 0.0001480000000000023, 0.00014701400000000087, 0.00014698599999999826, 0.00014766700000000063, 0.00014733400000000244, 0.00014684699999999856, 0.00014681899999999942, 0.00014798599999999926, 0.000147833, 0.0001470000000000013, 0.00014866700000000163]</msg>
<status status="PASS" starttime="20201112 09:54:44.040" endtime="20201112 09:54:44.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.035" endtime="20201112 09:54:44.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.045" endtime="20201112 09:54:44.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.048" endtime="20201112 09:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.047" endtime="20201112 09:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.043" endtime="20201112 09:54:44.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.674" endtime="20201112 09:54:44.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.673" endtime="20201112 09:54:44.069"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.079" endtime="20201112 09:54:44.101"></status>
</kw>
<msg timestamp="20201112 09:54:44.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.077" endtime="20201112 09:54:44.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.103" endtime="20201112 09:54:44.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.105" endtime="20201112 09:54:44.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.074" endtime="20201112 09:54:44.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.072" endtime="20201112 09:54:44.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.114" endtime="20201112 09:54:44.401"></status>
</kw>
<msg timestamp="20201112 09:54:44.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023560597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023711, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:44.113" endtime="20201112 09:54:44.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023560597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023711, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:44.405" endtime="20201112 09:54:44.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.413" endtime="20201112 09:54:44.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.110" endtime="20201112 09:54:44.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.108" endtime="20201112 09:54:44.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.420" level="INFO">${RESULT} = [{'time': 0.023711, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015040300000000034, 'source_diff': 0.00015040300000000034}, {'time': 0.023867028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:44.416" endtime="20201112 09:54:44.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.433" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:44.421" endtime="20201112 09:54:44.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.437" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.436" endtime="20201112 09:54:44.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.440" level="INFO">VALUE: [0.00015040300000000034, 0.00015018099999999923, 0.00015015299999999662, 0.00014916700000000213, 0.0001501660000000002, 0.000148833000000001, 0.00014980599999999886, 0.0001491529999999991, 0.0001493200000000014, 0.00014950000000000033, 0.00014917999999999876, 0.00015063800000000155, 0.00014899999999999983, 0.00014916699999999866, 0.00015066700000000016, 0.0001504859999999983, 0.00014918099999999823, 0.00014916699999999866, 0.0001496659999999997, 0.00015000000000000083, 0.00014986099999999766, 0.00014981999999999843, 0.00014899999999999983, 0.00015073599999999854, 0.0001494729999999972, 0.00014901400000000287, 0.00015034700000000206, 0.0001501530000000001, 0.00015036099999999816, 0.00015066700000000016, 0.00014898600000000026, 0.00015033299999999902, 0.0001488469999999971, 0.00014980499999999938, 0.00014931900000000192, 0.0001490139999999994, 0.00014966699999999916, 0.00014912499999999995, 0.00014927699999999974, 0.00014884700000000056, 0.000148833000000001, 0.00014966699999999916, 0.00014955499999999913, 0.0001501810000000027, 0.00015016699999999966, 0.00014944400000000205, 0.00015009699999999834, 0.00014898600000000026, 0.00015033299999999902, 0.00014927800000000269]</msg>
<status status="PASS" starttime="20201112 09:54:44.438" endtime="20201112 09:54:44.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.434" endtime="20201112 09:54:44.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.443" endtime="20201112 09:54:44.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.447" endtime="20201112 09:54:44.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.445" endtime="20201112 09:54:44.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.442" endtime="20201112 09:54:44.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.070" endtime="20201112 09:54:44.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.070" endtime="20201112 09:54:44.467"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.476" endtime="20201112 09:54:44.498"></status>
</kw>
<msg timestamp="20201112 09:54:44.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.475" endtime="20201112 09:54:44.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.500" endtime="20201112 09:54:44.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.502" endtime="20201112 09:54:44.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.472" endtime="20201112 09:54:44.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.470" endtime="20201112 09:54:44.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.511" endtime="20201112 09:54:44.798"></status>
</kw>
<msg timestamp="20201112 09:54:44.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.510" endtime="20201112 09:54:44.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.802" endtime="20201112 09:54:44.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.810" endtime="20201112 09:54:44.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.507" endtime="20201112 09:54:44.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.505" endtime="20201112 09:54:44.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.817" level="INFO">${RESULT} = [{'time': 0.022484278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015204200000000154, 'source_diff': 0.00015204200000000154}, {'time': 0.022644306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:44.813" endtime="20201112 09:54:44.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.830" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:44.818" endtime="20201112 09:54:44.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.834" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.833" endtime="20201112 09:54:44.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.836" level="INFO">VALUE: [0.00015204200000000154, 0.00015184799999999957, 0.0001524730000000002, 0.00015249999999999986, 0.00015233299999999755, 0.00015097199999999922, 0.00015263899999999955, 0.0001524860000000003, 0.0001514859999999993, 0.00015181900000000095, 0.00015150000000000233, 0.00015137499999999873, 0.00015133300000000002, 0.0001518470000000001, 0.00015230600000000136, 0.00015086100000000213, 0.00015183300000000052, 0.00015266599999999922, 0.00015216700000000166, 0.00015116700000000066, 0.0001519309999999975, 0.0001521669999999982, 0.00015248699999999976, 0.0001507910000000008, 0.0001514859999999993, 0.00015183300000000052, 0.00015265299999999912, 0.00015099999999999836, 0.00015150000000000233, 0.00015137499999999873, 0.0001511660000000012, 0.00015254200000000204, 0.00015165299999999812, 0.00015098600000000226, 0.00015130600000000036, 0.00015148700000000223, 0.00015249999999999986, 0.00015151399999999843, 0.00015263899999999955, 0.0001511669999999972, 0.0001511530000000011, 0.00015194499999999708, 0.0001521669999999982, 0.00015233300000000102, 0.0001508469999999991, 0.00015133300000000002, 0.0001523470000000006, 0.00015112500000000195, 0.00015134800000000254, 0.00015099999999999836]</msg>
<status status="PASS" starttime="20201112 09:54:44.835" endtime="20201112 09:54:44.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.831" endtime="20201112 09:54:44.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.840" endtime="20201112 09:54:44.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.843" endtime="20201112 09:54:44.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.842" endtime="20201112 09:54:44.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.838" endtime="20201112 09:54:44.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.468" endtime="20201112 09:54:44.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.468" endtime="20201112 09:54:44.864"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.873" endtime="20201112 09:54:44.895"></status>
</kw>
<msg timestamp="20201112 09:54:44.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.871" endtime="20201112 09:54:44.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.896" endtime="20201112 09:54:44.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.899" endtime="20201112 09:54:44.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.869" endtime="20201112 09:54:44.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.867" endtime="20201112 09:54:44.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.908" endtime="20201112 09:54:45.194"></status>
</kw>
<msg timestamp="20201112 09:54:45.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.906" endtime="20201112 09:54:45.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.198" endtime="20201112 09:54:45.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.206" endtime="20201112 09:54:45.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.904" endtime="20201112 09:54:45.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.902" endtime="20201112 09:54:45.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.212" level="INFO">${RESULT} = [{'time': 0.022446139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015379199999999982, 'source_diff': 0.00015379199999999982}, {'time': 0.022608125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:45.209" endtime="20201112 09:54:45.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.225" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:45.213" endtime="20201112 09:54:45.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.230" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.229" endtime="20201112 09:54:45.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.232" level="INFO">VALUE: [0.00015379199999999982, 0.00015315299999999962, 0.00015365300000000012, 0.00015400000000000136, 0.00015433299999999955, 0.00015366600000000022, 0.00015316599999999972, 0.00015359700000000184, 0.00015445799999999968, 0.00015437500000000173, 0.00015451400000000143, 0.00015411199999999792, 0.00015333299999999855, 0.00015283300000000152, 0.00015409699999999887, 0.00015433299999999955, 0.00015431999999999946, 0.00015468100000000026, 0.00015465299999999765, 0.00015279099999999934, 0.0001536669999999997, 0.00015433299999999955, 0.00015401400000000093, 0.0001539860000000018, 0.00015387499999999776, 0.00015380499999999991, 0.00015331899999999898, 0.00015418099999999976, 0.00015383299999999905, 0.00015332000000000193, 0.00015333399999999803, 0.0001536799999999998, 0.00015365200000000065, 0.00015350000000000086, 0.00015318099999999876, 0.00015451399999999796, 0.0001542500000000016, 0.0001539860000000018, 0.00015300000000000036, 0.0001534860000000013, 0.00015412499999999801, 0.00015411099999999844, 0.0001531669999999992, 0.00015415300000000062, 0.00015465300000000112, 0.00015315200000000015, 0.0001543470000000026, 0.0001546670000000007, 0.0001531950000000018, 0.00015452700000000152]</msg>
<status status="PASS" starttime="20201112 09:54:45.231" endtime="20201112 09:54:45.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.226" endtime="20201112 09:54:45.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.236" endtime="20201112 09:54:45.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.239" endtime="20201112 09:54:45.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.237" endtime="20201112 09:54:45.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.234" endtime="20201112 09:54:45.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.865" endtime="20201112 09:54:45.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.865" endtime="20201112 09:54:45.260"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.268" endtime="20201112 09:54:45.291"></status>
</kw>
<msg timestamp="20201112 09:54:45.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.267" endtime="20201112 09:54:45.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.292" endtime="20201112 09:54:45.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.295" endtime="20201112 09:54:45.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.264" endtime="20201112 09:54:45.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.262" endtime="20201112 09:54:45.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.304" endtime="20201112 09:54:45.590"></status>
</kw>
<msg timestamp="20201112 09:54:45.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.302" endtime="20201112 09:54:45.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.594" endtime="20201112 09:54:45.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.602" endtime="20201112 09:54:45.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.299" endtime="20201112 09:54:45.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.298" endtime="20201112 09:54:45.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.608" level="INFO">${RESULT} = [{'time': 0.022256569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015609700000000087, 'source_diff': 0.00015609700000000087}, {'time': 0.022426569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:45.605" endtime="20201112 09:54:45.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.621" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:45.609" endtime="20201112 09:54:45.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.626" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.625" endtime="20201112 09:54:45.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.628" level="INFO">VALUE: [0.00015609700000000087, 0.00015581900000000148, 0.00015615299999999915, 0.00015501399999999846, 0.00015533300000000055, 0.00015633399999999756, 0.00015665300000000312, 0.00015548599999999982, 0.00015647200000000125, 0.00015648599999999735, 0.00015631899999999851, 0.0001561670000000022, 0.00015648600000000082, 0.00015633400000000103, 0.00015500000000000236, 0.00015649999999999692, 0.00015602799999999903, 0.0001551670000000012, 0.0001556809999999978, 0.00015570800000000093, 0.00015512500000000248, 0.00015634699999999765, 0.00015583300000000105, 0.00015533300000000055, 0.00015565299999999865, 0.00015663900000000008, 0.00015551299999999948, 0.00015533300000000055, 0.00015665200000000018, 0.00015515299999999815, 0.00015556899999999776, 0.00015663900000000008, 0.00015669400000000236, 0.00015584700000000062, 0.0001558610000000002, 0.00015583299999999758, 0.00015583299999999758, 0.00015565300000000212, 0.0001553479999999996, 0.0001558199999999975, 0.00015666599999999975, 0.00015548599999999982, 0.00015583299999999758, 0.00015633299999999808, 0.00015483399999999953, 0.0001548609999999992, 0.0001549999999999989, 0.0001558890000000028, 0.00015565300000000212, 0.00015565299999999865]</msg>
<status status="PASS" starttime="20201112 09:54:45.627" endtime="20201112 09:54:45.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.622" endtime="20201112 09:54:45.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.636" endtime="20201112 09:54:45.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.639" endtime="20201112 09:54:45.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.638" endtime="20201112 09:54:45.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.634" endtime="20201112 09:54:45.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.261" endtime="20201112 09:54:45.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.260" endtime="20201112 09:54:45.660"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.669" endtime="20201112 09:54:45.691"></status>
</kw>
<msg timestamp="20201112 09:54:45.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.667" endtime="20201112 09:54:45.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.692" endtime="20201112 09:54:45.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.695" endtime="20201112 09:54:45.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.665" endtime="20201112 09:54:45.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.663" endtime="20201112 09:54:45.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.704" endtime="20201112 09:54:45.991"></status>
</kw>
<msg timestamp="20201112 09:54:45.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.702" endtime="20201112 09:54:45.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.995" endtime="20201112 09:54:46.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.003" endtime="20201112 09:54:46.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.700" endtime="20201112 09:54:46.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.698" endtime="20201112 09:54:46.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.010" level="INFO">${RESULT} = [{'time': 0.022241514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001585969999999999, 'source_diff': 0.0001585969999999999}, {'time': 0.022409514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:46.006" endtime="20201112 09:54:46.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.022" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:46.011" endtime="20201112 09:54:46.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.027" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.026" endtime="20201112 09:54:46.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.030" level="INFO">VALUE: [0.0001585969999999999, 0.0001568199999999985, 0.00015749999999999792, 0.0001578610000000022, 0.00015731899999999951, 0.00015866700000000122, 0.00015793000000000057, 0.00015756899999999976, 0.00015698599999999785, 0.000157319999999999, 0.00015734699999999865, 0.00015716600000000025, 0.0001585420000000011, 0.0001568060000000024, 0.00015815300000000115, 0.000157319999999999, 0.00015816599999999778, 0.00015765200000000118, 0.00015802800000000103, 0.00015836099999999922, 0.000157319999999999, 0.00015856900000000076, 0.000157319999999999, 0.0001585139999999985, 0.0001586519999999987, 0.0001570000000000009, 0.00015784799999999863, 0.00015865299999999818, 0.0001578199999999995, 0.00015701400000000046, 0.00015716600000000025, 0.00015781900000000001, 0.00015798599999999885, 0.0001575139999999975, 0.00015749999999999792, 0.00015751300000000149, 0.0001585000000000024, 0.00015763900000000108, 0.0001575000000000014, 0.00015734700000000212, 0.00015849999999999892, 0.0001581810000000003, 0.0001581519999999982, 0.0001582640000000017, 0.00015725000000000114, 0.00015720899999999843, 0.00015765300000000065, 0.00015798599999999885, 0.0001581940000000004, 0.00015766600000000075]</msg>
<status status="PASS" starttime="20201112 09:54:46.028" endtime="20201112 09:54:46.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.023" endtime="20201112 09:54:46.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.033" endtime="20201112 09:54:46.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.036" endtime="20201112 09:54:46.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.035" endtime="20201112 09:54:46.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.031" endtime="20201112 09:54:46.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.661" endtime="20201112 09:54:46.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.660" endtime="20201112 09:54:46.057"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.066" endtime="20201112 09:54:46.088"></status>
</kw>
<msg timestamp="20201112 09:54:46.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.064" endtime="20201112 09:54:46.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.090" endtime="20201112 09:54:46.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.093" endtime="20201112 09:54:46.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.062" endtime="20201112 09:54:46.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.060" endtime="20201112 09:54:46.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.101" endtime="20201112 09:54:46.390"></status>
</kw>
<msg timestamp="20201112 09:54:46.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.100" endtime="20201112 09:54:46.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.394" endtime="20201112 09:54:46.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.402" endtime="20201112 09:54:46.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.097" endtime="20201112 09:54:46.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.096" endtime="20201112 09:54:46.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.408" level="INFO">${RESULT} = [{'time': 0.022672653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015943100000000154, 'source_diff': 0.00015943100000000154}, {'time': 0.022844694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:46.405" endtime="20201112 09:54:46.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.421" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:46.409" endtime="20201112 09:54:46.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.426" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.425" endtime="20201112 09:54:46.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.428" level="INFO">VALUE: [0.00015943100000000154, 0.00016004099999999966, 0.00015912499999999954, 0.00015949999999999992, 0.00016016599999999978, 0.00015931900000000151, 0.0001590000000000029, 0.00015947200000000078, 0.00015912499999999954, 0.00015933300000000108, 0.00016016599999999978, 0.00016016699999999925, 0.00015948600000000035, 0.00015965299999999918, 0.0001591940000000014, 0.00015949999999999992, 0.00015948600000000035, 0.00015883299999999712, 0.00016016699999999925, 0.00016016699999999925, 0.00015883400000000006, 0.00016033400000000156, 0.00015998600000000085, 0.00015983299999999812, 0.00015965299999999918, 0.00015970900000000093, 0.00015963899999999961, 0.00015933400000000056, 0.00015899999999999942, 0.00015897200000000028, 0.00015998600000000085, 0.00015948599999999688, 0.00016000000000000042, 0.00015933400000000056, 0.00016016699999999925, 0.00016033299999999862, 0.0001595139999999995, 0.00016065300000000018, 0.00016000000000000042, 0.00015965300000000265, 0.00016015299999999968, 0.00015918000000000182, 0.00015890299999999843, 0.00016022200000000153, 0.0001588200000000005, 0.00015933300000000108, 0.0001606810000000028, 0.00015924999999999967, 0.00015966600000000275, 0.00015951400000000296]</msg>
<status status="PASS" starttime="20201112 09:54:46.427" endtime="20201112 09:54:46.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.422" endtime="20201112 09:54:46.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.432" endtime="20201112 09:54:46.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.435" endtime="20201112 09:54:46.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.434" endtime="20201112 09:54:46.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.430" endtime="20201112 09:54:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.058" endtime="20201112 09:54:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.058" endtime="20201112 09:54:46.456"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.465" endtime="20201112 09:54:46.486"></status>
</kw>
<msg timestamp="20201112 09:54:46.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.463" endtime="20201112 09:54:46.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.488" endtime="20201112 09:54:46.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.490" endtime="20201112 09:54:46.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.461" endtime="20201112 09:54:46.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.458" endtime="20201112 09:54:46.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.499" endtime="20201112 09:54:46.786"></status>
</kw>
<msg timestamp="20201112 09:54:46.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022113639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022274875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.498" endtime="20201112 09:54:46.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022113639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022274875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.790" endtime="20201112 09:54:46.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.798" endtime="20201112 09:54:46.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.495" endtime="20201112 09:54:46.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.494" endtime="20201112 09:54:46.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.804" level="INFO">${RESULT} = [{'time': 0.022274875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016123599999999863, 'source_diff': 0.00016123599999999863}, {'time': 0.022450889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:46.801" endtime="20201112 09:54:46.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.817" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:46.805" endtime="20201112 09:54:46.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.822" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.821" endtime="20201112 09:54:46.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.824" level="INFO">VALUE: [0.00016123599999999863, 0.00016233300000000062, 0.0001608339999999986, 0.00016198700000000232, 0.00016181900000000055, 0.00016216600000000178, 0.00016119500000000286, 0.00016249999999999945, 0.00016248599999999988, 0.00016215300000000168, 0.00016116600000000078, 0.00016118000000000035, 0.00016116700000000025, 0.00016083299999999912, 0.0001619719999999998, 0.000162611, 0.00016182000000000002, 0.00016122200000000253, 0.00016204199999999766, 0.00016151399999999802, 0.00016249999999999945, 0.00016134699999999919, 0.00016165300000000118, 0.00016150000000000192, 0.00016266700000000175, 0.00016199999999999895, 0.00016201399999999852, 0.00016116700000000025, 0.00016165300000000118, 0.00016100000000000142, 0.0001621659999999983, 0.00016215299999999822, 0.00016083300000000259, 0.00016248599999999988, 0.00016166699999999729, 0.00016233299999999715, 0.00016131900000000005, 0.00016118000000000035, 0.00016100000000000142, 0.00016201399999999852, 0.0001614719999999993, 0.00016166700000000075, 0.00016149999999999845, 0.0001616659999999978, 0.0001617369999999986, 0.00016232000000000052, 0.00016200000000000242, 0.00016265299999999872, 0.00016183300000000012, 0.0001614719999999993]</msg>
<status status="PASS" starttime="20201112 09:54:46.823" endtime="20201112 09:54:46.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.818" endtime="20201112 09:54:46.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.828" endtime="20201112 09:54:46.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.832" endtime="20201112 09:54:46.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.830" endtime="20201112 09:54:46.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.826" endtime="20201112 09:54:46.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.457" endtime="20201112 09:54:46.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.456" endtime="20201112 09:54:46.852"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.861" endtime="20201112 09:54:46.883"></status>
</kw>
<msg timestamp="20201112 09:54:46.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.859" endtime="20201112 09:54:46.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.885" endtime="20201112 09:54:46.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.887" endtime="20201112 09:54:46.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.857" endtime="20201112 09:54:46.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.855" endtime="20201112 09:54:46.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.896" endtime="20201112 09:54:47.182"></status>
</kw>
<msg timestamp="20201112 09:54:47.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:46.894" endtime="20201112 09:54:47.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:47.186" endtime="20201112 09:54:47.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.195" endtime="20201112 09:54:47.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.892" endtime="20201112 09:54:47.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.890" endtime="20201112 09:54:47.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.201" level="INFO">${RESULT} = [{'time': 0.022320417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016291699999999854, 'source_diff': 0.00016291699999999854}, {'time': 0.022498417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:47.198" endtime="20201112 09:54:47.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.214" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:47.202" endtime="20201112 09:54:47.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.219" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.218" endtime="20201112 09:54:47.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.221" level="INFO">VALUE: [0.00016291699999999854, 0.00016326399999999977, 0.00016431900000000305, 0.00016318000000000235, 0.00016331899999999858, 0.0001632919999999989, 0.00016390299999999997, 0.0001633479999999972, 0.00016368000000000285, 0.00016299999999999995, 0.00016283300000000112, 0.00016298600000000038, 0.00016349999999999698, 0.00016284800000000016, 0.00016417999999999988, 0.00016348600000000088, 0.00016383300000000212, 0.00016449999999999798, 0.00016416699999999979, 0.00016433399999999862, 0.00016415300000000022, 0.00016299999999999995, 0.00016365200000000024, 0.00016431899999999958, 0.00016315299999999922, 0.0001628340000000006, 0.00016401400000000052, 0.00016351400000000002, 0.00016469399999999995, 0.00016333300000000162, 0.00016448600000000188, 0.00016415300000000022, 0.00016318000000000235, 0.0001631659999999993, 0.00016366699999999929, 0.00016317999999999888, 0.00016336100000000076, 0.0001643340000000021, 0.0001633340000000011, 0.00016400000000000095, 0.00016365199999999677, 0.00016301399999999952, 0.00016452799999999712, 0.0001635279999999996, 0.0001627780000000023, 0.00016450000000000145, 0.00016367999999999938, 0.00016415300000000022, 0.00016350000000000045, 0.0001629859999999969]</msg>
<status status="PASS" starttime="20201112 09:54:47.220" endtime="20201112 09:54:47.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.215" endtime="20201112 09:54:47.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.225" endtime="20201112 09:54:47.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.228" endtime="20201112 09:54:47.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.226" endtime="20201112 09:54:47.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.223" endtime="20201112 09:54:47.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.853" endtime="20201112 09:54:47.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.853" endtime="20201112 09:54:47.249"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.257" endtime="20201112 09:54:47.279"></status>
</kw>
<msg timestamp="20201112 09:54:47.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.256" endtime="20201112 09:54:47.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.281" endtime="20201112 09:54:47.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.283" endtime="20201112 09:54:47.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.253" endtime="20201112 09:54:47.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.251" endtime="20201112 09:54:47.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.292" endtime="20201112 09:54:47.578"></status>
</kw>
<msg timestamp="20201112 09:54:47.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.291" endtime="20201112 09:54:47.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.582" endtime="20201112 09:54:47.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.590" endtime="20201112 09:54:47.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.288" endtime="20201112 09:54:47.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.286" endtime="20201112 09:54:47.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.597" level="INFO">${RESULT} = [{'time': 0.022119694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016608299999999743, 'source_diff': 0.00016608299999999743}, {'time': 0.022293722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:47.594" endtime="20201112 09:54:47.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.610" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:47.598" endtime="20201112 09:54:47.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.614" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.613" endtime="20201112 09:54:47.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.617" level="INFO">VALUE: [0.00016608299999999743, 0.0001658189999999976, 0.000165709, 0.0001659859999999999, 0.0001654859999999994, 0.0001652920000000009, 0.00016566599999999834, 0.00016599999999999948, 0.00016483299999999965, 0.00016533300000000015, 0.00016582000000000055, 0.00016536099999999929, 0.00016580499999999804, 0.00016547199999999984, 0.00016618100000000136, 0.00016666699999999882, 0.0001663480000000002, 0.00016519400000000045, 0.00016500000000000195, 0.00016551399999999855, 0.00016597199999999687, 0.0001656249999999991, 0.00016520800000000002, 0.00016616700000000179, 0.0001664579999999978, 0.00016486099999999879, 0.00016515299999999775, 0.00016501400000000152, 0.00016616599999999884, 0.0001651249999999986, 0.0001660830000000009, 0.0001664860000000004, 0.00016547199999999984, 0.00016531900000000058, 0.00016568099999999739, 0.00016568100000000086, 0.00016599999999999948, 0.0001654859999999994, 0.00016549999999999898, 0.000166709000000001, 0.00016483300000000312, 0.00016495899999999925, 0.00016568000000000138, 0.00016651400000000302, 0.00016555600000000073, 0.00016533300000000015, 0.00016531900000000058, 0.00016651399999999955, 0.00016568100000000086, 0.0001654859999999994]</msg>
<status status="PASS" starttime="20201112 09:54:47.615" endtime="20201112 09:54:47.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.611" endtime="20201112 09:54:47.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.620" endtime="20201112 09:54:47.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.624" endtime="20201112 09:54:47.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.622" endtime="20201112 09:54:47.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.619" endtime="20201112 09:54:47.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.250" endtime="20201112 09:54:47.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.249" endtime="20201112 09:54:47.645"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.653" endtime="20201112 09:54:47.676"></status>
</kw>
<msg timestamp="20201112 09:54:47.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.652" endtime="20201112 09:54:47.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.677" endtime="20201112 09:54:47.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.680" endtime="20201112 09:54:47.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.649" endtime="20201112 09:54:47.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.647" endtime="20201112 09:54:47.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.689" endtime="20201112 09:54:47.976"></status>
</kw>
<msg timestamp="20201112 09:54:47.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:47.687" endtime="20201112 09:54:47.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:47.980" endtime="20201112 09:54:47.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.988" endtime="20201112 09:54:47.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.685" endtime="20201112 09:54:47.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.683" endtime="20201112 09:54:47.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.995" level="INFO">${RESULT} = [{'time': 0.02234075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016856900000000036, 'source_diff': 0.00016856900000000036}, {'time': 0.022522778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:47.992" endtime="20201112 09:54:47.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.008" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:47.996" endtime="20201112 09:54:48.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.012" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.011" endtime="20201112 09:54:48.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.015" level="INFO">VALUE: [0.00016856900000000036, 0.00016733400000000162, 0.00016681999999999808, 0.00016683300000000165, 0.00016750000000000098, 0.00016727799999999987, 0.00016833300000000315, 0.00016701400000000005, 0.00016722199999999812, 0.00016833299999999968, 0.00016683299999999818, 0.00016683299999999818, 0.00016683299999999818, 0.00016731999999999858, 0.00016783399999999865, 0.0001685420000000007, 0.00016766600000000034, 0.00016766699999999982, 0.00016733299999999868, 0.00016850000000000198, 0.00016700000000000048, 0.00016731999999999858, 0.00016850000000000198, 0.00016847199999999937, 0.0001674999999999975, 0.00016813900000000118, 0.00016868100000000039, 0.00016850000000000198, 0.00016834699999999925, 0.00016700000000000048, 0.0001684999999999985, 0.00016865300000000125, 0.00016733399999999815, 0.00016829100000000097, 0.00016866599999999787, 0.00016773600000000166, 0.00016681900000000208, 0.00016736099999999782, 0.00016700000000000048, 0.00016773600000000166, 0.00016715200000000027, 0.00016765300000000025, 0.00016774999999999776, 0.00016801400000000105, 0.00016798599999999844, 0.00016684700000000122, 0.00016798599999999844, 0.00016815300000000075, 0.00016816700000000032, 0.00016833299999999968]</msg>
<status status="PASS" starttime="20201112 09:54:48.013" endtime="20201112 09:54:48.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.009" endtime="20201112 09:54:48.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.018" endtime="20201112 09:54:48.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.022" endtime="20201112 09:54:48.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.020" endtime="20201112 09:54:48.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.017" endtime="20201112 09:54:48.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.645" endtime="20201112 09:54:48.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.645" endtime="20201112 09:54:48.043"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.051" endtime="20201112 09:54:48.074"></status>
</kw>
<msg timestamp="20201112 09:54:48.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.050" endtime="20201112 09:54:48.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.076" endtime="20201112 09:54:48.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.078" endtime="20201112 09:54:48.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.047" endtime="20201112 09:54:48.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.045" endtime="20201112 09:54:48.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.087" endtime="20201112 09:54:48.374"></status>
</kw>
<msg timestamp="20201112 09:54:48.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.086" endtime="20201112 09:54:48.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.378" endtime="20201112 09:54:48.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.386" endtime="20201112 09:54:48.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.083" endtime="20201112 09:54:48.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.081" endtime="20201112 09:54:48.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.393" level="INFO">${RESULT} = [{'time': 0.022856319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016908300000000043, 'source_diff': 0.00016908300000000043}, {'time': 0.023036333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:48.390" endtime="20201112 09:54:48.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.406" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:48.394" endtime="20201112 09:54:48.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.411" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.409" endtime="20201112 09:54:48.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.413" level="INFO">VALUE: [0.00016908300000000043, 0.0001703329999999982, 0.0001691389999999987, 0.00016951399999999908, 0.0001696389999999992, 0.00016901400000000205, 0.00016995900000000078, 0.00017002799999999915, 0.0001694580000000008, 0.00017070899999999806, 0.00016934799999999972, 0.00016984799999999675, 0.00017034700000000125, 0.00017045799999999833, 0.0001689860000000029, 0.00016918100000000089, 0.00016882000000000008, 0.0001698199999999976, 0.0001693749999999994, 0.00016983300000000118, 0.00016897199999999987, 0.000168999999999999, 0.00017048600000000094, 0.00016968100000000139, 0.00017051400000000008, 0.000168999999999999, 0.00016916700000000132, 0.00016890199999999855, 0.00017033300000000168, 0.00017, 0.00017066599999999987, 0.0001705000000000005, 0.00016948599999999994, 0.00016962499999999964, 0.00016983300000000118, 0.00017048600000000094, 0.0001694169999999981, 0.0001703190000000021, 0.00017065299999999978, 0.00017068099999999892, 0.00017044499999999824, 0.00016947299999999985, 0.00016916700000000132, 0.00017044399999999876, 0.00016937500000000286, 0.00016965299999999878, 0.00016983400000000065, 0.00017032000000000158, 0.00016966700000000529, 0.0001688190000000006]</msg>
<status status="PASS" starttime="20201112 09:54:48.412" endtime="20201112 09:54:48.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.407" endtime="20201112 09:54:48.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.416" endtime="20201112 09:54:48.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.420" endtime="20201112 09:54:48.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.418" endtime="20201112 09:54:48.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.415" endtime="20201112 09:54:48.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.044" endtime="20201112 09:54:48.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.043" endtime="20201112 09:54:48.441"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.450" endtime="20201112 09:54:48.474"></status>
</kw>
<msg timestamp="20201112 09:54:48.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.449" endtime="20201112 09:54:48.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.476" endtime="20201112 09:54:48.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.478" endtime="20201112 09:54:48.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.446" endtime="20201112 09:54:48.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.444" endtime="20201112 09:54:48.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.487" endtime="20201112 09:54:48.775"></status>
</kw>
<msg timestamp="20201112 09:54:48.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023646333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023818917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.486" endtime="20201112 09:54:48.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023646333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023818917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.779" endtime="20201112 09:54:48.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.787" endtime="20201112 09:54:48.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.483" endtime="20201112 09:54:48.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.482" endtime="20201112 09:54:48.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.793" level="INFO">${RESULT} = [{'time': 0.023818917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017258399999999993, 'source_diff': 0.00017258399999999993}, {'time': 0.024000917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:48.790" endtime="20201112 09:54:48.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.806" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:48.794" endtime="20201112 09:54:48.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.811" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.810" endtime="20201112 09:54:48.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.813" level="INFO">VALUE: [0.00017258399999999993, 0.00017248599999999947, 0.0001716659999999974, 0.00017166600000000087, 0.00017186100000000232, 0.00017166699999999688, 0.00017083399999999818, 0.0001721390000000017, 0.00017083300000000218, 0.00017133300000000268, 0.00017249999999999904, 0.00017216700000000085, 0.00017154100000000075, 0.00017138900000000096, 0.0001721659999999979, 0.00017101400000000058, 0.00017084699999999828, 0.0001726529999999983, 0.00017243100000000067, 0.00017216700000000085, 0.0001713329999999992, 0.00017201400000000158, 0.00017148599999999847, 0.00017199999999999854, 0.00017266699999999788, 0.00017180600000000004, 0.0001723330000000002, 0.0001712360000000017, 0.00017126400000000083, 0.00017204200000000072, 0.00017186099999999885, 0.0001726529999999983, 0.00017095799999999883, 0.00017101400000000058, 0.00017184699999999928, 0.0001724719999999999, 0.00017133399999999868, 0.00017162500000000164, 0.00017149999999999804, 0.0001718329999999997, 0.0001713329999999992, 0.00017184700000000275, 0.00017115300000000028, 0.00017148599999999847, 0.0001711520000000008, 0.00017215199999999486, 0.0001716249999999947, 0.00017236100000000282, 0.00017251299999999914, 0.00017116699999999985]</msg>
<status status="PASS" starttime="20201112 09:54:48.812" endtime="20201112 09:54:48.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.807" endtime="20201112 09:54:48.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.817" endtime="20201112 09:54:48.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.820" endtime="20201112 09:54:48.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.818" endtime="20201112 09:54:48.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.815" endtime="20201112 09:54:48.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.442" endtime="20201112 09:54:48.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.441" endtime="20201112 09:54:48.841"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.850" endtime="20201112 09:54:48.873"></status>
</kw>
<msg timestamp="20201112 09:54:48.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.848" endtime="20201112 09:54:48.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.874" endtime="20201112 09:54:48.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.877" endtime="20201112 09:54:48.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.845" endtime="20201112 09:54:48.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.843" endtime="20201112 09:54:48.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.886" endtime="20201112 09:54:49.173"></status>
</kw>
<msg timestamp="20201112 09:54:49.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.885" endtime="20201112 09:54:49.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.177" endtime="20201112 09:54:49.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.185" endtime="20201112 09:54:49.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.882" endtime="20201112 09:54:49.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.880" endtime="20201112 09:54:49.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.192" level="INFO">${RESULT} = [{'time': 0.022710222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017356899999999842, 'source_diff': 0.00017356899999999842}, {'time': 0.022890236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:49.189" endtime="20201112 09:54:49.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.205" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:49.193" endtime="20201112 09:54:49.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.209" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.208" endtime="20201112 09:54:49.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.212" level="INFO">VALUE: [0.00017356899999999842, 0.0001743330000000022, 0.0001733330000000012, 0.00017366700000000235, 0.00017366699999999888, 0.0001732910000000025, 0.00017299999999999954, 0.00017368100000000192, 0.00017348600000000047, 0.00017280600000000104, 0.0001728330000000007, 0.00017384700000000128, 0.00017386099999999738, 0.00017298599999999997, 0.00017383400000000118, 0.00017280600000000104, 0.00017284700000000028, 0.00017331899999999817, 0.0001733469999999973, 0.00017466699999999988, 0.00017398600000000097, 0.00017398600000000097, 0.00017466699999999988, 0.00017345799999999786, 0.00017298599999999997, 0.00017299999999999954, 0.0001741529999999998, 0.00017333400000000068, 0.00017383400000000118, 0.0001745140000000006, 0.00017331900000000164, 0.00017320900000000056, 0.0001735139999999996, 0.00017372200000000115, 0.00017299999999999954, 0.0001745140000000006, 0.00017281899999999767, 0.00017402799999999968, 0.00017438800000000101, 0.00017368100000000192, 0.00017317999999999847, 0.0001733330000000012, 0.0001730560000000013, 0.00017386099999999738, 0.00017279200000000147, 0.0001744590000000018, 0.00017401300000000064, 0.00017450000000000104, 0.00017433299999999874, 0.0001733190000000051]</msg>
<status status="PASS" starttime="20201112 09:54:49.210" endtime="20201112 09:54:49.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.206" endtime="20201112 09:54:49.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.215" endtime="20201112 09:54:49.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.219" endtime="20201112 09:54:49.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.217" endtime="20201112 09:54:49.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.214" endtime="20201112 09:54:49.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.842" endtime="20201112 09:54:49.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.841" endtime="20201112 09:54:49.240"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.248" endtime="20201112 09:54:49.272"></status>
</kw>
<msg timestamp="20201112 09:54:49.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.247" endtime="20201112 09:54:49.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.274" endtime="20201112 09:54:49.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.276" endtime="20201112 09:54:49.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.244" endtime="20201112 09:54:49.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.242" endtime="20201112 09:54:49.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.285" endtime="20201112 09:54:49.573"></status>
</kw>
<msg timestamp="20201112 09:54:49.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022647861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.284" endtime="20201112 09:54:49.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022647861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.577" endtime="20201112 09:54:49.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.585" endtime="20201112 09:54:49.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.281" endtime="20201112 09:54:49.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.279" endtime="20201112 09:54:49.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.591" level="INFO">${RESULT} = [{'time': 0.022647861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017573599999999925, 'source_diff': 0.00017573599999999925}, {'time': 0.022829875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:49.588" endtime="20201112 09:54:49.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.604" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:49.592" endtime="20201112 09:54:49.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.609" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.608" endtime="20201112 09:54:49.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.611" level="INFO">VALUE: [0.00017573599999999925, 0.0001750829999999995, 0.00017501399999999764, 0.00017516700000000038, 0.00017534700000000278, 0.00017554200000000075, 0.00017601399999999864, 0.00017549999999999857, 0.00017519499999999952, 0.000176486, 0.00017616599999999843, 0.00017523599999999875, 0.00017633300000000074, 0.00017533299999999974, 0.00017516700000000038, 0.0001755409999999978, 0.0001766660000000024, 0.00017665299999999884, 0.00017616700000000138, 0.00017498600000000197, 0.00017481999999999914, 0.00017563899999999827, 0.00017515199999999786, 0.00017599999999999907, 0.00017499999999999807, 0.00017481999999999914, 0.00017606900000000092, 0.00017533400000000268, 0.0001749439999999998, 0.00017531900000000017, 0.00017568100000000045, 0.00017665299999999884, 0.00017566700000000088, 0.0001748469999999988, 0.00017515200000000133, 0.00017669399999999807, 0.0001766669999999984, 0.00017548600000000247, 0.00017566700000000088, 0.00017633300000000074, 0.00017550000000000204, 0.0001753469999999993, 0.000176486, 0.0001758339999999997, 0.0001753339999999992, 0.00017515199999999786, 0.00017550000000000204, 0.00017498600000000197, 0.00017536099999999888, 0.00017668099999999798]</msg>
<status status="PASS" starttime="20201112 09:54:49.610" endtime="20201112 09:54:49.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.605" endtime="20201112 09:54:49.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.615" endtime="20201112 09:54:49.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.618" endtime="20201112 09:54:49.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.617" endtime="20201112 09:54:49.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.613" endtime="20201112 09:54:49.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.241" endtime="20201112 09:54:49.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.240" endtime="20201112 09:54:49.639"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.648" endtime="20201112 09:54:49.671"></status>
</kw>
<msg timestamp="20201112 09:54:49.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.646" endtime="20201112 09:54:49.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.672" endtime="20201112 09:54:49.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.675" endtime="20201112 09:54:49.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.644" endtime="20201112 09:54:49.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.642" endtime="20201112 09:54:49.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.684" endtime="20201112 09:54:49.970"></status>
</kw>
<msg timestamp="20201112 09:54:49.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022313319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:49.683" endtime="20201112 09:54:49.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022313319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:49.974" endtime="20201112 09:54:49.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.982" endtime="20201112 09:54:49.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.680" endtime="20201112 09:54:49.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.678" endtime="20201112 09:54:49.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.989" level="INFO">${RESULT} = [{'time': 0.02249125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017793099999999923, 'source_diff': 0.00017793099999999923}, {'time': 0.022679292, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:49.986" endtime="20201112 09:54:49.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.002" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:49.990" endtime="20201112 09:54:50.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.006" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.005" endtime="20201112 09:54:50.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.009" level="INFO">VALUE: [0.00017793099999999923, 0.0001781669999999999, 0.00017716700000000238, 0.0001785410000000008, 0.00017800000000000107, 0.00017800000000000107, 0.00017737500000000045, 0.00017868099999999998, 0.000178486000000002, 0.00017701300000000017, 0.00017718000000000247, 0.00017754199999999928, 0.00017750000000000057, 0.00017702799999999921, 0.00017750000000000057, 0.00017819399999999957, 0.0001778189999999992, 0.00017765299999999984, 0.00017752799999999971, 0.00017734800000000078, 0.00017745900000000134, 0.00017700000000000007, 0.00017851399999999767, 0.00017850000000000157, 0.00017848599999999853, 0.0001778340000000017, 0.00017823599999999828, 0.00017733300000000174, 0.00017850000000000157, 0.00017788900000000052, 0.0001781669999999999, 0.00017850000000000157, 0.00017818, 0.00017862499999999823, 0.00017733300000000174, 0.00017783299999999877, 0.00017700000000000007, 0.00017713899999999977, 0.00017800000000000107, 0.00017800000000000107, 0.00017854200000000028, 0.0001786670000000004, 0.00017800000000000107, 0.00017848599999999853, 0.00017769400000000254, 0.0001779860000000015, 0.0001769860000000005, 0.00017844399999999636, 0.0001776669999999994, 0.00017815300000000034]</msg>
<status status="PASS" starttime="20201112 09:54:50.007" endtime="20201112 09:54:50.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.003" endtime="20201112 09:54:50.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.012" endtime="20201112 09:54:50.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.016" endtime="20201112 09:54:50.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.014" endtime="20201112 09:54:50.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.011" endtime="20201112 09:54:50.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.640" endtime="20201112 09:54:50.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.639" endtime="20201112 09:54:50.036"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.045" endtime="20201112 09:54:50.068"></status>
</kw>
<msg timestamp="20201112 09:54:50.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.043" endtime="20201112 09:54:50.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.070" endtime="20201112 09:54:50.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.072" endtime="20201112 09:54:50.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.041" endtime="20201112 09:54:50.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.039" endtime="20201112 09:54:50.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.081" endtime="20201112 09:54:50.368"></status>
</kw>
<msg timestamp="20201112 09:54:50.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.079" endtime="20201112 09:54:50.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.372" endtime="20201112 09:54:50.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.380" endtime="20201112 09:54:50.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.077" endtime="20201112 09:54:50.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.075" endtime="20201112 09:54:50.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.387" level="INFO">${RESULT} = [{'time': 0.022251139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017962499999999923, 'source_diff': 0.00017962499999999923}, {'time': 0.022437139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:50.383" endtime="20201112 09:54:50.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.399" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:50.388" endtime="20201112 09:54:50.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.404" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.403" endtime="20201112 09:54:50.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.406" level="INFO">VALUE: [0.00017962499999999923, 0.0001796809999999975, 0.0001803329999999978, 0.00017898599999999903, 0.00018016599999999897, 0.00017894400000000033, 0.00018065299999999937, 0.00018016699999999844, 0.00018023600000000028, 0.0001799999999999996, 0.0001805000000000001, 0.00017916600000000144, 0.00018016699999999844, 0.00017984700000000034, 0.00017883399999999924, 0.00017924999999999885, 0.0001789999999999986, 0.00018066599999999947, 0.00017968100000000098, 0.00017951399999999867, 0.00018052799999999924, 0.00018006900000000145, 0.00018017999999999854, 0.00017950000000000257, 0.0001801670000000019, 0.00017932000000000017, 0.00017998600000000003, 0.0001794999999999991, 0.00017951399999999867, 0.0001801670000000019, 0.000179486000000003, 0.00017988899999999905, 0.0001789999999999986, 0.0001803329999999978, 0.00018066599999999947, 0.00017951399999999867, 0.00017915300000000134, 0.00018016699999999844, 0.00018004099999999884, 0.00017950000000000257, 0.00017916599999999797, 0.00018051399999999967, 0.00017983400000000024, 0.00018048600000000053, 0.00017944400000000083, 0.00018040199999999965, 0.00017916599999999797, 0.0001791670000000009, 0.0001793329999999968, 0.00017913900000000177]</msg>
<status status="PASS" starttime="20201112 09:54:50.405" endtime="20201112 09:54:50.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.400" endtime="20201112 09:54:50.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.410" endtime="20201112 09:54:50.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.413" endtime="20201112 09:54:50.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.412" endtime="20201112 09:54:50.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.408" endtime="20201112 09:54:50.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.037" endtime="20201112 09:54:50.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.037" endtime="20201112 09:54:50.434"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.443" endtime="20201112 09:54:50.467"></status>
</kw>
<msg timestamp="20201112 09:54:50.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.441" endtime="20201112 09:54:50.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.468" endtime="20201112 09:54:50.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.471" endtime="20201112 09:54:50.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.439" endtime="20201112 09:54:50.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.437" endtime="20201112 09:54:50.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.480" endtime="20201112 09:54:50.766"></status>
</kw>
<msg timestamp="20201112 09:54:50.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.478" endtime="20201112 09:54:50.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.770" endtime="20201112 09:54:50.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.778" endtime="20201112 09:54:50.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.476" endtime="20201112 09:54:50.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.474" endtime="20201112 09:54:50.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.785" level="INFO">${RESULT} = [{'time': 0.022451736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018076399999999992, 'source_diff': 0.00018076399999999992}, {'time': 0.02264775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:50.781" endtime="20201112 09:54:50.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.798" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:50.786" endtime="20201112 09:54:50.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.802" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.801" endtime="20201112 09:54:50.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.805" level="INFO">VALUE: [0.00018076399999999992, 0.00018166699999999994, 0.0001808329999999983, 0.00018216700000000044, 0.0001810000000000006, 0.00018083300000000177, 0.00018184699999999887, 0.0001818329999999993, 0.00018199999999999814, 0.00018216700000000044, 0.00018084700000000134, 0.00018216600000000097, 0.00018084700000000134, 0.0001808190000000022, 0.00018254099999999787, 0.00018216699999999697, 0.00018104199999999931, 0.00018198599999999857, 0.00018198599999999857, 0.00018216700000000044, 0.00018101400000000017, 0.00018266700000000094, 0.00018166600000000047, 0.00018166699999999994, 0.00018133300000000227, 0.0001808199999999982, 0.00018233399999999927, 0.00018147299999999797, 0.00018201400000000117, 0.00018216700000000044, 0.00018148600000000153, 0.00018199999999999814, 0.00018198600000000204, 0.00018266600000000147, 0.00018101400000000017, 0.00018081899999999873, 0.00018233399999999927, 0.00018086199999999691, 0.0001818199999999992, 0.00018248600000000254, 0.0001823329999999998, 0.00018170899999999865, 0.0001818610000000019, 0.00018130499999999966, 0.00018233399999999927, 0.00018184700000000234, 0.00018238900000000502, 0.000181278, 0.00018188899999999758, 0.00018151400000000067]</msg>
<status status="PASS" starttime="20201112 09:54:50.803" endtime="20201112 09:54:50.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.799" endtime="20201112 09:54:50.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.813" endtime="20201112 09:54:50.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.816" endtime="20201112 09:54:50.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.815" endtime="20201112 09:54:50.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.811" endtime="20201112 09:54:50.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.435" endtime="20201112 09:54:50.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.435" endtime="20201112 09:54:50.837"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.846" endtime="20201112 09:54:50.868"></status>
</kw>
<msg timestamp="20201112 09:54:50.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.844" endtime="20201112 09:54:50.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.870" endtime="20201112 09:54:50.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.872" endtime="20201112 09:54:50.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.842" endtime="20201112 09:54:50.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.839" endtime="20201112 09:54:50.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.881" endtime="20201112 09:54:51.169"></status>
</kw>
<msg timestamp="20201112 09:54:51.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.880" endtime="20201112 09:54:51.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.173" endtime="20201112 09:54:51.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.181" endtime="20201112 09:54:51.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.877" endtime="20201112 09:54:51.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.875" endtime="20201112 09:54:51.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.188" level="INFO">${RESULT} = [{'time': 0.022271736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018316700000000144, 'source_diff': 0.00018316700000000144}, {'time': 0.022469778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:51.185" endtime="20201112 09:54:51.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.201" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:51.189" endtime="20201112 09:54:51.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.206" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.205" endtime="20201112 09:54:51.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.208" level="INFO">VALUE: [0.00018316700000000144, 0.0001835139999999992, 0.0001830000000000026, 0.00018426300000000048, 0.00018383299999999783, 0.00018283299999999683, 0.00018431900000000223, 0.00018298599999999957, 0.00018369399999999814, 0.00018288900000000205, 0.0001833330000000008, 0.0001834720000000005, 0.000183875, 0.00018384799999999688, 0.0001830000000000026, 0.00018383299999999783, 0.00018362499999999976, 0.00018348600000000007, 0.00018366699999999847, 0.0001844859999999976, 0.00018400000000000014, 0.00018317999999999807, 0.000182972, 0.00018402799999999928, 0.00018433299999999833, 0.00018347299999999997, 0.00018348699999999954, 0.0001838469999999974, 0.00018470900000000165, 0.0001827780000000015, 0.00018469399999999914, 0.00018443100000000226, 0.00018400000000000014, 0.00018316600000000197, 0.00018381900000000173, 0.00018348600000000007, 0.00018316700000000144, 0.00018319399999999764, 0.00018413899999999983, 0.00018362499999999976, 0.0001846529999999999, 0.0001846810000000025, 0.0001845140000000002, 0.00018281900000000073, 0.00018448600000000107, 0.00018355600000000138, 0.0001838330000000013, 0.0001833339999999968, 0.00018463900000000033, 0.00018431900000000223]</msg>
<status status="PASS" starttime="20201112 09:54:51.207" endtime="20201112 09:54:51.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.202" endtime="20201112 09:54:51.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.212" endtime="20201112 09:54:51.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.215" endtime="20201112 09:54:51.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.214" endtime="20201112 09:54:51.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.210" endtime="20201112 09:54:51.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.838" endtime="20201112 09:54:51.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.837" endtime="20201112 09:54:51.236"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.245" endtime="20201112 09:54:51.269"></status>
</kw>
<msg timestamp="20201112 09:54:51.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.243" endtime="20201112 09:54:51.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.270" endtime="20201112 09:54:51.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.273" endtime="20201112 09:54:51.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.241" endtime="20201112 09:54:51.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.239" endtime="20201112 09:54:51.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.282" endtime="20201112 09:54:51.567"></status>
</kw>
<msg timestamp="20201112 09:54:51.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.280" endtime="20201112 09:54:51.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.572" endtime="20201112 09:54:51.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.579" endtime="20201112 09:54:51.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.277" endtime="20201112 09:54:51.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.276" endtime="20201112 09:54:51.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.586" level="INFO">${RESULT} = [{'time': 0.022700708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001850689999999995, 'source_diff': 0.0001850689999999995}, {'time': 0.02289475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:51.583" endtime="20201112 09:54:51.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.599" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:51.587" endtime="20201112 09:54:51.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.604" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.603" endtime="20201112 09:54:51.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.606" level="INFO">VALUE: [0.0001850689999999995, 0.0001854859999999986, 0.0001858330000000033, 0.00018518099999999954, 0.0001863339999999998, 0.00018669400000000114, 0.0001853469999999989, 0.00018566700000000047, 0.00018516699999999997, 0.00018566700000000047, 0.0001858339999999993, 0.00018483299999999883, 0.00018533299999999933, 0.0001851530000000004, 0.00018573599999999885, 0.00018601399999999824, 0.00018483299999999883, 0.00018573600000000232, 0.0001848469999999984, 0.0001849859999999981, 0.00018500000000000114, 0.00018531999999999924, 0.0001854859999999986, 0.00018583299999999983, 0.00018649999999999917, 0.0001848330000000023, 0.0001858339999999993, 0.0001851530000000004, 0.00018633300000000033, 0.00018549999999999817, 0.00018583299999999983, 0.00018668100000000104, 0.0001851530000000004, 0.00018568000000000057, 0.0001861669999999975, 0.00018633299999999686, 0.00018558299999999958, 0.00018602699999999833, 0.00018501300000000123, 0.00018483299999999883, 0.00018581900000000026, 0.0001859859999999991, 0.00018500000000000114, 0.0001853339999999988, 0.00018620799999999674, 0.00018565200000000143, 0.00018549999999999817, 0.00018501400000000418, 0.00018633399999999634, 0.00018566700000000047]</msg>
<status status="PASS" starttime="20201112 09:54:51.605" endtime="20201112 09:54:51.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.600" endtime="20201112 09:54:51.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.610" endtime="20201112 09:54:51.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.613" endtime="20201112 09:54:51.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.612" endtime="20201112 09:54:51.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.608" endtime="20201112 09:54:51.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.237" endtime="20201112 09:54:51.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.237" endtime="20201112 09:54:51.634"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.643" endtime="20201112 09:54:51.667"></status>
</kw>
<msg timestamp="20201112 09:54:51.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.641" endtime="20201112 09:54:51.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.668" endtime="20201112 09:54:51.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.671" endtime="20201112 09:54:51.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.638" endtime="20201112 09:54:51.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.636" endtime="20201112 09:54:51.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.679" endtime="20201112 09:54:51.966"></status>
</kw>
<msg timestamp="20201112 09:54:51.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:51.678" endtime="20201112 09:54:51.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:51.970" endtime="20201112 09:54:51.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.978" endtime="20201112 09:54:51.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.675" endtime="20201112 09:54:51.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.674" endtime="20201112 09:54:51.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.984" level="INFO">${RESULT} = [{'time': 0.022533431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001869310000000013, 'source_diff': 0.0001869310000000013}, {'time': 0.022731458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:51.981" endtime="20201112 09:54:51.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.997" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:51.985" endtime="20201112 09:54:51.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.002" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.001" endtime="20201112 09:54:52.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.004" level="INFO">VALUE: [0.0001869310000000013, 0.0001873470000000009, 0.0001871660000000025, 0.0001878470000000014, 0.0001884999999999977, 0.0001880279999999998, 0.00018750000000000017, 0.00018762499999999682, 0.00018683300000000083, 0.00018733300000000133, 0.00018865300000000043, 0.00018699999999999967, 0.00018750000000000017, 0.00018718000000000207, 0.0001881669999999995, 0.00018813900000000036, 0.0001881669999999995, 0.0001873470000000009, 0.00018800000000000067, 0.00018747200000000103, 0.0001874860000000006, 0.00018783399999999784, 0.0001883340000000018, 0.00018716599999999903, 0.0001879999999999972, 0.00018783300000000183, 0.00018850000000000117, 0.0001874860000000006, 0.0001868340000000003, 0.00018695800000000096, 0.0001879860000000011, 0.00018818100000000254, 0.00018851400000000074, 0.00018713900000000283, 0.00018816600000000003, 0.00018765199999999996, 0.0001869860000000001, 0.00018682000000000074, 0.00018859700000000215, 0.0001871669999999985, 0.00018800000000000067, 0.00018684699999999693, 0.00018847199999999856, 0.00018699999999999967, 0.0001868340000000003, 0.00018784699999999793, 0.00018745800000000146, 0.0001868330000000043, 0.00018818100000000254, 0.00018866700000000347]</msg>
<status status="PASS" starttime="20201112 09:54:52.003" endtime="20201112 09:54:52.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.998" endtime="20201112 09:54:52.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.008" endtime="20201112 09:54:52.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.011" endtime="20201112 09:54:52.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.010" endtime="20201112 09:54:52.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.006" endtime="20201112 09:54:52.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.635" endtime="20201112 09:54:52.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.634" endtime="20201112 09:54:52.032"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.041" endtime="20201112 09:54:52.065"></status>
</kw>
<msg timestamp="20201112 09:54:52.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.039" endtime="20201112 09:54:52.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.067" endtime="20201112 09:54:52.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.069" endtime="20201112 09:54:52.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.037" endtime="20201112 09:54:52.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.034" endtime="20201112 09:54:52.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.078" endtime="20201112 09:54:52.365"></status>
</kw>
<msg timestamp="20201112 09:54:52.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.077" endtime="20201112 09:54:52.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.369" endtime="20201112 09:54:52.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.377" endtime="20201112 09:54:52.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.074" endtime="20201112 09:54:52.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.073" endtime="20201112 09:54:52.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.384" level="INFO">${RESULT} = [{'time': 0.022617708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001904159999999988, 'source_diff': 0.0001904159999999988}, {'time': 0.02281375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:52.381" endtime="20201112 09:54:52.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.397" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:52.385" endtime="20201112 09:54:52.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.401" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.400" endtime="20201112 09:54:52.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.404" level="INFO">VALUE: [0.0001904159999999988, 0.00018934699999999943, 0.00018900000000000167, 0.00019048599999999666, 0.00019065299999999896, 0.0001896800000000011, 0.00019016600000000203, 0.0001899999999999992, 0.00018983300000000036, 0.0001898479999999994, 0.0001906800000000021, 0.00018916600000000103, 0.00019041699999999828, 0.00019018100000000107, 0.0001898609999999995, 0.0001904999999999997, 0.00018951399999999827, 0.00018933299999999986, 0.0001898190000000008, 0.0001899450000000004, 0.0001891670000000005, 0.00019017999999999813, 0.00019016599999999856, 0.00019069499999999767, 0.0001899580000000005, 0.000189667000000001, 0.0001888059999999997, 0.0001898190000000008, 0.00019047200000000056, 0.000190667000000002, 0.0001895830000000001, 0.00018901399999999777, 0.0001888470000000024, 0.000189360999999999, 0.0001889860000000021, 0.0001898479999999994, 0.00018900000000000167, 0.0001902220000000003, 0.0001904999999999997, 0.00018951399999999827, 0.00019068100000000157, 0.00018883399999999884, 0.0001901670000000015, 0.0001906519999999995, 0.00019016599999999856, 0.0001889860000000021, 0.00018982000000000027, 0.00018986100000000644, 0.0001888200000000062, 0.00018933299999999986]</msg>
<status status="PASS" starttime="20201112 09:54:52.402" endtime="20201112 09:54:52.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.398" endtime="20201112 09:54:52.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.407" endtime="20201112 09:54:52.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.411" endtime="20201112 09:54:52.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.409" endtime="20201112 09:54:52.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.406" endtime="20201112 09:54:52.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.033" endtime="20201112 09:54:52.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.032" endtime="20201112 09:54:52.432"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.440" endtime="20201112 09:54:52.465"></status>
</kw>
<msg timestamp="20201112 09:54:52.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.439" endtime="20201112 09:54:52.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.466" endtime="20201112 09:54:52.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.469" endtime="20201112 09:54:52.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.436" endtime="20201112 09:54:52.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.434" endtime="20201112 09:54:52.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.477" endtime="20201112 09:54:52.765"></status>
</kw>
<msg timestamp="20201112 09:54:52.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.476" endtime="20201112 09:54:52.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.769" endtime="20201112 09:54:52.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.777" endtime="20201112 09:54:52.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.473" endtime="20201112 09:54:52.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.472" endtime="20201112 09:54:52.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.783" level="INFO">${RESULT} = [{'time': 0.022485472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001909159999999993, 'source_diff': 0.0001909159999999993}, {'time': 0.022685486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:52.780" endtime="20201112 09:54:52.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.796" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:52.784" endtime="20201112 09:54:52.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.801" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.800" endtime="20201112 09:54:52.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.803" level="INFO">VALUE: [0.0001909159999999993, 0.00019084700000000093, 0.00019134699999999796, 0.00019152700000000036, 0.0001915000000000007, 0.00019266600000000106, 0.0001923329999999994, 0.00019255599999999998, 0.0001923199999999993, 0.00019115299999999946, 0.0001915000000000007, 0.00019215199999999752, 0.0001918610000000015, 0.00019248599999999866, 0.0001922780000000006, 0.00019266700000000053, 0.0001926659999999976, 0.0001920419999999999, 0.00019198599999999816, 0.00019166699999999953, 0.00019249999999999823, 0.00019120800000000174, 0.0001915000000000007, 0.00019129200000000263, 0.00019166699999999953, 0.00019263899999999792, 0.0001918610000000015, 0.00019084699999999746, 0.00019083300000000136, 0.0001910000000000002, 0.000192055, 0.00019152700000000036, 0.00019129099999999968, 0.00019268000000000063, 0.00019083300000000136, 0.0001913060000000022, 0.00019266700000000053, 0.0001919030000000002, 0.00019101399999999977, 0.00019251400000000127, 0.0001913329999999984, 0.00019098600000000063, 0.00019093100000000182, 0.00019151400000000027, 0.00019083300000000136, 0.0001923190000000033, 0.000192458999999999, 0.00019216700000000003, 0.00019152799999999637, 0.00019083300000000136]</msg>
<status status="PASS" starttime="20201112 09:54:52.802" endtime="20201112 09:54:52.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.797" endtime="20201112 09:54:52.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.807" endtime="20201112 09:54:52.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.810" endtime="20201112 09:54:52.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.809" endtime="20201112 09:54:52.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.805" endtime="20201112 09:54:52.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.432" endtime="20201112 09:54:52.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.432" endtime="20201112 09:54:52.831"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.840" endtime="20201112 09:54:52.864"></status>
</kw>
<msg timestamp="20201112 09:54:52.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.838" endtime="20201112 09:54:52.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.865" endtime="20201112 09:54:52.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.868" endtime="20201112 09:54:52.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.836" endtime="20201112 09:54:52.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.834" endtime="20201112 09:54:52.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.877" endtime="20201112 09:54:53.162"></status>
</kw>
<msg timestamp="20201112 09:54:53.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022830653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.875" endtime="20201112 09:54:53.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022830653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.166" endtime="20201112 09:54:53.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.174" endtime="20201112 09:54:53.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.873" endtime="20201112 09:54:53.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.871" endtime="20201112 09:54:53.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.181" level="INFO">${RESULT} = [{'time': 0.022830653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019459699999999774, 'source_diff': 0.00019459699999999774}, {'time': 0.023032667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:53.178" endtime="20201112 09:54:53.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.194" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:53.182" endtime="20201112 09:54:53.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.198" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.197" endtime="20201112 09:54:53.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.201" level="INFO">VALUE: [0.00019459699999999774, 0.00019366699999999806, 0.00019284699999999946, 0.0001940139999999993, 0.00019384700000000046, 0.0001935139999999988, 0.00019277799999999762, 0.00019333399999999987, 0.00019316600000000156, 0.00019417999999999866, 0.00019415300000000246, 0.00019434800000000044, 0.0001939590000000005, 0.00019279100000000118, 0.00019399999999999973, 0.0001946529999999995, 0.0001935000000000027, 0.00019366699999999806, 0.00019348599999999966, 0.00019463899999999992, 0.00019333299999999692, 0.0001933200000000003, 0.00019468099999999863, 0.00019334699999999996, 0.00019381899999999785, 0.00019305600000000048, 0.00019316700000000103, 0.0001935139999999988, 0.0001931810000000006, 0.00019376399999999905, 0.00019374999999999948, 0.0001928610000000025, 0.00019450000000000023, 0.00019366699999999806, 0.00019450000000000023, 0.00019348599999999966, 0.0001933330000000004, 0.00019284699999999946, 0.00019349999999999923, 0.00019395800000000102, 0.00019415199999999952, 0.0001933330000000004, 0.00019399999999999973, 0.00019448600000000066, 0.00019316700000000103, 0.00019315199999999505, 0.00019383299999999742, 0.00019365299999999502, 0.0001930139999999983, 0.00019399999999999973]</msg>
<status status="PASS" starttime="20201112 09:54:53.200" endtime="20201112 09:54:53.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.195" endtime="20201112 09:54:53.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.205" endtime="20201112 09:54:53.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.208" endtime="20201112 09:54:53.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.206" endtime="20201112 09:54:53.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.203" endtime="20201112 09:54:53.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.832" endtime="20201112 09:54:53.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.831" endtime="20201112 09:54:53.229"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.237" endtime="20201112 09:54:53.262"></status>
</kw>
<msg timestamp="20201112 09:54:53.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.236" endtime="20201112 09:54:53.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.263" endtime="20201112 09:54:53.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.266" endtime="20201112 09:54:53.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.233" endtime="20201112 09:54:53.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.231" endtime="20201112 09:54:53.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.275" endtime="20201112 09:54:53.561"></status>
</kw>
<msg timestamp="20201112 09:54:53.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.273" endtime="20201112 09:54:53.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.565" endtime="20201112 09:54:53.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.573" endtime="20201112 09:54:53.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.271" endtime="20201112 09:54:53.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.269" endtime="20201112 09:54:53.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.580" level="INFO">${RESULT} = [{'time': 0.022427986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019580500000000028, 'source_diff': 0.00019580500000000028}, {'time': 0.022635958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:53.577" endtime="20201112 09:54:53.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.593" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:53.581" endtime="20201112 09:54:53.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.597" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.596" endtime="20201112 09:54:53.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.600" level="INFO">VALUE: [0.00019580500000000028, 0.0001953330000000024, 0.00019565299999999702, 0.00019651399999999833, 0.00019566700000000006, 0.0001958200000000028, 0.00019488900000000017, 0.0001958750000000016, 0.0001950689999999991, 0.00019604100000000096, 0.0001949729999999976, 0.00019500000000000073, 0.00019583299999999942, 0.0001950140000000003, 0.00019583299999999942, 0.00019631999999999983, 0.00019551399999999733, 0.0001950140000000003, 0.0001966530000000015, 0.0001958330000000029, 0.00019499999999999726, 0.0001953200000000023, 0.0001951660000000001, 0.00019658399999999965, 0.00019568099999999963, 0.00019561100000000178, 0.00019604200000000044, 0.00019650000000000223, 0.00019583299999999942, 0.00019633299999999992, 0.00019497199999999812, 0.00019566700000000006, 0.00019548600000000166, 0.00019534700000000196, 0.00019631900000000035, 0.00019649999999999876, 0.00019500000000000073, 0.00019483400000000137, 0.00019500000000000073, 0.0001955140000000008, 0.00019516700000000303, 0.00019550000000000123, 0.00019517999999999966, 0.00019581899999999985, 0.00019600000000000173, 0.00019533299999999892, 0.00019633299999999992, 0.00019483400000000484, 0.0001954160000000038, 0.00019633299999999992]</msg>
<status status="PASS" starttime="20201112 09:54:53.599" endtime="20201112 09:54:53.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.594" endtime="20201112 09:54:53.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.603" endtime="20201112 09:54:53.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.607" endtime="20201112 09:54:53.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.605" endtime="20201112 09:54:53.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.602" endtime="20201112 09:54:53.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.230" endtime="20201112 09:54:53.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.229" endtime="20201112 09:54:53.628"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.636" endtime="20201112 09:54:53.661"></status>
</kw>
<msg timestamp="20201112 09:54:53.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.635" endtime="20201112 09:54:53.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.662" endtime="20201112 09:54:53.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.665" endtime="20201112 09:54:53.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.632" endtime="20201112 09:54:53.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.630" endtime="20201112 09:54:53.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.674" endtime="20201112 09:54:53.960"></status>
</kw>
<msg timestamp="20201112 09:54:53.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.672" endtime="20201112 09:54:53.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.964" endtime="20201112 09:54:53.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.972" endtime="20201112 09:54:53.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.669" endtime="20201112 09:54:53.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.668" endtime="20201112 09:54:53.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.978" level="INFO">${RESULT} = [{'time': 0.022194403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019808400000000115, 'source_diff': 0.00019808400000000115}, {'time': 0.022400431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:53.975" endtime="20201112 09:54:53.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.992" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:53.979" endtime="20201112 09:54:53.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.996" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.995" endtime="20201112 09:54:53.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.998" level="INFO">VALUE: [0.00019808400000000115, 0.00019712499999999938, 0.00019762499999999988, 0.00019770799999999783, 0.0001973889999999992, 0.0001981669999999991, 0.0001981669999999991, 0.00019700000000000273, 0.00019800000000000026, 0.00019681899999999738, 0.0001986669999999996, 0.00019766700000000206, 0.0001969859999999997, 0.00019766599999999912, 0.00019711099999999981, 0.00019749999999999976, 0.0001974860000000002, 0.00019751299999999986, 0.00019718000000000166, 0.00019831899999999889, 0.00019863900000000045, 0.00019831999999999836, 0.0001968339999999999, 0.00019740299999999877, 0.00019765299999999902, 0.00019865300000000002, 0.00019736199999999954, 0.00019800000000000026, 0.00019800000000000026, 0.0001980279999999994, 0.00019833299999999845, 0.00019733300000000092, 0.0001968339999999999, 0.00019733300000000092, 0.0001983470000000015, 0.00019834699999999802, 0.00019732000000000083, 0.00019815299999999952, 0.00019781999999999786, 0.00019713900000000242, 0.00019850000000000076, 0.00019675000000000248, 0.00019766700000000206, 0.00019716700000000156, 0.00019750000000000323, 0.0001983470000000015, 0.0001981669999999991, 0.0001979999999999968, 0.00019768099999999816, 0.00019718000000000513]</msg>
<status status="PASS" starttime="20201112 09:54:53.997" endtime="20201112 09:54:53.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.992" endtime="20201112 09:54:54.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.002" endtime="20201112 09:54:54.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.006" endtime="20201112 09:54:54.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.004" endtime="20201112 09:54:54.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.001" endtime="20201112 09:54:54.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.628" endtime="20201112 09:54:54.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.628" endtime="20201112 09:54:54.026"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.035" endtime="20201112 09:54:54.060"></status>
</kw>
<msg timestamp="20201112 09:54:54.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.033" endtime="20201112 09:54:54.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.061" endtime="20201112 09:54:54.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.063" endtime="20201112 09:54:54.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.031" endtime="20201112 09:54:54.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.029" endtime="20201112 09:54:54.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.072" endtime="20201112 09:54:54.360"></status>
</kw>
<msg timestamp="20201112 09:54:54.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:54.071" endtime="20201112 09:54:54.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:54.364" endtime="20201112 09:54:54.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.372" endtime="20201112 09:54:54.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.068" endtime="20201112 09:54:54.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.067" endtime="20201112 09:54:54.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.379" level="INFO">${RESULT} = [{'time': 0.022201, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020002799999999793, 'source_diff': 0.00020002799999999793}, {'time': 0.022407028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:54.376" endtime="20201112 09:54:54.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.392" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:54.380" endtime="20201112 09:54:54.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.396" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.395" endtime="20201112 09:54:54.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.399" level="INFO">VALUE: [0.00020002799999999793, 0.00020066699999999812, 0.00019887499999999766, 0.0001997630000000021, 0.00020033300000000046, 0.00020033300000000046, 0.0001998609999999991, 0.00019948599999999872, 0.00020042999999999797, 0.0001996800000000007, 0.00020051399999999886, 0.00019998599999999922, 0.00019965300000000102, 0.00019933299999999946, 0.000198847000000002, 0.0001989860000000017, 0.00019948599999999872, 0.0001999860000000027, 0.00019950000000000176, 0.00020033300000000046, 0.00019883299999999896, 0.00020065299999999855, 0.00019884800000000147, 0.00020066699999999812, 0.0002004999999999993, 0.00020033299999999699, 0.00019900000000000126, 0.0001996670000000006, 0.00020054200000000147, 0.00019916600000000062, 0.00019898599999999822, 0.0001991670000000001, 0.0001999999999999988, 0.0001996670000000006, 0.00019933299999999946, 0.00020066600000000212, 0.00019965300000000102, 0.00020069500000000073, 0.00020001400000000183, 0.00019948599999999872, 0.00019883299999999896, 0.0002001670000000011, 0.00020016699999999762, 0.00020051399999999886, 0.0002007359999999965, 0.00019916600000000062, 0.0001994999999999983, 0.0001989999999999978, 0.0002000839999999962, 0.00020000000000000573]</msg>
<status status="PASS" starttime="20201112 09:54:54.397" endtime="20201112 09:54:54.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.393" endtime="20201112 09:54:54.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.402" endtime="20201112 09:54:54.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.406" endtime="20201112 09:54:54.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.404" endtime="20201112 09:54:54.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.401" endtime="20201112 09:54:54.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.027" endtime="20201112 09:54:54.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.027" endtime="20201112 09:54:54.426"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.435" endtime="20201112 09:54:54.460"></status>
</kw>
<msg timestamp="20201112 09:54:54.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.433" endtime="20201112 09:54:54.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.461" endtime="20201112 09:54:54.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.464" endtime="20201112 09:54:54.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.431" endtime="20201112 09:54:54.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.429" endtime="20201112 09:54:54.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.473" endtime="20201112 09:54:54.759"></status>
</kw>
<msg timestamp="20201112 09:54:54.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.471" endtime="20201112 09:54:54.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.763" endtime="20201112 09:54:54.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.771" endtime="20201112 09:54:54.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.469" endtime="20201112 09:54:54.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.467" endtime="20201112 09:54:54.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.778" level="INFO">${RESULT} = [{'time': 0.022311889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020159700000000128, 'source_diff': 0.00020159700000000128}, {'time': 0.022523931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:54.774" endtime="20201112 09:54:54.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.790" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:54.779" endtime="20201112 09:54:54.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.795" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.794" endtime="20201112 09:54:54.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.797" level="INFO">VALUE: [0.00020159700000000128, 0.00020202799999999993, 0.0002019870000000007, 0.0002021939999999993, 0.0002009999999999998, 0.0002020000000000008, 0.00020145900000000105, 0.00020212500000000092, 0.00020198600000000122, 0.00020154200000000247, 0.00020115299999999905, 0.00020151399999999986, 0.0002015000000000003, 0.00020083300000000096, 0.00020116599999999915, 0.0002009999999999998, 0.00020233300000000246, 0.00020183399999999796, 0.00020166599999999965, 0.00020263900000000099, 0.00020233299999999899, 0.00020166699999999912, 0.00020216699999999962, 0.0002024870000000012, 0.00020163899999999998, 0.00020248599999999825, 0.0002013060000000018, 0.00020183400000000143, 0.00020083400000000043, 0.00020266600000000065, 0.00020097200000000065, 0.00020165299999999955, 0.0002026939999999998, 0.0002008610000000001, 0.00020213900000000048, 0.00020133299999999799, 0.00020183299999999849, 0.00020115299999999905, 0.0002015000000000003, 0.000202138000000001, 0.00020166599999999965, 0.00020133300000000146, 0.00020133400000000093, 0.000201848000000001, 0.00020165200000000355, 0.0002021800000000032, 0.00020218100000000266, 0.00020183299999999849, 0.0002011800000000022, 0.0002026800000000037]</msg>
<status status="PASS" starttime="20201112 09:54:54.796" endtime="20201112 09:54:54.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.791" endtime="20201112 09:54:54.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.801" endtime="20201112 09:54:54.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.805" endtime="20201112 09:54:54.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.803" endtime="20201112 09:54:54.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.799" endtime="20201112 09:54:54.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.427" endtime="20201112 09:54:54.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.427" endtime="20201112 09:54:54.825"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.834" endtime="20201112 09:54:54.859"></status>
</kw>
<msg timestamp="20201112 09:54:54.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.832" endtime="20201112 09:54:54.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.860" endtime="20201112 09:54:54.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.863" endtime="20201112 09:54:54.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.830" endtime="20201112 09:54:54.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.828" endtime="20201112 09:54:54.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.872" endtime="20201112 09:54:55.159"></status>
</kw>
<msg timestamp="20201112 09:54:55.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.870" endtime="20201112 09:54:55.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.163" endtime="20201112 09:54:55.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.171" endtime="20201112 09:54:55.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.867" endtime="20201112 09:54:55.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.866" endtime="20201112 09:54:55.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.177" level="INFO">${RESULT} = [{'time': 0.022322333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020343000000000097, 'source_diff': 0.00020343000000000097}, {'time': 0.022534333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:55.174" endtime="20201112 09:54:55.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.190" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:55.178" endtime="20201112 09:54:55.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.195" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.194" endtime="20201112 09:54:55.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.197" level="INFO">VALUE: [0.00020343000000000097, 0.0002041519999999991, 0.00020348600000000272, 0.00020466700000000213, 0.0002030139999999979, 0.00020352700000000196, 0.00020316600000000115, 0.0002046810000000017, 0.00020399999999999932, 0.0002028199999999994, 0.0002033199999999999, 0.00020413899999999902, 0.00020283299999999949, 0.00020433299999999752, 0.0002033480000000025, 0.00020449999999999982, 0.00020402800000000193, 0.00020383300000000049, 0.00020416700000000162, 0.00020333399999999946, 0.00020351400000000186, 0.00020448600000000025, 0.00020449999999999982, 0.00020315300000000105, 0.0002046949999999978, 0.0002028199999999994, 0.00020383300000000049, 0.00020331900000000042, 0.0002033610000000026, 0.00020334699999999956, 0.0002035139999999984, 0.00020381900000000092, 0.0002030000000000018, 0.0002036810000000007, 0.00020349999999999882, 0.00020366700000000112, 0.00020316600000000115, 0.00020434700000000056, 0.00020281899999999992, 0.00020284699999999906, 0.0002028199999999994, 0.0002043469999999971, 0.00020433300000000099, 0.00020466699999999866, 0.0002046949999999978, 0.0002035000000000023, 0.0002040000000000028, 0.00020416599999999868, 0.00020449999999999635, 0.00020356900000000067]</msg>
<status status="PASS" starttime="20201112 09:54:55.196" endtime="20201112 09:54:55.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.191" endtime="20201112 09:54:55.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.201" endtime="20201112 09:54:55.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.205" endtime="20201112 09:54:55.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.203" endtime="20201112 09:54:55.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.199" endtime="20201112 09:54:55.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.826" endtime="20201112 09:54:55.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.826" endtime="20201112 09:54:55.225"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.234" endtime="20201112 09:54:55.259"></status>
</kw>
<msg timestamp="20201112 09:54:55.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.232" endtime="20201112 09:54:55.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.261" endtime="20201112 09:54:55.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.263" endtime="20201112 09:54:55.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.230" endtime="20201112 09:54:55.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.228" endtime="20201112 09:54:55.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.272" endtime="20201112 09:54:55.558"></status>
</kw>
<msg timestamp="20201112 09:54:55.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.270" endtime="20201112 09:54:55.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.562" endtime="20201112 09:54:55.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.570" endtime="20201112 09:54:55.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.268" endtime="20201112 09:54:55.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.266" endtime="20201112 09:54:55.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.576" level="INFO">${RESULT} = [{'time': 0.022388806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002057780000000002, 'source_diff': 0.0002057780000000002}, {'time': 0.022600847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:55.573" endtime="20201112 09:54:55.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.589" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:55.577" endtime="20201112 09:54:55.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.593" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.592" endtime="20201112 09:54:55.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.596" level="INFO">VALUE: [0.0002057780000000002, 0.0002067079999999999, 0.0002061520000000011, 0.0002061949999999993, 0.00020566699999999966, 0.000205333999999998, 0.00020500000000000032, 0.00020533300000000199, 0.00020640299999999737, 0.00020583299999999902, 0.00020500000000000032, 0.00020616700000000016, 0.00020599999999999785, 0.0002066659999999977, 0.00020599999999999785, 0.00020652800000000096, 0.00020501300000000042, 0.00020668000000000075, 0.00020600000000000132, 0.00020600000000000132, 0.00020602800000000046, 0.00020668000000000075, 0.00020567999999999975, 0.0002050139999999999, 0.0002060140000000009, 0.00020649999999999835, 0.00020601299999999795, 0.00020550000000000082, 0.00020566699999999966, 0.00020631899999999995, 0.00020584800000000153, 0.00020583400000000196, 0.00020516599999999968, 0.00020484700000000106, 0.00020600000000000132, 0.00020533400000000146, 0.00020550000000000082, 0.00020668000000000075, 0.00020561100000000138, 0.00020633299999999952, 0.00020550000000000082, 0.0002058339999999985, 0.00020599999999999785, 0.00020593, 0.00020481900000000192, 0.00020483300000000149, 0.00020548600000000472, 0.00020633299999999605, 0.00020618000000000025, 0.00020536100000000113]</msg>
<status status="PASS" starttime="20201112 09:54:55.595" endtime="20201112 09:54:55.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.590" endtime="20201112 09:54:55.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.600" endtime="20201112 09:54:55.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.603" endtime="20201112 09:54:55.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.602" endtime="20201112 09:54:55.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.598" endtime="20201112 09:54:55.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.226" endtime="20201112 09:54:55.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.226" endtime="20201112 09:54:55.624"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.632" endtime="20201112 09:54:55.659"></status>
</kw>
<msg timestamp="20201112 09:54:55.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.631" endtime="20201112 09:54:55.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.660" endtime="20201112 09:54:55.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.663" endtime="20201112 09:54:55.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.628" endtime="20201112 09:54:55.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.626" endtime="20201112 09:54:55.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.672" endtime="20201112 09:54:55.959"></status>
</kw>
<msg timestamp="20201112 09:54:55.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.670" endtime="20201112 09:54:55.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.963" endtime="20201112 09:54:55.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.971" endtime="20201112 09:54:55.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.668" endtime="20201112 09:54:55.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.666" endtime="20201112 09:54:55.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.978" level="INFO">${RESULT} = [{'time': 0.022298042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002074170000000014, 'source_diff': 0.0002074170000000014}, {'time': 0.022514111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:55.975" endtime="20201112 09:54:55.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.991" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:55.979" endtime="20201112 09:54:55.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.995" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.994" endtime="20201112 09:54:55.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.998" level="INFO">VALUE: [0.0002074170000000014, 0.0002086669999999992, 0.00020802800000000246, 0.00020702800000000146, 0.00020683300000000002, 0.000208334000000001, 0.00020768099999999776, 0.0002073470000000001, 0.00020833300000000152, 0.0002069719999999997, 0.00020766700000000166, 0.00020831999999999795, 0.00020750000000000282, 0.00020801399999999942, 0.0002075560000000011, 0.0002080409999999991, 0.0002085279999999995, 0.00020766600000000218, 0.0002076659999999987, 0.00020866700000000266, 0.000208334000000001, 0.0002077080000000009, 0.00020850000000000035, 0.0002073470000000001, 0.0002086669999999992, 0.00020729200000000128, 0.00020712500000000245, 0.0002076659999999987, 0.0002078470000000006, 0.00020718100000000073, 0.00020834699999999762, 0.00020795900000000062, 0.00020704200000000103, 0.00020754200000000153, 0.00020749999999999935, 0.0002068339999999995, 0.00020747299999999969, 0.0002076659999999987, 0.0002080140000000029, 0.0002075140000000024, 0.00020856899999999873, 0.00020748599999999978, 0.00020698599999999928, 0.00020766599999999524, 0.00020683300000000349, 0.00020840199999999642, 0.00020701399999999842, 0.00020833300000000499, 0.00020833299999999805, 0.00020784699999999712]</msg>
<status status="PASS" starttime="20201112 09:54:55.996" endtime="20201112 09:54:55.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.992" endtime="20201112 09:54:55.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.001" endtime="20201112 09:54:56.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.005" endtime="20201112 09:54:56.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.003" endtime="20201112 09:54:56.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.000" endtime="20201112 09:54:56.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.625" endtime="20201112 09:54:56.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.624" endtime="20201112 09:54:56.026"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.034" endtime="20201112 09:54:56.060"></status>
</kw>
<msg timestamp="20201112 09:54:56.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.033" endtime="20201112 09:54:56.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.061" endtime="20201112 09:54:56.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.064" endtime="20201112 09:54:56.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.030" endtime="20201112 09:54:56.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.028" endtime="20201112 09:54:56.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.073" endtime="20201112 09:54:56.365"></status>
</kw>
<msg timestamp="20201112 09:54:56.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:56.071" endtime="20201112 09:54:56.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:56.369" endtime="20201112 09:54:56.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.377" endtime="20201112 09:54:56.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.068" endtime="20201112 09:54:56.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.067" endtime="20201112 09:54:56.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.384" level="INFO">${RESULT} = [{'time': 0.022697903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002099029999999974, 'source_diff': 0.0002099029999999974}, {'time': 0.022915944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:56.381" endtime="20201112 09:54:56.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.397" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:56.385" endtime="20201112 09:54:56.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.401" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.400" endtime="20201112 09:54:56.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.404" level="INFO">VALUE: [0.0002099029999999974, 0.00020883300000000202, 0.00021019400000000035, 0.00021001400000000142, 0.00021034699999999962, 0.0002101809999999968, 0.00020948700000000126, 0.00020951400000000092, 0.00020965300000000062, 0.00020884699999999812, 0.00020951400000000092, 0.00021036100000000266, 0.0002091660000000002, 0.0002101670000000007, 0.0002102219999999995, 0.0002101670000000007, 0.00021051299999999898, 0.0002096660000000007, 0.00020883299999999855, 0.00021068100000000076, 0.00021018100000000026, 0.0002106670000000012, 0.00020966599999999724, 0.00021066699999999772, 0.00021048600000000278, 0.00021018100000000026, 0.0002088340000000015, 0.00020933299999999905, 0.0002101670000000007, 0.00020968099999999976, 0.00020966699999999672, 0.0002098609999999987, 0.0002101660000000012, 0.00020899999999999738, 0.00020981999999999945, 0.00021050000000000235, 0.00021001299999999848, 0.00020993000000000053, 0.00020898600000000128, 0.0002104859999999993, 0.00020884700000000506, 0.00021016599999999774, 0.00021051400000000192, 0.00020913899999999708, 0.00021066700000000466, 0.00021016700000000416, 0.0002104999999999954, 0.00021069399999999738, 0.00020965299999999715, 0.00020956899999999973]</msg>
<status status="PASS" starttime="20201112 09:54:56.402" endtime="20201112 09:54:56.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.398" endtime="20201112 09:54:56.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.407" endtime="20201112 09:54:56.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.411" endtime="20201112 09:54:56.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.409" endtime="20201112 09:54:56.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.406" endtime="20201112 09:54:56.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.026" endtime="20201112 09:54:56.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.026" endtime="20201112 09:54:56.432"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.440" endtime="20201112 09:54:56.466"></status>
</kw>
<msg timestamp="20201112 09:54:56.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.439" endtime="20201112 09:54:56.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.467" endtime="20201112 09:54:56.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.470" endtime="20201112 09:54:56.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.436" endtime="20201112 09:54:56.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.434" endtime="20201112 09:54:56.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.478" endtime="20201112 09:54:56.766"></status>
</kw>
<msg timestamp="20201112 09:54:56.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.477" endtime="20201112 09:54:56.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.770" endtime="20201112 09:54:56.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.778" endtime="20201112 09:54:56.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.474" endtime="20201112 09:54:56.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.473" endtime="20201112 09:54:56.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.785" level="INFO">${RESULT} = [{'time': 0.022496333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021190199999999992, 'source_diff': 0.00021190199999999992}, {'time': 0.022718361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:56.781" endtime="20201112 09:54:56.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.798" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:56.786" endtime="20201112 09:54:56.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.802" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.801" endtime="20201112 09:54:56.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.805" level="INFO">VALUE: [0.00021190199999999992, 0.00021216699999999922, 0.00021165300000000262, 0.00021237500000000076, 0.00021182000000000145, 0.00021183300000000155, 0.00021244399999999913, 0.00021209700000000137, 0.00021254100000000012, 0.00021184699999999765, 0.00021215299999999965, 0.00021234699999999815, 0.00021202799999999952, 0.00021233399999999805, 0.00021201399999999995, 0.00021186099999999722, 0.00021099999999999938, 0.00021138899999999933, 0.00021133399999999705, 0.00021230499999999944, 0.00021083299999999708, 0.00021151399999999945, 0.00021134700000000062, 0.00021133400000000052, 0.0002119860000000008, 0.0002111660000000022, 0.00021200000000000038, 0.00021152799999999902, 0.0002109029999999984, 0.00021256999999999873, 0.00021168000000000228, 0.00021090199999999892, 0.00021084700000000012, 0.0002126809999999993, 0.00021081900000000098, 0.00021266699999999972, 0.00021099999999999938, 0.00021101399999999895, 0.00021268100000000276, 0.00021218000000000278, 0.0002111670000000017, 0.00021181900000000198, 0.00021150000000000335, 0.00021194500000000505, 0.00021217999999999931, 0.00021217999999999931, 0.00021230599999999544, 0.00021133400000000052, 0.00021267999999999981, 0.00021181900000000198]</msg>
<status status="PASS" starttime="20201112 09:54:56.803" endtime="20201112 09:54:56.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.799" endtime="20201112 09:54:56.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.808" endtime="20201112 09:54:56.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.812" endtime="20201112 09:54:56.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.810" endtime="20201112 09:54:56.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.807" endtime="20201112 09:54:56.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.432" endtime="20201112 09:54:56.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.432" endtime="20201112 09:54:56.832"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.841" endtime="20201112 09:54:56.867"></status>
</kw>
<msg timestamp="20201112 09:54:56.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.840" endtime="20201112 09:54:56.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.868" endtime="20201112 09:54:56.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.871" endtime="20201112 09:54:56.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.837" endtime="20201112 09:54:56.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.835" endtime="20201112 09:54:56.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.879" endtime="20201112 09:54:57.166"></status>
</kw>
<msg timestamp="20201112 09:54:57.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.878" endtime="20201112 09:54:57.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.170" endtime="20201112 09:54:57.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.178" endtime="20201112 09:54:57.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.875" endtime="20201112 09:54:57.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.874" endtime="20201112 09:54:57.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.184" level="INFO">${RESULT} = [{'time': 0.022486792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021376399999999823, 'source_diff': 0.00021376399999999823}, {'time': 0.022706792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:57.181" endtime="20201112 09:54:57.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.198" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:57.185" endtime="20201112 09:54:57.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.202" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.201" endtime="20201112 09:54:57.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.205" level="INFO">VALUE: [0.00021376399999999823, 0.0002134449999999996, 0.0002144999999999994, 0.00021467999999999834, 0.00021415299999999818, 0.00021381999999999998, 0.00021359800000000234, 0.00021466600000000224, 0.00021366600000000124, 0.00021469500000000086, 0.00021466699999999825, 0.0002139999999999989, 0.00021334700000000262, 0.00021366600000000124, 0.00021315299999999718, 0.00021381999999999998, 0.00021384799999999912, 0.0002131519999999977, 0.00021462499999999954, 0.0002137640000000017, 0.00021451399999999898, 0.00021316600000000074, 0.00021434700000000015, 0.00021333299999999958, 0.00021384699999999965, 0.00021283399999999855, 0.00021433400000000005, 0.00021316600000000074, 0.0002144999999999994, 0.0002144999999999994, 0.00021301400000000095, 0.00021398699999999882, 0.00021433300000000058, 0.00021448599999999984, 0.00021465299999999868, 0.0002133749999999983, 0.00021283299999999908, 0.00021447200000000027, 0.00021401399999999848, 0.00021451399999999898, 0.00021400000000000238, 0.00021455600000000463, 0.00021365300000000115, 0.00021390200000000192, 0.00021372199999999952, 0.00021383399999999608, 0.00021465199999999574, 0.0002142359999999996, 0.0002136810000000003, 0.00021397199999999977]</msg>
<status status="PASS" starttime="20201112 09:54:57.203" endtime="20201112 09:54:57.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.198" endtime="20201112 09:54:57.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.208" endtime="20201112 09:54:57.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.212" endtime="20201112 09:54:57.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.210" endtime="20201112 09:54:57.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.207" endtime="20201112 09:54:57.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.833" endtime="20201112 09:54:57.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.833" endtime="20201112 09:54:57.232"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.241" endtime="20201112 09:54:57.266"></status>
</kw>
<msg timestamp="20201112 09:54:57.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.240" endtime="20201112 09:54:57.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.268" endtime="20201112 09:54:57.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.270" endtime="20201112 09:54:57.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.237" endtime="20201112 09:54:57.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.235" endtime="20201112 09:54:57.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.280" endtime="20201112 09:54:57.568"></status>
</kw>
<msg timestamp="20201112 09:54:57.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:57.278" endtime="20201112 09:54:57.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:57.572" endtime="20201112 09:54:57.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.580" endtime="20201112 09:54:57.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.275" endtime="20201112 09:54:57.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.274" endtime="20201112 09:54:57.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.586" level="INFO">${RESULT} = [{'time': 0.022437083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021608299999999886, 'source_diff': 0.00021608299999999886}, {'time': 0.022657111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:57.583" endtime="20201112 09:54:57.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.644" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:57.587" endtime="20201112 09:54:57.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.649" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.647" endtime="20201112 09:54:57.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.651" level="INFO">VALUE: [0.00021608299999999886, 0.00021515299999999918, 0.00021548600000000084, 0.0002159589999999982, 0.00021595799999999873, 0.00021612500000000104, 0.0002163329999999991, 0.00021666700000000025, 0.0002165000000000014, 0.00021501399999999948, 0.00021666600000000077, 0.0002165000000000014, 0.00021502799999999905, 0.00021630599999999944, 0.00021516599999999927, 0.0002166659999999973, 0.00021663899999999764, 0.0002152779999999993, 0.00021516700000000222, 0.0002166390000000011, 0.00021658299999999936, 0.00021616699999999975, 0.0002155000000000004, 0.00021634699999999868, 0.00021583300000000208, 0.00021598600000000134, 0.0002160000000000009, 0.0002156810000000023, 0.0002148329999999976, 0.00021534700000000115, 0.00021515299999999918, 0.00021486100000000022, 0.00021483400000000055, 0.00021602800000000005, 0.00021594499999999864, 0.00021584700000000165, 0.00021666700000000025, 0.00021484800000000012, 0.0002153329999999981, 0.00021548600000000084, 0.00021534699999999768, 0.00021565300000000315, 0.00021566700000000272, 0.0002153329999999981, 0.00021563900000000358, 0.0002166810000000033, 0.0002149999999999999, 0.00021612499999999757, 0.0002148610000000037, 0.00021486099999999675]</msg>
<status status="PASS" starttime="20201112 09:54:57.650" endtime="20201112 09:54:57.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.645" endtime="20201112 09:54:57.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.655" endtime="20201112 09:54:57.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.658" endtime="20201112 09:54:57.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.657" endtime="20201112 09:54:57.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.653" endtime="20201112 09:54:57.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.233" endtime="20201112 09:54:57.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.233" endtime="20201112 09:54:57.679"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.688" endtime="20201112 09:54:57.713"></status>
</kw>
<msg timestamp="20201112 09:54:57.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.686" endtime="20201112 09:54:57.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.714" endtime="20201112 09:54:57.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.717" endtime="20201112 09:54:57.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.683" endtime="20201112 09:54:57.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.681" endtime="20201112 09:54:57.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.726" endtime="20201112 09:54:58.011"></status>
</kw>
<msg timestamp="20201112 09:54:58.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.724" endtime="20201112 09:54:58.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.015" endtime="20201112 09:54:58.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.023" endtime="20201112 09:54:58.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.722" endtime="20201112 09:54:58.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.720" endtime="20201112 09:54:58.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.029" level="INFO">${RESULT} = [{'time': 0.022841361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000217417000000001, 'source_diff': 0.000217417000000001}, {'time': 0.023065389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:58.026" endtime="20201112 09:54:58.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.042" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:58.030" endtime="20201112 09:54:58.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.047" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.046" endtime="20201112 09:54:58.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.049" level="INFO">VALUE: [0.000217417000000001, 0.0002176529999999982, 0.00021816699999999828, 0.00021768000000000134, 0.00021748599999999937, 0.00021868099999999835, 0.00021759699999999993, 0.0002178620000000027, 0.00021731900000000054, 0.00021695799999999973, 0.0002177780000000018, 0.00021783400000000008, 0.00021816699999999828, 0.0002173330000000001, 0.00021799999999999944, 0.0002178330000000006, 0.00021716699999999728, 0.00021851399999999951, 0.00021801399999999901, 0.00021786099999999975, 0.00021851399999999951, 0.0002174309999999971, 0.00021765300000000168, 0.00021716600000000127, 0.00021818100000000132, 0.00021801400000000248, 0.00021768100000000082, 0.00021699999999999844, 0.00021749999999999894, 0.00021784700000000018, 0.00021768100000000082, 0.00021751399999999851, 0.00021766600000000177, 0.00021716700000000075, 0.00021768100000000082, 0.000218320000000001, 0.00021679200000000037, 0.00021801399999999901, 0.00021730500000000097, 0.00021866700000000572, 0.00021768099999999735, 0.0002182360000000036, 0.00021851399999999604, 0.00021851400000000298, 0.00021683399999999908, 0.00021834800000000015, 0.0002171659999999978, 0.0002178889999999989, 0.00021750000000000241, 0.00021866699999999878]</msg>
<status status="PASS" starttime="20201112 09:54:58.048" endtime="20201112 09:54:58.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.043" endtime="20201112 09:54:58.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.053" endtime="20201112 09:54:58.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.056" endtime="20201112 09:54:58.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.055" endtime="20201112 09:54:58.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.051" endtime="20201112 09:54:58.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.680" endtime="20201112 09:54:58.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.679" endtime="20201112 09:54:58.077"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.086" endtime="20201112 09:54:58.111"></status>
</kw>
<msg timestamp="20201112 09:54:58.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.085" endtime="20201112 09:54:58.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.113" endtime="20201112 09:54:58.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.115" endtime="20201112 09:54:58.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.082" endtime="20201112 09:54:58.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.080" endtime="20201112 09:54:58.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.124" endtime="20201112 09:54:58.410"></status>
</kw>
<msg timestamp="20201112 09:54:58.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023114778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.123" endtime="20201112 09:54:58.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023114778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.414" endtime="20201112 09:54:58.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.422" endtime="20201112 09:54:58.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.120" endtime="20201112 09:54:58.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.118" endtime="20201112 09:54:58.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.429" level="INFO">${RESULT} = [{'time': 0.023114778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021941699999999953, 'source_diff': 0.00021941699999999953}, {'time': 0.023340806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:58.425" endtime="20201112 09:54:58.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.442" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:58.430" endtime="20201112 09:54:58.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.446" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.445" endtime="20201112 09:54:58.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.449" level="INFO">VALUE: [0.00021941699999999953, 0.00021881999999999804, 0.00021933299999999864, 0.00021950000000000094, 0.00021900000000000044, 0.00022049999999999847, 0.00021951399999999704, 0.00021902799999999958, 0.00021988899999999742, 0.00022016700000000028, 0.00021986099999999828, 0.00021900000000000044, 0.0002198469999999987, 0.00022033299999999964, 0.0002196530000000002, 0.00021950000000000094, 0.00022024999999999822, 0.00021933299999999864, 0.00021902799999999958, 0.00021901400000000001, 0.0002201660000000008, 0.00022013900000000114, 0.0002188469999999977, 0.00021916699999999928, 0.00021999999999999797, 0.00021952800000000008, 0.00022034700000000268, 0.00022073699999999863, 0.00021973600000000162, 0.00021901400000000001, 0.00021933299999999864, 0.0002201660000000008, 0.00021986099999999828, 0.00021916699999999928, 0.00021948700000000085, 0.00021999999999999797, 0.00022019399999999995, 0.00021922299999999756, 0.00021950000000000441, 0.00022066700000000078, 0.00021898600000000434, 0.00022034699999999574, 0.00022016700000000028, 0.00021983399999999514, 0.00022033299999999617, 0.00021949999999999747, 0.0002206110000000025, 0.00022069499999999992, 0.0002195839999999949, 0.00021934700000000168]</msg>
<status status="PASS" starttime="20201112 09:54:58.447" endtime="20201112 09:54:58.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.443" endtime="20201112 09:54:58.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.452" endtime="20201112 09:54:58.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.456" endtime="20201112 09:54:58.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.454" endtime="20201112 09:54:58.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.451" endtime="20201112 09:54:58.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.078" endtime="20201112 09:54:58.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.077" endtime="20201112 09:54:58.476"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.485" endtime="20201112 09:54:58.512"></status>
</kw>
<msg timestamp="20201112 09:54:58.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.483" endtime="20201112 09:54:58.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.513" endtime="20201112 09:54:58.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.516" endtime="20201112 09:54:58.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.481" endtime="20201112 09:54:58.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.479" endtime="20201112 09:54:58.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.525" endtime="20201112 09:54:58.811"></status>
</kw>
<msg timestamp="20201112 09:54:58.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022986389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:58.524" endtime="20201112 09:54:58.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022986389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:58.815" endtime="20201112 09:54:58.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.823" endtime="20201112 09:54:58.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.521" endtime="20201112 09:54:58.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.519" endtime="20201112 09:54:58.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.829" level="INFO">${RESULT} = [{'time': 0.022986389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00022238899999999992, 'source_diff': 0.00022238899999999992}, {'time': 0.023222417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:58.826" endtime="20201112 09:54:58.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.842" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:58.830" endtime="20201112 09:54:58.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.847" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.846" endtime="20201112 09:54:58.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.849" level="INFO">VALUE: [0.00022238899999999992, 0.00022133400000000011, 0.00022133300000000064, 0.00022100000000000244, 0.0002208469999999997, 0.00022256899999999885, 0.00022204100000000268, 0.0002221660000000028, 0.0002216249999999996, 0.00022168099999999788, 0.00022119500000000042, 0.0002221669999999988, 0.00022163899999999917, 0.00022168099999999788, 0.00022215299999999924, 0.00022234800000000068, 0.00022170800000000102, 0.00022131900000000107, 0.00022250000000000048, 0.00022265299999999974, 0.0002211669999999978, 0.00022251400000000005, 0.00022131900000000107, 0.0002211669999999978, 0.00022100000000000244, 0.00022083300000000014, 0.0002218470000000007, 0.00022127800000000183, 0.00022082000000000004, 0.00022218100000000185, 0.0002215270000000026, 0.00022233299999999817, 0.00022150000000000294, 0.00022201400000000301, 0.0002226669999999993, 0.0002219440000000017, 0.00022098600000000287, 0.00022083299999999667, 0.00022116700000000128, 0.00022155499999999828, 0.00022201399999999955, 0.00022084699999999624, 0.0002211530000000017, 0.00022115299999999477, 0.00022116700000000128, 0.0002208330000000036, 0.00022118100000000085, 0.00022116700000000128, 0.00022183399999999714, 0.00022150000000000641]</msg>
<status status="PASS" starttime="20201112 09:54:58.848" endtime="20201112 09:54:58.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.843" endtime="20201112 09:54:58.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.853" endtime="20201112 09:54:58.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.856" endtime="20201112 09:54:58.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.855" endtime="20201112 09:54:58.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.851" endtime="20201112 09:54:58.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.477" endtime="20201112 09:54:58.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.477" endtime="20201112 09:54:58.877"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.886" endtime="20201112 09:54:58.913"></status>
</kw>
<msg timestamp="20201112 09:54:58.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.885" endtime="20201112 09:54:58.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.914" endtime="20201112 09:54:58.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.917" endtime="20201112 09:54:58.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.882" endtime="20201112 09:54:58.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.880" endtime="20201112 09:54:58.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.926" endtime="20201112 09:54:59.210"></status>
</kw>
<msg timestamp="20201112 09:54:59.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023464861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.924" endtime="20201112 09:54:59.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023464861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.214" endtime="20201112 09:54:59.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.223" endtime="20201112 09:54:59.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.922" endtime="20201112 09:54:59.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.920" endtime="20201112 09:54:59.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.229" level="INFO">${RESULT} = [{'time': 0.023464861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00022377800000000087, 'source_diff': 0.00022377800000000087}, {'time': 0.023698903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:59.226" endtime="20201112 09:54:59.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.243" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 09:54:59.230" endtime="20201112 09:54:59.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.248" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.247" endtime="20201112 09:54:59.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.250" level="INFO">VALUE: [0.00022377800000000087, 0.00022336100000000178, 0.00022419499999999995, 0.00022334699999999874, 0.00022300000000000098, 0.00022398599999999894, 0.00022398599999999894, 0.0002236670000000003, 0.00022416600000000134, 0.00022451399999999858, 0.00022350000000000148, 0.00022448599999999944, 0.00022361199999999803, 0.00022331900000000307, 0.00022402800000000112, 0.0002240969999999995, 0.00022418100000000038, 0.00022344399999999973, 0.00022284699999999824, 0.0002238470000000027, 0.00022461099999999956, 0.00022350000000000148, 0.00022361099999999856, 0.0002243190000000006, 0.00022283300000000214, 0.00022301400000000055, 0.00022433399999999964, 0.00022333299999999917, 0.0002246670000000013, 0.00022318099999999938, 0.00022284799999999771, 0.0002236800000000004, 0.0002230700000000023, 0.00022315299999999677, 0.00022384699999999577, 0.00022383399999999914, 0.00022367999999999694, 0.0002233189999999996, 0.0002229860000000014, 0.00022281999999999857, 0.00022316699999999634, 0.00022366599999999737, 0.00022338899999999745, 0.00022437499999999888, 0.00022351400000000105, 0.00022300000000000098, 0.00022283299999999867, 0.00022400000000000198, 0.00022433300000000017, 0.00022416699999999734]</msg>
<status status="PASS" starttime="20201112 09:54:59.249" endtime="20201112 09:54:59.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.244" endtime="20201112 09:54:59.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.254" endtime="20201112 09:54:59.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.257" endtime="20201112 09:54:59.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.256" endtime="20201112 09:54:59.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.252" endtime="20201112 09:54:59.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.878" endtime="20201112 09:54:59.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.878" endtime="20201112 09:54:59.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:19.621" endtime="20201112 09:54:59.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.283" endtime="20201112 09:54:59.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.281" endtime="20201112 09:54:59.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.280" endtime="20201112 09:54:59.303"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:19.548" endtime="20201112 09:54:59.303" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:38.086" endtime="20201112 09:54:59.307"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.364" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:54:59.372" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:55:00.470" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:54:59.363" endtime="20201112 09:55:00.471"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.473" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:55:00.472" endtime="20201112 09:55:00.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.362" endtime="20201112 09:55:00.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.476" endtime="20201112 09:55:00.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.475" endtime="20201112 09:55:00.660"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.673" endtime="20201112 09:55:00.689"></status>
</kw>
<msg timestamp="20201112 09:55:00.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HE...</msg>
<status status="PASS" starttime="20201112 09:55:00.671" endtime="20201112 09:55:00.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HE...</msg>
<status status="PASS" starttime="20201112 09:55:00.691" endtime="20201112 09:55:00.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.696" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:00.693" endtime="20201112 09:55:00.696"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:00.669" endtime="20201112 09:55:00.697"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:00.666" endtime="20201112 09:55:00.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.665" endtime="20201112 09:55:00.698"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:00.702" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:00.701" endtime="20201112 09:55:00.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.699" endtime="20201112 09:55:00.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.664" endtime="20201112 09:55:00.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.664" endtime="20201112 09:55:00.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.704" endtime="20201112 09:55:00.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.663" endtime="20201112 09:55:00.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.707" endtime="20201112 09:55:00.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.661" endtime="20201112 09:55:00.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.360" endtime="20201112 09:55:00.709"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.715" endtime="20201112 09:55:00.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.714" endtime="20201112 09:55:00.735"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.748" endtime="20201112 09:55:00.764"></status>
</kw>
<msg timestamp="20201112 09:55:00.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.747" endtime="20201112 09:55:00.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.765" endtime="20201112 09:55:00.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.770" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:00.768" endtime="20201112 09:55:00.770"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:00.744" endtime="20201112 09:55:00.771"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:00.742" endtime="20201112 09:55:00.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.741" endtime="20201112 09:55:00.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:00.775" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:00.775" endtime="20201112 09:55:00.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.772" endtime="20201112 09:55:00.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.740" endtime="20201112 09:55:00.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.739" endtime="20201112 09:55:00.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.778" endtime="20201112 09:55:00.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.738" endtime="20201112 09:55:00.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.736" endtime="20201112 09:55:00.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.713" endtime="20201112 09:55:00.781"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:00.785" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.793" endtime="20201112 09:55:04.880"></status>
</kw>
<msg timestamp="20201112 09:55:04.881" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 184251, 'wakeups': [194257, 204257, 214257, 224257, 234257, 244257, 25...</msg>
<status status="PASS" starttime="20201112 09:55:00.791" endtime="20201112 09:55:04.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.883" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 184251, 'wakeups': [194257, 204257, 214257, 224257, 234257, 244257, 25...</msg>
<status status="PASS" starttime="20201112 09:55:04.882" endtime="20201112 09:55:04.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.885" endtime="20201112 09:55:04.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.788" endtime="20201112 09:55:04.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.787" endtime="20201112 09:55:04.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.890" level="INFO">${RESULT} = {'start-time': 184251, 'wakeups': [194257, 204257, 214257, 224257, 234257, 244257, 254257, 264257, 274257, 284257, 294257, 304257, 314257, 324257, 334257, 344257, 354257, 364257, 374257, 384257, 39425...</msg>
<status status="PASS" starttime="20201112 09:55:04.888" endtime="20201112 09:55:04.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.895" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:04.894" endtime="20201112 09:55:04.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.897" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:04.896" endtime="20201112 09:55:04.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.891" endtime="20201112 09:55:04.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.902" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:04.901" endtime="20201112 09:55:04.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.904" level="INFO">VALUE: 184251</msg>
<status status="PASS" starttime="20201112 09:55:04.903" endtime="20201112 09:55:04.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.898" endtime="20201112 09:55:04.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.908" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:04.907" endtime="20201112 09:55:04.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.911" level="INFO">VALUE: [194257, 204257, 214257, 224257, 234257, 244257, 254257, 264257, 274257, 284257, 294257, 304257, 314257, 324257, 334257, 344257, 354257, 364257, 374257, 384257, 394257, 404257, 414257, 424257, 434257, 444257, 454257, 464257, 474257, 484257, 494257, 504257, 514257, 524257, 534257, 544257, 554257, 564257, 574257, 584257, 594257, 604257, 614257, 624257, 634257, 644257, 654257, 664257, 674257, 684257, 694257, 704257, 714257, 724257, 734257, 744257, 754257, 764257, 774257, 784257, 794257, 804257, 814257, 824257, 834257, 844257, 854257, 864257, 874257, 884257, 894257, 904257, 914257, 924257, 934257, 944257, 954257, 964257, 974257, 984257, 994257, 1004257, 1014257, 1024257, 1034257, 1044257, 1054257, 1064257, 1074257, 1084257, 1094257, 1104257, 1114257, 1124257, 1134257, 1144257, 1154257, 1164257, 1174257, 1184257]</msg>
<status status="PASS" starttime="20201112 09:55:04.910" endtime="20201112 09:55:04.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.905" endtime="20201112 09:55:04.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.918" endtime="20201112 09:55:05.214"></status>
</kw>
<msg timestamp="20201112 09:55:05.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067554125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.087569194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.917" endtime="20201112 09:55:05.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067554125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.087569194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.218" endtime="20201112 09:55:05.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.226" endtime="20201112 09:55:05.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.914" endtime="20201112 09:55:05.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.912" endtime="20201112 09:55:05.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.252" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:05.229" endtime="20201112 09:55:05.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.256" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:05.255" endtime="20201112 09:55:05.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.258" level="INFO">VALUE: 0.067554125</msg>
<status status="PASS" starttime="20201112 09:55:05.257" endtime="20201112 09:55:05.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.253" endtime="20201112 09:55:05.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.264" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:05.263" endtime="20201112 09:55:05.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.266" level="INFO">VALUE: [0.087569194, 0.107571583, 0.127573778, 0.147576139, 0.167578361, 0.187580722, 0.207582958, 0.227585333, 0.247587569, 0.267589903, 0.287592139, 0.3075945, 0.327596736, 0.347599097, 0.367601319, 0.387603681, 0.407605917, 0.427608278, 0.447610514, 0.467612875, 0.487615125, 0.5076175, 0.527619722, 0.547622056, 0.567624292, 0.587626667, 0.607628903, 0.627631278, 0.6476335, 0.667635847, 0.687638083, 0.707640431, 0.727642667, 0.747645028, 0.767647278, 0.787649639, 0.807651889, 0.827654222, 0.847656458, 0.867658806, 0.887661042, 0.907663403, 0.927665653, 0.947668056, 0.96767025, 0.987672597, 1.007674819, 1.027677181, 1.047679417, 1.067681778, 1.087684014, 1.107686389, 1.127688611, 1.147690986, 1.167693208, 1.187695569, 1.207697833, 1.227700167, 1.247702403, 1.267704792, 1.287706986, 1.307709361, 1.327711569, 1.347713972, 1.367716167, 1.387718528, 1.407720764, 1.427723139, 1.447725361, 1.467727722, 1.487729944, 1.507732306, 1.527734542, 1.547736903, 1.567739153, 1.5877415, 1.607743792, 1.627746111, 1.647748319, 1.667750694, 1.687752931, 1.707755278, 1.727757528, 1.747759875, 1.767762111, 1.787764472, 1.807766694, 1.827769056, 1.847771292, 1.867773653, 1.887775903, 1.907778264, 1.9277805, 1.947782861, 1.967785083, 1.987787431, 2.007789667, 2.027792042, 2.047794264, 2.067796625] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:05.265" endtime="20201112 09:55:05.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.260" endtime="20201112 09:55:05.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.269" endtime="20201112 09:55:05.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.273" endtime="20201112 09:55:05.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.271" endtime="20201112 09:55:05.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.268" endtime="20201112 09:55:05.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.785" endtime="20201112 09:55:05.293"></status>
</kw>
<msg timestamp="20201112 09:55:05.294" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.302" endtime="20201112 09:55:09.411"></status>
</kw>
<msg timestamp="20201112 09:55:09.413" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2439131, 'wakeups': [2449137, 2459137, 2469137, 2479137, 2489137, 2499...</msg>
<status status="PASS" starttime="20201112 09:55:05.300" endtime="20201112 09:55:09.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.418" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2439131, 'wakeups': [2449137, 2459137, 2469137, 2479137, 2489137, 2499...</msg>
<status status="PASS" starttime="20201112 09:55:09.415" endtime="20201112 09:55:09.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.421" endtime="20201112 09:55:09.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.297" endtime="20201112 09:55:09.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.295" endtime="20201112 09:55:09.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.427" level="INFO">${RESULT} = {'start-time': 2439131, 'wakeups': [2449137, 2459137, 2469137, 2479137, 2489137, 2499137, 2509137, 2519137, 2529137, 2539137, 2549137, 2559137, 2569137, 2579137, 2589137, 2599137, 2609137, 2619137, 26...</msg>
<status status="PASS" starttime="20201112 09:55:09.426" endtime="20201112 09:55:09.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.432" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:09.431" endtime="20201112 09:55:09.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.434" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:09.433" endtime="20201112 09:55:09.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.428" endtime="20201112 09:55:09.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.439" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:09.438" endtime="20201112 09:55:09.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.441" level="INFO">VALUE: 2439131</msg>
<status status="PASS" starttime="20201112 09:55:09.440" endtime="20201112 09:55:09.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.435" endtime="20201112 09:55:09.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.446" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:09.445" endtime="20201112 09:55:09.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.448" level="INFO">VALUE: [2449137, 2459137, 2469137, 2479137, 2489137, 2499137, 2509137, 2519137, 2529137, 2539137, 2549137, 2559137, 2569137, 2579137, 2589137, 2599137, 2609137, 2619137, 2629137, 2639137, 2649137, 2659137, 2669137, 2679137, 2689137, 2699137, 2709137, 2719137, 2729137, 2739137, 2749137, 2759137, 2769137, 2779137, 2789137, 2799137, 2809137, 2819137, 2829137, 2839137, 2849137, 2859137, 2869137, 2879137, 2889137, 2899137, 2909137, 2919137, 2929137, 2939137, 2949137, 2959137, 2969137, 2979137, 2989137, 2999137, 3009137, 3019137, 3029137, 3039137, 3049137, 3059137, 3069137, 3079137, 3089137, 3099137, 3109137, 3119137, 3129137, 3139137, 3149137, 3159137, 3169137, 3179137, 3189137, 3199137, 3209137, 3219137, 3229137, 3239137, 3249137, 3259137, 3269137, 3279137, 3289137, 3299137, 3309137, 3319137, 3329137, 3339137, 3349137, 3359137, 3369137, 3379137, 3389137, 3399137, 3409137, 3419137, 3429137, 3439137]</msg>
<status status="PASS" starttime="20201112 09:55:09.447" endtime="20201112 09:55:09.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.442" endtime="20201112 09:55:09.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.455" endtime="20201112 09:55:09.746"></status>
</kw>
<msg timestamp="20201112 09:55:09.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020193972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040208389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.454" endtime="20201112 09:55:09.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020193972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040208389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.750" endtime="20201112 09:55:09.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.758" endtime="20201112 09:55:09.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.451" endtime="20201112 09:55:09.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.450" endtime="20201112 09:55:09.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.786" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:09.761" endtime="20201112 09:55:09.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.790" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:09.789" endtime="20201112 09:55:09.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.792" level="INFO">VALUE: 0.020193972</msg>
<status status="PASS" starttime="20201112 09:55:09.791" endtime="20201112 09:55:09.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.786" endtime="20201112 09:55:09.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.797" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:09.796" endtime="20201112 09:55:09.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.800" level="INFO">VALUE: [0.040208389, 0.060210764, 0.080213014, 0.100215389, 0.120217653, 0.140220014, 0.160222264, 0.180224681, 0.200226889, 0.220229278, 0.240231542, 0.260233889, 0.280236194, 0.300238528, 0.320240847, 0.340243153, 0.360245403, 0.380247792, 0.400250042, 0.420252417, 0.440254681, 0.460257125, 0.480259306, 0.500261681, 0.520263931, 0.540266333, 0.560268569, 0.580270972, 0.600273194, 0.620275597, 0.640277819, 0.660280278, 0.680282458, 0.700284833, 0.720287153, 0.740289472, 0.760291736, 0.780294125, 0.800296347, 0.820298722, 0.840300972, 0.860303361, 0.880305611, 0.900307986, 0.920310236, 0.940312625, 0.960314903, 0.980317264, 1.0003195, 1.020321875, 1.040324167, 1.060326514, 1.080328764, 1.100331139, 1.120333389, 1.140335792, 1.160338028, 1.180340403, 1.200342667, 1.220345028, 1.240347292, 1.260349681, 1.280351917, 1.300354361, 1.320356569, 1.340358986, 1.360361194, 1.380363597, 1.400365819, 1.420368208, 1.440370444, 1.460372819, 1.480375069, 1.500377458, 1.520379708, 1.540382097, 1.560384347, 1.580386722, 1.600388972, 1.620391347, 1.640393653, 1.660396042, 1.680398222, 1.700400625, 1.720402875, 1.740405236, 1.7604075, 1.780409903, 1.800412153, 1.8204145, 1.84041675, 1.860419125, 1.880421417, 1.900423764, 1.920426028, 1.940428389, 1.960430653, 1.980433028, 2.000435319, 2.020437653] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:09.799" endtime="20201112 09:55:09.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.793" endtime="20201112 09:55:09.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.803" endtime="20201112 09:55:09.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.806" endtime="20201112 09:55:09.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.805" endtime="20201112 09:55:09.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.802" endtime="20201112 09:55:09.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.294" endtime="20201112 09:55:09.827"></status>
</kw>
<msg timestamp="20201112 09:55:09.827" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.835" endtime="20201112 09:55:13.944"></status>
</kw>
<msg timestamp="20201112 09:55:13.946" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4705508, 'wakeups': [4715514, 4725514, 4735514, 4745514, 4755514, 4765...</msg>
<status status="PASS" starttime="20201112 09:55:09.834" endtime="20201112 09:55:13.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.952" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4705508, 'wakeups': [4715514, 4725514, 4735514, 4745514, 4755514, 4765...</msg>
<status status="PASS" starttime="20201112 09:55:13.948" endtime="20201112 09:55:13.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.954" endtime="20201112 09:55:13.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.831" endtime="20201112 09:55:13.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.829" endtime="20201112 09:55:13.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.965" level="INFO">${RESULT} = {'start-time': 4705508, 'wakeups': [4715514, 4725514, 4735514, 4745514, 4755514, 4765514, 4775514, 4785514, 4795514, 4805514, 4815514, 4825514, 4835514, 4845514, 4855514, 4865514, 4875514, 4885514, 48...</msg>
<status status="PASS" starttime="20201112 09:55:13.961" endtime="20201112 09:55:13.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.973" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:13.971" endtime="20201112 09:55:13.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.977" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:13.975" endtime="20201112 09:55:13.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.966" endtime="20201112 09:55:13.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.990" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:13.986" endtime="20201112 09:55:13.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.993" level="INFO">VALUE: 4705508</msg>
<status status="PASS" starttime="20201112 09:55:13.992" endtime="20201112 09:55:13.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.981" endtime="20201112 09:55:13.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.998" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:13.997" endtime="20201112 09:55:13.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.000" level="INFO">VALUE: [4715514, 4725514, 4735514, 4745514, 4755514, 4765514, 4775514, 4785514, 4795514, 4805514, 4815514, 4825514, 4835514, 4845514, 4855514, 4865514, 4875514, 4885514, 4895514, 4905514, 4915514, 4925514, 4935514, 4945514, 4955514, 4965514, 4975514, 4985514, 4995514, 5005514, 5015514, 5025514, 5035514, 5045514, 5055514, 5065514, 5075514, 5085514, 5095514, 5105514, 5115514, 5125514, 5135514, 5145514, 5155514, 5165514, 5175514, 5185514, 5195514, 5205514, 5215514, 5225514, 5235514, 5245514, 5255514, 5265514, 5275514, 5285514, 5295514, 5305514, 5315514, 5325514, 5335514, 5345514, 5355514, 5365514, 5375514, 5385514, 5395514, 5405514, 5415514, 5425514, 5435514, 5445514, 5455514, 5465514, 5475514, 5485514, 5495514, 5505514, 5515514, 5525514, 5535514, 5545514, 5555514, 5565514, 5575514, 5585514, 5595514, 5605514, 5615514, 5625514, 5635514, 5645514, 5655514, 5665514, 5675514, 5685514, 5695514, 5705514]</msg>
<status status="PASS" starttime="20201112 09:55:13.999" endtime="20201112 09:55:14.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.994" endtime="20201112 09:55:14.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.008" endtime="20201112 09:55:14.299"></status>
</kw>
<msg timestamp="20201112 09:55:14.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03928725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:14.006" endtime="20201112 09:55:14.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03928725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:14.303" endtime="20201112 09:55:14.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.310" endtime="20201112 09:55:14.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.004" endtime="20201112 09:55:14.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.002" endtime="20201112 09:55:14.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:14.336" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:14.314" endtime="20201112 09:55:14.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.341" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:55:14.340" endtime="20201112 09:55:14.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.343" level="INFO">VALUE: 0.019272153</msg>
<status status="PASS" starttime="20201112 09:55:14.342" endtime="20201112 09:55:14.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.337" endtime="20201112 09:55:14.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.348" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:14.347" endtime="20201112 09:55:14.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.351" level="INFO">VALUE: [0.03928725, 0.059289597, 0.079291847, 0.09929425, 0.119296458, 0.139298833, 0.159301083, 0.179303472, 0.199305708, 0.219308111, 0.239310319, 0.259312694, 0.279314944, 0.299317319, 0.319319583, 0.339321972, 0.35932425, 0.379326569, 0.399328819, 0.419331208, 0.439333444, 0.459335833, 0.479338069, 0.499340444, 0.519342694, 0.539345069, 0.559347306, 0.579349681, 0.599351944, 0.619354319, 0.639356583, 0.659358944, 0.679361194, 0.699363556, 0.719365806, 0.739368181, 0.759370431, 0.779372806, 0.799375056, 0.819377486, 0.839379694, 0.859382069, 0.879384319, 0.899386694, 0.919388931, 0.939391319, 0.959393556, 0.979395931, 0.999398167, 1.019400542, 1.039402792, 1.059405181, 1.079407417, 1.099409792, 1.119412042, 1.139414444, 1.159416667, 1.179419042, 1.199421292, 1.219423681, 1.239425931, 1.259428306, 1.279430542, 1.299432917, 1.319435181, 1.339437542, 1.359439792, 1.379442208, 1.399444458, 1.419446806, 1.439449056, 1.459451431, 1.479453653, 1.499456042, 1.519458292, 1.539460653, 1.559462903, 1.579465292, 1.599467528, 1.619469903, 1.639472167, 1.659474528, 1.679476778, 1.699479167, 1.719481403, 1.739483778, 1.759486042, 1.779488403, 1.799490667, 1.819493028, 1.839495278, 1.859497653, 1.879499917, 1.899502278, 1.919504528, 1.939506917, 1.959509167, 1.979511528, 1.999513778, 2.019516153] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:14.349" endtime="20201112 09:55:14.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.344" endtime="20201112 09:55:14.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.354" endtime="20201112 09:55:14.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.357" endtime="20201112 09:55:14.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.356" endtime="20201112 09:55:14.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.352" endtime="20201112 09:55:14.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.828" endtime="20201112 09:55:14.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.783" endtime="20201112 09:55:14.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.782" endtime="20201112 09:55:14.378"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:14.381" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.390" endtime="20201112 09:55:18.494"></status>
</kw>
<msg timestamp="20201112 09:55:18.495" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 6982636, 'wakeups': [6992648, 7002648, 7012648, 7022648, 7032648, 7042...</msg>
<status status="PASS" starttime="20201112 09:55:14.388" endtime="20201112 09:55:18.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.498" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 6982636, 'wakeups': [6992648, 7002648, 7012648, 7022648, 7032648, 7042...</msg>
<status status="PASS" starttime="20201112 09:55:18.496" endtime="20201112 09:55:18.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.499" endtime="20201112 09:55:18.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.385" endtime="20201112 09:55:18.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.383" endtime="20201112 09:55:18.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:18.504" level="INFO">${RESULT} = {'start-time': 6982636, 'wakeups': [6992648, 7002648, 7012648, 7022648, 7032648, 7042648, 7052648, 7062648, 7072648, 7082648, 7092648, 7102648, 7112648, 7122648, 7132648, 7142648, 7152648, 7162648, 71...</msg>
<status status="PASS" starttime="20201112 09:55:18.502" endtime="20201112 09:55:18.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.508" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:18.507" endtime="20201112 09:55:18.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.510" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:18.509" endtime="20201112 09:55:18.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.505" endtime="20201112 09:55:18.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.515" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:18.514" endtime="20201112 09:55:18.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.517" level="INFO">VALUE: 6982636</msg>
<status status="PASS" starttime="20201112 09:55:18.516" endtime="20201112 09:55:18.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.511" endtime="20201112 09:55:18.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.522" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:18.521" endtime="20201112 09:55:18.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.524" level="INFO">VALUE: [6992648, 7002648, 7012648, 7022648, 7032648, 7042648, 7052648, 7062648, 7072648, 7082648, 7092648, 7102648, 7112648, 7122648, 7132648, 7142648, 7152648, 7162648, 7172648, 7182648, 7192648, 7202648, 7212648, 7222648, 7232648, 7242648, 7252648, 7262648, 7272648, 7282648, 7292648, 7302648, 7312648, 7322648, 7332648, 7342648, 7352648, 7362648, 7372648, 7382648, 7392648, 7402648, 7412648, 7422648, 7432648, 7442648, 7452648, 7462648, 7472648, 7482648, 7492648, 7502648, 7512648, 7522648, 7532648, 7542648, 7552648, 7562648, 7572648, 7582648, 7592648, 7602648, 7612648, 7622648, 7632648, 7642648, 7652648, 7662648, 7672648, 7682648, 7692648, 7702648, 7712648, 7722648, 7732648, 7742648, 7752648, 7762648, 7772648, 7782648, 7792648, 7802648, 7812648, 7822648, 7832648, 7842648, 7852648, 7862648, 7872648, 7882648, 7892648, 7902648, 7912648, 7922648, 7932648, 7942648, 7952648, 7962648, 7972648, 7982648]</msg>
<status status="PASS" starttime="20201112 09:55:18.523" endtime="20201112 09:55:18.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.518" endtime="20201112 09:55:18.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.531" endtime="20201112 09:55:18.824"></status>
</kw>
<msg timestamp="20201112 09:55:18.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042669292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.530" endtime="20201112 09:55:18.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042669292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.828" endtime="20201112 09:55:18.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.835" endtime="20201112 09:55:18.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.527" endtime="20201112 09:55:18.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.525" endtime="20201112 09:55:18.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:18.862" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:18.839" endtime="20201112 09:55:18.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.867" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:18.866" endtime="20201112 09:55:18.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.869" level="INFO">VALUE: 0.022640833</msg>
<status status="PASS" starttime="20201112 09:55:18.868" endtime="20201112 09:55:18.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.863" endtime="20201112 09:55:18.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.874" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:18.873" endtime="20201112 09:55:18.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.876" level="INFO">VALUE: [0.042669292, 0.062671653, 0.082673917, 0.102676264, 0.122678528, 0.142680889, 0.162683125, 0.1826855, 0.202687736, 0.222690111, 0.242692361, 0.262694722, 0.282696972, 0.302699361, 0.322701597, 0.342703986, 0.362706222, 0.382708583, 0.402710819, 0.422713208, 0.442715444, 0.462717847, 0.482720069, 0.502722431, 0.522724681, 0.542727042, 0.562729292, 0.582731667, 0.602733903, 0.622736278, 0.642738528, 0.662740903, 0.682743153, 0.702745514, 0.722747778, 0.742750139, 0.762752375, 0.78275475, 0.802757, 0.822759361, 0.842761611, 0.862764, 0.882766236, 0.902768597, 0.922770861, 0.942773222, 0.962775472, 0.982777861, 1.002780097, 1.022782458, 1.042784708, 1.062787153, 1.082789319, 1.102791694, 1.122793931, 1.142796319, 1.162798556, 1.182800917, 1.202803194, 1.222805542, 1.242807792, 1.262810167, 1.282812403, 1.302814806, 1.322817028, 1.342819389, 1.362821639, 1.382824028, 1.40282625, 1.422828625, 1.442830875, 1.462833292, 1.482835486, 1.502837861, 1.522840111, 1.542842486, 1.562844736, 1.582847153, 1.602849347, 1.62285175, 1.642853972, 1.662856389, 1.682858583, 1.702860958, 1.722863194, 1.742865569, 1.762867861, 1.782870208, 1.802872431, 1.822874819, 1.842877056, 1.862879431, 1.882881667, 1.902884056, 1.922886306, 1.942888653, 1.962890903, 1.982893278, 2.002895528, 2.022897903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:18.875" endtime="20201112 09:55:18.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.870" endtime="20201112 09:55:18.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.879" endtime="20201112 09:55:18.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:18.883" endtime="20201112 09:55:18.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.881" endtime="20201112 09:55:18.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.878" endtime="20201112 09:55:18.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.382" endtime="20201112 09:55:18.904"></status>
</kw>
<msg timestamp="20201112 09:55:18.904" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.913" endtime="20201112 09:55:23.025"></status>
</kw>
<msg timestamp="20201112 09:55:23.027" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9244579, 'wakeups': [9254591, 9264591, 9274591, 9284591, 9294591, 9304...</msg>
<status status="PASS" starttime="20201112 09:55:18.911" endtime="20201112 09:55:23.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.033" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9244579, 'wakeups': [9254591, 9264591, 9274591, 9284591, 9294591, 9304...</msg>
<status status="PASS" starttime="20201112 09:55:23.029" endtime="20201112 09:55:23.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.035" endtime="20201112 09:55:23.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.908" endtime="20201112 09:55:23.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.906" endtime="20201112 09:55:23.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:23.047" level="INFO">${RESULT} = {'start-time': 9244579, 'wakeups': [9254591, 9264591, 9274591, 9284591, 9294591, 9304591, 9314591, 9324591, 9334591, 9344591, 9354591, 9364591, 9374591, 9384591, 9394591, 9404591, 9414591, 9424591, 94...</msg>
<status status="PASS" starttime="20201112 09:55:23.042" endtime="20201112 09:55:23.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.053" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:23.052" endtime="20201112 09:55:23.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.056" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:23.054" endtime="20201112 09:55:23.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.049" endtime="20201112 09:55:23.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.061" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:23.060" endtime="20201112 09:55:23.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.063" level="INFO">VALUE: 9244579</msg>
<status status="PASS" starttime="20201112 09:55:23.062" endtime="20201112 09:55:23.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.057" endtime="20201112 09:55:23.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.068" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:23.067" endtime="20201112 09:55:23.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.070" level="INFO">VALUE: [9254591, 9264591, 9274591, 9284591, 9294591, 9304591, 9314591, 9324591, 9334591, 9344591, 9354591, 9364591, 9374591, 9384591, 9394591, 9404591, 9414591, 9424591, 9434591, 9444591, 9454591, 9464591, 9474591, 9484591, 9494591, 9504591, 9514591, 9524591, 9534591, 9544591, 9554591, 9564591, 9574591, 9584591, 9594591, 9604591, 9614591, 9624591, 9634591, 9644591, 9654591, 9664591, 9674591, 9684591, 9694591, 9704591, 9714591, 9724591, 9734591, 9744591, 9754591, 9764591, 9774591, 9784591, 9794591, 9804591, 9814591, 9824591, 9834591, 9844591, 9854591, 9864591, 9874591, 9884591, 9894591, 9904591, 9914591, 9924591, 9934591, 9944591, 9954591, 9964591, 9974591, 9984591, 9994591, 10004591, 10014591, 10024591, 10034591, 10044591, 10054591, 10064591, 10074591, 10084591, 10094591, 10104591, 10114591, 10124591, 10134591, 10144591, 10154591, 10164591, 10174591, 10184591, 10194591, 10204591, 10214591, 10224591, 10234591, 10244591]</msg>
<status status="PASS" starttime="20201112 09:55:23.069" endtime="20201112 09:55:23.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.064" endtime="20201112 09:55:23.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.077" endtime="20201112 09:55:23.369"></status>
</kw>
<msg timestamp="20201112 09:55:23.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020602903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040630042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.076" endtime="20201112 09:55:23.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020602903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040630042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.373" endtime="20201112 09:55:23.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.380" endtime="20201112 09:55:23.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.073" endtime="20201112 09:55:23.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.072" endtime="20201112 09:55:23.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:23.407" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:23.383" endtime="20201112 09:55:23.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.411" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:23.410" endtime="20201112 09:55:23.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.413" level="INFO">VALUE: 0.020602903</msg>
<status status="PASS" starttime="20201112 09:55:23.412" endtime="20201112 09:55:23.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.408" endtime="20201112 09:55:23.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.418" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:23.417" endtime="20201112 09:55:23.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.421" level="INFO">VALUE: [0.040630042, 0.060632403, 0.080634667, 0.100637028, 0.120639236, 0.140641625, 0.160643847, 0.180646208, 0.200648514, 0.220650889, 0.240653111, 0.260655444, 0.280657667, 0.300660042, 0.320662292, 0.340664667, 0.360666889, 0.38066925, 0.4006715, 0.420673861, 0.440676111, 0.460678486, 0.480680722, 0.500683097, 0.520685333, 0.540687694, 0.560689931, 0.580692306, 0.600694542, 0.620696931, 0.640699153, 0.660701556, 0.680703778, 0.700706139, 0.720708389, 0.74071075, 0.760712986, 0.780715417, 0.800717597, 0.820719972, 0.840722208, 0.860724583, 0.880726819, 0.900729222, 0.920731431, 0.940733847, 0.960736042, 0.980738417, 1.000740653, 1.020743014, 1.040745264, 1.060747625, 1.080749889, 1.100752278, 1.120754486, 1.140756847, 1.160759111, 1.180761472, 1.200763694, 1.220766069, 1.240768306, 1.260770722, 1.280772958, 1.300775306, 1.320777542, 1.340779903, 1.360782153, 1.380784528, 1.40078675, 1.420789125, 1.440791375, 1.460793792, 1.480795972, 1.500798347, 1.520800583, 1.540802944, 1.560805208, 1.580807556, 1.600809819, 1.620812167, 1.640814417, 1.660816792, 1.680819028, 1.700821403, 1.720823639, 1.740826, 1.760828264, 1.780830611, 1.800832861, 1.820835236, 1.840837472, 1.860839833, 1.880842083, 1.900844458, 1.920846694, 1.940849056, 1.960851306, 1.980853681, 2.000855917, 2.020858292] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:23.420" endtime="20201112 09:55:23.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.415" endtime="20201112 09:55:23.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.424" endtime="20201112 09:55:23.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:23.428" endtime="20201112 09:55:23.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.426" endtime="20201112 09:55:23.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.423" endtime="20201112 09:55:23.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.905" endtime="20201112 09:55:23.448"></status>
</kw>
<msg timestamp="20201112 09:55:23.448" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.456" endtime="20201112 09:55:27.576"></status>
</kw>
<msg timestamp="20201112 09:55:27.577" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11515892, 'wakeups': [11525904, 11535904, 11545904, 11555904, 11565904...</msg>
<status status="PASS" starttime="20201112 09:55:23.455" endtime="20201112 09:55:27.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.583" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11515892, 'wakeups': [11525904, 11535904, 11545904, 11555904, 11565904...</msg>
<status status="PASS" starttime="20201112 09:55:27.579" endtime="20201112 09:55:27.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.585" endtime="20201112 09:55:27.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.452" endtime="20201112 09:55:27.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.451" endtime="20201112 09:55:27.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.596" level="INFO">${RESULT} = {'start-time': 11515892, 'wakeups': [11525904, 11535904, 11545904, 11555904, 11565904, 11575904, 11585904, 11595904, 11605904, 11615904, 11625904, 11635904, 11645904, 11655904, 11665904, 11675904, 116...</msg>
<status status="PASS" starttime="20201112 09:55:27.592" endtime="20201112 09:55:27.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.604" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:27.602" endtime="20201112 09:55:27.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.609" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:27.607" endtime="20201112 09:55:27.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.598" endtime="20201112 09:55:27.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.614" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:27.613" endtime="20201112 09:55:27.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.617" level="INFO">VALUE: 11515892</msg>
<status status="PASS" starttime="20201112 09:55:27.615" endtime="20201112 09:55:27.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.610" endtime="20201112 09:55:27.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.622" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:27.621" endtime="20201112 09:55:27.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.624" level="INFO">VALUE: [11525904, 11535904, 11545904, 11555904, 11565904, 11575904, 11585904, 11595904, 11605904, 11615904, 11625904, 11635904, 11645904, 11655904, 11665904, 11675904, 11685904, 11695904, 11705904, 11715904, 11725904, 11735904, 11745904, 11755904, 11765904, 11775904, 11785904, 11795904, 11805904, 11815904, 11825904, 11835904, 11845904, 11855904, 11865904, 11875904, 11885904, 11895904, 11905904, 11915904, 11925904, 11935904, 11945904, 11955904, 11965904, 11975904, 11985904, 11995904, 12005904, 12015904, 12025904, 12035904, 12045904, 12055904, 12065904, 12075904, 12085904, 12095904, 12105904, 12115904, 12125904, 12135904, 12145904, 12155904, 12165904, 12175904, 12185904, 12195904, 12205904, 12215904, 12225904, 12235904, 12245904, 12255904, 12265904, 12275904, 12285904, 12295904, 12305904, 12315904, 12325904, 12335904, 12345904, 12355904, 12365904, 12375904, 12385904, 12395904, 12405904, 12415904, 12425904, 12435904, 12445904, 12455904, 12465904, 12475904, 12485904, 12495904, 12505904, 12515904]</msg>
<status status="PASS" starttime="20201112 09:55:27.623" endtime="20201112 09:55:27.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.618" endtime="20201112 09:55:27.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.632" endtime="20201112 09:55:27.922"></status>
</kw>
<msg timestamp="20201112 09:55:27.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019327153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039355625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.630" endtime="20201112 09:55:27.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019327153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039355625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.926" endtime="20201112 09:55:27.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.933" endtime="20201112 09:55:27.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.628" endtime="20201112 09:55:27.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.626" endtime="20201112 09:55:27.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.960" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:27.937" endtime="20201112 09:55:27.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.964" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:55:27.963" endtime="20201112 09:55:27.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.966" level="INFO">VALUE: 0.019327153</msg>
<status status="PASS" starttime="20201112 09:55:27.965" endtime="20201112 09:55:27.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.961" endtime="20201112 09:55:27.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.972" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:27.970" endtime="20201112 09:55:27.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.974" level="INFO">VALUE: [0.039355625, 0.059358, 0.079360208, 0.099362569, 0.119364806, 0.139367181, 0.159369403, 0.179371764, 0.199374, 0.219376361, 0.239378597, 0.259380972, 0.279383208, 0.299385583, 0.319387819, 0.339390181, 0.359392417, 0.379394792, 0.399397028, 0.419399389, 0.439401625, 0.459403986, 0.479406222, 0.499408597, 0.519410833, 0.539413208, 0.559415431, 0.579417806, 0.599420111, 0.619422472, 0.639424639, 0.659427028, 0.679429292, 0.699431639, 0.719433847, 0.739436222, 0.759438472, 0.779440833, 0.799443111, 0.819445444, 0.839447681, 0.859450056, 0.879452278, 0.899454639, 0.919456875, 0.939459236, 0.959461486, 0.979463847, 0.999466097, 1.019468444, 1.039470694, 1.059473056, 1.079475306, 1.099477653, 1.119479903, 1.139482264, 1.1594845, 1.179486875, 1.199489111, 1.219491472, 1.239493722, 1.259496083, 1.279498319, 1.299500681, 1.319502917, 1.339505292, 1.359507528, 1.379509889, 1.399512139, 1.4195145, 1.43951675, 1.459519097, 1.479521361, 1.499523708, 1.519526028, 1.539528319, 1.559530556, 1.579532917, 1.599535167, 1.619537528, 1.639539764, 1.659542139, 1.679544361, 1.699546736, 1.719548986, 1.739551333, 1.759553583, 1.779555958, 1.799558181, 1.819560556, 1.839562806, 1.859565153, 1.879567389, 1.899569778, 1.919572, 1.939574361, 1.959576597, 1.979578972, 1.999581222, 2.019583611] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:27.973" endtime="20201112 09:55:27.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.968" endtime="20201112 09:55:27.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.977" endtime="20201112 09:55:27.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:27.981" endtime="20201112 09:55:28.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.979" endtime="20201112 09:55:28.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.976" endtime="20201112 09:55:28.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.449" endtime="20201112 09:55:28.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.380" endtime="20201112 09:55:28.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.379" endtime="20201112 09:55:28.002"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:28.005" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.013" endtime="20201112 09:55:32.132"></status>
</kw>
<msg timestamp="20201112 09:55:32.133" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 13794211, 'wakeups': [13804231, 13814231, 13824231, 13834231, 13844231...</msg>
<status status="PASS" starttime="20201112 09:55:28.012" endtime="20201112 09:55:32.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.139" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 13794211, 'wakeups': [13804231, 13814231, 13824231, 13834231, 13844231...</msg>
<status status="PASS" starttime="20201112 09:55:32.135" endtime="20201112 09:55:32.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.141" endtime="20201112 09:55:32.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.009" endtime="20201112 09:55:32.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.007" endtime="20201112 09:55:32.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:32.152" level="INFO">${RESULT} = {'start-time': 13794211, 'wakeups': [13804231, 13814231, 13824231, 13834231, 13844231, 13854231, 13864231, 13874231, 13884231, 13894231, 13904231, 13914231, 13924231, 13934231, 13944231, 13954231, 139...</msg>
<status status="PASS" starttime="20201112 09:55:32.148" endtime="20201112 09:55:32.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.160" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:32.158" endtime="20201112 09:55:32.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.165" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:32.163" endtime="20201112 09:55:32.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.154" endtime="20201112 09:55:32.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.171" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:32.170" endtime="20201112 09:55:32.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.173" level="INFO">VALUE: 13794211</msg>
<status status="PASS" starttime="20201112 09:55:32.172" endtime="20201112 09:55:32.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.168" endtime="20201112 09:55:32.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.178" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:32.177" endtime="20201112 09:55:32.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.180" level="INFO">VALUE: [13804231, 13814231, 13824231, 13834231, 13844231, 13854231, 13864231, 13874231, 13884231, 13894231, 13904231, 13914231, 13924231, 13934231, 13944231, 13954231, 13964231, 13974231, 13984231, 13994231, 14004231, 14014231, 14024231, 14034231, 14044231, 14054231, 14064231, 14074231, 14084231, 14094231, 14104231, 14114231, 14124231, 14134231, 14144231, 14154231, 14164231, 14174231, 14184231, 14194231, 14204231, 14214231, 14224231, 14234231, 14244231, 14254231, 14264231, 14274231, 14284231, 14294231, 14304231, 14314231, 14324231, 14334231, 14344231, 14354231, 14364231, 14374231, 14384231, 14394231, 14404231, 14414231, 14424231, 14434231, 14444231, 14454231, 14464231, 14474231, 14484231, 14494231, 14504231, 14514231, 14524231, 14534231, 14544231, 14554231, 14564231, 14574231, 14584231, 14594231, 14604231, 14614231, 14624231, 14634231, 14644231, 14654231, 14664231, 14674231, 14684231, 14694231, 14704231, 14714231, 14724231, 14734231, 14744231, 14754231, 14764231, 14774231, 14784231, 14794231]</msg>
<status status="PASS" starttime="20201112 09:55:32.179" endtime="20201112 09:55:32.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.175" endtime="20201112 09:55:32.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.192" endtime="20201112 09:55:32.486"></status>
</kw>
<msg timestamp="20201112 09:55:32.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042708611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.186" endtime="20201112 09:55:32.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042708611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.489" endtime="20201112 09:55:32.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.497" endtime="20201112 09:55:32.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.183" endtime="20201112 09:55:32.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.182" endtime="20201112 09:55:32.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:32.523" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:32.500" endtime="20201112 09:55:32.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.527" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:32.526" endtime="20201112 09:55:32.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.529" level="INFO">VALUE: 0.022666083</msg>
<status status="PASS" starttime="20201112 09:55:32.528" endtime="20201112 09:55:32.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.524" endtime="20201112 09:55:32.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.535" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:32.533" endtime="20201112 09:55:32.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.537" level="INFO">VALUE: [0.042708611, 0.062710819, 0.082713056, 0.102715417, 0.122717653, 0.142720069, 0.162722236, 0.182724583, 0.202726819, 0.222729194, 0.242731431, 0.262733778, 0.282736014, 0.302738375, 0.322740611, 0.342742972, 0.362745236, 0.382747583, 0.402749819, 0.422752181, 0.442754403, 0.462756764, 0.482758986, 0.502761347, 0.522763597, 0.542765944, 0.562768181, 0.582770556, 0.602772778, 0.622775153, 0.642777375, 0.662779736, 0.682781972, 0.702784333, 0.722786583, 0.742788931, 0.762791167, 0.782793528, 0.802795764, 0.822798139, 0.842800375, 0.862802736, 0.882804972, 0.902807319, 0.922809611, 0.942811917, 0.962814167, 0.982816556, 1.00281875, 1.022821125, 1.042823347, 1.062825792, 1.082827931, 1.102830319, 1.122832528, 1.142834972, 1.162837139, 1.182839486, 1.202841722, 1.222844083, 1.242846319, 1.262848681, 1.282850917, 1.302853278, 1.322855542, 1.342857875, 1.362860111, 1.382862486, 1.402864722, 1.422867069, 1.442869306, 1.462871667, 1.482873903, 1.502876264, 1.522878514, 1.542880861, 1.562883097, 1.582885458, 1.602887708, 1.622890069, 1.642892292, 1.662894653, 1.682896889, 1.702899264, 1.722901486, 1.742903847, 1.762906083, 1.782908444, 1.802910681, 1.822913056, 1.842915278, 1.862917639, 1.882919889, 1.902922236, 1.922924472, 1.942926903, 1.962929069, 1.982931431, 2.002933667, 2.022936028] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:32.536" endtime="20201112 09:55:32.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.531" endtime="20201112 09:55:32.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.540" endtime="20201112 09:55:32.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:32.543" endtime="20201112 09:55:32.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.542" endtime="20201112 09:55:32.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.538" endtime="20201112 09:55:32.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.006" endtime="20201112 09:55:32.564"></status>
</kw>
<msg timestamp="20201112 09:55:32.564" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.573" endtime="20201112 09:55:36.677"></status>
</kw>
<msg timestamp="20201112 09:55:36.678" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16074337, 'wakeups': [16084357, 16094357, 16104357, 16114357, 16124357...</msg>
<status status="PASS" starttime="20201112 09:55:32.571" endtime="20201112 09:55:36.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.681" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16074337, 'wakeups': [16084357, 16094357, 16104357, 16114357, 16124357...</msg>
<status status="PASS" starttime="20201112 09:55:36.679" endtime="20201112 09:55:36.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.683" endtime="20201112 09:55:36.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.568" endtime="20201112 09:55:36.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.566" endtime="20201112 09:55:36.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:36.688" level="INFO">${RESULT} = {'start-time': 16074337, 'wakeups': [16084357, 16094357, 16104357, 16114357, 16124357, 16134357, 16144357, 16154357, 16164357, 16174357, 16184357, 16194357, 16204357, 16214357, 16224357, 16234357, 162...</msg>
<status status="PASS" starttime="20201112 09:55:36.686" endtime="20201112 09:55:36.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.692" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:36.691" endtime="20201112 09:55:36.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.694" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:36.693" endtime="20201112 09:55:36.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.689" endtime="20201112 09:55:36.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.699" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:36.698" endtime="20201112 09:55:36.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.701" level="INFO">VALUE: 16074337</msg>
<status status="PASS" starttime="20201112 09:55:36.700" endtime="20201112 09:55:36.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.695" endtime="20201112 09:55:36.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.706" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:36.705" endtime="20201112 09:55:36.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.708" level="INFO">VALUE: [16084357, 16094357, 16104357, 16114357, 16124357, 16134357, 16144357, 16154357, 16164357, 16174357, 16184357, 16194357, 16204357, 16214357, 16224357, 16234357, 16244357, 16254357, 16264357, 16274357, 16284357, 16294357, 16304357, 16314357, 16324357, 16334357, 16344357, 16354357, 16364357, 16374357, 16384357, 16394357, 16404357, 16414357, 16424357, 16434357, 16444357, 16454357, 16464357, 16474357, 16484357, 16494357, 16504357, 16514357, 16524357, 16534357, 16544357, 16554357, 16564357, 16574357, 16584357, 16594357, 16604357, 16614357, 16624357, 16634357, 16644357, 16654357, 16664357, 16674357, 16684357, 16694357, 16704357, 16714357, 16724357, 16734357, 16744357, 16754357, 16764357, 16774357, 16784357, 16794357, 16804357, 16814357, 16824357, 16834357, 16844357, 16854357, 16864357, 16874357, 16884357, 16894357, 16904357, 16914357, 16924357, 16934357, 16944357, 16954357, 16964357, 16974357, 16984357, 16994357, 17004357, 17014357, 17024357, 17034357, 17044357, 17054357, 17064357, 17074357]</msg>
<status status="PASS" starttime="20201112 09:55:36.707" endtime="20201112 09:55:36.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.702" endtime="20201112 09:55:36.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.715" endtime="20201112 09:55:37.007"></status>
</kw>
<msg timestamp="20201112 09:55:37.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020828917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040870764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.714" endtime="20201112 09:55:37.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020828917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040870764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.011" endtime="20201112 09:55:37.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.018" endtime="20201112 09:55:37.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.711" endtime="20201112 09:55:37.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.709" endtime="20201112 09:55:37.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:37.046" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:37.022" endtime="20201112 09:55:37.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.051" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:37.050" endtime="20201112 09:55:37.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.053" level="INFO">VALUE: 0.020828917</msg>
<status status="PASS" starttime="20201112 09:55:37.052" endtime="20201112 09:55:37.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.047" endtime="20201112 09:55:37.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.058" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:37.057" endtime="20201112 09:55:37.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.060" level="INFO">VALUE: [0.040870764, 0.060872972, 0.080875208, 0.100877556, 0.120879792, 0.140882139, 0.160884361, 0.180886722, 0.200888958, 0.220891319, 0.240893542, 0.260895903, 0.280898153, 0.3009005, 0.320902764, 0.340905069, 0.360907319, 0.380909667, 0.400911917, 0.42091425, 0.440916486, 0.460918847, 0.480921083, 0.500923486, 0.520925681, 0.540928028, 0.560930278, 0.580932611, 0.600934875, 0.620937208, 0.640939444, 0.660941792, 0.680944028, 0.700946403, 0.720948625, 0.740951, 0.760953208, 0.780955583, 0.800957833, 0.820960153, 0.840962389, 0.86096475, 0.880966986, 0.900969333, 0.920971569, 0.940973931, 0.960976167, 0.980978569, 1.000980764, 1.020983125, 1.040985347, 1.060987708, 1.080989931, 1.100992292, 1.120994528, 1.140996875, 1.160999111, 1.181001472, 1.201003708, 1.221006056, 1.241008306, 1.261010667, 1.281012889, 1.30101525, 1.321017514, 1.341019861, 1.361022181, 1.381024514, 1.401026764, 1.421029208, 1.441031403, 1.461033778, 1.481036028, 1.501038417, 1.521040694, 1.541043056, 1.561045292, 1.581047681, 1.601049931, 1.621052306, 1.641054625, 1.661056944, 1.681059208, 1.701061597, 1.721063833, 1.741066208, 1.761068458, 1.781070833, 1.801073139, 1.821075486, 1.84107775, 1.861080167, 1.881082375, 1.90108475, 1.921087069, 1.941089403, 1.961091625, 1.981094014, 2.00109625, 2.021098639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:37.059" endtime="20201112 09:55:37.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.054" endtime="20201112 09:55:37.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.063" endtime="20201112 09:55:37.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:37.067" endtime="20201112 09:55:37.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.065" endtime="20201112 09:55:37.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.062" endtime="20201112 09:55:37.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.565" endtime="20201112 09:55:37.087"></status>
</kw>
<msg timestamp="20201112 09:55:37.087" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.095" endtime="20201112 09:55:41.199"></status>
</kw>
<msg timestamp="20201112 09:55:41.200" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18335154, 'wakeups': [18345174, 18355174, 18365174, 18375174, 18385174...</msg>
<status status="PASS" starttime="20201112 09:55:37.094" endtime="20201112 09:55:41.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.202" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18335154, 'wakeups': [18345174, 18355174, 18365174, 18375174, 18385174...</msg>
<status status="PASS" starttime="20201112 09:55:41.201" endtime="20201112 09:55:41.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.204" endtime="20201112 09:55:41.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.091" endtime="20201112 09:55:41.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.089" endtime="20201112 09:55:41.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:41.209" level="INFO">${RESULT} = {'start-time': 18335154, 'wakeups': [18345174, 18355174, 18365174, 18375174, 18385174, 18395174, 18405174, 18415174, 18425174, 18435174, 18445174, 18455174, 18465174, 18475174, 18485174, 18495174, 185...</msg>
<status status="PASS" starttime="20201112 09:55:41.207" endtime="20201112 09:55:41.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.213" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:41.212" endtime="20201112 09:55:41.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.215" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:41.214" endtime="20201112 09:55:41.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.210" endtime="20201112 09:55:41.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.221" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:41.219" endtime="20201112 09:55:41.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.224" level="INFO">VALUE: 18335154</msg>
<status status="PASS" starttime="20201112 09:55:41.223" endtime="20201112 09:55:41.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.217" endtime="20201112 09:55:41.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.228" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:41.227" endtime="20201112 09:55:41.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.231" level="INFO">VALUE: [18345174, 18355174, 18365174, 18375174, 18385174, 18395174, 18405174, 18415174, 18425174, 18435174, 18445174, 18455174, 18465174, 18475174, 18485174, 18495174, 18505174, 18515174, 18525174, 18535174, 18545174, 18555174, 18565174, 18575174, 18585174, 18595174, 18605174, 18615174, 18625174, 18635174, 18645174, 18655174, 18665174, 18675174, 18685174, 18695174, 18705174, 18715174, 18725174, 18735174, 18745174, 18755174, 18765174, 18775174, 18785174, 18795174, 18805174, 18815174, 18825174, 18835174, 18845174, 18855174, 18865174, 18875174, 18885174, 18895174, 18905174, 18915174, 18925174, 18935174, 18945174, 18955174, 18965174, 18975174, 18985174, 18995174, 19005174, 19015174, 19025174, 19035174, 19045174, 19055174, 19065174, 19075174, 19085174, 19095174, 19105174, 19115174, 19125174, 19135174, 19145174, 19155174, 19165174, 19175174, 19185174, 19195174, 19205174, 19215174, 19225174, 19235174, 19245174, 19255174, 19265174, 19275174, 19285174, 19295174, 19305174, 19315174, 19325174, 19335174]</msg>
<status status="PASS" starttime="20201112 09:55:41.229" endtime="20201112 09:55:41.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.225" endtime="20201112 09:55:41.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.238" endtime="20201112 09:55:41.530"></status>
</kw>
<msg timestamp="20201112 09:55:41.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019132208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039174069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.237" endtime="20201112 09:55:41.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019132208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039174069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.534" endtime="20201112 09:55:41.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.541" endtime="20201112 09:55:41.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.234" endtime="20201112 09:55:41.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.232" endtime="20201112 09:55:41.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:41.567" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:41.545" endtime="20201112 09:55:41.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.572" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:55:41.571" endtime="20201112 09:55:41.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.574" level="INFO">VALUE: 0.019132208</msg>
<status status="PASS" starttime="20201112 09:55:41.573" endtime="20201112 09:55:41.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.568" endtime="20201112 09:55:41.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.579" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:41.578" endtime="20201112 09:55:41.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.582" level="INFO">VALUE: [0.039174069, 0.059176375, 0.079178556, 0.099180931, 0.119183167, 0.139185556, 0.159187792, 0.179190181, 0.199192403, 0.219194778, 0.239197028, 0.259199403, 0.279201653, 0.299204028, 0.319206292, 0.339208653, 0.359210917, 0.379213292, 0.399215528, 0.419217903, 0.439220153, 0.459222528, 0.479224792, 0.499227194, 0.519229417, 0.539231778, 0.559234042, 0.579236403, 0.599238653, 0.619241028, 0.639243292, 0.659245653, 0.679247903, 0.699250278, 0.719252528, 0.739254903, 0.759257153, 0.779259528, 0.799261792, 0.819264153, 0.839266403, 0.859268792, 0.879271083, 0.899273403, 0.919275653, 0.939278028, 0.959280278, 0.979282653, 0.999284903, 1.019287347, 1.039289528, 1.059291917, 1.079294153, 1.099296542, 1.119298778, 1.139301153, 1.159303458, 1.179305778, 1.199308028, 1.219310417, 1.239312653, 1.259315028, 1.279317292, 1.299319653, 1.319321903, 1.339324306, 1.359326528, 1.379328903, 1.399331153, 1.419333528, 1.439335833, 1.459338153, 1.479340458, 1.499342778, 1.519345028, 1.539347417, 1.559349681, 1.579352042, 1.599354292, 1.619356653, 1.639358903, 1.659361278, 1.679363542, 1.699365917, 1.719368167, 1.739370542, 1.759372778, 1.779375194, 1.799377403, 1.819379778, 1.839382042, 1.859384417, 1.879386653, 1.899389028, 1.919391292, 1.939393667, 1.959395903, 1.979398319, 1.999400528, 2.019402958] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:41.581" endtime="20201112 09:55:41.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.575" endtime="20201112 09:55:41.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.586" endtime="20201112 09:55:41.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:41.589" endtime="20201112 09:55:41.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.588" endtime="20201112 09:55:41.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.584" endtime="20201112 09:55:41.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.088" endtime="20201112 09:55:41.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.004" endtime="20201112 09:55:41.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.003" endtime="20201112 09:55:41.610"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:41.613" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.621" endtime="20201112 09:55:45.739"></status>
</kw>
<msg timestamp="20201112 09:55:45.741" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 20597843, 'wakeups': [20607871, 20617869, 20627869, 20637869, 20647869...</msg>
<status status="PASS" starttime="20201112 09:55:41.619" endtime="20201112 09:55:45.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 20597843, 'wakeups': [20607871, 20617869, 20627869, 20637869, 20647869...</msg>
<status status="PASS" starttime="20201112 09:55:45.743" endtime="20201112 09:55:45.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.749" endtime="20201112 09:55:45.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.617" endtime="20201112 09:55:45.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.615" endtime="20201112 09:55:45.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:45.760" level="INFO">${RESULT} = {'start-time': 20597843, 'wakeups': [20607871, 20617869, 20627869, 20637869, 20647869, 20657869, 20667869, 20677869, 20687869, 20697869, 20707869, 20717869, 20727869, 20737869, 20747869, 20757869, 207...</msg>
<status status="PASS" starttime="20201112 09:55:45.756" endtime="20201112 09:55:45.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.767" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:45.765" endtime="20201112 09:55:45.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.769" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:45.768" endtime="20201112 09:55:45.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.762" endtime="20201112 09:55:45.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.774" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:45.773" endtime="20201112 09:55:45.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.777" level="INFO">VALUE: 20597843</msg>
<status status="PASS" starttime="20201112 09:55:45.776" endtime="20201112 09:55:45.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.771" endtime="20201112 09:55:45.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.782" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:45.781" endtime="20201112 09:55:45.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.784" level="INFO">VALUE: [20607871, 20617869, 20627869, 20637869, 20647869, 20657869, 20667869, 20677869, 20687869, 20697869, 20707869, 20717869, 20727869, 20737869, 20747869, 20757869, 20767869, 20777869, 20787869, 20797869, 20807869, 20817869, 20827869, 20837869, 20847869, 20857869, 20867869, 20877869, 20887869, 20897869, 20907869, 20917869, 20927869, 20937869, 20947869, 20957869, 20967869, 20977869, 20987869, 20997869, 21007869, 21017869, 21027869, 21037869, 21047869, 21057869, 21067869, 21077869, 21087869, 21097869, 21107869, 21117869, 21127869, 21137869, 21147869, 21157869, 21167869, 21177869, 21187869, 21197869, 21207869, 21217869, 21227869, 21237869, 21247869, 21257869, 21267869, 21277869, 21287869, 21297869, 21307869, 21317869, 21327869, 21337869, 21347869, 21357869, 21367869, 21377869, 21387869, 21397869, 21407869, 21417869, 21427869, 21437869, 21447869, 21457869, 21467869, 21477869, 21487869, 21497869, 21507869, 21517869, 21527869, 21537869, 21547869, 21557869, 21567869, 21577869, 21587869, 21597869]</msg>
<status status="PASS" starttime="20201112 09:55:45.783" endtime="20201112 09:55:45.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.778" endtime="20201112 09:55:45.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.793" endtime="20201112 09:55:46.085"></status>
</kw>
<msg timestamp="20201112 09:55:46.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042001597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.790" endtime="20201112 09:55:46.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042001597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:46.089" endtime="20201112 09:55:46.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.096" endtime="20201112 09:55:46.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.788" endtime="20201112 09:55:46.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.786" endtime="20201112 09:55:46.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:46.123" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:46.100" endtime="20201112 09:55:46.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.127" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:46.126" endtime="20201112 09:55:46.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.129" level="INFO">VALUE: 0.021943236</msg>
<status status="PASS" starttime="20201112 09:55:46.128" endtime="20201112 09:55:46.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.124" endtime="20201112 09:55:46.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.135" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:46.134" endtime="20201112 09:55:46.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.137" level="INFO">VALUE: [0.042001597, 0.06200075, 0.082003014, 0.102005361, 0.122007625, 0.142010042, 0.162012236, 0.182014639, 0.202016847, 0.222019208, 0.242021458, 0.262023819, 0.282026069, 0.302028444, 0.32203075, 0.342033056, 0.362035306, 0.382037681, 0.402039931, 0.422042292, 0.442044542, 0.462046917, 0.482049153, 0.502051528, 0.522053792, 0.542056167, 0.562058403, 0.582060833, 0.602063028, 0.622065389, 0.642067625, 0.66207, 0.68207225, 0.702074625, 0.722076875, 0.742079236, 0.762081486, 0.782083875, 0.802086097, 0.822088472, 0.842090722, 0.862093111, 0.882095361, 0.902097708, 0.922099958, 0.942102347, 0.962104569, 0.982106944, 1.002109208, 1.022111569, 1.042113819, 1.062116194, 1.082118444, 1.102120806, 1.122123042, 1.142125417, 1.162127681, 1.182130042, 1.202132361, 1.222134653, 1.242136903, 1.262139292, 1.282141514, 1.302143889, 1.322146139, 1.342148542, 1.362150764, 1.382153125, 1.402155375, 1.422157764, 1.442159986, 1.462162361, 1.482164625, 1.502167, 1.522169222, 1.542171597, 1.562173861, 1.582176222, 1.602178458, 1.622180833, 1.642183083, 1.662185458, 1.682187722, 1.702190083, 1.722192333, 1.742194722, 1.762196986, 1.782199375, 1.802201569, 1.822203958, 1.842206181, 1.862208556, 1.882210806, 1.902213181, 1.922215431, 1.942217792, 1.962220042, 1.982222403, 2.002224653, 2.022227069] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:46.136" endtime="20201112 09:55:46.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.131" endtime="20201112 09:55:46.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.140" endtime="20201112 09:55:46.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:46.143" endtime="20201112 09:55:46.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.142" endtime="20201112 09:55:46.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.138" endtime="20201112 09:55:46.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.613" endtime="20201112 09:55:46.165"></status>
</kw>
<msg timestamp="20201112 09:55:46.165" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.174" endtime="20201112 09:55:50.293"></status>
</kw>
<msg timestamp="20201112 09:55:50.294" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22874473, 'wakeups': [22884501, 22894499, 22904499, 22914499, 22924499...</msg>
<status status="PASS" starttime="20201112 09:55:46.171" endtime="20201112 09:55:50.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.301" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22874473, 'wakeups': [22884501, 22894499, 22904499, 22914499, 22924499...</msg>
<status status="PASS" starttime="20201112 09:55:50.297" endtime="20201112 09:55:50.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.303" endtime="20201112 09:55:50.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.169" endtime="20201112 09:55:50.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.167" endtime="20201112 09:55:50.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.308" level="INFO">${RESULT} = {'start-time': 22874473, 'wakeups': [22884501, 22894499, 22904499, 22914499, 22924499, 22934499, 22944499, 22954499, 22964499, 22974499, 22984499, 22994499, 23004499, 23014499, 23024499, 23034499, 230...</msg>
<status status="PASS" starttime="20201112 09:55:50.306" endtime="20201112 09:55:50.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.312" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:50.311" endtime="20201112 09:55:50.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.314" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:50.313" endtime="20201112 09:55:50.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.309" endtime="20201112 09:55:50.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.319" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:50.318" endtime="20201112 09:55:50.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.321" level="INFO">VALUE: 22874473</msg>
<status status="PASS" starttime="20201112 09:55:50.320" endtime="20201112 09:55:50.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.315" endtime="20201112 09:55:50.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.326" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:50.325" endtime="20201112 09:55:50.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.328" level="INFO">VALUE: [22884501, 22894499, 22904499, 22914499, 22924499, 22934499, 22944499, 22954499, 22964499, 22974499, 22984499, 22994499, 23004499, 23014499, 23024499, 23034499, 23044499, 23054499, 23064499, 23074499, 23084499, 23094499, 23104499, 23114499, 23124499, 23134499, 23144499, 23154499, 23164499, 23174499, 23184499, 23194499, 23204499, 23214499, 23224499, 23234499, 23244499, 23254499, 23264499, 23274499, 23284499, 23294499, 23304499, 23314499, 23324499, 23334499, 23344499, 23354499, 23364499, 23374499, 23384499, 23394499, 23404499, 23414499, 23424499, 23434499, 23444499, 23454499, 23464499, 23474499, 23484499, 23494499, 23504499, 23514499, 23524499, 23534499, 23544499, 23554499, 23564499, 23574499, 23584499, 23594499, 23604499, 23614499, 23624499, 23634499, 23644499, 23654499, 23664499, 23674499, 23684499, 23694499, 23704499, 23714499, 23724499, 23734499, 23744499, 23754499, 23764499, 23774499, 23784499, 23794499, 23804499, 23814499, 23824499, 23834499, 23844499, 23854499, 23864499, 23874499]</msg>
<status status="PASS" starttime="20201112 09:55:50.327" endtime="20201112 09:55:50.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.322" endtime="20201112 09:55:50.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.335" endtime="20201112 09:55:50.626"></status>
</kw>
<msg timestamp="20201112 09:55:50.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041138903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.334" endtime="20201112 09:55:50.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041138903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.630" endtime="20201112 09:55:50.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.637" endtime="20201112 09:55:50.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.331" endtime="20201112 09:55:50.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.330" endtime="20201112 09:55:50.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.665" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:50.641" endtime="20201112 09:55:50.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.669" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:50.668" endtime="20201112 09:55:50.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.671" level="INFO">VALUE: 0.021079222</msg>
<status status="PASS" starttime="20201112 09:55:50.670" endtime="20201112 09:55:50.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.666" endtime="20201112 09:55:50.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.677" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:50.675" endtime="20201112 09:55:50.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.679" level="INFO">VALUE: [0.041138903, 0.061138069, 0.081140319, 0.101142681, 0.121144903, 0.141147278, 0.161149514, 0.181151889, 0.201154125, 0.221156556, 0.24115875, 0.261161111, 0.281163347, 0.301165708, 0.321167944, 0.341170333, 0.361172556, 0.381174931, 0.401177181, 0.421179542, 0.441181792, 0.461184153, 0.481186389, 0.501188764, 0.521191014, 0.541193389, 0.561195625, 0.581197986, 0.601200222, 0.621202597, 0.641204861, 0.661207222, 0.681209458, 0.701211819, 0.721214056, 0.741216431, 0.761218694, 0.781221042, 0.801223292, 0.821225653, 0.841227889, 0.861230264, 0.881232514, 0.901234875, 0.921237125, 0.9412395, 0.961241792, 0.981244111, 1.001246347, 1.021248722, 1.041250958, 1.061253333, 1.081255597, 1.101257931, 1.121260181, 1.141262542, 1.161264792, 1.181267153, 1.201269417, 1.221271764, 1.241274, 1.261276375, 1.281278625, 1.301280986, 1.321283236, 1.341285625, 1.361287847, 1.381290222, 1.401292458, 1.421294861, 1.441297083, 1.461299431, 1.481301681, 1.501304042, 1.521306347, 1.541308653, 1.561310917, 1.581313347, 1.601315514, 1.621317875, 1.641320125, 1.661322486, 1.681324736, 1.701327139, 1.721329361, 1.741331722, 1.761333958, 1.781336347, 1.801338569, 1.821340931, 1.841343181, 1.861345542, 1.881347792, 1.901350167, 1.921352417, 1.941354778, 1.961357014, 1.981359417, 2.001361625, 2.021364] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:50.678" endtime="20201112 09:55:50.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.673" endtime="20201112 09:55:50.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.682" endtime="20201112 09:55:50.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:50.685" endtime="20201112 09:55:50.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.684" endtime="20201112 09:55:50.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.680" endtime="20201112 09:55:50.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.165" endtime="20201112 09:55:50.706"></status>
</kw>
<msg timestamp="20201112 09:55:50.706" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.714" endtime="20201112 09:55:54.833"></status>
</kw>
<msg timestamp="20201112 09:55:54.834" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25144416, 'wakeups': [25154444, 25164442, 25174442, 25184442, 25194442...</msg>
<status status="PASS" starttime="20201112 09:55:50.713" endtime="20201112 09:55:54.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.840" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25144416, 'wakeups': [25154444, 25164442, 25174442, 25184442, 25194442...</msg>
<status status="PASS" starttime="20201112 09:55:54.836" endtime="20201112 09:55:54.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.842" endtime="20201112 09:55:54.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.710" endtime="20201112 09:55:54.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.708" endtime="20201112 09:55:54.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:54.853" level="INFO">${RESULT} = {'start-time': 25144416, 'wakeups': [25154444, 25164442, 25174442, 25184442, 25194442, 25204442, 25214442, 25224442, 25234442, 25244442, 25254442, 25264442, 25274442, 25284442, 25294442, 25304442, 253...</msg>
<status status="PASS" starttime="20201112 09:55:54.849" endtime="20201112 09:55:54.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.862" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:54.861" endtime="20201112 09:55:54.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.864" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:54.863" endtime="20201112 09:55:54.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.855" endtime="20201112 09:55:54.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.869" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:54.868" endtime="20201112 09:55:54.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.872" level="INFO">VALUE: 25144416</msg>
<status status="PASS" starttime="20201112 09:55:54.871" endtime="20201112 09:55:54.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.865" endtime="20201112 09:55:54.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.877" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:54.876" endtime="20201112 09:55:54.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.879" level="INFO">VALUE: [25154444, 25164442, 25174442, 25184442, 25194442, 25204442, 25214442, 25224442, 25234442, 25244442, 25254442, 25264442, 25274442, 25284442, 25294442, 25304442, 25314442, 25324442, 25334442, 25344442, 25354442, 25364442, 25374442, 25384442, 25394442, 25404442, 25414442, 25424442, 25434442, 25444442, 25454442, 25464442, 25474442, 25484442, 25494442, 25504442, 25514442, 25524442, 25534442, 25544442, 25554442, 25564442, 25574442, 25584442, 25594442, 25604442, 25614442, 25624442, 25634442, 25644442, 25654442, 25664442, 25674442, 25684442, 25694442, 25704442, 25714442, 25724442, 25734442, 25744442, 25754442, 25764442, 25774442, 25784442, 25794442, 25804442, 25814442, 25824442, 25834442, 25844442, 25854442, 25864442, 25874442, 25884442, 25894442, 25904442, 25914442, 25924442, 25934442, 25944442, 25954442, 25964442, 25974442, 25984442, 25994442, 26004442, 26014442, 26024442, 26034442, 26044442, 26054442, 26064442, 26074442, 26084442, 26094442, 26104442, 26114442, 26124442, 26134442, 26144442]</msg>
<status status="PASS" starttime="20201112 09:55:54.878" endtime="20201112 09:55:54.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.874" endtime="20201112 09:55:54.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.887" endtime="20201112 09:55:55.177"></status>
</kw>
<msg timestamp="20201112 09:55:55.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019292528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039352208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.885" endtime="20201112 09:55:55.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019292528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039352208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.181" endtime="20201112 09:55:55.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.189" endtime="20201112 09:55:55.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.882" endtime="20201112 09:55:55.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.881" endtime="20201112 09:55:55.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:55.215" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:55.192" endtime="20201112 09:55:55.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.220" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:55:55.219" endtime="20201112 09:55:55.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.222" level="INFO">VALUE: 0.019292528</msg>
<status status="PASS" starttime="20201112 09:55:55.221" endtime="20201112 09:55:55.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.216" endtime="20201112 09:55:55.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.227" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:55.226" endtime="20201112 09:55:55.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.230" level="INFO">VALUE: [0.039352208, 0.059351375, 0.079353597, 0.099355958, 0.119358194, 0.139360556, 0.159362792, 0.179365208, 0.199367403, 0.219369778, 0.239372, 0.259374403, 0.279376653, 0.299378972, 0.319381208, 0.339383583, 0.359385819, 0.379388181, 0.399390417, 0.419392792, 0.439395056, 0.459397403, 0.479399639, 0.499402, 0.519404236, 0.539406597, 0.559408833, 0.579411208, 0.599413444, 0.619415806, 0.639418056, 0.659420417, 0.679422653, 0.699425042, 0.719427264, 0.739429625, 0.759431875, 0.779434236, 0.799436472, 0.819438833, 0.839441069, 0.859443444, 0.879445681, 0.899448042, 0.919450292, 0.939452667, 0.959454903, 0.979457292, 0.9994595, 1.019461889, 1.039464097, 1.059466472, 1.079468708, 1.099471069, 1.119473306, 1.139475694, 1.159477931, 1.179480292, 1.199482542, 1.219484889, 1.239487139, 1.259489556, 1.279491736, 1.299494111, 1.319496333, 1.339498708, 1.359500958, 1.379503319, 1.399505556, 1.419507917, 1.439510167, 1.459512514, 1.479514764, 1.499517139, 1.519519361, 1.53952175, 1.559523986, 1.579526347, 1.599528569, 1.619530944, 1.639533181, 1.659535542, 1.679537792, 1.699540153, 1.719542403, 1.739544764, 1.759547042, 1.779549375, 1.799551597, 1.819553972, 1.839556222, 1.859558583, 1.879560847, 1.899563194, 1.919565431, 1.939567792, 1.959570042, 1.979572389, 1.999574625, 2.019577] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:55.229" endtime="20201112 09:55:55.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.223" endtime="20201112 09:55:55.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.234" endtime="20201112 09:55:55.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:55.237" endtime="20201112 09:55:55.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.235" endtime="20201112 09:55:55.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.232" endtime="20201112 09:55:55.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.707" endtime="20201112 09:55:55.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.611" endtime="20201112 09:55:55.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.611" endtime="20201112 09:55:55.258"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:55:55.261" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.269" endtime="20201112 09:55:59.388"></status>
</kw>
<msg timestamp="20201112 09:55:59.389" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27421665, 'wakeups': [27431702, 27441702, 27451701, 27461701, 27471701...</msg>
<status status="PASS" starttime="20201112 09:55:55.267" endtime="20201112 09:55:59.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.395" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27421665, 'wakeups': [27431702, 27441702, 27451701, 27461701, 27471701...</msg>
<status status="PASS" starttime="20201112 09:55:59.392" endtime="20201112 09:55:59.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.397" endtime="20201112 09:55:59.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.265" endtime="20201112 09:55:59.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.263" endtime="20201112 09:55:59.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:59.408" level="INFO">${RESULT} = {'start-time': 27421665, 'wakeups': [27431702, 27441702, 27451701, 27461701, 27471701, 27481701, 27491701, 27501701, 27511701, 27521701, 27531701, 27541701, 27551701, 27561701, 27571701, 27581701, 275...</msg>
<status status="PASS" starttime="20201112 09:55:59.404" endtime="20201112 09:55:59.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.417" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:55:59.415" endtime="20201112 09:55:59.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.421" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:55:59.419" endtime="20201112 09:55:59.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.410" endtime="20201112 09:55:59.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.426" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:59.425" endtime="20201112 09:55:59.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.428" level="INFO">VALUE: 27421665</msg>
<status status="PASS" starttime="20201112 09:55:59.427" endtime="20201112 09:55:59.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.422" endtime="20201112 09:55:59.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.433" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:59.432" endtime="20201112 09:55:59.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.435" level="INFO">VALUE: [27431702, 27441702, 27451701, 27461701, 27471701, 27481701, 27491701, 27501701, 27511701, 27521701, 27531701, 27541701, 27551701, 27561701, 27571701, 27581701, 27591701, 27601701, 27611701, 27621701, 27631701, 27641701, 27651701, 27661701, 27671701, 27681701, 27691701, 27701701, 27711701, 27721701, 27731701, 27741701, 27751701, 27761701, 27771701, 27781701, 27791701, 27801701, 27811701, 27821701, 27831701, 27841701, 27851701, 27861701, 27871701, 27881701, 27891701, 27901701, 27911701, 27921701, 27931701, 27941701, 27951701, 27961701, 27971701, 27981701, 27991701, 28001701, 28011701, 28021701, 28031701, 28041701, 28051701, 28061701, 28071701, 28081701, 28091701, 28101701, 28111701, 28121701, 28131701, 28141701, 28151701, 28161701, 28171701, 28181701, 28191701, 28201701, 28211701, 28221701, 28231701, 28241701, 28251701, 28261701, 28271701, 28281701, 28291701, 28301701, 28311701, 28321701, 28331701, 28341701, 28351701, 28361701, 28371701, 28381701, 28391701, 28401701, 28411701, 28421701]</msg>
<status status="PASS" starttime="20201112 09:55:59.434" endtime="20201112 09:55:59.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.429" endtime="20201112 09:55:59.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.443" endtime="20201112 09:55:59.734"></status>
</kw>
<msg timestamp="20201112 09:55:59.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042277972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:59.441" endtime="20201112 09:55:59.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042277972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:59.738" endtime="20201112 09:55:59.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.746" endtime="20201112 09:55:59.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.438" endtime="20201112 09:55:59.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.437" endtime="20201112 09:55:59.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:59.772" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:55:59.749" endtime="20201112 09:55:59.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.776" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:55:59.775" endtime="20201112 09:55:59.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.778" level="INFO">VALUE: 0.022199472</msg>
<status status="PASS" starttime="20201112 09:55:59.777" endtime="20201112 09:55:59.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.772" endtime="20201112 09:55:59.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.783" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:55:59.782" endtime="20201112 09:55:59.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.786" level="INFO">VALUE: [0.042277972, 0.062278653, 0.082278875, 0.102281264, 0.122283458, 0.142285819, 0.162288056, 0.182290417, 0.202292667, 0.222295014, 0.242297264, 0.262299611, 0.282301847, 0.302304208, 0.322306444, 0.342308833, 0.362311042, 0.382313417, 0.402315639, 0.422318, 0.442320236, 0.462322597, 0.482324833, 0.502327278, 0.522329431, 0.542331806, 0.562334028, 0.582336403, 0.602338625, 0.622341, 0.642343236, 0.662345611, 0.682347833, 0.702350194, 0.722352431, 0.742354792, 0.762357069, 0.782359389, 0.802361625, 0.822364, 0.842366222, 0.862368597, 0.882370819, 0.902373194, 0.922375417, 0.942377806, 0.962380014, 0.982382444, 1.002384625, 1.022386986, 1.042389236, 1.062391583, 1.082393833, 1.102396194, 1.122398417, 1.142400778, 1.162403014, 1.182405375, 1.202407639, 1.222409972, 1.242412208, 1.262414569, 1.282416806, 1.302419167, 1.322421486, 1.342423764, 1.362426014, 1.382428375, 1.402430611, 1.422432972, 1.442435222, 1.462437583, 1.482439806, 1.502442181, 1.522444403, 1.542446764, 1.562449014, 1.582451375, 1.602453597, 1.622455958, 1.642458222, 1.662460556, 1.682462806, 1.702465153, 1.722467403, 1.74246975, 1.762471986, 1.782474375, 1.802476583, 1.822479, 1.842481208, 1.862483556, 1.882485806, 1.902488153, 1.922490389, 1.942492764, 1.962494986, 1.982497347, 2.002499583, 2.022501944] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:55:59.785" endtime="20201112 09:55:59.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.780" endtime="20201112 09:55:59.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.789" endtime="20201112 09:55:59.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:59.792" endtime="20201112 09:55:59.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.791" endtime="20201112 09:55:59.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.787" endtime="20201112 09:55:59.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.261" endtime="20201112 09:55:59.813"></status>
</kw>
<msg timestamp="20201112 09:55:59.813" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.822" endtime="20201112 09:56:03.934"></status>
</kw>
<msg timestamp="20201112 09:56:03.935" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 29698415, 'wakeups': [29708452, 29718452, 29728451, 29738451, 29748451...</msg>
<status status="PASS" starttime="20201112 09:55:59.821" endtime="20201112 09:56:03.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.937" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 29698415, 'wakeups': [29708452, 29718452, 29728451, 29738451, 29748451...</msg>
<status status="PASS" starttime="20201112 09:56:03.936" endtime="20201112 09:56:03.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.939" endtime="20201112 09:56:03.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.817" endtime="20201112 09:56:03.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.815" endtime="20201112 09:56:03.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:03.944" level="INFO">${RESULT} = {'start-time': 29698415, 'wakeups': [29708452, 29718452, 29728451, 29738451, 29748451, 29758451, 29768451, 29778451, 29788451, 29798451, 29808451, 29818451, 29828451, 29838451, 29848451, 29858451, 298...</msg>
<status status="PASS" starttime="20201112 09:56:03.942" endtime="20201112 09:56:03.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.948" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:03.947" endtime="20201112 09:56:03.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.950" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:03.949" endtime="20201112 09:56:03.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.945" endtime="20201112 09:56:03.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.955" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:03.954" endtime="20201112 09:56:03.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.957" level="INFO">VALUE: 29698415</msg>
<status status="PASS" starttime="20201112 09:56:03.956" endtime="20201112 09:56:03.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.951" endtime="20201112 09:56:03.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.962" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:03.961" endtime="20201112 09:56:03.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.964" level="INFO">VALUE: [29708452, 29718452, 29728451, 29738451, 29748451, 29758451, 29768451, 29778451, 29788451, 29798451, 29808451, 29818451, 29828451, 29838451, 29848451, 29858451, 29868451, 29878451, 29888451, 29898451, 29908451, 29918451, 29928451, 29938451, 29948451, 29958451, 29968451, 29978451, 29988451, 29998451, 30008451, 30018451, 30028451, 30038451, 30048451, 30058451, 30068451, 30078451, 30088451, 30098451, 30108451, 30118451, 30128451, 30138451, 30148451, 30158451, 30168451, 30178451, 30188451, 30198451, 30208451, 30218451, 30228451, 30238451, 30248451, 30258451, 30268451, 30278451, 30288451, 30298451, 30308451, 30318451, 30328451, 30338451, 30348451, 30358451, 30368451, 30378451, 30388451, 30398451, 30408451, 30418451, 30428451, 30438451, 30448451, 30458451, 30468451, 30478451, 30488451, 30498451, 30508451, 30518451, 30528451, 30538451, 30548451, 30558451, 30568451, 30578451, 30588451, 30598451, 30608451, 30618451, 30628451, 30638451, 30648451, 30658451, 30668451, 30678451, 30688451, 30698451]</msg>
<status status="PASS" starttime="20201112 09:56:03.963" endtime="20201112 09:56:03.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.958" endtime="20201112 09:56:03.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.972" endtime="20201112 09:56:04.263"></status>
</kw>
<msg timestamp="20201112 09:56:04.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:03.970" endtime="20201112 09:56:04.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040248861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.266" endtime="20201112 09:56:04.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.274" endtime="20201112 09:56:04.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.967" endtime="20201112 09:56:04.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.965" endtime="20201112 09:56:04.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:04.301" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:04.277" endtime="20201112 09:56:04.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.306" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:04.305" endtime="20201112 09:56:04.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.308" level="INFO">VALUE: 0.020171722</msg>
<status status="PASS" starttime="20201112 09:56:04.307" endtime="20201112 09:56:04.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.302" endtime="20201112 09:56:04.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.313" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:04.312" endtime="20201112 09:56:04.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.315" level="INFO">VALUE: [0.040248861, 0.060249542, 0.080249778, 0.100252125, 0.120254361, 0.140256792, 0.160258944, 0.180261306, 0.200263542, 0.220265875, 0.240268111, 0.260270472, 0.280272708, 0.300275056, 0.320277306, 0.340279667, 0.360281889, 0.380284236, 0.400286514, 0.420288847, 0.440291069, 0.460293431, 0.480295667, 0.500298028, 0.52030025, 0.540302611, 0.560304833, 0.580307208, 0.600309431, 0.620311792, 0.640314028, 0.660316375, 0.680318653, 0.700320972, 0.72032325, 0.740325556, 0.760327806, 0.780330153, 0.800332403, 0.820334792, 0.840336972, 0.860339347, 0.880341569, 0.900343931, 0.920346167, 0.940348514, 0.960350764, 0.980353125, 1.000355361, 1.020357694, 1.040359931, 1.060362306, 1.080364542, 1.100366944, 1.120369125, 1.140371528, 1.160373778, 1.180376167, 1.200378403, 1.220380819, 1.240383042, 1.260385417, 1.280387681, 1.300390056, 1.320392319, 1.340394694, 1.360396958, 1.380399333, 1.400401639, 1.420403986, 1.44040625, 1.460408653, 1.480410847, 1.500413236, 1.5204155, 1.540417861, 1.560420125, 1.5804225, 1.60042475, 1.620427153, 1.640429403, 1.660431778, 1.680434028, 1.700436389, 1.720438681, 1.740441042, 1.760443292, 1.780445653, 1.800447917, 1.820450292, 1.840452542, 1.860454931, 1.880457181, 1.900459556, 1.920461806, 1.940464222, 1.960466458, 1.980468819, 2.000471097, 2.020473458] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:04.314" endtime="20201112 09:56:04.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.309" endtime="20201112 09:56:04.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.318" endtime="20201112 09:56:04.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:04.322" endtime="20201112 09:56:04.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.320" endtime="20201112 09:56:04.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.317" endtime="20201112 09:56:04.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.814" endtime="20201112 09:56:04.343"></status>
</kw>
<msg timestamp="20201112 09:56:04.343" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.352" endtime="20201112 09:56:08.455"></status>
</kw>
<msg timestamp="20201112 09:56:08.456" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31962981, 'wakeups': [31973018, 31983018, 31993017, 32003017, 32013017...</msg>
<status status="PASS" starttime="20201112 09:56:04.350" endtime="20201112 09:56:08.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.460" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31962981, 'wakeups': [31973018, 31983018, 31993017, 32003017, 32013017...</msg>
<status status="PASS" starttime="20201112 09:56:08.457" endtime="20201112 09:56:08.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.461" endtime="20201112 09:56:08.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.347" endtime="20201112 09:56:08.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.345" endtime="20201112 09:56:08.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.467" level="INFO">${RESULT} = {'start-time': 31962981, 'wakeups': [31973018, 31983018, 31993017, 32003017, 32013017, 32023017, 32033017, 32043017, 32053017, 32063017, 32073017, 32083017, 32093017, 32103017, 32113017, 32123017, 321...</msg>
<status status="PASS" starttime="20201112 09:56:08.465" endtime="20201112 09:56:08.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.472" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:08.470" endtime="20201112 09:56:08.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.474" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:08.473" endtime="20201112 09:56:08.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.468" endtime="20201112 09:56:08.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.480" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:08.479" endtime="20201112 09:56:08.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.482" level="INFO">VALUE: 31962981</msg>
<status status="PASS" starttime="20201112 09:56:08.481" endtime="20201112 09:56:08.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.475" endtime="20201112 09:56:08.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.487" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:08.486" endtime="20201112 09:56:08.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.489" level="INFO">VALUE: [31973018, 31983018, 31993017, 32003017, 32013017, 32023017, 32033017, 32043017, 32053017, 32063017, 32073017, 32083017, 32093017, 32103017, 32113017, 32123017, 32133017, 32143017, 32153017, 32163017, 32173017, 32183017, 32193017, 32203017, 32213017, 32223017, 32233017, 32243017, 32253017, 32263017, 32273017, 32283017, 32293017, 32303017, 32313017, 32323017, 32333017, 32343017, 32353017, 32363017, 32373017, 32383017, 32393017, 32403017, 32413017, 32423017, 32433017, 32443017, 32453017, 32463017, 32473017, 32483017, 32493017, 32503017, 32513017, 32523017, 32533017, 32543017, 32553017, 32563017, 32573017, 32583017, 32593017, 32603017, 32613017, 32623017, 32633017, 32643017, 32653017, 32663017, 32673017, 32683017, 32693017, 32703017, 32713017, 32723017, 32733017, 32743017, 32753017, 32763017, 32773017, 32783017, 32793017, 32803017, 32813017, 32823017, 32833017, 32843017, 32853017, 32863017, 32873017, 32883017, 32893017, 32903017, 32913017, 32923017, 32933017, 32943017, 32953017, 32963017]</msg>
<status status="PASS" starttime="20201112 09:56:08.488" endtime="20201112 09:56:08.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.483" endtime="20201112 09:56:08.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.496" endtime="20201112 09:56:08.787"></status>
</kw>
<msg timestamp="20201112 09:56:08.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040313222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.495" endtime="20201112 09:56:08.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040313222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.791" endtime="20201112 09:56:08.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.798" endtime="20201112 09:56:08.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.492" endtime="20201112 09:56:08.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.491" endtime="20201112 09:56:08.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.824" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:08.802" endtime="20201112 09:56:08.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.829" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:08.828" endtime="20201112 09:56:08.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.831" level="INFO">VALUE: 0.020234708</msg>
<status status="PASS" starttime="20201112 09:56:08.830" endtime="20201112 09:56:08.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.826" endtime="20201112 09:56:08.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.837" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:08.836" endtime="20201112 09:56:08.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.840" level="INFO">VALUE: [0.040313222, 0.060313889, 0.080314153, 0.100316514, 0.12031875, 0.140321125, 0.160323389, 0.18032575, 0.200328, 0.220330375, 0.240332639, 0.260335014, 0.28033725, 0.300339625, 0.320341875, 0.34034425, 0.360346486, 0.380348875, 0.400351111, 0.420353486, 0.440355736, 0.460358111, 0.480360361, 0.50036275, 0.520365, 0.540367375, 0.560369611, 0.580372028, 0.60037425, 0.620376611, 0.640378861, 0.660381278, 0.680383486, 0.700385861, 0.720388111, 0.740390486, 0.760392736, 0.780395125, 0.800397361, 0.82039975, 0.840401986, 0.860404375, 0.880406611, 0.900408986, 0.92041125, 0.940413667, 0.960415861, 0.980418236, 1.000420486, 1.020422875, 1.040425125, 1.0604275, 1.08042975, 1.100432125, 1.120434375, 1.14043675, 1.160439, 1.180441375, 1.200443625, 1.220446, 1.24044825, 1.260450639, 1.280452889, 1.300455306, 1.320457528, 1.340459889, 1.360462139, 1.380464514, 1.400466778, 1.420469125, 1.440471375, 1.46047375, 1.480476028, 1.500478389, 1.520480625, 1.540483, 1.560485264, 1.580487639, 1.600489889, 1.620492278, 1.6404945, 1.660496875, 1.680499125, 1.700501514, 1.72050375, 1.740506125, 1.760508431, 1.78051075, 1.800513, 1.820515375, 1.840517625, 1.86052, 1.880522278, 1.900524625, 1.920526917, 1.940529264, 1.9605315, 1.980533875, 2.000536125, 2.020538569] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:08.838" endtime="20201112 09:56:08.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.833" endtime="20201112 09:56:08.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.843" endtime="20201112 09:56:08.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:08.846" endtime="20201112 09:56:08.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.845" endtime="20201112 09:56:08.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.841" endtime="20201112 09:56:08.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.344" endtime="20201112 09:56:08.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.259" endtime="20201112 09:56:08.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.258" endtime="20201112 09:56:08.867"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:08.870" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.878" endtime="20201112 09:56:12.996"></status>
</kw>
<msg timestamp="20201112 09:56:12.997" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 34225986, 'wakeups': [34236034, 34246033, 34256033, 34266033, 34276033...</msg>
<status status="PASS" starttime="20201112 09:56:08.876" endtime="20201112 09:56:12.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:12.999" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 34225986, 'wakeups': [34236034, 34246033, 34256033, 34266033, 34276033...</msg>
<status status="PASS" starttime="20201112 09:56:12.998" endtime="20201112 09:56:13.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.001" endtime="20201112 09:56:13.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.874" endtime="20201112 09:56:13.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.872" endtime="20201112 09:56:13.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.006" level="INFO">${RESULT} = {'start-time': 34225986, 'wakeups': [34236034, 34246033, 34256033, 34266033, 34276033, 34286033, 34296033, 34306033, 34316033, 34326033, 34336033, 34346033, 34356033, 34366033, 34376033, 34386033, 343...</msg>
<status status="PASS" starttime="20201112 09:56:13.004" endtime="20201112 09:56:13.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.010" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:13.009" endtime="20201112 09:56:13.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.013" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:13.012" endtime="20201112 09:56:13.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.007" endtime="20201112 09:56:13.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.017" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:13.016" endtime="20201112 09:56:13.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.020" level="INFO">VALUE: 34225986</msg>
<status status="PASS" starttime="20201112 09:56:13.019" endtime="20201112 09:56:13.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.014" endtime="20201112 09:56:13.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.024" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:13.023" endtime="20201112 09:56:13.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.027" level="INFO">VALUE: [34236034, 34246033, 34256033, 34266033, 34276033, 34286033, 34296033, 34306033, 34316033, 34326033, 34336033, 34346033, 34356033, 34366033, 34376033, 34386033, 34396033, 34406033, 34416033, 34426033, 34436033, 34446033, 34456033, 34466033, 34476033, 34486033, 34496033, 34506033, 34516033, 34526033, 34536033, 34546033, 34556033, 34566033, 34576033, 34586033, 34596033, 34606033, 34616033, 34626033, 34636033, 34646033, 34656033, 34666033, 34676033, 34686033, 34696033, 34706033, 34716033, 34726033, 34736033, 34746033, 34756033, 34766033, 34776033, 34786033, 34796033, 34806033, 34816033, 34826033, 34836033, 34846033, 34856033, 34866033, 34876033, 34886033, 34896033, 34906033, 34916033, 34926033, 34936033, 34946033, 34956033, 34966033, 34976033, 34986033, 34996033, 35006033, 35016033, 35026033, 35036033, 35046033, 35056033, 35066033, 35076033, 35086033, 35096033, 35106033, 35116033, 35126033, 35136033, 35146033, 35156033, 35166033, 35176033, 35186033, 35196033, 35206033, 35216033, 35226033]</msg>
<status status="PASS" starttime="20201112 09:56:13.026" endtime="20201112 09:56:13.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.021" endtime="20201112 09:56:13.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.035" endtime="20201112 09:56:13.327"></status>
</kw>
<msg timestamp="20201112 09:56:13.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042006903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.033" endtime="20201112 09:56:13.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042006903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.330" endtime="20201112 09:56:13.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.338" endtime="20201112 09:56:13.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.030" endtime="20201112 09:56:13.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.028" endtime="20201112 09:56:13.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.364" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:13.341" endtime="20201112 09:56:13.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.368" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:13.367" endtime="20201112 09:56:13.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.370" level="INFO">VALUE: 0.021908347</msg>
<status status="PASS" starttime="20201112 09:56:13.369" endtime="20201112 09:56:13.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.365" endtime="20201112 09:56:13.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.376" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:13.375" endtime="20201112 09:56:13.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.378" level="INFO">VALUE: [0.042006903, 0.062008125, 0.082010361, 0.102012736, 0.122014972, 0.142017347, 0.162019625, 0.182021958, 0.202024208, 0.222026569, 0.242028819, 0.262031194, 0.282033444, 0.302035806, 0.322038056, 0.342040431, 0.362042667, 0.382045042, 0.402047306, 0.422049653, 0.442051958, 0.462054319, 0.482056528, 0.502058917, 0.522061139, 0.542063514, 0.562065764, 0.582068139, 0.602070389, 0.62207275, 0.642074986, 0.662077375, 0.682079611, 0.702081986, 0.722084222, 0.742086597, 0.762088847, 0.782091306, 0.802093458, 0.822095833, 0.842098097, 0.862100472, 0.882102708, 0.902105069, 0.922107319, 0.942109722, 0.962111944, 0.982114306, 1.002116556, 1.022118917, 1.042121181, 1.062123556, 1.082125792, 1.102128153, 1.122130417, 1.142132778, 1.162135028, 1.182137389, 1.202139694, 1.222142014, 1.24214425, 1.262146625, 1.282148889, 1.30215125, 1.3221535, 1.342155861, 1.362158125, 1.382160486, 1.40216275, 1.422165097, 1.442167361, 1.462169722, 1.482171958, 1.502174333, 1.522176625, 1.542178958, 1.562181222, 1.582183583, 1.602185819, 1.622188208, 1.642190431, 1.662192806, 1.682195056, 1.702197431, 1.722199681, 1.742202042, 1.762204306, 1.782206667, 1.802208903, 1.822211292, 1.842213542, 1.862215903, 1.882218139, 1.902220514, 1.922222764, 1.942225139, 1.962227417, 1.98222975, 2.002232, 2.022234389] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:13.377" endtime="20201112 09:56:13.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.372" endtime="20201112 09:56:13.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.381" endtime="20201112 09:56:13.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:13.385" endtime="20201112 09:56:13.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.383" endtime="20201112 09:56:13.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.380" endtime="20201112 09:56:13.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.870" endtime="20201112 09:56:13.405"></status>
</kw>
<msg timestamp="20201112 09:56:13.406" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.415" endtime="20201112 09:56:17.534"></status>
</kw>
<msg timestamp="20201112 09:56:17.536" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 36494612, 'wakeups': [36504660, 36514659, 36524659, 36534659, 36544659...</msg>
<status status="PASS" starttime="20201112 09:56:13.413" endtime="20201112 09:56:17.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.542" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 36494612, 'wakeups': [36504660, 36514659, 36524659, 36534659, 36544659...</msg>
<status status="PASS" starttime="20201112 09:56:17.538" endtime="20201112 09:56:17.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.544" endtime="20201112 09:56:17.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.410" endtime="20201112 09:56:17.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.408" endtime="20201112 09:56:17.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:17.555" level="INFO">${RESULT} = {'start-time': 36494612, 'wakeups': [36504660, 36514659, 36524659, 36534659, 36544659, 36554659, 36564659, 36574659, 36584659, 36594659, 36604659, 36614659, 36624659, 36634659, 36644659, 36654659, 366...</msg>
<status status="PASS" starttime="20201112 09:56:17.551" endtime="20201112 09:56:17.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.559" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:17.558" endtime="20201112 09:56:17.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.561" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:17.560" endtime="20201112 09:56:17.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.556" endtime="20201112 09:56:17.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.566" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:17.565" endtime="20201112 09:56:17.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.568" level="INFO">VALUE: 36494612</msg>
<status status="PASS" starttime="20201112 09:56:17.567" endtime="20201112 09:56:17.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.563" endtime="20201112 09:56:17.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.573" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:17.572" endtime="20201112 09:56:17.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.575" level="INFO">VALUE: [36504660, 36514659, 36524659, 36534659, 36544659, 36554659, 36564659, 36574659, 36584659, 36594659, 36604659, 36614659, 36624659, 36634659, 36644659, 36654659, 36664659, 36674659, 36684659, 36694659, 36704659, 36714659, 36724659, 36734659, 36744659, 36754659, 36764659, 36774659, 36784659, 36794659, 36804659, 36814659, 36824659, 36834659, 36844659, 36854659, 36864659, 36874659, 36884659, 36894659, 36904659, 36914659, 36924659, 36934659, 36944659, 36954659, 36964659, 36974659, 36984659, 36994659, 37004659, 37014659, 37024659, 37034659, 37044659, 37054659, 37064659, 37074659, 37084659, 37094659, 37104659, 37114659, 37124659, 37134659, 37144659, 37154659, 37164659, 37174659, 37184659, 37194659, 37204659, 37214659, 37224659, 37234659, 37244659, 37254659, 37264659, 37274659, 37284659, 37294659, 37304659, 37314659, 37324659, 37334659, 37344659, 37354659, 37364659, 37374659, 37384659, 37394659, 37404659, 37414659, 37424659, 37434659, 37444659, 37454659, 37464659, 37474659, 37484659, 37494659]</msg>
<status status="PASS" starttime="20201112 09:56:17.574" endtime="20201112 09:56:17.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.570" endtime="20201112 09:56:17.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.583" endtime="20201112 09:56:17.875"></status>
</kw>
<msg timestamp="20201112 09:56:17.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040791139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:17.581" endtime="20201112 09:56:17.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040791139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:17.878" endtime="20201112 09:56:17.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.886" endtime="20201112 09:56:17.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.579" endtime="20201112 09:56:17.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.577" endtime="20201112 09:56:17.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:17.913" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:17.889" endtime="20201112 09:56:17.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.917" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:17.916" endtime="20201112 09:56:17.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.919" level="INFO">VALUE: 0.020691931</msg>
<status status="PASS" starttime="20201112 09:56:17.918" endtime="20201112 09:56:17.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.914" endtime="20201112 09:56:17.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.924" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:17.923" endtime="20201112 09:56:17.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:17.927" level="INFO">VALUE: [0.040791139, 0.060792361, 0.080794597, 0.100796972, 0.120799194, 0.140801569, 0.160803806, 0.180806167, 0.200808417, 0.220810792, 0.240813028, 0.260815389, 0.280817625, 0.30082, 0.32082225, 0.340824625, 0.360826847, 0.380829222, 0.400831458, 0.420833889, 0.440836083, 0.460838458, 0.480840681, 0.500843069, 0.520845292, 0.540847681, 0.560849903, 0.580852319, 0.600854528, 0.620856889, 0.640859139, 0.6608615, 0.680863736, 0.700866125, 0.720868361, 0.740870722, 0.760873042, 0.780875333, 0.800877569, 0.820879944, 0.840882181, 0.860884569, 0.880886792, 0.900889167, 0.920891417, 0.940893778, 0.960896014, 0.980898389, 1.000900625, 1.020902986, 1.04090525, 1.060907597, 1.080909847, 1.10091225, 1.120914458, 1.140916833, 1.160919069, 1.180921431, 1.200923681, 1.220926042, 1.240928292, 1.260930653, 1.280932917, 1.300935278, 1.320937556, 1.340939875, 1.360942111, 1.380944486, 1.400946736, 1.420949111, 1.440951333, 1.460953722, 1.480955944, 1.500958319, 1.520960556, 1.540962931, 1.560965181, 1.580967542, 1.600969792, 1.620972153, 1.640974444, 1.660976764, 1.680979, 1.700981375, 1.720983625, 1.740986, 1.760988292, 1.780990611, 1.800992833, 1.820995208, 1.840997458, 1.860999819, 1.881002097, 1.901004431, 1.921006681, 1.941009056, 1.961011278, 1.981013681, 2.001015986, 2.021018278] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:17.926" endtime="20201112 09:56:17.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.921" endtime="20201112 09:56:17.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.930" endtime="20201112 09:56:17.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:17.933" endtime="20201112 09:56:17.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.932" endtime="20201112 09:56:17.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.928" endtime="20201112 09:56:17.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.406" endtime="20201112 09:56:17.954"></status>
</kw>
<msg timestamp="20201112 09:56:17.954" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:17.962" endtime="20201112 09:56:22.081"></status>
</kw>
<msg timestamp="20201112 09:56:22.083" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38768117, 'wakeups': [38778165, 38788164, 38798164, 38808164, 38818164...</msg>
<status status="PASS" starttime="20201112 09:56:17.961" endtime="20201112 09:56:22.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.089" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38768117, 'wakeups': [38778165, 38788164, 38798164, 38808164, 38818164...</msg>
<status status="PASS" starttime="20201112 09:56:22.085" endtime="20201112 09:56:22.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.092" endtime="20201112 09:56:22.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.958" endtime="20201112 09:56:22.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.956" endtime="20201112 09:56:22.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:22.102" level="INFO">${RESULT} = {'start-time': 38768117, 'wakeups': [38778165, 38788164, 38798164, 38808164, 38818164, 38828164, 38838164, 38848164, 38858164, 38868164, 38878164, 38888164, 38898164, 38908164, 38918164, 38928164, 389...</msg>
<status status="PASS" starttime="20201112 09:56:22.098" endtime="20201112 09:56:22.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.111" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:22.109" endtime="20201112 09:56:22.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.114" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:22.113" endtime="20201112 09:56:22.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.104" endtime="20201112 09:56:22.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.119" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:22.118" endtime="20201112 09:56:22.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.122" level="INFO">VALUE: 38768117</msg>
<status status="PASS" starttime="20201112 09:56:22.121" endtime="20201112 09:56:22.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.116" endtime="20201112 09:56:22.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.127" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:22.126" endtime="20201112 09:56:22.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.129" level="INFO">VALUE: [38778165, 38788164, 38798164, 38808164, 38818164, 38828164, 38838164, 38848164, 38858164, 38868164, 38878164, 38888164, 38898164, 38908164, 38918164, 38928164, 38938164, 38948164, 38958164, 38968164, 38978164, 38988164, 38998164, 39008164, 39018164, 39028164, 39038164, 39048164, 39058164, 39068164, 39078164, 39088164, 39098164, 39108164, 39118164, 39128164, 39138164, 39148164, 39158164, 39168164, 39178164, 39188164, 39198164, 39208164, 39218164, 39228164, 39238164, 39248164, 39258164, 39268164, 39278164, 39288164, 39298164, 39308164, 39318164, 39328164, 39338164, 39348164, 39358164, 39368164, 39378164, 39388164, 39398164, 39408164, 39418164, 39428164, 39438164, 39448164, 39458164, 39468164, 39478164, 39488164, 39498164, 39508164, 39518164, 39528164, 39538164, 39548164, 39558164, 39568164, 39578164, 39588164, 39598164, 39608164, 39618164, 39628164, 39638164, 39648164, 39658164, 39668164, 39678164, 39688164, 39698164, 39708164, 39718164, 39728164, 39738164, 39748164, 39758164, 39768164]</msg>
<status status="PASS" starttime="20201112 09:56:22.128" endtime="20201112 09:56:22.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.124" endtime="20201112 09:56:22.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.137" endtime="20201112 09:56:22.427"></status>
</kw>
<msg timestamp="20201112 09:56:22.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019345944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039445167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:22.135" endtime="20201112 09:56:22.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019345944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039445167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:22.431" endtime="20201112 09:56:22.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.438" endtime="20201112 09:56:22.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.133" endtime="20201112 09:56:22.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.131" endtime="20201112 09:56:22.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:22.464" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:22.441" endtime="20201112 09:56:22.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.469" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:22.468" endtime="20201112 09:56:22.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.471" level="INFO">VALUE: 0.019345944</msg>
<status status="PASS" starttime="20201112 09:56:22.470" endtime="20201112 09:56:22.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.465" endtime="20201112 09:56:22.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.476" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:22.475" endtime="20201112 09:56:22.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.479" level="INFO">VALUE: [0.039445167, 0.059446361, 0.079448597, 0.099450958, 0.119453208, 0.139455556, 0.159457792, 0.179460167, 0.199462389, 0.219464764, 0.239467, 0.259469361, 0.279471611, 0.299474028, 0.319476208, 0.339478569, 0.359480806, 0.379483167, 0.399485417, 0.419487792, 0.439490028, 0.459492375, 0.479494611, 0.499496986, 0.519499278, 0.539501583, 0.559503819, 0.579506208, 0.599508431, 0.619510792, 0.639513028, 0.659515403, 0.679517639, 0.699520014, 0.71952225, 0.739524597, 0.759526861, 0.779529208, 0.799531458, 0.819533806, 0.839536083, 0.859538431, 0.879540653, 0.899543014, 0.919545292, 0.939547625, 0.959549861, 0.979552222, 0.999554472, 1.019556833, 1.039559069, 1.059561431, 1.079563694, 1.099566042, 1.119568278, 1.139570639, 1.159572917, 1.17957525, 1.199577486, 1.219579847, 1.239582139, 1.259584458, 1.279586722, 1.299589056, 1.319591306, 1.339593667, 1.359595903, 1.379598264, 1.399600514, 1.419602889, 1.439605111, 1.459607486, 1.479609736, 1.499612083, 1.519614361, 1.539616736, 1.559618972, 1.579621292, 1.599623528, 1.619625903, 1.639628153, 1.659630514, 1.67963275, 1.699635111, 1.719637347, 1.739639708, 1.759641972, 1.779644319, 1.799646569, 1.819648958, 1.839651153, 1.859653542, 1.879655764, 1.899658125, 1.919660361, 1.93966275, 1.959664972, 1.979667333, 1.999669569, 2.019671944] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:22.478" endtime="20201112 09:56:22.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.472" endtime="20201112 09:56:22.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.482" endtime="20201112 09:56:22.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:22.486" endtime="20201112 09:56:22.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.484" endtime="20201112 09:56:22.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.481" endtime="20201112 09:56:22.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:17.955" endtime="20201112 09:56:22.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.868" endtime="20201112 09:56:22.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.867" endtime="20201112 09:56:22.507"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:22.509" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.517" endtime="20201112 09:56:26.636"></status>
</kw>
<msg timestamp="20201112 09:56:26.637" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 41045617, 'wakeups': [41055676, 41065675, 41075675, 41085675, 41095675...</msg>
<status status="PASS" starttime="20201112 09:56:22.516" endtime="20201112 09:56:26.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 41045617, 'wakeups': [41055676, 41065675, 41075675, 41085675, 41095675...</msg>
<status status="PASS" starttime="20201112 09:56:26.639" endtime="20201112 09:56:26.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.645" endtime="20201112 09:56:26.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.513" endtime="20201112 09:56:26.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.511" endtime="20201112 09:56:26.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.656" level="INFO">${RESULT} = {'start-time': 41045617, 'wakeups': [41055676, 41065675, 41075675, 41085675, 41095675, 41105675, 41115675, 41125675, 41135675, 41145675, 41155675, 41165675, 41175675, 41185675, 41195675, 41205675, 412...</msg>
<status status="PASS" starttime="20201112 09:56:26.652" endtime="20201112 09:56:26.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.665" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:26.663" endtime="20201112 09:56:26.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.669" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:26.667" endtime="20201112 09:56:26.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.658" endtime="20201112 09:56:26.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.680" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:26.677" endtime="20201112 09:56:26.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.683" level="INFO">VALUE: 41045617</msg>
<status status="PASS" starttime="20201112 09:56:26.682" endtime="20201112 09:56:26.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.672" endtime="20201112 09:56:26.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.687" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:26.686" endtime="20201112 09:56:26.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.690" level="INFO">VALUE: [41055676, 41065675, 41075675, 41085675, 41095675, 41105675, 41115675, 41125675, 41135675, 41145675, 41155675, 41165675, 41175675, 41185675, 41195675, 41205675, 41215675, 41225675, 41235675, 41245675, 41255675, 41265675, 41275675, 41285675, 41295675, 41305675, 41315675, 41325675, 41335675, 41345675, 41355675, 41365675, 41375675, 41385675, 41395675, 41405675, 41415675, 41425675, 41435675, 41445675, 41455675, 41465675, 41475675, 41485675, 41495675, 41505675, 41515675, 41525675, 41535675, 41545675, 41555675, 41565675, 41575675, 41585675, 41595675, 41605675, 41615675, 41625675, 41635675, 41645675, 41655675, 41665675, 41675675, 41685675, 41695675, 41705675, 41715675, 41725675, 41735675, 41745675, 41755675, 41765675, 41775675, 41785675, 41795675, 41805675, 41815675, 41825675, 41835675, 41845675, 41855675, 41865675, 41875675, 41885675, 41895675, 41905675, 41915675, 41925675, 41935675, 41945675, 41955675, 41965675, 41975675, 41985675, 41995675, 42005675, 42015675, 42025675, 42035675, 42045675]</msg>
<status status="PASS" starttime="20201112 09:56:26.689" endtime="20201112 09:56:26.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.684" endtime="20201112 09:56:26.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.698" endtime="20201112 09:56:26.990"></status>
</kw>
<msg timestamp="20201112 09:56:26.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042113208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:26.695" endtime="20201112 09:56:26.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042113208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:26.994" endtime="20201112 09:56:27.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.001" endtime="20201112 09:56:27.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.693" endtime="20201112 09:56:27.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.691" endtime="20201112 09:56:27.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:27.027" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:27.005" endtime="20201112 09:56:27.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.032" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:27.031" endtime="20201112 09:56:27.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.034" level="INFO">VALUE: 0.021992583</msg>
<status status="PASS" starttime="20201112 09:56:27.033" endtime="20201112 09:56:27.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.028" endtime="20201112 09:56:27.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.039" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:27.038" endtime="20201112 09:56:27.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.042" level="INFO">VALUE: [0.042113208, 0.062114417, 0.082116639, 0.102119, 0.122121222, 0.142123597, 0.162125847, 0.182128181, 0.202130417, 0.222132792, 0.242135014, 0.262137375, 0.282139625, 0.302141986, 0.322144264, 0.342146583, 0.362148806, 0.382151167, 0.402153417, 0.422155764, 0.442158014, 0.462160361, 0.482162611, 0.502165028, 0.522167194, 0.542169611, 0.562171847, 0.582174153, 0.602176403, 0.62217875, 0.642180986, 0.662183361, 0.682185583, 0.702187944, 0.722190181, 0.742192542, 0.762194778, 0.782197153, 0.802199375, 0.82220175, 0.842203972, 0.862206333, 0.882208569, 0.902210931, 0.922213167, 0.942215528, 0.962217764, 0.982220139, 1.002222431, 1.022224764, 1.042226958, 1.062229319, 1.082231569, 1.102233958, 1.122236167, 1.142238514, 1.162240764, 1.182243125, 1.202245347, 1.222247778, 1.242249944, 1.262252306, 1.282254542, 1.302256917, 1.322259153, 1.3422615, 1.362263736, 1.382266111, 1.402268347, 1.422270722, 1.442272958, 1.462275306, 1.482277556, 1.502279903, 1.522282167, 1.542284514, 1.562286736, 1.582289097, 1.602291333, 1.622293694, 1.642296014, 1.662298347, 1.682300528, 1.702302889, 1.722305125, 1.742307486, 1.762309722, 1.782312097, 1.802314319, 1.822316681, 1.842318917, 1.862321333, 1.882323528, 1.902325889, 1.922328111, 1.942330486, 1.962332708, 1.982335069, 2.002337306, 2.022339694] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:27.040" endtime="20201112 09:56:27.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.035" endtime="20201112 09:56:27.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.045" endtime="20201112 09:56:27.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:27.049" endtime="20201112 09:56:27.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.047" endtime="20201112 09:56:27.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.043" endtime="20201112 09:56:27.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.510" endtime="20201112 09:56:27.070"></status>
</kw>
<msg timestamp="20201112 09:56:27.070" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.079" endtime="20201112 09:56:31.198"></status>
</kw>
<msg timestamp="20201112 09:56:31.199" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 43326372, 'wakeups': [43336431, 43346430, 43356430, 43366430, 43376430...</msg>
<status status="PASS" starttime="20201112 09:56:27.077" endtime="20201112 09:56:31.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.205" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 43326372, 'wakeups': [43336431, 43346430, 43356430, 43366430, 43376430...</msg>
<status status="PASS" starttime="20201112 09:56:31.202" endtime="20201112 09:56:31.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.208" endtime="20201112 09:56:31.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.074" endtime="20201112 09:56:31.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.072" endtime="20201112 09:56:31.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:31.219" level="INFO">${RESULT} = {'start-time': 43326372, 'wakeups': [43336431, 43346430, 43356430, 43366430, 43376430, 43386430, 43396430, 43406430, 43416430, 43426430, 43436430, 43446430, 43456430, 43466430, 43476430, 43486430, 434...</msg>
<status status="PASS" starttime="20201112 09:56:31.215" endtime="20201112 09:56:31.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.227" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:31.225" endtime="20201112 09:56:31.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.231" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:31.230" endtime="20201112 09:56:31.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.221" endtime="20201112 09:56:31.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.236" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:31.235" endtime="20201112 09:56:31.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.238" level="INFO">VALUE: 43326372</msg>
<status status="PASS" starttime="20201112 09:56:31.237" endtime="20201112 09:56:31.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.233" endtime="20201112 09:56:31.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.243" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:31.242" endtime="20201112 09:56:31.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.246" level="INFO">VALUE: [43336431, 43346430, 43356430, 43366430, 43376430, 43386430, 43396430, 43406430, 43416430, 43426430, 43436430, 43446430, 43456430, 43466430, 43476430, 43486430, 43496430, 43506430, 43516430, 43526430, 43536430, 43546430, 43556430, 43566430, 43576430, 43586430, 43596430, 43606430, 43616430, 43626430, 43636430, 43646430, 43656430, 43666430, 43676430, 43686430, 43696430, 43706430, 43716430, 43726430, 43736430, 43746430, 43756430, 43766430, 43776430, 43786430, 43796430, 43806430, 43816430, 43826430, 43836430, 43846430, 43856430, 43866430, 43876430, 43886430, 43896430, 43906430, 43916430, 43926430, 43936430, 43946430, 43956430, 43966430, 43976430, 43986430, 43996430, 44006430, 44016430, 44026430, 44036430, 44046430, 44056430, 44066430, 44076430, 44086430, 44096430, 44106430, 44116430, 44126430, 44136430, 44146430, 44156430, 44166430, 44176430, 44186430, 44196430, 44206430, 44216430, 44226430, 44236430, 44246430, 44256430, 44266430, 44276430, 44286430, 44296430, 44306430, 44316430, 44326430]</msg>
<status status="PASS" starttime="20201112 09:56:31.244" endtime="20201112 09:56:31.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.239" endtime="20201112 09:56:31.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.253" endtime="20201112 09:56:31.544"></status>
</kw>
<msg timestamp="20201112 09:56:31.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040525792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.252" endtime="20201112 09:56:31.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040525792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:31.548" endtime="20201112 09:56:31.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.555" endtime="20201112 09:56:31.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.249" endtime="20201112 09:56:31.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.247" endtime="20201112 09:56:31.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:31.581" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:31.558" endtime="20201112 09:56:31.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.586" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:31.585" endtime="20201112 09:56:31.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.588" level="INFO">VALUE: 0.020404444</msg>
<status status="PASS" starttime="20201112 09:56:31.587" endtime="20201112 09:56:31.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.582" endtime="20201112 09:56:31.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.593" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:31.592" endtime="20201112 09:56:31.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:31.595" level="INFO">VALUE: [0.040525792, 0.060526931, 0.080529167, 0.100531528, 0.120533764, 0.140536111, 0.160538333, 0.180540681, 0.200542917, 0.220545278, 0.240547514, 0.260549861, 0.280552083, 0.3005545, 0.320556694, 0.340559042, 0.360561333, 0.380563708, 0.400565875, 0.420568208, 0.440570444, 0.460572806, 0.480575042, 0.500577389, 0.520579625, 0.540582042, 0.560584208, 0.580586569, 0.600588806, 0.620591181, 0.640593389, 0.660595764, 0.680598014, 0.700600403, 0.720602583, 0.740604944, 0.760607167, 0.780609514, 0.80061175, 0.820614111, 0.840616347, 0.860618764, 0.880620944, 0.900623292, 0.920625514, 0.940627875, 0.960630111, 0.980632472, 1.000634708, 1.020637097, 1.040639292, 1.060641653, 1.080643875, 1.100646236, 1.120648528, 1.140650861, 1.160653056, 1.180655417, 1.200657639, 1.220660014, 1.240662236, 1.260664597, 1.280666847, 1.300669208, 1.320671431, 1.340673778, 1.360676, 1.380678375, 1.400680597, 1.420682944, 1.440685194, 1.460687542, 1.480689764, 1.500692153, 1.520694417, 1.540696722, 1.560698972, 1.580701333, 1.600703569, 1.620705903, 1.640708139, 1.6607105, 1.680712736, 1.700715097, 1.720717306, 1.740719681, 1.760721917, 1.780724306, 1.800726486, 1.820728847, 1.840731097, 1.860733444, 1.880735667, 1.900738042, 1.920740278, 1.940742667, 1.960744861, 1.980747222, 2.000749458, 2.020751806] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:31.594" endtime="20201112 09:56:31.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.589" endtime="20201112 09:56:31.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.598" endtime="20201112 09:56:31.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:31.602" endtime="20201112 09:56:31.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.600" endtime="20201112 09:56:31.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.597" endtime="20201112 09:56:31.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.070" endtime="20201112 09:56:31.623"></status>
</kw>
<msg timestamp="20201112 09:56:31.623" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:31.631" endtime="20201112 09:56:35.751"></status>
</kw>
<msg timestamp="20201112 09:56:35.752" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 45602563, 'wakeups': [45612622, 45622621, 45632621, 45642621, 45652621...</msg>
<status status="PASS" starttime="20201112 09:56:31.630" endtime="20201112 09:56:35.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.757" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 45602563, 'wakeups': [45612622, 45622621, 45632621, 45642621, 45652621...</msg>
<status status="PASS" starttime="20201112 09:56:35.754" endtime="20201112 09:56:35.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.760" endtime="20201112 09:56:35.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.627" endtime="20201112 09:56:35.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.625" endtime="20201112 09:56:35.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:35.771" level="INFO">${RESULT} = {'start-time': 45602563, 'wakeups': [45612622, 45622621, 45632621, 45642621, 45652621, 45662621, 45672621, 45682621, 45692621, 45702621, 45712621, 45722621, 45732621, 45742621, 45752621, 45762621, 457...</msg>
<status status="PASS" starttime="20201112 09:56:35.767" endtime="20201112 09:56:35.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.779" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:35.777" endtime="20201112 09:56:35.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.783" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:35.781" endtime="20201112 09:56:35.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.772" endtime="20201112 09:56:35.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.793" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:35.792" endtime="20201112 09:56:35.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.795" level="INFO">VALUE: 45602563</msg>
<status status="PASS" starttime="20201112 09:56:35.794" endtime="20201112 09:56:35.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.788" endtime="20201112 09:56:35.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.799" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:35.798" endtime="20201112 09:56:35.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.802" level="INFO">VALUE: [45612622, 45622621, 45632621, 45642621, 45652621, 45662621, 45672621, 45682621, 45692621, 45702621, 45712621, 45722621, 45732621, 45742621, 45752621, 45762621, 45772621, 45782621, 45792621, 45802621, 45812621, 45822621, 45832621, 45842621, 45852621, 45862621, 45872621, 45882621, 45892621, 45902621, 45912621, 45922621, 45932621, 45942621, 45952621, 45962621, 45972621, 45982621, 45992621, 46002621, 46012621, 46022621, 46032621, 46042621, 46052621, 46062621, 46072621, 46082621, 46092621, 46102621, 46112621, 46122621, 46132621, 46142621, 46152621, 46162621, 46172621, 46182621, 46192621, 46202621, 46212621, 46222621, 46232621, 46242621, 46252621, 46262621, 46272621, 46282621, 46292621, 46302621, 46312621, 46322621, 46332621, 46342621, 46352621, 46362621, 46372621, 46382621, 46392621, 46402621, 46412621, 46422621, 46432621, 46442621, 46452621, 46462621, 46472621, 46482621, 46492621, 46502621, 46512621, 46522621, 46532621, 46542621, 46552621, 46562621, 46572621, 46582621, 46592621, 46602621]</msg>
<status status="PASS" starttime="20201112 09:56:35.801" endtime="20201112 09:56:35.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.796" endtime="20201112 09:56:35.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.809" endtime="20201112 09:56:36.101"></status>
</kw>
<msg timestamp="20201112 09:56:36.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039882403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:35.807" endtime="20201112 09:56:36.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039882403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:36.105" endtime="20201112 09:56:36.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.113" endtime="20201112 09:56:36.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.805" endtime="20201112 09:56:36.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.803" endtime="20201112 09:56:36.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:36.139" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:36.116" endtime="20201112 09:56:36.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.144" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:56:36.143" endtime="20201112 09:56:36.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.146" level="INFO">VALUE: 0.019761944</msg>
<status status="PASS" starttime="20201112 09:56:36.145" endtime="20201112 09:56:36.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.140" endtime="20201112 09:56:36.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.151" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:36.150" endtime="20201112 09:56:36.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:36.153" level="INFO">VALUE: [0.039882403, 0.059883125, 0.079885389, 0.099887764, 0.11989, 0.139892375, 0.159894639, 0.179897, 0.199899264, 0.219901625, 0.239903903, 0.25990625, 0.279908514, 0.299910889, 0.319913153, 0.339915528, 0.359917764, 0.379920139, 0.399922403, 0.419924833, 0.439927028, 0.459929403, 0.479931667, 0.499934042, 0.519936292, 0.539938667, 0.559940917, 0.579943333, 0.599945556, 0.619947958, 0.639950194, 0.659952611, 0.679954806, 0.699957208, 0.719959431, 0.739961806, 0.759964083, 0.779966458, 0.79996875, 0.819971069, 0.839973333, 0.859975694, 0.879977958, 0.899980333, 0.919982639, 0.939984972, 0.959987222, 0.979989597, 0.999991875, 1.019994236, 1.039996486, 1.059998889, 1.080001097, 1.1000035, 1.120005736, 1.140008111, 1.160010361, 1.18001275, 1.200014986, 1.220017375, 1.240019625, 1.260022, 1.28002425, 1.300026625, 1.320028889, 1.340031278, 1.360033514, 1.380035889, 1.400038181, 1.420040528, 1.440042778, 1.460045153, 1.480047403, 1.500049778, 1.520052028, 1.540054431, 1.560056722, 1.580059111, 1.600061306, 1.620063681, 1.640065958, 1.660068319, 1.680070556, 1.700072944, 1.720075181, 1.740077556, 1.760079833, 1.780082236, 1.800084444, 1.820086819, 1.840089083, 1.860091458, 1.880093708, 1.900096111, 1.920098361, 1.940100708, 1.960102972, 1.980105347, 2.000107625, 2.020109972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:36.152" endtime="20201112 09:56:36.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.147" endtime="20201112 09:56:36.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.156" endtime="20201112 09:56:36.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:36.160" endtime="20201112 09:56:36.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.158" endtime="20201112 09:56:36.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.155" endtime="20201112 09:56:36.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:31.624" endtime="20201112 09:56:36.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.508" endtime="20201112 09:56:36.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.507" endtime="20201112 09:56:36.181"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:36.184" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:36.192" endtime="20201112 09:56:40.310"></status>
</kw>
<msg timestamp="20201112 09:56:40.311" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 47882625, 'wakeups': [47892696, 47902694, 47912694, 47922694, 47932694...</msg>
<status status="PASS" starttime="20201112 09:56:36.190" endtime="20201112 09:56:40.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.318" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 47882625, 'wakeups': [47892696, 47902694, 47912694, 47922694, 47932694...</msg>
<status status="PASS" starttime="20201112 09:56:40.313" endtime="20201112 09:56:40.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.320" endtime="20201112 09:56:40.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.187" endtime="20201112 09:56:40.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.185" endtime="20201112 09:56:40.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:40.331" level="INFO">${RESULT} = {'start-time': 47882625, 'wakeups': [47892696, 47902694, 47912694, 47922694, 47932694, 47942694, 47952694, 47962694, 47972694, 47982694, 47992694, 48002694, 48012694, 48022694, 48032694, 48042694, 480...</msg>
<status status="PASS" starttime="20201112 09:56:40.327" endtime="20201112 09:56:40.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.339" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:40.337" endtime="20201112 09:56:40.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.343" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:40.341" endtime="20201112 09:56:40.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.332" endtime="20201112 09:56:40.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.351" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:40.350" endtime="20201112 09:56:40.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.353" level="INFO">VALUE: 47882625</msg>
<status status="PASS" starttime="20201112 09:56:40.352" endtime="20201112 09:56:40.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.346" endtime="20201112 09:56:40.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.358" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:40.357" endtime="20201112 09:56:40.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.360" level="INFO">VALUE: [47892696, 47902694, 47912694, 47922694, 47932694, 47942694, 47952694, 47962694, 47972694, 47982694, 47992694, 48002694, 48012694, 48022694, 48032694, 48042694, 48052694, 48062694, 48072694, 48082694, 48092694, 48102694, 48112694, 48122694, 48132694, 48142694, 48152694, 48162694, 48172694, 48182694, 48192694, 48202694, 48212694, 48222694, 48232694, 48242694, 48252694, 48262694, 48272694, 48282694, 48292694, 48302694, 48312694, 48322694, 48332694, 48342694, 48352694, 48362694, 48372694, 48382694, 48392694, 48402694, 48412694, 48422694, 48432694, 48442694, 48452694, 48462694, 48472694, 48482694, 48492694, 48502694, 48512694, 48522694, 48532694, 48542694, 48552694, 48562694, 48572694, 48582694, 48592694, 48602694, 48612694, 48622694, 48632694, 48642694, 48652694, 48662694, 48672694, 48682694, 48692694, 48702694, 48712694, 48722694, 48732694, 48742694, 48752694, 48762694, 48772694, 48782694, 48792694, 48802694, 48812694, 48822694, 48832694, 48842694, 48852694, 48862694, 48872694, 48882694]</msg>
<status status="PASS" starttime="20201112 09:56:40.359" endtime="20201112 09:56:40.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.354" endtime="20201112 09:56:40.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.368" endtime="20201112 09:56:40.660"></status>
</kw>
<msg timestamp="20201112 09:56:40.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042154333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:40.367" endtime="20201112 09:56:40.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042154333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:40.663" endtime="20201112 09:56:40.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.671" endtime="20201112 09:56:40.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.364" endtime="20201112 09:56:40.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.361" endtime="20201112 09:56:40.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:40.696" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:40.674" endtime="20201112 09:56:40.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.706" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:40.705" endtime="20201112 09:56:40.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.708" level="INFO">VALUE: 0.022009583</msg>
<status status="PASS" starttime="20201112 09:56:40.707" endtime="20201112 09:56:40.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.703" endtime="20201112 09:56:40.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.714" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:40.713" endtime="20201112 09:56:40.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.716" level="INFO">VALUE: [0.042154333, 0.062154264, 0.082156472, 0.102158806, 0.122161056, 0.142163458, 0.162165667, 0.182168056, 0.202170361, 0.222172681, 0.242174903, 0.262177278, 0.282179528, 0.302181903, 0.322184167, 0.342186597, 0.362188778, 0.382191181, 0.402193403, 0.422195792, 0.442198014, 0.462200417, 0.482202639, 0.502205014, 0.522207347, 0.542209639, 0.562211903, 0.582214264, 0.602216514, 0.622218903, 0.642221153, 0.662223528, 0.682225764, 0.702228125, 0.722230389, 0.742232764, 0.762235, 0.782237375, 0.802239625, 0.822242, 0.84224425, 0.862246639, 0.882248875, 0.90225125, 0.9222535, 0.942255917, 0.962258111, 0.982260514, 1.002262736, 1.022265111, 1.042267375, 1.062269736, 1.082272042, 1.102274375, 1.122276611, 1.142278986, 1.16228125, 1.182283611, 1.202285875, 1.22228825, 1.242290486, 1.262292875, 1.282295097, 1.302297486, 1.32229975, 1.342302111, 1.362304347, 1.38230675, 1.402308972, 1.422311347, 1.442313597, 1.462315972, 1.482318222, 1.502320625, 1.522322847, 1.542325222, 1.562327472, 1.582329875, 1.602332111, 1.622334514, 1.642336722, 1.662339097, 1.682341347, 1.702343736, 1.722346028, 1.742348347, 1.762350583, 1.782352958, 1.802355208, 1.822357583, 1.842359833, 1.862362222, 1.882364458, 1.902366847, 1.922369111, 1.942371458, 1.962373708, 1.982376083, 2.002378347, 2.022380708] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:40.715" endtime="20201112 09:56:40.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.710" endtime="20201112 09:56:40.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.719" endtime="20201112 09:56:40.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:40.722" endtime="20201112 09:56:40.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.721" endtime="20201112 09:56:40.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.717" endtime="20201112 09:56:40.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.184" endtime="20201112 09:56:40.744"></status>
</kw>
<msg timestamp="20201112 09:56:40.744" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.752" endtime="20201112 09:56:44.871"></status>
</kw>
<msg timestamp="20201112 09:56:44.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 50162751, 'wakeups': [50172822, 50182820, 50192820, 50202820, 50212820...</msg>
<status status="PASS" starttime="20201112 09:56:40.750" endtime="20201112 09:56:44.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 50162751, 'wakeups': [50172822, 50182820, 50192820, 50202820, 50212820...</msg>
<status status="PASS" starttime="20201112 09:56:44.874" endtime="20201112 09:56:44.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:44.880" endtime="20201112 09:56:44.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.748" endtime="20201112 09:56:44.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.746" endtime="20201112 09:56:44.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:44.891" level="INFO">${RESULT} = {'start-time': 50162751, 'wakeups': [50172822, 50182820, 50192820, 50202820, 50212820, 50222820, 50232820, 50242820, 50252820, 50262820, 50272820, 50282820, 50292820, 50302820, 50312820, 50322820, 503...</msg>
<status status="PASS" starttime="20201112 09:56:44.887" endtime="20201112 09:56:44.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.900" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:44.898" endtime="20201112 09:56:44.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.904" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:44.902" endtime="20201112 09:56:44.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.893" endtime="20201112 09:56:44.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.911" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:44.910" endtime="20201112 09:56:44.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.913" level="INFO">VALUE: 50162751</msg>
<status status="PASS" starttime="20201112 09:56:44.912" endtime="20201112 09:56:44.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.907" endtime="20201112 09:56:44.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.918" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:44.917" endtime="20201112 09:56:44.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:44.920" level="INFO">VALUE: [50172822, 50182820, 50192820, 50202820, 50212820, 50222820, 50232820, 50242820, 50252820, 50262820, 50272820, 50282820, 50292820, 50302820, 50312820, 50322820, 50332820, 50342820, 50352820, 50362820, 50372820, 50382820, 50392820, 50402820, 50412820, 50422820, 50432820, 50442820, 50452820, 50462820, 50472820, 50482820, 50492820, 50502820, 50512820, 50522820, 50532820, 50542820, 50552820, 50562820, 50572820, 50582820, 50592820, 50602820, 50612820, 50622820, 50632820, 50642820, 50652820, 50662820, 50672820, 50682820, 50692820, 50702820, 50712820, 50722820, 50732820, 50742820, 50752820, 50762820, 50772820, 50782820, 50792820, 50802820, 50812820, 50822820, 50832820, 50842820, 50852820, 50862820, 50872820, 50882820, 50892820, 50902820, 50912820, 50922820, 50932820, 50942820, 50952820, 50962820, 50972820, 50982820, 50992820, 51002820, 51012820, 51022820, 51032820, 51042820, 51052820, 51062820, 51072820, 51082820, 51092820, 51102820, 51112820, 51122820, 51132820, 51142820, 51152820, 51162820]</msg>
<status status="PASS" starttime="20201112 09:56:44.919" endtime="20201112 09:56:44.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.914" endtime="20201112 09:56:44.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:44.927" endtime="20201112 09:56:45.218"></status>
</kw>
<msg timestamp="20201112 09:56:45.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039403611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:44.926" endtime="20201112 09:56:45.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039403611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:45.222" endtime="20201112 09:56:45.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:45.229" endtime="20201112 09:56:45.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.923" endtime="20201112 09:56:45.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:44.922" endtime="20201112 09:56:45.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:45.255" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:45.232" endtime="20201112 09:56:45.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.260" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:45.259" endtime="20201112 09:56:45.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.262" level="INFO">VALUE: 0.019259556</msg>
<status status="PASS" starttime="20201112 09:56:45.261" endtime="20201112 09:56:45.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.256" endtime="20201112 09:56:45.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.267" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:45.266" endtime="20201112 09:56:45.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.269" level="INFO">VALUE: [0.039403611, 0.0594035, 0.079405736, 0.099408111, 0.119410431, 0.139412722, 0.159414972, 0.179417389, 0.199419583, 0.219421958, 0.239424222, 0.259426569, 0.279428819, 0.299431181, 0.319433444, 0.339435819, 0.359438042, 0.379440431, 0.399442667, 0.419445042, 0.439447292, 0.459449653, 0.479451903, 0.499454278, 0.519456514, 0.539458958, 0.559461153, 0.579463514, 0.599465778, 0.619468125, 0.639470389, 0.65947275, 0.679475042, 0.699477361, 0.719479611, 0.739481986, 0.759484236, 0.779486625, 0.799488847, 0.819491264, 0.839493542, 0.859495847, 0.879498083, 0.899500458, 0.919502778, 0.939505083, 0.959507319, 0.979509708, 0.999511958, 1.019514319, 1.039516611, 1.059518931, 1.079521181, 1.099523556, 1.119525861, 1.139528208, 1.159530417, 1.179532792, 1.199535069, 1.219537403, 1.239539653, 1.259542028, 1.279544292, 1.299546653, 1.319548889, 1.339551264, 1.359553514, 1.379555889, 1.399558125, 1.4195605, 1.439562778, 1.459565139, 1.479567375, 1.499569736, 1.519571986, 1.539574361, 1.559576611, 1.579579014, 1.599581264, 1.619583597, 1.639585875, 1.659588236, 1.679590458, 1.699592847, 1.719595097, 1.739597472, 1.759599722, 1.779602069, 1.799604319, 1.819606694, 1.839608944, 1.859611319, 1.879613583, 1.899615944, 1.919618181, 1.939620597, 1.959622792, 1.979625167, 1.999627417, 2.019629792] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:45.268" endtime="20201112 09:56:45.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.263" endtime="20201112 09:56:45.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:45.273" endtime="20201112 09:56:45.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:45.276" endtime="20201112 09:56:45.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.275" endtime="20201112 09:56:45.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.271" endtime="20201112 09:56:45.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.745" endtime="20201112 09:56:45.297"></status>
</kw>
<msg timestamp="20201112 09:56:45.297" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:45.305" endtime="20201112 09:56:49.424"></status>
</kw>
<msg timestamp="20201112 09:56:49.426" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 52439380, 'wakeups': [52449451, 52459449, 52469449, 52479449, 52489449...</msg>
<status status="PASS" starttime="20201112 09:56:45.304" endtime="20201112 09:56:49.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.431" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 52439380, 'wakeups': [52449451, 52459449, 52469449, 52479449, 52489449...</msg>
<status status="PASS" starttime="20201112 09:56:49.428" endtime="20201112 09:56:49.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:49.434" endtime="20201112 09:56:49.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.301" endtime="20201112 09:56:49.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.299" endtime="20201112 09:56:49.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:49.445" level="INFO">${RESULT} = {'start-time': 52439380, 'wakeups': [52449451, 52459449, 52469449, 52479449, 52489449, 52499449, 52509449, 52519449, 52529449, 52539449, 52549449, 52559449, 52569449, 52579449, 52589449, 52599449, 526...</msg>
<status status="PASS" starttime="20201112 09:56:49.441" endtime="20201112 09:56:49.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.453" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:49.451" endtime="20201112 09:56:49.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.457" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:49.455" endtime="20201112 09:56:49.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.446" endtime="20201112 09:56:49.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.467" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:49.466" endtime="20201112 09:56:49.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.469" level="INFO">VALUE: 52439380</msg>
<status status="PASS" starttime="20201112 09:56:49.468" endtime="20201112 09:56:49.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.461" endtime="20201112 09:56:49.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.474" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:49.473" endtime="20201112 09:56:49.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.476" level="INFO">VALUE: [52449451, 52459449, 52469449, 52479449, 52489449, 52499449, 52509449, 52519449, 52529449, 52539449, 52549449, 52559449, 52569449, 52579449, 52589449, 52599449, 52609449, 52619449, 52629449, 52639449, 52649449, 52659449, 52669449, 52679449, 52689449, 52699449, 52709449, 52719449, 52729449, 52739449, 52749449, 52759449, 52769449, 52779449, 52789449, 52799449, 52809449, 52819449, 52829449, 52839449, 52849449, 52859449, 52869449, 52879449, 52889449, 52899449, 52909449, 52919449, 52929449, 52939449, 52949449, 52959449, 52969449, 52979449, 52989449, 52999449, 53009449, 53019449, 53029449, 53039449, 53049449, 53059449, 53069449, 53079449, 53089449, 53099449, 53109449, 53119449, 53129449, 53139449, 53149449, 53159449, 53169449, 53179449, 53189449, 53199449, 53209449, 53219449, 53229449, 53239449, 53249449, 53259449, 53269449, 53279449, 53289449, 53299449, 53309449, 53319449, 53329449, 53339449, 53349449, 53359449, 53369449, 53379449, 53389449, 53399449, 53409449, 53419449, 53429449, 53439449]</msg>
<status status="PASS" starttime="20201112 09:56:49.475" endtime="20201112 09:56:49.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.470" endtime="20201112 09:56:49.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:49.484" endtime="20201112 09:56:49.774"></status>
</kw>
<msg timestamp="20201112 09:56:49.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019249986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039393347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:49.482" endtime="20201112 09:56:49.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019249986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039393347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:49.778" endtime="20201112 09:56:49.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:49.786" endtime="20201112 09:56:49.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.480" endtime="20201112 09:56:49.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.478" endtime="20201112 09:56:49.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:49.813" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:49.790" endtime="20201112 09:56:49.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.817" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:56:49.816" endtime="20201112 09:56:49.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.819" level="INFO">VALUE: 0.019249986</msg>
<status status="PASS" starttime="20201112 09:56:49.818" endtime="20201112 09:56:49.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.814" endtime="20201112 09:56:49.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.825" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:49.824" endtime="20201112 09:56:49.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:49.827" level="INFO">VALUE: [0.039393347, 0.059393236, 0.079395472, 0.099397847, 0.119400083, 0.139402444, 0.159404694, 0.179407097, 0.199409292, 0.219411667, 0.239413903, 0.259416278, 0.279418514, 0.299420875, 0.319423125, 0.339425514, 0.359427736, 0.379430097, 0.399432375, 0.419434708, 0.439436958, 0.459439319, 0.479441583, 0.499443944, 0.519446181, 0.539448542, 0.559450778, 0.579453167, 0.599455389, 0.619457764, 0.63946, 0.659462389, 0.679464667, 0.699467042, 0.719469222, 0.739471597, 0.759473833, 0.779476208, 0.799478444, 0.819480819, 0.839483056, 0.859485444, 0.879487667, 0.899490056, 0.919492278, 0.939494653, 0.959496903, 0.979499264, 0.9995015, 1.019503931, 1.039506111, 1.059508472, 1.079510722, 1.099513083, 1.119515333, 1.139517708, 1.159519944, 1.179522306, 1.199524569, 1.219526931, 1.239529167, 1.259531528, 1.279533778, 1.299536139, 1.319538389, 1.339540764, 1.359543, 1.379545431, 1.399547597, 1.419549986, 1.439552208, 1.459554597, 1.479556819, 1.499559194, 1.519561444, 1.539563819, 1.559566042, 1.579568417, 1.599570667, 1.619573069, 1.639575319, 1.659577639, 1.679579875, 1.69958225, 1.719584486, 1.739586903, 1.759589111, 1.779591472, 1.799593708, 1.819596069, 1.839598347, 1.859600681, 1.879602958, 1.899605292, 1.919607542, 1.939609917, 1.959612167, 1.979614514, 1.999616764, 2.019619139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:49.826" endtime="20201112 09:56:49.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.821" endtime="20201112 09:56:49.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:49.830" endtime="20201112 09:56:49.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:49.833" endtime="20201112 09:56:49.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.832" endtime="20201112 09:56:49.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.828" endtime="20201112 09:56:49.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.298" endtime="20201112 09:56:49.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.182" endtime="20201112 09:56:49.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:36.181" endtime="20201112 09:56:49.854"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:49.857" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:49.866" endtime="20201112 09:56:53.985"></status>
</kw>
<msg timestamp="20201112 09:56:53.986" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 54719507, 'wakeups': [54729587, 54739588, 54749588, 54759588, 54769588...</msg>
<status status="PASS" starttime="20201112 09:56:49.863" endtime="20201112 09:56:53.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.992" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 54719507, 'wakeups': [54729587, 54739588, 54749588, 54759588, 54769588...</msg>
<status status="PASS" starttime="20201112 09:56:53.988" endtime="20201112 09:56:53.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.994" endtime="20201112 09:56:53.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.861" endtime="20201112 09:56:53.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.859" endtime="20201112 09:56:54.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:54.005" level="INFO">${RESULT} = {'start-time': 54719507, 'wakeups': [54729587, 54739588, 54749588, 54759588, 54769588, 54779588, 54789588, 54799588, 54809588, 54819588, 54829588, 54839588, 54849588, 54859588, 54869588, 54879588, 548...</msg>
<status status="PASS" starttime="20201112 09:56:54.001" endtime="20201112 09:56:54.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.014" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:54.012" endtime="20201112 09:56:54.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.018" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:54.016" endtime="20201112 09:56:54.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.007" endtime="20201112 09:56:54.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.027" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:54.025" endtime="20201112 09:56:54.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.030" level="INFO">VALUE: 54719507</msg>
<status status="PASS" starttime="20201112 09:56:54.029" endtime="20201112 09:56:54.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.021" endtime="20201112 09:56:54.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.035" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:54.034" endtime="20201112 09:56:54.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.037" level="INFO">VALUE: [54729587, 54739588, 54749588, 54759588, 54769588, 54779588, 54789588, 54799588, 54809588, 54819588, 54829588, 54839588, 54849588, 54859588, 54869588, 54879588, 54889588, 54899588, 54909588, 54919588, 54929588, 54939588, 54949588, 54959588, 54969588, 54979588, 54989588, 54999588, 55009588, 55019588, 55029588, 55039588, 55049588, 55059588, 55069588, 55079588, 55089588, 55099588, 55109588, 55119588, 55129588, 55139588, 55149588, 55159588, 55169588, 55179588, 55189588, 55199588, 55209588, 55219588, 55229588, 55239588, 55249588, 55259588, 55269588, 55279588, 55289588, 55299588, 55309588, 55319588, 55329588, 55339588, 55349588, 55359588, 55369588, 55379588, 55389588, 55399588, 55409588, 55419588, 55429588, 55439588, 55449588, 55459588, 55469588, 55479588, 55489588, 55499588, 55509588, 55519588, 55529588, 55539588, 55549588, 55559588, 55569588, 55579588, 55589588, 55599588, 55609588, 55619588, 55629588, 55639588, 55649588, 55659588, 55669588, 55679588, 55689588, 55699588, 55709588, 55719588]</msg>
<status status="PASS" starttime="20201112 09:56:54.036" endtime="20201112 09:56:54.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.031" endtime="20201112 09:56:54.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:54.044" endtime="20201112 09:56:54.336"></status>
</kw>
<msg timestamp="20201112 09:56:54.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042767181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:54.042" endtime="20201112 09:56:54.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042767181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:54.340" endtime="20201112 09:56:54.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:54.348" endtime="20201112 09:56:54.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.040" endtime="20201112 09:56:54.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.038" endtime="20201112 09:56:54.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:54.375" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:54.351" endtime="20201112 09:56:54.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.379" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:54.378" endtime="20201112 09:56:54.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.381" level="INFO">VALUE: 0.022602542</msg>
<status status="PASS" starttime="20201112 09:56:54.380" endtime="20201112 09:56:54.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.376" endtime="20201112 09:56:54.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.386" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:54.385" endtime="20201112 09:56:54.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:54.389" level="INFO">VALUE: [0.042767181, 0.062770347, 0.082772583, 0.102774958, 0.122777181, 0.142779556, 0.162781792, 0.182784167, 0.202786389, 0.22278875, 0.242790986, 0.262793389, 0.282795597, 0.302797972, 0.322800194, 0.342802569, 0.362804806, 0.382807167, 0.402809444, 0.422811792, 0.442814028, 0.462816375, 0.482818611, 0.502821, 0.522823222, 0.542825583, 0.562827847, 0.582830208, 0.602832431, 0.622834806, 0.642837056, 0.662839403, 0.682841639, 0.702844, 0.722846264, 0.742848611, 0.762850847, 0.782853222, 0.802855472, 0.822857833, 0.842860056, 0.862862444, 0.882864667, 0.902867028, 0.922869264, 0.942871653, 0.962873875, 0.982876236, 1.002878472, 1.022880917, 1.042883097, 1.062885444, 1.082887694, 1.102890056, 1.122892347, 1.142894653, 1.162896903, 1.182899264, 1.2029015, 1.222903861, 1.242906111, 1.262908472, 1.282910722, 1.302913083, 1.322915319, 1.342917722, 1.362919931, 1.382922292, 1.402924528, 1.422926889, 1.442929139, 1.462931542, 1.48293375, 1.502936111, 1.522938347, 1.542940708, 1.562942958, 1.582945306, 1.602947542, 1.622949917, 1.642952153, 1.662954514, 1.682956764, 1.702959125, 1.722961361, 1.742963722, 1.762965972, 1.782968333, 1.802970569, 1.822972972, 1.842975181, 1.862977556, 1.882979778, 1.902982167, 1.922984403, 1.942986764, 1.962989, 1.982991375, 2.002993639, 2.022995986] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:54.388" endtime="20201112 09:56:54.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.382" endtime="20201112 09:56:54.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:54.392" endtime="20201112 09:56:54.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:54.396" endtime="20201112 09:56:54.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.394" endtime="20201112 09:56:54.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.391" endtime="20201112 09:56:54.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.858" endtime="20201112 09:56:54.416"></status>
</kw>
<msg timestamp="20201112 09:56:54.417" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:54.425" endtime="20201112 09:56:58.544"></status>
</kw>
<msg timestamp="20201112 09:56:58.545" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 56999013, 'wakeups': [57009093, 57019094, 57029094, 57039094, 57049094...</msg>
<status status="PASS" starttime="20201112 09:56:54.423" endtime="20201112 09:56:58.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.551" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 56999013, 'wakeups': [57009093, 57019094, 57029094, 57039094, 57049094...</msg>
<status status="PASS" starttime="20201112 09:56:58.548" endtime="20201112 09:56:58.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.553" endtime="20201112 09:56:58.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.421" endtime="20201112 09:56:58.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.419" endtime="20201112 09:56:58.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:58.564" level="INFO">${RESULT} = {'start-time': 56999013, 'wakeups': [57009093, 57019094, 57029094, 57039094, 57049094, 57059094, 57069094, 57079094, 57089094, 57099094, 57109094, 57119094, 57129094, 57139094, 57149094, 57159094, 571...</msg>
<status status="PASS" starttime="20201112 09:56:58.560" endtime="20201112 09:56:58.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.574" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:58.571" endtime="20201112 09:56:58.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.578" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:58.576" endtime="20201112 09:56:58.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.567" endtime="20201112 09:56:58.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.586" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:58.585" endtime="20201112 09:56:58.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.588" level="INFO">VALUE: 56999013</msg>
<status status="PASS" starttime="20201112 09:56:58.587" endtime="20201112 09:56:58.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.581" endtime="20201112 09:56:58.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.593" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:58.592" endtime="20201112 09:56:58.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.595" level="INFO">VALUE: [57009093, 57019094, 57029094, 57039094, 57049094, 57059094, 57069094, 57079094, 57089094, 57099094, 57109094, 57119094, 57129094, 57139094, 57149094, 57159094, 57169094, 57179094, 57189094, 57199094, 57209094, 57219094, 57229094, 57239094, 57249094, 57259094, 57269094, 57279094, 57289094, 57299094, 57309094, 57319094, 57329094, 57339094, 57349094, 57359094, 57369094, 57379094, 57389094, 57399094, 57409094, 57419094, 57429094, 57439094, 57449094, 57459094, 57469094, 57479094, 57489094, 57499094, 57509094, 57519094, 57529094, 57539094, 57549094, 57559094, 57569094, 57579094, 57589094, 57599094, 57609094, 57619094, 57629094, 57639094, 57649094, 57659094, 57669094, 57679094, 57689094, 57699094, 57709094, 57719094, 57729094, 57739094, 57749094, 57759094, 57769094, 57779094, 57789094, 57799094, 57809094, 57819094, 57829094, 57839094, 57849094, 57859094, 57869094, 57879094, 57889094, 57899094, 57909094, 57919094, 57929094, 57939094, 57949094, 57959094, 57969094, 57979094, 57989094, 57999094]</msg>
<status status="PASS" starttime="20201112 09:56:58.594" endtime="20201112 09:56:58.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.589" endtime="20201112 09:56:58.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.602" endtime="20201112 09:56:58.893"></status>
</kw>
<msg timestamp="20201112 09:56:58.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039475931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:58.601" endtime="20201112 09:56:58.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039475931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:58.897" endtime="20201112 09:56:58.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.904" endtime="20201112 09:56:58.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.598" endtime="20201112 09:56:58.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.596" endtime="20201112 09:56:58.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:58.930" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:56:58.908" endtime="20201112 09:56:58.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.935" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:56:58.934" endtime="20201112 09:56:58.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.937" level="INFO">VALUE: 0.019312625</msg>
<status status="PASS" starttime="20201112 09:56:58.936" endtime="20201112 09:56:58.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.931" endtime="20201112 09:56:58.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.942" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:58.941" endtime="20201112 09:56:58.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.945" level="INFO">VALUE: [0.039475931, 0.059479111, 0.079481389, 0.099483694, 0.119485944, 0.139488292, 0.159490528, 0.179492875, 0.199495111, 0.2194975, 0.239499708, 0.259502083, 0.279504306, 0.299506681, 0.319508903, 0.339511264, 0.359513514, 0.379515861, 0.399518111, 0.419520486, 0.439522694, 0.459525056, 0.479527306, 0.499529722, 0.519531875, 0.53953425, 0.559536486, 0.579538861, 0.599541069, 0.619543431, 0.639545667, 0.659548069, 0.679550264, 0.699552625, 0.719554861, 0.739557236, 0.759559472, 0.779561819, 0.799564097, 0.819566417, 0.839568653, 0.859571028, 0.87957325, 0.899575625, 0.919577847, 0.939580222, 0.959582444, 0.979584806, 0.999587042, 1.019589403, 1.039591639, 1.059594, 1.07959625, 1.099598639, 1.119600847, 1.139603194, 1.159605431, 1.179607792, 1.199610028, 1.219612403, 1.239614625, 1.259617, 1.279619236, 1.299621597, 1.319623819, 1.339626181, 1.359628431, 1.379630778, 1.399633, 1.419635375, 1.439637597, 1.459639972, 1.479642194, 1.499644556, 1.519646792, 1.539649167, 1.559651389, 1.57965375, 1.599656, 1.619658361, 1.639660583, 1.659662944, 1.679665181, 1.699667542, 1.719669778, 1.739672222, 1.759674375, 1.779676736, 1.799678986, 1.819681333, 1.839683583, 1.859685931, 1.879688181, 1.899690542, 1.919692778, 1.939695125, 1.959697375, 1.979699722, 1.999701958, 2.019704333] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:58.943" endtime="20201112 09:56:58.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.938" endtime="20201112 09:56:58.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.948" endtime="20201112 09:56:58.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:58.951" endtime="20201112 09:56:58.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.950" endtime="20201112 09:56:58.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.946" endtime="20201112 09:56:58.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:54.417" endtime="20201112 09:56:58.972"></status>
</kw>
<msg timestamp="20201112 09:56:58.972" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.981" endtime="20201112 09:57:03.091"></status>
</kw>
<msg timestamp="20201112 09:57:03.091" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 59277138, 'wakeups': [59287218, 59297219, 59307219, 59317219, 59327219...</msg>
<status status="PASS" starttime="20201112 09:56:58.978" endtime="20201112 09:57:03.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.094" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 59277138, 'wakeups': [59287218, 59297219, 59307219, 59317219, 59327219...</msg>
<status status="PASS" starttime="20201112 09:57:03.092" endtime="20201112 09:57:03.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:03.095" endtime="20201112 09:57:03.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.976" endtime="20201112 09:57:03.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.974" endtime="20201112 09:57:03.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:03.100" level="INFO">${RESULT} = {'start-time': 59277138, 'wakeups': [59287218, 59297219, 59307219, 59317219, 59327219, 59337219, 59347219, 59357219, 59367219, 59377219, 59387219, 59397219, 59407219, 59417219, 59427219, 59437219, 594...</msg>
<status status="PASS" starttime="20201112 09:57:03.098" endtime="20201112 09:57:03.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.104" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:03.103" endtime="20201112 09:57:03.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.106" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:03.106" endtime="20201112 09:57:03.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.101" endtime="20201112 09:57:03.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.111" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:03.110" endtime="20201112 09:57:03.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.113" level="INFO">VALUE: 59277138</msg>
<status status="PASS" starttime="20201112 09:57:03.112" endtime="20201112 09:57:03.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.108" endtime="20201112 09:57:03.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.118" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:03.117" endtime="20201112 09:57:03.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.121" level="INFO">VALUE: [59287218, 59297219, 59307219, 59317219, 59327219, 59337219, 59347219, 59357219, 59367219, 59377219, 59387219, 59397219, 59407219, 59417219, 59427219, 59437219, 59447219, 59457219, 59467219, 59477219, 59487219, 59497219, 59507219, 59517219, 59527219, 59537219, 59547219, 59557219, 59567219, 59577219, 59587219, 59597219, 59607219, 59617219, 59627219, 59637219, 59647219, 59657219, 59667219, 59677219, 59687219, 59697219, 59707219, 59717219, 59727219, 59737219, 59747219, 59757219, 59767219, 59777219, 59787219, 59797219, 59807219, 59817219, 59827219, 59837219, 59847219, 59857219, 59867219, 59877219, 59887219, 59897219, 59907219, 59917219, 59927219, 59937219, 59947219, 59957219, 59967219, 59977219, 59987219, 59997219, 60007219, 60017219, 60027219, 60037219, 60047219, 60057219, 60067219, 60077219, 60087219, 60097219, 60107219, 60117219, 60127219, 60137219, 60147219, 60157219, 60167219, 60177219, 60187219, 60197219, 60207219, 60217219, 60227219, 60237219, 60247219, 60257219, 60267219, 60277219]</msg>
<status status="PASS" starttime="20201112 09:57:03.120" endtime="20201112 09:57:03.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.115" endtime="20201112 09:57:03.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:03.129" endtime="20201112 09:57:03.419"></status>
</kw>
<msg timestamp="20201112 09:57:03.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:03.127" endtime="20201112 09:57:03.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:03.423" endtime="20201112 09:57:03.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:03.430" endtime="20201112 09:57:03.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.125" endtime="20201112 09:57:03.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.122" endtime="20201112 09:57:03.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:03.457" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:57:03.433" endtime="20201112 09:57:03.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.462" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:03.461" endtime="20201112 09:57:03.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.464" level="INFO">VALUE: 0.020276708</msg>
<status status="PASS" starttime="20201112 09:57:03.463" endtime="20201112 09:57:03.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.458" endtime="20201112 09:57:03.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.469" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:03.468" endtime="20201112 09:57:03.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.471" level="INFO">VALUE: [0.040441403, 0.060444514, 0.08044675, 0.100449111, 0.120451333, 0.140453694, 0.160455931, 0.180458264, 0.2004605, 0.220462875, 0.240465097, 0.260467514, 0.280469681, 0.300472028, 0.320474264, 0.340476639, 0.360478861, 0.380481208, 0.400483444, 0.420485806, 0.440488042, 0.460490389, 0.480492681, 0.500495, 0.520497208, 0.540499597, 0.560501806, 0.580504167, 0.600506389, 0.620508792, 0.640511, 0.660513347, 0.680515569, 0.700517931, 0.720520181, 0.740522514, 0.760524764, 0.780527111, 0.800529347, 0.820531708, 0.840533931, 0.860536292, 0.880538528, 0.900540875, 0.920543111, 0.940545472, 0.960547694, 0.980550056, 1.000552292, 1.020554681, 1.040556889, 1.060559236, 1.080561472, 1.100563819, 1.120566069, 1.140568431, 1.160570639, 1.180573, 1.20057525, 1.220577597, 1.240579833, 1.260582181, 1.280584417, 1.300586778, 1.320589028, 1.340591361, 1.360593681, 1.380595958, 1.400598181, 1.420600542, 1.440602778, 1.460605125, 1.480607375, 1.500609806, 1.520611958, 1.540614319, 1.560616569, 1.580618903, 1.600621153, 1.6206235, 1.640625722, 1.660628097, 1.680630319, 1.700632667, 1.720634917, 1.740637264, 1.760639569, 1.780641847, 1.800644083, 1.820646486, 1.840648681, 1.860651042, 1.880653278, 1.900655625, 1.920657903, 1.94066025, 1.960662444, 1.980664819, 2.000667028, 2.020669389] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:03.470" endtime="20201112 09:57:03.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.465" endtime="20201112 09:57:03.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:03.474" endtime="20201112 09:57:03.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:03.478" endtime="20201112 09:57:03.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.476" endtime="20201112 09:57:03.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.473" endtime="20201112 09:57:03.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.973" endtime="20201112 09:57:03.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.856" endtime="20201112 09:57:03.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:49.855" endtime="20201112 09:57:03.499"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:03.502" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:03.510" endtime="20201112 09:57:07.614"></status>
</kw>
<msg timestamp="20201112 09:57:07.615" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 61541378, 'wakeups': [61551473, 61561471, 61571471, 61581471, 615914...</msg>
<status status="PASS" starttime="20201112 09:57:03.508" endtime="20201112 09:57:07.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.618" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 61541378, 'wakeups': [61551473, 61561471, 61571471, 61581471, 615914...</msg>
<status status="PASS" starttime="20201112 09:57:07.616" endtime="20201112 09:57:07.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.619" endtime="20201112 09:57:07.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.505" endtime="20201112 09:57:07.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.504" endtime="20201112 09:57:07.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:07.624" level="INFO">${RESULT} = {'start-time': 61541378, 'wakeups': [61551473, 61561471, 61571471, 61581471, 61591471, 61601471, 61611471, 61621471, 61631471, 61641471, 61651471, 61661471, 61671471, 61681471, 61691471, 61701471, 617...</msg>
<status status="PASS" starttime="20201112 09:57:07.622" endtime="20201112 09:57:07.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.628" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:07.627" endtime="20201112 09:57:07.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.630" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:07.629" endtime="20201112 09:57:07.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.625" endtime="20201112 09:57:07.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.636" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:07.635" endtime="20201112 09:57:07.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.638" level="INFO">VALUE: 61541378</msg>
<status status="PASS" starttime="20201112 09:57:07.637" endtime="20201112 09:57:07.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.631" endtime="20201112 09:57:07.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.643" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:07.642" endtime="20201112 09:57:07.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.645" level="INFO">VALUE: [61551473, 61561471, 61571471, 61581471, 61591471, 61601471, 61611471, 61621471, 61631471, 61641471, 61651471, 61661471, 61671471, 61681471, 61691471, 61701471, 61711471, 61721471, 61731471, 61741471, 61751471, 61761471, 61771471, 61781471, 61791471, 61801471, 61811471, 61821471, 61831471, 61841471, 61851471, 61861471, 61871471, 61881471, 61891471, 61901471, 61911471, 61921471, 61931471, 61941471, 61951471, 61961471, 61971471, 61981471, 61991471, 62001471, 62011471, 62021471, 62031471, 62041471, 62051471, 62061471, 62071471, 62081471, 62091471, 62101471, 62111471, 62121471, 62131471, 62141471, 62151471, 62161471, 62171471, 62181471, 62191471, 62201471, 62211471, 62221471, 62231471, 62241471, 62251471, 62261471, 62271471, 62281471, 62291471, 62301471, 62311471, 62321471, 62331471, 62341471, 62351471, 62361471, 62371471, 62381471, 62391471, 62401471, 62411471, 62421471, 62431471, 62441471, 62451471, 62461471, 62471471, 62481471, 62491471, 62501471, 62511471, 62521471, 62531471, 62541471]</msg>
<status status="PASS" starttime="20201112 09:57:07.644" endtime="20201112 09:57:07.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.639" endtime="20201112 09:57:07.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.653" endtime="20201112 09:57:07.944"></status>
</kw>
<msg timestamp="20201112 09:57:07.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022374111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042566528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:07.651" endtime="20201112 09:57:07.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022374111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042566528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:07.948" endtime="20201112 09:57:07.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.955" endtime="20201112 09:57:07.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.648" endtime="20201112 09:57:07.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.646" endtime="20201112 09:57:07.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:07.981" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:57:07.959" endtime="20201112 09:57:07.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.986" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:07.985" endtime="20201112 09:57:07.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.988" level="INFO">VALUE: 0.022374111</msg>
<status status="PASS" starttime="20201112 09:57:07.987" endtime="20201112 09:57:07.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.982" endtime="20201112 09:57:07.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.994" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:07.993" endtime="20201112 09:57:07.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.996" level="INFO">VALUE: [0.042566528, 0.062565333, 0.082567556, 0.102569931, 0.122572194, 0.142574556, 0.162576806, 0.182579181, 0.202581431, 0.222583806, 0.242586069, 0.262588431, 0.282590681, 0.302593056, 0.322595306, 0.342597694, 0.362599972, 0.382602319, 0.402604569, 0.422606944, 0.442609194, 0.462611569, 0.482613819, 0.502616194, 0.522618458, 0.542620819, 0.562623083, 0.582625458, 0.602627708, 0.622630083, 0.642632333, 0.662634708, 0.682636958, 0.702639333, 0.722641583, 0.742643986, 0.762646222, 0.782648583, 0.802650833, 0.822653278, 0.842655472, 0.862657847, 0.882660111, 0.902662542, 0.922664722, 0.942667097, 0.962669347, 0.982671722, 1.002673986, 1.022676375, 1.042678611, 1.062681, 1.08268325, 1.102685611, 1.122687875, 1.142690236, 1.162692514, 1.182694875, 1.202697111, 1.222699486, 1.242701736, 1.262704125, 1.282706389, 1.30270875, 1.322711014, 1.342713375, 1.362715625, 1.382718014, 1.402720264, 1.422722653, 1.442724903, 1.46272725, 1.482729514, 1.502731903, 1.522734139, 1.542736514, 1.562738764, 1.582741139, 1.602743389, 1.622745764, 1.642748028, 1.662750389, 1.682752653, 1.702755028, 1.722757278, 1.742759653, 1.762761903, 1.782764292, 1.802766528, 1.822768903, 1.842771153, 1.862773528, 1.882775778, 1.902778181, 1.922780417, 1.942782792, 1.962785056, 1.982787431, 2.002789708, 2.022792042] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:07.995" endtime="20201112 09:57:07.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.989" endtime="20201112 09:57:07.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.999" endtime="20201112 09:57:08.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:08.003" endtime="20201112 09:57:08.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:08.001" endtime="20201112 09:57:08.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.997" endtime="20201112 09:57:08.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.502" endtime="20201112 09:57:08.023"></status>
</kw>
<msg timestamp="20201112 09:57:08.023" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:08.031" endtime="20201112 09:57:12.151"></status>
</kw>
<msg timestamp="20201112 09:57:12.152" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 63802256, 'wakeups': [63812350, 63822349, 63832349, 63842349, 638523...</msg>
<status status="PASS" starttime="20201112 09:57:08.030" endtime="20201112 09:57:12.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 63802256, 'wakeups': [63812350, 63822349, 63832349, 63842349, 638523...</msg>
<status status="PASS" starttime="20201112 09:57:12.154" endtime="20201112 09:57:12.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.161" endtime="20201112 09:57:12.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:08.027" endtime="20201112 09:57:12.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:08.025" endtime="20201112 09:57:12.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:12.166" level="INFO">${RESULT} = {'start-time': 63802256, 'wakeups': [63812350, 63822349, 63832349, 63842349, 63852349, 63862349, 63872349, 63882349, 63892349, 63902349, 63912349, 63922349, 63932349, 63942349, 63952349, 63962349, 639...</msg>
<status status="PASS" starttime="20201112 09:57:12.164" endtime="20201112 09:57:12.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.170" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:12.169" endtime="20201112 09:57:12.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.172" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:12.172" endtime="20201112 09:57:12.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.167" endtime="20201112 09:57:12.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.177" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:12.176" endtime="20201112 09:57:12.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.180" level="INFO">VALUE: 63802256</msg>
<status status="PASS" starttime="20201112 09:57:12.179" endtime="20201112 09:57:12.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.174" endtime="20201112 09:57:12.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.185" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:12.184" endtime="20201112 09:57:12.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.187" level="INFO">VALUE: [63812350, 63822349, 63832349, 63842349, 63852349, 63862349, 63872349, 63882349, 63892349, 63902349, 63912349, 63922349, 63932349, 63942349, 63952349, 63962349, 63972349, 63982349, 63992349, 64002349, 64012349, 64022349, 64032349, 64042349, 64052349, 64062349, 64072349, 64082349, 64092349, 64102349, 64112349, 64122349, 64132349, 64142349, 64152349, 64162349, 64172349, 64182349, 64192349, 64202349, 64212349, 64222349, 64232349, 64242349, 64252349, 64262349, 64272349, 64282349, 64292349, 64302349, 64312349, 64322349, 64332349, 64342349, 64352349, 64362349, 64372349, 64382349, 64392349, 64402349, 64412349, 64422349, 64432349, 64442349, 64452349, 64462349, 64472349, 64482349, 64492349, 64502349, 64512349, 64522349, 64532349, 64542349, 64552349, 64562349, 64572349, 64582349, 64592349, 64602349, 64612349, 64622349, 64632349, 64642349, 64652349, 64662349, 64672349, 64682349, 64692349, 64702349, 64712349, 64722349, 64732349, 64742349, 64752349, 64762349, 64772349, 64782349, 64792349, 64802349]</msg>
<status status="PASS" starttime="20201112 09:57:12.186" endtime="20201112 09:57:12.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.181" endtime="20201112 09:57:12.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.195" endtime="20201112 09:57:12.486"></status>
</kw>
<msg timestamp="20201112 09:57:12.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019212069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039403181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:12.193" endtime="20201112 09:57:12.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019212069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039403181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:12.490" endtime="20201112 09:57:12.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.498" endtime="20201112 09:57:12.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.190" endtime="20201112 09:57:12.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.188" endtime="20201112 09:57:12.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:12.525" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:57:12.502" endtime="20201112 09:57:12.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.530" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:12.529" endtime="20201112 09:57:12.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.532" level="INFO">VALUE: 0.019212069</msg>
<status status="PASS" starttime="20201112 09:57:12.531" endtime="20201112 09:57:12.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.526" endtime="20201112 09:57:12.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.537" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:12.536" endtime="20201112 09:57:12.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.539" level="INFO">VALUE: [0.039403181, 0.059403931, 0.079406181, 0.099408569, 0.119410792, 0.139413167, 0.159415431, 0.179417778, 0.199420042, 0.219422417, 0.239424653, 0.259427028, 0.279429292, 0.299431639, 0.319433889, 0.339436264, 0.359438514, 0.379440889, 0.399443139, 0.419445514, 0.439447764, 0.459450125, 0.479452375, 0.49945475, 0.519457014, 0.539459375, 0.559461611, 0.579463986, 0.599466236, 0.619468611, 0.639470861, 0.659473222, 0.679475486, 0.699477875, 0.719480097, 0.739482514, 0.75948475, 0.779487097, 0.799489333, 0.819491708, 0.839494, 0.859496347, 0.879498583, 0.899500958, 0.919503194, 0.939505569, 0.959507819, 0.979510222, 0.999512458, 1.019514819, 1.039517083, 1.0595195, 1.079521722, 1.099524056, 1.119526306, 1.139528681, 1.159530931, 1.179533319, 1.199535542, 1.219537944, 1.239540167, 1.259542556, 1.279544806, 1.299547208, 1.319549403, 1.339551819, 1.359554042, 1.379556417, 1.399558653, 1.419561097, 1.439563264, 1.459565639, 1.479567958, 1.499570319, 1.519572514, 1.539574889, 1.559577181, 1.5795795, 1.59958175, 1.619584139, 1.639586403, 1.659588764, 1.679590986, 1.699593361, 1.719595625, 1.739597986, 1.759600236, 1.779602625, 1.799604903, 1.819607236, 1.839609486, 1.859611847, 1.879614097, 1.899616472, 1.919618736, 1.939621097, 1.959623347, 1.979625722, 1.999627972, 2.019630347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:12.538" endtime="20201112 09:57:12.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.533" endtime="20201112 09:57:12.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.542" endtime="20201112 09:57:12.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:12.546" endtime="20201112 09:57:12.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.544" endtime="20201112 09:57:12.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.541" endtime="20201112 09:57:12.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:08.024" endtime="20201112 09:57:12.566"></status>
</kw>
<msg timestamp="20201112 09:57:12.567" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.576" endtime="20201112 09:57:16.695"></status>
</kw>
<msg timestamp="20201112 09:57:16.696" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 66074322, 'wakeups': [66084417, 66094415, 66104415, 66114415, 661244...</msg>
<status status="PASS" starttime="20201112 09:57:12.574" endtime="20201112 09:57:16.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:16.702" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 66074322, 'wakeups': [66084417, 66094415, 66104415, 66114415, 661244...</msg>
<status status="PASS" starttime="20201112 09:57:16.698" endtime="20201112 09:57:16.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:16.705" endtime="20201112 09:57:16.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.571" endtime="20201112 09:57:16.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.569" endtime="20201112 09:57:16.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:16.715" level="INFO">${RESULT} = {'start-time': 66074322, 'wakeups': [66084417, 66094415, 66104415, 66114415, 66124415, 66134415, 66144415, 66154415, 66164415, 66174415, 66184415, 66194415, 66204415, 66214415, 66224415, 66234415, 662...</msg>
<status status="PASS" starttime="20201112 09:57:16.711" endtime="20201112 09:57:16.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:16.722" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:16.721" endtime="20201112 09:57:16.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:16.724" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:16.723" endtime="20201112 09:57:16.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:16.717" endtime="20201112 09:57:16.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:16.729" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:16.728" endtime="20201112 09:57:16.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:16.731" level="INFO">VALUE: 66074322</msg>
<status status="PASS" starttime="20201112 09:57:16.730" endtime="20201112 09:57:16.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:16.725" endtime="20201112 09:57:16.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:16.736" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:16.735" endtime="20201112 09:57:16.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:16.738" level="INFO">VALUE: [66084417, 66094415, 66104415, 66114415, 66124415, 66134415, 66144415, 66154415, 66164415, 66174415, 66184415, 66194415, 66204415, 66214415, 66224415, 66234415, 66244415, 66254415, 66264415, 66274415, 66284415, 66294415, 66304415, 66314415, 66324415, 66334415, 66344415, 66354415, 66364415, 66374415, 66384415, 66394415, 66404415, 66414415, 66424415, 66434415, 66444415, 66454415, 66464415, 66474415, 66484415, 66494415, 66504415, 66514415, 66524415, 66534415, 66544415, 66554415, 66564415, 66574415, 66584415, 66594415, 66604415, 66614415, 66624415, 66634415, 66644415, 66654415, 66664415, 66674415, 66684415, 66694415, 66704415, 66714415, 66724415, 66734415, 66744415, 66754415, 66764415, 66774415, 66784415, 66794415, 66804415, 66814415, 66824415, 66834415, 66844415, 66854415, 66864415, 66874415, 66884415, 66894415, 66904415, 66914415, 66924415, 66934415, 66944415, 66954415, 66964415, 66974415, 66984415, 66994415, 67004415, 67014415, 67024415, 67034415, 67044415, 67054415, 67064415, 67074415]</msg>
<status status="PASS" starttime="20201112 09:57:16.737" endtime="20201112 09:57:16.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:16.732" endtime="20201112 09:57:16.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:16.745" endtime="20201112 09:57:17.036"></status>
</kw>
<msg timestamp="20201112 09:57:17.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040492444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:16.744" endtime="20201112 09:57:17.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040492444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:17.040" endtime="20201112 09:57:17.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:17.048" endtime="20201112 09:57:17.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:16.741" endtime="20201112 09:57:17.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:16.739" endtime="20201112 09:57:17.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:17.074" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 09:57:17.051" endtime="20201112 09:57:17.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.079" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:17.078" endtime="20201112 09:57:17.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.081" level="INFO">VALUE: 0.020300028</msg>
<status status="PASS" starttime="20201112 09:57:17.080" endtime="20201112 09:57:17.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.075" endtime="20201112 09:57:17.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.086" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:17.085" endtime="20201112 09:57:17.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.088" level="INFO">VALUE: [0.040492444, 0.060491222, 0.080493472, 0.100495861, 0.120498069, 0.140500444, 0.16050275, 0.180505042, 0.200507306, 0.220509653, 0.240511903, 0.260514278, 0.280516514, 0.300518889, 0.320521125, 0.340523542, 0.360525736, 0.380528111, 0.400530347, 0.420532722, 0.440535014, 0.460537333, 0.480539569, 0.500541958, 0.520544181, 0.540546556, 0.560548819, 0.580551167, 0.600553417, 0.620555778, 0.640558042, 0.660560403, 0.680562639, 0.700565028, 0.72056725, 0.740569625, 0.760571861, 0.780574236, 0.800576556, 0.820578847, 0.840581097, 0.860583458, 0.880585722, 0.900588069, 0.920590333, 0.940592764, 0.960594944, 0.980597306, 1.000599556, 1.020601917, 1.040604153, 1.060606528, 1.080608764, 1.100611153, 1.120613403, 1.140615764, 1.160618, 1.180620375, 1.200622611, 1.220624972, 1.240627222, 1.260629625, 1.280631847, 1.300634222, 1.320636444, 1.340638819, 1.360641069, 1.380643444, 1.400645694, 1.420648042, 1.440650292, 1.460652667, 1.480654903, 1.500657278, 1.520659528, 1.540661903, 1.560664125, 1.5806665, 1.60066875, 1.620671111, 1.640673347, 1.660675792, 1.680678014, 1.700680333, 1.720682583, 1.740684944, 1.760687208, 1.780689569, 1.800691806, 1.820694194, 1.840696417, 1.860698806, 1.880701042, 1.900703403, 1.920705653, 1.940708028, 1.960710264, 1.980712653, 2.000714889, 2.020717264] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:17.087" endtime="20201112 09:57:17.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.082" endtime="20201112 09:57:17.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:17.092" endtime="20201112 09:57:17.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:17.095" endtime="20201112 09:57:17.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.093" endtime="20201112 09:57:17.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.090" endtime="20201112 09:57:17.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.567" endtime="20201112 09:57:17.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.500" endtime="20201112 09:57:17.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.499" endtime="20201112 09:57:17.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.781" endtime="20201112 09:57:17.116"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:55:00.710" endtime="20201112 09:57:17.117" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:54:59.317" endtime="20201112 09:57:17.120"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201112 09:53:06.330" endtime="20201112 09:57:17.138"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
