<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 09:53:45.767" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:47.000" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:47.016" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:48.834" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:46.995" endtime="20201112 09:53:48.836"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:48.842" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:48.838" endtime="20201112 09:53:48.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.993" endtime="20201112 09:53:48.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:48.848" endtime="20201112 09:53:49.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:48.846" endtime="20201112 09:53:49.185"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.216" endtime="20201112 09:53:49.242"></status>
</kw>
<msg timestamp="20201112 09:53:49.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', '...</msg>
<status status="PASS" starttime="20201112 09:53:49.213" endtime="20201112 09:53:49.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.251" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', '...</msg>
<status status="PASS" starttime="20201112 09:53:49.246" endtime="20201112 09:53:49.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.258" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:49.253" endtime="20201112 09:53:49.259"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:49.206" endtime="20201112 09:53:49.262"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:49.199" endtime="20201112 09:53:49.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.197" endtime="20201112 09:53:49.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:49.273" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:49.271" endtime="20201112 09:53:49.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.267" endtime="20201112 09:53:49.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.195" endtime="20201112 09:53:49.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.193" endtime="20201112 09:53:49.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.277" endtime="20201112 09:53:49.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.189" endtime="20201112 09:53:49.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.284" endtime="20201112 09:53:49.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.186" endtime="20201112 09:53:49.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:46.989" endtime="20201112 09:53:49.290"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:49.306" endtime="20201112 09:53:49.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.302" endtime="20201112 09:53:49.330"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.367" endtime="20201112 09:53:49.388"></status>
</kw>
<msg timestamp="20201112 09:53:49.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.363" endtime="20201112 09:53:49.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.396" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.392" endtime="20201112 09:53:49.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.402" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:49.398" endtime="20201112 09:53:49.403"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:49.356" endtime="20201112 09:53:49.405"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:49.350" endtime="20201112 09:53:49.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.345" endtime="20201112 09:53:49.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:49.415" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:49.413" endtime="20201112 09:53:49.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.409" endtime="20201112 09:53:49.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.343" endtime="20201112 09:53:49.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.340" endtime="20201112 09:53:49.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.418" endtime="20201112 09:53:49.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.336" endtime="20201112 09:53:49.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.332" endtime="20201112 09:53:49.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.299" endtime="20201112 09:53:49.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.444" endtime="20201112 09:53:49.458"></status>
</kw>
<msg timestamp="20201112 09:53:49.459" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.441" endtime="20201112 09:53:49.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.466" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:49.463" endtime="20201112 09:53:49.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:49.469" endtime="20201112 09:53:49.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.433" endtime="20201112 09:53:49.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.428" endtime="20201112 09:53:49.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.487" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:53:49.485" endtime="20201112 09:53:49.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.492" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:53:49.489" endtime="20201112 09:53:49.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.478" endtime="20201112 09:53:49.494"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:49.291" endtime="20201112 09:53:49.496" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:46.029" endtime="20201112 09:53:49.506"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:53:49.644" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:53:49.659" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:53:51.410" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:53:49.639" endtime="20201112 09:53:51.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.417" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:53:51.414" endtime="20201112 09:53:51.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.637" endtime="20201112 09:53:51.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.424" endtime="20201112 09:53:51.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.421" endtime="20201112 09:53:51.757"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.787" endtime="20201112 09:53:51.813"></status>
</kw>
<msg timestamp="20201112 09:53:51.814" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests...</msg>
<status status="PASS" starttime="20201112 09:53:51.784" endtime="20201112 09:53:51.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.821" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests...</msg>
<status status="PASS" starttime="20201112 09:53:51.816" endtime="20201112 09:53:51.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:51.827" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:51.823" endtime="20201112 09:53:51.828"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:51.777" endtime="20201112 09:53:51.830"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:51.772" endtime="20201112 09:53:51.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.769" endtime="20201112 09:53:51.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:51.840" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:51.839" endtime="20201112 09:53:51.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.834" endtime="20201112 09:53:51.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.767" endtime="20201112 09:53:51.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.765" endtime="20201112 09:53:51.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.844" endtime="20201112 09:53:51.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.762" endtime="20201112 09:53:51.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.850" endtime="20201112 09:53:51.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.759" endtime="20201112 09:53:51.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:49.634" endtime="20201112 09:53:51.856"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:51.872" endtime="20201112 09:53:51.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.868" endtime="20201112 09:53:51.895"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:51.990" endtime="20201112 09:53:52.012"></status>
</kw>
<msg timestamp="20201112 09:53:52.013" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:51.987" endtime="20201112 09:53:52.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.015" endtime="20201112 09:53:52.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.026" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:53:52.022" endtime="20201112 09:53:52.027"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:51.980" endtime="20201112 09:53:52.028"></status>
</kw>
<status status="FAIL" starttime="20201112 09:53:51.973" endtime="20201112 09:53:52.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.909" endtime="20201112 09:53:52.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:53:52.038" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:53:52.037" endtime="20201112 09:53:52.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.033" endtime="20201112 09:53:52.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.907" endtime="20201112 09:53:52.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.905" endtime="20201112 09:53:52.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.042" endtime="20201112 09:53:52.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.901" endtime="20201112 09:53:52.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.897" endtime="20201112 09:53:52.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:51.865" endtime="20201112 09:53:52.049"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:53:52.054" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.075" endtime="20201112 09:53:52.090"></status>
</kw>
<msg timestamp="20201112 09:53:52.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.072" endtime="20201112 09:53:52.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.097" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.093" endtime="20201112 09:53:52.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.099" endtime="20201112 09:53:52.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.065" endtime="20201112 09:53:52.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.059" endtime="20201112 09:53:52.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.123" endtime="20201112 09:53:52.457"></status>
</kw>
<msg timestamp="20201112 09:53:52.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.194578903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.194591417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.119" endtime="20201112 09:53:52.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.194578903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.194591417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.464" endtime="20201112 09:53:52.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.477" endtime="20201112 09:53:52.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.112" endtime="20201112 09:53:52.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.107" endtime="20201112 09:53:52.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.494" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:52.492" endtime="20201112 09:53:52.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.503" level="INFO">VALUE: [{'time': 0.194578903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.194591417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999991254e-05, 'source_diff': 1.2513999999991254e-05}, {'time': 0.194599111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.194607028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.194613278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2500000000131894e-06, 'source_diff': 6.2500000000131894e-06}, {'time': 0.194618278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.194632653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999983151e-05, 'source_diff': 1.4374999999983151e-05}, {'time': 0.194644542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000014915e-05, 'source_diff': 1.1889000000014915e-05}, {'time': 0.194647028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4859999999959914e-06, 'source_diff': 2.4859999999959914e-06}, {'time': 0.194662236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5207999999988786e-05, 'source_diff': 1.5207999999988786e-05}, {'time': 0.194672444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000011541e-05, 'source_diff': 1.0208000000011541e-05}, {'time': 0.194683708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000010821e-05, 'source_diff': 1.1264000000010821e-05}, {'time': 0.194697875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4166999999981611e-05, 'source_diff': 1.4166999999981611e-05}, {'time': 0.194702875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.194710167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.291999999992083e-06, 'source_diff': 7.291999999992083e-06}, {'time': 0.194724778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.461099999999771e-05, 'source_diff': 1.461099999999771e-05}, {'time': 0.194738083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3305000000018996e-05, 'source_diff': 1.3305000000018996e-05}, {'time': 0.194741208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999992717e-06, 'source_diff': 3.124999999992717e-06}, {'time': 0.194746625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000007555e-06, 'source_diff': 5.417000000007555e-06}, {'time': 0.194761, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999983151e-05, 'source_diff': 1.4374999999983151e-05}, {'time': 0.194769333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.19477975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0417000000012555e-05, 'source_diff': 1.0417000000012555e-05}, {'time': 0.19478225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999886224e-06, 'source_diff': 2.4999999999886224e-06}, {'time': 0.1947935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001819e-05, 'source_diff': 1.125000000001819e-05}, {'time': 0.194803722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.194807472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.194809958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4859999999959914e-06, 'source_diff': 2.4859999999959914e-06}, {'time': 0.194817875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.194826431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999992903e-06, 'source_diff': 8.555999999992903e-06}, {'time': 0.194841861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5430000000010713e-05, 'source_diff': 1.5430000000010713e-05}, {'time': 0.19485375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.188899999998716e-05, 'source_diff': 1.188899999998716e-05}, {'time': 0.194857681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.931000000012563e-06, 'source_diff': 3.931000000012563e-06}, {'time': 0.194871639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000008353e-05, 'source_diff': 1.3958000000008353e-05}, {'time': 0.194874347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999901627e-06, 'source_diff': 2.7079999999901627e-06}, {'time': 0.194888319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.194900611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2291999999997083e-05, 'source_diff': 1.2291999999997083e-05}, {'time': 0.194915181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4569999999991534e-05, 'source_diff': 1.4569999999991534e-05}, {'time': 0.194921472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2910000000193644e-06, 'source_diff': 6.2910000000193644e-06}, {'time': 0.194935181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3709000000000637e-05, 'source_diff': 1.3709000000000637e-05}, {'time': 0.194939764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999974691e-06, 'source_diff': 4.582999999974691e-06}, {'time': 0.194952083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000010627e-05, 'source_diff': 1.2319000000010627e-05}, {'time': 0.194959556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4730000000078345e-06, 'source_diff': 7.4730000000078345e-06}, {'time': 0.194965625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.194976444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0818999999995249e-05, 'source_diff': 1.0818999999995249e-05}, {'time': 0.194991236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4792000000013461e-05, 'source_diff': 1.4792000000013461e-05}, {'time': 0.195004778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3541999999977516e-05, 'source_diff': 1.3541999999977516e-05}, {'time': 0.195014986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000011541e-05, 'source_diff': 1.0208000000011541e-05}, {'time': 0.195022278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.291999999992083e-06, 'source_diff': 7.291999999992083e-06}, {'time': 0.195030194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.195038958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000022198e-06, 'source_diff': 8.764000000022198e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:52.497" endtime="20201112 09:53:52.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.485" endtime="20201112 09:53:52.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:52.536" level="INFO">${debug-compressed} = {'diff': [0, 1.2513999999991254e-05, 7.694000000002532e-06, 7.916999999996177e-06, 6.2500000000131894e-06, 5.0000000000050004e-06, 1.4374999999983151e-05, 1.1889000000014915e-05, 2.4859999999959914e-0...</msg>
<status status="PASS" starttime="20201112 09:53:52.507" endtime="20201112 09:53:52.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.546" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:52.544" endtime="20201112 09:53:52.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.553" level="INFO">VALUE: {'diff': [0, 1.2513999999991254e-05, 7.694000000002532e-06, 7.916999999996177e-06, 6.2500000000131894e-06, 5.0000000000050004e-06, 1.4374999999983151e-05, 1.1889000000014915e-05, 2.4859999999959914e-06, 1.5207999999988786e-05, 1.0208000000011541e-05, 1.1264000000010821e-05, 1.4166999999981611e-05, 5.0000000000050004e-06, 7.291999999992083e-06, 1.461099999999771e-05, 1.3305000000018996e-05, 3.124999999992717e-06, 5.417000000007555e-06, 1.4374999999983151e-05, 8.332999999999258e-06, 1.0417000000012555e-05, 2.4999999999886224e-06, 1.125000000001819e-05, 1.0222000000004172e-05, 3.7499999999968114e-06, 2.4859999999959914e-06, 7.916999999996177e-06, 8.555999999992903e-06, 1.5430000000010713e-05, 1.188899999998716e-05, 3.931000000012563e-06, 1.3958000000008353e-05, 2.7079999999901627e-06, 1.3972000000000984e-05, 1.2291999999997083e-05, 1.4569999999991534e-05, 6.2910000000193644e-06, 1.3709000000000637e-05, 4.582999999974691e-06, 1.2319000000010627e-05, 7.4730000000078345e-06, 6.0689999999974376e-06, 1.0818999999995249e-05, 1.4792000000013461e-05, 1.3541999999977516e-05, 1.0208000000011541e-05, 7.291999999992083e-06, 7.915999999996703e-06, 8.764000000022198e-06], 'time': [0.194578903, 0.194591417, 0.194599111, 0.194607028, 0.194613278, 0.194618278, 0.194632653, 0.194644542, 0.194647028, 0.194662236, 0.194672444, 0.194683708, 0.194697875, 0.194702875, 0.194710167, 0.194724778, 0.194738083, 0.194741208, 0.194746625, 0.194761, 0.194769333, 0.19477975, 0.19478225, 0.1947935, 0.194803722, 0.194807472, 0.194809958, 0.194817875, 0.194826431, 0.194841861, 0.19485375, 0.194857681, 0.194871639, 0.194874347, 0.194888319, 0.194900611, 0.194915181, 0.194921472, 0.194935181, 0.194939764, 0.194952083, 0.194959556, 0.194965625, 0.194976444, 0.194991236, 0.195004778, 0.195014986, 0.195022278, 0.195030194, 0.195038958], 'sourceeventsource_diff': [0, 1.2513999999991254e-05, 7.694000000002532e-06, 7.916999999996177e-06, 6.2500000000131894e-06, 5.0000000000050004e-06, 1.4374999999983151e-05, 1.1889000000014915e-05, 2.4859999999959914e-06, 1.5207999999988786e-05, 1.0208000000011541e-05, 1.1264000000010821e-05, 1.4166999999981611e-05, 5.0000000000050004e-06, 7.291999999992083e-06, 1.461099999999771e-05, 1.3305000000018996e-05, 3.124999999992717e-06, 5.417000000007555e-06, 1.4374999999983151e-05, 8.332999999999258e-06, 1.0417000000012555e-05, 2.4999999999886224e-06, 1.125000000001819e-05, 1.0222000000004172e-05, 3.7499999999968114e-06, 2.4859999999959914e-06, 7.916999999996177e-06, 8.555999999992903e-06, 1.5430000000010713e-05, 1.188899999998716e-05, 3.931000000012563e-06, 1.3958000000008353e-05, 2.7079999999901627e-06, 1.3972000000000984e-05, 1.2291999999997083e-05, 1.4569999999991534e-05, 6.2910000000193644e-06, 1.3709000000000637e-05, 4.582999999974691e-06, 1.2319000000010627e-05, 7.4730000000078345e-06, 6.0689999999974376e-06, 1.0818999999995249e-05, 1.4792000000013461e-05, 1.3541999999977516e-05, 1.0208000000011541e-05, 7.291999999992083e-06, 7.915999999996703e-06, 8.764000000022198e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:52.549" endtime="20201112 09:53:52.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.538" endtime="20201112 09:53:52.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:52.565" level="INFO">${RESULT} = [{'time': 0.194591417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999991254e-05, 'source_diff': 1.2513999999991254e-05}, {'time': 0.194607028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:52.558" endtime="20201112 09:53:52.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:52.583" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2513999999991254e-05, 7.916999999996177e-06, 5.0000000000050004e-06, 1.1889000000014915e-05, 1.5207999999988786e-05, 1.1264000000010821e-05, 5.0000000000050004e-06, 1.461099999999771e-05, ...</msg>
<status status="PASS" starttime="20201112 09:53:52.567" endtime="20201112 09:53:52.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.595" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:52.591" endtime="20201112 09:53:52.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.600" level="INFO">VALUE: [1.2513999999991254e-05, 7.916999999996177e-06, 5.0000000000050004e-06, 1.1889000000014915e-05, 1.5207999999988786e-05, 1.1264000000010821e-05, 5.0000000000050004e-06, 1.461099999999771e-05, 3.124999999992717e-06, 1.4374999999983151e-05, 1.0417000000012555e-05, 1.125000000001819e-05, 3.7499999999968114e-06, 7.916999999996177e-06, 1.5430000000010713e-05, 3.931000000012563e-06, 2.7079999999901627e-06, 1.2291999999997083e-05, 6.2910000000193644e-06, 4.582999999974691e-06, 7.4730000000078345e-06, 1.0818999999995249e-05, 1.3541999999977516e-05, 7.291999999992083e-06, 8.764000000022198e-06]</msg>
<status status="PASS" starttime="20201112 09:53:52.597" endtime="20201112 09:53:52.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.585" endtime="20201112 09:53:52.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.608" endtime="20201112 09:53:52.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:52.617" endtime="20201112 09:53:52.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.612" endtime="20201112 09:53:52.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.604" endtime="20201112 09:53:52.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.056" endtime="20201112 09:53:52.642"></status>
</kw>
<msg timestamp="20201112 09:53:52.643" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.663" endtime="20201112 09:53:52.676"></status>
</kw>
<msg timestamp="20201112 09:53:52.677" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.659" endtime="20201112 09:53:52.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:52.683" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:52.679" endtime="20201112 09:53:52.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.685" endtime="20201112 09:53:52.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.652" endtime="20201112 09:53:52.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.647" endtime="20201112 09:53:52.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:52.708" endtime="20201112 09:53:53.023"></status>
</kw>
<msg timestamp="20201112 09:53:53.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036854222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036866083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:52.705" endtime="20201112 09:53:53.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036854222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036866083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.029" endtime="20201112 09:53:53.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.042" endtime="20201112 09:53:53.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.698" endtime="20201112 09:53:53.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.693" endtime="20201112 09:53:53.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.058" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:53.056" endtime="20201112 09:53:53.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.066" level="INFO">VALUE: [{'time': 0.036854222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036866083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.036879847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.036882569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7219999999966715e-06, 'source_diff': 2.7219999999966715e-06}, {'time': 0.036895278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.036900264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9860000000054305e-06, 'source_diff': 4.9860000000054305e-06}, {'time': 0.036902764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.036910694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.036914014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.036920694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.679999999995023e-06, 'source_diff': 6.679999999995023e-06}, {'time': 0.036935694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.036940264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.036950056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.036962139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2082999999996069e-05, 'source_diff': 1.2082999999996069e-05}, {'time': 0.036976111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.036988806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.036993597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7910000000039865e-06, 'source_diff': 4.7910000000039865e-06}, {'time': 0.037005486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1888999999994099e-05, 'source_diff': 1.1888999999994099e-05}, {'time': 0.037012361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.037017569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.037027361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.037039875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.037043194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.037056736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.037059514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.037074875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.536099999999846e-05, 'source_diff': 1.536099999999846e-05}, {'time': 0.037086944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.20689999999965e-05, 'source_diff': 1.20689999999965e-05}, {'time': 0.037089653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.709000000003514e-06, 'source_diff': 2.709000000003514e-06}, {'time': 0.037093208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.037108403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5194999999995629e-05, 'source_diff': 1.5194999999995629e-05}, {'time': 0.037111528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.037117778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037131153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3375000000002968e-05, 'source_diff': 1.3375000000002968e-05}, {'time': 0.037140708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.037143014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.037155722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.037159667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.037171125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.037186347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.037200917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4569999999998473e-05, 'source_diff': 1.4569999999998473e-05}, {'time': 0.037211833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.03721925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.037222583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3329999999942572e-06, 'source_diff': 3.3329999999942572e-06}, {'time': 0.037233833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.037244458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.037256556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2098000000002052e-05, 'source_diff': 1.2098000000002052e-05}, {'time': 0.037260111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5549999999953674e-06, 'source_diff': 3.5549999999953674e-06}, {'time': 0.037274694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.037278444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7500000000037503e-06, 'source_diff': 3.7500000000037503e-06}, {'time': 0.037292806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4361999999996933e-05, 'source_diff': 1.4361999999996933e-05}]</msg>
<status status="PASS" starttime="20201112 09:53:53.060" endtime="20201112 09:53:53.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.050" endtime="20201112 09:53:53.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:53.101" level="INFO">${debug-compressed} = {'diff': [0, 1.1861000000001898e-05, 1.3763999999999443e-05, 2.7219999999966715e-06, 1.2708999999999637e-05, 4.9860000000054305e-06, 2.4999999999955613e-06, 7.930000000003212e-06, 3.3200000000011e-06,...</msg>
<status status="PASS" starttime="20201112 09:53:53.072" endtime="20201112 09:53:53.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.110" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:53.108" endtime="20201112 09:53:53.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.119" level="INFO">VALUE: {'diff': [0, 1.1861000000001898e-05, 1.3763999999999443e-05, 2.7219999999966715e-06, 1.2708999999999637e-05, 4.9860000000054305e-06, 2.4999999999955613e-06, 7.930000000003212e-06, 3.3200000000011e-06, 6.679999999995023e-06, 1.5000000000001124e-05, 4.57000000000235e-06, 9.792000000001522e-06, 1.2082999999996069e-05, 1.3972000000000984e-05, 1.2695000000000067e-05, 4.7910000000039865e-06, 1.1888999999994099e-05, 6.875000000003406e-06, 5.207999999999602e-06, 9.792000000001522e-06, 1.2513999999998193e-05, 3.319000000001626e-06, 1.3541999999998333e-05, 2.77800000000189e-06, 1.536099999999846e-05, 1.20689999999965e-05, 2.709000000003514e-06, 3.5550000000023063e-06, 1.5194999999995629e-05, 3.124999999999656e-06, 6.249999999999312e-06, 1.3375000000002968e-05, 9.555000000001368e-06, 2.30600000000053e-06, 1.2708000000000164e-05, 3.9449999999982555e-06, 1.1457999999998913e-05, 1.5222000000002234e-05, 1.4569999999998473e-05, 1.0915999999999704e-05, 7.417000000002616e-06, 3.3329999999942572e-06, 1.1250000000004312e-05, 1.0625000000000218e-05, 1.2098000000002052e-05, 3.5549999999953674e-06, 1.458299999999857e-05, 3.7500000000037503e-06, 1.4361999999996933e-05], 'time': [0.036854222, 0.036866083, 0.036879847, 0.036882569, 0.036895278, 0.036900264, 0.036902764, 0.036910694, 0.036914014, 0.036920694, 0.036935694, 0.036940264, 0.036950056, 0.036962139, 0.036976111, 0.036988806, 0.036993597, 0.037005486, 0.037012361, 0.037017569, 0.037027361, 0.037039875, 0.037043194, 0.037056736, 0.037059514, 0.037074875, 0.037086944, 0.037089653, 0.037093208, 0.037108403, 0.037111528, 0.037117778, 0.037131153, 0.037140708, 0.037143014, 0.037155722, 0.037159667, 0.037171125, 0.037186347, 0.037200917, 0.037211833, 0.03721925, 0.037222583, 0.037233833, 0.037244458, 0.037256556, 0.037260111, 0.037274694, 0.037278444, 0.037292806], 'sourceeventsource_diff': [0, 1.1861000000001898e-05, 1.3763999999999443e-05, 2.7219999999966715e-06, 1.2708999999999637e-05, 4.9860000000054305e-06, 2.4999999999955613e-06, 7.930000000003212e-06, 3.3200000000011e-06, 6.679999999995023e-06, 1.5000000000001124e-05, 4.57000000000235e-06, 9.792000000001522e-06, 1.2082999999996069e-05, 1.3972000000000984e-05, 1.2695000000000067e-05, 4.7910000000039865e-06, 1.1888999999994099e-05, 6.875000000003406e-06, 5.207999999999602e-06, 9.792000000001522e-06, 1.2513999999998193e-05, 3.319000000001626e-06, 1.3541999999998333e-05, 2.77800000000189e-06, 1.536099999999846e-05, 1.20689999999965e-05, 2.709000000003514e-06, 3.5550000000023063e-06, 1.5194999999995629e-05, 3.124999999999656e-06, 6.249999999999312e-06, 1.3375000000002968e-05, 9.555000000001368e-06, 2.30600000000053e-06, 1.2708000000000164e-05, 3.9449999999982555e-06, 1.1457999999998913e-05, 1.5222000000002234e-05, 1.4569999999998473e-05, 1.0915999999999704e-05, 7.417000000002616e-06, 3.3329999999942572e-06, 1.1250000000004312e-05, 1.0625000000000218e-05, 1.2098000000002052e-05, 3.5549999999953674e-06, 1.458299999999857e-05, 3.7500000000037503e-06, 1.4361999999996933e-05]}</msg>
<status status="PASS" starttime="20201112 09:53:53.113" endtime="20201112 09:53:53.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.103" endtime="20201112 09:53:53.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.130" level="INFO">${RESULT} = [{'time': 0.036866083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.036882569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:53.123" endtime="20201112 09:53:53.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:53.148" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1861000000001898e-05, 2.7219999999966715e-06, 4.9860000000054305e-06, 7.930000000003212e-06, 6.679999999995023e-06, 4.57000000000235e-06, 1.2082999999996069e-05, 1.2695000000000067e-05, 1....</msg>
<status status="PASS" starttime="20201112 09:53:53.132" endtime="20201112 09:53:53.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.158" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:53.156" endtime="20201112 09:53:53.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.163" level="INFO">VALUE: [1.1861000000001898e-05, 2.7219999999966715e-06, 4.9860000000054305e-06, 7.930000000003212e-06, 6.679999999995023e-06, 4.57000000000235e-06, 1.2082999999996069e-05, 1.2695000000000067e-05, 1.1888999999994099e-05, 5.207999999999602e-06, 1.2513999999998193e-05, 1.3541999999998333e-05, 1.536099999999846e-05, 2.709000000003514e-06, 1.5194999999995629e-05, 6.249999999999312e-06, 9.555000000001368e-06, 1.2708000000000164e-05, 1.1457999999998913e-05, 1.4569999999998473e-05, 7.417000000002616e-06, 1.1250000000004312e-05, 1.2098000000002052e-05, 1.458299999999857e-05, 1.4361999999996933e-05]</msg>
<status status="PASS" starttime="20201112 09:53:53.161" endtime="20201112 09:53:53.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.150" endtime="20201112 09:53:53.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.173" endtime="20201112 09:53:53.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.181" endtime="20201112 09:53:53.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.176" endtime="20201112 09:53:53.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.168" endtime="20201112 09:53:53.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.644" endtime="20201112 09:53:53.206"></status>
</kw>
<msg timestamp="20201112 09:53:53.207" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.226" endtime="20201112 09:53:53.239"></status>
</kw>
<msg timestamp="20201112 09:53:53.240" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.223" endtime="20201112 09:53:53.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.246" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.242" endtime="20201112 09:53:53.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.248" endtime="20201112 09:53:53.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.216" endtime="20201112 09:53:53.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.211" endtime="20201112 09:53:53.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.272" endtime="20201112 09:53:53.582"></status>
</kw>
<msg timestamp="20201112 09:53:53.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036138931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036150194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.269" endtime="20201112 09:53:53.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036138931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036150194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.589" endtime="20201112 09:53:53.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.601" endtime="20201112 09:53:53.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.262" endtime="20201112 09:53:53.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.257" endtime="20201112 09:53:53.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.618" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:53.616" endtime="20201112 09:53:53.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.629" level="INFO">VALUE: [{'time': 0.036138931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036150194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.126299999999747e-05, 'source_diff': 1.126299999999747e-05}, {'time': 0.036158097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.036166847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.036177069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.036189778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.036195819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.036208319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000005562e-05, 'source_diff': 1.2500000000005562e-05}, {'time': 0.036210611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.291999999994021e-06, 'source_diff': 2.291999999994021e-06}, {'time': 0.036225819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.036230625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.80600000000303e-06, 'source_diff': 4.80600000000303e-06}, {'time': 0.036238542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.036252292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.036260625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.036265819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.036278333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000005132e-05, 'source_diff': 1.2514000000005132e-05}, {'time': 0.036283333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.036294597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.036298319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7220000000046105e-06, 'source_diff': 3.7220000000046105e-06}, {'time': 0.036309792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1472999999997957e-05, 'source_diff': 1.1472999999997957e-05}, {'time': 0.036321667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.036332514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.036341458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.943999999996843e-06, 'source_diff': 8.943999999996843e-06}, {'time': 0.036353347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.036366681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3333999999996793e-05, 'source_diff': 1.3333999999996793e-05}, {'time': 0.03638125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.036390625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000005906e-06, 'source_diff': 9.375000000005906e-06}, {'time': 0.036405014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.036412083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.036422292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0209000000004076e-05, 'source_diff': 1.0209000000004076e-05}, {'time': 0.036429167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.036443403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4236000000000804e-05, 'source_diff': 1.4236000000000804e-05}, {'time': 0.036453153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.036456069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.036458569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.036464611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.036474597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.036489806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.036502097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.036510222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.036520222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.036530639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.036538972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333000000006197e-06, 'source_diff': 8.333000000006197e-06}, {'time': 0.036552972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.036561681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999995637e-06, 'source_diff': 8.708999999995637e-06}, {'time': 0.036566694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.012999999998158e-06, 'source_diff': 5.012999999998158e-06}, {'time': 0.03657275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.05600000000428e-06, 'source_diff': 6.05600000000428e-06}, {'time': 0.036576069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.036591069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999994185e-05, 'source_diff': 1.4999999999994185e-05}, {'time': 0.036598986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:53.621" endtime="20201112 09:53:53.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.609" endtime="20201112 09:53:53.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:53.666" level="INFO">${debug-compressed} = {'diff': [0, 1.126299999999747e-05, 7.903000000003546e-06, 8.750000000001812e-06, 1.0221999999997233e-05, 1.2708999999999637e-05, 6.040999999998298e-06, 1.2500000000005562e-05, 2.291999999994021e-06, ...</msg>
<status status="PASS" starttime="20201112 09:53:53.634" endtime="20201112 09:53:53.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.676" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:53.674" endtime="20201112 09:53:53.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.683" level="INFO">VALUE: {'diff': [0, 1.126299999999747e-05, 7.903000000003546e-06, 8.750000000001812e-06, 1.0221999999997233e-05, 1.2708999999999637e-05, 6.040999999998298e-06, 1.2500000000005562e-05, 2.291999999994021e-06, 1.5208000000002664e-05, 4.80600000000303e-06, 7.916999999996177e-06, 1.3749999999999873e-05, 8.332999999999258e-06, 5.194000000000032e-06, 1.2514000000005132e-05, 4.9999999999980616e-06, 1.1263999999996943e-05, 3.7220000000046105e-06, 1.1472999999997957e-05, 1.1875000000001468e-05, 1.0847000000001328e-05, 8.943999999996843e-06, 1.1889000000001038e-05, 1.3333999999996793e-05, 1.4568999999999e-05, 9.375000000005906e-06, 1.4388999999996599e-05, 7.068999999998438e-06, 1.0209000000004076e-05, 6.874999999996467e-06, 1.4236000000000804e-05, 9.750000000002812e-06, 2.915999999998642e-06, 2.5000000000025002e-06, 6.041999999997771e-06, 9.985999999996553e-06, 1.5209000000002137e-05, 1.229099999999761e-05, 8.125000000004656e-06, 9.999999999996123e-06, 1.0416999999998677e-05, 8.333000000006197e-06, 1.4000000000000123e-05, 8.708999999995637e-06, 5.012999999998158e-06, 6.05600000000428e-06, 3.319000000001626e-06, 1.4999999999994185e-05, 7.917000000003116e-06], 'time': [0.036138931, 0.036150194, 0.036158097, 0.036166847, 0.036177069, 0.036189778, 0.036195819, 0.036208319, 0.036210611, 0.036225819, 0.036230625, 0.036238542, 0.036252292, 0.036260625, 0.036265819, 0.036278333, 0.036283333, 0.036294597, 0.036298319, 0.036309792, 0.036321667, 0.036332514, 0.036341458, 0.036353347, 0.036366681, 0.03638125, 0.036390625, 0.036405014, 0.036412083, 0.036422292, 0.036429167, 0.036443403, 0.036453153, 0.036456069, 0.036458569, 0.036464611, 0.036474597, 0.036489806, 0.036502097, 0.036510222, 0.036520222, 0.036530639, 0.036538972, 0.036552972, 0.036561681, 0.036566694, 0.03657275, 0.036576069, 0.036591069, 0.036598986], 'sourceeventsource_diff': [0, 1.126299999999747e-05, 7.903000000003546e-06, 8.750000000001812e-06, 1.0221999999997233e-05, 1.2708999999999637e-05, 6.040999999998298e-06, 1.2500000000005562e-05, 2.291999999994021e-06, 1.5208000000002664e-05, 4.80600000000303e-06, 7.916999999996177e-06, 1.3749999999999873e-05, 8.332999999999258e-06, 5.194000000000032e-06, 1.2514000000005132e-05, 4.9999999999980616e-06, 1.1263999999996943e-05, 3.7220000000046105e-06, 1.1472999999997957e-05, 1.1875000000001468e-05, 1.0847000000001328e-05, 8.943999999996843e-06, 1.1889000000001038e-05, 1.3333999999996793e-05, 1.4568999999999e-05, 9.375000000005906e-06, 1.4388999999996599e-05, 7.068999999998438e-06, 1.0209000000004076e-05, 6.874999999996467e-06, 1.4236000000000804e-05, 9.750000000002812e-06, 2.915999999998642e-06, 2.5000000000025002e-06, 6.041999999997771e-06, 9.985999999996553e-06, 1.5209000000002137e-05, 1.229099999999761e-05, 8.125000000004656e-06, 9.999999999996123e-06, 1.0416999999998677e-05, 8.333000000006197e-06, 1.4000000000000123e-05, 8.708999999995637e-06, 5.012999999998158e-06, 6.05600000000428e-06, 3.319000000001626e-06, 1.4999999999994185e-05, 7.917000000003116e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:53.678" endtime="20201112 09:53:53.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.668" endtime="20201112 09:53:53.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:53.695" level="INFO">${RESULT} = [{'time': 0.036150194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.126299999999747e-05, 'source_diff': 1.126299999999747e-05}, {'time': 0.036166847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:53.687" endtime="20201112 09:53:53.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:53.713" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.126299999999747e-05, 8.750000000001812e-06, 1.2708999999999637e-05, 1.2500000000005562e-05, 1.5208000000002664e-05, 7.916999999996177e-06, 8.332999999999258e-06, 1.2514000000005132e-05, 1....</msg>
<status status="PASS" starttime="20201112 09:53:53.697" endtime="20201112 09:53:53.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.723" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:53.721" endtime="20201112 09:53:53.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.728" level="INFO">VALUE: [1.126299999999747e-05, 8.750000000001812e-06, 1.2708999999999637e-05, 1.2500000000005562e-05, 1.5208000000002664e-05, 7.916999999996177e-06, 8.332999999999258e-06, 1.2514000000005132e-05, 1.1263999999996943e-05, 1.1472999999997957e-05, 1.0847000000001328e-05, 1.1889000000001038e-05, 1.4568999999999e-05, 1.4388999999996599e-05, 1.0209000000004076e-05, 1.4236000000000804e-05, 2.915999999998642e-06, 6.041999999997771e-06, 1.5209000000002137e-05, 8.125000000004656e-06, 1.0416999999998677e-05, 1.4000000000000123e-05, 5.012999999998158e-06, 3.319000000001626e-06, 7.917000000003116e-06]</msg>
<status status="PASS" starttime="20201112 09:53:53.725" endtime="20201112 09:53:53.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.715" endtime="20201112 09:53:53.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.737" endtime="20201112 09:53:53.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:53.746" endtime="20201112 09:53:53.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.741" endtime="20201112 09:53:53.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.733" endtime="20201112 09:53:53.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.208" endtime="20201112 09:53:53.771"></status>
</kw>
<msg timestamp="20201112 09:53:53.771" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.791" endtime="20201112 09:53:53.804"></status>
</kw>
<msg timestamp="20201112 09:53:53.805" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.788" endtime="20201112 09:53:53.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:53.812" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:53.808" endtime="20201112 09:53:53.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.814" endtime="20201112 09:53:53.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.781" endtime="20201112 09:53:53.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.776" endtime="20201112 09:53:53.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:53.837" endtime="20201112 09:53:54.126"></status>
</kw>
<msg timestamp="20201112 09:53:54.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036366833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036375792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:53.834" endtime="20201112 09:53:54.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036366833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036375792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.129" endtime="20201112 09:53:54.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.135" endtime="20201112 09:53:54.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.827" endtime="20201112 09:53:54.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.822" endtime="20201112 09:53:54.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.144" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:54.143" endtime="20201112 09:53:54.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.148" level="INFO">VALUE: [{'time': 0.036366833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036375792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958999999995887e-06, 'source_diff': 8.958999999995887e-06}, {'time': 0.036381, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036396014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.036402069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0550000000048065e-06, 'source_diff': 6.0550000000048065e-06}, {'time': 0.036414972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2902999999994669e-05, 'source_diff': 1.2902999999994669e-05}, {'time': 0.036429361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.036438139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.036453333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5193999999996155e-05, 'source_diff': 1.5193999999996155e-05}, {'time': 0.036458514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.036467681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.036471431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.036486875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5444000000003344e-05, 'source_diff': 1.5444000000003344e-05}, {'time': 0.036497069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.036501014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.036512278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000003882e-05, 'source_diff': 1.1264000000003882e-05}, {'time': 0.036516431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036528736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.230499999999718e-05, 'source_diff': 1.230499999999718e-05}, {'time': 0.036543931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5195000000002568e-05, 'source_diff': 1.5195000000002568e-05}, {'time': 0.036554583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0651999999999884e-05, 'source_diff': 1.0651999999999884e-05}, {'time': 0.036559153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569999999995411e-06, 'source_diff': 4.569999999995411e-06}, {'time': 0.036573611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4458000000001914e-05, 'source_diff': 1.4458000000001914e-05}, {'time': 0.036584569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.036598736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.036611056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2320000000003162e-05, 'source_diff': 1.2320000000003162e-05}, {'time': 0.036619361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036622903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.036625639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.036633319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999996023e-06, 'source_diff': 7.679999999996023e-06}, {'time': 0.036639986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.03664625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.036661028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.036671889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.036674361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4720000000033604e-06, 'source_diff': 2.4720000000033604e-06}, {'time': 0.036678944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999995507e-06, 'source_diff': 4.582999999995507e-06}, {'time': 0.03668375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.80600000000303e-06, 'source_diff': 4.80600000000303e-06}, {'time': 0.036697111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999996459e-05, 'source_diff': 1.3360999999996459e-05}, {'time': 0.036711306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.036720042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.036723958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.036735417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.036745417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.036758333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2915999999994765e-05, 'source_diff': 1.2915999999994765e-05}, {'time': 0.036762708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.036770847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.036783972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.036788125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036800847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.036810625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.036813556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:54.145" endtime="20201112 09:53:54.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.140" endtime="20201112 09:53:54.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:54.163" level="INFO">${debug-compressed} = {'diff': [0, 8.958999999995887e-06, 5.207999999999602e-06, 1.5014000000000693e-05, 6.0550000000048065e-06, 1.2902999999994669e-05, 1.4389000000003538e-05, 8.778000000000952e-06, 1.5193999999996155e-05...</msg>
<status status="PASS" starttime="20201112 09:53:54.150" endtime="20201112 09:53:54.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.168" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:54.167" endtime="20201112 09:53:54.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.171" level="INFO">VALUE: {'diff': [0, 8.958999999995887e-06, 5.207999999999602e-06, 1.5014000000000693e-05, 6.0550000000048065e-06, 1.2902999999994669e-05, 1.4389000000003538e-05, 8.778000000000952e-06, 1.5193999999996155e-05, 5.180999999999936e-06, 9.167000000004366e-06, 3.7499999999968114e-06, 1.5444000000003344e-05, 1.0193999999998093e-05, 3.9449999999982555e-06, 1.1264000000003882e-05, 4.152999999999796e-06, 1.230499999999718e-05, 1.5195000000002568e-05, 1.0651999999999884e-05, 4.569999999995411e-06, 1.4458000000001914e-05, 1.0957999999998413e-05, 1.4167000000002428e-05, 1.2320000000003162e-05, 8.305000000000118e-06, 3.541999999995271e-06, 2.7360000000031803e-06, 7.679999999996023e-06, 6.667000000001866e-06, 6.2639999999988816e-06, 1.4778000000000013e-05, 1.0861000000000898e-05, 2.4720000000033604e-06, 4.582999999995507e-06, 4.80600000000303e-06, 1.3360999999996459e-05, 1.4195000000001567e-05, 8.736000000002242e-06, 3.915999999999642e-06, 1.1458999999998387e-05, 1.0000000000003062e-05, 1.2915999999994765e-05, 4.375000000000906e-06, 8.139000000004226e-06, 1.3124999999995779e-05, 4.152999999999796e-06, 1.2721999999999734e-05, 9.778000000001952e-06, 2.9309999999976855e-06], 'time': [0.036366833, 0.036375792, 0.036381, 0.036396014, 0.036402069, 0.036414972, 0.036429361, 0.036438139, 0.036453333, 0.036458514, 0.036467681, 0.036471431, 0.036486875, 0.036497069, 0.036501014, 0.036512278, 0.036516431, 0.036528736, 0.036543931, 0.036554583, 0.036559153, 0.036573611, 0.036584569, 0.036598736, 0.036611056, 0.036619361, 0.036622903, 0.036625639, 0.036633319, 0.036639986, 0.03664625, 0.036661028, 0.036671889, 0.036674361, 0.036678944, 0.03668375, 0.036697111, 0.036711306, 0.036720042, 0.036723958, 0.036735417, 0.036745417, 0.036758333, 0.036762708, 0.036770847, 0.036783972, 0.036788125, 0.036800847, 0.036810625, 0.036813556], 'sourceeventsource_diff': [0, 8.958999999995887e-06, 5.207999999999602e-06, 1.5014000000000693e-05, 6.0550000000048065e-06, 1.2902999999994669e-05, 1.4389000000003538e-05, 8.778000000000952e-06, 1.5193999999996155e-05, 5.180999999999936e-06, 9.167000000004366e-06, 3.7499999999968114e-06, 1.5444000000003344e-05, 1.0193999999998093e-05, 3.9449999999982555e-06, 1.1264000000003882e-05, 4.152999999999796e-06, 1.230499999999718e-05, 1.5195000000002568e-05, 1.0651999999999884e-05, 4.569999999995411e-06, 1.4458000000001914e-05, 1.0957999999998413e-05, 1.4167000000002428e-05, 1.2320000000003162e-05, 8.305000000000118e-06, 3.541999999995271e-06, 2.7360000000031803e-06, 7.679999999996023e-06, 6.667000000001866e-06, 6.2639999999988816e-06, 1.4778000000000013e-05, 1.0861000000000898e-05, 2.4720000000033604e-06, 4.582999999995507e-06, 4.80600000000303e-06, 1.3360999999996459e-05, 1.4195000000001567e-05, 8.736000000002242e-06, 3.915999999999642e-06, 1.1458999999998387e-05, 1.0000000000003062e-05, 1.2915999999994765e-05, 4.375000000000906e-06, 8.139000000004226e-06, 1.3124999999995779e-05, 4.152999999999796e-06, 1.2721999999999734e-05, 9.778000000001952e-06, 2.9309999999976855e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:54.169" endtime="20201112 09:53:54.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.164" endtime="20201112 09:53:54.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.176" level="INFO">${RESULT} = [{'time': 0.036375792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958999999995887e-06, 'source_diff': 8.958999999995887e-06}, {'time': 0.036396014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:54.173" endtime="20201112 09:53:54.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:54.185" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.958999999995887e-06, 1.5014000000000693e-05, 1.2902999999994669e-05, 8.778000000000952e-06, 5.180999999999936e-06, 3.7499999999968114e-06, 1.0193999999998093e-05, 1.1264000000003882e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:53:54.177" endtime="20201112 09:53:54.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.190" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:54.189" endtime="20201112 09:53:54.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.192" level="INFO">VALUE: [8.958999999995887e-06, 1.5014000000000693e-05, 1.2902999999994669e-05, 8.778000000000952e-06, 5.180999999999936e-06, 3.7499999999968114e-06, 1.0193999999998093e-05, 1.1264000000003882e-05, 1.230499999999718e-05, 1.0651999999999884e-05, 1.4458000000001914e-05, 1.4167000000002428e-05, 8.305000000000118e-06, 2.7360000000031803e-06, 6.667000000001866e-06, 1.4778000000000013e-05, 2.4720000000033604e-06, 4.80600000000303e-06, 1.4195000000001567e-05, 3.915999999999642e-06, 1.0000000000003062e-05, 4.375000000000906e-06, 1.3124999999995779e-05, 1.2721999999999734e-05, 2.9309999999976855e-06]</msg>
<status status="PASS" starttime="20201112 09:53:54.191" endtime="20201112 09:53:54.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.186" endtime="20201112 09:53:54.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.196" endtime="20201112 09:53:54.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.201" endtime="20201112 09:53:54.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.198" endtime="20201112 09:53:54.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.194" endtime="20201112 09:53:54.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:53.773" endtime="20201112 09:53:54.222"></status>
</kw>
<msg timestamp="20201112 09:53:54.222" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.231" endtime="20201112 09:53:54.242"></status>
</kw>
<msg timestamp="20201112 09:53:54.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.230" endtime="20201112 09:53:54.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.246" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.244" endtime="20201112 09:53:54.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.247" endtime="20201112 09:53:54.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.226" endtime="20201112 09:53:54.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.224" endtime="20201112 09:53:54.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.259" endtime="20201112 09:53:54.542"></status>
</kw>
<msg timestamp="20201112 09:53:54.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020800569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.257" endtime="20201112 09:53:54.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020800569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.549" endtime="20201112 09:53:54.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.561" endtime="20201112 09:53:54.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.253" endtime="20201112 09:53:54.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.251" endtime="20201112 09:53:54.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.578" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:54.575" endtime="20201112 09:53:54.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.586" level="INFO">VALUE: [{'time': 0.020800569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.020814111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.020825139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.020833278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.020847639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.020858264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.020862847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.020865361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.020878069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.020881639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.020894097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2457999999999914e-05, 'source_diff': 1.2457999999999914e-05}, {'time': 0.020905347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.020917653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.02092475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.020931625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.020937861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.020948083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.020957444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.020970819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3375000000002968e-05, 'source_diff': 1.3375000000002968e-05}, {'time': 0.020975361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.020986889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.020992042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.020998917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.021004736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.021008111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.021020778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2667000000000928e-05, 'source_diff': 1.2667000000000928e-05}, {'time': 0.021029528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.021037889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.021050583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.021055806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.021069347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.354099999999886e-05, 'source_diff': 1.354099999999886e-05}, {'time': 0.021078528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.021084139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.021094542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0403000000002577e-05, 'source_diff': 1.0403000000002577e-05}, {'time': 0.021108083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.354099999999886e-05, 'source_diff': 1.354099999999886e-05}, {'time': 0.021123306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5223000000001707e-05, 'source_diff': 1.5223000000001707e-05}, {'time': 0.021129556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.021139958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.021143306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.021147667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.021152514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.021160417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.021173944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.352699999999929e-05, 'source_diff': 1.352699999999929e-05}, {'time': 0.021180597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6529999999988265e-06, 'source_diff': 6.6529999999988265e-06}, {'time': 0.021194361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.021205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.021208514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.30600000000153e-06, 'source_diff': 3.30600000000153e-06}, {'time': 0.021217681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.021227681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}]</msg>
<status status="PASS" starttime="20201112 09:53:54.580" endtime="20201112 09:53:54.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.569" endtime="20201112 09:53:54.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:54.621" level="INFO">${debug-compressed} = {'diff': [0, 5.624999999998687e-06, 7.916999999999647e-06, 1.1027999999999732e-05, 8.139000000000757e-06, 1.4361000000000929e-05, 1.0625000000000218e-05, 4.582999999998977e-06, 2.5139999999986007e-06,...</msg>
<status status="PASS" starttime="20201112 09:53:54.591" endtime="20201112 09:53:54.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.630" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:54.628" endtime="20201112 09:53:54.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.637" level="INFO">VALUE: {'diff': [0, 5.624999999998687e-06, 7.916999999999647e-06, 1.1027999999999732e-05, 8.139000000000757e-06, 1.4361000000000929e-05, 1.0625000000000218e-05, 4.582999999998977e-06, 2.5139999999986007e-06, 1.2708000000000164e-05, 3.57000000000135e-06, 1.2457999999999914e-05, 1.1250000000000843e-05, 1.2306000000000122e-05, 7.0969999999975775e-06, 6.874999999999937e-06, 6.235999999999742e-06, 1.0222000000000703e-05, 9.360999999999398e-06, 1.3375000000002968e-05, 4.541999999999741e-06, 1.1528000000000233e-05, 5.152999999997326e-06, 6.874999999999937e-06, 5.819000000000657e-06, 3.374999999999906e-06, 1.2667000000000928e-05, 8.749999999998342e-06, 8.361000000001867e-06, 1.2694000000000594e-05, 5.222999999998645e-06, 1.354099999999886e-05, 9.181000000000467e-06, 5.610999999999117e-06, 1.0403000000002577e-05, 1.354099999999886e-05, 1.5223000000001707e-05, 6.249999999999312e-06, 1.0401999999999634e-05, 3.3480000000002397e-06, 4.360999999997867e-06, 4.847000000002266e-06, 7.903000000000077e-06, 1.352699999999929e-05, 6.6529999999988265e-06, 1.3763999999999443e-05, 1.0847000000001328e-05, 3.30600000000153e-06, 9.166999999997427e-06, 1.0000000000003062e-05], 'time': [0.020800569, 0.020806194, 0.020814111, 0.020825139, 0.020833278, 0.020847639, 0.020858264, 0.020862847, 0.020865361, 0.020878069, 0.020881639, 0.020894097, 0.020905347, 0.020917653, 0.02092475, 0.020931625, 0.020937861, 0.020948083, 0.020957444, 0.020970819, 0.020975361, 0.020986889, 0.020992042, 0.020998917, 0.021004736, 0.021008111, 0.021020778, 0.021029528, 0.021037889, 0.021050583, 0.021055806, 0.021069347, 0.021078528, 0.021084139, 0.021094542, 0.021108083, 0.021123306, 0.021129556, 0.021139958, 0.021143306, 0.021147667, 0.021152514, 0.021160417, 0.021173944, 0.021180597, 0.021194361, 0.021205208, 0.021208514, 0.021217681, 0.021227681], 'sourceeventsource_diff': [0, 5.624999999998687e-06, 7.916999999999647e-06, 1.1027999999999732e-05, 8.139000000000757e-06, 1.4361000000000929e-05, 1.0625000000000218e-05, 4.582999999998977e-06, 2.5139999999986007e-06, 1.2708000000000164e-05, 3.57000000000135e-06, 1.2457999999999914e-05, 1.1250000000000843e-05, 1.2306000000000122e-05, 7.0969999999975775e-06, 6.874999999999937e-06, 6.235999999999742e-06, 1.0222000000000703e-05, 9.360999999999398e-06, 1.3375000000002968e-05, 4.541999999999741e-06, 1.1528000000000233e-05, 5.152999999997326e-06, 6.874999999999937e-06, 5.819000000000657e-06, 3.374999999999906e-06, 1.2667000000000928e-05, 8.749999999998342e-06, 8.361000000001867e-06, 1.2694000000000594e-05, 5.222999999998645e-06, 1.354099999999886e-05, 9.181000000000467e-06, 5.610999999999117e-06, 1.0403000000002577e-05, 1.354099999999886e-05, 1.5223000000001707e-05, 6.249999999999312e-06, 1.0401999999999634e-05, 3.3480000000002397e-06, 4.360999999997867e-06, 4.847000000002266e-06, 7.903000000000077e-06, 1.352699999999929e-05, 6.6529999999988265e-06, 1.3763999999999443e-05, 1.0847000000001328e-05, 3.30600000000153e-06, 9.166999999997427e-06, 1.0000000000003062e-05]}</msg>
<status status="PASS" starttime="20201112 09:53:54.632" endtime="20201112 09:53:54.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.623" endtime="20201112 09:53:54.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:54.649" level="INFO">${RESULT} = [{'time': 0.020806194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.020825139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:54.641" endtime="20201112 09:53:54.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:54.667" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.624999999998687e-06, 1.1027999999999732e-05, 1.4361000000000929e-05, 4.582999999998977e-06, 1.2708000000000164e-05, 1.2457999999999914e-05, 1.2306000000000122e-05, 6.874999999999937e-06, 1...</msg>
<status status="PASS" starttime="20201112 09:53:54.651" endtime="20201112 09:53:54.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.677" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:54.675" endtime="20201112 09:53:54.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.682" level="INFO">VALUE: [5.624999999998687e-06, 1.1027999999999732e-05, 1.4361000000000929e-05, 4.582999999998977e-06, 1.2708000000000164e-05, 1.2457999999999914e-05, 1.2306000000000122e-05, 6.874999999999937e-06, 1.0222000000000703e-05, 1.3375000000002968e-05, 1.1528000000000233e-05, 6.874999999999937e-06, 3.374999999999906e-06, 8.749999999998342e-06, 1.2694000000000594e-05, 1.354099999999886e-05, 5.610999999999117e-06, 1.354099999999886e-05, 6.249999999999312e-06, 3.3480000000002397e-06, 4.847000000002266e-06, 1.352699999999929e-05, 1.3763999999999443e-05, 3.30600000000153e-06, 1.0000000000003062e-05]</msg>
<status status="PASS" starttime="20201112 09:53:54.679" endtime="20201112 09:53:54.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.669" endtime="20201112 09:53:54.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.692" endtime="20201112 09:53:54.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:54.700" endtime="20201112 09:53:54.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.695" endtime="20201112 09:53:54.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.687" endtime="20201112 09:53:54.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.222" endtime="20201112 09:53:54.725"></status>
</kw>
<msg timestamp="20201112 09:53:54.726" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.745" endtime="20201112 09:53:54.758"></status>
</kw>
<msg timestamp="20201112 09:53:54.759" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.742" endtime="20201112 09:53:54.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:54.765" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:54.761" endtime="20201112 09:53:54.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.768" endtime="20201112 09:53:54.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.735" endtime="20201112 09:53:54.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.730" endtime="20201112 09:53:54.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:54.793" endtime="20201112 09:53:55.104"></status>
</kw>
<msg timestamp="20201112 09:53:55.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036210667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036214625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:54.789" endtime="20201112 09:53:55.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036210667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036214625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.110" endtime="20201112 09:53:55.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.123" endtime="20201112 09:53:55.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.781" endtime="20201112 09:53:55.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.776" endtime="20201112 09:53:55.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.139" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:55.137" endtime="20201112 09:53:55.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.148" level="INFO">VALUE: [{'time': 0.036210667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036214625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.036220667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.036230667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.036234417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.036244847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0429999999998774e-05, 'source_diff': 1.0429999999998774e-05}, {'time': 0.036249208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.036252139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9310000000046244e-06, 'source_diff': 2.9310000000046244e-06}, {'time': 0.036256292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036265056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.036275875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.036279, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.036287347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.036298833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1486000000004992e-05, 'source_diff': 1.1486000000004992e-05}, {'time': 0.03631025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1416999999999677e-05, 'source_diff': 1.1416999999999677e-05}, {'time': 0.036320264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999995693e-05, 'source_diff': 1.0013999999995693e-05}, {'time': 0.036327986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.036340514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.036354444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3930000000002274e-05, 'source_diff': 1.3930000000002274e-05}, {'time': 0.036360472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.036366528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.05600000000428e-06, 'source_diff': 6.05600000000428e-06}, {'time': 0.036380056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.036394431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.036408861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4430000000002774e-05, 'source_diff': 1.4430000000002774e-05}, {'time': 0.036424028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5166999999996489e-05, 'source_diff': 1.5166999999996489e-05}, {'time': 0.036431944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916000000003642e-06, 'source_diff': 7.916000000003642e-06}, {'time': 0.036435903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.036444444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.03645675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000003592e-05, 'source_diff': 1.2306000000003592e-05}, {'time': 0.036459444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.036471528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2084000000002482e-05, 'source_diff': 1.2084000000002482e-05}, {'time': 0.036479653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.036491736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999996069e-05, 'source_diff': 1.2082999999996069e-05}, {'time': 0.036506528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4792000000006522e-05, 'source_diff': 1.4792000000006522e-05}, {'time': 0.036512194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999994453e-06, 'source_diff': 5.665999999994453e-06}, {'time': 0.036517361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036524861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.036539236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000003968e-05, 'source_diff': 1.4375000000003968e-05}, {'time': 0.036548875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.036554861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.036568819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.036571611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.791999999994521e-06, 'source_diff': 2.791999999994521e-06}, {'time': 0.036578, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.03658675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.036589667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.036593417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7500000000037503e-06, 'source_diff': 3.7500000000037503e-06}, {'time': 0.036602792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.036613014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.036616569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.036621958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:55.142" endtime="20201112 09:53:55.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.131" endtime="20201112 09:53:55.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:55.184" level="INFO">${debug-compressed} = {'diff': [0, 3.957999999998352e-06, 6.041999999997771e-06, 1.0000000000003062e-05, 3.7499999999968114e-06, 1.0429999999998774e-05, 4.361000000001336e-06, 2.9310000000046244e-06, 4.152999999999796e-06,...</msg>
<status status="PASS" starttime="20201112 09:53:55.153" endtime="20201112 09:53:55.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.193" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:55.191" endtime="20201112 09:53:55.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.200" level="INFO">VALUE: {'diff': [0, 3.957999999998352e-06, 6.041999999997771e-06, 1.0000000000003062e-05, 3.7499999999968114e-06, 1.0429999999998774e-05, 4.361000000001336e-06, 2.9310000000046244e-06, 4.152999999999796e-06, 8.763999999994443e-06, 1.0819000000002188e-05, 3.124999999999656e-06, 8.346999999998828e-06, 1.1486000000004992e-05, 1.1416999999999677e-05, 1.0013999999995693e-05, 7.722000000001672e-06, 1.2527999999997763e-05, 1.3930000000002274e-05, 6.0279999999982015e-06, 6.05600000000428e-06, 1.3527999999998763e-05, 1.4374999999997029e-05, 1.4430000000002774e-05, 1.5166999999996489e-05, 7.916000000003642e-06, 3.958999999997825e-06, 8.541000000000798e-06, 1.2306000000003592e-05, 2.6939999999975317e-06, 1.2084000000002482e-05, 8.124999999997717e-06, 1.2082999999996069e-05, 1.4792000000006522e-05, 5.665999999994453e-06, 5.167000000000366e-06, 7.500000000000562e-06, 1.4375000000003968e-05, 9.638999999998787e-06, 5.985999999999492e-06, 1.3958000000001414e-05, 2.791999999994521e-06, 6.389000000002476e-06, 8.750000000001812e-06, 2.9169999999981155e-06, 3.7500000000037503e-06, 9.374999999998967e-06, 1.0221999999997233e-05, 3.5550000000023063e-06, 5.389000000001476e-06], 'time': [0.036210667, 0.036214625, 0.036220667, 0.036230667, 0.036234417, 0.036244847, 0.036249208, 0.036252139, 0.036256292, 0.036265056, 0.036275875, 0.036279, 0.036287347, 0.036298833, 0.03631025, 0.036320264, 0.036327986, 0.036340514, 0.036354444, 0.036360472, 0.036366528, 0.036380056, 0.036394431, 0.036408861, 0.036424028, 0.036431944, 0.036435903, 0.036444444, 0.03645675, 0.036459444, 0.036471528, 0.036479653, 0.036491736, 0.036506528, 0.036512194, 0.036517361, 0.036524861, 0.036539236, 0.036548875, 0.036554861, 0.036568819, 0.036571611, 0.036578, 0.03658675, 0.036589667, 0.036593417, 0.036602792, 0.036613014, 0.036616569, 0.036621958], 'sourceeventsource_diff': [0, 3.957999999998352e-06, 6.041999999997771e-06, 1.0000000000003062e-05, 3.7499999999968114e-06, 1.0429999999998774e-05, 4.361000000001336e-06, 2.9310000000046244e-06, 4.152999999999796e-06, 8.763999999994443e-06, 1.0819000000002188e-05, 3.124999999999656e-06, 8.346999999998828e-06, 1.1486000000004992e-05, 1.1416999999999677e-05, 1.0013999999995693e-05, 7.722000000001672e-06, 1.2527999999997763e-05, 1.3930000000002274e-05, 6.0279999999982015e-06, 6.05600000000428e-06, 1.3527999999998763e-05, 1.4374999999997029e-05, 1.4430000000002774e-05, 1.5166999999996489e-05, 7.916000000003642e-06, 3.958999999997825e-06, 8.541000000000798e-06, 1.2306000000003592e-05, 2.6939999999975317e-06, 1.2084000000002482e-05, 8.124999999997717e-06, 1.2082999999996069e-05, 1.4792000000006522e-05, 5.665999999994453e-06, 5.167000000000366e-06, 7.500000000000562e-06, 1.4375000000003968e-05, 9.638999999998787e-06, 5.985999999999492e-06, 1.3958000000001414e-05, 2.791999999994521e-06, 6.389000000002476e-06, 8.750000000001812e-06, 2.9169999999981155e-06, 3.7500000000037503e-06, 9.374999999998967e-06, 1.0221999999997233e-05, 3.5550000000023063e-06, 5.389000000001476e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:55.196" endtime="20201112 09:53:55.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.186" endtime="20201112 09:53:55.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.212" level="INFO">${RESULT} = [{'time': 0.036214625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.036230667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:55.205" endtime="20201112 09:53:55.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:55.230" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.957999999998352e-06, 1.0000000000003062e-05, 1.0429999999998774e-05, 2.9310000000046244e-06, 8.763999999994443e-06, 3.124999999999656e-06, 1.1486000000004992e-05, 1.0013999999995693e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:53:55.214" endtime="20201112 09:53:55.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.240" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:55.238" endtime="20201112 09:53:55.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.245" level="INFO">VALUE: [3.957999999998352e-06, 1.0000000000003062e-05, 1.0429999999998774e-05, 2.9310000000046244e-06, 8.763999999994443e-06, 3.124999999999656e-06, 1.1486000000004992e-05, 1.0013999999995693e-05, 1.2527999999997763e-05, 6.0279999999982015e-06, 1.3527999999998763e-05, 1.4430000000002774e-05, 7.916000000003642e-06, 8.541000000000798e-06, 2.6939999999975317e-06, 8.124999999997717e-06, 1.4792000000006522e-05, 5.167000000000366e-06, 1.4375000000003968e-05, 5.985999999999492e-06, 2.791999999994521e-06, 8.750000000001812e-06, 3.7500000000037503e-06, 1.0221999999997233e-05, 5.389000000001476e-06]</msg>
<status status="PASS" starttime="20201112 09:53:55.243" endtime="20201112 09:53:55.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.232" endtime="20201112 09:53:55.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.255" endtime="20201112 09:53:55.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.263" endtime="20201112 09:53:55.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.259" endtime="20201112 09:53:55.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.250" endtime="20201112 09:53:55.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:54.727" endtime="20201112 09:53:55.289"></status>
</kw>
<msg timestamp="20201112 09:53:55.289" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.309" endtime="20201112 09:53:55.322"></status>
</kw>
<msg timestamp="20201112 09:53:55.324" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.306" endtime="20201112 09:53:55.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.330" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.326" endtime="20201112 09:53:55.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.332" endtime="20201112 09:53:55.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.298" endtime="20201112 09:53:55.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.294" endtime="20201112 09:53:55.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.357" endtime="20201112 09:53:55.675"></status>
</kw>
<msg timestamp="20201112 09:53:55.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036220736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036236153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.353" endtime="20201112 09:53:55.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036220736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036236153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.682" endtime="20201112 09:53:55.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.695" endtime="20201112 09:53:55.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.345" endtime="20201112 09:53:55.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.340" endtime="20201112 09:53:55.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.711" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:55.709" endtime="20201112 09:53:55.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.719" level="INFO">VALUE: [{'time': 0.036220736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036236153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.541699999999674e-05, 'source_diff': 1.541699999999674e-05}, {'time': 0.036244069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.036250319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2500000000062506e-06, 'source_diff': 6.2500000000062506e-06}, {'time': 0.036262014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.036264694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.036276569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.036286153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.036297625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.036307417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.036313667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.036316375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.036321389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.01400000000457e-06, 'source_diff': 5.01400000000457e-06}, {'time': 0.036328458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.036337208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.036347014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805999999994153e-06, 'source_diff': 9.805999999994153e-06}, {'time': 0.036350542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.036362667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2125000000001718e-05, 'source_diff': 1.2125000000001718e-05}, {'time': 0.036374931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.036380333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.036395569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5236000000001804e-05, 'source_diff': 1.5236000000001804e-05}, {'time': 0.036409736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4166999999995489e-05, 'source_diff': 1.4166999999995489e-05}, {'time': 0.036419917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.036433278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3360999999996459e-05, 'source_diff': 1.3360999999996459e-05}, {'time': 0.036443056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.036453889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.036468264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.036476819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.036486389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036490611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.036499097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.036508278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.036520569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291000000004548e-05, 'source_diff': 1.2291000000004548e-05}, {'time': 0.036523264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.036525556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.036535139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.036542222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.036549722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.036557444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.036569111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.036577875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.036589333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.036598069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.036607042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.973000000002396e-06, 'source_diff': 8.973000000002396e-06}, {'time': 0.036616889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.036619569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.036628486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.036643278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.036652653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.036665153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}]</msg>
<status status="PASS" starttime="20201112 09:53:55.713" endtime="20201112 09:53:55.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.703" endtime="20201112 09:53:55.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:55.754" level="INFO">${debug-compressed} = {'diff': [0, 1.541699999999674e-05, 7.915999999996703e-06, 6.2500000000062506e-06, 1.1694999999999067e-05, 2.679999999997962e-06, 1.1875000000001468e-05, 9.583999999999981e-06, 1.1471999999998483e-05,...</msg>
<status status="PASS" starttime="20201112 09:53:55.724" endtime="20201112 09:53:55.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.763" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:55.761" endtime="20201112 09:53:55.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.770" level="INFO">VALUE: {'diff': [0, 1.541699999999674e-05, 7.915999999996703e-06, 6.2500000000062506e-06, 1.1694999999999067e-05, 2.679999999997962e-06, 1.1875000000001468e-05, 9.583999999999981e-06, 1.1471999999998483e-05, 9.792000000001522e-06, 6.249999999999312e-06, 2.7079999999971016e-06, 5.01400000000457e-06, 7.068999999998438e-06, 8.750000000001812e-06, 9.805999999994153e-06, 3.52800000000264e-06, 1.2125000000001718e-05, 1.2263999999997943e-05, 5.402000000001572e-06, 1.5236000000001804e-05, 1.4166999999995489e-05, 1.0181000000004936e-05, 1.3360999999996459e-05, 9.778000000001952e-06, 1.0833000000001758e-05, 1.4374999999997029e-05, 8.555000000000368e-06, 9.570000000000412e-06, 4.221999999998172e-06, 8.486000000001992e-06, 9.180999999996997e-06, 1.2291000000004548e-05, 2.6949999999970053e-06, 2.29200000000096e-06, 9.583000000000508e-06, 7.0829999999980076e-06, 7.500000000000562e-06, 7.722000000001672e-06, 1.1666999999999927e-05, 8.764000000001382e-06, 1.1457999999998913e-05, 8.735999999995303e-06, 8.973000000002396e-06, 9.847000000000328e-06, 2.679999999997962e-06, 8.917000000004116e-06, 1.4791999999999583e-05, 9.374999999998967e-06, 1.2499999999998623e-05], 'time': [0.036220736, 0.036236153, 0.036244069, 0.036250319, 0.036262014, 0.036264694, 0.036276569, 0.036286153, 0.036297625, 0.036307417, 0.036313667, 0.036316375, 0.036321389, 0.036328458, 0.036337208, 0.036347014, 0.036350542, 0.036362667, 0.036374931, 0.036380333, 0.036395569, 0.036409736, 0.036419917, 0.036433278, 0.036443056, 0.036453889, 0.036468264, 0.036476819, 0.036486389, 0.036490611, 0.036499097, 0.036508278, 0.036520569, 0.036523264, 0.036525556, 0.036535139, 0.036542222, 0.036549722, 0.036557444, 0.036569111, 0.036577875, 0.036589333, 0.036598069, 0.036607042, 0.036616889, 0.036619569, 0.036628486, 0.036643278, 0.036652653, 0.036665153], 'sourceeventsource_diff': [0, 1.541699999999674e-05, 7.915999999996703e-06, 6.2500000000062506e-06, 1.1694999999999067e-05, 2.679999999997962e-06, 1.1875000000001468e-05, 9.583999999999981e-06, 1.1471999999998483e-05, 9.792000000001522e-06, 6.249999999999312e-06, 2.7079999999971016e-06, 5.01400000000457e-06, 7.068999999998438e-06, 8.750000000001812e-06, 9.805999999994153e-06, 3.52800000000264e-06, 1.2125000000001718e-05, 1.2263999999997943e-05, 5.402000000001572e-06, 1.5236000000001804e-05, 1.4166999999995489e-05, 1.0181000000004936e-05, 1.3360999999996459e-05, 9.778000000001952e-06, 1.0833000000001758e-05, 1.4374999999997029e-05, 8.555000000000368e-06, 9.570000000000412e-06, 4.221999999998172e-06, 8.486000000001992e-06, 9.180999999996997e-06, 1.2291000000004548e-05, 2.6949999999970053e-06, 2.29200000000096e-06, 9.583000000000508e-06, 7.0829999999980076e-06, 7.500000000000562e-06, 7.722000000001672e-06, 1.1666999999999927e-05, 8.764000000001382e-06, 1.1457999999998913e-05, 8.735999999995303e-06, 8.973000000002396e-06, 9.847000000000328e-06, 2.679999999997962e-06, 8.917000000004116e-06, 1.4791999999999583e-05, 9.374999999998967e-06, 1.2499999999998623e-05]}</msg>
<status status="PASS" starttime="20201112 09:53:55.765" endtime="20201112 09:53:55.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.755" endtime="20201112 09:53:55.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:55.782" level="INFO">${RESULT} = [{'time': 0.036236153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.541699999999674e-05, 'source_diff': 1.541699999999674e-05}, {'time': 0.036250319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:55.775" endtime="20201112 09:53:55.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:55.800" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.541699999999674e-05, 6.2500000000062506e-06, 2.679999999997962e-06, 9.583999999999981e-06, 9.792000000001522e-06, 2.7079999999971016e-06, 7.068999999998438e-06, 9.805999999994153e-06, 1.21...</msg>
<status status="PASS" starttime="20201112 09:53:55.784" endtime="20201112 09:53:55.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.810" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:55.808" endtime="20201112 09:53:55.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.815" level="INFO">VALUE: [1.541699999999674e-05, 6.2500000000062506e-06, 2.679999999997962e-06, 9.583999999999981e-06, 9.792000000001522e-06, 2.7079999999971016e-06, 7.068999999998438e-06, 9.805999999994153e-06, 1.2125000000001718e-05, 5.402000000001572e-06, 1.4166999999995489e-05, 1.3360999999996459e-05, 1.0833000000001758e-05, 8.555000000000368e-06, 4.221999999998172e-06, 9.180999999996997e-06, 2.6949999999970053e-06, 9.583000000000508e-06, 7.500000000000562e-06, 1.1666999999999927e-05, 1.1457999999998913e-05, 8.973000000002396e-06, 2.679999999997962e-06, 1.4791999999999583e-05, 1.2499999999998623e-05]</msg>
<status status="PASS" starttime="20201112 09:53:55.812" endtime="20201112 09:53:55.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.802" endtime="20201112 09:53:55.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.824" endtime="20201112 09:53:55.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:55.833" endtime="20201112 09:53:55.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.828" endtime="20201112 09:53:55.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.820" endtime="20201112 09:53:55.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.290" endtime="20201112 09:53:55.858"></status>
</kw>
<msg timestamp="20201112 09:53:55.859" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.879" endtime="20201112 09:53:55.892"></status>
</kw>
<msg timestamp="20201112 09:53:55.893" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.875" endtime="20201112 09:53:55.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:55.899" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:55.895" endtime="20201112 09:53:55.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.901" endtime="20201112 09:53:55.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.868" endtime="20201112 09:53:55.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.863" endtime="20201112 09:53:55.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:55.926" endtime="20201112 09:53:56.238"></status>
</kw>
<msg timestamp="20201112 09:53:56.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036918125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036925431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:55.923" endtime="20201112 09:53:56.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036918125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036925431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:56.244" endtime="20201112 09:53:56.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.257" endtime="20201112 09:53:56.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.914" endtime="20201112 09:53:56.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.909" endtime="20201112 09:53:56.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.274" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:56.272" endtime="20201112 09:53:56.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.282" level="INFO">VALUE: [{'time': 0.036918125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036925431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.036933958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.036949444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5485999999995115e-05, 'source_diff': 1.5485999999995115e-05}, {'time': 0.036956472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.036963764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.29200000000596e-06, 'source_diff': 7.29200000000596e-06}, {'time': 0.036966681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.036977097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.036992111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.037003569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.037012097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.037023986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.037030431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.037045639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5207999999995725e-05, 'source_diff': 1.5207999999995725e-05}, {'time': 0.037050431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.037053986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5549999999953674e-06, 'source_diff': 3.5549999999953674e-06}, {'time': 0.037057986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000004e-06, 'source_diff': 4.000000000004e-06}, {'time': 0.037062514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.037067944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.037074194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037082111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.0370965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.037099403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9030000000054845e-06, 'source_diff': 2.9030000000054845e-06}, {'time': 0.037107111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.707999999995163e-06, 'source_diff': 7.707999999995163e-06}, {'time': 0.037121069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.037132528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1458999999998387e-05, 'source_diff': 1.1458999999998387e-05}, {'time': 0.037144819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291000000004548e-05, 'source_diff': 1.2291000000004548e-05}, {'time': 0.037151278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.037154194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.037168986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4791999999999583e-05, 'source_diff': 1.4791999999999583e-05}, {'time': 0.037183361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.037193375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.03719925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.037203583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999995257e-06, 'source_diff': 4.332999999995257e-06}, {'time': 0.03720775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.03721775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.037231708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.037235667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.037248181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.037262556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000003968e-05, 'source_diff': 1.4375000000003968e-05}, {'time': 0.037275681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.037285667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.037297347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.037302556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.037311514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.037326292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.037333833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.037344639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.037347778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.037362347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}]</msg>
<status status="PASS" starttime="20201112 09:53:56.276" endtime="20201112 09:53:56.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.266" endtime="20201112 09:53:56.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:56.317" level="INFO">${debug-compressed} = {'diff': [0, 7.305999999998591e-06, 8.527000000001228e-06, 1.5485999999995115e-05, 7.0279999999992016e-06, 7.29200000000596e-06, 2.9169999999981155e-06, 1.0415999999999204e-05, 1.5014000000000693e-05,...</msg>
<status status="PASS" starttime="20201112 09:53:56.288" endtime="20201112 09:53:56.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.327" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:56.324" endtime="20201112 09:53:56.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.334" level="INFO">VALUE: {'diff': [0, 7.305999999998591e-06, 8.527000000001228e-06, 1.5485999999995115e-05, 7.0279999999992016e-06, 7.29200000000596e-06, 2.9169999999981155e-06, 1.0415999999999204e-05, 1.5014000000000693e-05, 1.1457999999998913e-05, 8.528000000000702e-06, 1.1889000000001038e-05, 6.445000000000756e-06, 1.5207999999995725e-05, 4.79200000000346e-06, 3.5549999999953674e-06, 4.000000000004e-06, 4.527999999996701e-06, 5.430000000000712e-06, 6.249999999999312e-06, 7.917000000003116e-06, 1.4388999999996599e-05, 2.9030000000054845e-06, 7.707999999995163e-06, 1.3958000000001414e-05, 1.1458999999998387e-05, 1.2291000000004548e-05, 6.459000000000326e-06, 2.915999999998642e-06, 1.4791999999999583e-05, 1.4374999999997029e-05, 1.0014000000002632e-05, 5.875000000002406e-06, 4.332999999995257e-06, 4.166999999999366e-06, 1.0000000000003062e-05, 1.3958000000001414e-05, 3.958999999997825e-06, 1.2513999999998193e-05, 1.4375000000003968e-05, 1.3124999999995779e-05, 9.986000000003492e-06, 1.1680000000000024e-05, 5.2089999999990755e-06, 8.957999999996413e-06, 1.4778000000000013e-05, 7.540999999999798e-06, 1.0806000000002092e-05, 3.1389999999992257e-06, 1.4568999999999e-05], 'time': [0.036918125, 0.036925431, 0.036933958, 0.036949444, 0.036956472, 0.036963764, 0.036966681, 0.036977097, 0.036992111, 0.037003569, 0.037012097, 0.037023986, 0.037030431, 0.037045639, 0.037050431, 0.037053986, 0.037057986, 0.037062514, 0.037067944, 0.037074194, 0.037082111, 0.0370965, 0.037099403, 0.037107111, 0.037121069, 0.037132528, 0.037144819, 0.037151278, 0.037154194, 0.037168986, 0.037183361, 0.037193375, 0.03719925, 0.037203583, 0.03720775, 0.03721775, 0.037231708, 0.037235667, 0.037248181, 0.037262556, 0.037275681, 0.037285667, 0.037297347, 0.037302556, 0.037311514, 0.037326292, 0.037333833, 0.037344639, 0.037347778, 0.037362347], 'sourceeventsource_diff': [0, 7.305999999998591e-06, 8.527000000001228e-06, 1.5485999999995115e-05, 7.0279999999992016e-06, 7.29200000000596e-06, 2.9169999999981155e-06, 1.0415999999999204e-05, 1.5014000000000693e-05, 1.1457999999998913e-05, 8.528000000000702e-06, 1.1889000000001038e-05, 6.445000000000756e-06, 1.5207999999995725e-05, 4.79200000000346e-06, 3.5549999999953674e-06, 4.000000000004e-06, 4.527999999996701e-06, 5.430000000000712e-06, 6.249999999999312e-06, 7.917000000003116e-06, 1.4388999999996599e-05, 2.9030000000054845e-06, 7.707999999995163e-06, 1.3958000000001414e-05, 1.1458999999998387e-05, 1.2291000000004548e-05, 6.459000000000326e-06, 2.915999999998642e-06, 1.4791999999999583e-05, 1.4374999999997029e-05, 1.0014000000002632e-05, 5.875000000002406e-06, 4.332999999995257e-06, 4.166999999999366e-06, 1.0000000000003062e-05, 1.3958000000001414e-05, 3.958999999997825e-06, 1.2513999999998193e-05, 1.4375000000003968e-05, 1.3124999999995779e-05, 9.986000000003492e-06, 1.1680000000000024e-05, 5.2089999999990755e-06, 8.957999999996413e-06, 1.4778000000000013e-05, 7.540999999999798e-06, 1.0806000000002092e-05, 3.1389999999992257e-06, 1.4568999999999e-05]}</msg>
<status status="PASS" starttime="20201112 09:53:56.329" endtime="20201112 09:53:56.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.319" endtime="20201112 09:53:56.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.345" level="INFO">${RESULT} = [{'time': 0.036925431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.036949444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:56.338" endtime="20201112 09:53:56.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:56.364" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.305999999998591e-06, 1.5485999999995115e-05, 7.29200000000596e-06, 1.0415999999999204e-05, 1.1457999999998913e-05, 1.1889000000001038e-05, 1.5207999999995725e-05, 3.5549999999953674e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:53:56.347" endtime="20201112 09:53:56.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.374" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:56.372" endtime="20201112 09:53:56.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.379" level="INFO">VALUE: [7.305999999998591e-06, 1.5485999999995115e-05, 7.29200000000596e-06, 1.0415999999999204e-05, 1.1457999999998913e-05, 1.1889000000001038e-05, 1.5207999999995725e-05, 3.5549999999953674e-06, 4.527999999996701e-06, 6.249999999999312e-06, 1.4388999999996599e-05, 7.707999999995163e-06, 1.1458999999998387e-05, 6.459000000000326e-06, 1.4791999999999583e-05, 1.0014000000002632e-05, 4.332999999995257e-06, 1.0000000000003062e-05, 3.958999999997825e-06, 1.4375000000003968e-05, 9.986000000003492e-06, 5.2089999999990755e-06, 1.4778000000000013e-05, 1.0806000000002092e-05, 1.4568999999999e-05]</msg>
<status status="PASS" starttime="20201112 09:53:56.376" endtime="20201112 09:53:56.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.366" endtime="20201112 09:53:56.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.388" endtime="20201112 09:53:56.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.397" endtime="20201112 09:53:56.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.392" endtime="20201112 09:53:56.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.384" endtime="20201112 09:53:56.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:55.860" endtime="20201112 09:53:56.422"></status>
</kw>
<msg timestamp="20201112 09:53:56.422" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.442" endtime="20201112 09:53:56.455"></status>
</kw>
<msg timestamp="20201112 09:53:56.456" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.439" endtime="20201112 09:53:56.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.463" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:56.458" endtime="20201112 09:53:56.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.465" endtime="20201112 09:53:56.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.432" endtime="20201112 09:53:56.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.427" endtime="20201112 09:53:56.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.490" endtime="20201112 09:53:56.803"></status>
</kw>
<msg timestamp="20201112 09:53:56.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036362931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03636525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:56.486" endtime="20201112 09:53:56.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036362931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03636525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:53:56.809" endtime="20201112 09:53:56.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.822" endtime="20201112 09:53:56.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.479" endtime="20201112 09:53:56.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.474" endtime="20201112 09:53:56.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.838" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:56.836" endtime="20201112 09:53:56.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.846" level="INFO">VALUE: [{'time': 0.036362931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03636525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.036380639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.53889999999976e-05, 'source_diff': 1.53889999999976e-05}, {'time': 0.03638625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.036398125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.036407722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.596999999993139e-06, 'source_diff': 9.596999999993139e-06}, {'time': 0.036415625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.036429194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3568999999998e-05, 'source_diff': 1.3568999999998e-05}, {'time': 0.036443764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4569999999998473e-05, 'source_diff': 1.4569999999998473e-05}, {'time': 0.036457306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3542000000005272e-05, 'source_diff': 1.3542000000005272e-05}, {'time': 0.036461292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.036466042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.036475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.036479403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.036491486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999996069e-05, 'source_diff': 1.2082999999996069e-05}, {'time': 0.036497722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236000000006681e-06, 'source_diff': 6.236000000006681e-06}, {'time': 0.036510014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291999999997083e-05, 'source_diff': 1.2291999999997083e-05}, {'time': 0.036522333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.231899999999675e-05, 'source_diff': 1.231899999999675e-05}, {'time': 0.036524806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.473000000002834e-06, 'source_diff': 2.473000000002834e-06}, {'time': 0.036535653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.036547097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1443999999999344e-05, 'source_diff': 1.1443999999999344e-05}, {'time': 0.036551278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.036555222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.036559403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.036566472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0690000000053765e-06, 'source_diff': 7.0690000000053765e-06}, {'time': 0.036573972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.036579611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.638999999994787e-06, 'source_diff': 5.638999999994787e-06}, {'time': 0.036581903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.036594889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.036598347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4580000000047906e-06, 'source_diff': 3.4580000000047906e-06}, {'time': 0.036612806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4458999999994449e-05, 'source_diff': 1.4458999999994449e-05}, {'time': 0.036625861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3055000000004868e-05, 'source_diff': 1.3055000000004868e-05}, {'time': 0.036641292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.543099999999631e-05, 'source_diff': 1.543099999999631e-05}, {'time': 0.036654611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.036669403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4792000000006522e-05, 'source_diff': 1.4792000000006522e-05}, {'time': 0.036673361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.036676903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.036686903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.036690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.036693792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.036698778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.036707542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.036721319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.377699999999954e-05, 'source_diff': 1.377699999999954e-05}, {'time': 0.036728569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036732542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972999999997395e-06, 'source_diff': 3.972999999997395e-06}, {'time': 0.036741083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.036747333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.036758167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.036767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.165999999997954e-06, 'source_diff': 9.165999999997954e-06}, {'time': 0.036773611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:56.841" endtime="20201112 09:53:56.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.830" endtime="20201112 09:53:56.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:56.883" level="INFO">${debug-compressed} = {'diff': [0, 2.319000000000626e-06, 1.53889999999976e-05, 5.611000000002586e-06, 1.1875000000001468e-05, 9.596999999993139e-06, 7.903000000003546e-06, 1.3568999999998e-05, 1.4569999999998473e-05, 1.35...</msg>
<status status="PASS" starttime="20201112 09:53:56.852" endtime="20201112 09:53:56.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.892" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:56.890" endtime="20201112 09:53:56.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.899" level="INFO">VALUE: {'diff': [0, 2.319000000000626e-06, 1.53889999999976e-05, 5.611000000002586e-06, 1.1875000000001468e-05, 9.596999999993139e-06, 7.903000000003546e-06, 1.3568999999998e-05, 1.4569999999998473e-05, 1.3542000000005272e-05, 3.9859999999974915e-06, 4.7499999999978115e-06, 8.958000000003352e-06, 4.403000000000046e-06, 1.2082999999996069e-05, 6.236000000006681e-06, 1.2291999999997083e-05, 1.231899999999675e-05, 2.473000000002834e-06, 1.0847000000001328e-05, 1.1443999999999344e-05, 4.1809999999989356e-06, 3.943999999998782e-06, 4.1809999999989356e-06, 7.0690000000053765e-06, 7.500000000000562e-06, 5.638999999994787e-06, 2.29200000000096e-06, 1.2985999999999553e-05, 3.4580000000047906e-06, 1.4458999999994449e-05, 1.3055000000004868e-05, 1.543099999999631e-05, 1.331899999999775e-05, 1.4792000000006522e-05, 3.957999999998352e-06, 3.541999999995271e-06, 1.0000000000003062e-05, 3.5410000000027364e-06, 3.3480000000002397e-06, 4.985999999998492e-06, 8.764000000001382e-06, 1.377699999999954e-05, 7.250000000000312e-06, 3.972999999997395e-06, 8.541000000000798e-06, 6.249999999999312e-06, 1.0834000000001232e-05, 9.165999999997954e-06, 6.2779999999984515e-06], 'time': [0.036362931, 0.03636525, 0.036380639, 0.03638625, 0.036398125, 0.036407722, 0.036415625, 0.036429194, 0.036443764, 0.036457306, 0.036461292, 0.036466042, 0.036475, 0.036479403, 0.036491486, 0.036497722, 0.036510014, 0.036522333, 0.036524806, 0.036535653, 0.036547097, 0.036551278, 0.036555222, 0.036559403, 0.036566472, 0.036573972, 0.036579611, 0.036581903, 0.036594889, 0.036598347, 0.036612806, 0.036625861, 0.036641292, 0.036654611, 0.036669403, 0.036673361, 0.036676903, 0.036686903, 0.036690444, 0.036693792, 0.036698778, 0.036707542, 0.036721319, 0.036728569, 0.036732542, 0.036741083, 0.036747333, 0.036758167, 0.036767333, 0.036773611], 'sourceeventsource_diff': [0, 2.319000000000626e-06, 1.53889999999976e-05, 5.611000000002586e-06, 1.1875000000001468e-05, 9.596999999993139e-06, 7.903000000003546e-06, 1.3568999999998e-05, 1.4569999999998473e-05, 1.3542000000005272e-05, 3.9859999999974915e-06, 4.7499999999978115e-06, 8.958000000003352e-06, 4.403000000000046e-06, 1.2082999999996069e-05, 6.236000000006681e-06, 1.2291999999997083e-05, 1.231899999999675e-05, 2.473000000002834e-06, 1.0847000000001328e-05, 1.1443999999999344e-05, 4.1809999999989356e-06, 3.943999999998782e-06, 4.1809999999989356e-06, 7.0690000000053765e-06, 7.500000000000562e-06, 5.638999999994787e-06, 2.29200000000096e-06, 1.2985999999999553e-05, 3.4580000000047906e-06, 1.4458999999994449e-05, 1.3055000000004868e-05, 1.543099999999631e-05, 1.331899999999775e-05, 1.4792000000006522e-05, 3.957999999998352e-06, 3.541999999995271e-06, 1.0000000000003062e-05, 3.5410000000027364e-06, 3.3480000000002397e-06, 4.985999999998492e-06, 8.764000000001382e-06, 1.377699999999954e-05, 7.250000000000312e-06, 3.972999999997395e-06, 8.541000000000798e-06, 6.249999999999312e-06, 1.0834000000001232e-05, 9.165999999997954e-06, 6.2779999999984515e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:56.894" endtime="20201112 09:53:56.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.885" endtime="20201112 09:53:56.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:56.911" level="INFO">${RESULT} = [{'time': 0.03636525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.03638625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:53:56.904" endtime="20201112 09:53:56.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:56.929" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.319000000000626e-06, 5.611000000002586e-06, 9.596999999993139e-06, 1.3568999999998e-05, 1.3542000000005272e-05, 4.7499999999978115e-06, 4.403000000000046e-06, 6.236000000006681e-06, 1.2318...</msg>
<status status="PASS" starttime="20201112 09:53:56.913" endtime="20201112 09:53:56.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.939" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:56.937" endtime="20201112 09:53:56.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:56.945" level="INFO">VALUE: [2.319000000000626e-06, 5.611000000002586e-06, 9.596999999993139e-06, 1.3568999999998e-05, 1.3542000000005272e-05, 4.7499999999978115e-06, 4.403000000000046e-06, 6.236000000006681e-06, 1.231899999999675e-05, 1.0847000000001328e-05, 4.1809999999989356e-06, 4.1809999999989356e-06, 7.500000000000562e-06, 2.29200000000096e-06, 3.4580000000047906e-06, 1.3055000000004868e-05, 1.331899999999775e-05, 3.957999999998352e-06, 1.0000000000003062e-05, 3.3480000000002397e-06, 8.764000000001382e-06, 7.250000000000312e-06, 8.541000000000798e-06, 1.0834000000001232e-05, 6.2779999999984515e-06]</msg>
<status status="PASS" starttime="20201112 09:53:56.941" endtime="20201112 09:53:56.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.931" endtime="20201112 09:53:56.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:56.954" endtime="20201112 09:53:56.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:56.962" endtime="20201112 09:53:56.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.958" endtime="20201112 09:53:56.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.949" endtime="20201112 09:53:56.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.424" endtime="20201112 09:53:56.988"></status>
</kw>
<msg timestamp="20201112 09:53:56.988" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.010" endtime="20201112 09:53:57.023"></status>
</kw>
<msg timestamp="20201112 09:53:57.024" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.005" endtime="20201112 09:53:57.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.031" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.027" endtime="20201112 09:53:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.033" endtime="20201112 09:53:57.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.997" endtime="20201112 09:53:57.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.993" endtime="20201112 09:53:57.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.056" endtime="20201112 09:53:57.369"></status>
</kw>
<msg timestamp="20201112 09:53:57.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038726514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038730681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.053" endtime="20201112 09:53:57.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038726514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038730681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.376" endtime="20201112 09:53:57.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.389" endtime="20201112 09:53:57.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.046" endtime="20201112 09:53:57.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.041" endtime="20201112 09:53:57.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.405" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:57.403" endtime="20201112 09:53:57.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.413" level="INFO">VALUE: [{'time': 0.038726514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038730681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1670000000063045e-06, 'source_diff': 4.1670000000063045e-06}, {'time': 0.038738389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999995163e-06, 'source_diff': 7.707999999995163e-06}, {'time': 0.038745264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038753389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.038757139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7500000000037503e-06, 'source_diff': 3.7500000000037503e-06}, {'time': 0.038768597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.038774861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038784014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.038793597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.038809028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.038812569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5409999999957975e-06, 'source_diff': 3.5409999999957975e-06}, {'time': 0.038822375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.038826111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.038835264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.038837569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.038843819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038849028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.038856528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.038865278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038877375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2096999999995639e-05, 'source_diff': 1.2096999999995639e-05}, {'time': 0.038891319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3944000000001844e-05, 'source_diff': 1.3944000000001844e-05}, {'time': 0.038894486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.038907611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.038917986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.038930722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2735999999999303e-05, 'source_diff': 1.2735999999999303e-05}, {'time': 0.038934861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.038940278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.038945069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.038947986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.038955694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.038970319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4625000000004218e-05, 'source_diff': 1.4625000000004218e-05}, {'time': 0.038976153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833999999996231e-06, 'source_diff': 5.833999999996231e-06}, {'time': 0.038981125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.038992597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.039005083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2486000000005992e-05, 'source_diff': 1.2486000000005992e-05}, {'time': 0.039011125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.039018, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.03902425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2500000000062506e-06, 'source_diff': 6.2500000000062506e-06}, {'time': 0.039039264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5013999999993755e-05, 'source_diff': 1.5013999999993755e-05}, {'time': 0.039052403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.039063417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1014000000003632e-05, 'source_diff': 1.1014000000003632e-05}, {'time': 0.039065708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2909999999945474e-06, 'source_diff': 2.2909999999945474e-06}, {'time': 0.039068, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.03907925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.039093014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.039106361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3346999999996889e-05, 'source_diff': 1.3346999999996889e-05}, {'time': 0.039116972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.039121972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.039131556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:57.407" endtime="20201112 09:53:57.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.397" endtime="20201112 09:53:57.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:57.448" level="INFO">${debug-compressed} = {'diff': [0, 4.1670000000063045e-06, 7.707999999995163e-06, 6.875000000003406e-06, 8.124999999997717e-06, 3.7500000000037503e-06, 1.1457999999998913e-05, 6.2639999999988816e-06, 9.152999999997857e-06,...</msg>
<status status="PASS" starttime="20201112 09:53:57.418" endtime="20201112 09:53:57.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.457" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:57.455" endtime="20201112 09:53:57.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.464" level="INFO">VALUE: {'diff': [0, 4.1670000000063045e-06, 7.707999999995163e-06, 6.875000000003406e-06, 8.124999999997717e-06, 3.7500000000037503e-06, 1.1457999999998913e-05, 6.2639999999988816e-06, 9.152999999997857e-06, 9.583000000000508e-06, 1.5431000000003248e-05, 3.5409999999957975e-06, 9.806000000001092e-06, 3.7360000000041804e-06, 9.152999999997857e-06, 2.305000000001056e-06, 6.249999999999312e-06, 5.2089999999990755e-06, 7.500000000000562e-06, 8.750000000001812e-06, 1.2096999999995639e-05, 1.3944000000001844e-05, 3.1669999999983656e-06, 1.3125000000002718e-05, 1.0374999999999968e-05, 1.2735999999999303e-05, 4.139000000000226e-06, 5.417000000000616e-06, 4.790999999997048e-06, 2.9169999999981155e-06, 7.708000000002102e-06, 1.4625000000004218e-05, 5.833999999996231e-06, 4.971999999998922e-06, 1.1471999999998483e-05, 1.2486000000005992e-05, 6.041999999997771e-06, 6.874999999996467e-06, 6.2500000000062506e-06, 1.5013999999993755e-05, 1.3139000000002288e-05, 1.1014000000003632e-05, 2.2909999999945474e-06, 2.29200000000096e-06, 1.1250000000004312e-05, 1.3763999999999443e-05, 1.3346999999996889e-05, 1.0611000000000648e-05, 4.9999999999980616e-06, 9.583999999999981e-06], 'time': [0.038726514, 0.038730681, 0.038738389, 0.038745264, 0.038753389, 0.038757139, 0.038768597, 0.038774861, 0.038784014, 0.038793597, 0.038809028, 0.038812569, 0.038822375, 0.038826111, 0.038835264, 0.038837569, 0.038843819, 0.038849028, 0.038856528, 0.038865278, 0.038877375, 0.038891319, 0.038894486, 0.038907611, 0.038917986, 0.038930722, 0.038934861, 0.038940278, 0.038945069, 0.038947986, 0.038955694, 0.038970319, 0.038976153, 0.038981125, 0.038992597, 0.039005083, 0.039011125, 0.039018, 0.03902425, 0.039039264, 0.039052403, 0.039063417, 0.039065708, 0.039068, 0.03907925, 0.039093014, 0.039106361, 0.039116972, 0.039121972, 0.039131556], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 4.1670000000063045e-06, 7.707999999995163e-06, 6.875000000003406e-06, 8.124999999997717e-06, 3.7500000000037503e-06, 1.1457999999998913e-05, 6.2639999999988816e-06, 9.152999999997857e-06, 9.583000000000508e-06, 1.5431000000003248e-05, 3.5409999999957975e-06, 9.806000000001092e-06, 3.7360000000041804e-06, 9.152999999997857e-06, 2.305000000001056e-06, 6.249999999999312e-06, 5.2089999999990755e-06, 7.500000000000562e-06, 8.750000000001812e-06, 1.2096999999995639e-05, 1.3944000000001844e-05, 3.1669999999983656e-06, 1.3125000000002718e-05, 1.0374999999999968e-05, 1.2735999999999303e-05, 4.139000000000226e-06, 5.417000000000616e-06, 4.790999999997048e-06, 2.9169999999981155e-06, 7.708000000002102e-06, 1.4625000000004218e-05, 5.833999999996231e-06, 4.971999999998922e-06, 1.1471999999998483e-05, 1.2486000000005992e-05, 6.041999999997771e-06, 6.874999999996467e-06, 6.2500000000062506e-06, 1.5013999999993755e-05, 1.3139000000002288e-05, 1.1014000000003632e-05, 2.2909999999945474e-06, 2.29200000000096e-06, 1.1250000000004312e-05, 1.3763999999999443e-05, 1.3346999999996889e-05, 1.0611000000000648e-05, 4.9999999999980616e-06, 9.583999999999981e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:57.460" endtime="20201112 09:53:57.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.450" endtime="20201112 09:53:57.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:57.476" level="INFO">${RESULT} = [{'time': 0.038730681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1670000000063045e-06, 'source_diff': 4.1670000000063045e-06}, {'time': 0.038745264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:57.469" endtime="20201112 09:53:57.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:57.494" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.1670000000063045e-06, 6.875000000003406e-06, 3.7500000000037503e-06, 6.2639999999988816e-06, 9.583000000000508e-06, 3.5409999999957975e-06, 3.7360000000041804e-06, 2.305000000001056e-06, 5...</msg>
<status status="PASS" starttime="20201112 09:53:57.478" endtime="20201112 09:53:57.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.504" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:57.502" endtime="20201112 09:53:57.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.509" level="INFO">VALUE: [4.1670000000063045e-06, 6.875000000003406e-06, 3.7500000000037503e-06, 6.2639999999988816e-06, 9.583000000000508e-06, 3.5409999999957975e-06, 3.7360000000041804e-06, 2.305000000001056e-06, 5.2089999999990755e-06, 8.750000000001812e-06, 1.3944000000001844e-05, 1.3125000000002718e-05, 1.2735999999999303e-05, 5.417000000000616e-06, 2.9169999999981155e-06, 1.4625000000004218e-05, 4.971999999998922e-06, 1.2486000000005992e-05, 6.874999999996467e-06, 1.5013999999993755e-05, 1.1014000000003632e-05, 2.29200000000096e-06, 1.3763999999999443e-05, 1.0611000000000648e-05, 9.583999999999981e-06]</msg>
<status status="PASS" starttime="20201112 09:53:57.507" endtime="20201112 09:53:57.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.496" endtime="20201112 09:53:57.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.519" endtime="20201112 09:53:57.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:57.527" endtime="20201112 09:53:57.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.523" endtime="20201112 09:53:57.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.514" endtime="20201112 09:53:57.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:56.989" endtime="20201112 09:53:57.553"></status>
</kw>
<msg timestamp="20201112 09:53:57.553" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.576" endtime="20201112 09:53:57.589"></status>
</kw>
<msg timestamp="20201112 09:53:57.590" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.571" endtime="20201112 09:53:57.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.596" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:57.592" endtime="20201112 09:53:57.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.598" endtime="20201112 09:53:57.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.563" endtime="20201112 09:53:57.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.558" endtime="20201112 09:53:57.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.622" endtime="20201112 09:53:57.918"></status>
</kw>
<msg timestamp="20201112 09:53:57.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039697694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039711181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.619" endtime="20201112 09:53:57.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039697694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039711181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:57.924" endtime="20201112 09:53:57.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:57.937" endtime="20201112 09:53:57.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.611" endtime="20201112 09:53:57.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.607" endtime="20201112 09:53:57.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.953" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:57.951" endtime="20201112 09:53:57.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:57.961" level="INFO">VALUE: [{'time': 0.039697694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039711181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3486999999999527e-05, 'source_diff': 1.3486999999999527e-05}, {'time': 0.039721806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.039726667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.039730972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.039738069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.039744722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.0397585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3777999999999013e-05, 'source_diff': 1.3777999999999013e-05}, {'time': 0.039772431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3930999999994809e-05, 'source_diff': 1.3930999999994809e-05}, {'time': 0.039776389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958000000005291e-06, 'source_diff': 3.958000000005291e-06}, {'time': 0.039782861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.039792431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.039800556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.039807028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.039809944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.039813889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.039820139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.039832222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.039845167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2945000000000317e-05, 'source_diff': 1.2945000000000317e-05}, {'time': 0.039858069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2902000000002134e-05, 'source_diff': 1.2902000000002134e-05}, {'time': 0.039862875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999996091e-06, 'source_diff': 4.805999999996091e-06}, {'time': 0.039869111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.039873694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.039880153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.039890569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.039897861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.039911653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3791999999998583e-05, 'source_diff': 1.3791999999998583e-05}, {'time': 0.039915375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7220000000046105e-06, 'source_diff': 3.7220000000046105e-06}, {'time': 0.039930778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540299999999717e-05, 'source_diff': 1.540299999999717e-05}, {'time': 0.039944528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.039951611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.039958903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.039971625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.039974125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.039980583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.039987889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.039990208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.040002875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2667000000000928e-05, 'source_diff': 1.2667000000000928e-05}, {'time': 0.040014333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.040018306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972999999997395e-06, 'source_diff': 3.972999999997395e-06}, {'time': 0.040030597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291000000004548e-05, 'source_diff': 1.2291000000004548e-05}, {'time': 0.040043764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3167000000001428e-05, 'source_diff': 1.3167000000001428e-05}, {'time': 0.040054333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0568999999994999e-05, 'source_diff': 1.0568999999994999e-05}, {'time': 0.040057264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9310000000046244e-06, 'source_diff': 2.9310000000046244e-06}, {'time': 0.040067889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.040078917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1027999999996263e-05, 'source_diff': 1.1027999999996263e-05}, {'time': 0.040093708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.040101875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.167000000003366e-06, 'source_diff': 8.167000000003366e-06}, {'time': 0.040108944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.040117264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:57.955" endtime="20201112 09:53:57.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.945" endtime="20201112 09:53:57.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:57.996" level="INFO">${debug-compressed} = {'diff': [0, 1.3486999999999527e-05, 1.0625000000000218e-05, 4.861000000001836e-06, 4.305000000003056e-06, 7.0969999999975775e-06, 6.653000000002296e-06, 1.3777999999999013e-05, 1.3930999999994809e-05...</msg>
<status status="PASS" starttime="20201112 09:53:57.967" endtime="20201112 09:53:57.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.005" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:58.003" endtime="20201112 09:53:58.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.012" level="INFO">VALUE: {'diff': [0, 1.3486999999999527e-05, 1.0625000000000218e-05, 4.861000000001836e-06, 4.305000000003056e-06, 7.0969999999975775e-06, 6.653000000002296e-06, 1.3777999999999013e-05, 1.3930999999994809e-05, 3.958000000005291e-06, 6.472000000000422e-06, 9.570000000000412e-06, 8.124999999997717e-06, 6.472000000000422e-06, 2.915999999998642e-06, 3.9449999999982555e-06, 6.249999999999312e-06, 1.2083000000003008e-05, 1.2945000000000317e-05, 1.2902000000002134e-05, 4.805999999996091e-06, 6.235999999999742e-06, 4.583000000002446e-06, 6.459000000000326e-06, 1.0415999999999204e-05, 7.2919999999990215e-06, 1.3791999999998583e-05, 3.7220000000046105e-06, 1.540299999999717e-05, 1.3749999999999873e-05, 7.0829999999980076e-06, 7.2919999999990215e-06, 1.2721999999999734e-05, 2.5000000000025002e-06, 6.458000000000852e-06, 7.305999999998591e-06, 2.319000000000626e-06, 1.2667000000000928e-05, 1.1457999999998913e-05, 3.972999999997395e-06, 1.2291000000004548e-05, 1.3167000000001428e-05, 1.0568999999994999e-05, 2.9310000000046244e-06, 1.0625000000000218e-05, 1.1027999999996263e-05, 1.479100000000011e-05, 8.167000000003366e-06, 7.068999999998438e-06, 8.319999999999161e-06], 'time': [0.039697694, 0.039711181, 0.039721806, 0.039726667, 0.039730972, 0.039738069, 0.039744722, 0.0397585, 0.039772431, 0.039776389, 0.039782861, 0.039792431, 0.039800556, 0.039807028, 0.039809944, 0.039813889, 0.039820139, 0.039832222, 0.039845167, 0.039858069, 0.039862875, 0.039869111, 0.039873694, 0.039880153, 0.039890569, 0.039897861, 0.039911653, 0.039915375, 0.039930778, 0.039944528, 0.039951611, 0.039958903, 0.039971625, 0.039974125, 0.039980583, 0.039987889, 0.039990208, 0.040002875, 0.040014333, 0.040018306, 0.040030597, 0.040043764, 0.040054333, 0.040057264, 0.040067889, 0.040078917, 0.040093708, 0.040101875, 0.040108944, 0.040117264], 'sourceeventsource_diff': [0, 1.3486999999999527e-05, 1.0625000000000218e-05, 4.861000000001836e-06, 4.305000000003056e-06, 7.0969999999975775e-06, 6.653000000002296e-06, 1.3777999999999013e-05, 1.3930999999994809e-05, 3.958000000005291e-06, 6.472000000000422e-06, 9.570000000000412e-06, 8.124999999997717e-06, 6.472000000000422e-06, 2.915999999998642e-06, 3.9449999999982555e-06, 6.249999999999312e-06, 1.2083000000003008e-05, 1.2945000000000317e-05, 1.2902000000002134e-05, 4.805999999996091e-06, 6.235999999999742e-06, 4.583000000002446e-06, 6.459000000000326e-06, 1.0415999999999204e-05, 7.2919999999990215e-06, 1.3791999999998583e-05, 3.7220000000046105e-06, 1.540299999999717e-05, 1.3749999999999873e-05, 7.0829999999980076e-06, 7.2919999999990215e-06, 1.2721999999999734e-05, 2.5000000000025002e-06, 6.458000000000852e-06, 7.305999999998591e-06, 2.319000000000626e-06, 1.2667000000000928e-05, 1.1457999999998913e-05, 3.972999999997395e-06, 1.2291000000004548e-05, 1.3167000000001428e-05, 1.0568999999994999e-05, 2.9310000000046244e-06, 1.0625000000000218e-05, 1.1027999999996263e-05, 1.479100000000011e-05, 8.167000000003366e-06, 7.068999999998438e-06, 8.319999999999161e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:58.008" endtime="20201112 09:53:58.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.998" endtime="20201112 09:53:58.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.024" level="INFO">${RESULT} = [{'time': 0.039711181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3486999999999527e-05, 'source_diff': 1.3486999999999527e-05}, {'time': 0.039726667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:58.017" endtime="20201112 09:53:58.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:58.042" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.3486999999999527e-05, 4.861000000001836e-06, 7.0969999999975775e-06, 1.3777999999999013e-05, 3.958000000005291e-06, 9.570000000000412e-06, 6.472000000000422e-06, 3.9449999999982555e-06, 1....</msg>
<status status="PASS" starttime="20201112 09:53:58.026" endtime="20201112 09:53:58.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.053" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:58.050" endtime="20201112 09:53:58.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.058" level="INFO">VALUE: [1.3486999999999527e-05, 4.861000000001836e-06, 7.0969999999975775e-06, 1.3777999999999013e-05, 3.958000000005291e-06, 9.570000000000412e-06, 6.472000000000422e-06, 3.9449999999982555e-06, 1.2083000000003008e-05, 1.2902000000002134e-05, 6.235999999999742e-06, 6.459000000000326e-06, 7.2919999999990215e-06, 3.7220000000046105e-06, 1.3749999999999873e-05, 7.2919999999990215e-06, 2.5000000000025002e-06, 7.305999999998591e-06, 1.2667000000000928e-05, 3.972999999997395e-06, 1.3167000000001428e-05, 2.9310000000046244e-06, 1.1027999999996263e-05, 8.167000000003366e-06, 8.319999999999161e-06]</msg>
<status status="PASS" starttime="20201112 09:53:58.055" endtime="20201112 09:53:58.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.044" endtime="20201112 09:53:58.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.067" endtime="20201112 09:53:58.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.075" endtime="20201112 09:53:58.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.071" endtime="20201112 09:53:58.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.062" endtime="20201112 09:53:58.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:57.555" endtime="20201112 09:53:58.101"></status>
</kw>
<msg timestamp="20201112 09:53:58.101" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.122" endtime="20201112 09:53:58.136"></status>
</kw>
<msg timestamp="20201112 09:53:58.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.117" endtime="20201112 09:53:58.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.139" endtime="20201112 09:53:58.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.145" endtime="20201112 09:53:58.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.110" endtime="20201112 09:53:58.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.106" endtime="20201112 09:53:58.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.168" endtime="20201112 09:53:58.478"></status>
</kw>
<msg timestamp="20201112 09:53:58.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038070792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038081792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.165" endtime="20201112 09:53:58.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038070792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038081792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.484" endtime="20201112 09:53:58.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.497" endtime="20201112 09:53:58.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.158" endtime="20201112 09:53:58.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.153" endtime="20201112 09:53:58.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.513" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:58.511" endtime="20201112 09:53:58.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.521" level="INFO">VALUE: [{'time': 0.038070792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038081792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1000000000004062e-05, 'source_diff': 1.1000000000004062e-05}, {'time': 0.038093028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1235999999997803e-05, 'source_diff': 1.1235999999997803e-05}, {'time': 0.038105125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2096999999995639e-05, 'source_diff': 1.2096999999995639e-05}, {'time': 0.038116792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.038123028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236000000006681e-06, 'source_diff': 6.236000000006681e-06}, {'time': 0.038138444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5415999999997265e-05, 'source_diff': 1.5415999999997265e-05}, {'time': 0.038147069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.038153042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.038165347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305000000004118e-05, 'source_diff': 1.2305000000004118e-05}, {'time': 0.038174083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.038183681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.0381895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8190000000041264e-06, 'source_diff': 5.8190000000041264e-06}, {'time': 0.038204514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.038219083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.038232236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.038238458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.038246583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.038250125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.038253875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.038261375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.038275958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.038280347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.038291167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.038297417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.03830325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.038313264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.038324097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.038329319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.038337639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.038346181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038353486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.038359306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.038363278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.038369306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.038380764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.038392014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.038401403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.038408278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.038422444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4166000000002954e-05, 'source_diff': 1.4166000000002954e-05}, {'time': 0.038430972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.038438278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.038447028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038452861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.038468069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.038483111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5041999999999833e-05, 'source_diff': 1.5041999999999833e-05}, {'time': 0.03848975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.038501, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.038503486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.038507681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:58.516" endtime="20201112 09:53:58.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.505" endtime="20201112 09:53:58.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:58.558" level="INFO">${debug-compressed} = {'diff': [0, 1.1000000000004062e-05, 1.1235999999997803e-05, 1.2096999999995639e-05, 1.1666999999999927e-05, 6.236000000006681e-06, 1.5415999999997265e-05, 8.624999999998217e-06, 5.9729999999993955e-0...</msg>
<status status="PASS" starttime="20201112 09:53:58.527" endtime="20201112 09:53:58.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.568" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:58.566" endtime="20201112 09:53:58.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.575" level="INFO">VALUE: {'diff': [0, 1.1000000000004062e-05, 1.1235999999997803e-05, 1.2096999999995639e-05, 1.1666999999999927e-05, 6.236000000006681e-06, 1.5415999999997265e-05, 8.624999999998217e-06, 5.9729999999993955e-06, 1.2305000000004118e-05, 8.735999999995303e-06, 9.597999999999551e-06, 5.8190000000041264e-06, 1.5014000000000693e-05, 1.4568999999999e-05, 1.3153000000001858e-05, 6.222000000000172e-06, 8.124999999997717e-06, 3.54200000000221e-06, 3.7499999999968114e-06, 7.500000000000562e-06, 1.458299999999857e-05, 4.389000000000476e-06, 1.0820000000001662e-05, 6.249999999999312e-06, 5.8329999999967574e-06, 1.0014000000002632e-05, 1.0833000000001758e-05, 5.221999999999172e-06, 8.319999999999161e-06, 8.542000000000272e-06, 7.304999999999118e-06, 5.8200000000036e-06, 3.971999999997922e-06, 6.0279999999982015e-06, 1.1457999999998913e-05, 1.1250000000004312e-05, 9.388999999998537e-06, 6.874999999996467e-06, 1.4166000000002954e-05, 8.528000000000702e-06, 7.305999999998591e-06, 8.750000000001812e-06, 5.8329999999967574e-06, 1.5208000000002664e-05, 1.5041999999999833e-05, 6.639000000002726e-06, 1.1249999999997373e-05, 2.4860000000029303e-06, 4.1949999999985055e-06], 'time': [0.038070792, 0.038081792, 0.038093028, 0.038105125, 0.038116792, 0.038123028, 0.038138444, 0.038147069, 0.038153042, 0.038165347, 0.038174083, 0.038183681, 0.0381895, 0.038204514, 0.038219083, 0.038232236, 0.038238458, 0.038246583, 0.038250125, 0.038253875, 0.038261375, 0.038275958, 0.038280347, 0.038291167, 0.038297417, 0.03830325, 0.038313264, 0.038324097, 0.038329319, 0.038337639, 0.038346181, 0.038353486, 0.038359306, 0.038363278, 0.038369306, 0.038380764, 0.038392014, 0.038401403, 0.038408278, 0.038422444, 0.038430972, 0.038438278, 0.038447028, 0.038452861, 0.038468069, 0.038483111, 0.03848975, 0.038501, 0.038503486, 0.038507681], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.1000000000004062e-05, 1.1235999999997803e-05, 1.2096999999995639e-05, 1.1666999999999927e-05, 6.236000000006681e-06, 1.5415999999997265e-05, 8.624999999998217e-06, 5.9729999999993955e-06, 1.2305000000004118e-05, 8.735999999995303e-06, 9.597999999999551e-06, 5.8190000000041264e-06, 1.5014000000000693e-05, 1.4568999999999e-05, 1.3153000000001858e-05, 6.222000000000172e-06, 8.124999999997717e-06, 3.54200000000221e-06, 3.7499999999968114e-06, 7.500000000000562e-06, 1.458299999999857e-05, 4.389000000000476e-06, 1.0820000000001662e-05, 6.249999999999312e-06, 5.8329999999967574e-06, 1.0014000000002632e-05, 1.0833000000001758e-05, 5.221999999999172e-06, 8.319999999999161e-06, 8.542000000000272e-06, 7.304999999999118e-06, 5.8200000000036e-06, 3.971999999997922e-06, 6.0279999999982015e-06, 1.1457999999998913e-05, 1.1250000000004312e-05, 9.388999999998537e-06, 6.874999999996467e-06, 1.4166000000002954e-05, 8.528000000000702e-06, 7.305999999998591e-06, 8.750000000001812e-06, 5.8329999999967574e-06, 1.5208000000002664e-05, 1.5041999999999833e-05, 6.639000000002726e-06, 1.1249999999997373e-05, 2.4860000000029303e-06, 4.1949999999985055e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:58.570" endtime="20201112 09:53:58.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.560" endtime="20201112 09:53:58.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:58.588" level="INFO">${RESULT} = [{'time': 0.038081792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1000000000004062e-05, 'source_diff': 1.1000000000004062e-05}, {'time': 0.038105125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:58.580" endtime="20201112 09:53:58.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:58.606" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1000000000004062e-05, 1.2096999999995639e-05, 6.236000000006681e-06, 8.624999999998217e-06, 1.2305000000004118e-05, 9.597999999999551e-06, 1.5014000000000693e-05, 1.3153000000001858e-05, 8...</msg>
<status status="PASS" starttime="20201112 09:53:58.590" endtime="20201112 09:53:58.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.617" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:58.614" endtime="20201112 09:53:58.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.622" level="INFO">VALUE: [1.1000000000004062e-05, 1.2096999999995639e-05, 6.236000000006681e-06, 8.624999999998217e-06, 1.2305000000004118e-05, 9.597999999999551e-06, 1.5014000000000693e-05, 1.3153000000001858e-05, 8.124999999997717e-06, 3.7499999999968114e-06, 1.458299999999857e-05, 1.0820000000001662e-05, 5.8329999999967574e-06, 1.0833000000001758e-05, 8.319999999999161e-06, 7.304999999999118e-06, 3.971999999997922e-06, 1.1457999999998913e-05, 9.388999999998537e-06, 1.4166000000002954e-05, 7.305999999998591e-06, 5.8329999999967574e-06, 1.5041999999999833e-05, 1.1249999999997373e-05, 4.1949999999985055e-06]</msg>
<status status="PASS" starttime="20201112 09:53:58.619" endtime="20201112 09:53:58.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.608" endtime="20201112 09:53:58.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.631" endtime="20201112 09:53:58.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:58.639" endtime="20201112 09:53:58.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.635" endtime="20201112 09:53:58.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.626" endtime="20201112 09:53:58.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.102" endtime="20201112 09:53:58.665"></status>
</kw>
<msg timestamp="20201112 09:53:58.665" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.687" endtime="20201112 09:53:58.700"></status>
</kw>
<msg timestamp="20201112 09:53:58.701" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.682" endtime="20201112 09:53:58.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:58.707" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:58.703" endtime="20201112 09:53:58.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.709" endtime="20201112 09:53:58.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.675" endtime="20201112 09:53:58.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.670" endtime="20201112 09:53:58.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:58.733" endtime="20201112 09:53:59.043"></status>
</kw>
<msg timestamp="20201112 09:53:59.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038001333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038005069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:58.729" endtime="20201112 09:53:59.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038001333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038005069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.049" endtime="20201112 09:53:59.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.062" endtime="20201112 09:53:59.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.722" endtime="20201112 09:53:59.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.717" endtime="20201112 09:53:59.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.078" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:59.076" endtime="20201112 09:53:59.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.086" level="INFO">VALUE: [{'time': 0.038001333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038005069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.038014264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194999999996567e-06, 'source_diff': 9.194999999996567e-06}, {'time': 0.038018403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.038027597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000004032e-06, 'source_diff': 9.194000000004032e-06}, {'time': 0.038042167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4569999999998473e-05, 'source_diff': 1.4569999999998473e-05}, {'time': 0.038049028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.038052569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.03805675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.038064236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.038074028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.03808925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5221999999995295e-05, 'source_diff': 1.5221999999995295e-05}, {'time': 0.038098625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.038102194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.038113222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.0381255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2277999999997513e-05, 'source_diff': 1.2277999999997513e-05}, {'time': 0.038134056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.038148417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.038159875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458000000005852e-05, 'source_diff': 1.1458000000005852e-05}, {'time': 0.038170111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.038176139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.038184889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038191542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.038201361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.03820975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.038212389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.038222194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.038226556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.038231139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999995507e-06, 'source_diff': 4.582999999995507e-06}, {'time': 0.038239264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.038243847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999995507e-06, 'source_diff': 4.582999999995507e-06}, {'time': 0.038254472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038262597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.038268264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.038282833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.038295514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.038303847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.038318028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4180999999995059e-05, 'source_diff': 1.4180999999995059e-05}, {'time': 0.038327611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.038339694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.038354069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038361153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.08400000000442e-06, 'source_diff': 7.08400000000442e-06}, {'time': 0.038375361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4207999999994725e-05, 'source_diff': 1.4207999999994725e-05}, {'time': 0.038379556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.195000000005444e-06, 'source_diff': 4.195000000005444e-06}, {'time': 0.038390944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1388000000001064e-05, 'source_diff': 1.1388000000001064e-05}, {'time': 0.038403444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.038407403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.038419069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1666000000000454e-05, 'source_diff': 1.1666000000000454e-05}, {'time': 0.038433278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4209000000001137e-05, 'source_diff': 1.4209000000001137e-05}, {'time': 0.038440528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}]</msg>
<status status="PASS" starttime="20201112 09:53:59.081" endtime="20201112 09:53:59.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.070" endtime="20201112 09:53:59.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:59.121" level="INFO">${debug-compressed} = {'diff': [0, 3.7360000000041804e-06, 9.194999999996567e-06, 4.139000000000226e-06, 9.194000000004032e-06, 1.4569999999998473e-05, 6.860999999996897e-06, 3.5410000000027364e-06, 4.1809999999989356e-06,...</msg>
<status status="PASS" starttime="20201112 09:53:59.092" endtime="20201112 09:53:59.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.131" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:59.128" endtime="20201112 09:53:59.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.138" level="INFO">VALUE: {'diff': [0, 3.7360000000041804e-06, 9.194999999996567e-06, 4.139000000000226e-06, 9.194000000004032e-06, 1.4569999999998473e-05, 6.860999999996897e-06, 3.5410000000027364e-06, 4.1809999999989356e-06, 7.486000000000992e-06, 9.792000000001522e-06, 1.5221999999995295e-05, 9.374999999998967e-06, 3.5690000000018762e-06, 1.1028000000003202e-05, 1.2277999999997513e-05, 8.555999999999842e-06, 1.4360999999997459e-05, 1.1458000000005852e-05, 1.0235999999996803e-05, 6.0279999999982015e-06, 8.750000000001812e-06, 6.653000000002296e-06, 9.819000000001188e-06, 8.388999999997537e-06, 2.6389999999987257e-06, 9.805000000001618e-06, 4.36200000000081e-06, 4.582999999995507e-06, 8.125000000004656e-06, 4.582999999995507e-06, 1.0625000000000218e-05, 8.125000000004656e-06, 5.667000000000866e-06, 1.4568999999999e-05, 1.2681000000000497e-05, 8.332999999999258e-06, 1.4180999999995059e-05, 9.583000000000508e-06, 1.2083000000003008e-05, 1.4374999999997029e-05, 7.08400000000442e-06, 1.4207999999994725e-05, 4.195000000005444e-06, 1.1388000000001064e-05, 1.2499999999998623e-05, 3.958999999997825e-06, 1.1666000000000454e-05, 1.4209000000001137e-05, 7.250000000000312e-06], 'time': [0.038001333, 0.038005069, 0.038014264, 0.038018403, 0.038027597, 0.038042167, 0.038049028, 0.038052569, 0.03805675, 0.038064236, 0.038074028, 0.03808925, 0.038098625, 0.038102194, 0.038113222, 0.0381255, 0.038134056, 0.038148417, 0.038159875, 0.038170111, 0.038176139, 0.038184889, 0.038191542, 0.038201361, 0.03820975, 0.038212389, 0.038222194, 0.038226556, 0.038231139, 0.038239264, 0.038243847, 0.038254472, 0.038262597, 0.038268264, 0.038282833, 0.038295514, 0.038303847, 0.038318028, 0.038327611, 0.038339694, 0.038354069, 0.038361153, 0.038375361, 0.038379556, 0.038390944, 0.038403444, 0.038407403, 0.038419069, 0.038433278, 0.038440528], 'sourceeventsource_diff': [0, 3.7360000000041804e-06, 9.194999999996567e-06, 4.139000000000226e-06, 9.194000000004032e-06, 1.4569999999998473e-05, 6.860999999996897e-06, 3.5410000000027364e-06, 4.1809999999989356e-06, 7.486000000000992e-06, 9.792000000001522e-06, 1.5221999999995295e-05, 9.374999999998967e-06, 3.5690000000018762e-06, 1.1028000000003202e-05, 1.2277999999997513e-05, 8.555999999999842e-06, 1.4360999999997459e-05, 1.1458000000005852e-05, 1.0235999999996803e-05, 6.0279999999982015e-06, 8.750000000001812e-06, 6.653000000002296e-06, 9.819000000001188e-06, 8.388999999997537e-06, 2.6389999999987257e-06, 9.805000000001618e-06, 4.36200000000081e-06, 4.582999999995507e-06, 8.125000000004656e-06, 4.582999999995507e-06, 1.0625000000000218e-05, 8.125000000004656e-06, 5.667000000000866e-06, 1.4568999999999e-05, 1.2681000000000497e-05, 8.332999999999258e-06, 1.4180999999995059e-05, 9.583000000000508e-06, 1.2083000000003008e-05, 1.4374999999997029e-05, 7.08400000000442e-06, 1.4207999999994725e-05, 4.195000000005444e-06, 1.1388000000001064e-05, 1.2499999999998623e-05, 3.958999999997825e-06, 1.1666000000000454e-05, 1.4209000000001137e-05, 7.250000000000312e-06]}</msg>
<status status="PASS" starttime="20201112 09:53:59.133" endtime="20201112 09:53:59.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.123" endtime="20201112 09:53:59.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.149" level="INFO">${RESULT} = [{'time': 0.038005069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.038018403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:53:59.142" endtime="20201112 09:53:59.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:59.168" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.7360000000041804e-06, 4.139000000000226e-06, 1.4569999999998473e-05, 3.5410000000027364e-06, 7.486000000000992e-06, 1.5221999999995295e-05, 3.5690000000018762e-06, 1.2277999999997513e-05, ...</msg>
<status status="PASS" starttime="20201112 09:53:59.151" endtime="20201112 09:53:59.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.178" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:59.176" endtime="20201112 09:53:59.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.183" level="INFO">VALUE: [3.7360000000041804e-06, 4.139000000000226e-06, 1.4569999999998473e-05, 3.5410000000027364e-06, 7.486000000000992e-06, 1.5221999999995295e-05, 3.5690000000018762e-06, 1.2277999999997513e-05, 1.4360999999997459e-05, 1.0235999999996803e-05, 8.750000000001812e-06, 9.819000000001188e-06, 2.6389999999987257e-06, 4.36200000000081e-06, 8.125000000004656e-06, 1.0625000000000218e-05, 5.667000000000866e-06, 1.2681000000000497e-05, 1.4180999999995059e-05, 1.2083000000003008e-05, 7.08400000000442e-06, 4.195000000005444e-06, 1.2499999999998623e-05, 1.1666000000000454e-05, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201112 09:53:59.180" endtime="20201112 09:53:59.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.170" endtime="20201112 09:53:59.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.192" endtime="20201112 09:53:59.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.201" endtime="20201112 09:53:59.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.196" endtime="20201112 09:53:59.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.188" endtime="20201112 09:53:59.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:58.666" endtime="20201112 09:53:59.226"></status>
</kw>
<msg timestamp="20201112 09:53:59.226" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.248" endtime="20201112 09:53:59.262"></status>
</kw>
<msg timestamp="20201112 09:53:59.263" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.243" endtime="20201112 09:53:59.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.269" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.265" endtime="20201112 09:53:59.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.272" endtime="20201112 09:53:59.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.236" endtime="20201112 09:53:59.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.231" endtime="20201112 09:53:59.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.295" endtime="20201112 09:53:59.606"></status>
</kw>
<msg timestamp="20201112 09:53:59.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037852056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037864361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.292" endtime="20201112 09:53:59.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037852056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037864361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.613" endtime="20201112 09:53:59.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.626" endtime="20201112 09:53:59.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.284" endtime="20201112 09:53:59.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.280" endtime="20201112 09:53:59.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.644" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:53:59.642" endtime="20201112 09:53:59.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.652" level="INFO">VALUE: [{'time': 0.037852056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037864361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.230499999999718e-05, 'source_diff': 1.230499999999718e-05}, {'time': 0.037871847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.037881847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.037887486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.638999999994787e-06, 'source_diff': 5.638999999994787e-06}, {'time': 0.037902472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4986000000001554e-05, 'source_diff': 1.4986000000001554e-05}, {'time': 0.037913514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.037925417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.037929806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.037935625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.037948111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.037953958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.037956653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.037971236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.037976444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.037991875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.038007278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540299999999717e-05, 'source_diff': 1.540299999999717e-05}, {'time': 0.038018736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.038026903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.167000000003366e-06, 'source_diff': 8.167000000003366e-06}, {'time': 0.038042069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5165999999997015e-05, 'source_diff': 1.5165999999997015e-05}, {'time': 0.038055833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.038062917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.08400000000442e-06, 'source_diff': 7.08400000000442e-06}, {'time': 0.038067319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.038073125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.038075417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.038082736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.038085208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4720000000033604e-06, 'source_diff': 2.4720000000033604e-06}, {'time': 0.038095847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.038105833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.038116875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.038131042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4166999999995489e-05, 'source_diff': 1.4166999999995489e-05}, {'time': 0.03814, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.038146278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.0381565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.038170444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3943999999994905e-05, 'source_diff': 1.3943999999994905e-05}, {'time': 0.038177292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.84800000000374e-06, 'source_diff': 6.84800000000374e-06}, {'time': 0.038189181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.038199389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.038212125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2735999999999303e-05, 'source_diff': 1.2735999999999303e-05}, {'time': 0.038219819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.038230431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0612000000000121e-05, 'source_diff': 1.0612000000000121e-05}, {'time': 0.038243556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.038258778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.038266264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.038273556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.038288764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.038301681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2916999999994239e-05, 'source_diff': 1.2916999999994239e-05}, {'time': 0.038307361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.038315653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.038329403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}]</msg>
<status status="PASS" starttime="20201112 09:53:59.646" endtime="20201112 09:53:59.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.635" endtime="20201112 09:53:59.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:53:59.687" level="INFO">${debug-compressed} = {'diff': [0, 1.230499999999718e-05, 7.486000000000992e-06, 1.0000000000003062e-05, 5.638999999994787e-06, 1.4986000000001554e-05, 1.1042000000002772e-05, 1.1903000000000608e-05, 4.389000000000476e-06,...</msg>
<status status="PASS" starttime="20201112 09:53:59.657" endtime="20201112 09:53:59.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.696" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:53:59.694" endtime="20201112 09:53:59.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.703" level="INFO">VALUE: {'diff': [0, 1.230499999999718e-05, 7.486000000000992e-06, 1.0000000000003062e-05, 5.638999999994787e-06, 1.4986000000001554e-05, 1.1042000000002772e-05, 1.1903000000000608e-05, 4.389000000000476e-06, 5.8189999999971875e-06, 1.2485999999999053e-05, 5.847000000003266e-06, 2.6949999999970053e-06, 1.458299999999857e-05, 5.207999999999602e-06, 1.5431000000003248e-05, 1.540299999999717e-05, 1.1457999999998913e-05, 8.167000000003366e-06, 1.5165999999997015e-05, 1.3763999999999443e-05, 7.08400000000442e-06, 4.402000000000572e-06, 5.805999999997091e-06, 2.29200000000096e-06, 7.318999999998688e-06, 2.4720000000033604e-06, 1.0638999999999788e-05, 9.985999999996553e-06, 1.1042000000002772e-05, 1.4166999999995489e-05, 8.958000000003352e-06, 6.2779999999984515e-06, 1.0222000000004172e-05, 1.3943999999994905e-05, 6.84800000000374e-06, 1.1889000000001038e-05, 1.0207999999997663e-05, 1.2735999999999303e-05, 7.694000000002532e-06, 1.0612000000000121e-05, 1.3124999999995779e-05, 1.5222000000002234e-05, 7.486000000000992e-06, 7.2919999999990215e-06, 1.5208000000002664e-05, 1.2916999999994239e-05, 5.680000000000962e-06, 8.292000000000022e-06, 1.3749999999999873e-05], 'time': [0.037852056, 0.037864361, 0.037871847, 0.037881847, 0.037887486, 0.037902472, 0.037913514, 0.037925417, 0.037929806, 0.037935625, 0.037948111, 0.037953958, 0.037956653, 0.037971236, 0.037976444, 0.037991875, 0.038007278, 0.038018736, 0.038026903, 0.038042069, 0.038055833, 0.038062917, 0.038067319, 0.038073125, 0.038075417, 0.038082736, 0.038085208, 0.038095847, 0.038105833, 0.038116875, 0.038131042, 0.03814, 0.038146278, 0.0381565, 0.038170444, 0.038177292, 0.038189181, 0.038199389, 0.038212125, 0.038219819, 0.038230431, 0.038243556, 0.038258778, 0.038266264, 0.038273556, 0.038288764, 0.038301681, 0.038307361, 0.038315653, 0.038329403], 'sourceeventsource_diff': [0, 1.230499999999718e-05, 7.486000000000992e-06, 1.0000000000003062e-05, 5.638999999994787e-06, 1.4986000000001554e-05, 1.1042000000002772e-05, 1.1903000000000608e-05, 4.389000000000476e-06, 5.8189999999971875e-06, 1.2485999999999053e-05, 5.847000000003266e-06, 2.6949999999970053e-06, 1.458299999999857e-05, 5.207999999999602e-06, 1.5431000000003248e-05, 1.540299999999717e-05, 1.1457999999998913e-05, 8.167000000003366e-06, 1.5165999999997015e-05, 1.3763999999999443e-05, 7.08400000000442e-06, 4.402000000000572e-06, 5.805999999997091e-06, 2.29200000000096e-06, 7.318999999998688e-06, 2.4720000000033604e-06, 1.0638999999999788e-05, 9.985999999996553e-06, 1.1042000000002772e-05, 1.4166999999995489e-05, 8.958000000003352e-06, 6.2779999999984515e-06, 1.0222000000004172e-05, 1.3943999999994905e-05, 6.84800000000374e-06, 1.1889000000001038e-05, 1.0207999999997663e-05, 1.2735999999999303e-05, 7.694000000002532e-06, 1.0612000000000121e-05, 1.3124999999995779e-05, 1.5222000000002234e-05, 7.486000000000992e-06, 7.2919999999990215e-06, 1.5208000000002664e-05, 1.2916999999994239e-05, 5.680000000000962e-06, 8.292000000000022e-06, 1.3749999999999873e-05]}</msg>
<status status="PASS" starttime="20201112 09:53:59.698" endtime="20201112 09:53:59.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.689" endtime="20201112 09:53:59.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:53:59.715" level="INFO">${RESULT} = [{'time': 0.037864361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.230499999999718e-05, 'source_diff': 1.230499999999718e-05}, {'time': 0.037881847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:53:59.708" endtime="20201112 09:53:59.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:53:59.733" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.230499999999718e-05, 1.0000000000003062e-05, 1.4986000000001554e-05, 1.1903000000000608e-05, 5.8189999999971875e-06, 5.847000000003266e-06, 1.458299999999857e-05, 1.5431000000003248e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:53:59.717" endtime="20201112 09:53:59.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.744" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:53:59.741" endtime="20201112 09:53:59.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.749" level="INFO">VALUE: [1.230499999999718e-05, 1.0000000000003062e-05, 1.4986000000001554e-05, 1.1903000000000608e-05, 5.8189999999971875e-06, 5.847000000003266e-06, 1.458299999999857e-05, 1.5431000000003248e-05, 1.1457999999998913e-05, 1.5165999999997015e-05, 7.08400000000442e-06, 5.805999999997091e-06, 7.318999999998688e-06, 1.0638999999999788e-05, 1.1042000000002772e-05, 8.958000000003352e-06, 1.0222000000004172e-05, 6.84800000000374e-06, 1.0207999999997663e-05, 7.694000000002532e-06, 1.3124999999995779e-05, 7.486000000000992e-06, 1.5208000000002664e-05, 5.680000000000962e-06, 1.3749999999999873e-05]</msg>
<status status="PASS" starttime="20201112 09:53:59.746" endtime="20201112 09:53:59.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.735" endtime="20201112 09:53:59.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.758" endtime="20201112 09:53:59.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:53:59.766" endtime="20201112 09:53:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.762" endtime="20201112 09:53:59.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.753" endtime="20201112 09:53:59.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.228" endtime="20201112 09:53:59.792"></status>
</kw>
<msg timestamp="20201112 09:53:59.792" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.813" endtime="20201112 09:53:59.827"></status>
</kw>
<msg timestamp="20201112 09:53:59.828" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.809" endtime="20201112 09:53:59.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:53:59.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:53:59.830" endtime="20201112 09:53:59.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.836" endtime="20201112 09:53:59.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.801" endtime="20201112 09:53:59.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.797" endtime="20201112 09:53:59.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:53:59.860" endtime="20201112 09:54:00.170"></status>
</kw>
<msg timestamp="20201112 09:54:00.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037985514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037991361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:53:59.856" endtime="20201112 09:54:00.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037985514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037991361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.176" endtime="20201112 09:54:00.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.189" endtime="20201112 09:54:00.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.849" endtime="20201112 09:54:00.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.844" endtime="20201112 09:54:00.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.205" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:00.203" endtime="20201112 09:54:00.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.213" level="INFO">VALUE: [{'time': 0.037985514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037991361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.038001833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.038009264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.038013014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.038017389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.038024264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038033472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.207999999996663e-06, 'source_diff': 9.207999999996663e-06}, {'time': 0.038048653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5181000000002998e-05, 'source_diff': 1.5181000000002998e-05}, {'time': 0.038053444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.038068444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.038078667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222999999996707e-05, 'source_diff': 1.0222999999996707e-05}, {'time': 0.038088667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.038098028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.038108236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.038116153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.038125333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.038139069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.038150736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.038160958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.038175333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038183042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.038186639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.038202, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.536099999999846e-05, 'source_diff': 1.536099999999846e-05}, {'time': 0.038205556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.038219292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.038228042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.749999999994873e-06, 'source_diff': 8.749999999994873e-06}, {'time': 0.038231597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.038235361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.038248472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3110999999996209e-05, 'source_diff': 1.3110999999996209e-05}, {'time': 0.038255125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.038266375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.038280333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.038295153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4819999999998723e-05, 'source_diff': 1.4819999999998723e-05}, {'time': 0.038309097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3944000000001844e-05, 'source_diff': 1.3944000000001844e-05}, {'time': 0.038311611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.038318278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666999999994927e-06, 'source_diff': 6.666999999994927e-06}, {'time': 0.038328681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0403000000006046e-05, 'source_diff': 1.0403000000006046e-05}, {'time': 0.038335764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.038345556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.038358486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2929999999994335e-05, 'source_diff': 1.2929999999994335e-05}, {'time': 0.038372653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4167000000002428e-05, 'source_diff': 1.4167000000002428e-05}, {'time': 0.038387444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.038392847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.038398069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.038408278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208999999997137e-05, 'source_diff': 1.0208999999997137e-05}, {'time': 0.038418903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038421611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7080000000040405e-06, 'source_diff': 2.7080000000040405e-06}, {'time': 0.038430569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.038442875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2306000000003592e-05, 'source_diff': 1.2306000000003592e-05}]</msg>
<status status="PASS" starttime="20201112 09:54:00.207" endtime="20201112 09:54:00.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.197" endtime="20201112 09:54:00.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:00.250" level="INFO">${debug-compressed} = {'diff': [0, 5.847000000003266e-06, 1.0471999999997483e-05, 7.431000000002186e-06, 3.7499999999968114e-06, 4.375000000000906e-06, 6.875000000003406e-06, 9.207999999996663e-06, 1.5181000000002998e-05, ...</msg>
<status status="PASS" starttime="20201112 09:54:00.219" endtime="20201112 09:54:00.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.259" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:00.257" endtime="20201112 09:54:00.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.267" level="INFO">VALUE: {'diff': [0, 5.847000000003266e-06, 1.0471999999997483e-05, 7.431000000002186e-06, 3.7499999999968114e-06, 4.375000000000906e-06, 6.875000000003406e-06, 9.207999999996663e-06, 1.5181000000002998e-05, 4.790999999997048e-06, 1.5000000000001124e-05, 1.0222999999996707e-05, 1.0000000000003062e-05, 9.360999999999398e-06, 1.0207999999997663e-05, 7.917000000003116e-06, 9.179999999997523e-06, 1.3736000000000304e-05, 1.1666999999999927e-05, 1.0222000000004172e-05, 1.4374999999997029e-05, 7.709000000001576e-06, 3.597000000001016e-06, 1.536099999999846e-05, 3.55600000000178e-06, 1.3736000000000304e-05, 8.749999999994873e-06, 3.5550000000023063e-06, 3.7640000000033202e-06, 1.3110999999996209e-05, 6.653000000002296e-06, 1.1249999999997373e-05, 1.3958000000001414e-05, 1.4819999999998723e-05, 1.3944000000001844e-05, 2.51400000000207e-06, 6.666999999994927e-06, 1.0403000000006046e-05, 7.0829999999980076e-06, 9.792000000001522e-06, 1.2929999999994335e-05, 1.4167000000002428e-05, 1.479100000000011e-05, 5.403000000001046e-06, 5.221999999999172e-06, 1.0208999999997137e-05, 1.0625000000000218e-05, 2.7080000000040405e-06, 8.957999999996413e-06, 1.2306000000003592e-05], 'time': [0.037985514, 0.037991361, 0.038001833, 0.038009264, 0.038013014, 0.038017389, 0.038024264, 0.038033472, 0.038048653, 0.038053444, 0.038068444, 0.038078667, 0.038088667, 0.038098028, 0.038108236, 0.038116153, 0.038125333, 0.038139069, 0.038150736, 0.038160958, 0.038175333, 0.038183042, 0.038186639, 0.038202, 0.038205556, 0.038219292, 0.038228042, 0.038231597, 0.038235361, 0.038248472, 0.038255125, 0.038266375, 0.038280333, 0.038295153, 0.038309097, 0.038311611, 0.038318278, 0.038328681, 0.038335764, 0.038345556, 0.038358486, 0.038372653, 0.038387444, 0.038392847, 0.038398069, 0.038408278, 0.038418903, 0.038421611, 0.038430569, 0.038442875], 'sourceeventsource_diff': [0, 5.847000000003266e-06, 1.0471999999997483e-05, 7.431000000002186e-06, 3.7499999999968114e-06, 4.375000000000906e-06, 6.875000000003406e-06, 9.207999999996663e-06, 1.5181000000002998e-05, 4.790999999997048e-06, 1.5000000000001124e-05, 1.0222999999996707e-05, 1.0000000000003062e-05, 9.360999999999398e-06, 1.0207999999997663e-05, 7.917000000003116e-06, 9.179999999997523e-06, 1.3736000000000304e-05, 1.1666999999999927e-05, 1.0222000000004172e-05, 1.4374999999997029e-05, 7.709000000001576e-06, 3.597000000001016e-06, 1.536099999999846e-05, 3.55600000000178e-06, 1.3736000000000304e-05, 8.749999999994873e-06, 3.5550000000023063e-06, 3.7640000000033202e-06, 1.3110999999996209e-05, 6.653000000002296e-06, 1.1249999999997373e-05, 1.3958000000001414e-05, 1.4819999999998723e-05, 1.3944000000001844e-05, 2.51400000000207e-06, 6.666999999994927e-06, 1.0403000000006046e-05, 7.0829999999980076e-06, 9.792000000001522e-06, 1.2929999999994335e-05, 1.4167000000002428e-05, 1.479100000000011e-05, 5.403000000001046e-06, 5.221999999999172e-06, 1.0208999999997137e-05, 1.0625000000000218e-05, 2.7080000000040405e-06, 8.957999999996413e-06, 1.2306000000003592e-05]}</msg>
<status status="PASS" starttime="20201112 09:54:00.262" endtime="20201112 09:54:00.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.252" endtime="20201112 09:54:00.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.278" level="INFO">${RESULT} = [{'time': 0.037991361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.038009264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:00.271" endtime="20201112 09:54:00.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:00.296" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.847000000003266e-06, 7.431000000002186e-06, 4.375000000000906e-06, 9.207999999996663e-06, 4.790999999997048e-06, 1.0222999999996707e-05, 9.360999999999398e-06, 7.917000000003116e-06, 1.373...</msg>
<status status="PASS" starttime="20201112 09:54:00.280" endtime="20201112 09:54:00.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.307" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:00.304" endtime="20201112 09:54:00.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.312" level="INFO">VALUE: [5.847000000003266e-06, 7.431000000002186e-06, 4.375000000000906e-06, 9.207999999996663e-06, 4.790999999997048e-06, 1.0222999999996707e-05, 9.360999999999398e-06, 7.917000000003116e-06, 1.3736000000000304e-05, 1.0222000000004172e-05, 7.709000000001576e-06, 1.536099999999846e-05, 1.3736000000000304e-05, 3.5550000000023063e-06, 1.3110999999996209e-05, 1.1249999999997373e-05, 1.4819999999998723e-05, 2.51400000000207e-06, 1.0403000000006046e-05, 9.792000000001522e-06, 1.4167000000002428e-05, 5.403000000001046e-06, 1.0208999999997137e-05, 2.7080000000040405e-06, 1.2306000000003592e-05]</msg>
<status status="PASS" starttime="20201112 09:54:00.309" endtime="20201112 09:54:00.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.298" endtime="20201112 09:54:00.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.321" endtime="20201112 09:54:00.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.329" endtime="20201112 09:54:00.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.325" endtime="20201112 09:54:00.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.316" endtime="20201112 09:54:00.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:59.793" endtime="20201112 09:54:00.354"></status>
</kw>
<msg timestamp="20201112 09:54:00.355" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.376" endtime="20201112 09:54:00.389"></status>
</kw>
<msg timestamp="20201112 09:54:00.391" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.371" endtime="20201112 09:54:00.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.397" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.393" endtime="20201112 09:54:00.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.399" endtime="20201112 09:54:00.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.364" endtime="20201112 09:54:00.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.359" endtime="20201112 09:54:00.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.423" endtime="20201112 09:54:00.737"></status>
</kw>
<msg timestamp="20201112 09:54:00.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037827819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037830931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.419" endtime="20201112 09:54:00.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037827819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037830931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.743" endtime="20201112 09:54:00.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.756" endtime="20201112 09:54:00.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.412" endtime="20201112 09:54:00.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.407" endtime="20201112 09:54:00.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.773" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:00.770" endtime="20201112 09:54:00.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.781" level="INFO">VALUE: [{'time': 0.037827819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037830931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1119999999995596e-06, 'source_diff': 3.1119999999995596e-06}, {'time': 0.037840097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166000000004892e-06, 'source_diff': 9.166000000004892e-06}, {'time': 0.037853236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3138999999995349e-05, 'source_diff': 1.3138999999995349e-05}, {'time': 0.03786575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.037873653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.037884722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1069000000002438e-05, 'source_diff': 1.1069000000002438e-05}, {'time': 0.037893861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037904514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.037919292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.037924903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.037934278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.037938319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0409999999962976e-06, 'source_diff': 4.0409999999962976e-06}, {'time': 0.037943875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.55600000000378e-06, 'source_diff': 5.55600000000378e-06}, {'time': 0.037952403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.037956569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.037959083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999951312e-06, 'source_diff': 2.5139999999951312e-06}, {'time': 0.037964694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.037971167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.037978028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.037985333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305000000006057e-06, 'source_diff': 7.305000000006057e-06}, {'time': 0.037993472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.037999292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.0380145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5208000000002664e-05, 'source_diff': 1.5208000000002664e-05}, {'time': 0.038016833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.038026375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.03804075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038051375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038063889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.038071792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.038078042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.038081597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.038095958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.038102, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.038112667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0667000000005866e-05, 'source_diff': 1.0667000000005866e-05}, {'time': 0.038122222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.554999999994429e-06, 'source_diff': 9.554999999994429e-06}, {'time': 0.038130972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038138694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.038150361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.038161611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.038168694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0830000000049465e-06, 'source_diff': 7.0830000000049465e-06}, {'time': 0.038175556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.861999999996371e-06, 'source_diff': 6.861999999996371e-06}, {'time': 0.0381835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944000000002782e-06, 'source_diff': 7.944000000002782e-06}, {'time': 0.038188278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.038202847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.038213903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.038227667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.038235347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.038242028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680999999994497e-06, 'source_diff': 6.680999999994497e-06}, {'time': 0.0382535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1472000000005422e-05, 'source_diff': 1.1472000000005422e-05}]</msg>
<status status="PASS" starttime="20201112 09:54:00.775" endtime="20201112 09:54:00.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.764" endtime="20201112 09:54:00.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:00.816" level="INFO">${debug-compressed} = {'diff': [0, 3.1119999999995596e-06, 9.166000000004892e-06, 1.3138999999995349e-05, 1.2513999999998193e-05, 7.903000000003546e-06, 1.1069000000002438e-05, 9.138999999998287e-06, 1.0652999999999357e-05...</msg>
<status status="PASS" starttime="20201112 09:54:00.786" endtime="20201112 09:54:00.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.825" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:00.823" endtime="20201112 09:54:00.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.832" level="INFO">VALUE: {'diff': [0, 3.1119999999995596e-06, 9.166000000004892e-06, 1.3138999999995349e-05, 1.2513999999998193e-05, 7.903000000003546e-06, 1.1069000000002438e-05, 9.138999999998287e-06, 1.0652999999999357e-05, 1.4778000000000013e-05, 5.611000000002586e-06, 9.374999999998967e-06, 4.0409999999962976e-06, 5.55600000000378e-06, 8.528000000000702e-06, 4.165999999999892e-06, 2.5139999999951312e-06, 5.611000000002586e-06, 6.4729999999998955e-06, 6.860999999996897e-06, 7.305000000006057e-06, 8.138999999997287e-06, 5.819999999996661e-06, 1.5208000000002664e-05, 2.333000000000196e-06, 9.542000000001272e-06, 1.4374999999997029e-05, 1.0625000000000218e-05, 1.2513999999998193e-05, 7.903000000003546e-06, 6.249999999999312e-06, 3.5550000000023063e-06, 1.4360999999997459e-05, 6.041999999997771e-06, 1.0667000000005866e-05, 9.554999999994429e-06, 8.750000000001812e-06, 7.722000000001672e-06, 1.1666999999999927e-05, 1.1249999999997373e-05, 7.0830000000049465e-06, 6.861999999996371e-06, 7.944000000002782e-06, 4.777999999996951e-06, 1.4568999999999e-05, 1.1056000000002342e-05, 1.3763999999999443e-05, 7.680000000002962e-06, 6.680999999994497e-06, 1.1472000000005422e-05], 'time': [0.037827819, 0.037830931, 0.037840097, 0.037853236, 0.03786575, 0.037873653, 0.037884722, 0.037893861, 0.037904514, 0.037919292, 0.037924903, 0.037934278, 0.037938319, 0.037943875, 0.037952403, 0.037956569, 0.037959083, 0.037964694, 0.037971167, 0.037978028, 0.037985333, 0.037993472, 0.037999292, 0.0380145, 0.038016833, 0.038026375, 0.03804075, 0.038051375, 0.038063889, 0.038071792, 0.038078042, 0.038081597, 0.038095958, 0.038102, 0.038112667, 0.038122222, 0.038130972, 0.038138694, 0.038150361, 0.038161611, 0.038168694, 0.038175556, 0.0381835, 0.038188278, 0.038202847, 0.038213903, 0.038227667, 0.038235347, 0.038242028, 0.0382535], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 3.1119999999995596e-06, 9.166000000004892e-06, 1.3138999999995349e-05, 1.2513999999998193e-05, 7.903000000003546e-06, 1.1069000000002438e-05, 9.138999999998287e-06, 1.0652999999999357e-05, 1.4778000000000013e-05, 5.611000000002586e-06, 9.374999999998967e-06, 4.0409999999962976e-06, 5.55600000000378e-06, 8.528000000000702e-06, 4.165999999999892e-06, 2.5139999999951312e-06, 5.611000000002586e-06, 6.4729999999998955e-06, 6.860999999996897e-06, 7.305000000006057e-06, 8.138999999997287e-06, 5.819999999996661e-06, 1.5208000000002664e-05, 2.333000000000196e-06, 9.542000000001272e-06, 1.4374999999997029e-05, 1.0625000000000218e-05, 1.2513999999998193e-05, 7.903000000003546e-06, 6.249999999999312e-06, 3.5550000000023063e-06, 1.4360999999997459e-05, 6.041999999997771e-06, 1.0667000000005866e-05, 9.554999999994429e-06, 8.750000000001812e-06, 7.722000000001672e-06, 1.1666999999999927e-05, 1.1249999999997373e-05, 7.0830000000049465e-06, 6.861999999996371e-06, 7.944000000002782e-06, 4.777999999996951e-06, 1.4568999999999e-05, 1.1056000000002342e-05, 1.3763999999999443e-05, 7.680000000002962e-06, 6.680999999994497e-06, 1.1472000000005422e-05]}</msg>
<status status="PASS" starttime="20201112 09:54:00.827" endtime="20201112 09:54:00.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.817" endtime="20201112 09:54:00.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:00.844" level="INFO">${RESULT} = [{'time': 0.037830931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1119999999995596e-06, 'source_diff': 3.1119999999995596e-06}, {'time': 0.037853236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:00.836" endtime="20201112 09:54:00.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:00.862" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.1119999999995596e-06, 1.3138999999995349e-05, 7.903000000003546e-06, 9.138999999998287e-06, 1.4778000000000013e-05, 9.374999999998967e-06, 5.55600000000378e-06, 4.165999999999892e-06, 5.61...</msg>
<status status="PASS" starttime="20201112 09:54:00.846" endtime="20201112 09:54:00.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.872" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:00.870" endtime="20201112 09:54:00.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.877" level="INFO">VALUE: [3.1119999999995596e-06, 1.3138999999995349e-05, 7.903000000003546e-06, 9.138999999998287e-06, 1.4778000000000013e-05, 9.374999999998967e-06, 5.55600000000378e-06, 4.165999999999892e-06, 5.611000000002586e-06, 6.860999999996897e-06, 8.138999999997287e-06, 1.5208000000002664e-05, 9.542000000001272e-06, 1.0625000000000218e-05, 7.903000000003546e-06, 3.5550000000023063e-06, 6.041999999997771e-06, 9.554999999994429e-06, 7.722000000001672e-06, 1.1249999999997373e-05, 6.861999999996371e-06, 4.777999999996951e-06, 1.1056000000002342e-05, 7.680000000002962e-06, 1.1472000000005422e-05]</msg>
<status status="PASS" starttime="20201112 09:54:00.874" endtime="20201112 09:54:00.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.864" endtime="20201112 09:54:00.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.886" endtime="20201112 09:54:00.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:00.894" endtime="20201112 09:54:00.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.890" endtime="20201112 09:54:00.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.882" endtime="20201112 09:54:00.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.356" endtime="20201112 09:54:00.920"></status>
</kw>
<msg timestamp="20201112 09:54:00.920" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.942" endtime="20201112 09:54:00.955"></status>
</kw>
<msg timestamp="20201112 09:54:00.956" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.937" endtime="20201112 09:54:00.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:00.962" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:00.958" endtime="20201112 09:54:00.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.965" endtime="20201112 09:54:00.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.929" endtime="20201112 09:54:00.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.925" endtime="20201112 09:54:00.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:00.988" endtime="20201112 09:54:01.271"></status>
</kw>
<msg timestamp="20201112 09:54:01.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037953347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037961444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:00.985" endtime="20201112 09:54:01.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037953347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037961444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.274" endtime="20201112 09:54:01.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.279" endtime="20201112 09:54:01.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.977" endtime="20201112 09:54:01.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.973" endtime="20201112 09:54:01.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.287" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:01.286" endtime="20201112 09:54:01.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.291" level="INFO">VALUE: [{'time': 0.037953347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037961444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037976444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.037985208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.037993528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.038005819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2291000000004548e-05, 'source_diff': 1.2291000000004548e-05}, {'time': 0.038010403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583999999994981e-06, 'source_diff': 4.583999999994981e-06}, {'time': 0.038021653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.038028528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.038032069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.038039806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.737000000000716e-06, 'source_diff': 7.737000000000716e-06}, {'time': 0.038053111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.330499999999818e-05, 'source_diff': 1.330499999999818e-05}, {'time': 0.038063764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.038071458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.03807875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.038086264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.038100625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.03810875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.038123764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.038133333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.038144375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.038158139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.038162319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.038168958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.038183153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4194999999994629e-05, 'source_diff': 1.4194999999994629e-05}, {'time': 0.038188972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8190000000041264e-06, 'source_diff': 5.8190000000041264e-06}, {'time': 0.038191667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.038202514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.038213347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.038222111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.038232375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0263999999995943e-05, 'source_diff': 1.0263999999995943e-05}, {'time': 0.038238764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.038250639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.038256903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038259819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.038270875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.038282722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999995389e-05, 'source_diff': 1.1846999999995389e-05}, {'time': 0.038293778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1056000000002342e-05, 'source_diff': 1.1056000000002342e-05}, {'time': 0.038303639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.038311056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.038315653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.038318569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.038331069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2500000000005562e-05, 'source_diff': 1.2500000000005562e-05}, {'time': 0.038341069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.038346694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.038353167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.038357347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.038372111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.038383778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.038388153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}]</msg>
<status status="PASS" starttime="20201112 09:54:01.288" endtime="20201112 09:54:01.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.283" endtime="20201112 09:54:01.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:01.307" level="INFO">${debug-compressed} = {'diff': [0, 8.096999999998578e-06, 1.5000000000001124e-05, 8.764000000001382e-06, 8.319999999999161e-06, 1.2291000000004548e-05, 4.583999999994981e-06, 1.1250000000004312e-05, 6.874999999996467e-06, ...</msg>
<status status="PASS" starttime="20201112 09:54:01.294" endtime="20201112 09:54:01.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.311" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:01.310" endtime="20201112 09:54:01.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.316" level="INFO">VALUE: {'diff': [0, 8.096999999998578e-06, 1.5000000000001124e-05, 8.764000000001382e-06, 8.319999999999161e-06, 1.2291000000004548e-05, 4.583999999994981e-06, 1.1250000000004312e-05, 6.874999999996467e-06, 3.5410000000027364e-06, 7.737000000000716e-06, 1.330499999999818e-05, 1.0652999999999357e-05, 7.694000000002532e-06, 7.2919999999990215e-06, 7.514000000000132e-06, 1.4360999999997459e-05, 8.124999999997717e-06, 1.5014000000000693e-05, 9.569000000000938e-06, 1.1042000000002772e-05, 1.3763999999999443e-05, 4.179999999999462e-06, 6.639000000002726e-06, 1.4194999999994629e-05, 5.8190000000041264e-06, 2.6949999999970053e-06, 1.0847000000001328e-05, 1.0833000000001758e-05, 8.764000000001382e-06, 1.0263999999995943e-05, 6.389000000002476e-06, 1.1875000000001468e-05, 6.2639999999988816e-06, 2.915999999998642e-06, 1.1056000000002342e-05, 1.1846999999995389e-05, 1.1056000000002342e-05, 9.860999999999898e-06, 7.417000000002616e-06, 4.596999999995077e-06, 2.915999999998642e-06, 1.2500000000005562e-05, 9.999999999996123e-06, 5.625000000002156e-06, 6.4729999999998955e-06, 4.179999999999462e-06, 1.4764000000000443e-05, 1.1666999999999927e-05, 4.375000000000906e-06], 'time': [0.037953347, 0.037961444, 0.037976444, 0.037985208, 0.037993528, 0.038005819, 0.038010403, 0.038021653, 0.038028528, 0.038032069, 0.038039806, 0.038053111, 0.038063764, 0.038071458, 0.03807875, 0.038086264, 0.038100625, 0.03810875, 0.038123764, 0.038133333, 0.038144375, 0.038158139, 0.038162319, 0.038168958, 0.038183153, 0.038188972, 0.038191667, 0.038202514, 0.038213347, 0.038222111, 0.038232375, 0.038238764, 0.038250639, 0.038256903, 0.038259819, 0.038270875, 0.038282722, 0.038293778, 0.038303639, 0.038311056, 0.038315653, 0.038318569, 0.038331069, 0.038341069, 0.038346694, 0.038353167, 0.038357347, 0.038372111, 0.038383778, 0.038388153], 'sourceeventsource_diff': [0, 8.096999999998578e-06, 1.5000000000001124e-05, 8.764000000001382e-06, 8.319999999999161e-06, 1.2291000000004548e-05, 4.583999999994981e-06, 1.1250000000004312e-05, 6.874999999996467e-06, 3.5410000000027364e-06, 7.737000000000716e-06, 1.330499999999818e-05, 1.0652999999999357e-05, 7.694000000002532e-06, 7.2919999999990215e-06, 7.514000000000132e-06, 1.4360999999997459e-05, 8.124999999997717e-06, 1.5014000000000693e-05, 9.569000000000938e-06, 1.1042000000002772e-05, 1.3763999999999443e-05, 4.179999999999462e-06, 6.639000000002726e-06, 1.4194999999994629e-05, 5.8190000000041264e-06, 2.6949999999970053e-06, 1.0847000000001328e-05, 1.0833000000001758e-05, 8.764000000001382e-06, 1.0263999999995943e-05, 6.389000000002476e-06, 1.1875000000001468e-05, 6.2639999999988816e-06, 2.915999999998642e-06, 1.1056000000002342e-05, 1.1846999999995389e-05, 1.1056000000002342e-05, 9.860999999999898e-06, 7.417000000002616e-06, 4.596999999995077e-06, 2.915999999998642e-06, 1.2500000000005562e-05, 9.999999999996123e-06, 5.625000000002156e-06, 6.4729999999998955e-06, 4.179999999999462e-06, 1.4764000000000443e-05, 1.1666999999999927e-05, 4.375000000000906e-06]}</msg>
<status status="PASS" starttime="20201112 09:54:01.312" endtime="20201112 09:54:01.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.308" endtime="20201112 09:54:01.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.327" level="INFO">${RESULT} = [{'time': 0.037961444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037985208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:01.320" endtime="20201112 09:54:01.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:01.346" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.096999999998578e-06, 8.764000000001382e-06, 1.2291000000004548e-05, 1.1250000000004312e-05, 3.5410000000027364e-06, 1.330499999999818e-05, 7.694000000002532e-06, 7.514000000000132e-06, 8.1...</msg>
<status status="PASS" starttime="20201112 09:54:01.329" endtime="20201112 09:54:01.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.356" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:01.354" endtime="20201112 09:54:01.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.361" level="INFO">VALUE: [8.096999999998578e-06, 8.764000000001382e-06, 1.2291000000004548e-05, 1.1250000000004312e-05, 3.5410000000027364e-06, 1.330499999999818e-05, 7.694000000002532e-06, 7.514000000000132e-06, 8.124999999997717e-06, 9.569000000000938e-06, 1.3763999999999443e-05, 6.639000000002726e-06, 5.8190000000041264e-06, 1.0847000000001328e-05, 8.764000000001382e-06, 6.389000000002476e-06, 6.2639999999988816e-06, 1.1056000000002342e-05, 1.1056000000002342e-05, 7.417000000002616e-06, 2.915999999998642e-06, 9.999999999996123e-06, 6.4729999999998955e-06, 1.4764000000000443e-05, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201112 09:54:01.358" endtime="20201112 09:54:01.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.347" endtime="20201112 09:54:01.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.370" endtime="20201112 09:54:01.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.378" endtime="20201112 09:54:01.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.374" endtime="20201112 09:54:01.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.366" endtime="20201112 09:54:01.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:00.921" endtime="20201112 09:54:01.407"></status>
</kw>
<msg timestamp="20201112 09:54:01.408" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.432" endtime="20201112 09:54:01.451"></status>
</kw>
<msg timestamp="20201112 09:54:01.452" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.427" endtime="20201112 09:54:01.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.462" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:01.456" endtime="20201112 09:54:01.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.464" endtime="20201112 09:54:01.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.418" endtime="20201112 09:54:01.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.413" endtime="20201112 09:54:01.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.493" endtime="20201112 09:54:01.813"></status>
</kw>
<msg timestamp="20201112 09:54:01.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043901611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.489" endtime="20201112 09:54:01.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043901611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:01.819" endtime="20201112 09:54:01.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.832" endtime="20201112 09:54:01.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.480" endtime="20201112 09:54:01.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.475" endtime="20201112 09:54:01.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.848" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:01.846" endtime="20201112 09:54:01.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.856" level="INFO">VALUE: [{'time': 0.043894528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043901611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.043910986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.043924319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3333000000004258e-05, 'source_diff': 1.3333000000004258e-05}, {'time': 0.043932444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.043946847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4402999999996169e-05, 'source_diff': 1.4402999999996169e-05}, {'time': 0.043955597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.043964542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.043969139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999995077e-06, 'source_diff': 4.596999999995077e-06}, {'time': 0.04397725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.111000000005086e-06, 'source_diff': 8.111000000005086e-06}, {'time': 0.043987889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.043993083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.044001847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.044011, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.153000000004796e-06, 'source_diff': 9.153000000004796e-06}, {'time': 0.044016431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.044026625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.044029806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.044038306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.044051431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.044063931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.044075389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.044084222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.044097694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.044106222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.044111847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.044118764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.916999999995177e-06, 'source_diff': 6.916999999995177e-06}, {'time': 0.044123944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.044135597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.044142903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.044147472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.044149986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.044161847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1860999999994959e-05, 'source_diff': 1.1860999999994959e-05}, {'time': 0.044170806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.959000000002826e-06, 'source_diff': 8.959000000002826e-06}, {'time': 0.044183931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.044195819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1887999999994625e-05, 'source_diff': 1.1887999999994625e-05}, {'time': 0.044204625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.044207486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.044215222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.044230611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5389000000004538e-05, 'source_diff': 1.5389000000004538e-05}, {'time': 0.044236236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.044239153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}, {'time': 0.044241444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2909999999945474e-06, 'source_diff': 2.2909999999945474e-06}, {'time': 0.044249153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.044260833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.044270417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.044272903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.044275819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.044288944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.044293111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1670000000063045e-06, 'source_diff': 4.1670000000063045e-06}, {'time': 0.044305611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}]</msg>
<status status="PASS" starttime="20201112 09:54:01.850" endtime="20201112 09:54:01.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.840" endtime="20201112 09:54:01.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:01.893" level="INFO">${debug-compressed} = {'diff': [0, 7.0829999999980076e-06, 9.374999999998967e-06, 1.3333000000004258e-05, 8.124999999997717e-06, 1.4402999999996169e-05, 8.750000000001812e-06, 8.945000000003256e-06, 4.596999999995077e-06, ...</msg>
<status status="PASS" starttime="20201112 09:54:01.862" endtime="20201112 09:54:01.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.902" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:01.900" endtime="20201112 09:54:01.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.909" level="INFO">VALUE: {'diff': [0, 7.0829999999980076e-06, 9.374999999998967e-06, 1.3333000000004258e-05, 8.124999999997717e-06, 1.4402999999996169e-05, 8.750000000001812e-06, 8.945000000003256e-06, 4.596999999995077e-06, 8.111000000005086e-06, 1.0638999999999788e-05, 5.194000000000032e-06, 8.763999999994443e-06, 9.153000000004796e-06, 5.431000000000186e-06, 1.0193999999998093e-05, 3.1809999999979355e-06, 8.500000000001562e-06, 1.3125000000002718e-05, 1.2499999999998623e-05, 1.1457999999998913e-05, 8.832999999999758e-06, 1.3472000000000484e-05, 8.528000000000702e-06, 5.625000000002156e-06, 6.916999999995177e-06, 5.180000000000462e-06, 1.1653000000000358e-05, 7.305999999998591e-06, 4.569000000002876e-06, 2.51400000000207e-06, 1.1860999999994959e-05, 8.959000000002826e-06, 1.3125000000002718e-05, 1.1887999999994625e-05, 8.806000000000092e-06, 2.860999999999836e-06, 7.736000000001242e-06, 1.5389000000004538e-05, 5.624999999995217e-06, 2.9170000000050544e-06, 2.2909999999945474e-06, 7.709000000001576e-06, 1.1680000000000024e-05, 9.583999999999981e-06, 2.4860000000029303e-06, 2.915999999998642e-06, 1.3124999999995779e-05, 4.1670000000063045e-06, 1.2499999999998623e-05], 'time': [0.043894528, 0.043901611, 0.043910986, 0.043924319, 0.043932444, 0.043946847, 0.043955597, 0.043964542, 0.043969139, 0.04397725, 0.043987889, 0.043993083, 0.044001847, 0.044011, 0.044016431, 0.044026625, 0.044029806, 0.044038306, 0.044051431, 0.044063931, 0.044075389, 0.044084222, 0.044097694, 0.044106222, 0.044111847, 0.044118764, 0.044123944, 0.044135597, 0.044142903, 0.044147472, 0.044149986, 0.044161847, 0.044170806, 0.044183931, 0.044195819, 0.044204625, 0.044207486, 0.044215222, 0.044230611, 0.044236236, 0.044239153, 0.044241444, 0.044249153, 0.044260833, 0.044270417, 0.044272903, 0.044275819, 0.044288944, 0.044293111, 0.044305611], 'sourceeventsource_diff': [0, 7.0829999999980076e-06, 9.374999999998967e-06, 1.3333000000004258e-05, 8.124999999997717e-06, 1.4402999999996169e-05, 8.750000000001812e-06, 8.945000000003256e-06, 4.596999999995077e-06, 8.111000000005086e-06, 1.0638999999999788e-05, 5.194000000000032e-06, 8.763999999994443e-06, 9.153000000004796e-06, 5.431000000000186e-06, 1.0193999999998093e-05, 3.1809999999979355e-06, 8.500000000001562e-06, 1.3125000000002718e-05, 1.2499999999998623e-05, 1.1457999999998913e-05, 8.832999999999758e-06, 1.3472000000000484e-05, 8.528000000000702e-06, 5.625000000002156e-06, 6.916999999995177e-06, 5.180000000000462e-06, 1.1653000000000358e-05, 7.305999999998591e-06, 4.569000000002876e-06, 2.51400000000207e-06, 1.1860999999994959e-05, 8.959000000002826e-06, 1.3125000000002718e-05, 1.1887999999994625e-05, 8.806000000000092e-06, 2.860999999999836e-06, 7.736000000001242e-06, 1.5389000000004538e-05, 5.624999999995217e-06, 2.9170000000050544e-06, 2.2909999999945474e-06, 7.709000000001576e-06, 1.1680000000000024e-05, 9.583999999999981e-06, 2.4860000000029303e-06, 2.915999999998642e-06, 1.3124999999995779e-05, 4.1670000000063045e-06, 1.2499999999998623e-05]}</msg>
<status status="PASS" starttime="20201112 09:54:01.904" endtime="20201112 09:54:01.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.895" endtime="20201112 09:54:01.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:01.921" level="INFO">${RESULT} = [{'time': 0.043901611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.043924319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:01.913" endtime="20201112 09:54:01.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:01.939" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.0829999999980076e-06, 1.3333000000004258e-05, 1.4402999999996169e-05, 8.945000000003256e-06, 8.111000000005086e-06, 5.194000000000032e-06, 9.153000000004796e-06, 1.0193999999998093e-05, 8....</msg>
<status status="PASS" starttime="20201112 09:54:01.923" endtime="20201112 09:54:01.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.949" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:01.947" endtime="20201112 09:54:01.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:01.954" level="INFO">VALUE: [7.0829999999980076e-06, 1.3333000000004258e-05, 1.4402999999996169e-05, 8.945000000003256e-06, 8.111000000005086e-06, 5.194000000000032e-06, 9.153000000004796e-06, 1.0193999999998093e-05, 8.500000000001562e-06, 1.2499999999998623e-05, 8.832999999999758e-06, 8.528000000000702e-06, 6.916999999995177e-06, 1.1653000000000358e-05, 4.569000000002876e-06, 1.1860999999994959e-05, 1.3125000000002718e-05, 8.806000000000092e-06, 7.736000000001242e-06, 5.624999999995217e-06, 2.2909999999945474e-06, 1.1680000000000024e-05, 2.4860000000029303e-06, 1.3124999999995779e-05, 1.2499999999998623e-05]</msg>
<status status="PASS" starttime="20201112 09:54:01.952" endtime="20201112 09:54:01.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.941" endtime="20201112 09:54:01.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:01.964" endtime="20201112 09:54:01.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:01.972" endtime="20201112 09:54:01.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.967" endtime="20201112 09:54:01.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.959" endtime="20201112 09:54:01.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.409" endtime="20201112 09:54:01.997"></status>
</kw>
<msg timestamp="20201112 09:54:01.998" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.019" endtime="20201112 09:54:02.033"></status>
</kw>
<msg timestamp="20201112 09:54:02.034" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.014" endtime="20201112 09:54:02.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.036" endtime="20201112 09:54:02.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.043" endtime="20201112 09:54:02.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.007" endtime="20201112 09:54:02.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.003" endtime="20201112 09:54:02.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.066" endtime="20201112 09:54:02.389"></status>
</kw>
<msg timestamp="20201112 09:54:02.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038486319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038501333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.063" endtime="20201112 09:54:02.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038486319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038501333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.395" endtime="20201112 09:54:02.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.408" endtime="20201112 09:54:02.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.055" endtime="20201112 09:54:02.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.051" endtime="20201112 09:54:02.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.424" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:02.422" endtime="20201112 09:54:02.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.432" level="INFO">VALUE: [{'time': 0.038486319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038501333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.038512778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.038528222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5444000000003344e-05, 'source_diff': 1.5444000000003344e-05}, {'time': 0.038537569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.038546111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038561333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5222000000002234e-05, 'source_diff': 1.5222000000002234e-05}, {'time': 0.038570903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569999999993473e-06, 'source_diff': 9.569999999993473e-06}, {'time': 0.038576319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.038579028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.709000000003514e-06, 'source_diff': 2.709000000003514e-06}, {'time': 0.038587569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.038596556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.986999999995027e-06, 'source_diff': 8.986999999995027e-06}, {'time': 0.038601125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.038611958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.038625083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3124999999995779e-05, 'source_diff': 1.3124999999995779e-05}, {'time': 0.038628625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.038639458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.038646958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.038660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.038676125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5207999999995725e-05, 'source_diff': 1.5207999999995725e-05}, {'time': 0.038691556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5431000000003248e-05, 'source_diff': 1.5431000000003248e-05}, {'time': 0.03870675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5193999999996155e-05, 'source_diff': 1.5193999999996155e-05}, {'time': 0.038719903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.038728014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.038736139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.038749681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.038762181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.038773653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.038787181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.038796347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.166000000004892e-06, 'source_diff': 9.166000000004892e-06}, {'time': 0.038803222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.038809486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038820722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1236000000004742e-05, 'source_diff': 1.1236000000004742e-05}, {'time': 0.0388295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.038838639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.038840944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.038843639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.038846792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.038851375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.038865736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.038872611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.038875111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.038888653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3542000000005272e-05, 'source_diff': 1.3542000000005272e-05}, {'time': 0.038898444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.79099999999511e-06, 'source_diff': 9.79099999999511e-06}, {'time': 0.038900944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.03890325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.038917403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.038930736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.333299999999732e-05, 'source_diff': 1.333299999999732e-05}, {'time': 0.038939486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038946792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}]</msg>
<status status="PASS" starttime="20201112 09:54:02.426" endtime="20201112 09:54:02.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.416" endtime="20201112 09:54:02.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:02.467" level="INFO">${debug-compressed} = {'diff': [0, 1.5014000000000693e-05, 1.1444999999998817e-05, 1.5444000000003344e-05, 9.346999999999828e-06, 8.542000000000272e-06, 1.5222000000002234e-05, 9.569999999993473e-06, 5.416000000001142e-06,...</msg>
<status status="PASS" starttime="20201112 09:54:02.437" endtime="20201112 09:54:02.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.476" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:02.474" endtime="20201112 09:54:02.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.483" level="INFO">VALUE: {'diff': [0, 1.5014000000000693e-05, 1.1444999999998817e-05, 1.5444000000003344e-05, 9.346999999999828e-06, 8.542000000000272e-06, 1.5222000000002234e-05, 9.569999999993473e-06, 5.416000000001142e-06, 2.709000000003514e-06, 8.541000000000798e-06, 8.986999999995027e-06, 4.569000000002876e-06, 1.0833000000001758e-05, 1.3124999999995779e-05, 3.54200000000221e-06, 1.0833000000001758e-05, 7.500000000000562e-06, 1.3959000000000887e-05, 1.5207999999995725e-05, 1.5431000000003248e-05, 1.5193999999996155e-05, 1.3153000000001858e-05, 8.110999999998147e-06, 8.125000000004656e-06, 1.3541999999998333e-05, 1.2499999999998623e-05, 1.1471999999998483e-05, 1.3527999999998763e-05, 9.166000000004892e-06, 6.874999999996467e-06, 6.2639999999988816e-06, 1.1236000000004742e-05, 8.778000000000952e-06, 9.138999999998287e-06, 2.305000000001056e-06, 2.6949999999970053e-06, 3.1529999999987957e-06, 4.583000000002446e-06, 1.4360999999997459e-05, 6.875000000003406e-06, 2.4999999999955613e-06, 1.3542000000005272e-05, 9.79099999999511e-06, 2.5000000000025002e-06, 2.30600000000053e-06, 1.4153000000002858e-05, 1.333299999999732e-05, 8.750000000001812e-06, 7.305999999998591e-06], 'time': [0.038486319, 0.038501333, 0.038512778, 0.038528222, 0.038537569, 0.038546111, 0.038561333, 0.038570903, 0.038576319, 0.038579028, 0.038587569, 0.038596556, 0.038601125, 0.038611958, 0.038625083, 0.038628625, 0.038639458, 0.038646958, 0.038660917, 0.038676125, 0.038691556, 0.03870675, 0.038719903, 0.038728014, 0.038736139, 0.038749681, 0.038762181, 0.038773653, 0.038787181, 0.038796347, 0.038803222, 0.038809486, 0.038820722, 0.0388295, 0.038838639, 0.038840944, 0.038843639, 0.038846792, 0.038851375, 0.038865736, 0.038872611, 0.038875111, 0.038888653, 0.038898444, 0.038900944, 0.03890325, 0.038917403, 0.038930736, 0.038939486, 0.038946792], 'sourceeventsource_diff': [0, 1.5014000000000693e-05, 1.1444999999998817e-05, 1.5444000000003344e-05, 9.346999999999828e-06, 8.542000000000272e-06, 1.5222000000002234e-05, 9.569999999993473e-06, 5.416000000001142e-06, 2.709000000003514e-06, 8.541000000000798e-06, 8.986999999995027e-06, 4.569000000002876e-06, 1.0833000000001758e-05, 1.3124999999995779e-05, 3.54200000000221e-06, 1.0833000000001758e-05, 7.500000000000562e-06, 1.3959000000000887e-05, 1.5207999999995725e-05, 1.5431000000003248e-05, 1.5193999999996155e-05, 1.3153000000001858e-05, 8.110999999998147e-06, 8.125000000004656e-06, 1.3541999999998333e-05, 1.2499999999998623e-05, 1.1471999999998483e-05, 1.3527999999998763e-05, 9.166000000004892e-06, 6.874999999996467e-06, 6.2639999999988816e-06, 1.1236000000004742e-05, 8.778000000000952e-06, 9.138999999998287e-06, 2.305000000001056e-06, 2.6949999999970053e-06, 3.1529999999987957e-06, 4.583000000002446e-06, 1.4360999999997459e-05, 6.875000000003406e-06, 2.4999999999955613e-06, 1.3542000000005272e-05, 9.79099999999511e-06, 2.5000000000025002e-06, 2.30600000000053e-06, 1.4153000000002858e-05, 1.333299999999732e-05, 8.750000000001812e-06, 7.305999999998591e-06]}</msg>
<status status="PASS" starttime="20201112 09:54:02.479" endtime="20201112 09:54:02.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.469" endtime="20201112 09:54:02.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:02.495" level="INFO">${RESULT} = [{'time': 0.038501333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.038528222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:02.488" endtime="20201112 09:54:02.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:02.513" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5014000000000693e-05, 1.5444000000003344e-05, 8.542000000000272e-06, 9.569999999993473e-06, 2.709000000003514e-06, 8.986999999995027e-06, 1.0833000000001758e-05, 3.54200000000221e-06, 7.50...</msg>
<status status="PASS" starttime="20201112 09:54:02.497" endtime="20201112 09:54:02.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.524" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:02.521" endtime="20201112 09:54:02.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.529" level="INFO">VALUE: [1.5014000000000693e-05, 1.5444000000003344e-05, 8.542000000000272e-06, 9.569999999993473e-06, 2.709000000003514e-06, 8.986999999995027e-06, 1.0833000000001758e-05, 3.54200000000221e-06, 7.500000000000562e-06, 1.5207999999995725e-05, 1.5193999999996155e-05, 8.110999999998147e-06, 1.3541999999998333e-05, 1.1471999999998483e-05, 9.166000000004892e-06, 6.2639999999988816e-06, 8.778000000000952e-06, 2.305000000001056e-06, 3.1529999999987957e-06, 1.4360999999997459e-05, 2.4999999999955613e-06, 9.79099999999511e-06, 2.30600000000053e-06, 1.333299999999732e-05, 7.305999999998591e-06]</msg>
<status status="PASS" starttime="20201112 09:54:02.526" endtime="20201112 09:54:02.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.515" endtime="20201112 09:54:02.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.538" endtime="20201112 09:54:02.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:02.546" endtime="20201112 09:54:02.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.542" endtime="20201112 09:54:02.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.533" endtime="20201112 09:54:02.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:01.999" endtime="20201112 09:54:02.572"></status>
</kw>
<msg timestamp="20201112 09:54:02.572" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.593" endtime="20201112 09:54:02.607"></status>
</kw>
<msg timestamp="20201112 09:54:02.608" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.588" endtime="20201112 09:54:02.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.614" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:02.610" endtime="20201112 09:54:02.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.617" endtime="20201112 09:54:02.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.581" endtime="20201112 09:54:02.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.577" endtime="20201112 09:54:02.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.640" endtime="20201112 09:54:02.961"></status>
</kw>
<msg timestamp="20201112 09:54:02.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038153361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038163972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.636" endtime="20201112 09:54:02.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038153361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038163972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:02.967" endtime="20201112 09:54:02.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:02.980" endtime="20201112 09:54:02.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.629" endtime="20201112 09:54:02.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.625" endtime="20201112 09:54:02.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:02.996" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:54:02.994" endtime="20201112 09:54:02.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.004" level="INFO">VALUE: [{'time': 0.038153361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038163972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.038177944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.038189389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.038198153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.038203764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.038218153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4388999999996599e-05, 'source_diff': 1.4388999999996599e-05}, {'time': 0.038233153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.038238153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.038240861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7080000000040405e-06, 'source_diff': 2.7080000000040405e-06}, {'time': 0.038245444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.038259819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.038265861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.038278792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2931000000000747e-05, 'source_diff': 1.2931000000000747e-05}, {'time': 0.038286694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902000000004072e-06, 'source_diff': 7.902000000004072e-06}, {'time': 0.038292167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.038296694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.038299194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.038306722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.03831525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.038321708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.038336903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5194999999995629e-05, 'source_diff': 1.5194999999995629e-05}, {'time': 0.038339194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.038349819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038352319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.038366292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.038369667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.0383815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1832999999995819e-05, 'source_diff': 1.1832999999995819e-05}, {'time': 0.038386708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.038389625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.038404014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.038407333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.038415875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038426708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0832999999994819e-05, 'source_diff': 1.0832999999994819e-05}, {'time': 0.038430056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.038433375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.0384465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.038449625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.038459833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.038474014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.038479833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.038489236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.403000000005046e-06, 'source_diff': 9.403000000005046e-06}, {'time': 0.038497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.038504236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.679999999995023e-06, 'source_diff': 6.679999999995023e-06}, {'time': 0.038511097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000003836e-06, 'source_diff': 6.861000000003836e-06}, {'time': 0.038519444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.038526722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038539222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.038546542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3200000000051e-06, 'source_diff': 7.3200000000051e-06}, {'time': 0.038552347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}]</msg>
<status status="PASS" starttime="20201112 09:54:02.998" endtime="20201112 09:54:03.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.988" endtime="20201112 09:54:03.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:54:03.039" level="INFO">${debug-compressed} = {'diff': [0, 1.0611000000000648e-05, 1.3972000000000984e-05, 1.1444999999998817e-05, 8.764000000001382e-06, 5.611000000002586e-06, 1.4388999999996599e-05, 1.5000000000001124e-05, 4.9999999999980616e-0...</msg>
<status status="PASS" starttime="20201112 09:54:03.010" endtime="20201112 09:54:03.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.048" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:54:03.046" endtime="20201112 09:54:03.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.056" level="INFO">VALUE: {'diff': [0, 1.0611000000000648e-05, 1.3972000000000984e-05, 1.1444999999998817e-05, 8.764000000001382e-06, 5.611000000002586e-06, 1.4388999999996599e-05, 1.5000000000001124e-05, 4.9999999999980616e-06, 2.7080000000040405e-06, 4.583000000002446e-06, 1.4374999999997029e-05, 6.041999999997771e-06, 1.2931000000000747e-05, 7.902000000004072e-06, 5.472999999998895e-06, 4.526999999997228e-06, 2.5000000000025002e-06, 7.527999999999702e-06, 8.528000000000702e-06, 6.458000000000852e-06, 1.5194999999995629e-05, 2.2910000000014863e-06, 1.0625000000000218e-05, 2.5000000000025002e-06, 1.3973000000000457e-05, 3.374999999999906e-06, 1.1832999999995819e-05, 5.207999999999602e-06, 2.9169999999981155e-06, 1.4389000000003538e-05, 3.319000000001626e-06, 8.542000000000272e-06, 1.0832999999994819e-05, 3.3480000000002397e-06, 3.319000000001626e-06, 1.3125000000002718e-05, 3.124999999999656e-06, 1.0207999999997663e-05, 1.4181000000001998e-05, 5.8189999999971875e-06, 9.403000000005046e-06, 8.319999999999161e-06, 6.679999999995023e-06, 6.861000000003836e-06, 8.346999999998828e-06, 7.2779999999994516e-06, 1.2499999999998623e-05, 7.3200000000051e-06, 5.804999999997618e-06], 'time': [0.038153361, 0.038163972, 0.038177944, 0.038189389, 0.038198153, 0.038203764, 0.038218153, 0.038233153, 0.038238153, 0.038240861, 0.038245444, 0.038259819, 0.038265861, 0.038278792, 0.038286694, 0.038292167, 0.038296694, 0.038299194, 0.038306722, 0.03831525, 0.038321708, 0.038336903, 0.038339194, 0.038349819, 0.038352319, 0.038366292, 0.038369667, 0.0383815, 0.038386708, 0.038389625, 0.038404014, 0.038407333, 0.038415875, 0.038426708, 0.038430056, 0.038433375, 0.0384465, 0.038449625, 0.038459833, 0.038474014, 0.038479833, 0.038489236, 0.038497556, 0.038504236, 0.038511097, 0.038519444, 0.038526722, 0.038539222, 0.038546542, 0.038552347], 'sourceeventsource_diff': [0, 1.0611000000000648e-05, 1.3972000000000984e-05, 1.1444999999998817e-05, 8.764000000001382e-06, 5.611000000002586e-06, 1.4388999999996599e-05, 1.5000000000001124e-05, 4.9999999999980616e-06, 2.7080000000040405e-06, 4.583000000002446e-06, 1.4374999999997029e-05, 6.041999999997771e-06, 1.2931000000000747e-05, 7.902000000004072e-06, 5.472999999998895e-06, 4.526999999997228e-06, 2.5000000000025002e-06, 7.527999999999702e-06, 8.528000000000702e-06, 6.458000000000852e-06, 1.5194999999995629e-05, 2.2910000000014863e-06, 1.0625000000000218e-05, 2.5000000000025002e-06, 1.3973000000000457e-05, 3.374999999999906e-06, 1.1832999999995819e-05, 5.207999999999602e-06, 2.9169999999981155e-06, 1.4389000000003538e-05, 3.319000000001626e-06, 8.542000000000272e-06, 1.0832999999994819e-05, 3.3480000000002397e-06, 3.319000000001626e-06, 1.3125000000002718e-05, 3.124999999999656e-06, 1.0207999999997663e-05, 1.4181000000001998e-05, 5.8189999999971875e-06, 9.403000000005046e-06, 8.319999999999161e-06, 6.679999999995023e-06, 6.861000000003836e-06, 8.346999999998828e-06, 7.2779999999994516e-06, 1.2499999999998623e-05, 7.3200000000051e-06, 5.804999999997618e-06]}</msg>
<status status="PASS" starttime="20201112 09:54:03.051" endtime="20201112 09:54:03.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.041" endtime="20201112 09:54:03.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.067" level="INFO">${RESULT} = [{'time': 0.038163972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.038189389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:03.060" endtime="20201112 09:54:03.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:03.086" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0611000000000648e-05, 1.1444999999998817e-05, 5.611000000002586e-06, 1.5000000000001124e-05, 2.7080000000040405e-06, 1.4374999999997029e-05, 1.2931000000000747e-05, 5.472999999998895e-06, ...</msg>
<status status="PASS" starttime="20201112 09:54:03.069" endtime="20201112 09:54:03.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.096" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:54:03.094" endtime="20201112 09:54:03.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.101" level="INFO">VALUE: [1.0611000000000648e-05, 1.1444999999998817e-05, 5.611000000002586e-06, 1.5000000000001124e-05, 2.7080000000040405e-06, 1.4374999999997029e-05, 1.2931000000000747e-05, 5.472999999998895e-06, 2.5000000000025002e-06, 8.528000000000702e-06, 1.5194999999995629e-05, 1.0625000000000218e-05, 1.3973000000000457e-05, 1.1832999999995819e-05, 2.9169999999981155e-06, 3.319000000001626e-06, 1.0832999999994819e-05, 3.319000000001626e-06, 3.124999999999656e-06, 1.4181000000001998e-05, 9.403000000005046e-06, 6.679999999995023e-06, 8.346999999998828e-06, 1.2499999999998623e-05, 5.804999999997618e-06]</msg>
<status status="PASS" starttime="20201112 09:54:03.098" endtime="20201112 09:54:03.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.088" endtime="20201112 09:54:03.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.110" endtime="20201112 09:54:03.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.118" endtime="20201112 09:54:03.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.114" endtime="20201112 09:54:03.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.106" endtime="20201112 09:54:03.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:02.573" endtime="20201112 09:54:03.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:53:52.053" endtime="20201112 09:54:03.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.156" endtime="20201112 09:54:03.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.151" endtime="20201112 09:54:03.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.149" endtime="20201112 09:54:03.180"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:53:51.857" endtime="20201112 09:54:03.181" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.201" endtime="20201112 09:54:03.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.197" endtime="20201112 09:54:03.224"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.260" endtime="20201112 09:54:03.281"></status>
</kw>
<msg timestamp="20201112 09:54:03.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.256" endtime="20201112 09:54:03.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.284" endtime="20201112 09:54:03.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.295" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:03.291" endtime="20201112 09:54:03.296"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:03.249" endtime="20201112 09:54:03.297"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:03.242" endtime="20201112 09:54:03.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.239" endtime="20201112 09:54:03.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:03.307" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:03.306" endtime="20201112 09:54:03.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.302" endtime="20201112 09:54:03.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.238" endtime="20201112 09:54:03.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.236" endtime="20201112 09:54:03.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.311" endtime="20201112 09:54:03.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.232" endtime="20201112 09:54:03.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.226" endtime="20201112 09:54:03.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.194" endtime="20201112 09:54:03.318"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:54:03.323" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.344" endtime="20201112 09:54:03.359"></status>
</kw>
<msg timestamp="20201112 09:54:03.360" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.340" endtime="20201112 09:54:03.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.366" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.362" endtime="20201112 09:54:03.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.368" endtime="20201112 09:54:03.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.332" endtime="20201112 09:54:03.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.328" endtime="20201112 09:54:03.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.393" endtime="20201112 09:54:03.745"></status>
</kw>
<msg timestamp="20201112 09:54:03.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134738722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134740431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.390" endtime="20201112 09:54:03.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134738722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134740431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.756" endtime="20201112 09:54:03.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.775" endtime="20201112 09:54:03.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.383" endtime="20201112 09:54:03.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.376" endtime="20201112 09:54:03.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:03.794" level="INFO">${RESULT} = [{'time': 0.134740431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999886363e-06, 'source_diff': 1.7089999999886363e-06}, {'time': 0.134744917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:03.784" endtime="20201112 09:54:03.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:03.826" level="INFO">${OVERHEAD} = {'diff': [1.7089999999886363e-06, 1.6529999999903566e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6670000000107432e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6949999999960053e-06...</msg>
<status status="PASS" starttime="20201112 09:54:03.796" endtime="20201112 09:54:03.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.836" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:03.834" endtime="20201112 09:54:03.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.842" level="INFO">VALUE: [1.7089999999886363e-06, 1.6529999999903566e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6670000000107432e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6949999999960053e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7079999999891626e-06, 1.7080000000169182e-06, 1.6389999999977256e-06, 1.7500000000225668e-06, 1.6939999999965316e-06, 1.6250000000050946e-06, 1.6939999999965316e-06, 1.624999999977339e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7080000000169182e-06, 1.6250000000050946e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7779999999800733e-06, 1.6810000000033742e-06, 1.6810000000033742e-06, 1.7080000000169182e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6949999999960053e-06, 1.6389999999977256e-06, 1.6660000000112696e-06, 1.6949999999960053e-06, 1.7370000000016539e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:54:03.838" endtime="20201112 09:54:03.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.828" endtime="20201112 09:54:03.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.850" endtime="20201112 09:54:03.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:03.859" endtime="20201112 09:54:03.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.854" endtime="20201112 09:54:03.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.846" endtime="20201112 09:54:03.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.324" endtime="20201112 09:54:03.884"></status>
</kw>
<msg timestamp="20201112 09:54:03.885" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.905" endtime="20201112 09:54:03.920"></status>
</kw>
<msg timestamp="20201112 09:54:03.921" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.902" endtime="20201112 09:54:03.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:03.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:03.923" endtime="20201112 09:54:03.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.929" endtime="20201112 09:54:03.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.895" endtime="20201112 09:54:03.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.890" endtime="20201112 09:54:03.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:03.956" endtime="20201112 09:54:04.317"></status>
</kw>
<msg timestamp="20201112 09:54:04.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038205833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038207458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:03.952" endtime="20201112 09:54:04.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038205833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038207458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.328" endtime="20201112 09:54:04.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.348" endtime="20201112 09:54:04.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.945" endtime="20201112 09:54:04.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.939" endtime="20201112 09:54:04.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.367" level="INFO">${RESULT} = [{'time': 0.038207458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.038221167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.357" endtime="20201112 09:54:04.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:04.400" level="INFO">${OVERHEAD} = {'diff': [1.6249999999981557e-06, 1.6950000000029442e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6389999999977256e-06...</msg>
<status status="PASS" starttime="20201112 09:54:04.369" endtime="20201112 09:54:04.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.411" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:04.408" endtime="20201112 09:54:04.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.417" level="INFO">VALUE: [1.6249999999981557e-06, 1.6950000000029442e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6939999999965316e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6809999999964353e-06, 1.6799999999969617e-06, 1.6530000000042344e-06, 1.6799999999969617e-06, 1.6799999999969617e-06, 1.6249999999981557e-06, 1.7080000000030404e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.6939999999965316e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6939999999965316e-06, 1.6530000000042344e-06, 1.6940000000034705e-06, 1.6519999999978219e-06, 1.7079999999961015e-06, 1.6530000000042344e-06, 1.6939999999965316e-06, 1.6519999999978219e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6800000000039006e-06, 1.6389999999977256e-06, 1.6659999999973918e-06, 1.6809999999964353e-06, 1.6799999999969617e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.7089999999955752e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6949999999960053e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201112 09:54:04.413" endtime="20201112 09:54:04.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.402" endtime="20201112 09:54:04.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.426" endtime="20201112 09:54:04.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.436" endtime="20201112 09:54:04.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.431" endtime="20201112 09:54:04.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.421" endtime="20201112 09:54:04.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.886" endtime="20201112 09:54:04.462"></status>
</kw>
<msg timestamp="20201112 09:54:04.463" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.484" endtime="20201112 09:54:04.499"></status>
</kw>
<msg timestamp="20201112 09:54:04.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.480" endtime="20201112 09:54:04.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.507" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.503" endtime="20201112 09:54:04.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.509" endtime="20201112 09:54:04.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.472" endtime="20201112 09:54:04.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.467" endtime="20201112 09:54:04.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.534" endtime="20201112 09:54:04.823"></status>
</kw>
<msg timestamp="20201112 09:54:04.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040077736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040079347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.531" endtime="20201112 09:54:04.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040077736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040079347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.828" endtime="20201112 09:54:04.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.836" endtime="20201112 09:54:04.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.523" endtime="20201112 09:54:04.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.518" endtime="20201112 09:54:04.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:04.845" level="INFO">${RESULT} = [{'time': 0.040079347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.040095681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:04.840" endtime="20201112 09:54:04.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:04.862" level="INFO">${OVERHEAD} = {'diff': [1.6109999999985858e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7079999999961015e-06, 1.76400000000132e-06, 1.6390000000046645e-06, 1.6810000000033742e-06, 1.6950000000029442e-06, ...</msg>
<status status="PASS" starttime="20201112 09:54:04.846" endtime="20201112 09:54:04.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.872" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:04.870" endtime="20201112 09:54:04.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.877" level="INFO">VALUE: [1.6109999999985858e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7079999999961015e-06, 1.76400000000132e-06, 1.6390000000046645e-06, 1.6810000000033742e-06, 1.6950000000029442e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.637999999998252e-06, 1.6110000000055247e-06, 1.6530000000042344e-06, 1.6809999999964353e-06, 1.7079999999961015e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.7500000000017502e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.7360000000021802e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6810000000033742e-06, 1.6940000000034705e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6940000000034705e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6380000000051909e-06, 1.6659999999973918e-06, 1.6940000000034705e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201112 09:54:04.874" endtime="20201112 09:54:04.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.864" endtime="20201112 09:54:04.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.887" endtime="20201112 09:54:04.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:04.895" endtime="20201112 09:54:04.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.891" endtime="20201112 09:54:04.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.882" endtime="20201112 09:54:04.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.464" endtime="20201112 09:54:04.921"></status>
</kw>
<msg timestamp="20201112 09:54:04.921" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.941" endtime="20201112 09:54:04.957"></status>
</kw>
<msg timestamp="20201112 09:54:04.958" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.938" endtime="20201112 09:54:04.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:04.964" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:04.960" endtime="20201112 09:54:04.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.967" endtime="20201112 09:54:04.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.931" endtime="20201112 09:54:04.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.926" endtime="20201112 09:54:04.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:04.990" endtime="20201112 09:54:05.339"></status>
</kw>
<msg timestamp="20201112 09:54:05.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037668833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037670528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:04.987" endtime="20201112 09:54:05.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037668833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037670528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:05.349" endtime="20201112 09:54:05.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.368" endtime="20201112 09:54:05.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.979" endtime="20201112 09:54:05.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.975" endtime="20201112 09:54:05.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.385" level="INFO">${RESULT} = [{'time': 0.037670528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.037674486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:05.376" endtime="20201112 09:54:05.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:05.417" level="INFO">${OVERHEAD} = {'diff': [1.6950000000029442e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.6390000000046645e-06, 1.7080000000030404e-06, 1.5969999999990159e-06, 1.6389999999977256e-06...</msg>
<status status="PASS" starttime="20201112 09:54:05.387" endtime="20201112 09:54:05.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.427" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:05.425" endtime="20201112 09:54:05.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.433" level="INFO">VALUE: [1.6950000000029442e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.6390000000046645e-06, 1.7080000000030404e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6949999999960053e-06, 1.6529999999972955e-06, 1.6939999999965316e-06, 1.77800000000089e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.5699999999993497e-06, 1.6950000000029442e-06, 1.6530000000042344e-06, 1.6950000000029442e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6249999999981557e-06, 1.6809999999964353e-06, 1.6109999999985858e-06, 1.6530000000042344e-06, 1.6949999999960053e-06, 1.7360000000021802e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.5699999999993497e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.637999999998252e-06, 1.7500000000017502e-06, 1.6950000000029442e-06, 1.6809999999964353e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.6809999999964353e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201112 09:54:05.430" endtime="20201112 09:54:05.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.419" endtime="20201112 09:54:05.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.442" endtime="20201112 09:54:05.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.451" endtime="20201112 09:54:05.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.446" endtime="20201112 09:54:05.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.438" endtime="20201112 09:54:05.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:04.923" endtime="20201112 09:54:05.476"></status>
</kw>
<msg timestamp="20201112 09:54:05.477" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.496" endtime="20201112 09:54:05.511"></status>
</kw>
<msg timestamp="20201112 09:54:05.512" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.493" endtime="20201112 09:54:05.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.518" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:05.514" endtime="20201112 09:54:05.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.520" endtime="20201112 09:54:05.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.486" endtime="20201112 09:54:05.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.481" endtime="20201112 09:54:05.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.544" endtime="20201112 09:54:05.886"></status>
</kw>
<msg timestamp="20201112 09:54:05.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03759675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037598444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:05.540" endtime="20201112 09:54:05.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03759675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037598444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:05.895" endtime="20201112 09:54:05.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.914" endtime="20201112 09:54:05.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.533" endtime="20201112 09:54:05.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.528" endtime="20201112 09:54:05.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:05.932" level="INFO">${RESULT} = [{'time': 0.037598444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6940000000034705e-06, 'source_diff': 1.6940000000034705e-06}, {'time': 0.037606681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:05.922" endtime="20201112 09:54:05.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:05.965" level="INFO">${OVERHEAD} = {'diff': [1.6940000000034705e-06, 1.6390000000046645e-06, 1.6809999999964353e-06, 1.6530000000042344e-06, 1.6950000000029442e-06, 1.76400000000132e-06, 1.6940000000034705e-06, 1.6950000000029442e-06, ...</msg>
<status status="PASS" starttime="20201112 09:54:05.934" endtime="20201112 09:54:05.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.976" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:05.973" endtime="20201112 09:54:05.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:05.981" level="INFO">VALUE: [1.6940000000034705e-06, 1.6390000000046645e-06, 1.6809999999964353e-06, 1.6530000000042344e-06, 1.6950000000029442e-06, 1.76400000000132e-06, 1.6940000000034705e-06, 1.6950000000029442e-06, 1.6950000000029442e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.6809999999964353e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6799999999969617e-06, 1.6940000000034705e-06, 1.76400000000132e-06, 1.6249999999981557e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6950000000029442e-06, 1.6390000000046645e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.7359999999952413e-06, 1.7219999999956714e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.6250000000050946e-06, 1.7079999999961015e-06, 1.7500000000017502e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6940000000034705e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201112 09:54:05.978" endtime="20201112 09:54:05.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.967" endtime="20201112 09:54:05.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:05.991" endtime="20201112 09:54:05.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:05.999" endtime="20201112 09:54:06.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.995" endtime="20201112 09:54:06.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.986" endtime="20201112 09:54:06.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:05.478" endtime="20201112 09:54:06.024"></status>
</kw>
<msg timestamp="20201112 09:54:06.025" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.045" endtime="20201112 09:54:06.059"></status>
</kw>
<msg timestamp="20201112 09:54:06.060" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.041" endtime="20201112 09:54:06.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.067" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.063" endtime="20201112 09:54:06.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.069" endtime="20201112 09:54:06.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.034" endtime="20201112 09:54:06.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.029" endtime="20201112 09:54:06.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.092" endtime="20201112 09:54:06.422"></status>
</kw>
<msg timestamp="20201112 09:54:06.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037312472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037314111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.089" endtime="20201112 09:54:06.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037312472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037314111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.431" endtime="20201112 09:54:06.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.450" endtime="20201112 09:54:06.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.082" endtime="20201112 09:54:06.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.077" endtime="20201112 09:54:06.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:06.468" level="INFO">${RESULT} = [{'time': 0.037314111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.037328403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:06.459" endtime="20201112 09:54:06.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:06.500" level="INFO">${OVERHEAD} = {'diff': [1.6389999999977256e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6939999999965316e-06, 1.6800000000039006e-06, 1.6949999999960053e-06...</msg>
<status status="PASS" starttime="20201112 09:54:06.470" endtime="20201112 09:54:06.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.510" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:06.508" endtime="20201112 09:54:06.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.516" level="INFO">VALUE: [1.6389999999977256e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6939999999965316e-06, 1.6800000000039006e-06, 1.6949999999960053e-06, 1.6110000000055247e-06, 1.6669999999968654e-06, 1.6799999999969617e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6809999999964353e-06, 1.6809999999964353e-06, 1.6390000000046645e-06, 1.6939999999965316e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.6940000000034705e-06, 1.6660000000043307e-06, 1.6389999999977256e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.7359999999952413e-06, 1.6939999999965316e-06, 1.6110000000055247e-06, 1.6390000000046645e-06, 1.6950000000029442e-06, 1.7370000000016539e-06, 1.6940000000034705e-06, 1.6939999999965316e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.7089999999955752e-06, 1.7089999999955752e-06, 1.6809999999964353e-06, 1.6250000000050946e-06, 1.6810000000033742e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:54:06.512" endtime="20201112 09:54:06.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.502" endtime="20201112 09:54:06.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.525" endtime="20201112 09:54:06.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:06.533" endtime="20201112 09:54:06.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.529" endtime="20201112 09:54:06.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.520" endtime="20201112 09:54:06.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.026" endtime="20201112 09:54:06.559"></status>
</kw>
<msg timestamp="20201112 09:54:06.559" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.579" endtime="20201112 09:54:06.593"></status>
</kw>
<msg timestamp="20201112 09:54:06.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.576" endtime="20201112 09:54:06.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:06.596" endtime="20201112 09:54:06.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.603" endtime="20201112 09:54:06.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.568" endtime="20201112 09:54:06.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.564" endtime="20201112 09:54:06.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.626" endtime="20201112 09:54:06.958"></status>
</kw>
<msg timestamp="20201112 09:54:06.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037438278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037439958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.623" endtime="20201112 09:54:06.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:06.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037438278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037439958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:06.968" endtime="20201112 09:54:06.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:06.987" endtime="20201112 09:54:06.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.615" endtime="20201112 09:54:06.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.611" endtime="20201112 09:54:06.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.005" level="INFO">${RESULT} = [{'time': 0.037439958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000039006e-06, 'source_diff': 1.6800000000039006e-06}, {'time': 0.037444028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:06.995" endtime="20201112 09:54:07.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:07.036" level="INFO">${OVERHEAD} = {'diff': [1.6800000000039006e-06, 1.6389999999977256e-06, 1.709000000002514e-06, 1.6799999999969617e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6949999999960053e-06,...</msg>
<status status="PASS" starttime="20201112 09:54:07.007" endtime="20201112 09:54:07.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.047" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:07.045" endtime="20201112 09:54:07.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.053" level="INFO">VALUE: [1.6800000000039006e-06, 1.6389999999977256e-06, 1.709000000002514e-06, 1.6799999999969617e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6949999999960053e-06, 1.6659999999973918e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.6809999999964353e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6950000000029442e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6809999999964353e-06, 1.7080000000030404e-06, 1.6390000000046645e-06, 1.709000000002514e-06, 1.6810000000033742e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6940000000034705e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.7629999999949075e-06, 1.6799999999969617e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.5830000000063849e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6949999999960053e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:54:07.050" endtime="20201112 09:54:07.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.038" endtime="20201112 09:54:07.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.063" endtime="20201112 09:54:07.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.071" endtime="20201112 09:54:07.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.066" endtime="20201112 09:54:07.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.058" endtime="20201112 09:54:07.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:06.560" endtime="20201112 09:54:07.096"></status>
</kw>
<msg timestamp="20201112 09:54:07.097" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.116" endtime="20201112 09:54:07.131"></status>
</kw>
<msg timestamp="20201112 09:54:07.132" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.113" endtime="20201112 09:54:07.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.138" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.134" endtime="20201112 09:54:07.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.141" endtime="20201112 09:54:07.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.106" endtime="20201112 09:54:07.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.101" endtime="20201112 09:54:07.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.164" endtime="20201112 09:54:07.494"></status>
</kw>
<msg timestamp="20201112 09:54:07.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037276014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037277722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.161" endtime="20201112 09:54:07.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037276014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037277722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.504" endtime="20201112 09:54:07.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.522" endtime="20201112 09:54:07.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.154" endtime="20201112 09:54:07.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.149" endtime="20201112 09:54:07.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:07.540" level="INFO">${RESULT} = [{'time': 0.037277722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7079999999961015e-06, 'source_diff': 1.7079999999961015e-06}, {'time': 0.037282458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:07.531" endtime="20201112 09:54:07.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:07.571" level="INFO">${OVERHEAD} = {'diff': [1.7079999999961015e-06, 1.6519999999978219e-06, 1.6809999999964353e-06, 1.6389999999977256e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.637999999998252e-06, 1.6519999999978219e-06,...</msg>
<status status="PASS" starttime="20201112 09:54:07.542" endtime="20201112 09:54:07.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.581" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:07.579" endtime="20201112 09:54:07.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.588" level="INFO">VALUE: [1.7079999999961015e-06, 1.6519999999978219e-06, 1.6809999999964353e-06, 1.6389999999977256e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.637999999998252e-06, 1.6519999999978219e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6800000000039006e-06, 1.6529999999972955e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.6249999999981557e-06, 1.6950000000029442e-06, 1.6660000000043307e-06, 1.7359999999952413e-06, 1.6939999999965316e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6799999999969617e-06, 1.6950000000029442e-06, 1.6800000000039006e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.7089999999955752e-06, 1.6109999999985858e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6939999999965316e-06, 1.6809999999964353e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 09:54:07.583" endtime="20201112 09:54:07.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.573" endtime="20201112 09:54:07.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.597" endtime="20201112 09:54:07.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:07.605" endtime="20201112 09:54:07.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.601" endtime="20201112 09:54:07.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.593" endtime="20201112 09:54:07.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.098" endtime="20201112 09:54:07.631"></status>
</kw>
<msg timestamp="20201112 09:54:07.631" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.651" endtime="20201112 09:54:07.666"></status>
</kw>
<msg timestamp="20201112 09:54:07.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.648" endtime="20201112 09:54:07.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:07.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:07.671" endtime="20201112 09:54:07.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.678" endtime="20201112 09:54:07.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.640" endtime="20201112 09:54:07.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.636" endtime="20201112 09:54:07.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:07.707" endtime="20201112 09:54:08.049"></status>
</kw>
<msg timestamp="20201112 09:54:08.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037289514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037291194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:07.703" endtime="20201112 09:54:08.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037289514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037291194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.059" endtime="20201112 09:54:08.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.079" endtime="20201112 09:54:08.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.693" endtime="20201112 09:54:08.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.688" endtime="20201112 09:54:08.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.096" level="INFO">${RESULT} = [{'time': 0.037291194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.037298694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:08.088" endtime="20201112 09:54:08.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:08.111" level="INFO">${OVERHEAD} = {'diff': [1.6799999999969617e-06, 1.7770000000014163e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06...</msg>
<status status="PASS" starttime="20201112 09:54:08.097" endtime="20201112 09:54:08.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.116" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:08.114" endtime="20201112 09:54:08.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.118" level="INFO">VALUE: [1.6799999999969617e-06, 1.7770000000014163e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6809999999964353e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6390000000046645e-06, 1.6940000000034705e-06, 1.6799999999969617e-06, 1.6939999999965316e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6810000000033742e-06, 1.6940000000034705e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.7360000000021802e-06, 1.6810000000033742e-06, 1.6249999999981557e-06, 1.6799999999969617e-06, 1.637999999998252e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6390000000046645e-06, 1.6949999999960053e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.5969999999990159e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.6530000000042344e-06, 1.7500000000017502e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201112 09:54:08.117" endtime="20201112 09:54:08.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.112" endtime="20201112 09:54:08.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.123" endtime="20201112 09:54:08.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.128" endtime="20201112 09:54:08.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.126" endtime="20201112 09:54:08.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.121" endtime="20201112 09:54:08.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:07.632" endtime="20201112 09:54:08.149"></status>
</kw>
<msg timestamp="20201112 09:54:08.149" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.158" endtime="20201112 09:54:08.170"></status>
</kw>
<msg timestamp="20201112 09:54:08.170" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.157" endtime="20201112 09:54:08.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.173" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.172" endtime="20201112 09:54:08.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.174" endtime="20201112 09:54:08.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.154" endtime="20201112 09:54:08.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.151" endtime="20201112 09:54:08.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.186" endtime="20201112 09:54:08.498"></status>
</kw>
<msg timestamp="20201112 09:54:08.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.184" endtime="20201112 09:54:08.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:08.508" endtime="20201112 09:54:08.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.527" endtime="20201112 09:54:08.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.181" endtime="20201112 09:54:08.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.178" endtime="20201112 09:54:08.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:08.545" level="INFO">${RESULT} = [{'time': 0.021785958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.021791333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:08.536" endtime="20201112 09:54:08.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:08.576" level="INFO">${OVERHEAD} = {'diff': [1.639000000001195e-06, 1.6800000000004311e-06, 1.709000000002514e-06, 1.582999999999446e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.65...</msg>
<status status="PASS" starttime="20201112 09:54:08.547" endtime="20201112 09:54:08.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.586" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:08.584" endtime="20201112 09:54:08.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.592" level="INFO">VALUE: [1.639000000001195e-06, 1.6800000000004311e-06, 1.709000000002514e-06, 1.582999999999446e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.653000000000765e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.709000000002514e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.6520000000012913e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.7499999999982807e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.7089999999990446e-06, 1.653000000000765e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.5979999999984895e-06, 1.639000000001195e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201112 09:54:08.588" endtime="20201112 09:54:08.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.578" endtime="20201112 09:54:08.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.601" endtime="20201112 09:54:08.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:08.610" endtime="20201112 09:54:08.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.605" endtime="20201112 09:54:08.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.597" endtime="20201112 09:54:08.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.150" endtime="20201112 09:54:08.635"></status>
</kw>
<msg timestamp="20201112 09:54:08.636" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.657" endtime="20201112 09:54:08.672"></status>
</kw>
<msg timestamp="20201112 09:54:08.673" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.654" endtime="20201112 09:54:08.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:08.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:08.676" endtime="20201112 09:54:08.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.682" endtime="20201112 09:54:08.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.646" endtime="20201112 09:54:08.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.640" endtime="20201112 09:54:08.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:08.707" endtime="20201112 09:54:09.043"></status>
</kw>
<msg timestamp="20201112 09:54:09.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038882, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038883681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:08.703" endtime="20201112 09:54:09.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038882, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038883681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:09.053" endtime="20201112 09:54:09.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.072" endtime="20201112 09:54:09.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.696" endtime="20201112 09:54:09.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.691" endtime="20201112 09:54:09.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.089" level="INFO">${RESULT} = [{'time': 0.038883681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6810000000033742e-06, 'source_diff': 1.6810000000033742e-06}, {'time': 0.038891917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:09.080" endtime="20201112 09:54:09.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:09.120" level="INFO">${OVERHEAD} = {'diff': [1.6810000000033742e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.6799999999969617e-06,...</msg>
<status status="PASS" starttime="20201112 09:54:09.091" endtime="20201112 09:54:09.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:09.128" endtime="20201112 09:54:09.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.139" level="INFO">VALUE: [1.6810000000033742e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6940000000034705e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7089999999955752e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6939999999965316e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6800000000039006e-06, 1.6389999999977256e-06, 1.7360000000021802e-06, 1.6520000000047608e-06, 1.582999999999446e-06, 1.6799999999969617e-06, 1.6940000000034705e-06, 1.6799999999969617e-06, 1.6119999999980594e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.7079999999961015e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6949999999960053e-06, 1.6249999999981557e-06, 1.7079999999961015e-06, 1.6949999999960053e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201112 09:54:09.135" endtime="20201112 09:54:09.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.122" endtime="20201112 09:54:09.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.149" endtime="20201112 09:54:09.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.159" endtime="20201112 09:54:09.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.154" endtime="20201112 09:54:09.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.144" endtime="20201112 09:54:09.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:08.637" endtime="20201112 09:54:09.185"></status>
</kw>
<msg timestamp="20201112 09:54:09.186" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.208" endtime="20201112 09:54:09.226"></status>
</kw>
<msg timestamp="20201112 09:54:09.227" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.205" endtime="20201112 09:54:09.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.234" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.229" endtime="20201112 09:54:09.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.236" endtime="20201112 09:54:09.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.197" endtime="20201112 09:54:09.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.191" endtime="20201112 09:54:09.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.264" endtime="20201112 09:54:09.608"></status>
</kw>
<msg timestamp="20201112 09:54:09.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042891111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042892806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.260" endtime="20201112 09:54:09.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042891111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042892806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.618" endtime="20201112 09:54:09.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.637" endtime="20201112 09:54:09.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.250" endtime="20201112 09:54:09.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.245" endtime="20201112 09:54:09.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:09.655" level="INFO">${RESULT} = [{'time': 0.042892806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999960053e-06, 'source_diff': 1.6949999999960053e-06}, {'time': 0.042906042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:09.645" endtime="20201112 09:54:09.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:09.688" level="INFO">${OVERHEAD} = {'diff': [1.6949999999960053e-06, 1.6249999999981557e-06, 1.7079999999961015e-06, 1.568999999999876e-06, 1.6940000000034705e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.6519999999978219e-06,...</msg>
<status status="PASS" starttime="20201112 09:54:09.657" endtime="20201112 09:54:09.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.698" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:09.696" endtime="20201112 09:54:09.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.704" level="INFO">VALUE: [1.6949999999960053e-06, 1.6249999999981557e-06, 1.7079999999961015e-06, 1.568999999999876e-06, 1.6940000000034705e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.6519999999978219e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6669999999968654e-06, 1.6949999999960053e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.709000000002514e-06, 1.6669999999968654e-06, 1.6950000000029442e-06, 1.637999999998252e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6809999999964353e-06, 1.6950000000029442e-06, 1.76400000000132e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6949999999960053e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6940000000034705e-06, 1.6940000000034705e-06, 1.6940000000034705e-06, 1.5839999999989196e-06, 1.6950000000029442e-06, 1.6250000000050946e-06, 1.7499999999948113e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6119999999980594e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6810000000033742e-06, 1.6800000000039006e-06]</msg>
<status status="PASS" starttime="20201112 09:54:09.701" endtime="20201112 09:54:09.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.690" endtime="20201112 09:54:09.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.713" endtime="20201112 09:54:09.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:09.722" endtime="20201112 09:54:09.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.717" endtime="20201112 09:54:09.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.709" endtime="20201112 09:54:09.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.187" endtime="20201112 09:54:09.747"></status>
</kw>
<msg timestamp="20201112 09:54:09.748" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.767" endtime="20201112 09:54:09.782"></status>
</kw>
<msg timestamp="20201112 09:54:09.783" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.764" endtime="20201112 09:54:09.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:09.789" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:09.785" endtime="20201112 09:54:09.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.791" endtime="20201112 09:54:09.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.757" endtime="20201112 09:54:09.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.752" endtime="20201112 09:54:09.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:09.816" endtime="20201112 09:54:10.158"></status>
</kw>
<msg timestamp="20201112 09:54:10.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037790528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037792167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:09.813" endtime="20201112 09:54:10.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037790528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037792167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.168" endtime="20201112 09:54:10.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.187" endtime="20201112 09:54:10.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.804" endtime="20201112 09:54:10.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.799" endtime="20201112 09:54:10.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.205" level="INFO">${RESULT} = [{'time': 0.037792167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.037797986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:10.195" endtime="20201112 09:54:10.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:10.237" level="INFO">${OVERHEAD} = {'diff': [1.6390000000046645e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6949999999960053e-06...</msg>
<status status="PASS" starttime="20201112 09:54:10.207" endtime="20201112 09:54:10.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.247" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:10.245" endtime="20201112 09:54:10.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.253" level="INFO">VALUE: [1.6390000000046645e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6949999999960053e-06, 1.6249999999981557e-06, 1.6950000000029442e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.7360000000021802e-06, 1.6390000000046645e-06, 1.7079999999961015e-06, 1.637999999998252e-06, 1.6950000000029442e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6949999999960053e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6940000000034705e-06, 1.6800000000039006e-06, 1.6810000000033742e-06, 1.6939999999965316e-06, 1.6949999999960053e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6519999999978219e-06, 1.6940000000034705e-06, 1.6950000000029442e-06, 1.6939999999965316e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.582999999999446e-06]</msg>
<status status="PASS" starttime="20201112 09:54:10.250" endtime="20201112 09:54:10.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.239" endtime="20201112 09:54:10.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.263" endtime="20201112 09:54:10.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.271" endtime="20201112 09:54:10.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.267" endtime="20201112 09:54:10.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.258" endtime="20201112 09:54:10.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:09.749" endtime="20201112 09:54:10.296"></status>
</kw>
<msg timestamp="20201112 09:54:10.297" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.317" endtime="20201112 09:54:10.332"></status>
</kw>
<msg timestamp="20201112 09:54:10.333" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.313" endtime="20201112 09:54:10.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.339" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.335" endtime="20201112 09:54:10.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.341" endtime="20201112 09:54:10.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.306" endtime="20201112 09:54:10.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.301" endtime="20201112 09:54:10.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.365" endtime="20201112 09:54:10.699"></status>
</kw>
<msg timestamp="20201112 09:54:10.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037400472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037402236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.361" endtime="20201112 09:54:10.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037400472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037402236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.708" endtime="20201112 09:54:10.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.727" endtime="20201112 09:54:10.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.354" endtime="20201112 09:54:10.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.349" endtime="20201112 09:54:10.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:10.745" level="INFO">${RESULT} = [{'time': 0.037402236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.037406097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:10.736" endtime="20201112 09:54:10.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:10.775" level="INFO">${OVERHEAD} = {'diff': [1.76400000000132e-06, 1.6939999999965316e-06, 1.6809999999964353e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, ...</msg>
<status status="PASS" starttime="20201112 09:54:10.747" endtime="20201112 09:54:10.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.786" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:10.783" endtime="20201112 09:54:10.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.791" level="INFO">VALUE: [1.76400000000132e-06, 1.6939999999965316e-06, 1.6809999999964353e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6660000000043307e-06, 1.6940000000034705e-06, 1.6249999999981557e-06, 1.7359999999952413e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.582999999999446e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6800000000039006e-06, 1.6249999999981557e-06, 1.5550000000003061e-06, 1.6809999999964353e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6520000000047608e-06, 1.6939999999965316e-06, 1.6810000000033742e-06, 1.6669999999968654e-06, 1.6249999999981557e-06, 1.6939999999965316e-06, 1.6250000000050946e-06]</msg>
<status status="PASS" starttime="20201112 09:54:10.788" endtime="20201112 09:54:10.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.777" endtime="20201112 09:54:10.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.801" endtime="20201112 09:54:10.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:10.809" endtime="20201112 09:54:10.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.805" endtime="20201112 09:54:10.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.796" endtime="20201112 09:54:10.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.298" endtime="20201112 09:54:10.835"></status>
</kw>
<msg timestamp="20201112 09:54:10.835" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.855" endtime="20201112 09:54:10.870"></status>
</kw>
<msg timestamp="20201112 09:54:10.871" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.852" endtime="20201112 09:54:10.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:10.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:10.874" endtime="20201112 09:54:10.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.880" endtime="20201112 09:54:10.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.844" endtime="20201112 09:54:10.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.840" endtime="20201112 09:54:10.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:10.903" endtime="20201112 09:54:11.242"></status>
</kw>
<msg timestamp="20201112 09:54:11.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037605667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037607361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:10.900" endtime="20201112 09:54:11.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037605667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037607361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.251" endtime="20201112 09:54:11.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.271" endtime="20201112 09:54:11.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.893" endtime="20201112 09:54:11.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.888" endtime="20201112 09:54:11.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.288" level="INFO">${RESULT} = [{'time': 0.037607361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6939999999965316e-06, 'source_diff': 1.6939999999965316e-06}, {'time': 0.037620861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:11.279" endtime="20201112 09:54:11.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:11.319" level="INFO">${OVERHEAD} = {'diff': [1.6939999999965316e-06, 1.6799999999969617e-06, 1.6800000000039006e-06, 1.6949999999960053e-06, 1.6669999999968654e-06, 1.6659999999973918e-06, 1.6939999999965316e-06, 1.6799999999969617e-06...</msg>
<status status="PASS" starttime="20201112 09:54:11.290" endtime="20201112 09:54:11.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.329" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:11.327" endtime="20201112 09:54:11.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.334" level="INFO">VALUE: [1.6939999999965316e-06, 1.6799999999969617e-06, 1.6800000000039006e-06, 1.6949999999960053e-06, 1.6669999999968654e-06, 1.6659999999973918e-06, 1.6939999999965316e-06, 1.6799999999969617e-06, 1.6939999999965316e-06, 1.6939999999965316e-06, 1.5969999999990159e-06, 1.6940000000034705e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6939999999965316e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.6950000000029442e-06, 1.7370000000016539e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6810000000033742e-06, 1.6950000000029442e-06, 1.5969999999990159e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.6949999999960053e-06, 1.6389999999977256e-06, 1.6809999999964353e-06, 1.76400000000132e-06, 1.6529999999972955e-06, 1.6940000000034705e-06, 1.6940000000034705e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6950000000029442e-06, 1.6940000000034705e-06, 1.6249999999981557e-06, 1.709000000002514e-06, 1.6249999999981557e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.6940000000034705e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:54:11.331" endtime="20201112 09:54:11.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.321" endtime="20201112 09:54:11.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.338" endtime="20201112 09:54:11.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.342" endtime="20201112 09:54:11.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.340" endtime="20201112 09:54:11.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.336" endtime="20201112 09:54:11.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:10.836" endtime="20201112 09:54:11.364"></status>
</kw>
<msg timestamp="20201112 09:54:11.364" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.373" endtime="20201112 09:54:11.384"></status>
</kw>
<msg timestamp="20201112 09:54:11.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.372" endtime="20201112 09:54:11.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.388" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.386" endtime="20201112 09:54:11.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.389" endtime="20201112 09:54:11.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.368" endtime="20201112 09:54:11.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.366" endtime="20201112 09:54:11.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.400" endtime="20201112 09:54:11.685"></status>
</kw>
<msg timestamp="20201112 09:54:11.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.398" endtime="20201112 09:54:11.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.690" endtime="20201112 09:54:11.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.698" endtime="20201112 09:54:11.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.395" endtime="20201112 09:54:11.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.393" endtime="20201112 09:54:11.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:11.707" level="INFO">${RESULT} = [{'time': 0.021999722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.022008861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:11.703" endtime="20201112 09:54:11.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:11.721" level="INFO">${OVERHEAD} = {'diff': [1.6249999999981557e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.7639999999978506e-06, 1.7359999999987108e-06, 1.707999999999571e-06,...</msg>
<status status="PASS" starttime="20201112 09:54:11.708" endtime="20201112 09:54:11.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.726" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:11.725" endtime="20201112 09:54:11.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.728" level="INFO">VALUE: [1.6249999999981557e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.7639999999978506e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.694000000000001e-06, 1.709000000002514e-06, 1.6520000000012913e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.7089999999990446e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.6110000000020552e-06, 1.7089999999990446e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.76400000000132e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.6520000000012913e-06, 1.7089999999990446e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201112 09:54:11.727" endtime="20201112 09:54:11.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.722" endtime="20201112 09:54:11.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.733" endtime="20201112 09:54:11.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:11.737" endtime="20201112 09:54:11.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.735" endtime="20201112 09:54:11.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.731" endtime="20201112 09:54:11.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.364" endtime="20201112 09:54:11.758"></status>
</kw>
<msg timestamp="20201112 09:54:11.758" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.767" endtime="20201112 09:54:11.780"></status>
</kw>
<msg timestamp="20201112 09:54:11.781" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.766" endtime="20201112 09:54:11.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:11.783" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:11.782" endtime="20201112 09:54:11.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.784" endtime="20201112 09:54:11.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.763" endtime="20201112 09:54:11.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.760" endtime="20201112 09:54:11.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:11.795" endtime="20201112 09:54:12.087"></status>
</kw>
<msg timestamp="20201112 09:54:12.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:11.794" endtime="20201112 09:54:12.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.096" endtime="20201112 09:54:12.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.115" endtime="20201112 09:54:12.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.791" endtime="20201112 09:54:12.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.788" endtime="20201112 09:54:12.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.134" level="INFO">${RESULT} = [{'time': 0.021810389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.021816153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:12.125" endtime="20201112 09:54:12.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:12.167" level="INFO">${OVERHEAD} = {'diff': [1.653000000000765e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.6949999999994747e-06, 1.6520000000012913e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1....</msg>
<status status="PASS" starttime="20201112 09:54:12.136" endtime="20201112 09:54:12.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.177" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:12.175" endtime="20201112 09:54:12.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.183" level="INFO">VALUE: [1.653000000000765e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.6949999999994747e-06, 1.6520000000012913e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6520000000012913e-06, 1.6520000000012913e-06, 1.6250000000016251e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.6389999999977256e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.637999999998252e-06, 1.6800000000004311e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.7089999999990446e-06, 1.7220000000026103e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.6380000000017214e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.6949999999994747e-06, 1.6949999999994747e-06]</msg>
<status status="PASS" starttime="20201112 09:54:12.180" endtime="20201112 09:54:12.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.169" endtime="20201112 09:54:12.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.192" endtime="20201112 09:54:12.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.201" endtime="20201112 09:54:12.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.196" endtime="20201112 09:54:12.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.188" endtime="20201112 09:54:12.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:11.759" endtime="20201112 09:54:12.226"></status>
</kw>
<msg timestamp="20201112 09:54:12.226" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.246" endtime="20201112 09:54:12.262"></status>
</kw>
<msg timestamp="20201112 09:54:12.263" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.243" endtime="20201112 09:54:12.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.266" endtime="20201112 09:54:12.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.272" endtime="20201112 09:54:12.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.236" endtime="20201112 09:54:12.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.231" endtime="20201112 09:54:12.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.296" endtime="20201112 09:54:12.628"></status>
</kw>
<msg timestamp="20201112 09:54:12.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037248292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037249986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.292" endtime="20201112 09:54:12.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037248292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037249986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.638" endtime="20201112 09:54:12.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.657" endtime="20201112 09:54:12.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.285" endtime="20201112 09:54:12.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.280" endtime="20201112 09:54:12.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:12.674" level="INFO">${RESULT} = [{'time': 0.037249986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6939999999965316e-06, 'source_diff': 1.6939999999965316e-06}, {'time': 0.037258903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:12.665" endtime="20201112 09:54:12.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:12.707" level="INFO">${OVERHEAD} = {'diff': [1.6939999999965316e-06, 1.6950000000029442e-06, 1.6939999999965316e-06, 1.6110000000055247e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6940000000034705e-06, 1.6390000000046645e-06...</msg>
<status status="PASS" starttime="20201112 09:54:12.677" endtime="20201112 09:54:12.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.717" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:12.715" endtime="20201112 09:54:12.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.722" level="INFO">VALUE: [1.6939999999965316e-06, 1.6950000000029442e-06, 1.6939999999965316e-06, 1.6110000000055247e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6940000000034705e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6949999999960053e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.6389999999977256e-06, 1.6949999999960053e-06, 1.6529999999972955e-06, 1.6939999999965316e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.637999999998252e-06, 1.6810000000033742e-06, 1.7089999999955752e-06, 1.6799999999969617e-06, 1.6810000000033742e-06, 1.7079999999961015e-06, 1.5969999999990159e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.6390000000046645e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6659999999973918e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 09:54:12.719" endtime="20201112 09:54:12.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.708" endtime="20201112 09:54:12.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.732" endtime="20201112 09:54:12.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:12.740" endtime="20201112 09:54:12.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.736" endtime="20201112 09:54:12.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.727" endtime="20201112 09:54:12.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.227" endtime="20201112 09:54:12.766"></status>
</kw>
<msg timestamp="20201112 09:54:12.766" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.786" endtime="20201112 09:54:12.801"></status>
</kw>
<msg timestamp="20201112 09:54:12.803" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.783" endtime="20201112 09:54:12.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:12.809" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:12.805" endtime="20201112 09:54:12.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.811" endtime="20201112 09:54:12.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.775" endtime="20201112 09:54:12.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.771" endtime="20201112 09:54:12.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:12.834" endtime="20201112 09:54:13.170"></status>
</kw>
<msg timestamp="20201112 09:54:13.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037877375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037879097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:12.831" endtime="20201112 09:54:13.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037877375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037879097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:13.179" endtime="20201112 09:54:13.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.199" endtime="20201112 09:54:13.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.824" endtime="20201112 09:54:13.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.819" endtime="20201112 09:54:13.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.216" level="INFO">${RESULT} = [{'time': 0.037879097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.037888819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:13.207" endtime="20201112 09:54:13.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:13.249" level="INFO">${OVERHEAD} = {'diff': [1.7220000000026103e-06, 1.6939999999965316e-06, 1.6380000000051909e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6800000000039006e-06...</msg>
<status status="PASS" starttime="20201112 09:54:13.218" endtime="20201112 09:54:13.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.259" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:13.256" endtime="20201112 09:54:13.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.264" level="INFO">VALUE: [1.7220000000026103e-06, 1.6939999999965316e-06, 1.6380000000051909e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6800000000039006e-06, 1.6940000000034705e-06, 1.6660000000043307e-06, 1.6250000000050946e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.6939999999965316e-06, 1.6949999999960053e-06, 1.6800000000039006e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6940000000034705e-06, 1.6529999999972955e-06, 1.6670000000038043e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6939999999965316e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6809999999964353e-06, 1.6940000000034705e-06, 1.6949999999960053e-06, 1.6940000000034705e-06, 1.6810000000033742e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.709000000002514e-06]</msg>
<status status="PASS" starttime="20201112 09:54:13.261" endtime="20201112 09:54:13.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.250" endtime="20201112 09:54:13.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.274" endtime="20201112 09:54:13.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.282" endtime="20201112 09:54:13.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.278" endtime="20201112 09:54:13.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.269" endtime="20201112 09:54:13.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:12.767" endtime="20201112 09:54:13.308"></status>
</kw>
<msg timestamp="20201112 09:54:13.308" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.328" endtime="20201112 09:54:13.343"></status>
</kw>
<msg timestamp="20201112 09:54:13.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.325" endtime="20201112 09:54:13.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.351" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.347" endtime="20201112 09:54:13.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.353" endtime="20201112 09:54:13.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.317" endtime="20201112 09:54:13.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.313" endtime="20201112 09:54:13.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.376" endtime="20201112 09:54:13.712"></status>
</kw>
<msg timestamp="20201112 09:54:13.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037570611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03757225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:13.373" endtime="20201112 09:54:13.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037570611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03757225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:13.722" endtime="20201112 09:54:13.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.741" endtime="20201112 09:54:13.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.366" endtime="20201112 09:54:13.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.361" endtime="20201112 09:54:13.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:13.758" level="INFO">${RESULT} = [{'time': 0.03757225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.037583611, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:13.749" endtime="20201112 09:54:13.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:13.790" level="INFO">${OVERHEAD} = {'diff': [1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6939999999965316e-06,...</msg>
<status status="PASS" starttime="20201112 09:54:13.760" endtime="20201112 09:54:13.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.801" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:54:13.799" endtime="20201112 09:54:13.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.806" level="INFO">VALUE: [1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.7089999999955752e-06, 1.6249999999981557e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6810000000033742e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6939999999965316e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6810000000033742e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6799999999969617e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.582999999999446e-06, 1.7079999999961015e-06, 1.6799999999969617e-06, 1.6389999999977256e-06, 1.6809999999964353e-06, 1.6940000000034705e-06, 1.6810000000033742e-06, 1.6939999999965316e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.7089999999955752e-06]</msg>
<status status="PASS" starttime="20201112 09:54:13.803" endtime="20201112 09:54:13.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.792" endtime="20201112 09:54:13.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.816" endtime="20201112 09:54:13.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.824" endtime="20201112 09:54:13.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.820" endtime="20201112 09:54:13.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.811" endtime="20201112 09:54:13.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.309" endtime="20201112 09:54:13.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:03.321" endtime="20201112 09:54:13.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.861" endtime="20201112 09:54:13.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.857" endtime="20201112 09:54:13.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.854" endtime="20201112 09:54:13.885"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:03.188" endtime="20201112 09:54:13.886" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:13.905" endtime="20201112 09:54:13.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.901" endtime="20201112 09:54:13.928"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:13.961" endtime="20201112 09:54:13.982"></status>
</kw>
<msg timestamp="20201112 09:54:13.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.958" endtime="20201112 09:54:13.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:13.985" endtime="20201112 09:54:13.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:13.996" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:13.992" endtime="20201112 09:54:13.997"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:13.951" endtime="20201112 09:54:13.999"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:13.944" endtime="20201112 09:54:14.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.942" endtime="20201112 09:54:14.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:14.011" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:14.009" endtime="20201112 09:54:14.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.003" endtime="20201112 09:54:14.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.940" endtime="20201112 09:54:14.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.938" endtime="20201112 09:54:14.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.014" endtime="20201112 09:54:14.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.934" endtime="20201112 09:54:14.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.929" endtime="20201112 09:54:14.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:13.898" endtime="20201112 09:54:14.022"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.045" endtime="20201112 09:54:14.073"></status>
</kw>
<msg timestamp="20201112 09:54:14.075" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.042" endtime="20201112 09:54:14.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.081" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.077" endtime="20201112 09:54:14.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.084" endtime="20201112 09:54:14.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.034" endtime="20201112 09:54:14.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.028" endtime="20201112 09:54:14.091"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.096" endtime="20201112 09:54:14.101"></status>
</kw>
<msg timestamp="20201112 09:54:14.102" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:14.093" endtime="20201112 09:54:14.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.112" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:14.110" endtime="20201112 09:54:14.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.117" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:14.115" endtime="20201112 09:54:14.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.104" endtime="20201112 09:54:14.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.129" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:14.127" endtime="20201112 09:54:14.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.134" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:14.132" endtime="20201112 09:54:14.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.121" endtime="20201112 09:54:14.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.153" endtime="20201112 09:54:14.501"></status>
</kw>
<msg timestamp="20201112 09:54:14.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134480708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134485167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.150" endtime="20201112 09:54:14.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134480708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134485167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.510" endtime="20201112 09:54:14.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.530" endtime="20201112 09:54:14.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.142" endtime="20201112 09:54:14.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.137" endtime="20201112 09:54:14.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:14.547" level="INFO">${RESULT} = [{'time': 0.134485167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458999999984448e-06, 'source_diff': 4.458999999984448e-06}, {'time': 0.134503208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:14.538" endtime="20201112 09:54:14.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:14.581" level="INFO">${OVERHEAD} = {'diff': [4.458999999984448e-06, 4.625000000008095e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.570000000009289e-06, 4.610999999987708e-06, 4.583000000002446e-06, 4.56899999998206e-06, 4.65300...</msg>
<status status="PASS" starttime="20201112 09:54:14.549" endtime="20201112 09:54:14.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.593" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:54:14.591" endtime="20201112 09:54:14.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.599" level="INFO">VALUE: [4.458999999984448e-06, 4.625000000008095e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.570000000009289e-06, 4.610999999987708e-06, 4.583000000002446e-06, 4.56899999998206e-06, 4.6530000000211125e-06, 4.58400000000192e-06, 4.570000000009289e-06, 4.625000000008095e-06, 4.56899999998206e-06, 4.611000000015464e-06, 4.569000000009815e-06, 4.554999999989429e-06, 4.52800000000364e-06, 4.625000000008095e-06, 4.597000000022833e-06, 4.56899999998206e-06, 4.625000000008095e-06, 4.611000000015464e-06, 4.570000000009289e-06, 4.555000000017184e-06, 4.554999999989429e-06, 4.625000000008095e-06, 4.570000000009289e-06, 4.556000000016658e-06, 4.541999999996271e-06, 4.570000000009289e-06, 4.611000000015464e-06, 4.625000000008095e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.569999999981533e-06, 4.639000000000726e-06, 4.555999999988902e-06, 4.52800000000364e-06, 4.6810000000063745e-06, 4.569000000009815e-06, 4.597999999994551e-06, 4.652000000021639e-06, 4.6949999999990055e-06, 4.570000000009289e-06, 4.625000000008095e-06, 4.570000000009289e-06, 4.569999999981533e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.693999999999532e-06]</msg>
<status status="PASS" starttime="20201112 09:54:14.596" endtime="20201112 09:54:14.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.583" endtime="20201112 09:54:14.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.608" endtime="20201112 09:54:14.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.617" endtime="20201112 09:54:14.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.612" endtime="20201112 09:54:14.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.604" endtime="20201112 09:54:14.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.023" endtime="20201112 09:54:14.642"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:13.892" endtime="20201112 09:54:14.644" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:14.663" endtime="20201112 09:54:14.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.659" endtime="20201112 09:54:14.686"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.720" endtime="20201112 09:54:14.740"></status>
</kw>
<msg timestamp="20201112 09:54:14.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.717" endtime="20201112 09:54:14.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.748" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.744" endtime="20201112 09:54:14.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.755" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:14.750" endtime="20201112 09:54:14.755"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:14.709" endtime="20201112 09:54:14.757"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:14.703" endtime="20201112 09:54:14.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.700" endtime="20201112 09:54:14.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:14.767" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:14.766" endtime="20201112 09:54:14.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.761" endtime="20201112 09:54:14.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.698" endtime="20201112 09:54:14.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.696" endtime="20201112 09:54:14.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.771" endtime="20201112 09:54:14.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.692" endtime="20201112 09:54:14.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.688" endtime="20201112 09:54:14.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.656" endtime="20201112 09:54:14.778"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.805" endtime="20201112 09:54:14.880"></status>
</kw>
<msg timestamp="20201112 09:54:14.881" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.801" endtime="20201112 09:54:14.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.888" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:14.884" endtime="20201112 09:54:14.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.890" endtime="20201112 09:54:14.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.794" endtime="20201112 09:54:14.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.785" endtime="20201112 09:54:14.897"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.902" endtime="20201112 09:54:14.906"></status>
</kw>
<msg timestamp="20201112 09:54:14.907" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:14.899" endtime="20201112 09:54:14.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.917" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:14.915" endtime="20201112 09:54:14.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.922" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:14.920" endtime="20201112 09:54:14.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.909" endtime="20201112 09:54:14.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.934" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:14.932" endtime="20201112 09:54:14.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:14.939" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:14.936" endtime="20201112 09:54:14.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.926" endtime="20201112 09:54:14.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:14.958" endtime="20201112 09:54:15.299"></status>
</kw>
<msg timestamp="20201112 09:54:15.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136592486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136628972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:14.954" endtime="20201112 09:54:15.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136592486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136628972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.303" endtime="20201112 09:54:15.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.311" endtime="20201112 09:54:15.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.947" endtime="20201112 09:54:15.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.942" endtime="20201112 09:54:15.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:15.319" level="INFO">${RESULT} = [{'time': 0.136628972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.648599999997448e-05, 'source_diff': 3.648599999997448e-05}, {'time': 0.137682333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:15.315" endtime="20201112 09:54:15.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:15.333" level="INFO">${OVERHEAD} = {'diff': [3.648599999997448e-05, 3.63749999999774e-05, 3.6444999999996064e-05, 3.637500000000515e-05, 3.645800000001698e-05, 3.645799999998922e-05, 3.645799999998922e-05, 3.6402999999990415e-05, 3.644...</msg>
<status status="PASS" starttime="20201112 09:54:15.321" endtime="20201112 09:54:15.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.339" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:54:15.338" endtime="20201112 09:54:15.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.343" level="INFO">VALUE: [3.648599999997448e-05, 3.63749999999774e-05, 3.6444999999996064e-05, 3.637500000000515e-05, 3.645800000001698e-05, 3.645799999998922e-05, 3.645799999998922e-05, 3.6402999999990415e-05, 3.644399999999659e-05, 3.6388999999997784e-05, 3.643099999997568e-05, 3.643099999997568e-05, 3.6388999999997784e-05, 3.6402999999990415e-05, 3.640300000001817e-05, 3.645799999998922e-05, 3.644399999999659e-05, 3.643100000000343e-05, 3.6388999999997784e-05, 3.640199999999094e-05, 3.637500000000515e-05, 3.644399999999659e-05, 3.645900000001645e-05, 3.6444999999996064e-05, 3.648600000000224e-05, 3.6388999999997784e-05, 3.640199999999094e-05, 3.6444999999996064e-05, 3.6444999999996064e-05, 3.6402999999990415e-05, 3.647199999998185e-05, 3.6388999999997784e-05, 3.6402999999990415e-05, 3.6388999999997784e-05, 3.640300000001817e-05, 3.644399999999659e-05, 3.644399999999659e-05, 3.6346999999992136e-05, 3.647300000000908e-05, 3.649999999999487e-05, 3.637500000000515e-05, 3.644399999999659e-05, 3.645800000001698e-05, 3.6402999999990415e-05, 3.6402999999990415e-05, 3.643000000000396e-05, 3.643100000000343e-05, 3.641599999998357e-05, 3.645800000001698e-05, 3.645799999998922e-05]</msg>
<status status="PASS" starttime="20201112 09:54:15.340" endtime="20201112 09:54:15.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.335" endtime="20201112 09:54:15.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.347" endtime="20201112 09:54:15.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.351" endtime="20201112 09:54:15.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.349" endtime="20201112 09:54:15.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.345" endtime="20201112 09:54:15.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:14.780" endtime="20201112 09:54:15.372"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:14.649" endtime="20201112 09:54:15.373" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:15.384" endtime="20201112 09:54:15.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.380" endtime="20201112 09:54:15.408"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.442" endtime="20201112 09:54:15.463"></status>
</kw>
<msg timestamp="20201112 09:54:15.464" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.438" endtime="20201112 09:54:15.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.470" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.466" endtime="20201112 09:54:15.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.477" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:15.473" endtime="20201112 09:54:15.478"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:15.431" endtime="20201112 09:54:15.479"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:15.424" endtime="20201112 09:54:15.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.422" endtime="20201112 09:54:15.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:15.490" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:15.488" endtime="20201112 09:54:15.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.484" endtime="20201112 09:54:15.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.420" endtime="20201112 09:54:15.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.418" endtime="20201112 09:54:15.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.493" endtime="20201112 09:54:15.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.414" endtime="20201112 09:54:15.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.409" endtime="20201112 09:54:15.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.379" endtime="20201112 09:54:15.501"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.527" endtime="20201112 09:54:15.740"></status>
</kw>
<msg timestamp="20201112 09:54:15.741" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.523" endtime="20201112 09:54:15.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.748" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:15.744" endtime="20201112 09:54:15.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.750" endtime="20201112 09:54:15.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.514" endtime="20201112 09:54:15.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.508" endtime="20201112 09:54:15.757"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.761" endtime="20201112 09:54:15.766"></status>
</kw>
<msg timestamp="20201112 09:54:15.767" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:15.759" endtime="20201112 09:54:15.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.777" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:15.775" endtime="20201112 09:54:15.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.782" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:15.780" endtime="20201112 09:54:15.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.769" endtime="20201112 09:54:15.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.794" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:15.792" endtime="20201112 09:54:15.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:15.799" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:15.796" endtime="20201112 09:54:15.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.786" endtime="20201112 09:54:15.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:15.818" endtime="20201112 09:54:16.159"></status>
</kw>
<msg timestamp="20201112 09:54:16.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138790125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138859931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:15.814" endtime="20201112 09:54:16.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138790125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138859931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.169" endtime="20201112 09:54:16.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.188" endtime="20201112 09:54:16.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.807" endtime="20201112 09:54:16.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.802" endtime="20201112 09:54:16.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.205" level="INFO">${RESULT} = [{'time': 0.138859931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.980600000000559e-05, 'source_diff': 6.980600000000559e-05}, {'time': 0.142675847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:16.196" endtime="20201112 09:54:16.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:16.237" level="INFO">${OVERHEAD} = {'diff': [6.980600000000559e-05, 6.940299999999566e-05, 6.934699999999738e-05, 6.944400000000184e-05, 6.93750000000104e-05, 6.936099999999001e-05, 6.929199999999858e-05, 6.936099999999001e-05, 6.93750...</msg>
<status status="PASS" starttime="20201112 09:54:16.208" endtime="20201112 09:54:16.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.249" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:54:16.247" endtime="20201112 09:54:16.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.255" level="INFO">VALUE: [6.980600000000559e-05, 6.940299999999566e-05, 6.934699999999738e-05, 6.944400000000184e-05, 6.93750000000104e-05, 6.936099999999001e-05, 6.929199999999858e-05, 6.936099999999001e-05, 6.93750000000104e-05, 6.936100000001777e-05, 6.943100000000868e-05, 6.93750000000104e-05, 6.938900000000303e-05, 6.937499999998264e-05, 6.940299999999566e-05, 6.941700000001605e-05, 6.942999999998145e-05, 6.940299999999566e-05, 6.944400000000184e-05, 6.93750000000104e-05, 6.934699999999738e-05, 6.942999999998145e-05, 6.93200000000116e-05, 6.943100000000868e-05, 6.93750000000104e-05, 6.941600000001658e-05, 6.934699999999738e-05, 6.937499999998264e-05, 6.943100000000868e-05, 6.941600000001658e-05, 6.936100000004553e-05, 6.940299999996791e-05, 6.937499999998264e-05, 6.942999999998145e-05, 6.933400000003198e-05, 6.944399999997408e-05, 6.941699999996054e-05, 6.929199999999858e-05, 6.944500000000131e-05, 6.938900000003079e-05, 6.943100000000868e-05, 6.943100000000868e-05, 6.936100000004553e-05, 6.943100000000868e-05, 6.943100000000868e-05, 6.937500000003816e-05, 6.937499999998264e-05, 6.944500000000131e-05, 6.941700000001605e-05, 6.941599999998882e-05]</msg>
<status status="PASS" starttime="20201112 09:54:16.251" endtime="20201112 09:54:16.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.239" endtime="20201112 09:54:16.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.264" endtime="20201112 09:54:16.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.272" endtime="20201112 09:54:16.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.268" endtime="20201112 09:54:16.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.259" endtime="20201112 09:54:16.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:15.503" endtime="20201112 09:54:16.299"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:15.376" endtime="20201112 09:54:16.301" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:16.319" endtime="20201112 09:54:16.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.316" endtime="20201112 09:54:16.343"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.377" endtime="20201112 09:54:16.397"></status>
</kw>
<msg timestamp="20201112 09:54:16.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.373" endtime="20201112 09:54:16.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.405" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.401" endtime="20201112 09:54:16.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.412" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:16.408" endtime="20201112 09:54:16.412"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:16.366" endtime="20201112 09:54:16.414"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:16.359" endtime="20201112 09:54:16.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.357" endtime="20201112 09:54:16.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:16.425" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:16.423" endtime="20201112 09:54:16.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.419" endtime="20201112 09:54:16.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.355" endtime="20201112 09:54:16.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.353" endtime="20201112 09:54:16.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.429" endtime="20201112 09:54:16.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.349" endtime="20201112 09:54:16.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.344" endtime="20201112 09:54:16.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.313" endtime="20201112 09:54:16.436"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.462" endtime="20201112 09:54:16.486"></status>
</kw>
<msg timestamp="20201112 09:54:16.487" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.456" endtime="20201112 09:54:16.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.493" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:16.489" endtime="20201112 09:54:16.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.496" endtime="20201112 09:54:16.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.449" endtime="20201112 09:54:16.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.443" endtime="20201112 09:54:16.503"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.507" endtime="20201112 09:54:16.512"></status>
</kw>
<msg timestamp="20201112 09:54:16.513" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:16.504" endtime="20201112 09:54:16.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.523" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:16.521" endtime="20201112 09:54:16.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.528" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:16.525" endtime="20201112 09:54:16.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.515" endtime="20201112 09:54:16.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.540" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:16.537" endtime="20201112 09:54:16.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.544" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:16.542" endtime="20201112 09:54:16.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.531" endtime="20201112 09:54:16.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.564" endtime="20201112 09:54:16.910"></status>
</kw>
<msg timestamp="20201112 09:54:16.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136278375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136279736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.560" endtime="20201112 09:54:16.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:16.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136278375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136279736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:16.919" endtime="20201112 09:54:16.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:16.939" endtime="20201112 09:54:16.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.553" endtime="20201112 09:54:16.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.548" endtime="20201112 09:54:16.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:16.958" level="INFO">${RESULT} = [{'time': 0.136279736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000052747e-06, 'source_diff': 1.3610000000052747e-06}, {'time': 0.13629075, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:16.948" endtime="20201112 09:54:16.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:16.991" level="INFO">${OVERHEAD} = {'diff': [1.3610000000052747e-06, 1.346999999984888e-06, 1.4030000000109233e-06, 1.3339999999917307e-06, 1.3610000000052747e-06, 1.26400000000082e-06, 1.332999999992257e-06, 1.332999999992257e-06, 1.3...</msg>
<status status="PASS" starttime="20201112 09:54:16.960" endtime="20201112 09:54:16.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.003" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:54:17.000" endtime="20201112 09:54:17.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.008" level="INFO">VALUE: [1.3610000000052747e-06, 1.346999999984888e-06, 1.4030000000109233e-06, 1.3339999999917307e-06, 1.3610000000052747e-06, 1.26400000000082e-06, 1.332999999992257e-06, 1.332999999992257e-06, 1.3470000000126436e-06, 1.332999999992257e-06, 1.3889999999905367e-06, 1.3479999999843617e-06, 1.2909999999866084e-06, 1.346999999984888e-06, 1.3749999999979057e-06, 1.3049999999792394e-06, 1.3610000000052747e-06, 1.3610000000052747e-06, 1.332999999992257e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.4030000000109233e-06, 1.346999999984888e-06, 1.3750000000256613e-06, 1.3339999999917307e-06, 1.360999999977519e-06, 1.3749999999979057e-06, 1.346999999984888e-06, 1.3479999999843617e-06, 1.360999999977519e-06, 1.3470000000126436e-06, 1.3479999999843617e-06, 1.305000000006995e-06, 1.332999999992257e-06, 1.360999999977519e-06, 1.3480000000121173e-06, 1.3470000000126436e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.3199999999990997e-06, 1.3610000000052747e-06, 1.3330000000200126e-06, 1.3330000000200126e-06, 1.346999999984888e-06, 1.3330000000200126e-06, 1.3480000000121173e-06, 1.3470000000126436e-06, 1.3610000000052747e-06]</msg>
<status status="PASS" starttime="20201112 09:54:17.005" endtime="20201112 09:54:17.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.993" endtime="20201112 09:54:17.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.017" endtime="20201112 09:54:17.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.026" endtime="20201112 09:54:17.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.021" endtime="20201112 09:54:17.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.013" endtime="20201112 09:54:17.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:16.438" endtime="20201112 09:54:17.051"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:16.306" endtime="20201112 09:54:17.053" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.072" endtime="20201112 09:54:17.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.068" endtime="20201112 09:54:17.097"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.131" endtime="20201112 09:54:17.151"></status>
</kw>
<msg timestamp="20201112 09:54:17.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.127" endtime="20201112 09:54:17.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.155" endtime="20201112 09:54:17.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.166" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:17.162" endtime="20201112 09:54:17.166"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:17.120" endtime="20201112 09:54:17.168"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:17.113" endtime="20201112 09:54:17.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.110" endtime="20201112 09:54:17.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:17.180" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:17.179" endtime="20201112 09:54:17.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.174" endtime="20201112 09:54:17.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.109" endtime="20201112 09:54:17.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.107" endtime="20201112 09:54:17.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.184" endtime="20201112 09:54:17.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.103" endtime="20201112 09:54:17.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.098" endtime="20201112 09:54:17.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.065" endtime="20201112 09:54:17.192"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.216" endtime="20201112 09:54:17.292"></status>
</kw>
<msg timestamp="20201112 09:54:17.294" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.213" endtime="20201112 09:54:17.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.300" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.296" endtime="20201112 09:54:17.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.302" endtime="20201112 09:54:17.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.205" endtime="20201112 09:54:17.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.199" endtime="20201112 09:54:17.309"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.314" endtime="20201112 09:54:17.318"></status>
</kw>
<msg timestamp="20201112 09:54:17.319" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:17.311" endtime="20201112 09:54:17.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.332" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:17.327" endtime="20201112 09:54:17.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.336" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:17.334" endtime="20201112 09:54:17.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.321" endtime="20201112 09:54:17.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.349" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:17.346" endtime="20201112 09:54:17.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.353" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:17.351" endtime="20201112 09:54:17.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.340" endtime="20201112 09:54:17.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.373" endtime="20201112 09:54:17.722"></status>
</kw>
<msg timestamp="20201112 09:54:17.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137850569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.13786075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:17.369" endtime="20201112 09:54:17.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137850569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.13786075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:17.732" endtime="20201112 09:54:17.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.751" endtime="20201112 09:54:17.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.362" endtime="20201112 09:54:17.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.357" endtime="20201112 09:54:17.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:17.769" level="INFO">${RESULT} = [{'time': 0.13786075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.138913736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:17.760" endtime="20201112 09:54:17.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:17.801" level="INFO">${OVERHEAD} = {'diff': [1.0180999999997997e-05, 1.0139000000020104e-05, 1.0153000000012735e-05, 1.0194999999990628e-05, 1.0180999999997997e-05, 1.0194999999990628e-05, 1.0167000000005366e-05, 1.0207999999983786e-05...</msg>
<status status="PASS" starttime="20201112 09:54:17.771" endtime="20201112 09:54:17.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.812" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:54:17.810" endtime="20201112 09:54:17.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.818" level="INFO">VALUE: [1.0180999999997997e-05, 1.0139000000020104e-05, 1.0153000000012735e-05, 1.0194999999990628e-05, 1.0180999999997997e-05, 1.0194999999990628e-05, 1.0167000000005366e-05, 1.0207999999983786e-05, 1.0193999999991155e-05, 1.019400000001891e-05, 1.0194999999990628e-05, 1.019400000001891e-05, 1.0194999999990628e-05, 1.0194999999990628e-05, 1.0235999999996803e-05, 1.019400000001891e-05, 1.0194999999990628e-05, 1.0278000000002452e-05, 1.0209000000011015e-05, 1.0194999999990628e-05, 1.0236999999996277e-05, 1.0207999999983786e-05, 1.0194999999990628e-05, 1.0235999999996803e-05, 1.0194999999990628e-05, 1.0194999999990628e-05, 1.0138999999992349e-05, 1.0180999999997997e-05, 1.015299999998498e-05, 1.0236000000024559e-05, 1.0194999999990628e-05, 1.0221999999976417e-05, 1.025000000001719e-05, 1.019400000001891e-05, 1.0195000000018384e-05, 1.0195000000018384e-05, 1.0179999999998524e-05, 1.0194999999990628e-05, 1.0194999999990628e-05, 1.0209000000011015e-05, 1.019400000001891e-05, 1.016699999997761e-05, 1.0152000000013262e-05, 1.0193999999991155e-05, 1.0208000000011541e-05, 1.0207999999983786e-05, 1.0193999999991155e-05, 1.0152000000013262e-05, 1.0222000000004172e-05, 1.0193999999991155e-05]</msg>
<status status="PASS" starttime="20201112 09:54:17.815" endtime="20201112 09:54:17.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.803" endtime="20201112 09:54:17.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.827" endtime="20201112 09:54:17.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.835" endtime="20201112 09:54:17.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.831" endtime="20201112 09:54:17.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.822" endtime="20201112 09:54:17.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.194" endtime="20201112 09:54:17.861"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:17.058" endtime="20201112 09:54:17.863" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:17.881" endtime="20201112 09:54:17.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.877" endtime="20201112 09:54:17.905"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.941" endtime="20201112 09:54:17.961"></status>
</kw>
<msg timestamp="20201112 09:54:17.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.937" endtime="20201112 09:54:17.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:17.965" endtime="20201112 09:54:17.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:17.977" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:17.972" endtime="20201112 09:54:17.977"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:17.930" endtime="20201112 09:54:17.979"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:17.923" endtime="20201112 09:54:17.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.920" endtime="20201112 09:54:17.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:17.989" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:17.988" endtime="20201112 09:54:17.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.983" endtime="20201112 09:54:17.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.918" endtime="20201112 09:54:17.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.915" endtime="20201112 09:54:17.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:17.993" endtime="20201112 09:54:17.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.911" endtime="20201112 09:54:17.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.906" endtime="20201112 09:54:18.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:17.874" endtime="20201112 09:54:18.000"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.024" endtime="20201112 09:54:18.239"></status>
</kw>
<msg timestamp="20201112 09:54:18.240" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.021" endtime="20201112 09:54:18.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.246" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:18.242" endtime="20201112 09:54:18.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.248" endtime="20201112 09:54:18.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.013" endtime="20201112 09:54:18.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.007" endtime="20201112 09:54:18.256"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.260" endtime="20201112 09:54:18.265"></status>
</kw>
<msg timestamp="20201112 09:54:18.266" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 09:54:18.257" endtime="20201112 09:54:18.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.276" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:54:18.274" endtime="20201112 09:54:18.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.281" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:54:18.279" endtime="20201112 09:54:18.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.268" endtime="20201112 09:54:18.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.293" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:54:18.291" endtime="20201112 09:54:18.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.298" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:54:18.295" endtime="20201112 09:54:18.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.285" endtime="20201112 09:54:18.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.319" endtime="20201112 09:54:18.652"></status>
</kw>
<msg timestamp="20201112 09:54:18.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140221181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140240375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.316" endtime="20201112 09:54:18.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140221181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140240375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:18.657" endtime="20201112 09:54:18.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.665" endtime="20201112 09:54:18.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.306" endtime="20201112 09:54:18.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.301" endtime="20201112 09:54:18.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:18.674" level="INFO">${RESULT} = [{'time': 0.140240375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9194000000000155e-05, 'source_diff': 1.9194000000000155e-05}, {'time': 0.144069819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:18.669" endtime="20201112 09:54:18.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:54:18.687" level="INFO">${OVERHEAD} = {'diff': [1.9194000000000155e-05, 1.923599999997805e-05, 1.9223000000012647e-05, 1.915299999999398e-05, 1.9222000000013173e-05, 1.9236000000005804e-05, 1.919499999999963e-05, 1.9236000000005804e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:54:18.675" endtime="20201112 09:54:18.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.693" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:54:18.692" endtime="20201112 09:54:18.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.696" level="INFO">VALUE: [1.9194000000000155e-05, 1.923599999997805e-05, 1.9223000000012647e-05, 1.915299999999398e-05, 1.9222000000013173e-05, 1.9236000000005804e-05, 1.919499999999963e-05, 1.9236000000005804e-05, 1.9222000000013173e-05, 1.9222000000013173e-05, 1.9236000000005804e-05, 1.9236000000005804e-05, 1.9221999999985417e-05, 1.923599999997805e-05, 1.9153000000021736e-05, 1.929100000000461e-05, 1.9236000000005804e-05, 1.9222000000013173e-05, 1.922299999998489e-05, 1.923599999997805e-05, 1.9222000000013173e-05, 1.923599999997805e-05, 1.9223000000012647e-05, 1.916699999998661e-05, 1.922299999998489e-05, 1.920899999999226e-05, 1.9207999999992786e-05, 1.9236000000005804e-05, 1.922299999998489e-05, 1.9221999999985417e-05, 1.9194000000000155e-05, 1.922200000004093e-05, 1.923599999997805e-05, 1.9221999999985417e-05, 1.9221999999985417e-05, 1.9221999999985417e-05, 1.9166000000014893e-05, 1.9221999999985417e-05, 1.923599999997805e-05, 1.923600000003356e-05, 1.9223000000012647e-05, 1.922200000004093e-05, 1.9207999999992786e-05, 1.9221999999985417e-05, 1.9208000000048298e-05, 1.9292000000004084e-05, 1.923599999997805e-05, 1.9209000000020016e-05, 1.925000000002619e-05, 1.9221999999985417e-05]</msg>
<status status="PASS" starttime="20201112 09:54:18.694" endtime="20201112 09:54:18.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.688" endtime="20201112 09:54:18.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:18.700" endtime="20201112 09:54:18.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:18.704" endtime="20201112 09:54:18.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.702" endtime="20201112 09:54:18.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.697" endtime="20201112 09:54:18.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.002" endtime="20201112 09:54:18.725"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:17.868" endtime="20201112 09:54:18.726" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:53:49.522" endtime="20201112 09:54:18.735"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:54:18.815" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:54:18.825" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:54:20.766" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:54:18.814" endtime="20201112 09:54:20.767"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:54:20.772" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:54:20.769" endtime="20201112 09:54:20.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.812" endtime="20201112 09:54:20.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:20.779" endtime="20201112 09:54:21.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:20.776" endtime="20201112 09:54:21.112"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.142" endtime="20201112 09:54:21.169"></status>
</kw>
<msg timestamp="20201112 09:54:21.170" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD...</msg>
<status status="PASS" starttime="20201112 09:54:21.138" endtime="20201112 09:54:21.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.176" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD...</msg>
<status status="PASS" starttime="20201112 09:54:21.172" endtime="20201112 09:54:21.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.183" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:21.179" endtime="20201112 09:54:21.184"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:21.132" endtime="20201112 09:54:21.186"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:21.127" endtime="20201112 09:54:21.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.123" endtime="20201112 09:54:21.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:21.196" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:21.195" endtime="20201112 09:54:21.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.190" endtime="20201112 09:54:21.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.121" endtime="20201112 09:54:21.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.119" endtime="20201112 09:54:21.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.200" endtime="20201112 09:54:21.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.116" endtime="20201112 09:54:21.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.207" endtime="20201112 09:54:21.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.113" endtime="20201112 09:54:21.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:18.811" endtime="20201112 09:54:21.213"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.229" endtime="20201112 09:54:21.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.223" endtime="20201112 09:54:21.253"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.287" endtime="20201112 09:54:21.308"></status>
</kw>
<msg timestamp="20201112 09:54:21.309" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.283" endtime="20201112 09:54:21.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.312" endtime="20201112 09:54:21.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.323" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:54:21.318" endtime="20201112 09:54:21.324"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:21.276" endtime="20201112 09:54:21.326"></status>
</kw>
<status status="FAIL" starttime="20201112 09:54:21.269" endtime="20201112 09:54:21.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.267" endtime="20201112 09:54:21.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:54:21.337" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:54:21.336" endtime="20201112 09:54:21.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.330" endtime="20201112 09:54:21.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.265" endtime="20201112 09:54:21.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.263" endtime="20201112 09:54:21.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.341" endtime="20201112 09:54:21.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.259" endtime="20201112 09:54:21.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.254" endtime="20201112 09:54:21.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.221" endtime="20201112 09:54:21.348"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.375" endtime="20201112 09:54:21.392"></status>
</kw>
<msg timestamp="20201112 09:54:21.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.372" endtime="20201112 09:54:21.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.396" endtime="20201112 09:54:21.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.402" endtime="20201112 09:54:21.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.364" endtime="20201112 09:54:21.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.358" endtime="20201112 09:54:21.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.428" endtime="20201112 09:54:21.782"></status>
</kw>
<msg timestamp="20201112 09:54:21.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138792222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138795069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.425" endtime="20201112 09:54:21.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138792222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138795069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.792" endtime="20201112 09:54:21.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.811" endtime="20201112 09:54:21.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.415" endtime="20201112 09:54:21.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.410" endtime="20201112 09:54:21.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:21.829" level="INFO">${RESULT} = [{'time': 0.138795069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.138810944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:21.820" endtime="20201112 09:54:21.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:21.859" level="INFO">${ACCURACY} = {'diff': [2.847000000000266e-06, 3.3609999999795193e-06, 3.4030000000129235e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.4030000000129235e-06, 3.388999999992537e-06, 3.4030000000129235e-06, 3....</msg>
<status status="PASS" starttime="20201112 09:54:21.831" endtime="20201112 09:54:21.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.864" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:54:21.863" endtime="20201112 09:54:21.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.867" level="INFO">VALUE: [2.847000000000266e-06, 3.3609999999795193e-06, 3.4030000000129235e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.4030000000129235e-06, 3.388999999992537e-06, 3.4030000000129235e-06, 3.361000000007275e-06, 3.902000000000072e-06, 3.4019999999856942e-06, 2.8479999999997396e-06, 2.860999999992897e-06, 2.860999999992897e-06, 2.847000000000266e-06, 3.443999999991343e-06, 2.874999999985528e-06, 2.860999999992897e-06, 3.361000000007275e-06, 2.847000000000266e-06, 3.374999999999906e-06, 2.860999999992897e-06, 3.347999999986362e-06, 2.79200000000146e-06, 2.8329999999798794e-06, 3.361000000007275e-06, 3.3469999999868882e-06, 2.8610000000206526e-06, 3.402999999985168e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 3.3890000000202924e-06, 2.860999999992897e-06, 3.4019999999856942e-06, 2.833000000007635e-06, 2.847000000000266e-06, 3.374999999999906e-06, 2.8750000000132836e-06, 3.374999999999906e-06, 3.347000000014644e-06, 3.4019999999856942e-06, 3.917000000019932e-06, 2.8479999999997396e-06, 2.79200000000146e-06, 3.402999999985168e-06, 3.4030000000129235e-06, 2.8619999999923706e-06, 3.902999999999546e-06, 2.860999999992897e-06, 3.3609999999795193e-06]</msg>
<status status="PASS" starttime="20201112 09:54:21.866" endtime="20201112 09:54:21.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.860" endtime="20201112 09:54:21.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.872" endtime="20201112 09:54:21.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:21.876" endtime="20201112 09:54:21.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.874" endtime="20201112 09:54:21.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.869" endtime="20201112 09:54:21.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.353" endtime="20201112 09:54:21.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.352" endtime="20201112 09:54:21.897"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.908" endtime="20201112 09:54:21.922"></status>
</kw>
<msg timestamp="20201112 09:54:21.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.906" endtime="20201112 09:54:21.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:21.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:21.924" endtime="20201112 09:54:21.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.927" endtime="20201112 09:54:21.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.903" endtime="20201112 09:54:21.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.900" endtime="20201112 09:54:21.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:21.938" endtime="20201112 09:54:22.272"></status>
</kw>
<msg timestamp="20201112 09:54:22.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024774847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024779292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:21.936" endtime="20201112 09:54:22.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024774847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024779292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.282" endtime="20201112 09:54:22.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.301" endtime="20201112 09:54:22.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.933" endtime="20201112 09:54:22.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.931" endtime="20201112 09:54:22.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.319" level="INFO">${RESULT} = [{'time': 0.024779292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.445000000002225e-06, 'source_diff': 4.445000000002225e-06}, {'time': 0.024795069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:22.310" endtime="20201112 09:54:22.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.350" level="INFO">${ACCURACY} = {'diff': [4.445000000002225e-06, 3.888000000000502e-06, 4.416999999999616e-06, 4.375000000000906e-06, 3.957999999998352e-06, 4.403000000000046e-06, 4.443999999999282e-06, 3.957999999998352e-06, 3.9299...</msg>
<status status="PASS" starttime="20201112 09:54:22.321" endtime="20201112 09:54:22.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.362" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.359" endtime="20201112 09:54:22.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.368" level="INFO">VALUE: [4.445000000002225e-06, 3.888000000000502e-06, 4.416999999999616e-06, 4.375000000000906e-06, 3.957999999998352e-06, 4.403000000000046e-06, 4.443999999999282e-06, 3.957999999998352e-06, 3.929999999999212e-06, 4.430999999999186e-06, 3.902999999999546e-06, 4.416000000000142e-06, 3.902999999999546e-06, 3.902999999999546e-06, 4.445000000002225e-06, 3.888999999999976e-06, 4.472999999997895e-06, 3.929999999999212e-06, 4.472999999997895e-06, 4.458000000002321e-06, 4.514000000000601e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.458000000002321e-06, 4.458999999998325e-06, 4.416999999999616e-06, 3.931000000002155e-06, 4.445000000002225e-06, 4.473000000001365e-06, 3.888999999999976e-06, 3.888999999999976e-06, 4.416999999999616e-06, 3.902999999999546e-06, 4.416999999999616e-06, 4.457999999998852e-06, 4.459000000001795e-06, 3.875000000000406e-06, 3.875000000000406e-06, 4.459000000001795e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 3.916999999999116e-06, 4.458000000002321e-06, 3.915999999999642e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.458000000002321e-06]</msg>
<status status="PASS" starttime="20201112 09:54:22.364" endtime="20201112 09:54:22.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.352" endtime="20201112 09:54:22.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.378" endtime="20201112 09:54:22.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.387" endtime="20201112 09:54:22.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.382" endtime="20201112 09:54:22.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.373" endtime="20201112 09:54:22.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.898" endtime="20201112 09:54:22.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.897" endtime="20201112 09:54:22.412"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.436" endtime="20201112 09:54:22.455"></status>
</kw>
<msg timestamp="20201112 09:54:22.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.432" endtime="20201112 09:54:22.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.458" endtime="20201112 09:54:22.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.465" endtime="20201112 09:54:22.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.425" endtime="20201112 09:54:22.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.419" endtime="20201112 09:54:22.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.488" endtime="20201112 09:54:22.826"></status>
</kw>
<msg timestamp="20201112 09:54:22.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042460819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042465806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.485" endtime="20201112 09:54:22.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042460819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042465806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:22.836" endtime="20201112 09:54:22.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.855" endtime="20201112 09:54:22.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.478" endtime="20201112 09:54:22.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.473" endtime="20201112 09:54:22.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:22.873" level="INFO">${RESULT} = [{'time': 0.042465806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.987000000004904e-06, 'source_diff': 4.987000000004904e-06}, {'time': 0.042482528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:22.864" endtime="20201112 09:54:22.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:22.904" level="INFO">${ACCURACY} = {'diff': [4.987000000004904e-06, 5.485999999998992e-06, 5.472999999998895e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.971999999998922e-06, 5.499...</msg>
<status status="PASS" starttime="20201112 09:54:22.875" endtime="20201112 09:54:22.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.915" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:54:22.913" endtime="20201112 09:54:22.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:22.921" level="INFO">VALUE: [4.987000000004904e-06, 5.485999999998992e-06, 5.472999999998895e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.971999999998922e-06, 5.499999999998562e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.971999999998922e-06, 5.416999999993677e-06, 5.499999999998562e-06, 4.9589999999988255e-06, 5.457999999999852e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.903000000000546e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 4.971999999998922e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.971999999998922e-06, 5.471999999999422e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 4.9589999999988255e-06, 4.957999999999352e-06, 5.01400000000457e-06, 4.972999999998395e-06, 4.9589999999988255e-06, 4.930000000000212e-06, 4.972999999998395e-06, 5.499999999998562e-06, 4.971999999998922e-06, 4.958000000006291e-06, 4.943999999999782e-06, 5.5000000000055005e-06, 4.971999999998922e-06, 4.889000000000976e-06, 5.472999999998895e-06, 4.916000000000642e-06, 5.471999999999422e-06, 4.957999999999352e-06, 4.957999999999352e-06, 5.457999999999852e-06, 4.972000000005861e-06, 4.971999999998922e-06]</msg>
<status status="PASS" starttime="20201112 09:54:22.918" endtime="20201112 09:54:22.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.906" endtime="20201112 09:54:22.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.931" endtime="20201112 09:54:22.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:22.939" endtime="20201112 09:54:22.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.935" endtime="20201112 09:54:22.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.926" endtime="20201112 09:54:22.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.415" endtime="20201112 09:54:22.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.413" endtime="20201112 09:54:22.965"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:22.988" endtime="20201112 09:54:23.006"></status>
</kw>
<msg timestamp="20201112 09:54:23.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:22.985" endtime="20201112 09:54:23.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.010" endtime="20201112 09:54:23.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.016" endtime="20201112 09:54:23.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.978" endtime="20201112 09:54:23.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.972" endtime="20201112 09:54:23.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.040" endtime="20201112 09:54:23.379"></status>
</kw>
<msg timestamp="20201112 09:54:23.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042183583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042190139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.037" endtime="20201112 09:54:23.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042183583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042190139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:23.389" endtime="20201112 09:54:23.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.409" endtime="20201112 09:54:23.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.029" endtime="20201112 09:54:23.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.024" endtime="20201112 09:54:23.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.427" level="INFO">${RESULT} = [{'time': 0.042190139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.55600000000478e-06, 'source_diff': 6.55600000000478e-06}, {'time': 0.042205139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:23.417" endtime="20201112 09:54:23.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:23.459" level="INFO">${ACCURACY} = {'diff': [6.55600000000478e-06, 6.04200000000471e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 6.02800000000514e-06, 6.568999999997938e-06, 6.0279999999982015e-06, 5.9859...</msg>
<status status="PASS" starttime="20201112 09:54:23.429" endtime="20201112 09:54:23.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.470" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:54:23.468" endtime="20201112 09:54:23.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.476" level="INFO">VALUE: [6.55600000000478e-06, 6.04200000000471e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 6.02800000000514e-06, 6.568999999997938e-06, 6.0279999999982015e-06, 5.985999999999492e-06, 6.554999999998368e-06, 6.041999999997771e-06, 6.026999999998728e-06, 5.457999999999852e-06, 6.012999999999158e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.5279999999987015e-06, 6.012999999999158e-06, 6.5690000000048765e-06, 6.499999999999562e-06, 6.0279999999982015e-06, 6.0550000000048065e-06, 5.485999999998992e-06, 6.0279999999982015e-06, 5.5139999999981315e-06, 6.0279999999982015e-06, 6.540999999998798e-06, 6.0139999999986316e-06, 6.568999999997938e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.0140000000055704e-06, 6.0140000000055704e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 5.999999999999062e-06, 6.610999999996647e-06, 6.026999999998728e-06, 5.985999999999492e-06, 6.540999999998798e-06, 5.999999999999062e-06, 6.57000000000435e-06, 6.069999999996911e-06, 6.0139999999986316e-06, 6.597000000004016e-06, 5.999999999999062e-06]</msg>
<status status="PASS" starttime="20201112 09:54:23.473" endtime="20201112 09:54:23.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.461" endtime="20201112 09:54:23.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.486" endtime="20201112 09:54:23.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:23.494" endtime="20201112 09:54:23.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.490" endtime="20201112 09:54:23.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.481" endtime="20201112 09:54:23.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.967" endtime="20201112 09:54:23.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:22.966" endtime="20201112 09:54:23.520"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.543" endtime="20201112 09:54:23.561"></status>
</kw>
<msg timestamp="20201112 09:54:23.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.540" endtime="20201112 09:54:23.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:23.564" endtime="20201112 09:54:23.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.571" endtime="20201112 09:54:23.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.532" endtime="20201112 09:54:23.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.526" endtime="20201112 09:54:23.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.595" endtime="20201112 09:54:23.930"></status>
</kw>
<msg timestamp="20201112 09:54:23.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042474181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04248125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:23.591" endtime="20201112 09:54:23.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:23.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042474181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04248125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:23.940" endtime="20201112 09:54:23.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:23.959" endtime="20201112 09:54:23.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.584" endtime="20201112 09:54:23.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.579" endtime="20201112 09:54:23.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:23.977" level="INFO">${RESULT} = [{'time': 0.04248125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.0424945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:23.967" endtime="20201112 09:54:23.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.011" level="INFO">${ACCURACY} = {'diff': [7.068999999998438e-06, 7.6109999999976474e-06, 7.0829999999980076e-06, 6.568999999997938e-06, 7.054999999998868e-06, 7.625000000004156e-06, 7.568999999998938e-06, 7.054999999998868e-06, 7.58...</msg>
<status status="PASS" starttime="20201112 09:54:23.979" endtime="20201112 09:54:24.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.022" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.020" endtime="20201112 09:54:24.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.027" level="INFO">VALUE: [7.068999999998438e-06, 7.6109999999976474e-06, 7.0829999999980076e-06, 6.568999999997938e-06, 7.054999999998868e-06, 7.625000000004156e-06, 7.568999999998938e-06, 7.054999999998868e-06, 7.582999999998508e-06, 7.068999999998438e-06, 7.624999999997217e-06, 7.5830000000054465e-06, 6.513999999999132e-06, 7.000000000000062e-06, 6.499999999999562e-06, 7.6109999999976474e-06, 7.611000000004586e-06, 7.624999999997217e-06, 7.624999999997217e-06, 6.513999999999132e-06, 7.5969999999980775e-06, 7.6109999999976474e-06, 6.513999999999132e-06, 7.0279999999992016e-06, 7.597999999997551e-06, 7.624999999997217e-06, 7.068999999998438e-06, 7.568999999998938e-06, 7.597000000005016e-06, 7.069999999997911e-06, 7.069999999997911e-06, 7.055999999998341e-06, 7.097999999997051e-06, 7.152000000003322e-06, 7.0829999999980076e-06, 7.054999999998868e-06, 7.055999999998341e-06, 7.541000000006737e-06, 7.5969999999980775e-06, 6.540999999998798e-06, 6.583999999996981e-06, 7.638999999996787e-06, 7.0829999999980076e-06, 7.139000000003226e-06, 7.583999999997981e-06, 7.0830000000049465e-06, 7.097000000004516e-06, 7.110999999997147e-06, 7.5830000000054465e-06, 7.0829999999980076e-06]</msg>
<status status="PASS" starttime="20201112 09:54:24.024" endtime="20201112 09:54:24.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.013" endtime="20201112 09:54:24.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.037" endtime="20201112 09:54:24.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.046" endtime="20201112 09:54:24.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.041" endtime="20201112 09:54:24.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.033" endtime="20201112 09:54:24.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.522" endtime="20201112 09:54:24.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:23.521" endtime="20201112 09:54:24.071"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.095" endtime="20201112 09:54:24.112"></status>
</kw>
<msg timestamp="20201112 09:54:24.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.091" endtime="20201112 09:54:24.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.115" endtime="20201112 09:54:24.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.122" endtime="20201112 09:54:24.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.084" endtime="20201112 09:54:24.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.078" endtime="20201112 09:54:24.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.146" endtime="20201112 09:54:24.484"></status>
</kw>
<msg timestamp="20201112 09:54:24.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042424264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042431847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.142" endtime="20201112 09:54:24.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042424264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042431847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.494" endtime="20201112 09:54:24.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.513" endtime="20201112 09:54:24.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.135" endtime="20201112 09:54:24.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.130" endtime="20201112 09:54:24.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:24.531" level="INFO">${RESULT} = [{'time': 0.042431847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.042443931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:24.521" endtime="20201112 09:54:24.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:24.563" level="INFO">${ACCURACY} = {'diff': [7.582999999998508e-06, 8.138999999997287e-06, 8.194999999995567e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.638999999997787e-06, 8.681000000003436e-06, 7.582999999998508e-06, 8.1800...</msg>
<status status="PASS" starttime="20201112 09:54:24.533" endtime="20201112 09:54:24.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.574" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:54:24.572" endtime="20201112 09:54:24.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.579" level="INFO">VALUE: [7.582999999998508e-06, 8.138999999997287e-06, 8.194999999995567e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.638999999997787e-06, 8.681000000003436e-06, 7.582999999998508e-06, 8.180000000003462e-06, 8.139000000004226e-06, 8.097999999998051e-06, 8.124999999997717e-06, 8.653000000004296e-06, 8.638999999997787e-06, 8.152999999996857e-06, 8.125000000004656e-06, 8.125000000004656e-06, 8.638999999997787e-06, 8.167000000003366e-06, 8.138999999997287e-06, 7.625000000004156e-06, 8.695000000003006e-06, 8.610999999998648e-06, 8.666999999996927e-06, 8.695000000003006e-06, 8.137999999997814e-06, 8.124999999997717e-06, 8.054999999999868e-06, 7.6109999999976474e-06, 8.695000000003006e-06, 7.583999999997981e-06, 8.139000000004226e-06, 7.582999999998508e-06, 8.665999999997454e-06, 8.124999999997717e-06, 7.624999999997217e-06, 8.625000000005156e-06, 8.680000000003962e-06, 8.153000000003796e-06, 8.167000000003366e-06, 8.125000000004656e-06, 8.139000000004226e-06, 8.681000000003436e-06, 8.137999999997814e-06, 8.125000000004656e-06, 8.138999999997287e-06, 7.555999999998841e-06, 8.111000000005086e-06, 8.139000000004226e-06, 7.569999999998411e-06]</msg>
<status status="PASS" starttime="20201112 09:54:24.576" endtime="20201112 09:54:24.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.565" endtime="20201112 09:54:24.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.589" endtime="20201112 09:54:24.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:24.597" endtime="20201112 09:54:24.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.593" endtime="20201112 09:54:24.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.585" endtime="20201112 09:54:24.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.074" endtime="20201112 09:54:24.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.072" endtime="20201112 09:54:24.623"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.646" endtime="20201112 09:54:24.665"></status>
</kw>
<msg timestamp="20201112 09:54:24.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.643" endtime="20201112 09:54:24.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:24.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:24.668" endtime="20201112 09:54:24.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.674" endtime="20201112 09:54:24.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.636" endtime="20201112 09:54:24.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.630" endtime="20201112 09:54:24.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:24.698" endtime="20201112 09:54:25.035"></status>
</kw>
<msg timestamp="20201112 09:54:25.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042439181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042448361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:24.695" endtime="20201112 09:54:25.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042439181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042448361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.045" endtime="20201112 09:54:25.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.064" endtime="20201112 09:54:25.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.687" endtime="20201112 09:54:25.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.683" endtime="20201112 09:54:25.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.082" level="INFO">${RESULT} = [{'time': 0.042448361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.042472972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:25.073" endtime="20201112 09:54:25.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.113" level="INFO">${ACCURACY} = {'diff': [9.179999999997523e-06, 9.179999999997523e-06, 9.250000000002312e-06, 8.625000000005156e-06, 9.707999999997163e-06, 9.193999999997093e-06, 9.166999999997427e-06, 9.152000000005323e-06, 9.7219...</msg>
<status status="PASS" starttime="20201112 09:54:25.084" endtime="20201112 09:54:25.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.126" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.123" endtime="20201112 09:54:25.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.131" level="INFO">VALUE: [9.179999999997523e-06, 9.179999999997523e-06, 9.250000000002312e-06, 8.625000000005156e-06, 9.707999999997163e-06, 9.193999999997093e-06, 9.166999999997427e-06, 9.152000000005323e-06, 9.721999999996733e-06, 9.179999999997523e-06, 8.624999999998217e-06, 9.181000000003936e-06, 9.207999999996663e-06, 9.207999999996663e-06, 9.193999999997093e-06, 9.236000000002742e-06, 9.167000000004366e-06, 9.195000000003506e-06, 9.708000000004102e-06, 9.193999999997093e-06, 9.151999999998384e-06, 9.707999999997163e-06, 8.694000000003532e-06, 8.639000000004726e-06, 9.181000000003936e-06, 9.208999999996137e-06, 8.624999999998217e-06, 9.750000000002812e-06, 9.194999999996567e-06, 9.222000000003172e-06, 9.193999999997093e-06, 8.653000000004296e-06, 9.195000000003506e-06, 9.194999999996567e-06, 9.736000000003242e-06, 9.193999999997093e-06, 9.152999999997857e-06, 9.194999999996567e-06, 9.138999999998287e-06, 9.681000000004436e-06, 9.249999999995373e-06, 9.181000000003936e-06, 9.694000000004532e-06, 8.680000000003962e-06, 9.221999999996233e-06, 9.736000000003242e-06, 8.693999999996593e-06, 9.152999999997857e-06, 8.693999999996593e-06, 9.681000000004436e-06]</msg>
<status status="PASS" starttime="20201112 09:54:25.128" endtime="20201112 09:54:25.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.115" endtime="20201112 09:54:25.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.141" endtime="20201112 09:54:25.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.149" endtime="20201112 09:54:25.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.145" endtime="20201112 09:54:25.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.136" endtime="20201112 09:54:25.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.625" endtime="20201112 09:54:25.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:24.624" endtime="20201112 09:54:25.175"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.198" endtime="20201112 09:54:25.213"></status>
</kw>
<msg timestamp="20201112 09:54:25.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.195" endtime="20201112 09:54:25.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.215" endtime="20201112 09:54:25.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.218" endtime="20201112 09:54:25.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.188" endtime="20201112 09:54:25.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.182" endtime="20201112 09:54:25.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.229" endtime="20201112 09:54:25.521"></status>
</kw>
<msg timestamp="20201112 09:54:25.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04071775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040728542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:25.227" endtime="20201112 09:54:25.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04071775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040728542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:25.531" endtime="20201112 09:54:25.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.550" endtime="20201112 09:54:25.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.224" endtime="20201112 09:54:25.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.222" endtime="20201112 09:54:25.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:25.567" level="INFO">${RESULT} = [{'time': 0.040728542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.040746625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:25.558" endtime="20201112 09:54:25.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:25.599" level="INFO">${ACCURACY} = {'diff': [1.0792000000002522e-05, 1.0792000000002522e-05, 1.027699999999604e-05, 1.0749999999996873e-05, 9.694000000004532e-06, 9.749999999995873e-06, 1.027699999999604e-05, 1.0236000000003742e-05, 1....</msg>
<status status="PASS" starttime="20201112 09:54:25.570" endtime="20201112 09:54:25.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.610" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:54:25.608" endtime="20201112 09:54:25.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.617" level="INFO">VALUE: [1.0792000000002522e-05, 1.0792000000002522e-05, 1.027699999999604e-05, 1.0749999999996873e-05, 9.694000000004532e-06, 9.749999999995873e-06, 1.027699999999604e-05, 1.0236000000003742e-05, 1.0249999999996373e-05, 1.0791000000003048e-05, 1.0235999999996803e-05, 1.0236000000003742e-05, 1.0208999999997137e-05, 9.735999999996303e-06, 1.0235999999996803e-05, 1.0792000000002522e-05, 9.735999999996303e-06, 1.0749999999996873e-05, 1.0237000000003216e-05, 9.652999999998357e-06, 1.0292000000002022e-05, 1.079099999999611e-05, 9.707999999997163e-06, 1.0777999999996013e-05, 9.750000000002812e-06, 1.0750000000003812e-05, 1.0792000000002522e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0235999999996803e-05, 1.0263999999995943e-05, 1.0736000000004242e-05, 1.0707999999998163e-05, 9.680999999997497e-06, 1.0194000000005032e-05, 9.707999999997163e-06, 9.679999999998024e-06, 1.0792000000002522e-05, 9.763999999995443e-06, 1.0249999999996373e-05, 1.0333000000001258e-05, 1.0778000000002952e-05, 9.736000000003242e-06, 1.0235999999996803e-05, 1.0764000000003382e-05, 1.0250000000003312e-05, 1.0806000000002092e-05, 1.0249999999996373e-05]</msg>
<status status="PASS" starttime="20201112 09:54:25.612" endtime="20201112 09:54:25.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.601" endtime="20201112 09:54:25.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.627" endtime="20201112 09:54:25.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:25.635" endtime="20201112 09:54:25.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.631" endtime="20201112 09:54:25.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.622" endtime="20201112 09:54:25.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.177" endtime="20201112 09:54:25.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.176" endtime="20201112 09:54:25.661"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.684" endtime="20201112 09:54:25.702"></status>
</kw>
<msg timestamp="20201112 09:54:25.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.681" endtime="20201112 09:54:25.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:25.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:25.705" endtime="20201112 09:54:25.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.712" endtime="20201112 09:54:25.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.673" endtime="20201112 09:54:25.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.668" endtime="20201112 09:54:25.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:25.735" endtime="20201112 09:54:26.073"></status>
</kw>
<msg timestamp="20201112 09:54:26.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042158028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042169333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:25.732" endtime="20201112 09:54:26.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042158028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042169333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.083" endtime="20201112 09:54:26.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.105" endtime="20201112 09:54:26.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.725" endtime="20201112 09:54:26.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.720" endtime="20201112 09:54:26.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.125" level="INFO">${RESULT} = [{'time': 0.042169333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1305000000003118e-05, 'source_diff': 1.1305000000003118e-05}, {'time': 0.042183472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:26.115" endtime="20201112 09:54:26.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.159" level="INFO">${ACCURACY} = {'diff': [1.1305000000003118e-05, 1.1861000000001898e-05, 1.1306000000002592e-05, 1.129099999999661e-05, 1.1306000000002592e-05, 1.1305999999995653e-05, 1.1361000000001398e-05, 1.130499999999618e-05, ...</msg>
<status status="PASS" starttime="20201112 09:54:26.127" endtime="20201112 09:54:26.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.171" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.169" endtime="20201112 09:54:26.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.177" level="INFO">VALUE: [1.1305000000003118e-05, 1.1861000000001898e-05, 1.1306000000002592e-05, 1.129099999999661e-05, 1.1306000000002592e-05, 1.1305999999995653e-05, 1.1361000000001398e-05, 1.130499999999618e-05, 1.1306000000002592e-05, 1.1847000000002328e-05, 1.0792000000002522e-05, 1.1291000000003548e-05, 1.0806000000002092e-05, 1.0791999999995583e-05, 1.0749999999996873e-05, 1.0763999999996443e-05, 1.0791000000003048e-05, 1.0778000000002952e-05, 1.1318999999995749e-05, 1.1305000000003118e-05, 1.1861000000001898e-05, 1.1805999999996153e-05, 1.0792000000002522e-05, 1.0750000000003812e-05, 1.0763999999996443e-05, 1.0680999999998497e-05, 1.1361000000001398e-05, 1.0791999999995583e-05, 1.1305000000003118e-05, 1.1305000000003118e-05, 1.1834000000002232e-05, 1.1846999999995389e-05, 1.1334000000001732e-05, 1.0735999999997303e-05, 1.1278000000003452e-05, 1.0737000000003716e-05, 1.1861000000001898e-05, 1.0735999999997303e-05, 1.1291999999996083e-05, 1.0764000000003382e-05, 1.1306000000002592e-05, 1.0736000000004242e-05, 1.1277999999996513e-05, 1.0778000000002952e-05, 1.1291000000003548e-05, 1.1291999999996083e-05, 1.0721999999997733e-05, 1.1319999999995223e-05, 1.0749999999996873e-05, 1.0750000000003812e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.174" endtime="20201112 09:54:26.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.161" endtime="20201112 09:54:26.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.187" endtime="20201112 09:54:26.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.197" endtime="20201112 09:54:26.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.193" endtime="20201112 09:54:26.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.182" endtime="20201112 09:54:26.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.663" endtime="20201112 09:54:26.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:25.662" endtime="20201112 09:54:26.224"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.248" endtime="20201112 09:54:26.268"></status>
</kw>
<msg timestamp="20201112 09:54:26.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.245" endtime="20201112 09:54:26.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.271" endtime="20201112 09:54:26.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.278" endtime="20201112 09:54:26.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.237" endtime="20201112 09:54:26.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.231" endtime="20201112 09:54:26.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.303" endtime="20201112 09:54:26.647"></status>
</kw>
<msg timestamp="20201112 09:54:26.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044370653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044383042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.299" endtime="20201112 09:54:26.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044370653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044383042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.656" endtime="20201112 09:54:26.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.675" endtime="20201112 09:54:26.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.292" endtime="20201112 09:54:26.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.287" endtime="20201112 09:54:26.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:26.693" level="INFO">${RESULT} = [{'time': 0.044383042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2388999999994599e-05, 'source_diff': 1.2388999999994599e-05}, {'time': 0.044398972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:26.684" endtime="20201112 09:54:26.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:26.723" level="INFO">${ACCURACY} = {'diff': [1.2388999999994599e-05, 1.1805000000003618e-05, 1.2319999999996223e-05, 1.2332999999996319e-05, 1.1832999999995819e-05, 1.2360999999995459e-05, 1.2347999999995363e-05, 1.1791000000004048e-05...</msg>
<status status="PASS" starttime="20201112 09:54:26.695" endtime="20201112 09:54:26.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.734" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:54:26.732" endtime="20201112 09:54:26.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.740" level="INFO">VALUE: [1.2388999999994599e-05, 1.1805000000003618e-05, 1.2319999999996223e-05, 1.2332999999996319e-05, 1.1832999999995819e-05, 1.2360999999995459e-05, 1.2347999999995363e-05, 1.1791000000004048e-05, 1.1819000000003188e-05, 1.2346999999995889e-05, 1.2861999999995433e-05, 1.2348000000002302e-05, 1.2347000000002828e-05, 1.1735999999998303e-05, 1.1805000000003618e-05, 1.181899999999625e-05, 1.1806000000003092e-05, 1.1847000000002328e-05, 1.2361000000002398e-05, 1.2361000000002398e-05, 1.1819000000003188e-05, 1.2346999999995889e-05, 1.2916000000001704e-05, 1.2903000000001608e-05, 1.2388999999994599e-05, 1.2347000000002828e-05, 1.1750000000004812e-05, 1.2361000000002398e-05, 1.2346999999995889e-05, 1.2360999999995459e-05, 1.1806000000003092e-05, 1.2875000000002468e-05, 1.1777999999997013e-05, 1.2403000000001108e-05, 1.2375000000001968e-05, 1.2430000000000774e-05, 1.1848000000001802e-05, 1.2360999999995459e-05, 1.1805000000003618e-05, 1.1805999999996153e-05, 1.180499999999668e-05, 1.2347000000002828e-05, 1.2346999999995889e-05, 1.1834000000002232e-05, 1.1819000000003188e-05, 1.2360999999995459e-05, 1.2346999999995889e-05, 1.2403000000001108e-05, 1.2333000000003258e-05, 1.2374999999995029e-05]</msg>
<status status="PASS" starttime="20201112 09:54:26.737" endtime="20201112 09:54:26.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.725" endtime="20201112 09:54:26.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.749" endtime="20201112 09:54:26.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:26.757" endtime="20201112 09:54:26.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.753" endtime="20201112 09:54:26.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.745" endtime="20201112 09:54:26.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.226" endtime="20201112 09:54:26.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.225" endtime="20201112 09:54:26.783"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.807" endtime="20201112 09:54:26.826"></status>
</kw>
<msg timestamp="20201112 09:54:26.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.804" endtime="20201112 09:54:26.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:26.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:26.829" endtime="20201112 09:54:26.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.835" endtime="20201112 09:54:26.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.797" endtime="20201112 09:54:26.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.789" endtime="20201112 09:54:26.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:26.859" endtime="20201112 09:54:27.193"></status>
</kw>
<msg timestamp="20201112 09:54:27.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043403319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043416236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:26.855" endtime="20201112 09:54:27.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043403319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043416236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.203" endtime="20201112 09:54:27.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.221" endtime="20201112 09:54:27.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.848" endtime="20201112 09:54:27.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.844" endtime="20201112 09:54:27.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.239" level="INFO">${RESULT} = [{'time': 0.043416236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2916999999994239e-05, 'source_diff': 1.2916999999994239e-05}, {'time': 0.043443194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:27.230" endtime="20201112 09:54:27.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.270" level="INFO">${ACCURACY} = {'diff': [1.2916999999994239e-05, 1.3415999999995265e-05, 1.3402000000002634e-05, 1.3403000000002108e-05, 1.3389000000002538e-05, 1.3417000000001678e-05, 1.2875000000002468e-05, 1.3403000000002108e-05...</msg>
<status status="PASS" starttime="20201112 09:54:27.241" endtime="20201112 09:54:27.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.281" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.278" endtime="20201112 09:54:27.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.286" level="INFO">VALUE: [1.2916999999994239e-05, 1.3415999999995265e-05, 1.3402000000002634e-05, 1.3403000000002108e-05, 1.3389000000002538e-05, 1.3417000000001678e-05, 1.2875000000002468e-05, 1.3403000000002108e-05, 1.2902999999994669e-05, 1.3430999999994309e-05, 1.3403000000002108e-05, 1.3416000000002204e-05, 1.2917000000001178e-05, 1.3402999999995169e-05, 1.3401999999995695e-05, 1.2901999999995195e-05, 1.3417000000001678e-05, 1.2833999999996293e-05, 1.3361000000003398e-05, 1.2874999999995529e-05, 1.3402999999995169e-05, 1.2846999999996389e-05, 1.3403000000002108e-05, 1.3403000000002108e-05, 1.3430000000001774e-05, 1.2931000000000747e-05, 1.3417000000001678e-05, 1.2861000000002898e-05, 1.2889000000002038e-05, 1.3431000000001247e-05, 1.3431000000001247e-05, 1.2944000000000844e-05, 1.3402999999995169e-05, 1.3430000000001774e-05, 1.3416999999994739e-05, 1.2917000000001178e-05, 1.3361000000003398e-05, 1.3416999999994739e-05, 1.3959000000000887e-05, 1.2930999999993809e-05, 1.3401999999995695e-05, 1.2903000000001608e-05, 1.3360999999996459e-05, 1.3415999999995265e-05, 1.3403000000002108e-05, 1.2901999999995195e-05, 1.2888999999995099e-05, 1.2915999999994765e-05, 1.2916999999994239e-05, 1.2847000000003328e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.283" endtime="20201112 09:54:27.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.272" endtime="20201112 09:54:27.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.296" endtime="20201112 09:54:27.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.304" endtime="20201112 09:54:27.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.300" endtime="20201112 09:54:27.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.291" endtime="20201112 09:54:27.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.785" endtime="20201112 09:54:27.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:26.784" endtime="20201112 09:54:27.329"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.352" endtime="20201112 09:54:27.372"></status>
</kw>
<msg timestamp="20201112 09:54:27.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.349" endtime="20201112 09:54:27.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.376" endtime="20201112 09:54:27.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.382" endtime="20201112 09:54:27.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.342" endtime="20201112 09:54:27.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.336" endtime="20201112 09:54:27.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.405" endtime="20201112 09:54:27.740"></status>
</kw>
<msg timestamp="20201112 09:54:27.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043082319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.402" endtime="20201112 09:54:27.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043082319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.749" endtime="20201112 09:54:27.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.768" endtime="20201112 09:54:27.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.395" endtime="20201112 09:54:27.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.390" endtime="20201112 09:54:27.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:27.786" level="INFO">${RESULT} = [{'time': 0.043096222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3902999999995669e-05, 'source_diff': 1.3902999999995669e-05}, {'time': 0.043121222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:27.777" endtime="20201112 09:54:27.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:27.816" level="INFO">${ACCURACY} = {'diff': [1.3902999999995669e-05, 1.3958000000001414e-05, 1.3917000000002178e-05, 1.3916999999995239e-05, 1.4486000000001054e-05, 1.4458000000001914e-05, 1.4473000000000957e-05, 1.4473000000000957e-05...</msg>
<status status="PASS" starttime="20201112 09:54:27.788" endtime="20201112 09:54:27.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.827" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:54:27.825" endtime="20201112 09:54:27.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.833" level="INFO">VALUE: [1.3902999999995669e-05, 1.3958000000001414e-05, 1.3917000000002178e-05, 1.3916999999995239e-05, 1.4486000000001054e-05, 1.4458000000001914e-05, 1.4473000000000957e-05, 1.4473000000000957e-05, 1.3945000000001317e-05, 1.3973000000000457e-05, 1.3930000000002274e-05, 1.4485999999994115e-05, 1.4444000000002344e-05, 1.3916999999995239e-05, 1.4459000000001387e-05, 1.3889000000003038e-05, 1.4458000000001914e-05, 1.3944000000001844e-05, 1.4458000000001914e-05, 1.4472999999994018e-05, 1.4444999999994879e-05, 1.4472000000001484e-05, 1.4459000000001387e-05, 1.3902999999995669e-05, 1.3916999999995239e-05, 1.383299999999782e-05, 1.4473000000000957e-05, 1.3902000000003134e-05, 1.3986000000000554e-05, 1.4473000000000957e-05, 1.4473000000000957e-05, 1.3973000000000457e-05, 1.3889000000003038e-05, 1.3972000000000984e-05, 1.3958000000001414e-05, 1.4389000000003538e-05, 1.3930000000002274e-05, 1.4445000000001817e-05, 1.4472000000001484e-05, 1.3887999999996625e-05, 1.4458000000001914e-05, 1.4458000000001914e-05, 1.4473000000000957e-05, 1.3917000000002178e-05, 1.3958000000001414e-05, 1.3917000000002178e-05, 1.452700000000029e-05, 1.4471999999994545e-05, 1.4458000000001914e-05, 1.3930000000002274e-05]</msg>
<status status="PASS" starttime="20201112 09:54:27.829" endtime="20201112 09:54:27.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.818" endtime="20201112 09:54:27.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.842" endtime="20201112 09:54:27.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:27.851" endtime="20201112 09:54:27.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.846" endtime="20201112 09:54:27.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.838" endtime="20201112 09:54:27.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.332" endtime="20201112 09:54:27.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.331" endtime="20201112 09:54:27.876"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.899" endtime="20201112 09:54:27.917"></status>
</kw>
<msg timestamp="20201112 09:54:27.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.896" endtime="20201112 09:54:27.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:27.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:27.921" endtime="20201112 09:54:27.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.927" endtime="20201112 09:54:27.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.889" endtime="20201112 09:54:27.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.883" endtime="20201112 09:54:27.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:27.952" endtime="20201112 09:54:28.288"></status>
</kw>
<msg timestamp="20201112 09:54:28.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042217139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042232125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:27.949" endtime="20201112 09:54:28.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042217139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042232125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.297" endtime="20201112 09:54:28.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.316" endtime="20201112 09:54:28.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.940" endtime="20201112 09:54:28.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.935" endtime="20201112 09:54:28.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.334" level="INFO">${RESULT} = [{'time': 0.042232125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4986000000001554e-05, 'source_diff': 1.4986000000001554e-05}, {'time': 0.042250875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:28.325" endtime="20201112 09:54:28.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.366" level="INFO">${ACCURACY} = {'diff': [1.4986000000001554e-05, 1.4944000000002844e-05, 1.4958000000002414e-05, 1.4972000000001984e-05, 1.4972000000001984e-05, 1.4986000000001554e-05, 1.5500000000001624e-05, 1.5472000000002484e-05...</msg>
<status status="PASS" starttime="20201112 09:54:28.336" endtime="20201112 09:54:28.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.377" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.375" endtime="20201112 09:54:28.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.382" level="INFO">VALUE: [1.4986000000001554e-05, 1.4944000000002844e-05, 1.4958000000002414e-05, 1.4972000000001984e-05, 1.4972000000001984e-05, 1.4986000000001554e-05, 1.5500000000001624e-05, 1.5472000000002484e-05, 1.554100000000086e-05, 1.5528000000000763e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.505499999999993e-05, 1.4473000000000957e-05, 1.4458999999994449e-05, 1.5000000000001124e-05, 1.5528000000000763e-05, 1.5500000000001624e-05, 1.5000000000001124e-05, 1.5514000000001194e-05, 1.4972000000001984e-05, 1.5514000000001194e-05, 1.5500000000001624e-05, 1.5528000000000763e-05, 1.501300000000122e-05, 1.5485999999995115e-05, 1.554100000000086e-05, 1.5000000000001124e-05, 1.552700000000129e-05, 1.5028000000000263e-05, 1.5055999999999403e-05, 1.5528000000000763e-05, 1.5513999999994255e-05, 1.5000000000001124e-05, 1.554100000000086e-05, 1.4930000000003274e-05, 1.5514000000001194e-05, 1.4972000000001984e-05, 1.5514000000001194e-05, 1.4986000000001554e-05, 1.4930000000003274e-05, 1.5528000000000763e-05, 1.5528000000000763e-05, 1.554100000000086e-05, 1.50689999999995e-05, 1.5528000000000763e-05, 1.4986000000001554e-05, 1.554100000000086e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.379" endtime="20201112 09:54:28.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.368" endtime="20201112 09:54:28.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.392" endtime="20201112 09:54:28.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.400" endtime="20201112 09:54:28.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.396" endtime="20201112 09:54:28.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.387" endtime="20201112 09:54:28.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.878" endtime="20201112 09:54:28.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:27.877" endtime="20201112 09:54:28.426"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.448" endtime="20201112 09:54:28.467"></status>
</kw>
<msg timestamp="20201112 09:54:28.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.445" endtime="20201112 09:54:28.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.470" endtime="20201112 09:54:28.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.477" endtime="20201112 09:54:28.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.438" endtime="20201112 09:54:28.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.432" endtime="20201112 09:54:28.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.500" endtime="20201112 09:54:28.825"></status>
</kw>
<msg timestamp="20201112 09:54:28.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041753139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041769167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.497" endtime="20201112 09:54:28.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041753139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041769167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:28.835" endtime="20201112 09:54:28.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.854" endtime="20201112 09:54:28.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.489" endtime="20201112 09:54:28.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.485" endtime="20201112 09:54:28.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:28.871" level="INFO">${RESULT} = [{'time': 0.041769167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6028000000001263e-05, 'source_diff': 1.6028000000001263e-05}, {'time': 0.041798028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:28.862" endtime="20201112 09:54:28.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:28.902" level="INFO">${ACCURACY} = {'diff': [1.6028000000001263e-05, 1.6556000000000903e-05, 1.6514000000002194e-05, 1.6028000000001263e-05, 2.1957999999995537e-05, 1.6028000000001263e-05, 1.60690000000005e-05, 1.6139000000005288e-05, ...</msg>
<status status="PASS" starttime="20201112 09:54:28.874" endtime="20201112 09:54:28.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.913" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:54:28.911" endtime="20201112 09:54:28.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:28.918" level="INFO">VALUE: [1.6028000000001263e-05, 1.6556000000000903e-05, 1.6514000000002194e-05, 1.6028000000001263e-05, 2.1957999999995537e-05, 1.6028000000001263e-05, 1.60690000000005e-05, 1.6139000000005288e-05, 1.5472000000002484e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.5972000000002984e-05, 1.608300000000007e-05, 1.6542000000001333e-05, 1.5513999999994255e-05, 1.6028000000001263e-05, 1.659700000000014e-05, 1.655500000000143e-05, 1.6570000000000473e-05, 1.608300000000007e-05, 1.6028000000001263e-05, 1.604100000000136e-05, 1.6570000000000473e-05, 1.6028000000001263e-05, 1.6056000000000403e-05, 1.6569000000001e-05, 1.658299999999363e-05, 1.6013999999994755e-05, 1.604100000000136e-05, 1.6056000000000403e-05, 1.6028000000001263e-05, 1.6069999999999973e-05, 1.658300000000057e-05, 1.6556000000000903e-05, 1.609699999999964e-05, 1.60690000000005e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.60690000000005e-05, 1.6584000000000043e-05, 1.606899999999356e-05, 1.6056000000000403e-05, 1.5528000000000763e-05, 1.5528000000000763e-05, 1.6069999999999973e-05, 1.6569000000001e-05, 1.6042000000000833e-05, 1.6569000000001e-05, 1.658300000000057e-05, 1.6042000000000833e-05]</msg>
<status status="PASS" starttime="20201112 09:54:28.915" endtime="20201112 09:54:28.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.904" endtime="20201112 09:54:28.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.928" endtime="20201112 09:54:28.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:28.936" endtime="20201112 09:54:28.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.932" endtime="20201112 09:54:28.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.923" endtime="20201112 09:54:28.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.428" endtime="20201112 09:54:28.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.427" endtime="20201112 09:54:28.962"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:28.986" endtime="20201112 09:54:29.004"></status>
</kw>
<msg timestamp="20201112 09:54:29.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:28.982" endtime="20201112 09:54:29.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.008" endtime="20201112 09:54:29.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.014" endtime="20201112 09:54:29.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.975" endtime="20201112 09:54:29.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.969" endtime="20201112 09:54:29.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.037" endtime="20201112 09:54:29.371"></status>
</kw>
<msg timestamp="20201112 09:54:29.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043273708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043291319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.034" endtime="20201112 09:54:29.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043273708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043291319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:29.381" endtime="20201112 09:54:29.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.400" endtime="20201112 09:54:29.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.027" endtime="20201112 09:54:29.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.022" endtime="20201112 09:54:29.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.417" level="INFO">${RESULT} = [{'time': 0.043291319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.761100000000071e-05, 'source_diff': 1.761100000000071e-05}, {'time': 0.043314236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:29.408" endtime="20201112 09:54:29.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.448" level="INFO">${ACCURACY} = {'diff': [1.761100000000071e-05, 1.70690000000015e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.7098000000000113e-05, 1.763899999999985e-05, 1.7193999999998155e-05, 1.6597999999999613e-05, 1.71...</msg>
<status status="PASS" starttime="20201112 09:54:29.419" endtime="20201112 09:54:29.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.459" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:54:29.457" endtime="20201112 09:54:29.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.464" level="INFO">VALUE: [1.761100000000071e-05, 1.70690000000015e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.7098000000000113e-05, 1.763899999999985e-05, 1.7193999999998155e-05, 1.6597999999999613e-05, 1.712499999999978e-05, 1.711100000000021e-05, 1.708300000000107e-05, 1.765299999999942e-05, 1.7084000000000543e-05, 1.762500000000028e-05, 1.6527999999994825e-05, 1.708300000000107e-05, 1.708300000000107e-05, 1.7084000000000543e-05, 1.765299999999942e-05, 1.762500000000028e-05, 1.759700000000114e-05, 1.7139000000006288e-05, 1.763899999999985e-05, 1.765299999999942e-05, 1.7179999999998585e-05, 1.7638000000000376e-05, 1.7084000000000543e-05, 1.762499999999334e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.704099999999542e-05, 1.658299999999363e-05, 1.713899999999935e-05, 1.7055999999994464e-05, 1.712499999999978e-05, 1.763899999999985e-05, 1.708299999999413e-05, 1.658300000000057e-05, 1.7098000000000113e-05, 1.712499999999978e-05, 1.708300000000107e-05, 1.708300000000107e-05, 1.711100000000021e-05, 1.7638000000000376e-05, 1.763899999999985e-05, 1.655500000000143e-05, 1.7638000000000376e-05, 1.7042000000001833e-05, 1.712499999999978e-05, 1.655499999999449e-05]</msg>
<status status="PASS" starttime="20201112 09:54:29.461" endtime="20201112 09:54:29.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.450" endtime="20201112 09:54:29.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.480" endtime="20201112 09:54:29.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:29.488" endtime="20201112 09:54:29.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.484" endtime="20201112 09:54:29.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.475" endtime="20201112 09:54:29.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.964" endtime="20201112 09:54:29.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:28.963" endtime="20201112 09:54:29.514"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.537" endtime="20201112 09:54:29.555"></status>
</kw>
<msg timestamp="20201112 09:54:29.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.533" endtime="20201112 09:54:29.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:29.558" endtime="20201112 09:54:29.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.565" endtime="20201112 09:54:29.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.526" endtime="20201112 09:54:29.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.520" endtime="20201112 09:54:29.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.589" endtime="20201112 09:54:29.920"></status>
</kw>
<msg timestamp="20201112 09:54:29.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0418465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041865194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:29.586" endtime="20201112 09:54:29.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:29.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0418465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041865194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:29.929" endtime="20201112 09:54:29.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:29.948" endtime="20201112 09:54:29.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.579" endtime="20201112 09:54:29.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.574" endtime="20201112 09:54:29.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:29.967" level="INFO">${RESULT} = [{'time': 0.041865194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8693999999999655e-05, 'source_diff': 1.8693999999999655e-05}, {'time': 0.041885944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:29.958" endtime="20201112 09:54:29.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:29.997" level="INFO">${ACCURACY} = {'diff': [1.8693999999999655e-05, 1.761100000000071e-05, 1.813900000000035e-05, 1.8680000000000085e-05, 1.868099999999956e-05, 1.7638000000000376e-05, 1.818099999999906e-05, 1.765299999999942e-05, 1.8...</msg>
<status status="PASS" starttime="20201112 09:54:29.969" endtime="20201112 09:54:29.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.008" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.006" endtime="20201112 09:54:30.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.014" level="INFO">VALUE: [1.8693999999999655e-05, 1.761100000000071e-05, 1.813900000000035e-05, 1.8680000000000085e-05, 1.868099999999956e-05, 1.7638000000000376e-05, 1.818099999999906e-05, 1.765299999999942e-05, 1.868099999999956e-05, 1.818099999999906e-05, 1.8166000000000015e-05, 1.762500000000028e-05, 1.8193999999999155e-05, 1.818099999999906e-05, 1.868099999999956e-05, 1.7693999999998655e-05, 1.8693999999999655e-05, 1.8208000000005664e-05, 1.8679999999993147e-05, 1.816699999999949e-05, 1.8680000000000085e-05, 1.765299999999942e-05, 1.815299999999992e-05, 1.8179999999999585e-05, 1.8680000000000085e-05, 1.813900000000035e-05, 1.7665999999999515e-05, 1.862500000000128e-05, 1.813900000000035e-05, 1.8138000000000876e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.866699999999999e-05, 1.8179999999999585e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.8721999999998795e-05, 1.8179999999999585e-05, 1.8193999999999155e-05, 1.765299999999942e-05, 1.8056000000002403e-05, 1.8235999999997865e-05, 1.811100000000121e-05, 1.8179999999999585e-05, 1.813900000000035e-05, 1.8193999999999155e-05, 1.812500000000078e-05, 1.8235999999997865e-05, 1.8707999999999225e-05, 1.8193999999999155e-05]</msg>
<status status="PASS" starttime="20201112 09:54:30.011" endtime="20201112 09:54:30.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.999" endtime="20201112 09:54:30.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.023" endtime="20201112 09:54:30.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.032" endtime="20201112 09:54:30.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.027" endtime="20201112 09:54:30.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.019" endtime="20201112 09:54:30.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.516" endtime="20201112 09:54:30.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:29.515" endtime="20201112 09:54:30.057"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.080" endtime="20201112 09:54:30.098"></status>
</kw>
<msg timestamp="20201112 09:54:30.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.077" endtime="20201112 09:54:30.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.102" endtime="20201112 09:54:30.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.108" endtime="20201112 09:54:30.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.069" endtime="20201112 09:54:30.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.064" endtime="20201112 09:54:30.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.131" endtime="20201112 09:54:30.466"></status>
</kw>
<msg timestamp="20201112 09:54:30.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041752944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.128" endtime="20201112 09:54:30.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041752944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.475" endtime="20201112 09:54:30.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.494" endtime="20201112 09:54:30.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.121" endtime="20201112 09:54:30.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.116" endtime="20201112 09:54:30.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:30.513" level="INFO">${RESULT} = [{'time': 0.041752944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.861100000000171e-05, 'source_diff': 1.861100000000171e-05}, {'time': 0.041779764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:30.504" endtime="20201112 09:54:30.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:30.546" level="INFO">${ACCURACY} = {'diff': [1.861100000000171e-05, 1.868099999999956e-05, 1.9194000000000155e-05, 1.919499999999963e-05, 1.8721999999998795e-05, 1.8735999999998365e-05, 1.9750000000005874e-05, 1.9749999999998935e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:54:30.515" endtime="20201112 09:54:30.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.556" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:54:30.554" endtime="20201112 09:54:30.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.562" level="INFO">VALUE: [1.861100000000171e-05, 1.868099999999956e-05, 1.9194000000000155e-05, 1.919499999999963e-05, 1.8721999999998795e-05, 1.8735999999998365e-05, 1.9750000000005874e-05, 1.9749999999998935e-05, 1.8721999999998795e-05, 1.9735999999999365e-05, 1.9235999999998865e-05, 1.9735999999999365e-05, 1.9235999999998865e-05, 1.923699999999834e-05, 1.868099999999956e-05, 1.9777999999998075e-05, 1.9721999999999795e-05, 1.979099999999817e-05, 1.8707999999999225e-05, 1.9749999999998935e-05, 1.868099999999956e-05, 1.9207999999999725e-05, 1.9194000000000155e-05, 1.9180000000000585e-05, 1.8721999999998795e-05, 1.9207999999999725e-05, 1.9223000000005708e-05, 1.9194000000000155e-05, 1.9180000000000585e-05, 1.919499999999963e-05, 1.9235999999998865e-05, 1.9235999999998865e-05, 1.9249999999998435e-05, 1.9749999999998935e-05, 1.919499999999963e-05, 1.868099999999956e-05, 1.9236000000005804e-05, 1.865300000000042e-05, 1.9249999999998435e-05, 1.8666000000000516e-05, 1.911100000000221e-05, 1.918100000000006e-05, 1.9749999999998935e-05, 1.8735999999998365e-05, 1.9749999999998935e-05, 1.9235999999998865e-05, 1.919499999999963e-05, 1.9235999999998865e-05, 1.92089999999992e-05, 1.9735999999999365e-05]</msg>
<status status="PASS" starttime="20201112 09:54:30.559" endtime="20201112 09:54:30.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.547" endtime="20201112 09:54:30.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.572" endtime="20201112 09:54:30.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:30.580" endtime="20201112 09:54:30.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.576" endtime="20201112 09:54:30.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.567" endtime="20201112 09:54:30.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.059" endtime="20201112 09:54:30.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.058" endtime="20201112 09:54:30.606"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.630" endtime="20201112 09:54:30.648"></status>
</kw>
<msg timestamp="20201112 09:54:30.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.626" endtime="20201112 09:54:30.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:30.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:30.651" endtime="20201112 09:54:30.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.657" endtime="20201112 09:54:30.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.619" endtime="20201112 09:54:30.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.613" endtime="20201112 09:54:30.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:30.681" endtime="20201112 09:54:31.012"></status>
</kw>
<msg timestamp="20201112 09:54:31.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043027764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043048056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:30.677" endtime="20201112 09:54:31.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043027764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043048056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.021" endtime="20201112 09:54:31.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.040" endtime="20201112 09:54:31.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.670" endtime="20201112 09:54:31.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.666" endtime="20201112 09:54:31.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.057" level="INFO">${RESULT} = [{'time': 0.043048056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0291999999998145e-05, 'source_diff': 2.0291999999998145e-05}, {'time': 0.043074889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:31.048" endtime="20201112 09:54:31.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.089" level="INFO">${ACCURACY} = {'diff': [2.0291999999998145e-05, 1.9763999999998505e-05, 1.9750000000005874e-05, 1.9763999999998505e-05, 1.973699999999884e-05, 1.9749999999998935e-05, 2.02769999999991e-05, 2.030500000000518e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:54:31.059" endtime="20201112 09:54:31.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.100" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.098" endtime="20201112 09:54:31.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.105" level="INFO">VALUE: [2.0291999999998145e-05, 1.9763999999998505e-05, 1.9750000000005874e-05, 1.9763999999998505e-05, 1.973699999999884e-05, 1.9749999999998935e-05, 2.02769999999991e-05, 2.030500000000518e-05, 2.0263999999999005e-05, 1.9721999999999795e-05, 2.037499999999609e-05, 1.9721999999999795e-05, 2.0277999999998575e-05, 2.0264000000005944e-05, 2.0236000000006804e-05, 1.97089999999997e-05, 2.029099999999867e-05, 2.0291999999998145e-05, 1.9749999999998935e-05, 2.081900000000525e-05, 2.029099999999867e-05, 2.0263999999999005e-05, 2.0291999999998145e-05, 2.0792000000005584e-05, 2.029099999999867e-05, 2.0291999999998145e-05, 2.0791999999998645e-05, 2.0264000000005944e-05, 2.0777999999999075e-05, 2.0264000000005944e-05, 2.0277999999998575e-05, 2.0277999999998575e-05, 2.0291999999998145e-05, 2.0791999999998645e-05, 1.9749999999998935e-05, 2.019500000000063e-05, 2.0222000000000295e-05, 2.0277999999998575e-05, 2.0736000000000365e-05, 2.0306000000004654e-05, 2.0249999999999435e-05, 2.0263999999999005e-05, 2.0277999999998575e-05, 2.080499999999874e-05, 2.026299999999953e-05, 2.029099999999867e-05, 2.0263999999999005e-05, 1.9819999999996785e-05, 1.9763999999998505e-05, 1.9749999999998935e-05]</msg>
<status status="PASS" starttime="20201112 09:54:31.102" endtime="20201112 09:54:31.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.091" endtime="20201112 09:54:31.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.115" endtime="20201112 09:54:31.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.123" endtime="20201112 09:54:31.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.119" endtime="20201112 09:54:31.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.110" endtime="20201112 09:54:31.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.608" endtime="20201112 09:54:31.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:30.607" endtime="20201112 09:54:31.149"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.171" endtime="20201112 09:54:31.191"></status>
</kw>
<msg timestamp="20201112 09:54:31.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.168" endtime="20201112 09:54:31.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.194" endtime="20201112 09:54:31.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.200" endtime="20201112 09:54:31.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.161" endtime="20201112 09:54:31.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.155" endtime="20201112 09:54:31.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.223" endtime="20201112 09:54:31.555"></status>
</kw>
<msg timestamp="20201112 09:54:31.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041540583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041565319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.220" endtime="20201112 09:54:31.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041540583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041565319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.565" endtime="20201112 09:54:31.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.584" endtime="20201112 09:54:31.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.213" endtime="20201112 09:54:31.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.208" endtime="20201112 09:54:31.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:31.601" level="INFO">${RESULT} = [{'time': 0.041565319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4736000000004366e-05, 'source_diff': 2.4736000000004366e-05}, {'time': 0.041610347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:31.593" endtime="20201112 09:54:31.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:31.634" level="INFO">${ACCURACY} = {'diff': [2.4736000000004366e-05, 2.4915999999999827e-05, 2.4415999999999327e-05, 2.4500000000003685e-05, 2.462500000000034e-05, 2.430500000000224e-05, 2.4749999999996997e-05, 2.430500000000224e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:54:31.604" endtime="20201112 09:54:31.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.645" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:54:31.643" endtime="20201112 09:54:31.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.651" level="INFO">VALUE: [2.4736000000004366e-05, 2.4915999999999827e-05, 2.4415999999999327e-05, 2.4500000000003685e-05, 2.462500000000034e-05, 2.430500000000224e-05, 2.4749999999996997e-05, 2.430500000000224e-05, 2.4500000000003685e-05, 2.516699999999955e-05, 2.436100000000052e-05, 2.4985999999997677e-05, 2.433300000000138e-05, 2.511100000000127e-05, 2.4792000000002645e-05, 2.4499999999996747e-05, 2.5069999999995096e-05, 2.444499999999794e-05, 2.494499999999844e-05, 2.470899999999776e-05, 2.4472000000004546e-05, 2.47369999999969e-05, 2.4792000000002645e-05, 2.4820000000001785e-05, 2.4749999999996997e-05, 2.4443999999998467e-05, 2.4415999999999327e-05, 2.4388000000000187e-05, 2.438899999999966e-05, 2.4763999999996567e-05, 2.4986000000004616e-05, 2.4708000000005226e-05, 2.4665999999999577e-05, 2.5166000000000077e-05, 2.4736000000004366e-05, 2.468099999999862e-05, 2.4193999999998217e-05, 2.4778000000003075e-05, 2.437500000000009e-05, 2.4527999999995886e-05, 2.505500000000299e-05, 2.4360999999993582e-05, 2.438899999999966e-05, 2.512500000000084e-05, 2.443099999999837e-05, 2.462500000000034e-05, 2.4763999999996567e-05, 2.458300000000163e-05, 2.419499999999769e-05, 2.461100000000077e-05]</msg>
<status status="PASS" starttime="20201112 09:54:31.648" endtime="20201112 09:54:31.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.636" endtime="20201112 09:54:31.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.661" endtime="20201112 09:54:31.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:31.669" endtime="20201112 09:54:31.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.665" endtime="20201112 09:54:31.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.656" endtime="20201112 09:54:31.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.151" endtime="20201112 09:54:31.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.150" endtime="20201112 09:54:31.695"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.717" endtime="20201112 09:54:31.737"></status>
</kw>
<msg timestamp="20201112 09:54:31.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.714" endtime="20201112 09:54:31.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:31.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:31.740" endtime="20201112 09:54:31.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.746" endtime="20201112 09:54:31.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.707" endtime="20201112 09:54:31.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.701" endtime="20201112 09:54:31.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:31.769" endtime="20201112 09:54:32.070"></status>
</kw>
<msg timestamp="20201112 09:54:32.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041623903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041649958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:31.766" endtime="20201112 09:54:32.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041623903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041649958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.074" endtime="20201112 09:54:32.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.083" endtime="20201112 09:54:32.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.759" endtime="20201112 09:54:32.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.754" endtime="20201112 09:54:32.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.091" level="INFO">${RESULT} = [{'time': 0.041649958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.605500000000399e-05, 'source_diff': 2.605500000000399e-05}, {'time': 0.041690972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.086" endtime="20201112 09:54:32.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.105" level="INFO">${ACCURACY} = {'diff': [2.605500000000399e-05, 2.5304999999996303e-05, 2.590199999999432e-05, 2.5388999999993722e-05, 2.616700000000055e-05, 2.5306000000002715e-05, 2.5554999999996553e-05, 2.5860999999995082e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:54:32.092" endtime="20201112 09:54:32.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.110" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.109" endtime="20201112 09:54:32.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.113" level="INFO">VALUE: [2.605500000000399e-05, 2.5304999999996303e-05, 2.590199999999432e-05, 2.5388999999993722e-05, 2.616700000000055e-05, 2.5306000000002715e-05, 2.5554999999996553e-05, 2.5860999999995082e-05, 2.5971999999999107e-05, 2.5208000000005726e-05, 2.531900000000281e-05, 2.5555999999996026e-05, 2.581900000000331e-05, 2.5985999999998677e-05, 2.597299999999858e-05, 2.5486000000005116e-05, 2.538900000000066e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.534700000000195e-05, 2.5472000000005546e-05, 2.570899999999876e-05, 2.561100000000177e-05, 2.5332999999995442e-05, 2.536100000000152e-05, 2.5999999999998247e-05, 2.5569999999995596e-05, 2.6068999999996623e-05, 2.5666000000000577e-05, 2.5971999999999107e-05, 2.558300000000263e-05, 2.5514000000004255e-05, 2.540300000000023e-05, 2.605500000000399e-05, 2.563900000000091e-05, 2.5568999999996123e-05, 2.586100000000202e-05, 2.5749999999997997e-05, 2.5777999999997137e-05, 2.5708000000006226e-05, 2.6124999999994902e-05, 2.5528000000003825e-05, 2.562500000000134e-05, 2.5208000000005726e-05, 2.6069999999996096e-05, 2.5528000000003825e-05, 2.561100000000177e-05, 2.538900000000066e-05, 2.5583999999995166e-05, 2.6112000000001745e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.111" endtime="20201112 09:54:32.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.106" endtime="20201112 09:54:32.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.117" endtime="20201112 09:54:32.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.121" endtime="20201112 09:54:32.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.119" endtime="20201112 09:54:32.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.115" endtime="20201112 09:54:32.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.697" endtime="20201112 09:54:32.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:31.696" endtime="20201112 09:54:32.143"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.153" endtime="20201112 09:54:32.168"></status>
</kw>
<msg timestamp="20201112 09:54:32.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.152" endtime="20201112 09:54:32.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.170" endtime="20201112 09:54:32.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.173" endtime="20201112 09:54:32.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.148" endtime="20201112 09:54:32.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.146" endtime="20201112 09:54:32.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.184" endtime="20201112 09:54:32.470"></status>
</kw>
<msg timestamp="20201112 09:54:32.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024415889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024442278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.183" endtime="20201112 09:54:32.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024415889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024442278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.475" endtime="20201112 09:54:32.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.483" endtime="20201112 09:54:32.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.179" endtime="20201112 09:54:32.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.177" endtime="20201112 09:54:32.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.491" level="INFO">${RESULT} = [{'time': 0.024442278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.638900000000166e-05, 'source_diff': 2.638900000000166e-05}, {'time': 0.024477264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:32.487" endtime="20201112 09:54:32.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.506" level="INFO">${ACCURACY} = {'diff': [2.638900000000166e-05, 2.6749999999998997e-05, 2.665299999999801e-05, 2.6360999999999052e-05, 2.694500000000044e-05, 2.6514000000001786e-05, 2.6792000000001176e-05, 2.668099999999715e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:54:32.492" endtime="20201112 09:54:32.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.511" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.510" endtime="20201112 09:54:32.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.514" level="INFO">VALUE: [2.638900000000166e-05, 2.6749999999998997e-05, 2.665299999999801e-05, 2.6360999999999052e-05, 2.694500000000044e-05, 2.6514000000001786e-05, 2.6792000000001176e-05, 2.668099999999715e-05, 2.643100000000037e-05, 2.69170000000013e-05, 2.6708000000000287e-05, 2.6833000000000412e-05, 2.6805999999997276e-05, 2.6846999999999982e-05, 2.6916000000001827e-05, 2.6416000000001327e-05, 2.6944000000000967e-05, 2.6346999999999482e-05, 2.6972000000000107e-05, 2.6264000000001536e-05, 2.6513999999998317e-05, 2.6472000000003076e-05, 2.6207999999999787e-05, 2.6679999999997678e-05, 2.6458000000000037e-05, 2.6985999999999677e-05, 2.638900000000166e-05, 2.6360999999999052e-05, 2.666699999999758e-05, 2.6306000000000246e-05, 2.7028000000001856e-05, 2.618100000000012e-05, 2.6820000000000316e-05, 2.6611999999998776e-05, 2.619500000000316e-05, 2.640300000000123e-05, 2.7027999999998387e-05, 2.6458000000000037e-05, 2.6847999999999456e-05, 2.6806000000000746e-05, 2.694500000000044e-05, 2.6528000000001356e-05, 2.7013000000002813e-05, 2.6999999999999247e-05, 2.6458000000000037e-05, 2.640300000000123e-05, 2.7069000000001092e-05, 2.6583000000000162e-05, 2.6263999999998067e-05, 2.6374999999998622e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.512" endtime="20201112 09:54:32.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.507" endtime="20201112 09:54:32.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.518" endtime="20201112 09:54:32.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:32.522" endtime="20201112 09:54:32.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.520" endtime="20201112 09:54:32.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.516" endtime="20201112 09:54:32.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.144" endtime="20201112 09:54:32.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.143" endtime="20201112 09:54:32.544"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.554" endtime="20201112 09:54:32.571"></status>
</kw>
<msg timestamp="20201112 09:54:32.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.553" endtime="20201112 09:54:32.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:32.572" endtime="20201112 09:54:32.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.575" endtime="20201112 09:54:32.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.549" endtime="20201112 09:54:32.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.547" endtime="20201112 09:54:32.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.586" endtime="20201112 09:54:32.902"></status>
</kw>
<msg timestamp="20201112 09:54:32.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024468417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024495653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.585" endtime="20201112 09:54:32.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024468417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024495653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:32.912" endtime="20201112 09:54:32.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:32.931" endtime="20201112 09:54:32.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.581" endtime="20201112 09:54:32.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.579" endtime="20201112 09:54:32.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:32.948" level="INFO">${RESULT} = [{'time': 0.024495653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.024540681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:32.939" endtime="20201112 09:54:32.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:32.979" level="INFO">${ACCURACY} = {'diff': [2.7235999999999927e-05, 2.765300000000248e-05, 2.7374999999999622e-05, 2.7458000000001037e-05, 2.7806000000001746e-05, 2.7721999999997388e-05, 2.7598000000000206e-05, 2.8111000000000802e-05,...</msg>
<status status="PASS" starttime="20201112 09:54:32.950" endtime="20201112 09:54:32.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.992" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:54:32.988" endtime="20201112 09:54:32.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:32.997" level="INFO">VALUE: [2.7235999999999927e-05, 2.765300000000248e-05, 2.7374999999999622e-05, 2.7458000000001037e-05, 2.7806000000001746e-05, 2.7721999999997388e-05, 2.7598000000000206e-05, 2.8111000000000802e-05, 2.8179999999999178e-05, 2.7401999999999288e-05, 2.7693999999998248e-05, 2.7763000000000093e-05, 2.7486000000000177e-05, 2.7472000000000607e-05, 2.8000000000000247e-05, 2.7486000000000177e-05, 2.7472000000000607e-05, 2.8041000000002952e-05, 2.790300000000273e-05, 2.8028000000002856e-05, 2.7222000000000357e-05, 2.7347000000000482e-05, 2.8068999999998623e-05, 2.7320000000000816e-05, 2.7764000000003036e-05, 2.7833000000001412e-05, 2.740299999999876e-05, 2.74309999999979e-05, 2.7555999999998027e-05, 2.7235999999999927e-05, 2.7749999999999997e-05, 2.7235999999999927e-05, 2.7292000000001676e-05, 2.7679999999998678e-05, 2.794499999999797e-05, 2.8013999999999817e-05, 2.7888999999999692e-05, 2.7818999999998373e-05, 2.7986000000000677e-05, 2.7776999999999663e-05, 2.7250000000002966e-05, 2.7597000000000732e-05, 2.7263999999999067e-05, 2.7472000000000607e-05, 2.7804999999998803e-05, 2.7361000000000052e-05, 2.7499999999999747e-05, 2.7875000000000122e-05, 2.743100000000137e-05, 2.8082999999998193e-05]</msg>
<status status="PASS" starttime="20201112 09:54:32.994" endtime="20201112 09:54:32.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.981" endtime="20201112 09:54:33.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.007" endtime="20201112 09:54:33.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.015" endtime="20201112 09:54:33.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.011" endtime="20201112 09:54:33.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.002" endtime="20201112 09:54:33.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.545" endtime="20201112 09:54:33.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:32.544" endtime="20201112 09:54:33.041"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.063" endtime="20201112 09:54:33.082"></status>
</kw>
<msg timestamp="20201112 09:54:33.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.060" endtime="20201112 09:54:33.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.085" endtime="20201112 09:54:33.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.091" endtime="20201112 09:54:33.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.053" endtime="20201112 09:54:33.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.047" endtime="20201112 09:54:33.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.115" endtime="20201112 09:54:33.445"></status>
</kw>
<msg timestamp="20201112 09:54:33.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041563, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041591347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:33.111" endtime="20201112 09:54:33.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041563, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041591347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:54:33.455" endtime="20201112 09:54:33.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.474" endtime="20201112 09:54:33.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.104" endtime="20201112 09:54:33.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.099" endtime="20201112 09:54:33.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:33.491" level="INFO">${RESULT} = [{'time': 0.041591347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8346999999998013e-05, 'source_diff': 2.8346999999998013e-05}, {'time': 0.041640333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:33.482" endtime="20201112 09:54:33.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:33.522" level="INFO">${ACCURACY} = {'diff': [2.8346999999998013e-05, 2.888900000000416e-05, 2.9098000000005175e-05, 2.9027000000000913e-05, 2.8513000000000843e-05, 2.8554999999999553e-05, 2.9000000000001247e-05, 2.8208000000001787e-05,...</msg>
<status status="PASS" starttime="20201112 09:54:33.493" endtime="20201112 09:54:33.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.533" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:54:33.531" endtime="20201112 09:54:33.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.538" level="INFO">VALUE: [2.8346999999998013e-05, 2.888900000000416e-05, 2.9098000000005175e-05, 2.9027000000000913e-05, 2.8513000000000843e-05, 2.8554999999999553e-05, 2.9000000000001247e-05, 2.8208000000001787e-05, 2.9027000000000913e-05, 2.9028000000000387e-05, 2.869399999999578e-05, 2.8332999999998443e-05, 2.9055000000000053e-05, 2.9000000000001247e-05, 2.84170000000028e-05, 2.8750000000000997e-05, 2.9014000000000817e-05, 2.84170000000028e-05, 2.837500000000409e-05, 2.8818999999999373e-05, 2.8555999999999027e-05, 2.8541999999999457e-05, 2.915300000000398e-05, 2.8971999999995168e-05, 2.894500000000244e-05, 2.9124999999997903e-05, 2.9014000000000817e-05, 2.8930000000003397e-05, 2.8777999999993198e-05, 2.863900000000391e-05, 2.8652999999996542e-05, 2.8318999999998873e-05, 2.8277000000000163e-05, 2.8819000000006312e-05, 2.842999999999596e-05, 2.8402000000003758e-05, 2.838900000000366e-05, 2.840300000000323e-05, 2.8541999999999457e-05, 2.8374999999997152e-05, 2.8500000000000747e-05, 2.8264000000000067e-05, 2.8874999999997653e-05, 2.9138999999997472e-05, 2.820900000000126e-05, 2.89170000000033e-05, 2.888799999999775e-05, 2.84170000000028e-05, 2.8736000000001427e-05, 2.8958000000002537e-05]</msg>
<status status="PASS" starttime="20201112 09:54:33.535" endtime="20201112 09:54:33.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.524" endtime="20201112 09:54:33.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.549" endtime="20201112 09:54:33.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:33.558" endtime="20201112 09:54:33.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.553" endtime="20201112 09:54:33.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.545" endtime="20201112 09:54:33.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.043" endtime="20201112 09:54:33.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.042" endtime="20201112 09:54:33.583"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.606" endtime="20201112 09:54:33.624"></status>
</kw>
<msg timestamp="20201112 09:54:33.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.602" endtime="20201112 09:54:33.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:33.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:33.628" endtime="20201112 09:54:33.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.634" endtime="20201112 09:54:33.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.595" endtime="20201112 09:54:33.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.589" endtime="20201112 09:54:33.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:33.657" endtime="20201112 09:54:33.989"></status>
</kw>
<msg timestamp="20201112 09:54:33.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041493361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041522806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.654" endtime="20201112 09:54:33.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041493361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041522806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:33.999" endtime="20201112 09:54:34.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.018" endtime="20201112 09:54:34.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.647" endtime="20201112 09:54:34.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.642" endtime="20201112 09:54:34.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.035" level="INFO">${RESULT} = [{'time': 0.041522806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.944500000000294e-05, 'source_diff': 2.944500000000294e-05}, {'time': 0.041559833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:34.026" endtime="20201112 09:54:34.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.066" level="INFO">${ACCURACY} = {'diff': [2.944500000000294e-05, 2.942999999999696e-05, 2.9402999999997292e-05, 3.0083000000000193e-05, 2.9805000000000803e-05, 2.9819000000000373e-05, 3.0014000000001817e-05, 2.9582999999999693e-05, ...</msg>
<status status="PASS" starttime="20201112 09:54:34.037" endtime="20201112 09:54:34.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.077" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.074" endtime="20201112 09:54:34.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.082" level="INFO">VALUE: [2.944500000000294e-05, 2.942999999999696e-05, 2.9402999999997292e-05, 3.0083000000000193e-05, 2.9805000000000803e-05, 2.9819000000000373e-05, 3.0014000000001817e-05, 2.9582999999999693e-05, 2.9430999999996432e-05, 2.9805000000000803e-05, 2.9666999999997112e-05, 3.0166999999997612e-05, 2.9486000000002177e-05, 2.9402999999997292e-05, 3.0124999999998903e-05, 2.943100000000337e-05, 2.92370000000014e-05, 2.92370000000014e-05, 2.9610999999998833e-05, 2.9514000000001317e-05, 2.9319999999999347e-05, 2.9374999999998153e-05, 2.9874999999998653e-05, 2.9374999999998153e-05, 2.9402999999997292e-05, 3.0152999999998042e-05, 2.9555000000000553e-05, 2.9444000000003467e-05, 2.969399999999678e-05, 2.9708000000003287e-05, 2.9624999999998403e-05, 2.966599999999764e-05, 2.9305000000000303e-05, 3.0014000000001817e-05, 2.9832999999999943e-05, 2.967999999999721e-05, 2.967999999999721e-05, 2.9652999999997542e-05, 3.0083000000000193e-05, 2.9430999999996432e-05, 2.9777000000001663e-05, 3.0097000000006702e-05, 3.0166999999997612e-05, 2.9500000000001747e-05, 2.962500000000534e-05, 2.940300000000423e-05, 2.9528000000000887e-05, 2.9152999999997042e-05, 2.9652999999997542e-05, 3.0152999999998042e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.079" endtime="20201112 09:54:34.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.068" endtime="20201112 09:54:34.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.092" endtime="20201112 09:54:34.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.102" endtime="20201112 09:54:34.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.097" endtime="20201112 09:54:34.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.087" endtime="20201112 09:54:34.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.585" endtime="20201112 09:54:34.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:33.584" endtime="20201112 09:54:34.127"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.150" endtime="20201112 09:54:34.169"></status>
</kw>
<msg timestamp="20201112 09:54:34.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.147" endtime="20201112 09:54:34.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.172" endtime="20201112 09:54:34.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.178" endtime="20201112 09:54:34.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.139" endtime="20201112 09:54:34.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.134" endtime="20201112 09:54:34.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.202" endtime="20201112 09:54:34.539"></status>
</kw>
<msg timestamp="20201112 09:54:34.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041531986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041562514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.199" endtime="20201112 09:54:34.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041531986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041562514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.548" endtime="20201112 09:54:34.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.567" endtime="20201112 09:54:34.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.191" endtime="20201112 09:54:34.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.187" endtime="20201112 09:54:34.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:34.584" level="INFO">${RESULT} = [{'time': 0.041562514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.052800000000189e-05, 'source_diff': 3.052800000000189e-05}, {'time': 0.041605514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:34.575" endtime="20201112 09:54:34.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:34.617" level="INFO">${ACCURACY} = {'diff': [3.052800000000189e-05, 3.105600000000153e-05, 3.108400000000067e-05, 3.069399999999778e-05, 3.063899999999897e-05, 3.0306000000000777e-05, 3.0264000000002067e-05, 3.0360999999999583e-05, 3.0...</msg>
<status status="PASS" starttime="20201112 09:54:34.586" endtime="20201112 09:54:34.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.628" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:54:34.626" endtime="20201112 09:54:34.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.633" level="INFO">VALUE: [3.052800000000189e-05, 3.105600000000153e-05, 3.108400000000067e-05, 3.069399999999778e-05, 3.063899999999897e-05, 3.0306000000000777e-05, 3.0264000000002067e-05, 3.0360999999999583e-05, 3.061099999999983e-05, 3.05700000000006e-05, 3.091600000000583e-05, 3.0499999999995808e-05, 3.091599999999889e-05, 3.058300000000069e-05, 3.09579999999976e-05, 3.0500000000002747e-05, 3.0305000000001303e-05, 3.06249999999994e-05, 3.076400000000257e-05, 3.0263999999995128e-05, 3.04579999999971e-05, 3.074999999999606e-05, 3.04579999999971e-05, 3.019399999999728e-05, 3.069500000000419e-05, 3.066700000000505e-05, 3.065299999999854e-05, 3.091599999999889e-05, 3.080600000000128e-05, 3.087499999999965e-05, 3.0222000000003357e-05, 3.042999999999796e-05, 3.0152999999998042e-05, 3.069499999999725e-05, 3.0319000000000873e-05, 3.106900000000162e-05, 3.0500000000002747e-05, 3.077700000000266e-05, 3.038799999999925e-05, 3.017999999999771e-05, 3.088900000000616e-05, 3.099999999999631e-05, 3.0458000000004037e-05, 3.059700000000026e-05, 3.076399999999563e-05, 3.0278000000001637e-05, 3.068099999999768e-05, 3.083300000000094e-05, 3.08050000000018e-05, 3.098599999999674e-05]</msg>
<status status="PASS" starttime="20201112 09:54:34.630" endtime="20201112 09:54:34.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.619" endtime="20201112 09:54:34.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.649" endtime="20201112 09:54:34.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:34.657" endtime="20201112 09:54:34.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.653" endtime="20201112 09:54:34.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.644" endtime="20201112 09:54:34.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.129" endtime="20201112 09:54:34.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.128" endtime="20201112 09:54:34.684"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.707" endtime="20201112 09:54:34.727"></status>
</kw>
<msg timestamp="20201112 09:54:34.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.704" endtime="20201112 09:54:34.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:34.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:34.731" endtime="20201112 09:54:34.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.738" endtime="20201112 09:54:34.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.696" endtime="20201112 09:54:34.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.690" endtime="20201112 09:54:34.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:34.761" endtime="20201112 09:54:35.094"></status>
</kw>
<msg timestamp="20201112 09:54:35.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044103431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:34.758" endtime="20201112 09:54:35.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044103431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.104" endtime="20201112 09:54:35.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.123" endtime="20201112 09:54:35.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.751" endtime="20201112 09:54:35.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.746" endtime="20201112 09:54:35.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.140" level="INFO">${RESULT} = [{'time': 0.044103431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.215300000000004e-05, 'source_diff': 3.215300000000004e-05}, {'time': 0.044153444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.131" endtime="20201112 09:54:35.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.171" level="INFO">${ACCURACY} = {'diff': [3.215300000000004e-05, 3.197199999999817e-05, 3.119399999999828e-05, 3.173699999999696e-05, 3.216600000000014e-05, 3.173600000000443e-05, 3.173600000000443e-05, 3.191599999999989e-05, 3.1526...</msg>
<status status="PASS" starttime="20201112 09:54:35.142" endtime="20201112 09:54:35.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.182" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.179" endtime="20201112 09:54:35.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.187" level="INFO">VALUE: [3.215300000000004e-05, 3.197199999999817e-05, 3.119399999999828e-05, 3.173699999999696e-05, 3.216600000000014e-05, 3.173600000000443e-05, 3.173600000000443e-05, 3.191599999999989e-05, 3.1526999999996475e-05, 3.145800000000504e-05, 3.209700000000176e-05, 3.151400000000332e-05, 3.215300000000004e-05, 3.201399999999688e-05, 3.145800000000504e-05, 3.188900000000022e-05, 3.198599999999774e-05, 3.202800000000339e-05, 3.1568999999995184e-05, 3.152800000000289e-05, 3.152799999999595e-05, 3.216699999999961e-05, 3.158400000000117e-05, 3.168099999999868e-05, 3.172299999999739e-05, 3.186100000000108e-05, 3.195899999999807e-05, 3.1612000000000307e-05, 3.154200000000246e-05, 3.20700000000021e-05, 3.2054999999996114e-05, 3.183300000000194e-05, 3.141699999999886e-05, 3.2068999999995684e-05, 3.216699999999961e-05, 3.209700000000176e-05, 3.129100000000273e-05, 3.202800000000339e-05, 3.151399999999638e-05, 3.147199999999767e-05, 3.16380000000005e-05, 3.144399999999853e-05, 3.191699999999936e-05, 3.141699999999886e-05, 3.211100000000133e-05, 3.187500000000065e-05, 3.156999999999466e-05, 3.191699999999936e-05, 3.12779999999957e-05, 3.199999999999731e-05]</msg>
<status status="PASS" starttime="20201112 09:54:35.184" endtime="20201112 09:54:35.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.172" endtime="20201112 09:54:35.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.196" endtime="20201112 09:54:35.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.205" endtime="20201112 09:54:35.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.200" endtime="20201112 09:54:35.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.192" endtime="20201112 09:54:35.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.686" endtime="20201112 09:54:35.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:34.685" endtime="20201112 09:54:35.230"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.255" endtime="20201112 09:54:35.275"></status>
</kw>
<msg timestamp="20201112 09:54:35.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.251" endtime="20201112 09:54:35.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.278" endtime="20201112 09:54:35.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.284" endtime="20201112 09:54:35.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.244" endtime="20201112 09:54:35.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.237" endtime="20201112 09:54:35.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.308" endtime="20201112 09:54:35.637"></status>
</kw>
<msg timestamp="20201112 09:54:35.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043616181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043648472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.304" endtime="20201112 09:54:35.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043616181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043648472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.647" endtime="20201112 09:54:35.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.666" endtime="20201112 09:54:35.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.297" endtime="20201112 09:54:35.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.292" endtime="20201112 09:54:35.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:35.683" level="INFO">${RESULT} = [{'time': 0.043648472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.229100000000373e-05, 'source_diff': 3.229100000000373e-05}, {'time': 0.043688458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:35.674" endtime="20201112 09:54:35.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:35.714" level="INFO">${ACCURACY} = {'diff': [3.229100000000373e-05, 3.222199999999842e-05, 3.269499999999925e-05, 3.247299999999814e-05, 3.241600000000039e-05, 3.223599999999799e-05, 3.241600000000039e-05, 3.284700000000251e-05, 3.3166...</msg>
<status status="PASS" starttime="20201112 09:54:35.686" endtime="20201112 09:54:35.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.725" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:54:35.722" endtime="20201112 09:54:35.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.730" level="INFO">VALUE: [3.229100000000373e-05, 3.222199999999842e-05, 3.269499999999925e-05, 3.247299999999814e-05, 3.241600000000039e-05, 3.223599999999799e-05, 3.241600000000039e-05, 3.284700000000251e-05, 3.316600000000114e-05, 3.249999999999781e-05, 3.298599999999874e-05, 3.305500000000405e-05, 3.320799999999985e-05, 3.273599999999849e-05, 3.240300000000029e-05, 3.241699999999986e-05, 3.294400000000003e-05, 3.254200000000346e-05, 3.316700000000061e-05, 3.313900000000147e-05, 3.236100000000158e-05, 3.281999999999591e-05, 3.252800000000389e-05, 3.252800000000389e-05, 3.22779999999967e-05, 3.316600000000114e-05, 3.316600000000114e-05, 3.256999999999566e-05, 3.226399999999713e-05, 3.294400000000003e-05, 3.240200000000082e-05, 3.279200000000371e-05, 3.237500000000115e-05, 3.293000000000046e-05, 3.299999999999831e-05, 3.316700000000061e-05, 3.2610999999994894e-05, 3.273600000000543e-05, 3.261100000000183e-05, 3.291700000000036e-05, 3.240300000000029e-05, 3.234700000000201e-05, 3.224999999999756e-05, 3.280600000000328e-05, 3.276400000000457e-05, 3.252800000000389e-05, 3.304199999999702e-05, 3.29579999999996e-05, 3.270899999999882e-05, 3.316600000000114e-05]</msg>
<status status="PASS" starttime="20201112 09:54:35.727" endtime="20201112 09:54:35.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.716" endtime="20201112 09:54:35.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.740" endtime="20201112 09:54:35.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:35.749" endtime="20201112 09:54:35.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.744" endtime="20201112 09:54:35.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.735" endtime="20201112 09:54:35.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.233" endtime="20201112 09:54:35.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.231" endtime="20201112 09:54:35.775"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.798" endtime="20201112 09:54:35.818"></status>
</kw>
<msg timestamp="20201112 09:54:35.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.795" endtime="20201112 09:54:35.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:35.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:35.821" endtime="20201112 09:54:35.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.828" endtime="20201112 09:54:35.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.787" endtime="20201112 09:54:35.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.782" endtime="20201112 09:54:35.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:35.853" endtime="20201112 09:54:36.144"></status>
</kw>
<msg timestamp="20201112 09:54:36.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042562819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042596222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:35.849" endtime="20201112 09:54:36.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042562819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042596222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.149" endtime="20201112 09:54:36.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.157" endtime="20201112 09:54:36.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.842" endtime="20201112 09:54:36.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.837" endtime="20201112 09:54:36.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.165" level="INFO">${RESULT} = [{'time': 0.042596222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.340300000000129e-05, 'source_diff': 3.340300000000129e-05}, {'time': 0.042638264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:36.161" endtime="20201112 09:54:36.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.179" level="INFO">${ACCURACY} = {'diff': [3.340300000000129e-05, 3.359700000000326e-05, 3.374999999999906e-05, 3.398599999999974e-05, 3.374999999999906e-05, 3.391700000000136e-05, 3.352800000000489e-05, 3.3944999999993564e-05, 3.340...</msg>
<status status="PASS" starttime="20201112 09:54:36.166" endtime="20201112 09:54:36.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.184" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.183" endtime="20201112 09:54:36.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.187" level="INFO">VALUE: [3.340300000000129e-05, 3.359700000000326e-05, 3.374999999999906e-05, 3.398599999999974e-05, 3.374999999999906e-05, 3.391700000000136e-05, 3.352800000000489e-05, 3.3944999999993564e-05, 3.340200000000182e-05, 3.4124999999995964e-05, 3.399999999999931e-05, 3.3916999999994424e-05, 3.395900000000007e-05, 3.319499999999975e-05, 3.4012999999999405e-05, 3.356999999999666e-05, 3.3332999999996504e-05, 3.316600000000114e-05, 3.411100000000333e-05, 3.331900000000387e-05, 3.4124999999995964e-05, 3.399999999999931e-05, 3.369400000000078e-05, 3.391600000000189e-05, 3.348599999999924e-05, 3.34580000000001e-05, 3.366700000000111e-05, 3.3346999999996074e-05, 3.3888999999995284e-05, 3.4096999999996824e-05, 3.348599999999924e-05, 3.395900000000007e-05, 3.318100000000018e-05, 3.352799999999795e-05, 3.370899999999982e-05, 3.390300000000179e-05, 3.4166999999994674e-05, 3.4110999999996394e-05, 3.319400000000028e-05, 3.3624999999995464e-05, 3.394400000000103e-05, 3.3680999999993744e-05, 3.3276999999998225e-05, 3.386100000000308e-05, 3.3804999999997865e-05, 3.352800000000489e-05, 3.344400000000053e-05, 3.387500000000265e-05, 3.324999999999856e-05, 3.405599999999759e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.185" endtime="20201112 09:54:36.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.180" endtime="20201112 09:54:36.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.191" endtime="20201112 09:54:36.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.195" endtime="20201112 09:54:36.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.193" endtime="20201112 09:54:36.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.189" endtime="20201112 09:54:36.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.777" endtime="20201112 09:54:36.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:35.776" endtime="20201112 09:54:36.216"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.227" endtime="20201112 09:54:36.243"></status>
</kw>
<msg timestamp="20201112 09:54:36.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.225" endtime="20201112 09:54:36.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.245" endtime="20201112 09:54:36.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.248" endtime="20201112 09:54:36.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.222" endtime="20201112 09:54:36.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.219" endtime="20201112 09:54:36.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.260" endtime="20201112 09:54:36.544"></status>
</kw>
<msg timestamp="20201112 09:54:36.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024416792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024451181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.259" endtime="20201112 09:54:36.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024416792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024451181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.549" endtime="20201112 09:54:36.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.557" endtime="20201112 09:54:36.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.254" endtime="20201112 09:54:36.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.252" endtime="20201112 09:54:36.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:36.566" level="INFO">${RESULT} = [{'time': 0.024451181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4388999999999253e-05, 'source_diff': 3.4388999999999253e-05}, {'time': 0.024497236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:36.561" endtime="20201112 09:54:36.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:36.580" level="INFO">${ACCURACY} = {'diff': [3.4388999999999253e-05, 3.491699999999889e-05, 3.468000000000221e-05, 3.4611000000000364e-05, 3.500000000000031e-05, 3.470800000000135e-05, 3.473600000000049e-05, 3.498600000000074e-05, 3.49...</msg>
<status status="PASS" starttime="20201112 09:54:36.567" endtime="20201112 09:54:36.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.586" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:54:36.584" endtime="20201112 09:54:36.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.588" level="INFO">VALUE: [3.4388999999999253e-05, 3.491699999999889e-05, 3.468000000000221e-05, 3.4611000000000364e-05, 3.500000000000031e-05, 3.470800000000135e-05, 3.473600000000049e-05, 3.498600000000074e-05, 3.49580000000016e-05, 3.484799999999705e-05, 3.454200000000199e-05, 3.4833000000001474e-05, 3.423599999999999e-05, 3.454199999999852e-05, 3.5166999999999143e-05, 3.4652999999999073e-05, 3.494499999999803e-05, 3.457000000000113e-05, 3.424999999999956e-05, 3.494499999999803e-05, 3.436199999999959e-05, 3.47779999999992e-05, 3.495799999999813e-05, 3.434800000000002e-05, 3.482000000000138e-05, 3.5139000000000004e-05, 3.497200000000117e-05, 3.491600000000289e-05, 3.424999999999956e-05, 3.4152999999998573e-05, 3.5083000000001724e-05, 3.470799999999788e-05, 3.4875000000000184e-05, 3.5125000000000434e-05, 3.494399999999856e-05, 3.493000000000246e-05, 3.47779999999992e-05, 3.4804999999998865e-05, 3.4569000000001654e-05, 3.516700000000261e-05, 3.4611000000000364e-05, 3.4361000000000114e-05, 3.454200000000199e-05, 3.469500000000125e-05, 3.5152999999999573e-05, 3.423599999999999e-05, 3.46519999999996e-05, 3.45840000000007e-05, 3.44580000000011e-05, 3.469500000000125e-05]</msg>
<status status="PASS" starttime="20201112 09:54:36.587" endtime="20201112 09:54:36.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.581" endtime="20201112 09:54:36.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.593" endtime="20201112 09:54:36.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:36.597" endtime="20201112 09:54:36.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.595" endtime="20201112 09:54:36.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.591" endtime="20201112 09:54:36.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.217" endtime="20201112 09:54:36.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.217" endtime="20201112 09:54:36.618"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.629" endtime="20201112 09:54:36.645"></status>
</kw>
<msg timestamp="20201112 09:54:36.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.627" endtime="20201112 09:54:36.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:36.647" endtime="20201112 09:54:36.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.650" endtime="20201112 09:54:36.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.624" endtime="20201112 09:54:36.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.621" endtime="20201112 09:54:36.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.661" endtime="20201112 09:54:36.967"></status>
</kw>
<msg timestamp="20201112 09:54:36.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024601486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024637403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.659" endtime="20201112 09:54:36.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:36.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024601486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024637403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:36.976" endtime="20201112 09:54:36.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:36.995" endtime="20201112 09:54:36.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.656" endtime="20201112 09:54:37.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.654" endtime="20201112 09:54:37.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.013" level="INFO">${RESULT} = [{'time': 0.024637403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5916999999999893e-05, 'source_diff': 3.5916999999999893e-05}, {'time': 0.024682403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:37.004" endtime="20201112 09:54:37.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.044" level="INFO">${ACCURACY} = {'diff': [3.5916999999999893e-05, 3.593099999999946e-05, 3.547200000000167e-05, 3.540200000000035e-05, 3.554199999999952e-05, 3.542999999999949e-05, 3.561200000000084e-05, 3.59719999999987e-05, 3.5416...</msg>
<status status="PASS" starttime="20201112 09:54:37.015" endtime="20201112 09:54:37.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.054" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.052" endtime="20201112 09:54:37.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.060" level="INFO">VALUE: [3.5916999999999893e-05, 3.593099999999946e-05, 3.547200000000167e-05, 3.540200000000035e-05, 3.554199999999952e-05, 3.542999999999949e-05, 3.561200000000084e-05, 3.59719999999987e-05, 3.5416999999999393e-05, 3.59580000000026e-05, 3.616600000000067e-05, 3.5290999999999795e-05, 3.5875000000001184e-05, 3.604200000000002e-05, 3.5625000000000934e-05, 3.52779999999997e-05, 3.5568999999999185e-05, 3.550000000000081e-05, 3.554200000000299e-05, 3.5653000000000074e-05, 3.5889000000000754e-05, 3.551400000000038e-05, 3.5875000000001184e-05, 3.5596999999998324e-05, 3.5304999999999365e-05, 3.519500000000175e-05, 3.613800000000153e-05, 3.576400000000063e-05, 3.5889000000000754e-05, 3.566600000000017e-05, 3.602800000000045e-05, 3.526399999999666e-05, 3.519399999999881e-05, 3.598599999999827e-05, 3.6125000000001434e-05, 3.573600000000149e-05, 3.601400000000088e-05, 3.5389000000000254e-05, 3.54719999999982e-05, 3.526400000000013e-05, 3.5639000000000504e-05, 3.5818999999999435e-05, 3.574999999999759e-05, 3.6153000000000574e-05, 3.581999999999891e-05, 3.548600000000124e-05, 3.550000000000081e-05, 3.581999999999891e-05, 3.566700000000311e-05, 3.6153000000000574e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.057" endtime="20201112 09:54:37.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.045" endtime="20201112 09:54:37.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.069" endtime="20201112 09:54:37.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.078" endtime="20201112 09:54:37.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.073" endtime="20201112 09:54:37.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.065" endtime="20201112 09:54:37.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.619" endtime="20201112 09:54:37.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:36.618" endtime="20201112 09:54:37.103"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.126" endtime="20201112 09:54:37.146"></status>
</kw>
<msg timestamp="20201112 09:54:37.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.123" endtime="20201112 09:54:37.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.149" endtime="20201112 09:54:37.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.156" endtime="20201112 09:54:37.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.116" endtime="20201112 09:54:37.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.110" endtime="20201112 09:54:37.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.179" endtime="20201112 09:54:37.513"></status>
</kw>
<msg timestamp="20201112 09:54:37.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041640458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04167675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:37.176" endtime="20201112 09:54:37.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041640458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04167675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:37.523" endtime="20201112 09:54:37.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.542" endtime="20201112 09:54:37.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.169" endtime="20201112 09:54:37.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.164" endtime="20201112 09:54:37.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:37.559" level="INFO">${RESULT} = [{'time': 0.04167675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.629200000000027e-05, 'source_diff': 3.629200000000027e-05}, {'time': 0.04172575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:37.550" endtime="20201112 09:54:37.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:37.589" level="INFO">${ACCURACY} = {'diff': [3.629200000000027e-05, 3.702800000000145e-05, 3.6694999999996314e-05, 3.6360999999998644e-05, 3.675000000000206e-05, 3.632000000000635e-05, 3.679200000000077e-05, 3.683399999999948e-05, 3.64...</msg>
<status status="PASS" starttime="20201112 09:54:37.561" endtime="20201112 09:54:37.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.600" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:54:37.598" endtime="20201112 09:54:37.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.606" level="INFO">VALUE: [3.629200000000027e-05, 3.702800000000145e-05, 3.6694999999996314e-05, 3.6360999999998644e-05, 3.675000000000206e-05, 3.632000000000635e-05, 3.679200000000077e-05, 3.683399999999948e-05, 3.649999999999487e-05, 3.69859999999958e-05, 3.619400000000328e-05, 3.6833000000000005e-05, 3.7083000000000255e-05, 3.7055000000001115e-05, 3.620800000000285e-05, 3.6527000000001475e-05, 3.6416999999996924e-05, 3.648600000000224e-05, 3.670800000000335e-05, 3.722300000000289e-05, 3.715300000000504e-05, 3.693100000000393e-05, 3.679200000000077e-05, 3.705600000000059e-05, 3.6846999999999575e-05, 3.679200000000077e-05, 3.6402999999997354e-05, 3.6874999999998714e-05, 3.679200000000077e-05, 3.668100000000368e-05, 3.711100000000633e-05, 3.7124999999998964e-05, 3.675000000000206e-05, 3.698700000000221e-05, 3.701400000000188e-05, 3.7096999999999825e-05, 3.636100000000558e-05, 3.69580000000036e-05, 3.7096999999999825e-05, 3.651400000000138e-05, 3.666600000000464e-05, 3.6360999999998644e-05, 3.6819000000000435e-05, 3.694400000000403e-05, 3.679200000000077e-05, 3.62780000000007e-05, 3.6902999999997854e-05, 3.631999999999941e-05, 3.636199999999812e-05, 3.66250000000054e-05]</msg>
<status status="PASS" starttime="20201112 09:54:37.603" endtime="20201112 09:54:37.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.591" endtime="20201112 09:54:37.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.615" endtime="20201112 09:54:37.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:37.623" endtime="20201112 09:54:37.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.619" endtime="20201112 09:54:37.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.611" endtime="20201112 09:54:37.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.105" endtime="20201112 09:54:37.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.104" endtime="20201112 09:54:37.649"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.672" endtime="20201112 09:54:37.692"></status>
</kw>
<msg timestamp="20201112 09:54:37.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.669" endtime="20201112 09:54:37.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:37.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:37.695" endtime="20201112 09:54:37.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.701" endtime="20201112 09:54:37.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.661" endtime="20201112 09:54:37.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.655" endtime="20201112 09:54:37.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:37.725" endtime="20201112 09:54:38.057"></status>
</kw>
<msg timestamp="20201112 09:54:38.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041814042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041851458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:37.721" endtime="20201112 09:54:38.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041814042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041851458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.067" endtime="20201112 09:54:38.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.086" endtime="20201112 09:54:38.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.714" endtime="20201112 09:54:38.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.709" endtime="20201112 09:54:38.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.105" level="INFO">${RESULT} = [{'time': 0.041851458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.741599999999845e-05, 'source_diff': 3.741599999999845e-05}, {'time': 0.041906444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:38.095" endtime="20201112 09:54:38.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.135" level="INFO">${ACCURACY} = {'diff': [3.741599999999845e-05, 3.8097000000000825e-05, 3.782000000000091e-05, 3.723600000000299e-05, 3.719500000000375e-05, 3.774999999999612e-05, 3.722199999999648e-05, 3.7777000000002725e-05, 3.74...</msg>
<status status="PASS" starttime="20201112 09:54:38.107" endtime="20201112 09:54:38.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.146" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.143" endtime="20201112 09:54:38.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.151" level="INFO">VALUE: [3.741599999999845e-05, 3.8097000000000825e-05, 3.782000000000091e-05, 3.723600000000299e-05, 3.719500000000375e-05, 3.774999999999612e-05, 3.722199999999648e-05, 3.7777000000002725e-05, 3.747199999999673e-05, 3.7902999999998854e-05, 3.815199999999963e-05, 3.8111000000000395e-05, 3.745799999999716e-05, 3.7819000000001435e-05, 3.729200000000127e-05, 3.7888999999999284e-05, 3.752799999999501e-05, 3.8041000000002545e-05, 3.7512999999995966e-05, 3.7360999999999644e-05, 3.74580000000041e-05, 3.79859999999968e-05, 3.719399999999734e-05, 3.7430999999997494e-05, 3.8111000000000395e-05, 3.8138999999999534e-05, 3.743100000000443e-05, 3.801399999999594e-05, 3.747199999999673e-05, 3.7763000000003155e-05, 3.7652999999998604e-05, 3.7624999999999464e-05, 3.747199999999673e-05, 3.720799999999691e-05, 3.742999999999802e-05, 3.7902999999998854e-05, 3.775000000000306e-05, 3.805600000000159e-05, 3.790300000000579e-05, 3.752800000000195e-05, 3.801400000000288e-05, 3.726399999999519e-05, 3.7512999999995966e-05, 3.7610999999999895e-05, 3.7445000000004e-05, 3.8138999999999534e-05, 3.779200000000177e-05, 3.795799999999766e-05, 3.797200000000417e-05, 3.7652999999998604e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.148" endtime="20201112 09:54:38.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.137" endtime="20201112 09:54:38.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.161" endtime="20201112 09:54:38.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.169" endtime="20201112 09:54:38.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.165" endtime="20201112 09:54:38.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.156" endtime="20201112 09:54:38.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.651" endtime="20201112 09:54:38.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:37.650" endtime="20201112 09:54:38.195"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.217" endtime="20201112 09:54:38.237"></status>
</kw>
<msg timestamp="20201112 09:54:38.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.214" endtime="20201112 09:54:38.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.240" endtime="20201112 09:54:38.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.246" endtime="20201112 09:54:38.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.207" endtime="20201112 09:54:38.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.201" endtime="20201112 09:54:38.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.270" endtime="20201112 09:54:38.602"></status>
</kw>
<msg timestamp="20201112 09:54:38.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041617458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041656347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.267" endtime="20201112 09:54:38.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041617458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041656347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.611" endtime="20201112 09:54:38.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.630" endtime="20201112 09:54:38.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.259" endtime="20201112 09:54:38.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.254" endtime="20201112 09:54:38.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:38.649" level="INFO">${RESULT} = [{'time': 0.041656347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8889000000000284e-05, 'source_diff': 3.8889000000000284e-05}, {'time': 0.041704347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:38.640" endtime="20201112 09:54:38.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:38.682" level="INFO">${ACCURACY} = {'diff': [3.8889000000000284e-05, 3.852800000000295e-05, 3.826399999999619e-05, 3.875000000000406e-05, 3.8430999999998494e-05, 3.8180999999998244e-05, 3.9111000000001395e-05, 3.8388999999999784e-05, 3...</msg>
<status status="PASS" starttime="20201112 09:54:38.651" endtime="20201112 09:54:38.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.693" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:54:38.691" endtime="20201112 09:54:38.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.698" level="INFO">VALUE: [3.8889000000000284e-05, 3.852800000000295e-05, 3.826399999999619e-05, 3.875000000000406e-05, 3.8430999999998494e-05, 3.8180999999998244e-05, 3.9111000000001395e-05, 3.8388999999999784e-05, 3.852800000000295e-05, 3.901400000000388e-05, 3.84859999999973e-05, 3.830600000000184e-05, 3.9125000000000965e-05, 3.872199999999798e-05, 3.8902999999999854e-05, 3.899999999999737e-05, 3.895799999999866e-05, 3.8346999999994136e-05, 3.9040999999996606e-05, 3.8375000000000214e-05, 3.870799999999841e-05, 3.819400000000528e-05, 3.852800000000295e-05, 3.901400000000388e-05, 3.82780000000027e-05, 3.855599999999515e-05, 3.874999999999712e-05, 3.8875000000000715e-05, 3.8847000000001575e-05, 3.8916999999999424e-05, 3.855600000000209e-05, 3.908400000000173e-05, 3.8861000000001145e-05, 3.8680999999998744e-05, 3.873599999999755e-05, 3.844399999999859e-05, 3.8375000000000214e-05, 3.8582999999994816e-05, 3.8776999999996786e-05, 3.849999999999687e-05, 3.9096999999994886e-05, 3.852800000000295e-05, 3.9111000000001395e-05, 3.8346999999994136e-05, 3.8347000000001075e-05, 3.832000000000141e-05, 3.9083000000002255e-05, 3.897199999999823e-05, 3.844399999999859e-05, 3.832000000000141e-05]</msg>
<status status="PASS" starttime="20201112 09:54:38.695" endtime="20201112 09:54:38.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.684" endtime="20201112 09:54:38.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.708" endtime="20201112 09:54:38.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:38.716" endtime="20201112 09:54:38.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.712" endtime="20201112 09:54:38.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.703" endtime="20201112 09:54:38.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.197" endtime="20201112 09:54:38.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.196" endtime="20201112 09:54:38.742"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.764" endtime="20201112 09:54:38.784"></status>
</kw>
<msg timestamp="20201112 09:54:38.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.761" endtime="20201112 09:54:38.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:38.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:38.787" endtime="20201112 09:54:38.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.794" endtime="20201112 09:54:38.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.754" endtime="20201112 09:54:38.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.748" endtime="20201112 09:54:38.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:38.817" endtime="20201112 09:54:39.151"></status>
</kw>
<msg timestamp="20201112 09:54:39.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041925403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041965431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:38.814" endtime="20201112 09:54:39.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041925403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041965431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.161" endtime="20201112 09:54:39.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.179" endtime="20201112 09:54:39.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.806" endtime="20201112 09:54:39.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.802" endtime="20201112 09:54:39.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.197" level="INFO">${RESULT} = [{'time': 0.041965431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.002799999999751e-05, 'source_diff': 4.002799999999751e-05}, {'time': 0.042012486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.188" endtime="20201112 09:54:39.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.229" level="INFO">${ACCURACY} = {'diff': [4.002799999999751e-05, 3.945799999999916e-05, 3.952800000000395e-05, 3.9416999999999924e-05, 3.993000000000052e-05, 3.9375000000001215e-05, 3.955599999999615e-05, 3.999999999999837e-05, 3.95...</msg>
<status status="PASS" starttime="20201112 09:54:39.199" endtime="20201112 09:54:39.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.240" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.238" endtime="20201112 09:54:39.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.245" level="INFO">VALUE: [4.002799999999751e-05, 3.945799999999916e-05, 3.952800000000395e-05, 3.9416999999999924e-05, 3.993000000000052e-05, 3.9375000000001215e-05, 3.955599999999615e-05, 3.999999999999837e-05, 3.9512999999997966e-05, 3.9319000000002935e-05, 3.9611000000001895e-05, 3.9611000000001895e-05, 3.926400000000413e-05, 3.9138999999993596e-05, 3.9944999999999564e-05, 3.92780000000037e-05, 3.9430999999999494e-05, 3.955599999999615e-05, 3.938799999999437e-05, 3.9639000000001035e-05, 3.9625000000001465e-05, 3.9610999999994956e-05, 3.9903000000000854e-05, 4.0026999999998036e-05, 3.9555000000003615e-05, 3.9903000000000854e-05, 3.9917000000000424e-05, 4.018000000000077e-05, 3.973599999999855e-05, 3.94859999999983e-05, 3.9333000000002505e-05, 3.949999999999787e-05, 3.9208999999998384e-05, 3.973599999999855e-05, 3.9403000000000354e-05, 3.9680999999999744e-05, 4.001399999999794e-05, 3.951399999999744e-05, 4.0153000000001104e-05, 3.975000000000506e-05, 4.002799999999751e-05, 3.9708999999998884e-05, 3.952800000000395e-05, 4.0012999999998466e-05, 3.980600000000334e-05, 3.9762999999998216e-05, 3.9291000000003795e-05, 3.9403000000000354e-05, 3.9777000000004725e-05, 3.948600000000524e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.242" endtime="20201112 09:54:39.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.231" endtime="20201112 09:54:39.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.255" endtime="20201112 09:54:39.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.264" endtime="20201112 09:54:39.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.259" endtime="20201112 09:54:39.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.250" endtime="20201112 09:54:39.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.744" endtime="20201112 09:54:39.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:38.743" endtime="20201112 09:54:39.289"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.312" endtime="20201112 09:54:39.332"></status>
</kw>
<msg timestamp="20201112 09:54:39.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.309" endtime="20201112 09:54:39.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.336" endtime="20201112 09:54:39.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.342" endtime="20201112 09:54:39.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.302" endtime="20201112 09:54:39.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.296" endtime="20201112 09:54:39.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.365" endtime="20201112 09:54:39.698"></status>
</kw>
<msg timestamp="20201112 09:54:39.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041990097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.362" endtime="20201112 09:54:39.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041990097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.708" endtime="20201112 09:54:39.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.727" endtime="20201112 09:54:39.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.355" endtime="20201112 09:54:39.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.350" endtime="20201112 09:54:39.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:39.744" level="INFO">${RESULT} = [{'time': 0.041990097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.094399999999415e-05, 'source_diff': 4.094399999999415e-05}, {'time': 0.042048097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:39.735" endtime="20201112 09:54:39.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:39.776" level="INFO">${ACCURACY} = {'diff': [4.094399999999415e-05, 4.0804999999997926e-05, 4.054200000000452e-05, 4.0639000000002035e-05, 4.0596999999996386e-05, 4.0931000000000994e-05, 4.097200000000023e-05, 4.099999999999937e-05, 4....</msg>
<status status="PASS" starttime="20201112 09:54:39.746" endtime="20201112 09:54:39.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.787" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:54:39.785" endtime="20201112 09:54:39.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.793" level="INFO">VALUE: [4.094399999999415e-05, 4.0804999999997926e-05, 4.054200000000452e-05, 4.0639000000002035e-05, 4.0596999999996386e-05, 4.0931000000000994e-05, 4.097200000000023e-05, 4.099999999999937e-05, 4.0846999999996636e-05, 4.0625000000002465e-05, 4.101399999999894e-05, 4.0762999999999217e-05, 4.0611000000002895e-05, 4.045800000000016e-05, 4.020799999999991e-05, 4.0236999999998524e-05, 4.0889000000002285e-05, 4.1110999999996456e-05, 4.0667000000001174e-05, 4.0360999999995706e-05, 4.045800000000016e-05, 4.044400000000059e-05, 4.101400000000588e-05, 4.049999999999887e-05, 4.076399999999869e-05, 4.027799999999776e-05, 4.0667000000001174e-05, 4.076399999999869e-05, 4.1153000000002105e-05, 4.052799999999801e-05, 4.0861000000003145e-05, 4.0903000000001855e-05, 4.049999999999887e-05, 4.022199999999948e-05, 4.0403000000001354e-05, 4.095800000000066e-05, 4.061200000000237e-05, 4.095800000000066e-05, 4.0597000000003325e-05, 4.0653000000001605e-05, 4.077799999999826e-05, 4.045800000000016e-05, 4.020799999999991e-05, 4.0361000000002645e-05, 4.1082999999997316e-05, 4.0318999999996996e-05, 4.0431000000000494e-05, 4.0319000000003935e-05, 4.081999999999697e-05, 4.0833000000004005e-05]</msg>
<status status="PASS" starttime="20201112 09:54:39.790" endtime="20201112 09:54:39.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.778" endtime="20201112 09:54:39.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.803" endtime="20201112 09:54:39.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:39.811" endtime="20201112 09:54:39.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.807" endtime="20201112 09:54:39.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.798" endtime="20201112 09:54:39.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.292" endtime="20201112 09:54:39.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.290" endtime="20201112 09:54:39.837"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.864" endtime="20201112 09:54:39.884"></status>
</kw>
<msg timestamp="20201112 09:54:39.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.860" endtime="20201112 09:54:39.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:39.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:39.887" endtime="20201112 09:54:39.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.893" endtime="20201112 09:54:39.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.852" endtime="20201112 09:54:39.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.843" endtime="20201112 09:54:39.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:39.917" endtime="20201112 09:54:40.226"></status>
</kw>
<msg timestamp="20201112 09:54:40.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046342917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046384986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:39.914" endtime="20201112 09:54:40.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046342917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046384986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.230" endtime="20201112 09:54:40.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.238" endtime="20201112 09:54:40.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.906" endtime="20201112 09:54:40.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.902" endtime="20201112 09:54:40.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.247" level="INFO">${RESULT} = [{'time': 0.046384986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2069000000005685e-05, 'source_diff': 4.2069000000005685e-05}, {'time': 0.046439028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:40.243" endtime="20201112 09:54:40.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.261" level="INFO">${ACCURACY} = {'diff': [4.2069000000005685e-05, 4.124999999999962e-05, 4.1568999999998246e-05, 4.1389000000002785e-05, 4.1194999999993875e-05, 4.158400000000423e-05, 4.1860999999997206e-05, 4.147200000000073e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:54:40.248" endtime="20201112 09:54:40.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.267" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.265" endtime="20201112 09:54:40.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.269" level="INFO">VALUE: [4.2069000000005685e-05, 4.124999999999962e-05, 4.1568999999998246e-05, 4.1389000000002785e-05, 4.1194999999993875e-05, 4.158400000000423e-05, 4.1860999999997206e-05, 4.147200000000073e-05, 4.176399999999969e-05, 4.2153000000003105e-05, 4.149999999999987e-05, 4.177799999999926e-05, 4.161199999999643e-05, 4.176399999999969e-05, 4.1361000000003645e-05, 4.2027000000000037e-05, 4.197200000000123e-05, 4.14860000000003e-05, 4.145800000000116e-05, 4.1333000000004505e-05, 4.1389000000002785e-05, 4.2152999999996166e-05, 4.1181000000001244e-05, 4.1625000000003465e-05, 4.1360999999996706e-05, 4.1209000000000384e-05, 4.200000000000037e-05, 4.175000000000012e-05, 4.1639000000003035e-05, 4.1582999999997816e-05, 4.1945000000001564e-05, 4.151399999999944e-05, 4.21660000000032e-05, 4.176399999999969e-05, 4.218000000000277e-05, 4.1277000000006225e-05, 4.1653000000002605e-05, 4.1818999999998496e-05, 4.2054999999999176e-05, 4.194400000000209e-05, 4.143000000000202e-05, 4.2083000000005255e-05, 4.195800000000166e-05, 4.1597000000004325e-05, 4.2152999999996166e-05, 4.119400000000134e-05, 4.1889000000003285e-05, 4.200000000000037e-05, 4.201399999999994e-05, 4.177799999999926e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.268" endtime="20201112 09:54:40.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.262" endtime="20201112 09:54:40.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.274" endtime="20201112 09:54:40.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.278" endtime="20201112 09:54:40.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.276" endtime="20201112 09:54:40.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.272" endtime="20201112 09:54:40.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.839" endtime="20201112 09:54:40.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:39.838" endtime="20201112 09:54:40.299"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.310" endtime="20201112 09:54:40.327"></status>
</kw>
<msg timestamp="20201112 09:54:40.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.308" endtime="20201112 09:54:40.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.328" endtime="20201112 09:54:40.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.332" endtime="20201112 09:54:40.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.305" endtime="20201112 09:54:40.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.302" endtime="20201112 09:54:40.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.343" endtime="20201112 09:54:40.629"></status>
</kw>
<msg timestamp="20201112 09:54:40.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024920681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.341" endtime="20201112 09:54:40.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024920681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024962944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:40.633" endtime="20201112 09:54:40.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.642" endtime="20201112 09:54:40.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.338" endtime="20201112 09:54:40.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.335" endtime="20201112 09:54:40.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:40.650" level="INFO">${RESULT} = [{'time': 0.024962944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.226300000000072e-05, 'source_diff': 4.226300000000072e-05}, {'time': 0.025014972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:40.646" endtime="20201112 09:54:40.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:40.665" level="INFO">${ACCURACY} = {'diff': [4.226300000000072e-05, 4.2582999999998816e-05, 4.3124999999998026e-05, 4.2416999999999455e-05, 4.2597000000001856e-05, 4.223600000000105e-05, 4.229199999999933e-05, 4.2333000000002036e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:54:40.651" endtime="20201112 09:54:40.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.670" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:54:40.669" endtime="20201112 09:54:40.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.673" level="INFO">VALUE: [4.226300000000072e-05, 4.2582999999998816e-05, 4.3124999999998026e-05, 4.2416999999999455e-05, 4.2597000000001856e-05, 4.223600000000105e-05, 4.229199999999933e-05, 4.2333000000002036e-05, 4.298599999999833e-05, 4.2375000000000745e-05, 4.2416999999999455e-05, 4.2416999999999455e-05, 4.283399999999854e-05, 4.251300000000097e-05, 4.2555000000003146e-05, 4.225000000000062e-05, 4.2389000000000315e-05, 4.251300000000097e-05, 4.219399999999887e-05, 4.2347000000001606e-05, 4.2625000000000995e-05, 4.240200000000041e-05, 4.265200000000066e-05, 4.227799999999976e-05, 4.222200000000148e-05, 4.2139000000000065e-05, 4.272200000000198e-05, 4.322199999999901e-05, 4.2903000000000385e-05, 4.277800000000026e-05, 4.24860000000013e-05, 4.2610999999997956e-05, 4.306999999999922e-05, 4.233399999999804e-05, 4.2987000000001274e-05, 4.28059999999994e-05, 4.2445000000002064e-05, 4.2304999999999426e-05, 4.270799999999894e-05, 4.2973000000001704e-05, 4.297199999999876e-05, 4.273600000000155e-05, 4.3124999999998026e-05, 4.29999999999979e-05, 4.244399999999912e-05, 4.2361000000001175e-05, 4.250000000000087e-05, 4.2611000000001426e-05, 4.2569000000002716e-05, 4.244400000000259e-05]</msg>
<status status="PASS" starttime="20201112 09:54:40.672" endtime="20201112 09:54:40.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.666" endtime="20201112 09:54:40.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.678" endtime="20201112 09:54:40.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:40.682" endtime="20201112 09:54:40.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.680" endtime="20201112 09:54:40.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.675" endtime="20201112 09:54:40.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.300" endtime="20201112 09:54:40.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.300" endtime="20201112 09:54:40.703"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.714" endtime="20201112 09:54:40.731"></status>
</kw>
<msg timestamp="20201112 09:54:40.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.712" endtime="20201112 09:54:40.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:40.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:40.732" endtime="20201112 09:54:40.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.735" endtime="20201112 09:54:40.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.709" endtime="20201112 09:54:40.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.706" endtime="20201112 09:54:40.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:40.746" endtime="20201112 09:54:41.042"></status>
</kw>
<msg timestamp="20201112 09:54:41.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02477625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024820014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:40.745" endtime="20201112 09:54:41.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02477625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024820014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:41.052" endtime="20201112 09:54:41.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.071" endtime="20201112 09:54:41.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.741" endtime="20201112 09:54:41.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.739" endtime="20201112 09:54:41.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.089" level="INFO">${RESULT} = [{'time': 0.024820014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.376400000000169e-05, 'source_diff': 4.376400000000169e-05}, {'time': 0.024875958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:41.080" endtime="20201112 09:54:41.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.120" level="INFO">${ACCURACY} = {'diff': [4.376400000000169e-05, 4.3375000000001745e-05, 4.348599999999883e-05, 4.3431000000000025e-05, 4.3638999999998096e-05, 4.329199999999686e-05, 4.327799999999729e-05, 4.373600000000255e-05, 4.3...</msg>
<status status="PASS" starttime="20201112 09:54:41.091" endtime="20201112 09:54:41.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.133" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.129" endtime="20201112 09:54:41.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.138" level="INFO">VALUE: [4.376400000000169e-05, 4.3375000000001745e-05, 4.348599999999883e-05, 4.3431000000000025e-05, 4.3638999999998096e-05, 4.329199999999686e-05, 4.327799999999729e-05, 4.373600000000255e-05, 4.374999999999865e-05, 4.345799999999969e-05, 4.373599999999908e-05, 4.3680999999996806e-05, 4.381999999999997e-05, 4.3374999999998276e-05, 4.338799999999837e-05, 4.39999999999989e-05, 4.348599999999883e-05, 4.3569000000000246e-05, 4.390200000000191e-05, 4.3888999999998346e-05, 4.379100000000136e-05, 4.395800000000019e-05, 4.324999999999815e-05, 4.325000000000162e-05, 4.3889000000001815e-05, 4.3653000000001135e-05, 4.3903000000001385e-05, 4.398599999999933e-05, 4.34999999999984e-05, 4.4167000000001205e-05, 4.374999999999865e-05, 4.3888999999998346e-05, 4.331999999999947e-05, 4.3611000000002426e-05, 4.327800000000076e-05, 4.38060000000004e-05, 4.355600000000015e-05, 4.370799999999994e-05, 4.4110999999999456e-05, 4.4153000000001635e-05, 4.4124999999999026e-05, 4.326399999999772e-05, 4.345800000000316e-05, 4.355499999999721e-05, 4.347199999999926e-05, 4.34999999999984e-05, 4.3860999999999206e-05, 4.326400000000119e-05, 4.402800000000151e-05, 4.352800000000101e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.135" endtime="20201112 09:54:41.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.122" endtime="20201112 09:54:41.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.148" endtime="20201112 09:54:41.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.157" endtime="20201112 09:54:41.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.152" endtime="20201112 09:54:41.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.144" endtime="20201112 09:54:41.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.704" endtime="20201112 09:54:41.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:40.704" endtime="20201112 09:54:41.182"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.205" endtime="20201112 09:54:41.225"></status>
</kw>
<msg timestamp="20201112 09:54:41.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.202" endtime="20201112 09:54:41.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.228" endtime="20201112 09:54:41.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.235" endtime="20201112 09:54:41.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.195" endtime="20201112 09:54:41.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.189" endtime="20201112 09:54:41.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.259" endtime="20201112 09:54:41.597"></status>
</kw>
<msg timestamp="20201112 09:54:41.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042241958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042286833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.255" endtime="20201112 09:54:41.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042241958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042286833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.607" endtime="20201112 09:54:41.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.626" endtime="20201112 09:54:41.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.248" endtime="20201112 09:54:41.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.243" endtime="20201112 09:54:41.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:41.644" level="INFO">${RESULT} = [{'time': 0.042286833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4874999999999776e-05, 'source_diff': 4.4874999999999776e-05}, {'time': 0.042344875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:41.635" endtime="20201112 09:54:41.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:41.675" level="INFO">${ACCURACY} = {'diff': [4.4874999999999776e-05, 4.4638999999999096e-05, 4.454100000000211e-05, 4.4888999999999346e-05, 4.502799999999557e-05, 4.4694999999997376e-05, 4.451400000000244e-05, 4.4569000000001247e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:54:41.646" endtime="20201112 09:54:41.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.686" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:54:41.684" endtime="20201112 09:54:41.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.692" level="INFO">VALUE: [4.4874999999999776e-05, 4.4638999999999096e-05, 4.454100000000211e-05, 4.4888999999999346e-05, 4.502799999999557e-05, 4.4694999999997376e-05, 4.451400000000244e-05, 4.4569000000001247e-05, 4.4874999999999776e-05, 4.423600000000305e-05, 4.423599999999611e-05, 4.4847000000000636e-05, 4.431999999999353e-05, 4.4624999999999526e-05, 4.4902999999998916e-05, 4.4652999999998666e-05, 4.45139999999955e-05, 4.4194999999996876e-05, 4.476399999999575e-05, 4.494400000000509e-05, 4.472199999999704e-05, 4.429099999999492e-05, 4.4375000000006215e-05, 4.429200000000133e-05, 4.497200000000423e-05, 4.426400000000219e-05, 4.5125000000000026e-05, 4.452800000000201e-05, 4.5166999999998736e-05, 4.4416999999997986e-05, 4.484800000000011e-05, 4.45139999999955e-05, 4.4903000000005855e-05, 4.4680999999997806e-05, 4.49860000000038e-05, 4.502800000000251e-05, 4.504100000000261e-05, 4.495799999999772e-05, 4.4638999999999096e-05, 4.454100000000211e-05, 4.4403000000005355e-05, 4.5125000000000026e-05, 4.4388999999998846e-05, 4.4360999999999706e-05, 4.495799999999772e-05, 4.4583000000000816e-05, 4.4680999999997806e-05, 4.4194999999996876e-05, 4.49860000000038e-05, 4.43060000000009e-05]</msg>
<status status="PASS" starttime="20201112 09:54:41.689" endtime="20201112 09:54:41.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.677" endtime="20201112 09:54:41.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.703" endtime="20201112 09:54:41.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:41.712" endtime="20201112 09:54:41.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.707" endtime="20201112 09:54:41.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.698" endtime="20201112 09:54:41.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.185" endtime="20201112 09:54:41.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.183" endtime="20201112 09:54:41.738"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.761" endtime="20201112 09:54:41.782"></status>
</kw>
<msg timestamp="20201112 09:54:41.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.757" endtime="20201112 09:54:41.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:41.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:41.785" endtime="20201112 09:54:41.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.791" endtime="20201112 09:54:41.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.750" endtime="20201112 09:54:41.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.744" endtime="20201112 09:54:41.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:41.815" endtime="20201112 09:54:42.152"></status>
</kw>
<msg timestamp="20201112 09:54:42.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042940042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042985306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:41.812" endtime="20201112 09:54:42.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042940042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042985306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.162" endtime="20201112 09:54:42.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.182" endtime="20201112 09:54:42.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.804" endtime="20201112 09:54:42.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.799" endtime="20201112 09:54:42.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.199" level="INFO">${RESULT} = [{'time': 0.042985306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.526400000000319e-05, 'source_diff': 4.526400000000319e-05}, {'time': 0.043046333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:42.190" endtime="20201112 09:54:42.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.230" level="INFO">${ACCURACY} = {'diff': [4.526400000000319e-05, 4.598599999999786e-05, 4.607000000000222e-05, 4.552800000000301e-05, 4.5361000000000706e-05, 4.520799999999797e-05, 4.5737000000004024e-05, 4.5611000000000956e-05, 4.5...</msg>
<status status="PASS" starttime="20201112 09:54:42.201" endtime="20201112 09:54:42.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.242" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.239" endtime="20201112 09:54:42.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.247" level="INFO">VALUE: [4.526400000000319e-05, 4.598599999999786e-05, 4.607000000000222e-05, 4.552800000000301e-05, 4.5361000000000706e-05, 4.520799999999797e-05, 4.5737000000004024e-05, 4.5611000000000956e-05, 4.547199999999779e-05, 4.606900000000275e-05, 4.60269999999971e-05, 4.5430999999998556e-05, 4.570799999999847e-05, 4.6180999999999306e-05, 4.54860000000043e-05, 4.5666999999999236e-05, 4.5388999999999846e-05, 4.554199999999564e-05, 4.53060000000019e-05, 4.5945000000005565e-05, 4.559800000000086e-05, 4.5209000000004385e-05, 4.529200000000233e-05, 4.580599999999546e-05, 4.572199999999804e-05, 4.598599999999786e-05, 4.55139999999965e-05, 4.527700000000329e-05, 4.576399999999675e-05, 4.60269999999971e-05, 4.5152999999999166e-05, 4.6125000000001026e-05, 4.6166999999999736e-05, 4.6153000000000166e-05, 4.544399999999865e-05, 4.6111000000001456e-05, 4.525000000000362e-05, 4.551400000000344e-05, 4.56939999999989e-05, 4.5430999999998556e-05, 4.5375000000000276e-05, 4.576300000000422e-05, 4.53060000000019e-05, 4.5833000000002067e-05, 4.5486999999996836e-05, 4.599999999999743e-05, 4.5611000000000956e-05, 4.605499999999624e-05, 4.5375000000000276e-05, 4.554100000000311e-05]</msg>
<status status="PASS" starttime="20201112 09:54:42.244" endtime="20201112 09:54:42.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.232" endtime="20201112 09:54:42.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.257" endtime="20201112 09:54:42.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.268" endtime="20201112 09:54:42.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.263" endtime="20201112 09:54:42.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.252" endtime="20201112 09:54:42.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.740" endtime="20201112 09:54:42.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:41.738" endtime="20201112 09:54:42.294"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.317" endtime="20201112 09:54:42.336"></status>
</kw>
<msg timestamp="20201112 09:54:42.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.313" endtime="20201112 09:54:42.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.340" endtime="20201112 09:54:42.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.346" endtime="20201112 09:54:42.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.306" endtime="20201112 09:54:42.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.300" endtime="20201112 09:54:42.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.370" endtime="20201112 09:54:42.706"></status>
</kw>
<msg timestamp="20201112 09:54:42.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042542792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042589944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.366" endtime="20201112 09:54:42.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042542792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042589944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.716" endtime="20201112 09:54:42.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.735" endtime="20201112 09:54:42.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.359" endtime="20201112 09:54:42.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.354" endtime="20201112 09:54:42.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:42.753" level="INFO">${RESULT} = [{'time': 0.042589944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7151999999994754e-05, 'source_diff': 4.7151999999994754e-05}, {'time': 0.042654958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:42.744" endtime="20201112 09:54:42.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:42.785" level="INFO">${ACCURACY} = {'diff': [4.7151999999994754e-05, 4.6375000000001276e-05, 4.6403000000000416e-05, 4.656899999999631e-05, 4.68469999999957e-05, 4.659800000000186e-05, 4.6903000000000916e-05, 4.7222999999999016e-05, 4....</msg>
<status status="PASS" starttime="20201112 09:54:42.756" endtime="20201112 09:54:42.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.796" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:54:42.793" endtime="20201112 09:54:42.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.801" level="INFO">VALUE: [4.7151999999994754e-05, 4.6375000000001276e-05, 4.6403000000000416e-05, 4.656899999999631e-05, 4.68469999999957e-05, 4.659800000000186e-05, 4.6903000000000916e-05, 4.7222999999999016e-05, 4.7153000000001166e-05, 4.674999999999818e-05, 4.6889000000001346e-05, 4.629199999999639e-05, 4.6625000000001526e-05, 4.68060000000034e-05, 4.659800000000186e-05, 4.695799999999972e-05, 4.632000000000247e-05, 4.656899999999631e-05, 4.698599999999886e-05, 4.644399999999965e-05, 4.673599999999861e-05, 4.7153000000001166e-05, 4.629100000000386e-05, 4.695799999999972e-05, 4.623600000000505e-05, 4.674999999999818e-05, 4.637499999999434e-05, 4.681999999999603e-05, 4.6917000000000486e-05, 4.658400000000229e-05, 4.632000000000247e-05, 4.6958999999999196e-05, 4.7153000000001166e-05, 4.657000000000272e-05, 4.7179999999993893e-05, 4.6625000000001526e-05, 4.640200000000094e-05, 4.673599999999861e-05, 4.65139999999975e-05, 4.65269999999976e-05, 4.663899999999416e-05, 4.7097000000002887e-05, 4.708400000000279e-05, 4.679199999999689e-05, 4.7181000000000306e-05, 4.7013999999998e-05, 4.626399999999725e-05, 4.69860000000058e-05, 4.6972999999998766e-05, 4.658400000000229e-05]</msg>
<status status="PASS" starttime="20201112 09:54:42.798" endtime="20201112 09:54:42.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.786" endtime="20201112 09:54:42.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.811" endtime="20201112 09:54:42.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:42.820" endtime="20201112 09:54:42.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.815" endtime="20201112 09:54:42.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.806" endtime="20201112 09:54:42.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.296" endtime="20201112 09:54:42.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.295" endtime="20201112 09:54:42.849"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.872" endtime="20201112 09:54:42.892"></status>
</kw>
<msg timestamp="20201112 09:54:42.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.869" endtime="20201112 09:54:42.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:42.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:42.896" endtime="20201112 09:54:42.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.902" endtime="20201112 09:54:42.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.861" endtime="20201112 09:54:42.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.855" endtime="20201112 09:54:42.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:42.926" endtime="20201112 09:54:43.263"></status>
</kw>
<msg timestamp="20201112 09:54:43.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042744194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042792208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:42.923" endtime="20201112 09:54:43.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042744194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042792208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.273" endtime="20201112 09:54:43.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.292" endtime="20201112 09:54:43.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.915" endtime="20201112 09:54:43.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.911" endtime="20201112 09:54:43.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.310" level="INFO">${RESULT} = [{'time': 0.042792208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8013999999999e-05, 'source_diff': 4.8013999999999e-05}, {'time': 0.042858222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201112 09:54:43.301" endtime="20201112 09:54:43.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.341" level="INFO">${ACCURACY} = {'diff': [4.8013999999999e-05, 4.7597000000003387e-05, 4.787499999999584e-05, 4.724999999999868e-05, 4.795799999999378e-05, 4.759699999999645e-05, 4.780599999999746e-05, 4.815299999999523e-05, 4.76940...</msg>
<status status="PASS" starttime="20201112 09:54:43.312" endtime="20201112 09:54:43.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.352" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.350" endtime="20201112 09:54:43.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.357" level="INFO">VALUE: [4.8013999999999e-05, 4.7597000000003387e-05, 4.787499999999584e-05, 4.724999999999868e-05, 4.795799999999378e-05, 4.759699999999645e-05, 4.780599999999746e-05, 4.815299999999523e-05, 4.76940000000009e-05, 4.8153000000002166e-05, 4.806999999999728e-05, 4.7472999999999266e-05, 4.729200000000433e-05, 4.786200000000268e-05, 4.7181000000000306e-05, 4.8179999999994894e-05, 4.805599999999771e-05, 4.756899999999731e-05, 4.816600000000226e-05, 4.7861000000003207e-05, 4.809699999999695e-05, 4.731899999999706e-05, 4.774999999999918e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.729199999999739e-05, 4.7445000000000126e-05, 4.7931000000001056e-05, 4.7903000000001916e-05, 4.762499999999559e-05, 4.799999999999943e-05, 4.808399999999685e-05, 4.726399999999825e-05, 4.7945000000000626e-05, 4.774999999999918e-05, 4.783300000000407e-05, 4.737499999999534e-05, 4.768000000000133e-05, 4.805499999999824e-05, 4.744400000000065e-05, 4.794400000000115e-05, 4.756900000000425e-05, 4.7917000000001486e-05, 4.755500000000468e-05, 4.776400000000569e-05, 4.811099999999652e-05, 4.8139000000002596e-05, 4.7681000000000806e-05, 4.755599999999721e-05, 4.7458999999999696e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.354" endtime="20201112 09:54:43.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.343" endtime="20201112 09:54:43.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.367" endtime="20201112 09:54:43.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.376" endtime="20201112 09:54:43.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.371" endtime="20201112 09:54:43.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.363" endtime="20201112 09:54:43.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.851" endtime="20201112 09:54:43.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:42.850" endtime="20201112 09:54:43.402"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.426" endtime="20201112 09:54:43.446"></status>
</kw>
<msg timestamp="20201112 09:54:43.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.423" endtime="20201112 09:54:43.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.450" endtime="20201112 09:54:43.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.456" endtime="20201112 09:54:43.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.416" endtime="20201112 09:54:43.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.408" endtime="20201112 09:54:43.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.480" endtime="20201112 09:54:43.818"></status>
</kw>
<msg timestamp="20201112 09:54:43.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043924097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043972375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.477" endtime="20201112 09:54:43.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043924097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043972375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:43.828" endtime="20201112 09:54:43.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.847" endtime="20201112 09:54:43.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.470" endtime="20201112 09:54:43.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.465" endtime="20201112 09:54:43.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:43.865" level="INFO">${RESULT} = [{'time': 0.043972375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.827799999999882e-05, 'source_diff': 4.827799999999882e-05}, {'time': 0.044029431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:43.856" endtime="20201112 09:54:43.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:43.896" level="INFO">${ACCURACY} = {'diff': [4.827799999999882e-05, 4.8445000000001126e-05, 4.827799999999882e-05, 4.876399999999975e-05, 4.8917000000002486e-05, 4.904099999999967e-05, 4.8957999999994783e-05, 4.8917000000002486e-05, 4....</msg>
<status status="PASS" starttime="20201112 09:54:43.867" endtime="20201112 09:54:43.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.907" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:54:43.905" endtime="20201112 09:54:43.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:43.912" level="INFO">VALUE: [4.827799999999882e-05, 4.8445000000001126e-05, 4.827799999999882e-05, 4.876399999999975e-05, 4.8917000000002486e-05, 4.904099999999967e-05, 4.8957999999994783e-05, 4.8917000000002486e-05, 4.915299999999623e-05, 4.8389000000002846e-05, 4.897200000000129e-05, 4.909700000000489e-05, 4.8625000000003527e-05, 4.847200000000079e-05, 4.883299999999813e-05, 4.826399999999925e-05, 4.902799999999957e-05, 4.854199999999864e-05, 4.833299999999763e-05, 4.812499999999609e-05, 4.841699999999505e-05, 4.836099999999677e-05, 4.905499999999924e-05, 4.819499999999394e-05, 4.911100000000446e-05, 4.876399999999975e-05, 4.8959000000001196e-05, 4.8903000000002916e-05, 4.895800000000172e-05, 4.8875000000003777e-05, 4.909699999999795e-05, 4.841699999999505e-05, 4.823600000000011e-05, 4.861099999999702e-05, 4.859699999999745e-05, 4.8417000000001986e-05, 4.833299999999763e-05, 4.855599999999821e-05, 4.872200000000104e-05, 4.8667000000002236e-05, 4.8611000000003957e-05, 4.900000000000043e-05, 4.856999999999778e-05, 4.83339999999971e-05, 4.820800000000097e-05, 4.861200000000343e-05, 4.9014e-05, 4.856900000000525e-05, 4.872200000000104e-05, 4.8901999999996504e-05]</msg>
<status status="PASS" starttime="20201112 09:54:43.909" endtime="20201112 09:54:43.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.898" endtime="20201112 09:54:43.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.922" endtime="20201112 09:54:43.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:43.931" endtime="20201112 09:54:43.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.926" endtime="20201112 09:54:43.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.918" endtime="20201112 09:54:43.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.404" endtime="20201112 09:54:43.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.403" endtime="20201112 09:54:43.957"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:43.981" endtime="20201112 09:54:44.001"></status>
</kw>
<msg timestamp="20201112 09:54:44.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:43.977" endtime="20201112 09:54:44.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.005" endtime="20201112 09:54:44.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.011" endtime="20201112 09:54:44.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.970" endtime="20201112 09:54:44.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.963" endtime="20201112 09:54:44.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.037" endtime="20201112 09:54:44.348"></status>
</kw>
<msg timestamp="20201112 09:54:44.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043760042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043809694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.033" endtime="20201112 09:54:44.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043760042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043809694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.353" endtime="20201112 09:54:44.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.361" endtime="20201112 09:54:44.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.026" endtime="20201112 09:54:44.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.021" endtime="20201112 09:54:44.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.369" level="INFO">${RESULT} = [{'time': 0.043809694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.965200000000419e-05, 'source_diff': 4.965200000000419e-05}, {'time': 0.043869708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:44.365" endtime="20201112 09:54:44.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.383" level="INFO">${ACCURACY} = {'diff': [4.965200000000419e-05, 4.929099999999992e-05, 4.933299999999863e-05, 4.9943999999996214e-05, 4.990299999999698e-05, 4.959699999999845e-05, 4.9653000000003666e-05, 5.001299999999459e-05, 4.94...</msg>
<status status="PASS" starttime="20201112 09:54:44.371" endtime="20201112 09:54:44.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.388" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.387" endtime="20201112 09:54:44.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.391" level="INFO">VALUE: [4.965200000000419e-05, 4.929099999999992e-05, 4.933299999999863e-05, 4.9943999999996214e-05, 4.990299999999698e-05, 4.959699999999845e-05, 4.9653000000003666e-05, 5.001299999999459e-05, 4.941699999999605e-05, 4.986099999999827e-05, 5.00270000000011e-05, 4.93339999999981e-05, 4.947200000000179e-05, 4.975000000000118e-05, 4.995800000000272e-05, 4.9429999999996144e-05, 4.918099999999537e-05, 4.979199999999989e-05, 4.976300000000128e-05, 4.9915999999997074e-05, 4.933299999999863e-05, 4.96940000000029e-05, 4.95140000000005e-05, 4.954200000000658e-05, 4.948600000000136e-05, 4.991699999999655e-05, 4.9945000000002626e-05, 4.988899999999741e-05, 4.9445000000002126e-05, 4.9459000000001696e-05, 4.950000000000093e-05, 4.929199999999939e-05, 5.015299999999723e-05, 4.9945000000002626e-05, 4.976399999999381e-05, 4.947200000000179e-05, 4.95270000000006e-05, 4.9957999999995784e-05, 4.958299999999888e-05, 4.925000000000068e-05, 5.012500000000503e-05, 4.952800000000007e-05, 4.961099999999802e-05, 4.973600000000161e-05, 5.006899999999981e-05, 5.0014000000001e-05, 4.930599999999896e-05, 4.9375000000004277e-05, 5.015299999999723e-05, 4.954199999999964e-05]</msg>
<status status="PASS" starttime="20201112 09:54:44.390" endtime="20201112 09:54:44.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.384" endtime="20201112 09:54:44.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.396" endtime="20201112 09:54:44.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.400" endtime="20201112 09:54:44.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.398" endtime="20201112 09:54:44.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.394" endtime="20201112 09:54:44.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.959" endtime="20201112 09:54:44.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:43.958" endtime="20201112 09:54:44.421"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.432" endtime="20201112 09:54:44.449"></status>
</kw>
<msg timestamp="20201112 09:54:44.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.430" endtime="20201112 09:54:44.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.451" endtime="20201112 09:54:44.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.454" endtime="20201112 09:54:44.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.427" endtime="20201112 09:54:44.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.424" endtime="20201112 09:54:44.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.466" endtime="20201112 09:54:44.794"></status>
</kw>
<msg timestamp="20201112 09:54:44.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024861292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.465" endtime="20201112 09:54:44.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024861292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:44.804" endtime="20201112 09:54:44.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.823" endtime="20201112 09:54:44.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.460" endtime="20201112 09:54:44.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.458" endtime="20201112 09:54:44.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:44.841" level="INFO">${RESULT} = [{'time': 0.024912083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.079100000000142e-05, 'source_diff': 5.079100000000142e-05}, {'time': 0.024972083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:44.832" endtime="20201112 09:54:44.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:44.872" level="INFO">${ACCURACY} = {'diff': [5.079100000000142e-05, 5.055500000000074e-05, 5.066600000000129e-05, 5.11530000000017e-05, 5.022200000000254e-05, 5.097199999999982e-05, 5.118099999999737e-05, 5.048599999999889e-05, 5.06809...</msg>
<status status="PASS" starttime="20201112 09:54:44.843" endtime="20201112 09:54:44.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.883" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:54:44.881" endtime="20201112 09:54:44.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.889" level="INFO">VALUE: [5.079100000000142e-05, 5.055500000000074e-05, 5.066600000000129e-05, 5.11530000000017e-05, 5.022200000000254e-05, 5.097199999999982e-05, 5.118099999999737e-05, 5.048599999999889e-05, 5.068099999999687e-05, 5.069499999999991e-05, 5.054200000000064e-05, 5.051399999999803e-05, 5.0222999999998547e-05, 5.058399999999935e-05, 5.052800000000107e-05, 5.069400000000043e-05, 5.05270000000016e-05, 5.108299999999691e-05, 5.074999999999871e-05, 5.115299999999823e-05, 5.081900000000056e-05, 5.080499999999752e-05, 5.105599999999724e-05, 5.040300000000095e-05, 5.094400000000068e-05, 5.115299999999823e-05, 5.088900000000188e-05, 5.065299999999773e-05, 5.031900000000006e-05, 5.066700000000077e-05, 5.108399999999985e-05, 5.101399999999853e-05, 5.065299999999773e-05, 5.116600000000179e-05, 5.023600000000211e-05, 5.047199999999932e-05, 5.106900000000081e-05, 5.025000000000168e-05, 5.044400000000018e-05, 5.066700000000077e-05, 5.020800000000297e-05, 5.079200000000089e-05, 5.029099999999745e-05, 5.048600000000236e-05, 5.048600000000236e-05, 5.086099999999927e-05, 5.030599999999996e-05, 5.026400000000125e-05, 5.1165999999998324e-05, 5.091700000000102e-05]</msg>
<status status="PASS" starttime="20201112 09:54:44.886" endtime="20201112 09:54:44.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.874" endtime="20201112 09:54:44.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.899" endtime="20201112 09:54:44.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:44.908" endtime="20201112 09:54:44.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.903" endtime="20201112 09:54:44.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.894" endtime="20201112 09:54:44.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.422" endtime="20201112 09:54:44.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.422" endtime="20201112 09:54:44.934"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.957" endtime="20201112 09:54:44.977"></status>
</kw>
<msg timestamp="20201112 09:54:44.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.954" endtime="20201112 09:54:44.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:44.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:44.981" endtime="20201112 09:54:44.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:44.987" endtime="20201112 09:54:44.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.946" endtime="20201112 09:54:44.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.940" endtime="20201112 09:54:44.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.012" endtime="20201112 09:54:45.355"></status>
</kw>
<msg timestamp="20201112 09:54:45.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042319361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042370875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.008" endtime="20201112 09:54:45.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042319361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042370875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.365" endtime="20201112 09:54:45.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.384" endtime="20201112 09:54:45.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.000" endtime="20201112 09:54:45.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.995" endtime="20201112 09:54:45.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.402" level="INFO">${RESULT} = [{'time': 0.042370875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15140000000025e-05, 'source_diff': 5.15140000000025e-05}, {'time': 0.042433903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:45.393" endtime="20201112 09:54:45.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.433" level="INFO">${ACCURACY} = {'diff': [5.15140000000025e-05, 5.1667000000005237e-05, 5.21669999999988e-05, 5.179200000000189e-05, 5.166600000000576e-05, 5.1945000000004626e-05, 5.158400000000035e-05, 5.1249999999995743e-05, 5.168...</msg>
<status status="PASS" starttime="20201112 09:54:45.404" endtime="20201112 09:54:45.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.444" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:54:45.442" endtime="20201112 09:54:45.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.449" level="INFO">VALUE: [5.15140000000025e-05, 5.1667000000005237e-05, 5.21669999999988e-05, 5.179200000000189e-05, 5.166600000000576e-05, 5.1945000000004626e-05, 5.158400000000035e-05, 5.1249999999995743e-05, 5.168099999999787e-05, 5.208300000000138e-05, 5.176399999999581e-05, 5.186199999999974e-05, 5.144400000000465e-05, 5.2151999999999754e-05, 5.211100000000052e-05, 5.200000000000343e-05, 5.215299999999923e-05, 5.177799999999538e-05, 5.204200000000214e-05, 5.209700000000095e-05, 5.1235999999996173e-05, 5.186100000000027e-05, 5.1209000000003446e-05, 5.1749999999996243e-05, 5.1209000000003446e-05, 5.182000000000103e-05, 5.1415999999998574e-05, 5.209800000000042e-05, 5.215299999999923e-05, 5.118099999999737e-05, 5.1901999999999504e-05, 5.154099999999523e-05, 5.1417000000004986e-05, 5.1749999999996243e-05, 5.1985999999996924e-05, 5.161100000000002e-05, 5.127800000000182e-05, 5.215299999999923e-05, 5.1193999999997464e-05, 5.213899999999966e-05, 5.170899999999701e-05, 5.154200000000164e-05, 5.184800000000017e-05, 5.1459000000003696e-05, 5.123600000000311e-05, 5.1985999999996924e-05, 5.1723000000003516e-05, 5.126300000000278e-05, 5.220800000000497e-05, 5.183300000000113e-05]</msg>
<status status="PASS" starttime="20201112 09:54:45.446" endtime="20201112 09:54:45.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.435" endtime="20201112 09:54:45.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.459" endtime="20201112 09:54:45.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:45.468" endtime="20201112 09:54:45.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.463" endtime="20201112 09:54:45.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.455" endtime="20201112 09:54:45.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.936" endtime="20201112 09:54:45.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:44.935" endtime="20201112 09:54:45.494"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.517" endtime="20201112 09:54:45.537"></status>
</kw>
<msg timestamp="20201112 09:54:45.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.513" endtime="20201112 09:54:45.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:45.541" endtime="20201112 09:54:45.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.547" endtime="20201112 09:54:45.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.506" endtime="20201112 09:54:45.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.500" endtime="20201112 09:54:45.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.571" endtime="20201112 09:54:45.914"></status>
</kw>
<msg timestamp="20201112 09:54:45.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042222264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042275014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.567" endtime="20201112 09:54:45.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:45.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042222264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042275014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:45.924" endtime="20201112 09:54:45.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:45.943" endtime="20201112 09:54:45.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.560" endtime="20201112 09:54:45.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.555" endtime="20201112 09:54:45.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:45.961" level="INFO">${RESULT} = [{'time': 0.042275014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2749999999997244e-05, 'source_diff': 5.2749999999997244e-05}, {'time': 0.042342083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:45.951" endtime="20201112 09:54:45.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:45.992" level="INFO">${ACCURACY} = {'diff': [5.2749999999997244e-05, 5.304100000000367e-05, 5.262500000000059e-05, 5.3138000000001184e-05, 5.255500000000274e-05, 5.281999999999509e-05, 5.255500000000274e-05, 5.2985999999997924e-05, 5.2...</msg>
<status status="PASS" starttime="20201112 09:54:45.963" endtime="20201112 09:54:45.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.003" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.001" endtime="20201112 09:54:46.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.009" level="INFO">VALUE: [5.2749999999997244e-05, 5.304100000000367e-05, 5.262500000000059e-05, 5.3138000000001184e-05, 5.255500000000274e-05, 5.281999999999509e-05, 5.255500000000274e-05, 5.2985999999997924e-05, 5.25549999999958e-05, 5.229099999999598e-05, 5.2513999999996563e-05, 5.31669999999998e-05, 5.279099999999648e-05, 5.2263999999996313e-05, 5.231899999999512e-05, 5.2249999999996743e-05, 5.268099999999887e-05, 5.230600000000196e-05, 5.2709000000004946e-05, 5.293099999999912e-05, 5.259700000000145e-05, 5.231999999999459e-05, 5.240299999999948e-05, 5.275000000000418e-05, 5.245800000000522e-05, 5.240299999999948e-05, 5.311100000000152e-05, 5.2916000000000074e-05, 5.255500000000274e-05, 5.311100000000152e-05, 5.244400000000565e-05, 5.254100000000317e-05, 5.312500000000109e-05, 5.305600000000271e-05, 5.26940000000059e-05, 5.262499999999365e-05, 5.280600000000246e-05, 5.230599999999502e-05, 5.2693999999998964e-05, 5.2445000000005126e-05, 5.273600000000461e-05, 5.276400000000375e-05, 5.294499999999869e-05, 5.3138000000001184e-05, 5.309700000000195e-05, 5.277799999999638e-05, 5.263900000000016e-05, 5.265299999999973e-05, 5.222200000000454e-05, 5.2457999999998284e-05]</msg>
<status status="PASS" starttime="20201112 09:54:46.005" endtime="20201112 09:54:46.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.994" endtime="20201112 09:54:46.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.018" endtime="20201112 09:54:46.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.027" endtime="20201112 09:54:46.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.022" endtime="20201112 09:54:46.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.014" endtime="20201112 09:54:46.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.496" endtime="20201112 09:54:46.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:45.495" endtime="20201112 09:54:46.053"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.077" endtime="20201112 09:54:46.099"></status>
</kw>
<msg timestamp="20201112 09:54:46.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.074" endtime="20201112 09:54:46.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.102" endtime="20201112 09:54:46.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.109" endtime="20201112 09:54:46.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.066" endtime="20201112 09:54:46.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.060" endtime="20201112 09:54:46.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.132" endtime="20201112 09:54:46.470"></status>
</kw>
<msg timestamp="20201112 09:54:46.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044149514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044203306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.129" endtime="20201112 09:54:46.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044149514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044203306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.479" endtime="20201112 09:54:46.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.499" endtime="20201112 09:54:46.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.122" endtime="20201112 09:54:46.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.117" endtime="20201112 09:54:46.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:46.518" level="INFO">${RESULT} = [{'time': 0.044203306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.379199999999695e-05, 'source_diff': 5.379199999999695e-05}, {'time': 0.044275319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:46.509" endtime="20201112 09:54:46.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:46.549" level="INFO">${ACCURACY} = {'diff': [5.379199999999695e-05, 5.402699999999816e-05, 5.3957999999999784e-05, 5.3735999999998674e-05, 5.3930000000000644e-05, 5.3985999999998924e-05, 5.408299999999644e-05, 5.363900000000116e-05, 5....</msg>
<status status="PASS" starttime="20201112 09:54:46.520" endtime="20201112 09:54:46.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.560" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:54:46.558" endtime="20201112 09:54:46.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.566" level="INFO">VALUE: [5.379199999999695e-05, 5.402699999999816e-05, 5.3957999999999784e-05, 5.3735999999998674e-05, 5.3930000000000644e-05, 5.3985999999998924e-05, 5.408299999999644e-05, 5.363900000000116e-05, 5.379199999999695e-05, 5.333399999999516e-05, 5.3985999999998924e-05, 5.361100000000202e-05, 5.318099999999937e-05, 5.415300000000123e-05, 5.412499999999515e-05, 5.377699999999791e-05, 5.384800000000217e-05, 5.3777999999997383e-05, 5.3485999999998424e-05, 5.402800000000457e-05, 5.327699999999741e-05, 5.3485999999998424e-05, 5.375000000000518e-05, 5.41670000000008e-05, 5.365300000000073e-05, 5.327800000000382e-05, 5.390300000000098e-05, 5.330600000000296e-05, 5.336100000000177e-05, 5.379200000000389e-05, 5.3471999999998854e-05, 5.3999999999998494e-05, 5.377800000000432e-05, 5.411100000000252e-05, 5.3457999999999284e-05, 5.394499999999969e-05, 5.383299999999619e-05, 5.383300000000313e-05, 5.412500000000209e-05, 5.329099999999698e-05, 5.390300000000098e-05, 5.3944000000000214e-05, 5.362500000000159e-05, 5.365300000000073e-05, 5.4235999999999174e-05, 5.3195000000005876e-05, 5.336100000000177e-05, 5.413900000000166e-05, 5.3944000000000214e-05, 5.36670000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:54:46.563" endtime="20201112 09:54:46.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.551" endtime="20201112 09:54:46.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.576" endtime="20201112 09:54:46.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:46.584" endtime="20201112 09:54:46.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.579" endtime="20201112 09:54:46.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.571" endtime="20201112 09:54:46.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.055" endtime="20201112 09:54:46.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.054" endtime="20201112 09:54:46.610"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.633" endtime="20201112 09:54:46.653"></status>
</kw>
<msg timestamp="20201112 09:54:46.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.630" endtime="20201112 09:54:46.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:46.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:46.657" endtime="20201112 09:54:46.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.663" endtime="20201112 09:54:46.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.622" endtime="20201112 09:54:46.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.616" endtime="20201112 09:54:46.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:46.687" endtime="20201112 09:54:47.024"></status>
</kw>
<msg timestamp="20201112 09:54:47.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042392083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042446681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:46.684" endtime="20201112 09:54:47.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042392083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042446681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.034" endtime="20201112 09:54:47.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.053" endtime="20201112 09:54:47.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.676" endtime="20201112 09:54:47.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.672" endtime="20201112 09:54:47.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.073" level="INFO">${RESULT} = [{'time': 0.042446681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.459800000000292e-05, 'source_diff': 5.459800000000292e-05}, {'time': 0.042516667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:47.063" endtime="20201112 09:54:47.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.104" level="INFO">${ACCURACY} = {'diff': [5.459800000000292e-05, 5.432000000000353e-05, 5.494500000000069e-05, 5.436100000000277e-05, 5.4930000000001644e-05, 5.494500000000069e-05, 5.4916000000002074e-05, 5.437500000000234e-05, 5.49...</msg>
<status status="PASS" starttime="20201112 09:54:47.075" endtime="20201112 09:54:47.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.116" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.113" endtime="20201112 09:54:47.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.121" level="INFO">VALUE: [5.459800000000292e-05, 5.432000000000353e-05, 5.494500000000069e-05, 5.436100000000277e-05, 5.4930000000001644e-05, 5.494500000000069e-05, 5.4916000000002074e-05, 5.437500000000234e-05, 5.4944000000001214e-05, 5.506900000000481e-05, 5.465300000000173e-05, 5.4471999999999854e-05, 5.495900000000026e-05, 5.515300000000223e-05, 5.480599999999752e-05, 5.487500000000284e-05, 5.4485999999999424e-05, 5.470900000000001e-05, 5.4735999999999674e-05, 5.462500000000259e-05, 5.44869999999989e-05, 5.508300000000438e-05, 5.490300000000198e-05, 5.498600000000686e-05, 5.451299999999909e-05, 5.4972000000000354e-05, 5.4208000000000034e-05, 5.458300000000388e-05, 5.5041999999998203e-05, 5.469500000000044e-05, 5.504200000000514e-05, 5.413900000000166e-05, 5.430599999999702e-05, 5.4249999999998744e-05, 5.497299999999983e-05, 5.494500000000069e-05, 5.4485999999999424e-05, 5.4458000000000284e-05, 5.493100000000112e-05, 5.4388000000002434e-05, 5.45549999999978e-05, 5.4694000000000964e-05, 5.4944000000001214e-05, 5.457000000000378e-05, 5.440300000000148e-05, 5.455600000000421e-05, 5.4985999999999924e-05, 5.4485999999999424e-05, 5.432000000000353e-05, 5.4735999999999674e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.118" endtime="20201112 09:54:47.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.106" endtime="20201112 09:54:47.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.131" endtime="20201112 09:54:47.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.140" endtime="20201112 09:54:47.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.135" endtime="20201112 09:54:47.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.126" endtime="20201112 09:54:47.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.612" endtime="20201112 09:54:47.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:46.611" endtime="20201112 09:54:47.166"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.189" endtime="20201112 09:54:47.210"></status>
</kw>
<msg timestamp="20201112 09:54:47.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.185" endtime="20201112 09:54:47.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.213" endtime="20201112 09:54:47.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.220" endtime="20201112 09:54:47.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.178" endtime="20201112 09:54:47.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.172" endtime="20201112 09:54:47.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.243" endtime="20201112 09:54:47.580"></status>
</kw>
<msg timestamp="20201112 09:54:47.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042584069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042639722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.240" endtime="20201112 09:54:47.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042584069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042639722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.590" endtime="20201112 09:54:47.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.609" endtime="20201112 09:54:47.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.233" endtime="20201112 09:54:47.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.228" endtime="20201112 09:54:47.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:47.631" level="INFO">${RESULT} = [{'time': 0.042639722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.565299999999579e-05, 'source_diff': 5.565299999999579e-05}, {'time': 0.042714778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:47.621" endtime="20201112 09:54:47.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:47.662" level="INFO">${ACCURACY} = {'diff': [5.565299999999579e-05, 5.569500000000144e-05, 5.537500000000334e-05, 5.5944000000002214e-05, 5.558299999999794e-05, 5.604099999999973e-05, 5.6000000000000494e-05, 5.581899999999862e-05, 5.55...</msg>
<status status="PASS" starttime="20201112 09:54:47.633" endtime="20201112 09:54:47.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.673" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:54:47.670" endtime="20201112 09:54:47.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.678" level="INFO">VALUE: [5.565299999999579e-05, 5.569500000000144e-05, 5.537500000000334e-05, 5.5944000000002214e-05, 5.558299999999794e-05, 5.604099999999973e-05, 5.6000000000000494e-05, 5.581899999999862e-05, 5.558400000000435e-05, 5.5430000000002144e-05, 5.5930000000002644e-05, 5.533299999999769e-05, 5.5916000000003074e-05, 5.534699999999726e-05, 5.579099999999948e-05, 5.5763999999999814e-05, 5.613900000000366e-05, 5.591699999999561e-05, 5.577800000000632e-05, 5.538900000000291e-05, 5.53470000000042e-05, 5.613900000000366e-05, 5.5486000000000424e-05, 5.520900000000051e-05, 5.556899999999837e-05, 5.5194000000001464e-05, 5.581999999999809e-05, 5.5805999999998523e-05, 5.58749999999969e-05, 5.5750000000000244e-05, 5.583299999999819e-05, 5.577699999999991e-05, 5.590300000000298e-05, 5.587500000000384e-05, 5.612500000000409e-05, 5.5263999999999314e-05, 5.5777999999999384e-05, 5.541700000000205e-05, 5.5499999999999994e-05, 5.558400000000435e-05, 5.556999999999784e-05, 5.5499999999999994e-05, 5.611199999999705e-05, 5.5277999999998884e-05, 5.5736000000000674e-05, 5.556900000000531e-05, 5.527699999999941e-05, 5.5485999999993485e-05, 5.579100000000642e-05, 5.5527999999999134e-05]</msg>
<status status="PASS" starttime="20201112 09:54:47.675" endtime="20201112 09:54:47.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.663" endtime="20201112 09:54:47.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.688" endtime="20201112 09:54:47.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:47.697" endtime="20201112 09:54:47.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.692" endtime="20201112 09:54:47.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.684" endtime="20201112 09:54:47.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.168" endtime="20201112 09:54:47.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.166" endtime="20201112 09:54:47.723"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.746" endtime="20201112 09:54:47.765"></status>
</kw>
<msg timestamp="20201112 09:54:47.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.742" endtime="20201112 09:54:47.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:47.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:47.767" endtime="20201112 09:54:47.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.770" endtime="20201112 09:54:47.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.735" endtime="20201112 09:54:47.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.729" endtime="20201112 09:54:47.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:47.781" endtime="20201112 09:54:48.069"></status>
</kw>
<msg timestamp="20201112 09:54:48.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042586403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042642847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:47.779" endtime="20201112 09:54:48.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042586403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042642847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.079" endtime="20201112 09:54:48.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.099" endtime="20201112 09:54:48.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.776" endtime="20201112 09:54:48.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.774" endtime="20201112 09:54:48.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.121" level="INFO">${RESULT} = [{'time': 0.042642847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6443999999995775e-05, 'source_diff': 5.6443999999995775e-05}, {'time': 0.042718875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:54:48.111" endtime="20201112 09:54:48.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.154" level="INFO">${ACCURACY} = {'diff': [5.6443999999995775e-05, 5.633300000000563e-05, 5.6957999999995845e-05, 5.6291999999999454e-05, 5.641699999999611e-05, 5.7028000000000634e-05, 5.659799999999798e-05, 5.6541999999999704e-05, 5...</msg>
<status status="PASS" starttime="20201112 09:54:48.123" endtime="20201112 09:54:48.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.166" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.163" endtime="20201112 09:54:48.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.172" level="INFO">VALUE: [5.6443999999995775e-05, 5.633300000000563e-05, 5.6957999999995845e-05, 5.6291999999999454e-05, 5.641699999999611e-05, 5.7028000000000634e-05, 5.659799999999798e-05, 5.6541999999999704e-05, 5.7014000000001064e-05, 5.6541999999999704e-05, 5.656899999999937e-05, 5.6944000000003214e-05, 5.683299999999919e-05, 5.676300000000134e-05, 5.706899999999987e-05, 5.684699999999876e-05, 5.6985999999994985e-05, 5.6985999999994985e-05, 5.709700000000595e-05, 5.662500000000459e-05, 5.6528000000000134e-05, 5.715299999999729e-05, 5.663899999999722e-05, 5.626300000000084e-05, 5.7083999999998913e-05, 5.6528000000000134e-05, 5.634799999999773e-05, 5.665300000000373e-05, 5.6208000000002034e-05, 5.7152000000004755e-05, 5.6651999999997316e-05, 5.704100000000073e-05, 5.711099999999858e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6985999999994985e-05, 5.6693999999996025e-05, 5.684699999999876e-05, 5.6264000000000314e-05, 5.686099999999833e-05, 5.6250000000000744e-05, 5.666699999999636e-05, 5.663900000000416e-05, 5.69870000000014e-05, 5.6972000000002354e-05, 5.6929999999996705e-05, 5.709699999999901e-05, 5.6971999999995415e-05, 5.688899999999747e-05, 5.661099999999808e-05]</msg>
<status status="PASS" starttime="20201112 09:54:48.168" endtime="20201112 09:54:48.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.156" endtime="20201112 09:54:48.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.182" endtime="20201112 09:54:48.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.191" endtime="20201112 09:54:48.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.186" endtime="20201112 09:54:48.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.177" endtime="20201112 09:54:48.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.725" endtime="20201112 09:54:48.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:47.724" endtime="20201112 09:54:48.220"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.246" endtime="20201112 09:54:48.266"></status>
</kw>
<msg timestamp="20201112 09:54:48.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.242" endtime="20201112 09:54:48.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.270" endtime="20201112 09:54:48.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.276" endtime="20201112 09:54:48.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.234" endtime="20201112 09:54:48.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.228" endtime="20201112 09:54:48.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.300" endtime="20201112 09:54:48.632"></status>
</kw>
<msg timestamp="20201112 09:54:48.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047595875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047653528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.296" endtime="20201112 09:54:48.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047595875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047653528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:48.641" endtime="20201112 09:54:48.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.661" endtime="20201112 09:54:48.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.289" endtime="20201112 09:54:48.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.284" endtime="20201112 09:54:48.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:48.680" level="INFO">${RESULT} = [{'time': 0.047653528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.765299999999779e-05, 'source_diff': 5.765299999999779e-05}, {'time': 0.047731528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:48.671" endtime="20201112 09:54:48.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:48.710" level="INFO">${ACCURACY} = {'diff': [5.765299999999779e-05, 5.788900000000541e-05, 5.7569999999999844e-05, 5.7777999999994445e-05, 5.7306000000000024e-05, 5.727700000000141e-05, 5.7943999999997275e-05, 5.78749999999989e-05, 5.7...</msg>
<status status="PASS" starttime="20201112 09:54:48.682" endtime="20201112 09:54:48.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.721" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:54:48.719" endtime="20201112 09:54:48.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.726" level="INFO">VALUE: [5.765299999999779e-05, 5.788900000000541e-05, 5.7569999999999844e-05, 5.7777999999994445e-05, 5.7306000000000024e-05, 5.727700000000141e-05, 5.7943999999997275e-05, 5.78749999999989e-05, 5.7236000000002174e-05, 5.7472000000002854e-05, 5.8000000000002494e-05, 5.786099999999933e-05, 5.7735999999995735e-05, 5.7500000000001994e-05, 5.7292000000000454e-05, 5.740299999999754e-05, 5.7333999999999163e-05, 5.794499999999675e-05, 5.815300000000523e-05, 5.722300000000208e-05, 5.7750000000002244e-05, 5.783300000000019e-05, 5.738900000000491e-05, 5.729100000000098e-05, 5.7208000000003034e-05, 5.7444000000003714e-05, 5.7472000000002854e-05, 5.7264000000001314e-05, 5.7500000000001994e-05, 5.7986000000002924e-05, 5.8014000000002064e-05, 5.7513999999994625e-05, 5.731900000000012e-05, 5.740299999999754e-05, 5.7820000000000094e-05, 5.7319999999999593e-05, 5.76949999999965e-05, 5.7665999999997886e-05, 5.779100000000148e-05, 5.7471999999995915e-05, 5.818100000000437e-05, 5.730500000000055e-05, 5.80550000000013e-05, 5.73749999999984e-05, 5.7514000000001564e-05, 5.7694000000003964e-05, 5.72629999999949e-05, 5.769500000000344e-05, 5.758299999999994e-05, 5.8014000000002064e-05]</msg>
<status status="PASS" starttime="20201112 09:54:48.723" endtime="20201112 09:54:48.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.712" endtime="20201112 09:54:48.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.736" endtime="20201112 09:54:48.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:48.744" endtime="20201112 09:54:48.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.740" endtime="20201112 09:54:48.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.732" endtime="20201112 09:54:48.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.223" endtime="20201112 09:54:48.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.221" endtime="20201112 09:54:48.770"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.793" endtime="20201112 09:54:48.813"></status>
</kw>
<msg timestamp="20201112 09:54:48.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.789" endtime="20201112 09:54:48.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:48.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:48.816" endtime="20201112 09:54:48.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.822" endtime="20201112 09:54:48.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.782" endtime="20201112 09:54:48.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.776" endtime="20201112 09:54:48.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:48.846" endtime="20201112 09:54:49.182"></status>
</kw>
<msg timestamp="20201112 09:54:49.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041750944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04180925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:48.843" endtime="20201112 09:54:49.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041750944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04180925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:49.191" endtime="20201112 09:54:49.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.210" endtime="20201112 09:54:49.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.836" endtime="20201112 09:54:49.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.831" endtime="20201112 09:54:49.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.229" level="INFO">${RESULT} = [{'time': 0.04180925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8306000000001024e-05, 'source_diff': 5.8306000000001024e-05}, {'time': 0.041877278, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:54:49.220" endtime="20201112 09:54:49.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.260" level="INFO">${ACCURACY} = {'diff': [5.8306000000001024e-05, 5.8999999999996555e-05, 5.8722000000004104e-05, 5.820900000000351e-05, 5.862499999999965e-05, 5.8249999999995805e-05, 5.8485999999996485e-05, 5.9013999999996125e-05, ...</msg>
<status status="PASS" starttime="20201112 09:54:49.232" endtime="20201112 09:54:49.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.271" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.269" endtime="20201112 09:54:49.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.277" level="INFO">VALUE: [5.8306000000001024e-05, 5.8999999999996555e-05, 5.8722000000004104e-05, 5.820900000000351e-05, 5.862499999999965e-05, 5.8249999999995805e-05, 5.8485999999996485e-05, 5.9013999999996125e-05, 5.862499999999965e-05, 5.8651999999999316e-05, 5.8500000000002994e-05, 5.830500000000155e-05, 5.8320000000000594e-05, 5.841700000000505e-05, 5.8958000000004784e-05, 5.868099999999793e-05, 5.841700000000505e-05, 5.8306000000001024e-05, 5.872300000000358e-05, 5.86949999999975e-05, 5.890299999999904e-05, 5.9084000000000914e-05, 5.8457999999997345e-05, 5.830499999999461e-05, 5.8305999999994085e-05, 5.908300000000144e-05, 5.840299999999854e-05, 5.8542000000001704e-05, 5.888899999999947e-05, 5.915299999999929e-05, 5.866699999999836e-05, 5.916699999999886e-05, 5.8541999999994765e-05, 5.843099999999768e-05, 5.893099999999818e-05, 5.9013999999996125e-05, 5.8820000000001094e-05, 5.9084000000000914e-05, 5.8707999999997595e-05, 5.861100000000008e-05, 5.9013999999996125e-05, 5.8499999999996055e-05, 5.901300000000359e-05, 5.9179999999998956e-05, 5.8901999999999566e-05, 5.831900000000112e-05, 5.862499999999965e-05, 5.8791999999995015e-05, 5.8499999999996055e-05, 5.8472000000003854e-05]</msg>
<status status="PASS" starttime="20201112 09:54:49.274" endtime="20201112 09:54:49.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.262" endtime="20201112 09:54:49.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.286" endtime="20201112 09:54:49.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.295" endtime="20201112 09:54:49.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.291" endtime="20201112 09:54:49.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.282" endtime="20201112 09:54:49.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.772" endtime="20201112 09:54:49.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:48.771" endtime="20201112 09:54:49.321"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.344" endtime="20201112 09:54:49.364"></status>
</kw>
<msg timestamp="20201112 09:54:49.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.340" endtime="20201112 09:54:49.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.368" endtime="20201112 09:54:49.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.374" endtime="20201112 09:54:49.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.333" endtime="20201112 09:54:49.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.327" endtime="20201112 09:54:49.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.397" endtime="20201112 09:54:49.729"></status>
</kw>
<msg timestamp="20201112 09:54:49.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041840042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041899819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.394" endtime="20201112 09:54:49.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041840042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041899819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.739" endtime="20201112 09:54:49.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.757" endtime="20201112 09:54:49.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.387" endtime="20201112 09:54:49.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.382" endtime="20201112 09:54:49.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:49.778" level="INFO">${RESULT} = [{'time': 0.041899819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.977699999999697e-05, 'source_diff': 5.977699999999697e-05}, {'time': 0.041974847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:49.769" endtime="20201112 09:54:49.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:49.809" level="INFO">${ACCURACY} = {'diff': [5.977699999999697e-05, 5.931900000000212e-05, 5.9665999999999886e-05, 5.9679999999999456e-05, 6.0028000000003634e-05, 5.9679999999999456e-05, 5.931900000000212e-05, 5.9278000000002884e-05, 5...</msg>
<status status="PASS" starttime="20201112 09:54:49.780" endtime="20201112 09:54:49.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.819" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:54:49.817" endtime="20201112 09:54:49.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.825" level="INFO">VALUE: [5.977699999999697e-05, 5.931900000000212e-05, 5.9665999999999886e-05, 5.9679999999999456e-05, 6.0028000000003634e-05, 5.9679999999999456e-05, 5.931900000000212e-05, 5.9278000000002884e-05, 5.9528000000003134e-05, 6.013900000000072e-05, 5.93750000000004e-05, 5.9429999999999206e-05, 5.9527999999996195e-05, 5.956900000000237e-05, 5.96949999999985e-05, 5.983300000000219e-05, 5.991699999999961e-05, 5.9735999999997735e-05, 5.9513999999996625e-05, 5.959700000000151e-05, 5.965299999999979e-05, 6.011100000000158e-05, 5.916699999999886e-05, 6.016699999999986e-05, 5.988900000000047e-05, 5.9334000000001164e-05, 5.9806000000002524e-05, 5.9999999999997555e-05, 6.0152000000000816e-05, 5.9862000000000803e-05, 5.952699999999672e-05, 5.9472000000004854e-05, 6.006899999999593e-05, 6.0028000000003634e-05, 6.0084000000001914e-05, 5.966699999999936e-05, 5.965299999999979e-05, 5.943099999999868e-05, 5.9320000000001594e-05, 5.9749999999997305e-05, 5.994499999999875e-05, 5.96949999999985e-05, 5.944500000000519e-05, 5.9819999999995155e-05, 5.963900000000022e-05, 5.9862000000000803e-05, 5.9971999999998415e-05, 5.93750000000004e-05, 5.9750000000004244e-05, 5.984700000000176e-05]</msg>
<status status="PASS" starttime="20201112 09:54:49.822" endtime="20201112 09:54:49.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.811" endtime="20201112 09:54:49.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.835" endtime="20201112 09:54:49.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:49.843" endtime="20201112 09:54:49.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.838" endtime="20201112 09:54:49.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.830" endtime="20201112 09:54:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.323" endtime="20201112 09:54:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.322" endtime="20201112 09:54:49.869"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.891" endtime="20201112 09:54:49.912"></status>
</kw>
<msg timestamp="20201112 09:54:49.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.888" endtime="20201112 09:54:49.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:49.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:49.915" endtime="20201112 09:54:49.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.921" endtime="20201112 09:54:49.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.881" endtime="20201112 09:54:49.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.875" endtime="20201112 09:54:49.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:49.945" endtime="20201112 09:54:50.277"></status>
</kw>
<msg timestamp="20201112 09:54:50.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041615236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041675931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:49.941" endtime="20201112 09:54:50.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041615236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041675931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:50.286" endtime="20201112 09:54:50.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.305" endtime="20201112 09:54:50.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.934" endtime="20201112 09:54:50.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.929" endtime="20201112 09:54:50.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.324" level="INFO">${RESULT} = [{'time': 0.041675931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.06949999999995e-05, 'source_diff': 6.06949999999995e-05}, {'time': 0.041752944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:50.315" endtime="20201112 09:54:50.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.355" level="INFO">${ACCURACY} = {'diff': [6.06949999999995e-05, 6.0166000000000386e-05, 6.065300000000079e-05, 6.0499999999998055e-05, 6.0777999999997445e-05, 6.106900000000387e-05, 6.090300000000104e-05, 6.0513999999997625e-05, 6.0...</msg>
<status status="PASS" starttime="20201112 09:54:50.326" endtime="20201112 09:54:50.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.366" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.364" endtime="20201112 09:54:50.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.371" level="INFO">VALUE: [6.06949999999995e-05, 6.0166000000000386e-05, 6.065300000000079e-05, 6.0499999999998055e-05, 6.0777999999997445e-05, 6.106900000000387e-05, 6.090300000000104e-05, 6.0513999999997625e-05, 6.0957999999999846e-05, 6.091700000000061e-05, 6.0820000000003094e-05, 6.0985999999998985e-05, 6.0763999999997875e-05, 6.0680000000000456e-05, 6.072299999999864e-05, 6.040300000000054e-05, 6.0527999999997195e-05, 6.0471999999998916e-05, 6.0486000000005424e-05, 6.087499999999496e-05, 6.112500000000215e-05, 6.0249999999997805e-05, 6.0207999999999096e-05, 6.093099999999324e-05, 6.0944000000000276e-05, 6.0584000000002414e-05, 6.0999999999998555e-05, 6.068099999999993e-05, 6.0514000000004564e-05, 6.077699999999797e-05, 6.0930000000000706e-05, 6.036100000000183e-05, 6.0582999999996e-05, 6.0457999999999346e-05, 6.054099999999729e-05, 6.041700000000011e-05, 6.0957999999999846e-05, 6.0735999999998735e-05, 6.030499999999661e-05, 6.108300000000344e-05, 6.0999999999998555e-05, 6.083300000000319e-05, 6.10420000000042e-05, 6.091699999999367e-05, 6.0541999999996765e-05, 6.03750000000014e-05, 6.116700000000086e-05, 6.0347999999994795e-05, 6.0471999999998916e-05, 6.0763999999997875e-05]</msg>
<status status="PASS" starttime="20201112 09:54:50.368" endtime="20201112 09:54:50.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.357" endtime="20201112 09:54:50.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.387" endtime="20201112 09:54:50.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.396" endtime="20201112 09:54:50.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.391" endtime="20201112 09:54:50.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.383" endtime="20201112 09:54:50.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.871" endtime="20201112 09:54:50.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:49.869" endtime="20201112 09:54:50.421"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.444" endtime="20201112 09:54:50.465"></status>
</kw>
<msg timestamp="20201112 09:54:50.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.441" endtime="20201112 09:54:50.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.468" endtime="20201112 09:54:50.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.475" endtime="20201112 09:54:50.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.433" endtime="20201112 09:54:50.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.427" endtime="20201112 09:54:50.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.498" endtime="20201112 09:54:50.829"></status>
</kw>
<msg timestamp="20201112 09:54:50.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04173125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041792931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:50.495" endtime="20201112 09:54:50.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04173125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041792931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:50.839" endtime="20201112 09:54:50.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.858" endtime="20201112 09:54:50.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.488" endtime="20201112 09:54:50.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.483" endtime="20201112 09:54:50.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:50.877" level="INFO">${RESULT} = [{'time': 0.041792931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.168100000000093e-05, 'source_diff': 6.168100000000093e-05}, {'time': 0.041869944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:50.868" endtime="20201112 09:54:50.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:50.907" level="INFO">${ACCURACY} = {'diff': [6.168100000000093e-05, 6.211099999999664e-05, 6.155599999999734e-05, 6.204100000000573e-05, 6.179099999999854e-05, 6.158300000000394e-05, 6.181999999999716e-05, 6.166700000000136e-05, 6.1944...</msg>
<status status="PASS" starttime="20201112 09:54:50.879" endtime="20201112 09:54:50.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.918" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:54:50.916" endtime="20201112 09:54:50.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:50.923" level="INFO">VALUE: [6.168100000000093e-05, 6.211099999999664e-05, 6.155599999999734e-05, 6.204100000000573e-05, 6.179099999999854e-05, 6.158300000000394e-05, 6.181999999999716e-05, 6.166700000000136e-05, 6.194400000000128e-05, 6.173599999999974e-05, 6.118100000000043e-05, 6.194500000000075e-05, 6.1195e-05, 6.215300000000229e-05, 6.140300000000154e-05, 6.183300000000419e-05, 6.19300000000017e-05, 6.129099999999804e-05, 6.127700000000541e-05, 6.140200000000207e-05, 6.1582999999997e-05, 6.123600000000617e-05, 6.188900000000247e-05, 6.176399999999888e-05, 6.148599999999949e-05, 6.172299999999964e-05, 6.194500000000075e-05, 6.195900000000032e-05, 6.144400000000078e-05, 6.163900000000222e-05, 6.212500000000315e-05, 6.191600000000214e-05, 6.181899999999768e-05, 6.127700000000541e-05, 6.201399999999913e-05, 6.197199999999348e-05, 6.169400000000103e-05, 6.129199999999752e-05, 6.194500000000075e-05, 6.119400000000053e-05, 6.204199999999827e-05, 6.180599999999759e-05, 6.158400000000341e-05, 6.195900000000032e-05, 6.205599999999784e-05, 6.204099999999879e-05, 6.13620000000023e-05, 6.165299999999485e-05, 6.177699999999897e-05, 6.216700000000186e-05]</msg>
<status status="PASS" starttime="20201112 09:54:50.920" endtime="20201112 09:54:50.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.909" endtime="20201112 09:54:50.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.933" endtime="20201112 09:54:50.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:50.941" endtime="20201112 09:54:50.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.937" endtime="20201112 09:54:50.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.928" endtime="20201112 09:54:50.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.423" endtime="20201112 09:54:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.422" endtime="20201112 09:54:50.967"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:50.990" endtime="20201112 09:54:51.011"></status>
</kw>
<msg timestamp="20201112 09:54:51.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:50.987" endtime="20201112 09:54:51.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.014" endtime="20201112 09:54:51.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.021" endtime="20201112 09:54:51.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.979" endtime="20201112 09:54:51.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.974" endtime="20201112 09:54:51.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.044" endtime="20201112 09:54:51.341"></status>
</kw>
<msg timestamp="20201112 09:54:51.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042001389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042063764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.041" endtime="20201112 09:54:51.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042001389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042063764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.351" endtime="20201112 09:54:51.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.370" endtime="20201112 09:54:51.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.033" endtime="20201112 09:54:51.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.028" endtime="20201112 09:54:51.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.389" level="INFO">${RESULT} = [{'time': 0.042063764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.237499999999646e-05, 'source_diff': 6.237499999999646e-05}, {'time': 0.04214675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:51.380" endtime="20201112 09:54:51.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.419" level="INFO">${ACCURACY} = {'diff': [6.237499999999646e-05, 6.272199999999423e-05, 6.281900000000562e-05, 6.254199999999877e-05, 6.316700000000286e-05, 6.22499999999998e-05, 6.273600000000074e-05, 6.250000000000006e-05, 6.27090...</msg>
<status status="PASS" starttime="20201112 09:54:51.391" endtime="20201112 09:54:51.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.430" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.428" endtime="20201112 09:54:51.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.436" level="INFO">VALUE: [6.237499999999646e-05, 6.272199999999423e-05, 6.281900000000562e-05, 6.254199999999877e-05, 6.316700000000286e-05, 6.22499999999998e-05, 6.273600000000074e-05, 6.250000000000006e-05, 6.270900000000107e-05, 6.257000000000484e-05, 6.27500000000003e-05, 6.27630000000004e-05, 6.261100000000408e-05, 6.30829999999985e-05, 6.295800000000185e-05, 6.219400000000153e-05, 6.290300000000304e-05, 6.248600000000049e-05, 6.247200000000092e-05, 6.2582999999998e-05, 6.268099999999499e-05, 6.258399999999747e-05, 6.300000000000056e-05, 6.319400000000253e-05, 6.220900000000057e-05, 6.244500000000125e-05, 6.30829999999985e-05, 6.27080000000016e-05, 6.315299999999635e-05, 6.245800000000135e-05, 6.27080000000016e-05, 6.237499999999646e-05, 6.281899999999868e-05, 6.251400000000656e-05, 6.276399999999988e-05, 6.315299999999635e-05, 6.263900000000322e-05, 6.265300000000279e-05, 6.24029999999956e-05, 6.301400000000013e-05, 6.238899999999603e-05, 6.23620000000033e-05, 6.230499999999861e-05, 6.251300000000015e-05, 6.227799999999895e-05, 6.240199999999613e-05, 6.298600000000099e-05, 6.269400000000203e-05, 6.318100000000243e-05, 6.25699999999979e-05]</msg>
<status status="PASS" starttime="20201112 09:54:51.432" endtime="20201112 09:54:51.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.421" endtime="20201112 09:54:51.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.445" endtime="20201112 09:54:51.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.453" endtime="20201112 09:54:51.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.449" endtime="20201112 09:54:51.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.441" endtime="20201112 09:54:51.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.969" endtime="20201112 09:54:51.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:50.968" endtime="20201112 09:54:51.479"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.502" endtime="20201112 09:54:51.523"></status>
</kw>
<msg timestamp="20201112 09:54:51.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.499" endtime="20201112 09:54:51.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:51.526" endtime="20201112 09:54:51.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.532" endtime="20201112 09:54:51.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.492" endtime="20201112 09:54:51.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.486" endtime="20201112 09:54:51.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.556" endtime="20201112 09:54:51.886"></status>
</kw>
<msg timestamp="20201112 09:54:51.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042015306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042078708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.552" endtime="20201112 09:54:51.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042015306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042078708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:51.895" endtime="20201112 09:54:51.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.914" endtime="20201112 09:54:51.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.545" endtime="20201112 09:54:51.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.541" endtime="20201112 09:54:51.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:51.935" level="INFO">${RESULT} = [{'time': 0.042078708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.340199999999713e-05, 'source_diff': 6.340199999999713e-05}, {'time': 0.042159722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:51.926" endtime="20201112 09:54:51.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:51.965" level="INFO">${ACCURACY} = {'diff': [6.340199999999713e-05, 6.361099999999814e-05, 6.365299999999685e-05, 6.413899999999778e-05, 6.369400000000303e-05, 6.369399999999609e-05, 6.359699999999857e-05, 6.336100000000483e-05, 6.3374...</msg>
<status status="PASS" starttime="20201112 09:54:51.937" endtime="20201112 09:54:51.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.976" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:54:51.974" endtime="20201112 09:54:51.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:51.982" level="INFO">VALUE: [6.340199999999713e-05, 6.361099999999814e-05, 6.365299999999685e-05, 6.413899999999778e-05, 6.369400000000303e-05, 6.369399999999609e-05, 6.359699999999857e-05, 6.336100000000483e-05, 6.337499999999746e-05, 6.381900000000662e-05, 6.35699999999989e-05, 6.35280000000002e-05, 6.35699999999989e-05, 6.347199999999498e-05, 6.37080000000026e-05, 6.327700000000047e-05, 6.348600000000149e-05, 6.365299999999685e-05, 6.327799999999995e-05, 6.345899999999488e-05, 6.343100000000268e-05, 6.395899999999538e-05, 6.39029999999971e-05, 6.32500000000008e-05, 6.376400000000088e-05, 6.368000000000346e-05, 6.336099999999789e-05, 6.415199999999788e-05, 6.411099999999864e-05, 6.398600000000199e-05, 6.352700000000072e-05, 6.34029999999966e-05, 6.317999999999602e-05, 6.379200000000002e-05, 6.391699999999667e-05, 6.415299999999735e-05, 6.366699999999642e-05, 6.398600000000199e-05, 6.341600000000364e-05, 6.372300000000164e-05, 6.401399999999419e-05, 6.322199999999473e-05, 6.331999999999866e-05, 6.381999999999916e-05, 6.395799999999591e-05, 6.390200000000457e-05, 6.39300000000037e-05, 6.338900000000397e-05, 6.369400000000303e-05, 6.376399999999394e-05]</msg>
<status status="PASS" starttime="20201112 09:54:51.978" endtime="20201112 09:54:51.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.967" endtime="20201112 09:54:51.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:51.991" endtime="20201112 09:54:51.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:51.999" endtime="20201112 09:54:52.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.995" endtime="20201112 09:54:52.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.987" endtime="20201112 09:54:52.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.481" endtime="20201112 09:54:52.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:51.480" endtime="20201112 09:54:52.025"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.048" endtime="20201112 09:54:52.070"></status>
</kw>
<msg timestamp="20201112 09:54:52.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.045" endtime="20201112 09:54:52.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.073" endtime="20201112 09:54:52.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.079" endtime="20201112 09:54:52.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.037" endtime="20201112 09:54:52.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.032" endtime="20201112 09:54:52.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.103" endtime="20201112 09:54:52.444"></status>
</kw>
<msg timestamp="20201112 09:54:52.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041789903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041854194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.099" endtime="20201112 09:54:52.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041789903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041854194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.453" endtime="20201112 09:54:52.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.472" endtime="20201112 09:54:52.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.092" endtime="20201112 09:54:52.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.088" endtime="20201112 09:54:52.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:52.491" level="INFO">${RESULT} = [{'time': 0.041854194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.42909999999941e-05, 'source_diff': 6.42909999999941e-05}, {'time': 0.041930222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:52.482" endtime="20201112 09:54:52.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:52.521" level="INFO">${ACCURACY} = {'diff': [6.42909999999941e-05, 6.448600000000249e-05, 6.497200000000342e-05, 6.429100000000104e-05, 6.42500000000018e-05, 6.477800000000145e-05, 6.456900000000043e-05, 6.481900000000068e-05, 6.493100...</msg>
<status status="PASS" starttime="20201112 09:54:52.493" endtime="20201112 09:54:52.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.532" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:54:52.530" endtime="20201112 09:54:52.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.538" level="INFO">VALUE: [6.42909999999941e-05, 6.448600000000249e-05, 6.497200000000342e-05, 6.429100000000104e-05, 6.42500000000018e-05, 6.477800000000145e-05, 6.456900000000043e-05, 6.481900000000068e-05, 6.493100000000418e-05, 6.438899999999803e-05, 6.477800000000145e-05, 6.515300000000529e-05, 6.501399999999519e-05, 6.47500000000023e-05, 6.437499999999846e-05, 6.422200000000267e-05, 6.474999999999537e-05, 6.481900000000068e-05, 6.437499999999846e-05, 6.427800000000095e-05, 6.441700000000411e-05, 6.462499999999871e-05, 6.497199999999648e-05, 6.45699999999999e-05, 6.500000000000256e-05, 6.511099999999964e-05, 6.436199999999836e-05, 6.505600000000084e-05, 6.486099999999939e-05, 6.509799999999955e-05, 6.504099999999485e-05, 6.481900000000068e-05, 6.472200000000317e-05, 6.483300000000025e-05, 6.42080000000031e-05, 6.413900000000472e-05, 6.516700000000486e-05, 6.427800000000095e-05, 6.427800000000095e-05, 6.494499999999681e-05, 6.454200000000077e-05, 6.499999999999562e-05, 6.457000000000684e-05, 6.469400000000403e-05, 6.494499999999681e-05, 6.455500000000086e-05, 6.463899999999828e-05, 6.451400000000163e-05, 6.427800000000095e-05, 6.477800000000145e-05]</msg>
<status status="PASS" starttime="20201112 09:54:52.535" endtime="20201112 09:54:52.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.523" endtime="20201112 09:54:52.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.547" endtime="20201112 09:54:52.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:52.556" endtime="20201112 09:54:52.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.552" endtime="20201112 09:54:52.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.543" endtime="20201112 09:54:52.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.027" endtime="20201112 09:54:52.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.026" endtime="20201112 09:54:52.582"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.604" endtime="20201112 09:54:52.625"></status>
</kw>
<msg timestamp="20201112 09:54:52.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.601" endtime="20201112 09:54:52.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:52.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:52.629" endtime="20201112 09:54:52.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.635" endtime="20201112 09:54:52.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.594" endtime="20201112 09:54:52.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.588" endtime="20201112 09:54:52.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:52.658" endtime="20201112 09:54:52.991"></status>
</kw>
<msg timestamp="20201112 09:54:52.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041881875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:52.655" endtime="20201112 09:54:52.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041881875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.000" endtime="20201112 09:54:53.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.019" endtime="20201112 09:54:53.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.648" endtime="20201112 09:54:53.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.643" endtime="20201112 09:54:53.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.038" level="INFO">${RESULT} = [{'time': 0.041881875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.57779999999955e-05, 'source_diff': 6.57779999999955e-05}, {'time': 0.041957917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:54:53.029" endtime="20201112 09:54:53.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.068" level="INFO">${ACCURACY} = {'diff': [6.57779999999955e-05, 6.591699999999867e-05, 6.533400000000023e-05, 6.551400000000263e-05, 6.554200000000177e-05, 6.538899999999903e-05, 6.613899999999978e-05, 6.520799999999716e-05, 6.56110...</msg>
<status status="PASS" starttime="20201112 09:54:53.040" endtime="20201112 09:54:53.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.079" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.077" endtime="20201112 09:54:53.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.085" level="INFO">VALUE: [6.57779999999955e-05, 6.591699999999867e-05, 6.533400000000023e-05, 6.551400000000263e-05, 6.554200000000177e-05, 6.538899999999903e-05, 6.613899999999978e-05, 6.520799999999716e-05, 6.561100000000014e-05, 6.520799999999716e-05, 6.547299999999645e-05, 6.561100000000014e-05, 6.597200000000442e-05, 6.54029999999986e-05, 6.530600000000109e-05, 6.576399999999594e-05, 6.520899999999663e-05, 6.519499999999706e-05, 6.533299999999381e-05, 6.529200000000152e-05, 6.520799999999716e-05, 6.58480000000003e-05, 6.586100000000039e-05, 6.563899999999928e-05, 6.524999999999587e-05, 6.562499999999971e-05, 6.548599999999655e-05, 6.604200000000227e-05, 6.524999999999587e-05, 6.54029999999986e-05, 6.544499999999731e-05, 6.526399999999544e-05, 6.617999999999902e-05, 6.526400000000238e-05, 6.545799999999741e-05, 6.595799999999791e-05, 6.5583000000001e-05, 6.57630000000034e-05, 6.598600000000399e-05, 6.57500000000033e-05, 6.531900000000118e-05, 6.548600000000349e-05, 6.609700000000107e-05, 6.595900000000432e-05, 6.554200000000177e-05, 6.579199999999508e-05, 6.569499999999756e-05, 6.533400000000023e-05, 6.551399999999569e-05, 6.534700000000032e-05]</msg>
<status status="PASS" starttime="20201112 09:54:53.082" endtime="20201112 09:54:53.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.070" endtime="20201112 09:54:53.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.095" endtime="20201112 09:54:53.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.103" endtime="20201112 09:54:53.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.099" endtime="20201112 09:54:53.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.090" endtime="20201112 09:54:53.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.584" endtime="20201112 09:54:53.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:52.582" endtime="20201112 09:54:53.129"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.151" endtime="20201112 09:54:53.172"></status>
</kw>
<msg timestamp="20201112 09:54:53.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.148" endtime="20201112 09:54:53.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.176" endtime="20201112 09:54:53.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.182" endtime="20201112 09:54:53.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.141" endtime="20201112 09:54:53.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.135" endtime="20201112 09:54:53.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.205" endtime="20201112 09:54:53.538"></status>
</kw>
<msg timestamp="20201112 09:54:53.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041647236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041713597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.202" endtime="20201112 09:54:53.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041647236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041713597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.548" endtime="20201112 09:54:53.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.567" endtime="20201112 09:54:53.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.195" endtime="20201112 09:54:53.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.190" endtime="20201112 09:54:53.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:53.586" level="INFO">${RESULT} = [{'time': 0.041713597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.636100000000089e-05, 'source_diff': 6.636100000000089e-05}, {'time': 0.041788639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:53.577" endtime="20201112 09:54:53.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:53.616" level="INFO">${ACCURACY} = {'diff': [6.636100000000089e-05, 6.622200000000467e-05, 6.691699999999967e-05, 6.697300000000489e-05, 6.655600000000234e-05, 6.662500000000071e-05, 6.700000000000456e-05, 6.647199999999798e-05, 6.6485...</msg>
<status status="PASS" starttime="20201112 09:54:53.588" endtime="20201112 09:54:53.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.627" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:54:53.625" endtime="20201112 09:54:53.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.632" level="INFO">VALUE: [6.636100000000089e-05, 6.622200000000467e-05, 6.691699999999967e-05, 6.697300000000489e-05, 6.655600000000234e-05, 6.662500000000071e-05, 6.700000000000456e-05, 6.647199999999798e-05, 6.648599999999755e-05, 6.676400000000388e-05, 6.611200000000012e-05, 6.654100000000329e-05, 6.681900000000268e-05, 6.711100000000164e-05, 6.649999999999712e-05, 6.619399999999859e-05, 6.705499999999642e-05, 6.674999999999737e-05, 6.705600000000284e-05, 6.656900000000243e-05, 6.641699999999917e-05, 6.697299999999795e-05, 6.651399999999669e-05, 6.622199999999773e-05, 6.670799999999866e-05, 6.704100000000379e-05, 6.718000000000002e-05, 6.66109999999942e-05, 6.67500000000043e-05, 6.681900000000268e-05, 6.624999999999687e-05, 6.704200000000327e-05, 6.637499999999352e-05, 6.673700000000421e-05, 6.655600000000234e-05, 6.645899999999788e-05, 6.658400000000148e-05, 6.67909999999966e-05, 6.716699999999992e-05, 6.702699999999728e-05, 6.663900000000028e-05, 6.636100000000089e-05, 6.677799999999651e-05, 6.650000000000406e-05, 6.691699999999967e-05, 6.658299999999506e-05, 6.623600000000424e-05, 6.688900000000053e-05, 6.715199999999394e-05, 6.711100000000164e-05]</msg>
<status status="PASS" starttime="20201112 09:54:53.629" endtime="20201112 09:54:53.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.618" endtime="20201112 09:54:53.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.642" endtime="20201112 09:54:53.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:53.650" endtime="20201112 09:54:53.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.646" endtime="20201112 09:54:53.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.637" endtime="20201112 09:54:53.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.131" endtime="20201112 09:54:53.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.129" endtime="20201112 09:54:53.676"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.699" endtime="20201112 09:54:53.721"></status>
</kw>
<msg timestamp="20201112 09:54:53.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.695" endtime="20201112 09:54:53.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:53.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:53.725" endtime="20201112 09:54:53.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.731" endtime="20201112 09:54:53.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.688" endtime="20201112 09:54:53.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.682" endtime="20201112 09:54:53.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:53.754" endtime="20201112 09:54:54.085"></status>
</kw>
<msg timestamp="20201112 09:54:54.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041744111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041811972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:53.751" endtime="20201112 09:54:54.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041744111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041811972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.094" endtime="20201112 09:54:54.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.113" endtime="20201112 09:54:54.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.744" endtime="20201112 09:54:54.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.739" endtime="20201112 09:54:54.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.134" level="INFO">${RESULT} = [{'time': 0.041811972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.786100000000239e-05, 'source_diff': 6.786100000000239e-05}, {'time': 0.041889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:54:54.125" endtime="20201112 09:54:54.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.164" level="INFO">${ACCURACY} = {'diff': [6.786100000000239e-05, 6.779200000000402e-05, 6.799999999999862e-05, 6.762500000000171e-05, 6.786100000000239e-05, 6.804200000000427e-05, 6.808399999999604e-05, 6.747200000000592e-05, 6.8027...</msg>
<status status="PASS" starttime="20201112 09:54:54.136" endtime="20201112 09:54:54.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.175" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.173" endtime="20201112 09:54:54.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.181" level="INFO">VALUE: [6.786100000000239e-05, 6.779200000000402e-05, 6.799999999999862e-05, 6.762500000000171e-05, 6.786100000000239e-05, 6.804200000000427e-05, 6.808399999999604e-05, 6.747200000000592e-05, 6.802799999999776e-05, 6.793000000000077e-05, 6.763800000000181e-05, 6.761100000000214e-05, 6.765300000000085e-05, 6.776399999999794e-05, 6.787500000000196e-05, 6.720799999999916e-05, 6.720799999999916e-05, 6.77359999999988e-05, 6.797300000000589e-05, 6.794499999999981e-05, 6.744399999999984e-05, 6.779200000000402e-05, 6.72359999999983e-05, 6.781999999999622e-05, 6.754100000000429e-05, 6.805500000000436e-05, 6.787499999999502e-05, 6.749999999999812e-05, 6.762500000000171e-05, 6.794400000000034e-05, 6.734699999999538e-05, 6.765300000000085e-05, 6.774999999999837e-05, 6.745799999999941e-05, 6.741700000000017e-05, 6.786100000000239e-05, 6.774999999999837e-05, 6.770899999999913e-05, 6.748599999999855e-05, 6.734700000000232e-05, 6.776399999999794e-05, 6.749999999999812e-05, 6.805499999999742e-05, 6.788900000000153e-05, 6.805499999999742e-05, 6.75280000000042e-05, 6.777800000000445e-05, 6.769499999999956e-05, 6.72359999999983e-05, 6.724999999999787e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.177" endtime="20201112 09:54:54.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.166" endtime="20201112 09:54:54.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.190" endtime="20201112 09:54:54.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.198" endtime="20201112 09:54:54.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.194" endtime="20201112 09:54:54.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.186" endtime="20201112 09:54:54.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.678" endtime="20201112 09:54:54.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:53.677" endtime="20201112 09:54:54.224"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.247" endtime="20201112 09:54:54.269"></status>
</kw>
<msg timestamp="20201112 09:54:54.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.243" endtime="20201112 09:54:54.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.272" endtime="20201112 09:54:54.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.278" endtime="20201112 09:54:54.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.236" endtime="20201112 09:54:54.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.230" endtime="20201112 09:54:54.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.303" endtime="20201112 09:54:54.621"></status>
</kw>
<msg timestamp="20201112 09:54:54.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041673931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041743028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.299" endtime="20201112 09:54:54.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041673931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041743028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.625" endtime="20201112 09:54:54.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.634" endtime="20201112 09:54:54.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.292" endtime="20201112 09:54:54.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.287" endtime="20201112 09:54:54.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:54.643" level="INFO">${RESULT} = [{'time': 0.041743028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.909700000000407e-05, 'source_diff': 6.909700000000407e-05}, {'time': 0.041820056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:54.638" endtime="20201112 09:54:54.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:54.656" level="INFO">${ACCURACY} = {'diff': [6.909700000000407e-05, 6.877799999999851e-05, 6.866699999999448e-05, 6.870800000000066e-05, 6.856899999999749e-05, 6.822199999999973e-05, 6.906899999999799e-05, 6.888899999999559e-05, 6.8847...</msg>
<status status="PASS" starttime="20201112 09:54:54.644" endtime="20201112 09:54:54.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.662" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:54:54.661" endtime="20201112 09:54:54.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.664" level="INFO">VALUE: [6.909700000000407e-05, 6.877799999999851e-05, 6.866699999999448e-05, 6.870800000000066e-05, 6.856899999999749e-05, 6.822199999999973e-05, 6.906899999999799e-05, 6.888899999999559e-05, 6.884700000000382e-05, 6.826399999999844e-05, 6.841700000000117e-05, 6.89309999999943e-05, 6.849999999999912e-05, 6.901399999999919e-05, 6.832000000000366e-05, 6.862500000000271e-05, 6.870800000000066e-05, 6.915300000000235e-05, 6.856899999999749e-05, 6.881899999999774e-05, 6.872200000000023e-05, 6.822199999999973e-05, 6.840299999999466e-05, 6.874999999999937e-05, 6.90280000000057e-05, 6.841700000000117e-05, 6.893100000000124e-05, 6.858399999999654e-05, 6.87359999999998e-05, 6.85979999999961e-05, 6.85280000000052e-05, 6.913900000000278e-05, 6.912500000000321e-05, 6.836100000000289e-05, 6.888899999999559e-05, 6.830499999999767e-05, 6.831899999999724e-05, 6.915300000000235e-05, 6.909699999999713e-05, 6.881999999999722e-05, 6.826399999999844e-05, 6.887499999999602e-05, 6.826399999999844e-05, 6.90559999999979e-05, 6.898600000000005e-05, 6.847199999999998e-05, 6.863899999999534e-05, 6.840200000000213e-05, 6.848599999999955e-05, 6.85280000000052e-05]</msg>
<status status="PASS" starttime="20201112 09:54:54.663" endtime="20201112 09:54:54.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.657" endtime="20201112 09:54:54.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.669" endtime="20201112 09:54:54.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:54.673" endtime="20201112 09:54:54.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.671" endtime="20201112 09:54:54.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.667" endtime="20201112 09:54:54.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.226" endtime="20201112 09:54:54.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.225" endtime="20201112 09:54:54.694"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.705" endtime="20201112 09:54:54.723"></status>
</kw>
<msg timestamp="20201112 09:54:54.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.703" endtime="20201112 09:54:54.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:54.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:54.724" endtime="20201112 09:54:54.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.727" endtime="20201112 09:54:54.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.700" endtime="20201112 09:54:54.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.697" endtime="20201112 09:54:54.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:54.738" endtime="20201112 09:54:55.068"></status>
</kw>
<msg timestamp="20201112 09:54:55.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:54.737" endtime="20201112 09:54:55.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.078" endtime="20201112 09:54:55.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.097" endtime="20201112 09:54:55.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.733" endtime="20201112 09:54:55.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.731" endtime="20201112 09:54:55.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.116" level="INFO">${RESULT} = [{'time': 0.025002194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.977700000000003e-05, 'source_diff': 6.977700000000003e-05}, {'time': 0.025081236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:55.107" endtime="20201112 09:54:55.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.146" level="INFO">${ACCURACY} = {'diff': [6.977700000000003e-05, 6.938899999999956e-05, 6.967999999999905e-05, 6.956900000000196e-05, 6.983299999999831e-05, 6.95970000000011e-05, 6.998600000000105e-05, 6.976399999999994e-05, 6.92919...</msg>
<status status="PASS" starttime="20201112 09:54:55.118" endtime="20201112 09:54:55.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.157" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.155" endtime="20201112 09:54:55.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.162" level="INFO">VALUE: [6.977700000000003e-05, 6.938899999999956e-05, 6.967999999999905e-05, 6.956900000000196e-05, 6.983299999999831e-05, 6.95970000000011e-05, 6.998600000000105e-05, 6.976399999999994e-05, 6.929199999999858e-05, 7.002700000000028e-05, 7.012500000000074e-05, 6.975000000000037e-05, 7.00420000000028e-05, 6.963899999999981e-05, 6.92360000000003e-05, 6.955500000000239e-05, 6.962500000000024e-05, 6.948600000000055e-05, 6.99169999999992e-05, 6.948600000000055e-05, 6.994500000000181e-05, 7.016699999999945e-05, 6.945799999999794e-05, 6.957000000000144e-05, 6.948600000000055e-05, 7.009800000000108e-05, 7.017999999999955e-05, 6.991599999999973e-05, 6.97909999999996e-05, 7.005499999999942e-05, 7.001400000000019e-05, 6.945799999999794e-05, 6.994399999999887e-05, 6.94169999999987e-05, 7.001400000000019e-05, 6.951399999999969e-05, 7.00970000000016e-05, 7.016599999999998e-05, 6.963800000000034e-05, 6.940299999999913e-05, 7.017999999999955e-05, 6.919399999999812e-05, 6.958300000000153e-05, 6.962500000000024e-05, 6.977800000000298e-05, 6.926399999999944e-05, 6.958299999999806e-05, 7.013900000000031e-05, 7.016699999999945e-05, 6.975000000000037e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.159" endtime="20201112 09:54:55.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.148" endtime="20201112 09:54:55.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.172" endtime="20201112 09:54:55.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.180" endtime="20201112 09:54:55.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.176" endtime="20201112 09:54:55.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.167" endtime="20201112 09:54:55.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.695" endtime="20201112 09:54:55.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:54.695" endtime="20201112 09:54:55.206"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.229" endtime="20201112 09:54:55.250"></status>
</kw>
<msg timestamp="20201112 09:54:55.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.225" endtime="20201112 09:54:55.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.253" endtime="20201112 09:54:55.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.260" endtime="20201112 09:54:55.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.218" endtime="20201112 09:54:55.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.212" endtime="20201112 09:54:55.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.283" endtime="20201112 09:54:55.616"></status>
</kw>
<msg timestamp="20201112 09:54:55.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041684389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.280" endtime="20201112 09:54:55.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041613764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041684389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.625" endtime="20201112 09:54:55.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.644" endtime="20201112 09:54:55.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.273" endtime="20201112 09:54:55.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.268" endtime="20201112 09:54:55.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:55.663" level="INFO">${RESULT} = [{'time': 0.041684389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.062500000000471e-05, 'source_diff': 7.062500000000471e-05}, {'time': 0.041769403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:55.654" endtime="20201112 09:54:55.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:55.694" level="INFO">${ACCURACY} = {'diff': [7.062500000000471e-05, 7.056999999999897e-05, 7.031999999999872e-05, 7.04439999999959e-05, 7.102800000000076e-05, 7.048600000000155e-05, 7.091599999999726e-05, 7.052699999999384e-05, 7.06940...</msg>
<status status="PASS" starttime="20201112 09:54:55.665" endtime="20201112 09:54:55.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.705" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:54:55.702" endtime="20201112 09:54:55.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.710" level="INFO">VALUE: [7.062500000000471e-05, 7.056999999999897e-05, 7.031999999999872e-05, 7.04439999999959e-05, 7.102800000000076e-05, 7.048600000000155e-05, 7.091599999999726e-05, 7.052699999999384e-05, 7.069400000000309e-05, 7.116599999999751e-05, 7.050000000000112e-05, 7.055499999999992e-05, 7.041699999999623e-05, 7.06109999999982e-05, 7.022299999999426e-05, 7.027800000000001e-05, 7.054199999999983e-05, 7.020900000000163e-05, 7.07910000000006e-05, 7.076300000000146e-05, 7.07360000000018e-05, 7.051400000000069e-05, 7.087499999999802e-05, 7.018000000000302e-05, 7.101400000000119e-05, 7.030499999999967e-05, 7.047300000000145e-05, 7.080599999999965e-05, 7.036099999999795e-05, 7.069500000000256e-05, 7.100000000000162e-05, 7.02360000000013e-05, 7.022200000000173e-05, 7.045799999999547e-05, 7.102800000000076e-05, 7.054199999999983e-05, 7.048600000000155e-05, 7.070800000000266e-05, 7.075000000000137e-05, 7.102800000000076e-05, 7.084699999999888e-05, 7.077800000000051e-05, 7.020900000000163e-05, 7.05700000000059e-05, 7.056999999999897e-05, 7.044500000000231e-05, 7.088900000000453e-05, 7.051299999999427e-05, 7.105500000000042e-05, 7.031899999999924e-05]</msg>
<status status="PASS" starttime="20201112 09:54:55.707" endtime="20201112 09:54:55.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.695" endtime="20201112 09:54:55.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.725" endtime="20201112 09:54:55.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:55.733" endtime="20201112 09:54:55.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.729" endtime="20201112 09:54:55.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.720" endtime="20201112 09:54:55.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.208" endtime="20201112 09:54:55.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.207" endtime="20201112 09:54:55.759"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.782" endtime="20201112 09:54:55.804"></status>
</kw>
<msg timestamp="20201112 09:54:55.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.779" endtime="20201112 09:54:55.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:55.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:55.807" endtime="20201112 09:54:55.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.813" endtime="20201112 09:54:55.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.771" endtime="20201112 09:54:55.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.766" endtime="20201112 09:54:55.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:55.836" endtime="20201112 09:54:56.166"></status>
</kw>
<msg timestamp="20201112 09:54:56.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042085597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042156847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:55.833" endtime="20201112 09:54:56.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042085597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042156847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.176" endtime="20201112 09:54:56.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.195" endtime="20201112 09:54:56.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.826" endtime="20201112 09:54:56.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.821" endtime="20201112 09:54:56.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.216" level="INFO">${RESULT} = [{'time': 0.042156847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.124999999999493e-05, 'source_diff': 7.124999999999493e-05}, {'time': 0.042238875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:56.207" endtime="20201112 09:54:56.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.246" level="INFO">${ACCURACY} = {'diff': [7.124999999999493e-05, 7.213899999999884e-05, 7.219500000000406e-05, 7.166699999999748e-05, 7.195900000000338e-05, 7.163899999999834e-05, 7.166700000000442e-05, 7.12360000000023e-05, 7.13190...</msg>
<status status="PASS" starttime="20201112 09:54:56.218" endtime="20201112 09:54:56.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.257" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.255" endtime="20201112 09:54:56.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.263" level="INFO">VALUE: [7.124999999999493e-05, 7.213899999999884e-05, 7.219500000000406e-05, 7.166699999999748e-05, 7.195900000000338e-05, 7.163899999999834e-05, 7.166700000000442e-05, 7.12360000000023e-05, 7.131900000000024e-05, 7.138900000000503e-05, 7.215199999999894e-05, 7.170799999999672e-05, 7.151400000000169e-05, 7.177700000000203e-05, 7.17769999999951e-05, 7.136099999999895e-05, 7.218100000000449e-05, 7.19309999999973e-05, 7.119400000000359e-05, 7.212499999999927e-05, 7.1763999999995e-05, 7.158399999999954e-05, 7.176300000000246e-05, 7.133299999999981e-05, 7.201299999999577e-05, 7.166599999999801e-05, 7.16109999999992e-05, 7.15690000000005e-05, 7.183300000000031e-05, 7.163899999999834e-05, 7.213899999999884e-05, 7.177799999999457e-05, 7.194500000000381e-05, 7.191699999999773e-05, 7.151400000000169e-05, 7.219399999999765e-05, 7.136100000000589e-05, 7.126400000000144e-05, 7.199999999999568e-05, 7.217999999999808e-05, 7.174999999999543e-05, 7.166699999999748e-05, 7.155500000000092e-05, 7.147199999999604e-05, 7.202800000000176e-05, 7.180600000000065e-05, 7.1763999999995e-05, 7.193100000000424e-05, 7.205599999999396e-05, 7.207000000000047e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.260" endtime="20201112 09:54:56.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.248" endtime="20201112 09:54:56.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.272" endtime="20201112 09:54:56.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.281" endtime="20201112 09:54:56.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.276" endtime="20201112 09:54:56.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.268" endtime="20201112 09:54:56.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.761" endtime="20201112 09:54:56.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:55.760" endtime="20201112 09:54:56.306"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.329" endtime="20201112 09:54:56.350"></status>
</kw>
<msg timestamp="20201112 09:54:56.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.326" endtime="20201112 09:54:56.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.354" endtime="20201112 09:54:56.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.360" endtime="20201112 09:54:56.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.318" endtime="20201112 09:54:56.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.313" endtime="20201112 09:54:56.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.385" endtime="20201112 09:54:56.717"></status>
</kw>
<msg timestamp="20201112 09:54:56.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041951319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042023903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.381" endtime="20201112 09:54:56.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041951319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042023903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.727" endtime="20201112 09:54:56.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.746" endtime="20201112 09:54:56.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.374" endtime="20201112 09:54:56.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.369" endtime="20201112 09:54:56.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:56.765" level="INFO">${RESULT} = [{'time': 0.042023903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.258400000000054e-05, 'source_diff': 7.258400000000054e-05}, {'time': 0.042115931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:56.756" endtime="20201112 09:54:56.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:56.795" level="INFO">${ACCURACY} = {'diff': [7.258400000000054e-05, 7.237499999999952e-05, 7.255499999999498e-05, 7.234700000000038e-05, 7.297300000000395e-05, 7.279200000000208e-05, 7.216599999999851e-05, 7.233300000000081e-05, 7.2500...</msg>
<status status="PASS" starttime="20201112 09:54:56.767" endtime="20201112 09:54:56.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.806" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:54:56.804" endtime="20201112 09:54:56.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.811" level="INFO">VALUE: [7.258400000000054e-05, 7.237499999999952e-05, 7.255499999999498e-05, 7.234700000000038e-05, 7.297300000000395e-05, 7.279200000000208e-05, 7.216599999999851e-05, 7.233300000000081e-05, 7.250000000000312e-05, 7.266699999999848e-05, 7.247199999999704e-05, 7.227800000000201e-05, 7.315299999999941e-05, 7.311099999999376e-05, 7.259800000000011e-05, 7.233400000000029e-05, 7.269399999999815e-05, 7.218099999999755e-05, 7.275000000000337e-05, 7.291599999999926e-05, 7.233300000000081e-05, 7.26110000000002e-05, 7.258299999999412e-05, 7.286100000000045e-05, 7.23189999999943e-05, 7.252800000000226e-05, 7.286100000000045e-05, 7.233299999999387e-05, 7.268099999999805e-05, 7.26110000000002e-05, 7.22639999999955e-05, 7.312500000000027e-05, 7.262499999999977e-05, 7.212499999999927e-05, 7.255500000000192e-05, 7.230499999999473e-05, 7.305500000000242e-05, 7.226400000000244e-05, 7.277800000000251e-05, 7.250000000000312e-05, 7.299999999999668e-05, 7.300000000000362e-05, 7.272199999999729e-05, 7.276400000000294e-05, 7.279199999999514e-05, 7.301299999999677e-05, 7.286100000000045e-05, 7.220799999999722e-05, 7.270800000000466e-05, 7.283300000000131e-05]</msg>
<status status="PASS" starttime="20201112 09:54:56.808" endtime="20201112 09:54:56.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.797" endtime="20201112 09:54:56.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.821" endtime="20201112 09:54:56.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:56.829" endtime="20201112 09:54:56.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.825" endtime="20201112 09:54:56.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.816" endtime="20201112 09:54:56.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.308" endtime="20201112 09:54:56.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.307" endtime="20201112 09:54:56.855"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.878" endtime="20201112 09:54:56.899"></status>
</kw>
<msg timestamp="20201112 09:54:56.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.874" endtime="20201112 09:54:56.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:56.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:56.903" endtime="20201112 09:54:56.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.909" endtime="20201112 09:54:56.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.867" endtime="20201112 09:54:56.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.861" endtime="20201112 09:54:56.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:56.932" endtime="20201112 09:54:57.265"></status>
</kw>
<msg timestamp="20201112 09:54:57.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041955222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042029264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:56.929" endtime="20201112 09:54:57.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041955222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042029264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:57.275" endtime="20201112 09:54:57.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.294" endtime="20201112 09:54:57.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.922" endtime="20201112 09:54:57.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.917" endtime="20201112 09:54:57.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.313" level="INFO">${RESULT} = [{'time': 0.042029264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.404199999999639e-05, 'source_diff': 7.404199999999639e-05}, {'time': 0.042121319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:57.304" endtime="20201112 09:54:57.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.343" level="INFO">${ACCURACY} = {'diff': [7.404199999999639e-05, 7.322199999999779e-05, 7.380600000000265e-05, 7.374999999999743e-05, 7.354100000000335e-05, 7.337500000000052e-05, 7.376299999999752e-05, 7.392999999999983e-05, 7.3415...</msg>
<status status="PASS" starttime="20201112 09:54:57.315" endtime="20201112 09:54:57.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.354" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.352" endtime="20201112 09:54:57.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.359" level="INFO">VALUE: [7.404199999999639e-05, 7.322199999999779e-05, 7.380600000000265e-05, 7.374999999999743e-05, 7.354100000000335e-05, 7.337500000000052e-05, 7.376299999999752e-05, 7.392999999999983e-05, 7.341599999999976e-05, 7.322199999999779e-05, 7.415300000000041e-05, 7.354199999999589e-05, 7.326400000000344e-05, 7.340299999999966e-05, 7.380600000000265e-05, 7.323599999999736e-05, 7.3763999999997e-05, 7.416600000000051e-05, 7.327799999999607e-05, 7.402700000000428e-05, 7.386100000000145e-05, 7.395799999999897e-05, 7.329099999999616e-05, 7.325000000000387e-05, 7.362500000000077e-05, 7.377799999999657e-05, 7.368099999999905e-05, 7.365299999999991e-05, 7.40560000000029e-05, 7.320799999999822e-05, 7.334800000000086e-05, 7.377799999999657e-05, 7.375000000000437e-05, 7.325000000000387e-05, 7.418000000000008e-05, 7.337500000000052e-05, 7.418099999999955e-05, 7.319399999999865e-05, 7.350000000000412e-05, 7.40560000000029e-05, 7.327799999999607e-05, 7.347200000000498e-05, 7.338900000000009e-05, 7.365299999999991e-05, 7.413900000000084e-05, 7.401399999999725e-05, 7.316599999999951e-05, 7.383300000000231e-05, 7.32639999999965e-05, 7.390300000000016e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.356" endtime="20201112 09:54:57.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.345" endtime="20201112 09:54:57.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.369" endtime="20201112 09:54:57.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.377" endtime="20201112 09:54:57.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.373" endtime="20201112 09:54:57.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.364" endtime="20201112 09:54:57.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.857" endtime="20201112 09:54:57.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:56.856" endtime="20201112 09:54:57.403"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.427" endtime="20201112 09:54:57.448"></status>
</kw>
<msg timestamp="20201112 09:54:57.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.424" endtime="20201112 09:54:57.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.452" endtime="20201112 09:54:57.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.458" endtime="20201112 09:54:57.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.416" endtime="20201112 09:54:57.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.410" endtime="20201112 09:54:57.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.481" endtime="20201112 09:54:57.814"></status>
</kw>
<msg timestamp="20201112 09:54:57.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043593681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04366825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:57.478" endtime="20201112 09:54:57.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043593681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04366825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:54:57.824" endtime="20201112 09:54:57.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.842" endtime="20201112 09:54:57.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.471" endtime="20201112 09:54:57.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.466" endtime="20201112 09:54:57.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:57.861" level="INFO">${RESULT} = [{'time': 0.04366825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.456899999999655e-05, 'source_diff': 7.456899999999655e-05}, {'time': 0.043759292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:54:57.852" endtime="20201112 09:54:57.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:57.892" level="INFO">${ACCURACY} = {'diff': [7.456899999999655e-05, 7.472299999999876e-05, 7.516699999999404e-05, 7.444499999999937e-05, 7.49310000000003e-05, 7.432000000000272e-05, 7.486100000000245e-05, 7.480499999999723e-05, 7.49719...</msg>
<status status="PASS" starttime="20201112 09:54:57.864" endtime="20201112 09:54:57.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.903" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:54:57.901" endtime="20201112 09:54:57.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.908" level="INFO">VALUE: [7.456899999999655e-05, 7.472299999999876e-05, 7.516699999999404e-05, 7.444499999999937e-05, 7.49310000000003e-05, 7.432000000000272e-05, 7.486100000000245e-05, 7.480499999999723e-05, 7.497199999999954e-05, 7.42910000000041e-05, 7.452799999999732e-05, 7.449999999999818e-05, 7.420899999999869e-05, 7.477799999999757e-05, 7.422299999999826e-05, 7.512500000000227e-05, 7.493000000000083e-05, 7.500000000000562e-05, 7.476400000000494e-05, 7.437500000000152e-05, 7.452700000000478e-05, 7.440199999999425e-05, 7.462499999999483e-05, 7.44439999999999e-05, 7.424999999999793e-05, 7.502800000000476e-05, 7.468100000000005e-05, 7.512500000000227e-05, 7.473599999999886e-05, 7.486099999999551e-05, 7.443000000000033e-05, 7.459700000000263e-05, 7.4763999999998e-05, 7.500000000000562e-05, 7.427800000000401e-05, 7.449999999999818e-05, 7.498599999999911e-05, 7.448599999999861e-05, 7.509700000000313e-05, 7.452800000000426e-05, 7.468100000000005e-05, 7.49310000000003e-05, 7.454199999999689e-05, 7.462500000000177e-05, 7.474999999999843e-05, 7.470799999999972e-05, 7.490200000000169e-05, 7.512499999999533e-05, 7.45690000000035e-05, 7.479199999999714e-05]</msg>
<status status="PASS" starttime="20201112 09:54:57.905" endtime="20201112 09:54:57.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.894" endtime="20201112 09:54:57.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.918" endtime="20201112 09:54:57.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:57.926" endtime="20201112 09:54:57.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.922" endtime="20201112 09:54:57.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.913" endtime="20201112 09:54:57.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.406" endtime="20201112 09:54:57.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.404" endtime="20201112 09:54:57.952"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.975" endtime="20201112 09:54:57.994"></status>
</kw>
<msg timestamp="20201112 09:54:57.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.971" endtime="20201112 09:54:57.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:57.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:57.996" endtime="20201112 09:54:57.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:57.999" endtime="20201112 09:54:58.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.964" endtime="20201112 09:54:58.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.958" endtime="20201112 09:54:58.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.010" endtime="20201112 09:54:58.295"></status>
</kw>
<msg timestamp="20201112 09:54:58.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041895778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0419715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:58.008" endtime="20201112 09:54:58.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041895778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0419715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:54:58.300" endtime="20201112 09:54:58.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.308" endtime="20201112 09:54:58.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.005" endtime="20201112 09:54:58.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.003" endtime="20201112 09:54:58.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.318" level="INFO">${RESULT} = [{'time': 0.0419715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.572200000000029e-05, 'source_diff': 7.572200000000029e-05}, {'time': 0.0420615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 09:54:58.314" endtime="20201112 09:54:58.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.332" level="INFO">${ACCURACY} = {'diff': [7.572200000000029e-05, 7.616700000000198e-05, 7.540300000000166e-05, 7.569500000000062e-05, 7.572200000000029e-05, 7.524999999999893e-05, 7.607000000000447e-05, 7.523599999999936e-05, 7.5903...</msg>
<status status="PASS" starttime="20201112 09:54:58.319" endtime="20201112 09:54:58.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.337" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.336" endtime="20201112 09:54:58.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.339" level="INFO">VALUE: [7.572200000000029e-05, 7.616700000000198e-05, 7.540300000000166e-05, 7.569500000000062e-05, 7.572200000000029e-05, 7.524999999999893e-05, 7.607000000000447e-05, 7.523599999999936e-05, 7.590300000000216e-05, 7.520800000000022e-05, 7.542999999999439e-05, 7.616699999999504e-05, 7.573599999999986e-05, 7.566700000000148e-05, 7.533299999999687e-05, 7.523699999999883e-05, 7.618099999999461e-05, 7.579199999999814e-05, 7.590200000000269e-05, 7.56110000000032e-05, 7.568100000000105e-05, 7.551400000000569e-05, 7.606899999999805e-05, 7.611099999999676e-05, 7.587499999999608e-05, 7.612500000000327e-05, 7.541700000000123e-05, 7.598600000000011e-05, 7.570900000000019e-05, 7.580599999999771e-05, 7.593000000000183e-05, 7.558400000000354e-05, 7.55560000000044e-05, 7.557000000000397e-05, 7.616600000000251e-05, 7.575000000000637e-05, 7.52639999999985e-05, 7.519400000000065e-05, 7.59589999999935e-05, 7.549999999999918e-05, 7.549999999999918e-05, 7.574999999999943e-05, 7.61110000000037e-05, 7.591700000000173e-05, 7.537500000000252e-05, 7.580599999999771e-05, 7.599999999999968e-05, 7.615300000000241e-05, 7.549999999999918e-05, 7.615300000000241e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.338" endtime="20201112 09:54:58.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.333" endtime="20201112 09:54:58.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.344" endtime="20201112 09:54:58.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.348" endtime="20201112 09:54:58.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.346" endtime="20201112 09:54:58.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.342" endtime="20201112 09:54:58.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.954" endtime="20201112 09:54:58.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:57.953" endtime="20201112 09:54:58.369"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.380" endtime="20201112 09:54:58.399"></status>
</kw>
<msg timestamp="20201112 09:54:58.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.378" endtime="20201112 09:54:58.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.401" endtime="20201112 09:54:58.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.404" endtime="20201112 09:54:58.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.375" endtime="20201112 09:54:58.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.372" endtime="20201112 09:54:58.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.415" endtime="20201112 09:54:58.737"></status>
</kw>
<msg timestamp="20201112 09:54:58.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024723319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.413" endtime="20201112 09:54:58.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024646792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024723319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.746" endtime="20201112 09:54:58.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.765" endtime="20201112 09:54:58.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.410" endtime="20201112 09:54:58.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.407" endtime="20201112 09:54:58.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:58.784" level="INFO">${RESULT} = [{'time': 0.024723319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652699999999985e-05, 'source_diff': 7.652699999999985e-05}, {'time': 0.024811375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:58.775" endtime="20201112 09:54:58.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:58.815" level="INFO">${ACCURACY} = {'diff': [7.652699999999985e-05, 7.631900000000177e-05, 7.630499999999873e-05, 7.665299999999944e-05, 7.656900000000202e-05, 7.62639999999995e-05, 7.694399999999893e-05, 7.619400000000165e-05, 7.68330...</msg>
<status status="PASS" starttime="20201112 09:54:58.786" endtime="20201112 09:54:58.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.826" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:54:58.823" endtime="20201112 09:54:58.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.831" level="INFO">VALUE: [7.652699999999985e-05, 7.631900000000177e-05, 7.630499999999873e-05, 7.665299999999944e-05, 7.656900000000202e-05, 7.62639999999995e-05, 7.694399999999893e-05, 7.619400000000165e-05, 7.683300000000184e-05, 7.64029999999992e-05, 7.63890000000031e-05, 7.62639999999995e-05, 7.618100000000155e-05, 7.654099999999942e-05, 7.70830000000021e-05, 7.645800000000147e-05, 7.648600000000061e-05, 7.712499999999733e-05, 7.647300000000051e-05, 7.684700000000141e-05, 7.651399999999975e-05, 7.708299999999862e-05, 7.716600000000004e-05, 7.655599999999846e-05, 7.681999999999828e-05, 7.690200000000022e-05, 7.699999999999721e-05, 7.658299999999812e-05, 7.652699999999985e-05, 7.669399999999868e-05, 7.686100000000098e-05, 7.702799999999982e-05, 7.636100000000048e-05, 7.636100000000048e-05, 7.691699999999926e-05, 7.629199999999864e-05, 7.634800000000039e-05, 7.702799999999982e-05, 7.69029999999997e-05, 7.656899999999855e-05, 7.626300000000003e-05, 7.652699999999985e-05, 7.719499999999865e-05, 7.687500000000055e-05, 7.616700000000198e-05, 7.69579999999985e-05, 7.715299999999994e-05, 7.650000000000018e-05, 7.677799999999957e-05, 7.704199999999939e-05]</msg>
<status status="PASS" starttime="20201112 09:54:58.828" endtime="20201112 09:54:58.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.816" endtime="20201112 09:54:58.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.841" endtime="20201112 09:54:58.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:58.849" endtime="20201112 09:54:58.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.844" endtime="20201112 09:54:58.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.836" endtime="20201112 09:54:58.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.370" endtime="20201112 09:54:58.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.370" endtime="20201112 09:54:58.874"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.897" endtime="20201112 09:54:58.918"></status>
</kw>
<msg timestamp="20201112 09:54:58.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.894" endtime="20201112 09:54:58.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:58.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:58.922" endtime="20201112 09:54:58.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.928" endtime="20201112 09:54:58.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.887" endtime="20201112 09:54:58.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.881" endtime="20201112 09:54:58.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:58.952" endtime="20201112 09:54:59.283"></status>
</kw>
<msg timestamp="20201112 09:54:59.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041733597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041811222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:58.948" endtime="20201112 09:54:59.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041733597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041811222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.293" endtime="20201112 09:54:59.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.312" endtime="20201112 09:54:59.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.941" endtime="20201112 09:54:59.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.936" endtime="20201112 09:54:59.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.331" level="INFO">${RESULT} = [{'time': 0.041811222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.762500000000477e-05, 'source_diff': 7.762500000000477e-05}, {'time': 0.041907236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:59.322" endtime="20201112 09:54:59.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.361" level="INFO">${ACCURACY} = {'diff': [7.762500000000477e-05, 7.802800000000082e-05, 7.805599999999996e-05, 7.766699999999654e-05, 7.733299999999887e-05, 7.773599999999492e-05, 7.770900000000219e-05, 7.798599999999517e-05, 7.7305...</msg>
<status status="PASS" starttime="20201112 09:54:59.333" endtime="20201112 09:54:59.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.372" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.370" endtime="20201112 09:54:59.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.377" level="INFO">VALUE: [7.762500000000477e-05, 7.802800000000082e-05, 7.805599999999996e-05, 7.766699999999654e-05, 7.733299999999887e-05, 7.773599999999492e-05, 7.770900000000219e-05, 7.798599999999517e-05, 7.730599999999921e-05, 7.811099999999876e-05, 7.751400000000075e-05, 7.791600000000426e-05, 7.811099999999876e-05, 7.755599999999946e-05, 7.750000000000118e-05, 7.79310000000033e-05, 7.736099999999801e-05, 7.818100000000355e-05, 7.809799999999867e-05, 7.786199999999799e-05, 7.797299999999507e-05, 7.741599999999682e-05, 7.775000000000143e-05, 7.801300000000178e-05, 7.744500000000237e-05, 7.755499999999999e-05, 7.751400000000075e-05, 7.802800000000082e-05, 7.801300000000178e-05, 7.773599999999492e-05, 7.795799999999603e-05, 7.787500000000502e-05, 7.805599999999996e-05, 7.755599999999946e-05, 7.770899999999525e-05, 7.758299999999912e-05, 7.816599999999757e-05, 7.772199999999535e-05, 7.745799999999553e-05, 7.740300000000366e-05, 7.745800000000247e-05, 7.73890000000041e-05, 7.790299999999722e-05, 7.755599999999946e-05, 7.779200000000014e-05, 7.793099999999636e-05, 7.748599999999467e-05, 7.800000000000168e-05, 7.780600000000665e-05, 7.780599999999971e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.374" endtime="20201112 09:54:59.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.363" endtime="20201112 09:54:59.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.387" endtime="20201112 09:54:59.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.395" endtime="20201112 09:54:59.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.391" endtime="20201112 09:54:59.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.382" endtime="20201112 09:54:59.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.877" endtime="20201112 09:54:59.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:58.875" endtime="20201112 09:54:59.421"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.444" endtime="20201112 09:54:59.467"></status>
</kw>
<msg timestamp="20201112 09:54:59.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.441" endtime="20201112 09:54:59.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.470" endtime="20201112 09:54:59.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.476" endtime="20201112 09:54:59.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.433" endtime="20201112 09:54:59.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.427" endtime="20201112 09:54:59.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.499" endtime="20201112 09:54:59.832"></status>
</kw>
<msg timestamp="20201112 09:54:59.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042830542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042908847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.496" endtime="20201112 09:54:59.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042830542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042908847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:54:59.842" endtime="20201112 09:54:59.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.861" endtime="20201112 09:54:59.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.489" endtime="20201112 09:54:59.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.484" endtime="20201112 09:54:59.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:54:59.880" level="INFO">${RESULT} = [{'time': 0.042908847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.830500000000074e-05, 'source_diff': 7.830500000000074e-05}, {'time': 0.042998889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:54:59.871" endtime="20201112 09:54:59.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:54:59.910" level="INFO">${ACCURACY} = {'diff': [7.830500000000074e-05, 7.851400000000175e-05, 7.866699999999754e-05, 7.91389999999989e-05, 7.836199999999849e-05, 7.848600000000261e-05, 7.825000000000193e-05, 7.873599999999592e-05, 7.81659...</msg>
<status status="PASS" starttime="20201112 09:54:59.882" endtime="20201112 09:54:59.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.921" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:54:59.919" endtime="20201112 09:54:59.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:54:59.927" level="INFO">VALUE: [7.830500000000074e-05, 7.851400000000175e-05, 7.866699999999754e-05, 7.91389999999989e-05, 7.836199999999849e-05, 7.848600000000261e-05, 7.825000000000193e-05, 7.873599999999592e-05, 7.816599999999757e-05, 7.837499999999858e-05, 7.919500000000412e-05, 7.84440000000039e-05, 7.911099999999976e-05, 7.84169999999973e-05, 7.823599999999542e-05, 7.827800000000107e-05, 7.882000000000028e-05, 7.854200000000089e-05, 7.840299999999772e-05, 7.829200000000064e-05, 7.862499999999883e-05, 7.83890000000051e-05, 7.891600000000526e-05, 7.862499999999883e-05, 7.900000000000268e-05, 7.830600000000021e-05, 7.90970000000002e-05, 7.863900000000534e-05, 7.847300000000251e-05, 7.882000000000028e-05, 7.879200000000114e-05, 7.888899999999865e-05, 7.915299999999847e-05, 7.89589999999965e-05, 7.870799999999678e-05, 7.87770000000021e-05, 7.901399999999531e-05, 7.854200000000089e-05, 7.823600000000236e-05, 7.906899999999412e-05, 7.852800000000132e-05, 7.86389999999984e-05, 7.876399999999506e-05, 7.863799999999893e-05, 7.888899999999865e-05, 7.820799999999628e-05, 7.836199999999849e-05, 7.901400000000225e-05, 7.820800000000322e-05, 7.833299999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:54:59.924" endtime="20201112 09:54:59.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.912" endtime="20201112 09:54:59.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.936" endtime="20201112 09:54:59.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:54:59.945" endtime="20201112 09:54:59.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.940" endtime="20201112 09:54:59.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.932" endtime="20201112 09:54:59.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.423" endtime="20201112 09:54:59.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.422" endtime="20201112 09:54:59.970"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:54:59.993" endtime="20201112 09:55:00.014"></status>
</kw>
<msg timestamp="20201112 09:55:00.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:54:59.989" endtime="20201112 09:55:00.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.017" endtime="20201112 09:55:00.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.024" endtime="20201112 09:55:00.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.982" endtime="20201112 09:55:00.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.977" endtime="20201112 09:55:00.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.047" endtime="20201112 09:55:00.376"></status>
</kw>
<msg timestamp="20201112 09:55:00.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041545458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041625569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.044" endtime="20201112 09:55:00.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041545458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041625569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.386" endtime="20201112 09:55:00.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.405" endtime="20201112 09:55:00.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.036" endtime="20201112 09:55:00.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.032" endtime="20201112 09:55:00.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.426" level="INFO">${RESULT} = [{'time': 0.041625569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.011100000000076e-05, 'source_diff': 8.011100000000076e-05}, {'time': 0.041725639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.417" endtime="20201112 09:55:00.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:00.456" level="INFO">${ACCURACY} = {'diff': [8.011100000000076e-05, 7.9764000000003e-05, 7.954100000000242e-05, 8.008300000000163e-05, 7.965299999999897e-05, 7.915299999999847e-05, 7.99169999999988e-05, 7.970899999999725e-05, 7.9944999...</msg>
<status status="PASS" starttime="20201112 09:55:00.428" endtime="20201112 09:55:00.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.467" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:55:00.465" endtime="20201112 09:55:00.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.473" level="INFO">VALUE: [8.011100000000076e-05, 7.9764000000003e-05, 7.954100000000242e-05, 8.008300000000163e-05, 7.965299999999897e-05, 7.915299999999847e-05, 7.99169999999988e-05, 7.970899999999725e-05, 7.994499999999793e-05, 7.962499999999983e-05, 7.925000000000293e-05, 7.927800000000207e-05, 7.999999999999674e-05, 8.012500000000033e-05, 7.96389999999994e-05, 8.009699999999426e-05, 8.004199999999545e-05, 8.018099999999861e-05, 7.983300000000138e-05, 8.011200000000024e-05, 7.977799999999563e-05, 8.004199999999545e-05, 8.005599999999502e-05, 7.966599999999907e-05, 7.96389999999994e-05, 7.936100000000001e-05, 7.995800000000497e-05, 7.936100000000001e-05, 7.962499999999983e-05, 7.969400000000515e-05, 7.940299999999872e-05, 7.948599999999667e-05, 8.001400000000325e-05, 7.972199999999735e-05, 7.922200000000379e-05, 8.00840000000011e-05, 7.930500000000174e-05, 7.930600000000121e-05, 8.016700000000598e-05, 7.93049999999948e-05, 7.96389999999994e-05, 7.937499999999958e-05, 8.011100000000076e-05, 7.987500000000008e-05, 7.951399999999581e-05, 7.961100000000026e-05, 7.954200000000189e-05, 7.968099999999811e-05, 7.970899999999725e-05, 7.933300000000088e-05]</msg>
<status status="PASS" starttime="20201112 09:55:00.469" endtime="20201112 09:55:00.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.458" endtime="20201112 09:55:00.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.483" endtime="20201112 09:55:00.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:00.491" endtime="20201112 09:55:00.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.487" endtime="20201112 09:55:00.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.478" endtime="20201112 09:55:00.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.972" endtime="20201112 09:55:00.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:59.971" endtime="20201112 09:55:00.517"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.540" endtime="20201112 09:55:00.562"></status>
</kw>
<msg timestamp="20201112 09:55:00.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.537" endtime="20201112 09:55:00.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:00.565" endtime="20201112 09:55:00.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.571" endtime="20201112 09:55:00.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.530" endtime="20201112 09:55:00.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.524" endtime="20201112 09:55:00.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.595" endtime="20201112 09:55:00.927"></status>
</kw>
<msg timestamp="20201112 09:55:00.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041966833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042047764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.591" endtime="20201112 09:55:00.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:00.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041966833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042047764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:00.937" endtime="20201112 09:55:00.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:00.956" endtime="20201112 09:55:00.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.584" endtime="20201112 09:55:00.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.579" endtime="20201112 09:55:00.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:00.975" level="INFO">${RESULT} = [{'time': 0.042047764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.093099999999936e-05, 'source_diff': 8.093099999999936e-05}, {'time': 0.042139806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:00.966" endtime="20201112 09:55:00.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.005" level="INFO">${ACCURACY} = {'diff': [8.093099999999936e-05, 8.112500000000133e-05, 8.097299999999807e-05, 8.027800000000307e-05, 8.027800000000307e-05, 8.057000000000203e-05, 8.041599999999982e-05, 8.100000000000468e-05, 8.0208...</msg>
<status status="PASS" starttime="20201112 09:55:00.977" endtime="20201112 09:55:01.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.016" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.014" endtime="20201112 09:55:01.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.022" level="INFO">VALUE: [8.093099999999936e-05, 8.112500000000133e-05, 8.097299999999807e-05, 8.027800000000307e-05, 8.027800000000307e-05, 8.057000000000203e-05, 8.041599999999982e-05, 8.100000000000468e-05, 8.020800000000522e-05, 8.09169999999998e-05, 8.058299999999519e-05, 8.033300000000188e-05, 8.048600000000461e-05, 8.022199999999785e-05, 8.081999999999534e-05, 8.088900000000065e-05, 8.051400000000375e-05, 8.09310000000063e-05, 8.037500000000058e-05, 8.06390000000004e-05, 8.094399999999946e-05, 8.052799999999638e-05, 8.093099999999936e-05, 8.073600000000486e-05, 8.061100000000126e-05, 8.112500000000133e-05, 8.112500000000133e-05, 8.07919999999962e-05, 8.020799999999828e-05, 8.093099999999936e-05, 8.079099999999673e-05, 8.026299999999709e-05, 8.03190000000023e-05, 8.09169999999998e-05, 8.048599999999767e-05, 8.066699999999954e-05, 8.104200000000339e-05, 8.076399999999706e-05, 8.113899999999397e-05, 8.0764000000004e-05, 8.11390000000009e-05, 8.115300000000047e-05, 8.019499999999818e-05, 8.054100000000342e-05, 8.051400000000375e-05, 8.059699999999476e-05, 8.095799999999903e-05, 8.052799999999638e-05, 8.03190000000023e-05, 8.044499999999843e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.019" endtime="20201112 09:55:01.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.007" endtime="20201112 09:55:01.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.031" endtime="20201112 09:55:01.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.040" endtime="20201112 09:55:01.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.035" endtime="20201112 09:55:01.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.027" endtime="20201112 09:55:01.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.520" endtime="20201112 09:55:01.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:00.518" endtime="20201112 09:55:01.065"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.088" endtime="20201112 09:55:01.110"></status>
</kw>
<msg timestamp="20201112 09:55:01.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.085" endtime="20201112 09:55:01.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.113" endtime="20201112 09:55:01.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.119" endtime="20201112 09:55:01.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.078" endtime="20201112 09:55:01.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.072" endtime="20201112 09:55:01.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.143" endtime="20201112 09:55:01.474"></status>
</kw>
<msg timestamp="20201112 09:55:01.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041844486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041926347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.139" endtime="20201112 09:55:01.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041844486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041926347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:01.484" endtime="20201112 09:55:01.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.503" endtime="20201112 09:55:01.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.132" endtime="20201112 09:55:01.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.127" endtime="20201112 09:55:01.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:01.525" level="INFO">${RESULT} = [{'time': 0.041926347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.186100000000252e-05, 'source_diff': 8.186100000000252e-05}, {'time': 0.042018361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:01.514" endtime="20201112 09:55:01.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:01.558" level="INFO">${ACCURACY} = {'diff': [8.186100000000252e-05, 8.131899999999637e-05, 8.208299999999669e-05, 8.122299999999832e-05, 8.215300000000147e-05, 8.120899999999875e-05, 8.211200000000224e-05, 8.16799999999937e-05, 8.21520...</msg>
<status status="PASS" starttime="20201112 09:55:01.527" endtime="20201112 09:55:01.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.573" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:55:01.570" endtime="20201112 09:55:01.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.581" level="INFO">VALUE: [8.186100000000252e-05, 8.131899999999637e-05, 8.208299999999669e-05, 8.122299999999832e-05, 8.215300000000147e-05, 8.120899999999875e-05, 8.211200000000224e-05, 8.16799999999937e-05, 8.2152000000002e-05, 8.133299999999594e-05, 8.15269999999979e-05, 8.186100000000252e-05, 8.218100000000061e-05, 8.163899999999447e-05, 8.21249999999954e-05, 8.134700000000245e-05, 8.199999999999874e-05, 8.16249999999949e-05, 8.151399999999781e-05, 8.116700000000004e-05, 8.179099999999773e-05, 8.1764000000005e-05, 8.142999999999345e-05, 8.188900000000165e-05, 8.20970000000032e-05, 8.18049999999973e-05, 8.201400000000525e-05, 8.155599999999652e-05, 8.172199999999935e-05, 8.155599999999652e-05, 8.168100000000011e-05, 8.213800000000243e-05, 8.137500000000158e-05, 8.211100000000277e-05, 8.129099999999723e-05, 8.194400000000046e-05, 8.194400000000046e-05, 8.181999999999634e-05, 8.172299999999882e-05, 8.169400000000021e-05, 8.177799999999763e-05, 8.197299999999907e-05, 8.152799999999738e-05, 8.155600000000346e-05, 8.133300000000288e-05, 8.12770000000046e-05, 8.162500000000183e-05, 8.137500000000158e-05, 8.152800000000432e-05, 8.190299999999429e-05]</msg>
<status status="PASS" starttime="20201112 09:55:01.576" endtime="20201112 09:55:01.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.561" endtime="20201112 09:55:01.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.594" endtime="20201112 09:55:01.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:01.606" endtime="20201112 09:55:01.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.600" endtime="20201112 09:55:01.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.588" endtime="20201112 09:55:01.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.068" endtime="20201112 09:55:01.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.066" endtime="20201112 09:55:01.635"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.664" endtime="20201112 09:55:01.686"></status>
</kw>
<msg timestamp="20201112 09:55:01.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.660" endtime="20201112 09:55:01.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:01.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:01.689" endtime="20201112 09:55:01.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.696" endtime="20201112 09:55:01.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.650" endtime="20201112 09:55:01.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.643" endtime="20201112 09:55:01.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:01.720" endtime="20201112 09:55:02.041"></status>
</kw>
<msg timestamp="20201112 09:55:02.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050988347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05107075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:01.716" endtime="20201112 09:55:02.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050988347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05107075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:02.051" endtime="20201112 09:55:02.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.070" endtime="20201112 09:55:02.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.709" endtime="20201112 09:55:02.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.704" endtime="20201112 09:55:02.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.089" level="INFO">${RESULT} = [{'time': 0.05107075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.240299999999479e-05, 'source_diff': 8.240299999999479e-05}, {'time': 0.051166764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:02.080" endtime="20201112 09:55:02.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.120" level="INFO">${ACCURACY} = {'diff': [8.240299999999479e-05, 8.237500000000259e-05, 8.231999999999684e-05, 8.222199999999985e-05, 8.291600000000232e-05, 8.2459e-05, 8.219400000000071e-05, 8.268000000000164e-05, 8.274999999999949...</msg>
<status status="PASS" starttime="20201112 09:55:02.092" endtime="20201112 09:55:02.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.132" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.129" endtime="20201112 09:55:02.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.137" level="INFO">VALUE: [8.240299999999479e-05, 8.237500000000259e-05, 8.231999999999684e-05, 8.222199999999985e-05, 8.291600000000232e-05, 8.2459e-05, 8.219400000000071e-05, 8.268000000000164e-05, 8.274999999999949e-05, 8.237500000000259e-05, 8.299999999999974e-05, 8.276399999999906e-05, 8.261100000000327e-05, 8.291600000000232e-05, 8.288899999999572e-05, 8.27919999999982e-05, 8.299999999999974e-05, 8.290300000000222e-05, 8.277799999999863e-05, 8.316700000000204e-05, 8.291600000000232e-05, 8.299999999999974e-05, 8.295800000000103e-05, 8.290299999999529e-05, 8.24720000000001e-05, 8.24170000000013e-05, 8.280600000000471e-05, 8.226299999999909e-05, 8.29590000000005e-05, 8.226399999999856e-05, 8.295799999999409e-05, 8.313899999999597e-05, 8.272299999999982e-05, 8.311100000000377e-05, 8.251399999999881e-05, 8.301399999999931e-05, 8.277800000000557e-05, 8.256999999999709e-05, 8.238900000000215e-05, 8.272200000000035e-05, 8.26249999999959e-05, 8.248699999999914e-05, 8.31249999999964e-05, 8.295800000000103e-05, 8.226399999999856e-05, 8.31799999999952e-05, 8.279099999999873e-05, 8.26390000000024e-05, 8.274999999999949e-05, 8.307000000000453e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.134" endtime="20201112 09:55:02.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.122" endtime="20201112 09:55:02.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.147" endtime="20201112 09:55:02.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.155" endtime="20201112 09:55:02.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.151" endtime="20201112 09:55:02.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.142" endtime="20201112 09:55:02.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.637" endtime="20201112 09:55:02.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:01.636" endtime="20201112 09:55:02.181"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.204" endtime="20201112 09:55:02.226"></status>
</kw>
<msg timestamp="20201112 09:55:02.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.201" endtime="20201112 09:55:02.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.229" endtime="20201112 09:55:02.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.236" endtime="20201112 09:55:02.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.194" endtime="20201112 09:55:02.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.188" endtime="20201112 09:55:02.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.260" endtime="20201112 09:55:02.597"></status>
</kw>
<msg timestamp="20201112 09:55:02.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042312694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042396028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.256" endtime="20201112 09:55:02.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042312694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042396028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.607" endtime="20201112 09:55:02.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.626" endtime="20201112 09:55:02.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.249" endtime="20201112 09:55:02.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.244" endtime="20201112 09:55:02.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:02.647" level="INFO">${RESULT} = [{'time': 0.042396028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333400000000435e-05, 'source_diff': 8.333400000000435e-05}, {'time': 0.042496083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:02.638" endtime="20201112 09:55:02.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:02.678" level="INFO">${ACCURACY} = {'diff': [8.333400000000435e-05, 8.391599999999638e-05, 8.419400000000271e-05, 8.361099999999733e-05, 8.355499999999905e-05, 8.333299999999794e-05, 8.368100000000211e-05, 8.351399999999981e-05, 8.3695...</msg>
<status status="PASS" starttime="20201112 09:55:02.649" endtime="20201112 09:55:02.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.689" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:55:02.687" endtime="20201112 09:55:02.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.695" level="INFO">VALUE: [8.333400000000435e-05, 8.391599999999638e-05, 8.419400000000271e-05, 8.361099999999733e-05, 8.355499999999905e-05, 8.333299999999794e-05, 8.368100000000211e-05, 8.351399999999981e-05, 8.369500000000168e-05, 8.361100000000427e-05, 8.415300000000348e-05, 8.397300000000107e-05, 8.336100000000402e-05, 8.355600000000546e-05, 8.418000000000314e-05, 8.368000000000264e-05, 8.345800000000153e-05, 8.397300000000107e-05, 8.359699999999776e-05, 8.338899999999622e-05, 8.398600000000117e-05, 8.31669999999951e-05, 8.350000000000024e-05, 8.373600000000092e-05, 8.338899999999622e-05, 8.411099999999783e-05, 8.402700000000041e-05, 8.355499999999905e-05, 8.41799999999962e-05, 8.340200000000325e-05, 8.345800000000153e-05, 8.362500000000384e-05, 8.36249999999969e-05, 8.40840000000051e-05, 8.41390000000039e-05, 8.319500000000118e-05, 8.326300000000009e-05, 8.415299999999654e-05, 8.386100000000452e-05, 8.348600000000067e-05, 8.345800000000153e-05, 8.408299999999869e-05, 8.34170000000023e-05, 8.409699999999826e-05, 8.324999999999999e-05, 8.352799999999938e-05, 8.401400000000031e-05, 8.39170000000028e-05, 8.356899999999862e-05, 8.383300000000538e-05]</msg>
<status status="PASS" starttime="20201112 09:55:02.692" endtime="20201112 09:55:02.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.680" endtime="20201112 09:55:02.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.704" endtime="20201112 09:55:02.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:02.713" endtime="20201112 09:55:02.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.708" endtime="20201112 09:55:02.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.700" endtime="20201112 09:55:02.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.183" endtime="20201112 09:55:02.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.182" endtime="20201112 09:55:02.739"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.762" endtime="20201112 09:55:02.784"></status>
</kw>
<msg timestamp="20201112 09:55:02.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.759" endtime="20201112 09:55:02.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:02.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:02.787" endtime="20201112 09:55:02.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.793" endtime="20201112 09:55:02.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.751" endtime="20201112 09:55:02.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.745" endtime="20201112 09:55:02.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:02.817" endtime="20201112 09:55:03.156"></status>
</kw>
<msg timestamp="20201112 09:55:03.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042456556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042541125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:02.814" endtime="20201112 09:55:03.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042456556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042541125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.166" endtime="20201112 09:55:03.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.185" endtime="20201112 09:55:03.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.807" endtime="20201112 09:55:03.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.802" endtime="20201112 09:55:03.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.205" level="INFO">${RESULT} = [{'time': 0.042541125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.456899999999962e-05, 'source_diff': 8.456899999999962e-05}, {'time': 0.042637167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:03.196" endtime="20201112 09:55:03.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.235" level="INFO">${ACCURACY} = {'diff': [8.456899999999962e-05, 8.491699999999686e-05, 8.425000000000099e-05, 8.516599999999763e-05, 8.452800000000038e-05, 8.423600000000142e-05, 8.472199999999541e-05, 8.501400000000131e-05, 8.5000...</msg>
<status status="PASS" starttime="20201112 09:55:03.207" endtime="20201112 09:55:03.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.247" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.244" endtime="20201112 09:55:03.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.252" level="INFO">VALUE: [8.456899999999962e-05, 8.491699999999686e-05, 8.425000000000099e-05, 8.516599999999763e-05, 8.452800000000038e-05, 8.423600000000142e-05, 8.472199999999541e-05, 8.501400000000131e-05, 8.500000000000174e-05, 8.519499999999625e-05, 8.518100000000361e-05, 8.448600000000167e-05, 8.49170000000038e-05, 8.470800000000278e-05, 8.4459000000002e-05, 8.437499999999765e-05, 8.455599999999952e-05, 8.504199999999351e-05, 8.451400000000081e-05, 8.429100000000023e-05, 8.495799999999609e-05, 8.458299999999919e-05, 8.498600000000217e-05, 8.433299999999894e-05, 8.516700000000405e-05, 8.419500000000218e-05, 8.491599999999738e-05, 8.490199999999781e-05, 8.419500000000218e-05, 8.47370000000014e-05, 8.48050000000003e-05, 8.42919999999997e-05, 8.458300000000613e-05, 8.477800000000063e-05, 8.44449999999955e-05, 8.481999999999934e-05, 8.47920000000002e-05, 8.515300000000448e-05, 8.447300000000157e-05, 8.470900000000225e-05, 8.477800000000063e-05, 8.419400000000271e-05, 8.481899999999987e-05, 8.438899999999722e-05, 8.419399999999577e-05, 8.436099999999808e-05, 8.426400000000056e-05, 8.502800000000088e-05, 8.497300000000207e-05, 8.479100000000073e-05]</msg>
<status status="PASS" starttime="20201112 09:55:03.249" endtime="20201112 09:55:03.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.237" endtime="20201112 09:55:03.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.262" endtime="20201112 09:55:03.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.271" endtime="20201112 09:55:03.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.266" endtime="20201112 09:55:03.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.257" endtime="20201112 09:55:03.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.741" endtime="20201112 09:55:03.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:02.740" endtime="20201112 09:55:03.296"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.320" endtime="20201112 09:55:03.342"></status>
</kw>
<msg timestamp="20201112 09:55:03.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.316" endtime="20201112 09:55:03.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.345" endtime="20201112 09:55:03.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.352" endtime="20201112 09:55:03.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.309" endtime="20201112 09:55:03.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.303" endtime="20201112 09:55:03.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.375" endtime="20201112 09:55:03.713"></status>
</kw>
<msg timestamp="20201112 09:55:03.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042539389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042624875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.372" endtime="20201112 09:55:03.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042539389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042624875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.723" endtime="20201112 09:55:03.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.742" endtime="20201112 09:55:03.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.365" endtime="20201112 09:55:03.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.360" endtime="20201112 09:55:03.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:03.761" level="INFO">${RESULT} = [{'time': 0.042624875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.548600000000267e-05, 'source_diff': 8.548600000000267e-05}, {'time': 0.042726917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:03.752" endtime="20201112 09:55:03.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:03.792" level="INFO">${ACCURACY} = {'diff': [8.548600000000267e-05, 8.551400000000181e-05, 8.531999999999984e-05, 8.597199999999666e-05, 8.595899999999657e-05, 8.581899999999393e-05, 8.53469999999995e-05, 8.561099999999933e-05, 8.52080...</msg>
<status status="PASS" starttime="20201112 09:55:03.763" endtime="20201112 09:55:03.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.803" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:55:03.801" endtime="20201112 09:55:03.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.809" level="INFO">VALUE: [8.548600000000267e-05, 8.551400000000181e-05, 8.531999999999984e-05, 8.597199999999666e-05, 8.595899999999657e-05, 8.581899999999393e-05, 8.53469999999995e-05, 8.561099999999933e-05, 8.520800000000328e-05, 8.550000000000224e-05, 8.543100000000386e-05, 8.591699999999786e-05, 8.54449999999965e-05, 8.544500000000343e-05, 8.548700000000214e-05, 8.547300000000257e-05, 8.537499999999865e-05, 8.57370000000024e-05, 8.56390000000054e-05, 8.525000000000199e-05, 8.619499999999725e-05, 8.602800000000188e-05, 8.527800000000113e-05, 8.565299999999804e-05, 8.56249999999989e-05, 8.586099999999958e-05, 8.519500000000318e-05, 8.61669999999981e-05, 8.524999999999505e-05, 8.561099999999933e-05, 8.569399999999727e-05, 8.598600000000317e-05, 8.525000000000199e-05, 8.613899999999897e-05, 8.536099999999908e-05, 8.568100000000411e-05, 8.598599999999623e-05, 8.543000000000439e-05, 8.591699999999786e-05, 8.523599999999548e-05, 8.601400000000231e-05, 8.570800000000378e-05, 8.598599999999623e-05, 8.590299999999829e-05, 8.562500000000584e-05, 8.577799999999469e-05, 8.544400000000396e-05, 8.594500000000393e-05, 8.577800000000163e-05, 8.598599999999623e-05]</msg>
<status status="PASS" starttime="20201112 09:55:03.806" endtime="20201112 09:55:03.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.794" endtime="20201112 09:55:03.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.818" endtime="20201112 09:55:03.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:03.827" endtime="20201112 09:55:03.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.823" endtime="20201112 09:55:03.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.814" endtime="20201112 09:55:03.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.299" endtime="20201112 09:55:03.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.297" endtime="20201112 09:55:03.853"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.876" endtime="20201112 09:55:03.898"></status>
</kw>
<msg timestamp="20201112 09:55:03.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.873" endtime="20201112 09:55:03.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:03.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:03.902" endtime="20201112 09:55:03.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.908" endtime="20201112 09:55:03.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.865" endtime="20201112 09:55:03.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.859" endtime="20201112 09:55:03.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:03.932" endtime="20201112 09:55:04.270"></status>
</kw>
<msg timestamp="20201112 09:55:04.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042649333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042736444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:03.929" endtime="20201112 09:55:04.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042649333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042736444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.280" endtime="20201112 09:55:04.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.299" endtime="20201112 09:55:04.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.921" endtime="20201112 09:55:04.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.917" endtime="20201112 09:55:04.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.319" level="INFO">${RESULT} = [{'time': 0.042736444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.711100000000083e-05, 'source_diff': 8.711100000000083e-05}, {'time': 0.042836486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:04.309" endtime="20201112 09:55:04.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.350" level="INFO">${ACCURACY} = {'diff': [8.711100000000083e-05, 8.640299999999879e-05, 8.658300000000119e-05, 8.629199999999476e-05, 8.716700000000605e-05, 8.711100000000083e-05, 8.669500000000468e-05, 8.640300000000573e-05, 8.7070...</msg>
<status status="PASS" starttime="20201112 09:55:04.321" endtime="20201112 09:55:04.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.361" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.359" endtime="20201112 09:55:04.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.366" level="INFO">VALUE: [8.711100000000083e-05, 8.640299999999879e-05, 8.658300000000119e-05, 8.629199999999476e-05, 8.716700000000605e-05, 8.711100000000083e-05, 8.669500000000468e-05, 8.640300000000573e-05, 8.707000000000159e-05, 8.659700000000076e-05, 8.716599999999963e-05, 8.620799999999734e-05, 8.629099999999529e-05, 8.676400000000306e-05, 8.622199999999691e-05, 8.68050000000023e-05, 8.655500000000205e-05, 8.668099999999818e-05, 8.665300000000598e-05, 8.718099999999868e-05, 8.694500000000494e-05, 8.669499999999775e-05, 8.644399999999802e-05, 8.691699999999886e-05, 8.677699999999622e-05, 8.656900000000162e-05, 8.71250000000004e-05, 8.695899999999757e-05, 8.652800000000238e-05, 8.645899999999707e-05, 8.657000000000109e-05, 8.680600000000177e-05, 8.632000000000084e-05, 8.690299999999929e-05, 8.713899999999997e-05, 8.704099999999604e-05, 8.686100000000058e-05, 8.704099999999604e-05, 8.670800000000478e-05, 8.66799999999987e-05, 8.675000000000349e-05, 8.626400000000256e-05, 8.655600000000152e-05, 8.637499999999965e-05, 8.672299999999689e-05, 8.663899999999947e-05, 8.702700000000341e-05, 8.670799999999784e-05, 8.708300000000169e-05, 8.698599999999723e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.363" endtime="20201112 09:55:04.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.352" endtime="20201112 09:55:04.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.376" endtime="20201112 09:55:04.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:04.385" endtime="20201112 09:55:04.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.380" endtime="20201112 09:55:04.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.372" endtime="20201112 09:55:04.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.855" endtime="20201112 09:55:04.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:03.854" endtime="20201112 09:55:04.411"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.434" endtime="20201112 09:55:04.456"></status>
</kw>
<msg timestamp="20201112 09:55:04.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.431" endtime="20201112 09:55:04.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:04.460" endtime="20201112 09:55:04.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.466" endtime="20201112 09:55:04.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.423" endtime="20201112 09:55:04.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.417" endtime="20201112 09:55:04.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.490" endtime="20201112 09:55:04.826"></status>
</kw>
<msg timestamp="20201112 09:55:04.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042604361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042692292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.486" endtime="20201112 09:55:04.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042604361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042692292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:04.836" endtime="20201112 09:55:04.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:04.855" endtime="20201112 09:55:04.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.479" endtime="20201112 09:55:04.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.474" endtime="20201112 09:55:04.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:04.877" level="INFO">${RESULT} = [{'time': 0.042692292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.793099999999943e-05, 'source_diff': 8.793099999999943e-05}, {'time': 0.042797319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:04.867" endtime="20201112 09:55:04.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:04.983" level="INFO">${ACCURACY} = {'diff': [8.793099999999943e-05, 8.755500000000305e-05, 8.781899999999593e-05, 8.815200000000106e-05, 8.76250000000009e-05, 8.79999999999978e-05, 8.805599999999608e-05, 8.798599999999823e-05, 8.730600...</msg>
<status status="PASS" starttime="20201112 09:55:04.879" endtime="20201112 09:55:04.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.994" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:55:04.992" endtime="20201112 09:55:04.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:04.999" level="INFO">VALUE: [8.793099999999943e-05, 8.755500000000305e-05, 8.781899999999593e-05, 8.815200000000106e-05, 8.76250000000009e-05, 8.79999999999978e-05, 8.805599999999608e-05, 8.798599999999823e-05, 8.730600000000227e-05, 8.756999999999515e-05, 8.768100000000612e-05, 8.725000000000399e-05, 8.777799999999669e-05, 8.76799999999997e-05, 8.756900000000262e-05, 8.765300000000004e-05, 8.761100000000133e-05, 8.79999999999978e-05, 8.794399999999952e-05, 8.741599999999988e-05, 8.77920000000032e-05, 8.804199999999651e-05, 8.743099999999893e-05, 8.815300000000054e-05, 8.795799999999909e-05, 8.756900000000262e-05, 8.784700000000201e-05, 8.815300000000054e-05, 8.811100000000183e-05, 8.720799999999834e-05, 8.808300000000269e-05, 8.772199999999841e-05, 8.72920000000027e-05, 8.774999999999755e-05, 8.802799999999694e-05, 8.738900000000022e-05, 8.759699999999482e-05, 8.754100000000348e-05, 8.76669999999996e-05, 8.723599999999748e-05, 8.784700000000201e-05, 8.724999999999705e-05, 8.758400000000166e-05, 8.74999999999973e-05, 8.738800000000074e-05, 8.773599999999798e-05, 8.802799999999694e-05, 8.758300000000219e-05, 8.722200000000485e-05, 8.811100000000183e-05]</msg>
<status status="PASS" starttime="20201112 09:55:04.996" endtime="20201112 09:55:05.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.985" endtime="20201112 09:55:05.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.009" endtime="20201112 09:55:05.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.018" endtime="20201112 09:55:05.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.013" endtime="20201112 09:55:05.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.005" endtime="20201112 09:55:05.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.413" endtime="20201112 09:55:05.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:04.412" endtime="20201112 09:55:05.044"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.067" endtime="20201112 09:55:05.086"></status>
</kw>
<msg timestamp="20201112 09:55:05.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.064" endtime="20201112 09:55:05.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.088" endtime="20201112 09:55:05.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.091" endtime="20201112 09:55:05.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.056" endtime="20201112 09:55:05.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.050" endtime="20201112 09:55:05.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.102" endtime="20201112 09:55:05.388"></status>
</kw>
<msg timestamp="20201112 09:55:05.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041288389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.101" endtime="20201112 09:55:05.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041288389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.392" endtime="20201112 09:55:05.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.401" endtime="20201112 09:55:05.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.097" endtime="20201112 09:55:05.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.095" endtime="20201112 09:55:05.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.409" level="INFO">${RESULT} = [{'time': 0.041377097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.870799999999984e-05, 'source_diff': 8.870799999999984e-05}, {'time': 0.041480111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:05.405" endtime="20201112 09:55:05.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.423" level="INFO">${ACCURACY} = {'diff': [8.870799999999984e-05, 8.854199999999701e-05, 8.86670000000006e-05, 8.838800000000174e-05, 8.855599999999658e-05, 8.866699999999367e-05, 8.855599999999658e-05, 8.869400000000027e-05, 8.84160...</msg>
<status status="PASS" starttime="20201112 09:55:05.410" endtime="20201112 09:55:05.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.428" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.427" endtime="20201112 09:55:05.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.431" level="INFO">VALUE: [8.870799999999984e-05, 8.854199999999701e-05, 8.86670000000006e-05, 8.838800000000174e-05, 8.855599999999658e-05, 8.866699999999367e-05, 8.855599999999658e-05, 8.869400000000027e-05, 8.841600000000088e-05, 8.833300000000294e-05, 8.827699999999772e-05, 8.854100000000448e-05, 8.89999999999988e-05, 8.838899999999428e-05, 8.893100000000043e-05, 8.906999999999665e-05, 8.901399999999837e-05, 8.890300000000129e-05, 8.840300000000079e-05, 8.874999999999855e-05, 8.89999999999988e-05, 8.872199999999941e-05, 8.876399999999812e-05, 8.852799999999744e-05, 8.826399999999762e-05, 8.8945e-05, 8.834700000000251e-05, 8.876399999999812e-05, 8.82920000000037e-05, 8.90129999999989e-05, 8.898700000000564e-05, 8.891600000000138e-05, 8.91529999999946e-05, 8.895800000000009e-05, 8.87920000000042e-05, 8.823599999999848e-05, 8.876399999999812e-05, 8.897299999999914e-05, 8.815300000000054e-05, 8.91670000000011e-05, 8.89999999999988e-05, 8.905600000000402e-05, 8.90129999999989e-05, 8.841600000000088e-05, 8.912499999999546e-05, 8.848599999999873e-05, 8.827800000000413e-05, 8.890300000000129e-05, 8.891700000000086e-05, 8.848599999999873e-05]</msg>
<status status="PASS" starttime="20201112 09:55:05.429" endtime="20201112 09:55:05.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.424" endtime="20201112 09:55:05.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.435" endtime="20201112 09:55:05.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.439" endtime="20201112 09:55:05.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.437" endtime="20201112 09:55:05.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.433" endtime="20201112 09:55:05.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.046" endtime="20201112 09:55:05.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.045" endtime="20201112 09:55:05.461"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.472" endtime="20201112 09:55:05.491"></status>
</kw>
<msg timestamp="20201112 09:55:05.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.470" endtime="20201112 09:55:05.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.493" endtime="20201112 09:55:05.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.496" endtime="20201112 09:55:05.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.466" endtime="20201112 09:55:05.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.464" endtime="20201112 09:55:05.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.507" endtime="20201112 09:55:05.816"></status>
</kw>
<msg timestamp="20201112 09:55:05.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025893236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025982597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.506" endtime="20201112 09:55:05.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025893236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025982597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:05.826" endtime="20201112 09:55:05.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.846" endtime="20201112 09:55:05.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.502" endtime="20201112 09:55:05.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.500" endtime="20201112 09:55:05.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:05.864" level="INFO">${RESULT} = [{'time': 0.025982597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.936099999999961e-05, 'source_diff': 8.936099999999961e-05}, {'time': 0.026091625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:05.854" endtime="20201112 09:55:05.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:05.895" level="INFO">${ACCURACY} = {'diff': [8.936099999999961e-05, 8.976399999999912e-05, 8.987499999999968e-05, 8.923699999999896e-05, 8.934799999999951e-05, 8.979200000000173e-05, 9.007000000000112e-05, 9.01389999999995e-05, 9.01110...</msg>
<status status="PASS" starttime="20201112 09:55:05.866" endtime="20201112 09:55:05.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.906" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:55:05.903" endtime="20201112 09:55:05.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:05.911" level="INFO">VALUE: [8.936099999999961e-05, 8.976399999999912e-05, 8.987499999999968e-05, 8.923699999999896e-05, 8.934799999999951e-05, 8.979200000000173e-05, 9.007000000000112e-05, 9.01389999999995e-05, 9.011100000000036e-05, 8.947200000000016e-05, 8.923599999999948e-05, 8.947200000000016e-05, 8.920800000000034e-05, 8.934700000000004e-05, 8.954200000000148e-05, 8.927799999999819e-05, 8.988799999999977e-05, 8.966699999999814e-05, 8.924999999999905e-05, 8.944400000000102e-05, 8.951400000000234e-05, 8.942999999999798e-05, 8.936099999999961e-05, 8.926399999999862e-05, 8.961099999999986e-05, 8.951399999999887e-05, 8.926400000000209e-05, 8.963799999999952e-05, 8.993100000000143e-05, 8.979200000000173e-05, 8.984800000000001e-05, 8.948599999999973e-05, 8.922199999999991e-05, 8.954099999999854e-05, 8.951399999999887e-05, 8.980500000000183e-05, 9.002799999999894e-05, 8.988900000000272e-05, 9.002799999999894e-05, 8.957000000000062e-05, 8.979200000000173e-05, 9.004200000000198e-05, 8.990299999999882e-05, 8.970800000000084e-05, 8.920800000000034e-05, 8.990299999999882e-05, 9.016699999999864e-05, 8.923599999999948e-05, 9.002799999999894e-05, 8.951399999999887e-05]</msg>
<status status="PASS" starttime="20201112 09:55:05.908" endtime="20201112 09:55:05.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.896" endtime="20201112 09:55:05.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.921" endtime="20201112 09:55:05.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:05.929" endtime="20201112 09:55:05.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.925" endtime="20201112 09:55:05.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.916" endtime="20201112 09:55:05.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.462" endtime="20201112 09:55:05.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.461" endtime="20201112 09:55:05.956"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:05.979" endtime="20201112 09:55:06.001"></status>
</kw>
<msg timestamp="20201112 09:55:06.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:05.975" endtime="20201112 09:55:06.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.005" endtime="20201112 09:55:06.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.011" endtime="20201112 09:55:06.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.968" endtime="20201112 09:55:06.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.962" endtime="20201112 09:55:06.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.037" endtime="20201112 09:55:06.374"></status>
</kw>
<msg timestamp="20201112 09:55:06.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042566167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042656486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.033" endtime="20201112 09:55:06.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042566167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042656486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.384" endtime="20201112 09:55:06.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.403" endtime="20201112 09:55:06.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.024" endtime="20201112 09:55:06.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.019" endtime="20201112 09:55:06.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.421" level="INFO">${RESULT} = [{'time': 0.042656486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.031899999999843e-05, 'source_diff': 9.031899999999843e-05}, {'time': 0.042765528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:06.412" endtime="20201112 09:55:06.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:06.452" level="INFO">${ACCURACY} = {'diff': [9.031899999999843e-05, 9.038899999999628e-05, 9.08329999999985e-05, 9.097300000000114e-05, 9.022300000000039e-05, 9.033400000000441e-05, 9.037499999999671e-05, 9.063799999999705e-05, 9.07500...</msg>
<status status="PASS" starttime="20201112 09:55:06.423" endtime="20201112 09:55:06.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.463" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:55:06.461" endtime="20201112 09:55:06.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.469" level="INFO">VALUE: [9.031899999999843e-05, 9.038899999999628e-05, 9.08329999999985e-05, 9.097300000000114e-05, 9.022300000000039e-05, 9.033400000000441e-05, 9.037499999999671e-05, 9.063799999999705e-05, 9.075000000000055e-05, 9.019400000000177e-05, 9.07920000000062e-05, 9.116699999999617e-05, 9.01529999999956e-05, 9.075000000000055e-05, 9.058300000000519e-05, 9.052800000000638e-05, 9.030499999999886e-05, 9.095800000000209e-05, 9.077799999999969e-05, 9.075000000000055e-05, 9.058299999999825e-05, 9.030499999999886e-05, 9.072200000000141e-05, 9.088899999999678e-05, 9.11250000000044e-05, 9.043099999999499e-05, 9.029199999999876e-05, 9.117999999999626e-05, 9.040300000000279e-05, 9.07079999999949e-05, 9.094400000000252e-05, 9.055599999999858e-05, 9.068100000000218e-05, 9.098600000000123e-05, 9.062499999999696e-05, 9.11670000000031e-05, 9.091700000000286e-05, 9.113900000000397e-05, 9.049999999999336e-05, 9.051399999999987e-05, 9.111100000000483e-05, 9.105499999999961e-05, 9.070800000000184e-05, 9.072199999999447e-05, 9.113900000000397e-05, 9.11670000000031e-05, 9.03199999999979e-05, 9.055600000000552e-05, 9.029199999999876e-05, 9.026300000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:55:06.466" endtime="20201112 09:55:06.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.454" endtime="20201112 09:55:06.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.488" endtime="20201112 09:55:06.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:06.496" endtime="20201112 09:55:06.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.492" endtime="20201112 09:55:06.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.483" endtime="20201112 09:55:06.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.958" endtime="20201112 09:55:06.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:05.956" endtime="20201112 09:55:06.522"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.546" endtime="20201112 09:55:06.568"></status>
</kw>
<msg timestamp="20201112 09:55:06.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.542" endtime="20201112 09:55:06.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:06.571" endtime="20201112 09:55:06.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.578" endtime="20201112 09:55:06.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.535" endtime="20201112 09:55:06.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.529" endtime="20201112 09:55:06.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.602" endtime="20201112 09:55:06.942"></status>
</kw>
<msg timestamp="20201112 09:55:06.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042396514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042487736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.598" endtime="20201112 09:55:06.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:06.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042396514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042487736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:06.952" endtime="20201112 09:55:06.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:06.971" endtime="20201112 09:55:06.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.591" endtime="20201112 09:55:06.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.586" endtime="20201112 09:55:06.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:06.989" level="INFO">${RESULT} = [{'time': 0.042487736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.122199999999497e-05, 'source_diff': 9.122199999999497e-05}, {'time': 0.042594792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:06.980" endtime="20201112 09:55:06.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.022" level="INFO">${ACCURACY} = {'diff': [9.122199999999497e-05, 9.176400000000112e-05, 9.125000000000105e-05, 9.138900000000422e-05, 9.134699999999857e-05, 9.122200000000191e-05, 9.126400000000062e-05, 9.20130000000019e-05, 9.16799...</msg>
<status status="PASS" starttime="20201112 09:55:06.991" endtime="20201112 09:55:07.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.034" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.031" endtime="20201112 09:55:07.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.039" level="INFO">VALUE: [9.122199999999497e-05, 9.176400000000112e-05, 9.125000000000105e-05, 9.138900000000422e-05, 9.134699999999857e-05, 9.122200000000191e-05, 9.126400000000062e-05, 9.20130000000019e-05, 9.167999999999676e-05, 9.194400000000352e-05, 9.176400000000112e-05, 9.181899999999993e-05, 9.145800000000259e-05, 9.138899999999728e-05, 9.175000000000155e-05, 9.176299999999471e-05, 9.119500000000225e-05, 9.170900000000232e-05, 9.125000000000105e-05, 9.173599999999504e-05, 9.21670000000041e-05, 9.187499999999821e-05, 9.173600000000198e-05, 9.162499999999796e-05, 9.179200000000026e-05, 9.13199999999989e-05, 9.193100000000343e-05, 9.136100000000508e-05, 9.142999999999651e-05, 9.18329999999995e-05, 9.127700000000072e-05, 9.205500000000061e-05, 9.120800000000234e-05, 9.212499999999846e-05, 9.202800000000094e-05, 9.190299999999735e-05, 9.156899999999968e-05, 9.129199999999976e-05, 9.141599999999694e-05, 9.202800000000094e-05, 9.138900000000422e-05, 9.131899999999943e-05, 9.181899999999993e-05, 9.177799999999375e-05, 9.16250000000049e-05, 9.12079999999954e-05, 9.157000000000609e-05, 9.126400000000062e-05, 9.211099999999889e-05, 9.158299999999925e-05]</msg>
<status status="PASS" starttime="20201112 09:55:07.036" endtime="20201112 09:55:07.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.024" endtime="20201112 09:55:07.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.049" endtime="20201112 09:55:07.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.057" endtime="20201112 09:55:07.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.053" endtime="20201112 09:55:07.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.044" endtime="20201112 09:55:07.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.525" endtime="20201112 09:55:07.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:06.523" endtime="20201112 09:55:07.083"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.106" endtime="20201112 09:55:07.128"></status>
</kw>
<msg timestamp="20201112 09:55:07.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.103" endtime="20201112 09:55:07.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.132" endtime="20201112 09:55:07.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.139" endtime="20201112 09:55:07.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.095" endtime="20201112 09:55:07.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.089" endtime="20201112 09:55:07.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.163" endtime="20201112 09:55:07.503"></status>
</kw>
<msg timestamp="20201112 09:55:07.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042256292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042349431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.159" endtime="20201112 09:55:07.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042256292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042349431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.512" endtime="20201112 09:55:07.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.532" endtime="20201112 09:55:07.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.152" endtime="20201112 09:55:07.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.147" endtime="20201112 09:55:07.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:07.549" level="INFO">${RESULT} = [{'time': 0.042349431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.313899999999903e-05, 'source_diff': 9.313899999999903e-05}, {'time': 0.042452472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:07.540" endtime="20201112 09:55:07.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:07.580" level="INFO">${ACCURACY} = {'diff': [9.313899999999903e-05, 9.276399999999518e-05, 9.244499999999656e-05, 9.280499999999442e-05, 9.238899999999828e-05, 9.277799999999475e-05, 9.286099999999964e-05, 9.312499999999946e-05, 9.2333...</msg>
<status status="PASS" starttime="20201112 09:55:07.551" endtime="20201112 09:55:07.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.591" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:55:07.589" endtime="20201112 09:55:07.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.597" level="INFO">VALUE: [9.313899999999903e-05, 9.276399999999518e-05, 9.244499999999656e-05, 9.280499999999442e-05, 9.238899999999828e-05, 9.277799999999475e-05, 9.286099999999964e-05, 9.312499999999946e-05, 9.2333e-05, 9.275000000000255e-05, 9.275000000000255e-05, 9.308400000000022e-05, 9.276400000000212e-05, 9.259699999999982e-05, 9.256900000000068e-05, 9.216600000000463e-05, 9.274999999999561e-05, 9.252800000000144e-05, 9.223600000000248e-05, 9.297300000000314e-05, 9.276400000000212e-05, 9.224999999999511e-05, 9.284700000000007e-05, 9.243000000000445e-05, 9.25409999999946e-05, 9.280499999999442e-05, 9.294399999999758e-05, 9.231899999999349e-05, 9.25000000000023e-05, 9.308300000000075e-05, 9.307000000000065e-05, 9.248600000000273e-05, 9.277699999999528e-05, 9.316699999999817e-05, 9.225000000000205e-05, 9.29859999999963e-05, 9.275000000000255e-05, 9.273600000000298e-05, 9.222200000000291e-05, 9.318099999999774e-05, 9.315300000000554e-05, 9.259799999999929e-05, 9.273600000000298e-05, 9.254199999999407e-05, 9.219500000000325e-05, 9.262499999999896e-05, 9.275000000000255e-05, 9.2333e-05, 9.225000000000205e-05, 9.2333e-05]</msg>
<status status="PASS" starttime="20201112 09:55:07.594" endtime="20201112 09:55:07.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.582" endtime="20201112 09:55:07.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.607" endtime="20201112 09:55:07.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:07.615" endtime="20201112 09:55:07.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.611" endtime="20201112 09:55:07.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.602" endtime="20201112 09:55:07.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.085" endtime="20201112 09:55:07.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.084" endtime="20201112 09:55:07.641"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.664" endtime="20201112 09:55:07.687"></status>
</kw>
<msg timestamp="20201112 09:55:07.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.661" endtime="20201112 09:55:07.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:07.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:07.690" endtime="20201112 09:55:07.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.697" endtime="20201112 09:55:07.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.653" endtime="20201112 09:55:07.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.647" endtime="20201112 09:55:07.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:07.722" endtime="20201112 09:55:08.061"></status>
</kw>
<msg timestamp="20201112 09:55:08.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042319931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042413722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:07.719" endtime="20201112 09:55:08.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042319931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042413722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.071" endtime="20201112 09:55:08.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.091" endtime="20201112 09:55:08.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.711" endtime="20201112 09:55:08.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.706" endtime="20201112 09:55:08.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.110" level="INFO">${RESULT} = [{'time': 0.042413722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.379100000000279e-05, 'source_diff': 9.379100000000279e-05}, {'time': 0.042515778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:08.101" endtime="20201112 09:55:08.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.143" level="INFO">${ACCURACY} = {'diff': [9.379100000000279e-05, 9.36529999999991e-05, 9.363899999999953e-05, 9.394400000000552e-05, 9.325000000000305e-05, 9.402800000000294e-05, 9.372299999999695e-05, 9.33879999999998e-05, 9.380599...</msg>
<status status="PASS" starttime="20201112 09:55:08.112" endtime="20201112 09:55:08.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.155" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.153" endtime="20201112 09:55:08.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.161" level="INFO">VALUE: [9.379100000000279e-05, 9.36529999999991e-05, 9.363899999999953e-05, 9.394400000000552e-05, 9.325000000000305e-05, 9.402800000000294e-05, 9.372299999999695e-05, 9.33879999999998e-05, 9.38059999999949e-05, 9.352700000000297e-05, 9.31529999999986e-05, 9.375000000000355e-05, 9.381900000000193e-05, 9.376400000000312e-05, 9.4027999999996e-05, 9.35279999999955e-05, 9.41659999999997e-05, 9.333400000000047e-05, 9.347300000000364e-05, 9.344400000000502e-05, 9.322199999999697e-05, 9.381900000000193e-05, 9.416700000000611e-05, 9.326399999999568e-05, 9.412500000000046e-05, 9.347199999999722e-05, 9.36529999999991e-05, 9.377800000000269e-05, 9.345800000000459e-05, 9.398600000000423e-05, 9.417999999999926e-05, 9.359699999999388e-05, 9.323599999999654e-05, 9.333399999999353e-05, 9.386100000000064e-05, 9.391700000000586e-05, 9.37079999999979e-05, 9.393100000000543e-05, 9.362499999999996e-05, 9.345800000000459e-05, 9.34450000000045e-05, 9.388899999999978e-05, 9.38330000000015e-05, 9.379099999999585e-05, 9.388899999999978e-05, 9.316699999999817e-05, 9.344399999999808e-05, 9.377800000000269e-05, 9.345799999999765e-05, 9.320899999999688e-05]</msg>
<status status="PASS" starttime="20201112 09:55:08.158" endtime="20201112 09:55:08.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.145" endtime="20201112 09:55:08.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.171" endtime="20201112 09:55:08.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.180" endtime="20201112 09:55:08.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.176" endtime="20201112 09:55:08.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.166" endtime="20201112 09:55:08.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.643" endtime="20201112 09:55:08.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:07.642" endtime="20201112 09:55:08.207"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.232" endtime="20201112 09:55:08.254"></status>
</kw>
<msg timestamp="20201112 09:55:08.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.228" endtime="20201112 09:55:08.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.258" endtime="20201112 09:55:08.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.266" endtime="20201112 09:55:08.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.220" endtime="20201112 09:55:08.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.214" endtime="20201112 09:55:08.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.292" endtime="20201112 09:55:08.657"></status>
</kw>
<msg timestamp="20201112 09:55:08.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044681708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044775958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.288" endtime="20201112 09:55:08.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044681708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044775958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.669" endtime="20201112 09:55:08.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.689" endtime="20201112 09:55:08.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.280" endtime="20201112 09:55:08.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.275" endtime="20201112 09:55:08.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:08.711" level="INFO">${RESULT} = [{'time': 0.044775958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.424999999999711e-05, 'source_diff': 9.424999999999711e-05}, {'time': 0.044883, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:55:08.700" endtime="20201112 09:55:08.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:08.745" level="INFO">${ACCURACY} = {'diff': [9.424999999999711e-05, 9.488900000000078e-05, 9.419399999999883e-05, 9.5027999999997e-05, 9.451400000000387e-05, 9.463900000000053e-05, 9.445899999999813e-05, 9.476399999999718e-05, 9.444399...</msg>
<status status="PASS" starttime="20201112 09:55:08.714" endtime="20201112 09:55:08.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.758" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:55:08.755" endtime="20201112 09:55:08.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.764" level="INFO">VALUE: [9.424999999999711e-05, 9.488900000000078e-05, 9.419399999999883e-05, 9.5027999999997e-05, 9.451400000000387e-05, 9.463900000000053e-05, 9.445899999999813e-05, 9.476399999999718e-05, 9.444399999999908e-05, 9.429200000000276e-05, 9.462500000000096e-05, 9.4333000000002e-05, 9.481900000000293e-05, 9.488900000000078e-05, 9.494399999999958e-05, 9.441699999999942e-05, 9.495799999999915e-05, 9.472199999999847e-05, 9.519399999999983e-05, 9.45279999999965e-05, 9.42079999999984e-05, 9.441599999999994e-05, 9.413900000000003e-05, 9.479100000000379e-05, 9.518099999999974e-05, 9.458300000000225e-05, 9.454200000000301e-05, 9.434700000000157e-05, 9.462500000000096e-05, 9.461100000000139e-05, 9.491600000000044e-05, 9.455499999999617e-05, 9.431899999999549e-05, 9.452800000000344e-05, 9.505500000000361e-05, 9.477800000000369e-05, 9.479200000000326e-05, 9.441699999999942e-05, 9.493099999999949e-05, 9.487499999999427e-05, 9.497199999999872e-05, 9.457000000000215e-05, 9.481900000000293e-05, 9.50000000000048e-05, 9.487500000000121e-05, 9.419399999999883e-05, 9.437500000000071e-05, 9.425000000000405e-05, 9.454200000000301e-05, 9.447199999999822e-05]</msg>
<status status="PASS" starttime="20201112 09:55:08.760" endtime="20201112 09:55:08.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.747" endtime="20201112 09:55:08.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.774" endtime="20201112 09:55:08.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:08.783" endtime="20201112 09:55:08.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.778" endtime="20201112 09:55:08.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.769" endtime="20201112 09:55:08.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.209" endtime="20201112 09:55:08.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.208" endtime="20201112 09:55:08.810"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.835" endtime="20201112 09:55:08.858"></status>
</kw>
<msg timestamp="20201112 09:55:08.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.831" endtime="20201112 09:55:08.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:08.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:08.862" endtime="20201112 09:55:08.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.869" endtime="20201112 09:55:08.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.823" endtime="20201112 09:55:08.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.817" endtime="20201112 09:55:08.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:08.894" endtime="20201112 09:55:09.225"></status>
</kw>
<msg timestamp="20201112 09:55:09.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045245611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045340861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:08.890" endtime="20201112 09:55:09.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045245611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045340861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.235" endtime="20201112 09:55:09.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.254" endtime="20201112 09:55:09.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.883" endtime="20201112 09:55:09.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.878" endtime="20201112 09:55:09.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.273" level="INFO">${RESULT} = [{'time': 0.045340861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.525000000000505e-05, 'source_diff': 9.525000000000505e-05}, {'time': 0.045449917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:09.264" endtime="20201112 09:55:09.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.307" level="INFO">${ACCURACY} = {'diff': [9.525000000000505e-05, 9.544499999999956e-05, 9.595800000000015e-05, 9.566699999999373e-05, 9.530600000000333e-05, 9.561100000000239e-05, 9.581999999999646e-05, 9.577699999999828e-05, 9.6096...</msg>
<status status="PASS" starttime="20201112 09:55:09.276" endtime="20201112 09:55:09.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.318" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.316" endtime="20201112 09:55:09.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.324" level="INFO">VALUE: [9.525000000000505e-05, 9.544499999999956e-05, 9.595800000000015e-05, 9.566699999999373e-05, 9.530600000000333e-05, 9.561100000000239e-05, 9.581999999999646e-05, 9.577699999999828e-05, 9.609699999999638e-05, 9.58330000000035e-05, 9.577800000000469e-05, 9.59859999999993e-05, 9.549999999999836e-05, 9.551399999999793e-05, 9.612499999999552e-05, 9.55279999999975e-05, 9.612500000000246e-05, 9.6027999999998e-05, 9.569400000000033e-05, 9.5333000000003e-05, 9.587500000000221e-05, 9.577800000000469e-05, 9.580600000000383e-05, 9.538899999999434e-05, 9.6027999999998e-05, 9.572199999999947e-05, 9.545899999999913e-05, 9.612499999999552e-05, 9.601399999999843e-05, 9.616599999999476e-05, 9.577699999999828e-05, 9.591700000000092e-05, 9.609699999999638e-05, 9.618100000000074e-05, 9.559700000000282e-05, 9.58059999999969e-05, 9.570900000000632e-05, 9.574999999999861e-05, 9.523699999999802e-05, 9.58330000000035e-05, 9.605499999999767e-05, 9.555500000000411e-05, 9.574999999999861e-05, 9.526400000000462e-05, 9.569400000000033e-05, 9.581999999999646e-05, 9.588900000000178e-05, 9.574999999999861e-05, 9.563900000000153e-05, 9.580500000000436e-05]</msg>
<status status="PASS" starttime="20201112 09:55:09.320" endtime="20201112 09:55:09.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.309" endtime="20201112 09:55:09.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.333" endtime="20201112 09:55:09.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.342" endtime="20201112 09:55:09.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.337" endtime="20201112 09:55:09.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.329" endtime="20201112 09:55:09.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.812" endtime="20201112 09:55:09.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:08.811" endtime="20201112 09:55:09.368"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.392" endtime="20201112 09:55:09.414"></status>
</kw>
<msg timestamp="20201112 09:55:09.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.388" endtime="20201112 09:55:09.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.418" endtime="20201112 09:55:09.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.425" endtime="20201112 09:55:09.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.381" endtime="20201112 09:55:09.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.375" endtime="20201112 09:55:09.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.448" endtime="20201112 09:55:09.797"></status>
</kw>
<msg timestamp="20201112 09:55:09.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043230264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.445" endtime="20201112 09:55:09.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043230264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:09.807" endtime="20201112 09:55:09.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.826" endtime="20201112 09:55:09.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.438" endtime="20201112 09:55:09.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.433" endtime="20201112 09:55:09.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:09.844" level="INFO">${RESULT} = [{'time': 0.043230264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.690299999999541e-05, 'source_diff': 9.690299999999541e-05}, {'time': 0.043339278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:09.835" endtime="20201112 09:55:09.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:09.877" level="INFO">${ACCURACY} = {'diff': [9.690299999999541e-05, 9.618100000000074e-05, 9.616700000000117e-05, 9.645900000000013e-05, 9.693000000000201e-05, 9.674999999999961e-05, 9.688899999999584e-05, 9.688899999999584e-05, 9.6707...</msg>
<status status="PASS" starttime="20201112 09:55:09.846" endtime="20201112 09:55:09.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.888" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:55:09.886" endtime="20201112 09:55:09.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.894" level="INFO">VALUE: [9.690299999999541e-05, 9.618100000000074e-05, 9.616700000000117e-05, 9.645900000000013e-05, 9.693000000000201e-05, 9.674999999999961e-05, 9.688899999999584e-05, 9.688899999999584e-05, 9.670799999999397e-05, 9.658300000000425e-05, 9.627800000000519e-05, 9.634699999999663e-05, 9.620899999999988e-05, 9.636100000000314e-05, 9.629199999999782e-05, 9.68609999999967e-05, 9.711100000000389e-05, 9.623599999999954e-05, 9.7027999999999e-05, 9.619400000000083e-05, 9.649999999999936e-05, 9.619500000000031e-05, 9.64859999999998e-05, 9.701299999999996e-05, 9.651299999999946e-05, 9.69159999999955e-05, 9.637500000000271e-05, 9.643100000000099e-05, 9.674999999999961e-05, 9.62080000000004e-05, 9.684699999999713e-05, 9.681999999999746e-05, 9.718100000000174e-05, 9.722200000000097e-05, 9.658399999999678e-05, 9.62080000000004e-05, 9.62080000000004e-05, 9.691600000000244e-05, 9.65409999999986e-05, 9.626399999999868e-05, 9.627799999999825e-05, 9.676400000000612e-05, 9.666700000000167e-05, 9.65409999999986e-05, 9.716599999999576e-05, 9.712500000000346e-05, 9.64859999999998e-05, 9.633299999999706e-05, 9.711099999999695e-05, 9.651400000000587e-05]</msg>
<status status="PASS" starttime="20201112 09:55:09.890" endtime="20201112 09:55:09.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.878" endtime="20201112 09:55:09.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.904" endtime="20201112 09:55:09.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:09.912" endtime="20201112 09:55:09.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.908" endtime="20201112 09:55:09.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.899" endtime="20201112 09:55:09.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.370" endtime="20201112 09:55:09.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.369" endtime="20201112 09:55:09.938"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.961" endtime="20201112 09:55:09.984"></status>
</kw>
<msg timestamp="20201112 09:55:09.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.958" endtime="20201112 09:55:09.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:09.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:09.988" endtime="20201112 09:55:09.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:09.994" endtime="20201112 09:55:09.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.951" endtime="20201112 09:55:09.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.945" endtime="20201112 09:55:10.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.018" endtime="20201112 09:55:10.357"></status>
</kw>
<msg timestamp="20201112 09:55:10.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042567264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042665319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.014" endtime="20201112 09:55:10.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042567264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042665319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.367" endtime="20201112 09:55:10.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.386" endtime="20201112 09:55:10.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.007" endtime="20201112 09:55:10.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.002" endtime="20201112 09:55:10.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.404" level="INFO">${RESULT} = [{'time': 0.042665319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805499999999967e-05, 'source_diff': 9.805499999999967e-05}, {'time': 0.042778347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:10.395" endtime="20201112 09:55:10.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.437" level="INFO">${ACCURACY} = {'diff': [9.805499999999967e-05, 9.794400000000258e-05, 9.781899999999899e-05, 9.779199999999932e-05, 9.733299999999806e-05, 9.72080000000014e-05, 9.758300000000525e-05, 9.766700000000267e-05, 9.80000...</msg>
<status status="PASS" starttime="20201112 09:55:10.406" endtime="20201112 09:55:10.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.448" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:55:10.446" endtime="20201112 09:55:10.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.454" level="INFO">VALUE: [9.805499999999967e-05, 9.794400000000258e-05, 9.781899999999899e-05, 9.779199999999932e-05, 9.733299999999806e-05, 9.72080000000014e-05, 9.758300000000525e-05, 9.766700000000267e-05, 9.800000000000086e-05, 9.772200000000147e-05, 9.750000000000036e-05, 9.722200000000097e-05, 9.783299999999856e-05, 9.726399999999968e-05, 9.816699999999623e-05, 9.745800000000165e-05, 9.815299999999666e-05, 9.777799999999975e-05, 9.787499999999727e-05, 9.750000000000036e-05, 9.783299999999856e-05, 9.755499999999917e-05, 9.751399999999993e-05, 9.750000000000036e-05, 9.812499999999752e-05, 9.76939999999954e-05, 9.81530000000036e-05, 9.813900000000403e-05, 9.805599999999914e-05, 9.733399999999753e-05, 9.773600000000104e-05, 9.777799999999975e-05, 9.729199999999882e-05, 9.754199999999907e-05, 9.72080000000014e-05, 9.776400000000018e-05, 9.777799999999975e-05, 9.779199999999932e-05, 9.776400000000018e-05, 9.740300000000285e-05, 9.813800000000455e-05, 9.770799999999497e-05, 9.779199999999932e-05, 9.743000000000251e-05, 9.787500000000421e-05, 9.763900000000353e-05, 9.725000000000011e-05, 9.726399999999968e-05, 9.797199999999479e-05, 9.763900000000353e-05]</msg>
<status status="PASS" starttime="20201112 09:55:10.451" endtime="20201112 09:55:10.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.439" endtime="20201112 09:55:10.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.463" endtime="20201112 09:55:10.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:10.472" endtime="20201112 09:55:10.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.467" endtime="20201112 09:55:10.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.459" endtime="20201112 09:55:10.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.941" endtime="20201112 09:55:10.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:09.939" endtime="20201112 09:55:10.498"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.521" endtime="20201112 09:55:10.544"></status>
</kw>
<msg timestamp="20201112 09:55:10.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.517" endtime="20201112 09:55:10.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:10.547" endtime="20201112 09:55:10.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.553" endtime="20201112 09:55:10.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.510" endtime="20201112 09:55:10.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.504" endtime="20201112 09:55:10.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.577" endtime="20201112 09:55:10.916"></status>
</kw>
<msg timestamp="20201112 09:55:10.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042390542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.574" endtime="20201112 09:55:10.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:10.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042390542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:10.926" endtime="20201112 09:55:10.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:10.946" endtime="20201112 09:55:10.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.566" endtime="20201112 09:55:10.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.562" endtime="20201112 09:55:10.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:10.964" level="INFO">${RESULT} = [{'time': 0.042390542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.875000000000161e-05, 'source_diff': 9.875000000000161e-05}, {'time': 0.042507569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:10.954" endtime="20201112 09:55:10.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:10.996" level="INFO">${ACCURACY} = {'diff': [9.875000000000161e-05, 9.843000000000351e-05, 9.879200000000032e-05, 9.906900000000024e-05, 9.86939999999964e-05, 9.91660000000047e-05, 9.856899999999974e-05, 9.822200000000197e-05, 9.868099...</msg>
<status status="PASS" starttime="20201112 09:55:10.966" endtime="20201112 09:55:10.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.007" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:55:11.005" endtime="20201112 09:55:11.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.013" level="INFO">VALUE: [9.875000000000161e-05, 9.843000000000351e-05, 9.879200000000032e-05, 9.906900000000024e-05, 9.86939999999964e-05, 9.91660000000047e-05, 9.856899999999974e-05, 9.822200000000197e-05, 9.86809999999963e-05, 9.891700000000392e-05, 9.895899999999569e-05, 9.877799999999382e-05, 9.823600000000154e-05, 9.917999999999733e-05, 9.90410000000011e-05, 9.876400000000118e-05, 9.877800000000075e-05, 9.887499999999827e-05, 9.83059999999994e-05, 9.873700000000152e-05, 9.873600000000204e-05, 9.827799999999332e-05, 9.884699999999913e-05, 9.89159999999975e-05, 9.818000000000326e-05, 9.911099999999895e-05, 9.822200000000197e-05, 9.863900000000453e-05, 9.868100000000324e-05, 9.82080000000024e-05, 9.854200000000007e-05, 9.819500000000231e-05, 9.831899999999949e-05, 9.922200000000297e-05, 9.8415999999997e-05, 9.898599999999536e-05, 9.895900000000263e-05, 9.833299999999906e-05, 9.854200000000007e-05, 9.825000000000111e-05, 9.824999999999418e-05, 9.837500000000471e-05, 9.867999999999683e-05, 9.904200000000057e-05, 9.877800000000075e-05, 9.85410000000006e-05, 9.870900000000238e-05, 9.838899999999734e-05, 9.856899999999974e-05, 9.856899999999974e-05]</msg>
<status status="PASS" starttime="20201112 09:55:11.010" endtime="20201112 09:55:11.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.998" endtime="20201112 09:55:11.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.023" endtime="20201112 09:55:11.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.031" endtime="20201112 09:55:11.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.027" endtime="20201112 09:55:11.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.018" endtime="20201112 09:55:11.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.500" endtime="20201112 09:55:11.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:10.499" endtime="20201112 09:55:11.057"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.080" endtime="20201112 09:55:11.103"></status>
</kw>
<msg timestamp="20201112 09:55:11.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.077" endtime="20201112 09:55:11.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.106" endtime="20201112 09:55:11.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.113" endtime="20201112 09:55:11.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.070" endtime="20201112 09:55:11.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.064" endtime="20201112 09:55:11.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.137" endtime="20201112 09:55:11.476"></status>
</kw>
<msg timestamp="20201112 09:55:11.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042838236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042937889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.133" endtime="20201112 09:55:11.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042838236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042937889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.486" endtime="20201112 09:55:11.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.505" endtime="20201112 09:55:11.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.126" endtime="20201112 09:55:11.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.121" endtime="20201112 09:55:11.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:11.523" level="INFO">${RESULT} = [{'time': 0.042937889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.965299999999816e-05, 'source_diff': 9.965299999999816e-05}, {'time': 0.043049889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:11.514" endtime="20201112 09:55:11.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:11.557" level="INFO">${ACCURACY} = {'diff': [9.965299999999816e-05, 9.940299999999791e-05, 9.970900000000338e-05, 9.958399999999978e-05, 9.925000000000211e-05, 9.929100000000135e-05, 9.951300000000246e-05, 9.93609999999992e-05, 9.98749...</msg>
<status status="PASS" starttime="20201112 09:55:11.525" endtime="20201112 09:55:11.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.568" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:55:11.566" endtime="20201112 09:55:11.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.574" level="INFO">VALUE: [9.965299999999816e-05, 9.940299999999791e-05, 9.970900000000338e-05, 9.958399999999978e-05, 9.925000000000211e-05, 9.929100000000135e-05, 9.951300000000246e-05, 9.93609999999992e-05, 9.987499999999927e-05, 0.00010016699999999823, 9.966699999999773e-05, 9.93609999999992e-05, 9.994399999999765e-05, 0.00010018100000000474, 0.00010012499999999952, 9.966599999999826e-05, 9.9415999999998e-05, 9.967999999999783e-05, 9.954199999999414e-05, 9.945799999999672e-05, 9.950000000000236e-05, 9.975000000000261e-05, 9.969500000000381e-05, 9.958399999999978e-05, 9.997199999999679e-05, 9.951400000000193e-05, 0.00010012499999999952, 9.984700000000013e-05, 9.987499999999927e-05, 9.943100000000399e-05, 9.923600000000254e-05, 9.997299999999626e-05, 9.940299999999791e-05, 9.976300000000271e-05, 9.972200000000347e-05, 9.973700000000252e-05, 9.98609999999997e-05, 9.962499999999902e-05, 9.976399999999525e-05, 0.00010018100000000474, 9.98060000000009e-05, 9.93060000000004e-05, 9.940299999999791e-05, 9.948599999999586e-05, 9.958399999999978e-05, 9.95280000000015e-05, 9.949999999999543e-05, 9.987499999999927e-05, 0.00010000000000000286, 9.943100000000399e-05]</msg>
<status status="PASS" starttime="20201112 09:55:11.571" endtime="20201112 09:55:11.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.559" endtime="20201112 09:55:11.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.589" endtime="20201112 09:55:11.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:11.598" endtime="20201112 09:55:11.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.593" endtime="20201112 09:55:11.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.584" endtime="20201112 09:55:11.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.059" endtime="20201112 09:55:11.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.058" endtime="20201112 09:55:11.624"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.647" endtime="20201112 09:55:11.670"></status>
</kw>
<msg timestamp="20201112 09:55:11.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.644" endtime="20201112 09:55:11.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:11.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:11.674" endtime="20201112 09:55:11.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.680" endtime="20201112 09:55:11.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.636" endtime="20201112 09:55:11.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.630" endtime="20201112 09:55:11.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:11.704" endtime="20201112 09:55:12.043"></status>
</kw>
<msg timestamp="20201112 09:55:12.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042886681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042986889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:11.700" endtime="20201112 09:55:12.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042886681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042986889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.052" endtime="20201112 09:55:12.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.071" endtime="20201112 09:55:12.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.693" endtime="20201112 09:55:12.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.688" endtime="20201112 09:55:12.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.088" level="INFO">${RESULT} = [{'time': 0.042986889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010020799999999747, 'source_diff': 0.00010020799999999747}, {'time': 0.043103903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:12.079" endtime="20201112 09:55:12.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.120" level="INFO">${ACCURACY} = {'diff': [0.00010020799999999747, 0.00010024999999999618, 0.00010113800000000062, 0.00010062500000000002, 0.000100415999999999, 0.0001007080000000049, 0.00010117999999999933, 0.00010029100000000235, 0...</msg>
<status status="PASS" starttime="20201112 09:55:12.091" endtime="20201112 09:55:12.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.132" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.128" endtime="20201112 09:55:12.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.137" level="INFO">VALUE: [0.00010020799999999747, 0.00010024999999999618, 0.00010113800000000062, 0.00010062500000000002, 0.000100415999999999, 0.0001007080000000049, 0.00010117999999999933, 0.00010029100000000235, 0.0001003480000000001, 0.00010093099999999855, 0.00010041699999999848, 0.00010094399999999865, 0.00010095899999999769, 0.00010094499999999812, 0.00010116699999999923, 0.0001002080000000044, 0.00010090299999999941, 0.00010038899999999934, 0.00010100000000000386, 0.00010019500000000431, 0.00010083299999999462, 0.00010027800000000225, 0.00010057000000000121, 0.00010116700000000617, 0.00010074999999999668, 0.00010037499999999977, 0.00010033299999999412, 0.00010101400000000343, 0.00010058300000000131, 0.0001005559999999947, 0.00010073600000000404, 0.0001008060000000019, 0.00010066699999999873, 0.00010074999999999668, 0.00010077799999999582, 0.0001011660000000067, 0.00010022200000000397, 0.00010077799999999582, 0.0001007359999999971, 0.00010026400000000268, 0.0001006939999999984, 0.0001008610000000007, 0.0001011939999999989, 0.00010043100000000499, 0.00010099999999999693, 0.0001007359999999971, 0.000100415999999999, 0.00010073600000000404, 0.00010022199999999704, 0.00010115299999999966]</msg>
<status status="PASS" starttime="20201112 09:55:12.134" endtime="20201112 09:55:12.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.122" endtime="20201112 09:55:12.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.147" endtime="20201112 09:55:12.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.156" endtime="20201112 09:55:12.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.151" endtime="20201112 09:55:12.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.143" endtime="20201112 09:55:12.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.626" endtime="20201112 09:55:12.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:11.625" endtime="20201112 09:55:12.182"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.206" endtime="20201112 09:55:12.228"></status>
</kw>
<msg timestamp="20201112 09:55:12.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.202" endtime="20201112 09:55:12.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.232" endtime="20201112 09:55:12.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.238" endtime="20201112 09:55:12.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.195" endtime="20201112 09:55:12.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.189" endtime="20201112 09:55:12.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.256" endtime="20201112 09:55:12.542"></status>
</kw>
<msg timestamp="20201112 09:55:12.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043220014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043321722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.254" endtime="20201112 09:55:12.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043220014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043321722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.546" endtime="20201112 09:55:12.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.555" endtime="20201112 09:55:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.251" endtime="20201112 09:55:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.247" endtime="20201112 09:55:12.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:12.563" level="INFO">${RESULT} = [{'time': 0.043321722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010170799999999897, 'source_diff': 0.00010170799999999897}, {'time': 0.043430736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:12.559" endtime="20201112 09:55:12.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:12.576" level="INFO">${ACCURACY} = {'diff': [0.00010170799999999897, 0.00010162500000000102, 0.0001018889999999939, 0.00010174999999999768, 0.0001013060000000024, 0.00010165300000000016, 0.00010156999999999528, 0.00010144399999999915, ...</msg>
<status status="PASS" starttime="20201112 09:55:12.564" endtime="20201112 09:55:12.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.582" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:55:12.581" endtime="20201112 09:55:12.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.584" level="INFO">VALUE: [0.00010170799999999897, 0.00010162500000000102, 0.0001018889999999939, 0.00010174999999999768, 0.0001013060000000024, 0.00010165300000000016, 0.00010156999999999528, 0.00010144399999999915, 0.0001021809999999998, 0.00010158300000000231, 0.00010134700000000163, 0.00010197199999999879, 0.00010213900000000109, 0.00010201400000000443, 0.00010154199999999614, 0.00010158300000000231, 0.0001013339999999946, 0.00010163900000000059, 0.00010151400000000393, 0.00010161100000000145, 0.00010122200000000497, 0.00010137500000000077, 0.00010209700000000238, 0.00010172200000000547, 0.00010199999999999793, 0.00010133400000000153, 0.00010127799999999632, 0.00010129099999999641, 0.00010215300000000066, 0.00010200000000000486, 0.00010172199999999854, 0.00010172200000000547, 0.00010138900000000034, 0.0001021809999999998, 0.00010126400000000368, 0.00010142999999999958, 0.00010165200000000069, 0.00010144400000000608, 0.00010138900000000034, 0.00010131900000000249, 0.00010188900000000084, 0.00010138900000000034, 0.00010163900000000059, 0.00010182000000000246, 0.00010123600000000454, 0.00010137500000000077, 0.0001020410000000041, 0.00010216600000000076, 0.00010181900000000299, 0.00010176399999999725]</msg>
<status status="PASS" starttime="20201112 09:55:12.583" endtime="20201112 09:55:12.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.577" endtime="20201112 09:55:12.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.590" endtime="20201112 09:55:12.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:12.594" endtime="20201112 09:55:12.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.592" endtime="20201112 09:55:12.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.588" endtime="20201112 09:55:12.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.185" endtime="20201112 09:55:12.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.183" endtime="20201112 09:55:12.615"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.626" endtime="20201112 09:55:12.645"></status>
</kw>
<msg timestamp="20201112 09:55:12.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.625" endtime="20201112 09:55:12.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:12.647" endtime="20201112 09:55:12.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.650" endtime="20201112 09:55:12.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.621" endtime="20201112 09:55:12.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.618" endtime="20201112 09:55:12.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.661" endtime="20201112 09:55:12.965"></status>
</kw>
<msg timestamp="20201112 09:55:12.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024720694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024822986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.660" endtime="20201112 09:55:12.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:12.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024720694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024822986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:12.975" endtime="20201112 09:55:12.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:12.994" endtime="20201112 09:55:12.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.656" endtime="20201112 09:55:12.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.654" endtime="20201112 09:55:13.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.012" level="INFO">${RESULT} = [{'time': 0.024822986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010229199999999689, 'source_diff': 0.00010229199999999689}, {'time': 0.024943028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:13.003" endtime="20201112 09:55:13.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:13.042" level="INFO">${ACCURACY} = {'diff': [0.00010229199999999689, 0.0001026810000000003, 0.00010299999999999893, 0.00010251299999999852, 0.00010312500000000252, 0.0001022220000000025, 0.00010312500000000252, 0.00010288900000000184, ...</msg>
<status status="PASS" starttime="20201112 09:55:13.014" endtime="20201112 09:55:13.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.054" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:55:13.051" endtime="20201112 09:55:13.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.059" level="INFO">VALUE: [0.00010229199999999689, 0.0001026810000000003, 0.00010299999999999893, 0.00010251299999999852, 0.00010312500000000252, 0.0001022220000000025, 0.00010312500000000252, 0.00010288900000000184, 0.00010286099999999923, 0.00010298599999999936, 0.00010305600000000067, 0.00010245899999999919, 0.0001023749999999983, 0.00010293000000000108, 0.00010233399999999906, 0.00010248600000000233, 0.00010263799999999865, 0.00010281900000000052, 0.00010240199999999797, 0.00010224999999999818, 0.00010256999999999974, 0.00010270799999999997, 0.00010298599999999936, 0.00010293000000000108, 0.00010220899999999894, 0.00010227799999999732, 0.00010312499999999905, 0.00010224999999999818, 0.00010222199999999904, 0.0001021939999999999, 0.00010308300000000034, 0.00010243100000000005, 0.0001023199999999995, 0.00010255600000000017, 0.00010248599999999886, 0.00010277800000000128, 0.00010301299999999902, 0.00010276400000000172, 0.00010288899999999837, 0.00010276399999999825, 0.00010316699999999776, 0.00010266700000000073, 0.00010273600000000258, 0.00010222299999999851, 0.0001026810000000003, 0.00010220900000000241, 0.00010252800000000103, 0.00010270799999999997, 0.00010295800000000022, 0.00010234699999999916]</msg>
<status status="PASS" starttime="20201112 09:55:13.056" endtime="20201112 09:55:13.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.044" endtime="20201112 09:55:13.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.069" endtime="20201112 09:55:13.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.079" endtime="20201112 09:55:13.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.074" endtime="20201112 09:55:13.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.064" endtime="20201112 09:55:13.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.616" endtime="20201112 09:55:13.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:12.616" endtime="20201112 09:55:13.105"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.128" endtime="20201112 09:55:13.151"></status>
</kw>
<msg timestamp="20201112 09:55:13.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.124" endtime="20201112 09:55:13.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.154" endtime="20201112 09:55:13.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.160" endtime="20201112 09:55:13.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.117" endtime="20201112 09:55:13.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.111" endtime="20201112 09:55:13.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.184" endtime="20201112 09:55:13.522"></status>
</kw>
<msg timestamp="20201112 09:55:13.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04251875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042621958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:13.181" endtime="20201112 09:55:13.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04251875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042621958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:13.532" endtime="20201112 09:55:13.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.551" endtime="20201112 09:55:13.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.173" endtime="20201112 09:55:13.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.168" endtime="20201112 09:55:13.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:13.568" level="INFO">${RESULT} = [{'time': 0.042621958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010320800000000047, 'source_diff': 0.00010320800000000047}, {'time': 0.042744917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:13.559" endtime="20201112 09:55:13.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:13.601" level="INFO">${ACCURACY} = {'diff': [0.00010320800000000047, 0.0001041810000000018, 0.00010387500000000327, 0.0001033889999999954, 0.00010404199999999864, 0.0001041810000000018, 0.00010361099999999651, 0.0001040139999999995, 0....</msg>
<status status="PASS" starttime="20201112 09:55:13.570" endtime="20201112 09:55:13.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.612" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:55:13.610" endtime="20201112 09:55:13.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.617" level="INFO">VALUE: [0.00010320800000000047, 0.0001041810000000018, 0.00010387500000000327, 0.0001033889999999954, 0.00010404199999999864, 0.0001041810000000018, 0.00010361099999999651, 0.0001040139999999995, 0.00010397200000000079, 0.00010394500000000112, 0.0001033339999999966, 0.00010374999999999968, 0.000103513999999999, 0.00010329200000000482, 0.00010365200000000269, 0.00010374999999999968, 0.00010394500000000112, 0.000103513999999999, 0.00010372200000000054, 0.00010411100000000395, 0.00010411200000000342, 0.00010343000000000158, 0.00010391599999999557, 0.00010337500000000277, 0.00010341700000000148, 0.00010408300000000481, 0.00010376399999999925, 0.00010340300000000191, 0.00010377799999999882, 0.00010402799999999907, 0.00010320899999999994, 0.00010365200000000269, 0.00010340300000000191, 0.00010355500000000517, 0.00010413899999999615, 0.0001038610000000037, 0.00010341700000000148, 0.00010395800000000122, 0.00010359699999999694, 0.00010399999999999993, 0.00010359800000000335, 0.00010338800000000287, 0.00010361099999999651, 0.00010390300000000241, 0.00010345800000000072, 0.00010416700000000223, 0.00010320800000000047, 0.00010416700000000223, 0.00010340300000000191, 0.00010422200000000104]</msg>
<status status="PASS" starttime="20201112 09:55:13.614" endtime="20201112 09:55:13.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.603" endtime="20201112 09:55:13.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.627" endtime="20201112 09:55:13.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:13.636" endtime="20201112 09:55:13.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.631" endtime="20201112 09:55:13.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.623" endtime="20201112 09:55:13.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.107" endtime="20201112 09:55:13.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.106" endtime="20201112 09:55:13.663"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.686" endtime="20201112 09:55:13.709"></status>
</kw>
<msg timestamp="20201112 09:55:13.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.683" endtime="20201112 09:55:13.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:13.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:13.712" endtime="20201112 09:55:13.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.719" endtime="20201112 09:55:13.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.675" endtime="20201112 09:55:13.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.669" endtime="20201112 09:55:13.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:13.742" endtime="20201112 09:55:14.090"></status>
</kw>
<msg timestamp="20201112 09:55:14.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043905069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044010028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:13.739" endtime="20201112 09:55:14.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043905069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044010028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.099" endtime="20201112 09:55:14.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.119" endtime="20201112 09:55:14.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.732" endtime="20201112 09:55:14.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.727" endtime="20201112 09:55:14.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:14.136" level="INFO">${RESULT} = [{'time': 0.044010028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010495900000000169, 'source_diff': 0.00010495900000000169}, {'time': 0.044132028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:14.127" endtime="20201112 09:55:14.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:14.167" level="INFO">${ACCURACY} = {'diff': [0.00010495900000000169, 0.00010440299999999597, 0.00010454199999999914, 0.00010500000000000093, 0.00010437499999999683, 0.00010422200000000104, 0.00010495799999999528, 0.0001045689999999988,...</msg>
<status status="PASS" starttime="20201112 09:55:14.138" endtime="20201112 09:55:14.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.178" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:55:14.176" endtime="20201112 09:55:14.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.183" level="INFO">VALUE: [0.00010495900000000169, 0.00010440299999999597, 0.00010454199999999914, 0.00010500000000000093, 0.00010437499999999683, 0.00010422200000000104, 0.00010495799999999528, 0.0001045689999999988, 0.00010437499999999683, 0.00010513899999999715, 0.00010452799999999957, 0.00010437499999999683, 0.00010522200000000204, 0.00010458300000000531, 0.00010452799999999957, 0.00010419399999999496, 0.00010443100000000205, 0.00010447300000000076, 0.00010420800000000147, 0.00010444500000000162, 0.00010481999999999853, 0.00010501300000000102, 0.0001048339999999981, 0.00010516600000000376, 0.00010495799999999528, 0.00010425000000000018, 0.00010511099999999801, 0.00010479199999999939, 0.00010494400000000265, 0.00010445900000000119, 0.00010475000000000068, 0.00010465199999999675, 0.00010437500000000377, 0.00010504199999999964, 0.00010459700000000488, 0.00010475000000000068, 0.00010448600000000086, 0.00010441699999999554, 0.00010493100000000255, 0.00010466599999999632, 0.00010419499999999443, 0.00010429199999999889, 0.00010431900000000549, 0.00010433299999999812, 0.00010472200000000154, 0.00010426399999999975, 0.00010518099999999586, 0.0001043610000000042, 0.00010502800000000007, 0.00010466699999999579]</msg>
<status status="PASS" starttime="20201112 09:55:14.180" endtime="20201112 09:55:14.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.169" endtime="20201112 09:55:14.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.193" endtime="20201112 09:55:14.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.202" endtime="20201112 09:55:14.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.197" endtime="20201112 09:55:14.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.188" endtime="20201112 09:55:14.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.665" endtime="20201112 09:55:14.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:13.664" endtime="20201112 09:55:14.228"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.253" endtime="20201112 09:55:14.276"></status>
</kw>
<msg timestamp="20201112 09:55:14.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.249" endtime="20201112 09:55:14.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.280" endtime="20201112 09:55:14.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.286" endtime="20201112 09:55:14.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.242" endtime="20201112 09:55:14.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.234" endtime="20201112 09:55:14.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.310" endtime="20201112 09:55:14.648"></status>
</kw>
<msg timestamp="20201112 09:55:14.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044453694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044559778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.307" endtime="20201112 09:55:14.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044453694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044559778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:14.658" endtime="20201112 09:55:14.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.677" endtime="20201112 09:55:14.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.300" endtime="20201112 09:55:14.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.295" endtime="20201112 09:55:14.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:14.695" level="INFO">${RESULT} = [{'time': 0.044559778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010608399999999935, 'source_diff': 0.00010608399999999935}, {'time': 0.044685819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:14.686" endtime="20201112 09:55:14.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:14.726" level="INFO">${ACCURACY} = {'diff': [0.00010608399999999935, 0.00010572200000000254, 0.00010574999999999474, 0.00010547200000000229, 0.00010530499999999998, 0.00010543100000000305, 0.00010534699999999869, 0.00010599999999999499...</msg>
<status status="PASS" starttime="20201112 09:55:14.697" endtime="20201112 09:55:14.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.737" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:55:14.735" endtime="20201112 09:55:14.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.742" level="INFO">VALUE: [0.00010608399999999935, 0.00010572200000000254, 0.00010574999999999474, 0.00010547200000000229, 0.00010530499999999998, 0.00010543100000000305, 0.00010534699999999869, 0.00010599999999999499, 0.00010543100000000305, 0.00010547199999999535, 0.00010599999999999499, 0.00010563899999999765, 0.00010613899999999815, 0.00010534700000000563, 0.00010547200000000229, 0.00010595799999999628, 0.00010541699999999654, 0.00010520799999999553, 0.00010615299999999772, 0.00010525000000000118, 0.000105901999999998, 0.00010590300000000441, 0.00010544500000000262, 0.00010570799999999603, 0.00010529100000000041, 0.00010597200000000279, 0.00010576400000000125, 0.00010538900000000434, 0.00010583300000000656, 0.00010543000000000358, 0.00010536199999999774, 0.00010598700000000183, 0.00010545800000000272, 0.00010520800000000247, 0.00010581900000000005, 0.00010613899999999815, 0.00010600000000000193, 0.0001060560000000002, 0.00010612499999999858, 0.00010572200000000254, 0.00010536099999999826, 0.00010569399999999646, 0.00010602700000000159, 0.00010547200000000229, 0.00010579100000000091, 0.00010569500000000287, 0.00010543100000000305, 0.00010576300000000177, 0.00010562499999999808, 0.00010563899999999765]</msg>
<status status="PASS" starttime="20201112 09:55:14.739" endtime="20201112 09:55:14.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.728" endtime="20201112 09:55:14.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.752" endtime="20201112 09:55:14.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.761" endtime="20201112 09:55:14.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.756" endtime="20201112 09:55:14.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.748" endtime="20201112 09:55:14.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.230" endtime="20201112 09:55:14.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.229" endtime="20201112 09:55:14.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:54:21.350" endtime="20201112 09:55:14.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.798" endtime="20201112 09:55:14.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.793" endtime="20201112 09:55:14.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.791" endtime="20201112 09:55:14.822"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:54:21.214" endtime="20201112 09:55:14.823" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:14.841" endtime="20201112 09:55:14.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.837" endtime="20201112 09:55:14.865"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.900" endtime="20201112 09:55:14.921"></status>
</kw>
<msg timestamp="20201112 09:55:14.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.897" endtime="20201112 09:55:14.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.929" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.924" endtime="20201112 09:55:14.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:55:14.936" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:55:14.931" endtime="20201112 09:55:14.937"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:14.889" endtime="20201112 09:55:14.939"></status>
</kw>
<status status="FAIL" starttime="20201112 09:55:14.883" endtime="20201112 09:55:14.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.880" endtime="20201112 09:55:14.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:55:14.950" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:55:14.948" endtime="20201112 09:55:14.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.943" endtime="20201112 09:55:14.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.878" endtime="20201112 09:55:14.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.876" endtime="20201112 09:55:14.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.954" endtime="20201112 09:55:14.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.871" endtime="20201112 09:55:14.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.866" endtime="20201112 09:55:14.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.834" endtime="20201112 09:55:14.961"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:14.988" endtime="20201112 09:55:15.007"></status>
</kw>
<msg timestamp="20201112 09:55:15.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:14.984" endtime="20201112 09:55:15.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.010" endtime="20201112 09:55:15.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.016" endtime="20201112 09:55:15.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.976" endtime="20201112 09:55:15.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.970" endtime="20201112 09:55:15.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.042" endtime="20201112 09:55:15.390"></status>
</kw>
<msg timestamp="20201112 09:55:15.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140746958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140753069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.037" endtime="20201112 09:55:15.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140746958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140753069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.400" endtime="20201112 09:55:15.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.419" endtime="20201112 09:55:15.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.029" endtime="20201112 09:55:15.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.025" endtime="20201112 09:55:15.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:15.437" level="INFO">${RESULT} = [{'time': 0.140753069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.140769083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:15.428" endtime="20201112 09:55:15.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:15.468" level="INFO">${ACCURACY} = {'diff': [6.111000000003086e-06, 6.026999999991789e-06, 6.097000000010455e-06, 5.541999999997271e-06, 6.5969999999970774e-06, 5.540999999997798e-06, 6.098000000009929e-06, 5.9860000000133695e-06, 5.52...</msg>
<status status="PASS" starttime="20201112 09:55:15.439" endtime="20201112 09:55:15.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.480" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:55:15.477" endtime="20201112 09:55:15.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.485" level="INFO">VALUE: [6.111000000003086e-06, 6.026999999991789e-06, 6.097000000010455e-06, 5.541999999997271e-06, 6.5969999999970774e-06, 5.540999999997798e-06, 6.098000000009929e-06, 5.9860000000133695e-06, 5.527000000005167e-06, 6.0410000000121755e-06, 6.042000000011649e-06, 5.500000000019378e-06, 6.0410000000121755e-06, 5.513999999984254e-06, 5.541999999997271e-06, 6.04099999998442e-06, 6.098000000009929e-06, 6.0279999999912626e-06, 6.05600000000428e-06, 5.542000000025027e-06, 6.0829999999900686e-06, 6.0410000000121755e-06, 6.083000000017824e-06, 5.569000000010815e-06, 6.097000000010455e-06, 5.52800000000464e-06, 6.083000000017824e-06, 6.069999999996911e-06, 5.541999999997271e-06, 6.041999999983894e-06, 6.042000000011649e-06, 5.542000000025027e-06, 6.042000000011649e-06, 5.555999999989902e-06, 6.083999999989542e-06, 6.05600000000428e-06, 6.0689999999974376e-06, 5.541999999997271e-06, 6.041999999983894e-06, 5.541999999997271e-06, 5.541999999997271e-06, 6.042000000011649e-06, 6.124999999995717e-06, 6.041999999983894e-06, 5.56899999998306e-06, 6.0279999999912626e-06, 5.958000000000352e-06, 6.0829999999900686e-06, 5.513999999984254e-06, 5.485999999998992e-06]</msg>
<status status="PASS" starttime="20201112 09:55:15.482" endtime="20201112 09:55:15.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.470" endtime="20201112 09:55:15.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.494" endtime="20201112 09:55:15.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:15.503" endtime="20201112 09:55:15.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.498" endtime="20201112 09:55:15.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.489" endtime="20201112 09:55:15.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.966" endtime="20201112 09:55:15.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.964" endtime="20201112 09:55:15.529"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.553" endtime="20201112 09:55:15.571"></status>
</kw>
<msg timestamp="20201112 09:55:15.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.549" endtime="20201112 09:55:15.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:15.574" endtime="20201112 09:55:15.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.581" endtime="20201112 09:55:15.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.542" endtime="20201112 09:55:15.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.536" endtime="20201112 09:55:15.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.605" endtime="20201112 09:55:15.943"></status>
</kw>
<msg timestamp="20201112 09:55:15.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043377708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043384292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.601" endtime="20201112 09:55:15.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:15.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043377708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043384292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:15.953" endtime="20201112 09:55:15.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:15.973" endtime="20201112 09:55:15.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.594" endtime="20201112 09:55:15.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.589" endtime="20201112 09:55:15.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:15.992" level="INFO">${RESULT} = [{'time': 0.043384292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.583999999996981e-06, 'source_diff': 6.583999999996981e-06}, {'time': 0.043400292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:15.982" endtime="20201112 09:55:15.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:16.025" level="INFO">${ACCURACY} = {'diff': [6.583999999996981e-06, 7.110999999997147e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.139000000003226e-06, 6.611000000003586e-06, 7.139000000003226e-06, 6.5969999999970774e-06, 6.597...</msg>
<status status="PASS" starttime="20201112 09:55:15.994" endtime="20201112 09:55:16.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.036" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:55:16.034" endtime="20201112 09:55:16.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.042" level="INFO">VALUE: [6.583999999996981e-06, 7.110999999997147e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.139000000003226e-06, 6.611000000003586e-06, 7.139000000003226e-06, 6.5969999999970774e-06, 6.597000000004016e-06, 7.138999999996287e-06, 6.5829999999975075e-06, 7.0419999999987715e-06, 6.59800000000349e-06, 6.597000000004016e-06, 7.0829999999980076e-06, 7.111000000004086e-06, 7.138999999996287e-06, 6.5969999999970774e-06, 7.138999999996287e-06, 6.5969999999970774e-06, 6.597999999996551e-06, 7.153000000002796e-06, 6.554999999998368e-06, 6.5969999999970774e-06, 7.0829999999980076e-06, 7.097000000004516e-06, 7.124999999996717e-06, 6.5829999999975075e-06, 6.5829999999975075e-06, 6.554999999998368e-06, 6.597000000004016e-06, 7.138999999996287e-06, 6.55600000000478e-06, 7.083999999997481e-06, 6.5829999999975075e-06, 6.583000000004446e-06, 6.5829999999975075e-06, 6.611000000003586e-06, 7.0969999999975775e-06, 6.5829999999975075e-06, 7.111000000004086e-06, 6.555999999997841e-06, 6.583000000004446e-06, 6.59800000000349e-06, 6.59800000000349e-06, 7.09800000000399e-06, 7.0969999999975775e-06, 6.583999999996981e-06, 7.111000000004086e-06, 6.666999999994927e-06]</msg>
<status status="PASS" starttime="20201112 09:55:16.039" endtime="20201112 09:55:16.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.027" endtime="20201112 09:55:16.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.051" endtime="20201112 09:55:16.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.060" endtime="20201112 09:55:16.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.056" endtime="20201112 09:55:16.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.046" endtime="20201112 09:55:16.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.532" endtime="20201112 09:55:16.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:15.530" endtime="20201112 09:55:16.086"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.110" endtime="20201112 09:55:16.127"></status>
</kw>
<msg timestamp="20201112 09:55:16.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.106" endtime="20201112 09:55:16.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.131" endtime="20201112 09:55:16.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.137" endtime="20201112 09:55:16.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.099" endtime="20201112 09:55:16.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.093" endtime="20201112 09:55:16.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.161" endtime="20201112 09:55:16.455"></status>
</kw>
<msg timestamp="20201112 09:55:16.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042671736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042679431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.158" endtime="20201112 09:55:16.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042671736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042679431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.460" endtime="20201112 09:55:16.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.468" endtime="20201112 09:55:16.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.150" endtime="20201112 09:55:16.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.146" endtime="20201112 09:55:16.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:16.477" level="INFO">${RESULT} = [{'time': 0.042679431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694999999995067e-06, 'source_diff': 7.694999999995067e-06}, {'time': 0.042694194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:16.473" endtime="20201112 09:55:16.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:16.491" level="INFO">${ACCURACY} = {'diff': [7.694999999995067e-06, 8.193999999996093e-06, 7.625000000004156e-06, 7.651999999996884e-06, 7.639000000003726e-06, 7.665999999996453e-06, 8.194000000003032e-06, 8.166000000003892e-06, 7.6250...</msg>
<status status="PASS" starttime="20201112 09:55:16.478" endtime="20201112 09:55:16.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.496" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:55:16.495" endtime="20201112 09:55:16.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.499" level="INFO">VALUE: [7.694999999995067e-06, 8.193999999996093e-06, 7.625000000004156e-06, 7.651999999996884e-06, 7.639000000003726e-06, 7.665999999996453e-06, 8.194000000003032e-06, 8.166000000003892e-06, 7.625000000004156e-06, 7.625000000004156e-06, 7.652999999996357e-06, 8.195000000002506e-06, 7.5969999999980775e-06, 7.638999999996787e-06, 8.137999999997814e-06, 7.638000000004252e-06, 8.236000000001742e-06, 7.638999999996787e-06, 7.652999999996357e-06, 8.151999999997384e-06, 7.707999999995163e-06, 8.209000000002076e-06, 8.208999999995137e-06, 8.181000000002936e-06, 8.208000000002602e-06, 8.222000000002172e-06, 7.624999999997217e-06, 8.153000000003796e-06, 7.653000000003296e-06, 8.193999999996093e-06, 7.653000000003296e-06, 8.180000000003462e-06, 8.139000000004226e-06, 7.681000000002436e-06, 7.667000000002866e-06, 7.666999999995927e-06, 8.194000000003032e-06, 8.181000000002936e-06, 8.153000000003796e-06, 7.651999999996884e-06, 8.180999999995997e-06, 7.597999999997551e-06, 8.151999999997384e-06, 7.568999999998938e-06, 7.652999999996357e-06, 7.638999999996787e-06, 7.651999999996884e-06, 8.179999999996523e-06, 8.193999999996093e-06, 7.653000000003296e-06]</msg>
<status status="PASS" starttime="20201112 09:55:16.498" endtime="20201112 09:55:16.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.492" endtime="20201112 09:55:16.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.504" endtime="20201112 09:55:16.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.508" endtime="20201112 09:55:16.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.506" endtime="20201112 09:55:16.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.502" endtime="20201112 09:55:16.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.088" endtime="20201112 09:55:16.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.087" endtime="20201112 09:55:16.529"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.540" endtime="20201112 09:55:16.555"></status>
</kw>
<msg timestamp="20201112 09:55:16.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.538" endtime="20201112 09:55:16.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.556" endtime="20201112 09:55:16.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.559" endtime="20201112 09:55:16.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.535" endtime="20201112 09:55:16.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.532" endtime="20201112 09:55:16.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.570" endtime="20201112 09:55:16.856"></status>
</kw>
<msg timestamp="20201112 09:55:16.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024703944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.569" endtime="20201112 09:55:16.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024703944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.861" endtime="20201112 09:55:16.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.869" endtime="20201112 09:55:16.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.565" endtime="20201112 09:55:16.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.563" endtime="20201112 09:55:16.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:16.878" level="INFO">${RESULT} = [{'time': 0.024712569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.024726417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:16.874" endtime="20201112 09:55:16.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:16.892" level="INFO">${ACCURACY} = {'diff': [8.625000000001687e-06, 9.306000000000592e-06, 9.236999999998746e-06, 9.194000000000563e-06, 8.680999999999967e-06, 9.152999999997857e-06, 9.208000000000133e-06, 9.236999999998746e-06, 9.1950...</msg>
<status status="PASS" starttime="20201112 09:55:16.879" endtime="20201112 09:55:16.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.898" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:55:16.897" endtime="20201112 09:55:16.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.901" level="INFO">VALUE: [8.625000000001687e-06, 9.306000000000592e-06, 9.236999999998746e-06, 9.194000000000563e-06, 8.680999999999967e-06, 9.152999999997857e-06, 9.208000000000133e-06, 9.236999999998746e-06, 9.195000000000036e-06, 8.153000000000327e-06, 8.679999999997023e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.721999999999203e-06, 9.208000000000133e-06, 8.694999999999536e-06, 9.264000000001882e-06, 9.221999999999703e-06, 9.167000000000897e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.153000000000327e-06, 8.707999999999633e-06, 9.195000000000036e-06, 9.249999999998842e-06, 8.680999999999967e-06, 9.207999999996663e-06, 8.694999999999536e-06, 9.153000000001327e-06, 8.680000000000493e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.208999999999606e-06, 9.195000000000036e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 9.264000000001882e-06, 9.263999999998412e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.667000000000397e-06, 9.221999999999703e-06, 8.709000000002576e-06, 8.694999999999536e-06, 9.292000000001022e-06, 9.222000000003172e-06, 9.277999999997982e-06]</msg>
<status status="PASS" starttime="20201112 09:55:16.899" endtime="20201112 09:55:16.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.893" endtime="20201112 09:55:16.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.905" endtime="20201112 09:55:16.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:16.909" endtime="20201112 09:55:16.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.907" endtime="20201112 09:55:16.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.903" endtime="20201112 09:55:16.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.530" endtime="20201112 09:55:16.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.530" endtime="20201112 09:55:16.931"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.941" endtime="20201112 09:55:16.956"></status>
</kw>
<msg timestamp="20201112 09:55:16.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.940" endtime="20201112 09:55:16.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:16.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:16.958" endtime="20201112 09:55:16.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.961" endtime="20201112 09:55:16.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.937" endtime="20201112 09:55:16.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.934" endtime="20201112 09:55:16.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:16.972" endtime="20201112 09:55:17.304"></status>
</kw>
<msg timestamp="20201112 09:55:17.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024783625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024793375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:16.971" endtime="20201112 09:55:17.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024783625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024793375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.314" endtime="20201112 09:55:17.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.333" endtime="20201112 09:55:17.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.967" endtime="20201112 09:55:17.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.965" endtime="20201112 09:55:17.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.351" level="INFO">${RESULT} = [{'time': 0.024793375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.024808375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:17.342" endtime="20201112 09:55:17.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:17.384" level="INFO">${ACCURACY} = {'diff': [9.749999999999343e-06, 1.0249999999999843e-05, 9.749999999999343e-06, 9.763999999998912e-06, 1.0263999999999412e-05, 9.778000000001952e-06, 1.0290999999999079e-05, 9.735999999999773e-06, 9.7...</msg>
<status status="PASS" starttime="20201112 09:55:17.353" endtime="20201112 09:55:17.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.395" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:55:17.393" endtime="20201112 09:55:17.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.401" level="INFO">VALUE: [9.749999999999343e-06, 1.0249999999999843e-05, 9.749999999999343e-06, 9.763999999998912e-06, 1.0263999999999412e-05, 9.778000000001952e-06, 1.0290999999999079e-05, 9.735999999999773e-06, 9.762999999999439e-06, 1.0320000000001162e-05, 9.236999999998746e-06, 1.0223000000000176e-05, 9.208000000000133e-06, 1.0318999999998218e-05, 9.208000000000133e-06, 9.722000000000203e-06, 9.763999999998912e-06, 9.235999999999273e-06, 9.722000000000203e-06, 1.0304999999998649e-05, 1.0319000000001688e-05, 1.0305000000002118e-05, 9.735999999999773e-06, 1.0278000000002452e-05, 1.0305999999998122e-05, 9.805999999997622e-06, 1.0194999999997567e-05, 9.763999999998912e-06, 9.778000000001952e-06, 9.167000000000897e-06, 9.681000000000967e-06, 9.249999999998842e-06, 9.764000000002382e-06, 9.195000000000036e-06, 9.235999999999273e-06, 9.763999999998912e-06, 1.0304999999998649e-05, 9.208999999999606e-06, 1.0235999999996803e-05, 9.749999999999343e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.750000000002812e-06, 9.749999999999343e-06, 9.737000000002716e-06, 9.764000000002382e-06, 9.749999999999343e-06, 9.764000000002382e-06, 1.0291000000002548e-05, 9.750000000002812e-06]</msg>
<status status="PASS" starttime="20201112 09:55:17.397" endtime="20201112 09:55:17.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.386" endtime="20201112 09:55:17.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.411" endtime="20201112 09:55:17.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:17.419" endtime="20201112 09:55:17.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.415" endtime="20201112 09:55:17.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.406" endtime="20201112 09:55:17.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.932" endtime="20201112 09:55:17.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:16.931" endtime="20201112 09:55:17.445"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.468" endtime="20201112 09:55:17.486"></status>
</kw>
<msg timestamp="20201112 09:55:17.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.465" endtime="20201112 09:55:17.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:17.490" endtime="20201112 09:55:17.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.496" endtime="20201112 09:55:17.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.457" endtime="20201112 09:55:17.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.451" endtime="20201112 09:55:17.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.520" endtime="20201112 09:55:17.857"></status>
</kw>
<msg timestamp="20201112 09:55:17.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042699431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042710264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.517" endtime="20201112 09:55:17.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042699431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042710264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:17.867" endtime="20201112 09:55:17.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.886" endtime="20201112 09:55:17.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.509" endtime="20201112 09:55:17.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.504" endtime="20201112 09:55:17.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:17.904" level="INFO">${RESULT} = [{'time': 0.042710264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0832999999994819e-05, 'source_diff': 1.0832999999994819e-05}, {'time': 0.042727556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:17.895" endtime="20201112 09:55:17.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:17.938" level="INFO">${ACCURACY} = {'diff': [1.0832999999994819e-05, 1.1320000000002162e-05, 1.1278000000003452e-05, 1.0764000000003382e-05, 1.0805000000002618e-05, 1.1375000000000968e-05, 1.029099999999561e-05, 1.0208999999997137e-05,...</msg>
<status status="PASS" starttime="20201112 09:55:17.907" endtime="20201112 09:55:17.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.950" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:55:17.946" endtime="20201112 09:55:17.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:17.956" level="INFO">VALUE: [1.0832999999994819e-05, 1.1320000000002162e-05, 1.1278000000003452e-05, 1.0764000000003382e-05, 1.0805000000002618e-05, 1.1375000000000968e-05, 1.029099999999561e-05, 1.0208999999997137e-05, 1.0819000000002188e-05, 1.079099999999611e-05, 1.0805000000002618e-05, 1.1305000000003118e-05, 1.0834000000001232e-05, 1.0805000000002618e-05, 1.1319999999995223e-05, 1.1346999999994889e-05, 1.1361000000001398e-05, 1.0306000000001592e-05, 1.0791999999995583e-05, 1.0791000000003048e-05, 1.0806000000002092e-05, 1.1361000000001398e-05, 1.0264000000002882e-05, 1.0736000000004242e-05, 1.0806000000002092e-05, 1.0820000000001662e-05, 1.0820000000001662e-05, 1.1375000000000968e-05, 1.1319000000002688e-05, 1.079099999999611e-05, 1.0805000000002618e-05, 1.0805000000002618e-05, 1.0874999999993529e-05, 1.1319000000002688e-05, 1.0833000000001758e-05, 1.0806000000002092e-05, 1.0806000000002092e-05, 1.0819000000002188e-05, 1.0319000000001688e-05, 1.0820000000001662e-05, 1.0778000000002952e-05, 1.0820000000001662e-05, 1.1360999999994459e-05, 1.0847000000001328e-05, 1.0819999999994723e-05, 1.0806000000002092e-05, 1.0263999999995943e-05, 1.0806000000002092e-05, 1.0263999999995943e-05, 1.0847000000001328e-05]</msg>
<status status="PASS" starttime="20201112 09:55:17.952" endtime="20201112 09:55:17.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.939" endtime="20201112 09:55:17.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:17.966" endtime="20201112 09:55:17.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:17.974" endtime="20201112 09:55:17.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.970" endtime="20201112 09:55:17.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.961" endtime="20201112 09:55:17.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.447" endtime="20201112 09:55:17.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:17.446" endtime="20201112 09:55:18.000"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.025" endtime="20201112 09:55:18.043"></status>
</kw>
<msg timestamp="20201112 09:55:18.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.021" endtime="20201112 09:55:18.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.047" endtime="20201112 09:55:18.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.053" endtime="20201112 09:55:18.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.013" endtime="20201112 09:55:18.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.007" endtime="20201112 09:55:18.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.077" endtime="20201112 09:55:18.416"></status>
</kw>
<msg timestamp="20201112 09:55:18.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044366778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044378653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.074" endtime="20201112 09:55:18.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044366778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044378653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.426" endtime="20201112 09:55:18.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.446" endtime="20201112 09:55:18.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.066" endtime="20201112 09:55:18.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.062" endtime="20201112 09:55:18.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:18.464" level="INFO">${RESULT} = [{'time': 0.044378653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1874999999994529e-05, 'source_diff': 1.1874999999994529e-05}, {'time': 0.044400375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:18.454" endtime="20201112 09:55:18.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:18.495" level="INFO">${ACCURACY} = {'diff': [1.1874999999994529e-05, 1.1347000000001828e-05, 1.1346999999994889e-05, 1.1875000000001468e-05, 1.1375000000000968e-05, 1.2375000000001968e-05, 1.1889000000001038e-05, 1.1875000000001468e-05...</msg>
<status status="PASS" starttime="20201112 09:55:18.466" endtime="20201112 09:55:18.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.506" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:55:18.504" endtime="20201112 09:55:18.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.512" level="INFO">VALUE: [1.1874999999994529e-05, 1.1347000000001828e-05, 1.1346999999994889e-05, 1.1875000000001468e-05, 1.1375000000000968e-05, 1.2375000000001968e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1888999999994099e-05, 1.1875000000001468e-05, 1.1861000000001898e-05, 1.2415999999994265e-05, 1.1319000000002688e-05, 1.1862000000001371e-05, 1.1403000000000107e-05, 1.1875000000001468e-05, 1.1917000000000177e-05, 1.2360999999995459e-05, 1.2417000000000677e-05, 1.1875000000001468e-05, 1.2389000000001538e-05, 1.1860999999994959e-05, 1.1889000000001038e-05, 1.2374999999995029e-05, 1.2375000000001968e-05, 1.1875000000001468e-05, 1.1319999999995223e-05, 1.1305000000003118e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1805000000003618e-05, 1.1875000000001468e-05, 1.1375000000000968e-05, 1.1320000000002162e-05, 1.1860999999994959e-05, 1.1888000000001564e-05, 1.2472999999998957e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.1875000000001468e-05, 1.1320000000002162e-05, 1.2374999999995029e-05, 1.1861000000001898e-05, 1.2430000000000774e-05, 1.1875000000001468e-05, 1.1874999999994529e-05, 1.1861000000001898e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1875000000001468e-05]</msg>
<status status="PASS" starttime="20201112 09:55:18.509" endtime="20201112 09:55:18.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.497" endtime="20201112 09:55:18.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.522" endtime="20201112 09:55:18.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:18.532" endtime="20201112 09:55:18.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.527" endtime="20201112 09:55:18.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.517" endtime="20201112 09:55:18.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.002" endtime="20201112 09:55:18.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.001" endtime="20201112 09:55:18.558"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.581" endtime="20201112 09:55:18.600"></status>
</kw>
<msg timestamp="20201112 09:55:18.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.578" endtime="20201112 09:55:18.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:18.603" endtime="20201112 09:55:18.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.610" endtime="20201112 09:55:18.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.570" endtime="20201112 09:55:18.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.565" endtime="20201112 09:55:18.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.634" endtime="20201112 09:55:18.970"></status>
</kw>
<msg timestamp="20201112 09:55:18.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042794556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042807486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.630" endtime="20201112 09:55:18.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:18.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042794556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042807486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:18.980" endtime="20201112 09:55:18.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:18.999" endtime="20201112 09:55:19.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.623" endtime="20201112 09:55:19.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.618" endtime="20201112 09:55:19.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:19.017" level="INFO">${RESULT} = [{'time': 0.042807486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2930000000001274e-05, 'source_diff': 1.2930000000001274e-05}, {'time': 0.042832583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:19.008" endtime="20201112 09:55:19.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:19.049" level="INFO">${ACCURACY} = {'diff': [1.2930000000001274e-05, 1.3458000000000914e-05, 1.2931000000000747e-05, 1.2931000000000747e-05, 1.3415999999995265e-05, 1.3431000000001247e-05, 1.2945000000000317e-05, 1.2375000000001968e-05...</msg>
<status status="PASS" starttime="20201112 09:55:19.019" endtime="20201112 09:55:19.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.061" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:55:19.058" endtime="20201112 09:55:19.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.067" level="INFO">VALUE: [1.2930000000001274e-05, 1.3458000000000914e-05, 1.2931000000000747e-05, 1.2931000000000747e-05, 1.3415999999995265e-05, 1.3431000000001247e-05, 1.2945000000000317e-05, 1.2375000000001968e-05, 1.2931000000000747e-05, 1.2917000000001178e-05, 1.3472000000000484e-05, 1.2416000000001204e-05, 1.2931000000000747e-05, 1.2943999999993905e-05, 1.2930000000001274e-05, 1.2861000000002898e-05, 1.2332999999996319e-05, 1.2930000000001274e-05, 1.2931000000000747e-05, 1.2931000000000747e-05, 1.2916999999994239e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2362000000001871e-05, 1.2915999999994765e-05, 1.2375000000001968e-05, 1.2431000000000247e-05, 1.2375000000001968e-05, 1.2916000000001704e-05, 1.2430999999993309e-05, 1.2917000000001178e-05, 1.2916999999994239e-05, 1.2917000000001178e-05, 1.2375000000001968e-05, 1.3431000000001247e-05, 1.2916000000001704e-05, 1.3486000000000054e-05, 1.3471999999993545e-05, 1.2431000000000247e-05, 1.2417000000000677e-05, 1.2417000000000677e-05, 1.2931000000000747e-05, 1.2917000000001178e-05, 1.3443999999994405e-05, 1.2375000000001968e-05, 1.2916000000001704e-05, 1.2916000000001704e-05, 1.2929999999994335e-05, 1.2403000000001108e-05, 1.2931000000000747e-05]</msg>
<status status="PASS" starttime="20201112 09:55:19.063" endtime="20201112 09:55:19.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.051" endtime="20201112 09:55:19.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.077" endtime="20201112 09:55:19.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:19.085" endtime="20201112 09:55:19.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.081" endtime="20201112 09:55:19.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.072" endtime="20201112 09:55:19.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.560" endtime="20201112 09:55:19.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:18.559" endtime="20201112 09:55:19.111"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.136" endtime="20201112 09:55:19.154"></status>
</kw>
<msg timestamp="20201112 09:55:19.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.133" endtime="20201112 09:55:19.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.157" endtime="20201112 09:55:19.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.164" endtime="20201112 09:55:19.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.126" endtime="20201112 09:55:19.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.118" endtime="20201112 09:55:19.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.188" endtime="20201112 09:55:19.526"></status>
</kw>
<msg timestamp="20201112 09:55:19.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04429975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044313194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:19.185" endtime="20201112 09:55:19.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04429975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044313194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:19.536" endtime="20201112 09:55:19.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.556" endtime="20201112 09:55:19.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.177" endtime="20201112 09:55:19.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.173" endtime="20201112 09:55:19.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:19.574" level="INFO">${RESULT} = [{'time': 0.044313194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3444000000001344e-05, 'source_diff': 1.3444000000001344e-05}, {'time': 0.044330444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:19.565" endtime="20201112 09:55:19.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:19.605" level="INFO">${ACCURACY} = {'diff': [1.3444000000001344e-05, 1.3957999999994475e-05, 1.3972000000000984e-05, 1.3403000000002108e-05, 1.3971999999994045e-05, 1.3972000000000984e-05, 1.3459000000000387e-05, 1.3430000000001774e-05...</msg>
<status status="PASS" starttime="20201112 09:55:19.576" endtime="20201112 09:55:19.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.617" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:55:19.615" endtime="20201112 09:55:19.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.623" level="INFO">VALUE: [1.3444000000001344e-05, 1.3957999999994475e-05, 1.3972000000000984e-05, 1.3403000000002108e-05, 1.3971999999994045e-05, 1.3972000000000984e-05, 1.3459000000000387e-05, 1.3430000000001774e-05, 1.3445000000000817e-05, 1.3916000000002704e-05, 1.4013999999999693e-05, 1.4013999999999693e-05, 1.3430000000001774e-05, 1.452700000000029e-05, 1.3445000000000817e-05, 1.3986000000000554e-05, 1.3417000000001678e-05, 1.3431000000001247e-05, 1.3472999999999957e-05, 1.3986000000000554e-05, 1.452700000000029e-05, 1.3486000000000054e-05, 1.3416999999994739e-05, 1.3987000000000027e-05, 1.3973000000000457e-05, 1.3471999999993545e-05, 1.4514000000000193e-05, 1.3527999999998763e-05, 1.3459000000000387e-05, 1.3457999999993975e-05, 1.4514000000000193e-05, 1.3472999999999957e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3417000000001678e-05, 1.3930000000002274e-05, 1.4473000000000957e-05, 1.4500000000000624e-05, 1.3986000000000554e-05, 1.3929999999995335e-05, 1.3986000000000554e-05, 1.3972999999993518e-05, 1.3972000000000984e-05, 1.4500000000000624e-05, 1.3986000000000554e-05, 1.4486000000001054e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3457999999993975e-05]</msg>
<status status="PASS" starttime="20201112 09:55:19.619" endtime="20201112 09:55:19.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.607" endtime="20201112 09:55:19.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.632" endtime="20201112 09:55:19.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:19.641" endtime="20201112 09:55:19.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.636" endtime="20201112 09:55:19.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.628" endtime="20201112 09:55:19.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.114" endtime="20201112 09:55:19.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.112" endtime="20201112 09:55:19.667"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.690" endtime="20201112 09:55:19.711"></status>
</kw>
<msg timestamp="20201112 09:55:19.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.687" endtime="20201112 09:55:19.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:19.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:19.715" endtime="20201112 09:55:19.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.722" endtime="20201112 09:55:19.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.680" endtime="20201112 09:55:19.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.674" endtime="20201112 09:55:19.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:19.745" endtime="20201112 09:55:20.084"></status>
</kw>
<msg timestamp="20201112 09:55:20.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045341014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045356083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:19.742" endtime="20201112 09:55:20.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045341014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045356083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.094" endtime="20201112 09:55:20.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.114" endtime="20201112 09:55:20.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.735" endtime="20201112 09:55:20.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.730" endtime="20201112 09:55:20.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:20.132" level="INFO">${RESULT} = [{'time': 0.045356083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.50689999999995e-05, 'source_diff': 1.50689999999995e-05}, {'time': 0.045379875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:20.123" endtime="20201112 09:55:20.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:20.165" level="INFO">${ACCURACY} = {'diff': [1.50689999999995e-05, 1.4500000000000624e-05, 1.5041999999999833e-05, 1.4431000000002248e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.4986000000001554e-05, 1.502700000000079e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:55:20.134" endtime="20201112 09:55:20.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.177" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:55:20.174" endtime="20201112 09:55:20.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.182" level="INFO">VALUE: [1.50689999999995e-05, 1.4500000000000624e-05, 1.5041999999999833e-05, 1.4431000000002248e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.4986000000001554e-05, 1.502700000000079e-05, 1.4514000000000193e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.508299999999907e-05, 1.5041999999999833e-05, 1.4485999999994115e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.5069999999998973e-05, 1.4486000000001054e-05, 1.4485999999994115e-05, 1.4971999999995045e-05, 1.4486000000001054e-05, 1.501300000000122e-05, 1.502700000000079e-05, 1.4500000000000624e-05, 1.508299999999907e-05, 1.4500000000000624e-05, 1.5041999999999833e-05, 1.4541999999999333e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1.4486000000001054e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.508299999999907e-05, 1.504100000000036e-05, 1.50689999999995e-05, 1.5055999999999403e-05, 1.4486000000001054e-05, 1.4527999999999763e-05, 1.50689999999995e-05, 1.5041999999999833e-05, 1.508299999999907e-05, 1.5027999999993324e-05, 1.504100000000036e-05, 1.4541999999999333e-05, 1.5028000000000263e-05, 1.5070000000005912e-05, 1.5014000000000693e-05, 1.5014000000000693e-05]</msg>
<status status="PASS" starttime="20201112 09:55:20.179" endtime="20201112 09:55:20.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.167" endtime="20201112 09:55:20.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.192" endtime="20201112 09:55:20.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:20.200" endtime="20201112 09:55:20.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.196" endtime="20201112 09:55:20.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.187" endtime="20201112 09:55:20.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.669" endtime="20201112 09:55:20.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:19.668" endtime="20201112 09:55:20.226"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.246" endtime="20201112 09:55:20.261"></status>
</kw>
<msg timestamp="20201112 09:55:20.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.244" endtime="20201112 09:55:20.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.263" endtime="20201112 09:55:20.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.266" endtime="20201112 09:55:20.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.239" endtime="20201112 09:55:20.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.233" endtime="20201112 09:55:20.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.278" endtime="20201112 09:55:20.603"></status>
</kw>
<msg timestamp="20201112 09:55:20.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037330333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037345917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.276" endtime="20201112 09:55:20.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037330333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037345917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.613" endtime="20201112 09:55:20.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.632" endtime="20201112 09:55:20.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.272" endtime="20201112 09:55:20.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.270" endtime="20201112 09:55:20.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:20.650" level="INFO">${RESULT} = [{'time': 0.037345917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5583999999999043e-05, 'source_diff': 1.5583999999999043e-05}, {'time': 0.037365708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:20.641" endtime="20201112 09:55:20.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:20.681" level="INFO">${ACCURACY} = {'diff': [1.5583999999999043e-05, 1.608300000000007e-05, 1.5583999999999043e-05, 1.6097999999999113e-05, 1.659700000000014e-05, 1.559699999999914e-05, 1.5542000000000333e-05, 1.5542000000000333e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:55:20.652" endtime="20201112 09:55:20.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.693" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:55:20.690" endtime="20201112 09:55:20.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.698" level="INFO">VALUE: [1.5583999999999043e-05, 1.608300000000007e-05, 1.5583999999999043e-05, 1.6097999999999113e-05, 1.659700000000014e-05, 1.559699999999914e-05, 1.5542000000000333e-05, 1.5542000000000333e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.609699999999964e-05, 1.6056000000000403e-05, 1.608300000000007e-05, 1.561099999999871e-05, 1.612499999999878e-05, 1.608300000000007e-05, 1.60690000000005e-05, 1.6084000000006482e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.561099999999871e-05, 1.554100000000086e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.5611000000005648e-05, 1.611099999999921e-05, 1.608300000000007e-05, 1.5542000000000333e-05, 1.6083999999999543e-05, 1.6083999999999543e-05, 1.609699999999964e-05, 1.559699999999914e-05, 1.6083999999999543e-05, 1.6041999999993894e-05, 1.60690000000005e-05, 1.561099999999871e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.5555999999999903e-05, 1.60690000000005e-05, 1.554099999999392e-05, 1.612499999999878e-05, 1.5569e-05, 1.6111000000006148e-05, 1.5583999999999043e-05, 1.608300000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:55:20.695" endtime="20201112 09:55:20.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.683" endtime="20201112 09:55:20.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.708" endtime="20201112 09:55:20.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:20.717" endtime="20201112 09:55:20.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.712" endtime="20201112 09:55:20.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.703" endtime="20201112 09:55:20.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.228" endtime="20201112 09:55:20.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.227" endtime="20201112 09:55:20.743"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.766" endtime="20201112 09:55:20.784"></status>
</kw>
<msg timestamp="20201112 09:55:20.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.762" endtime="20201112 09:55:20.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:20.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:20.787" endtime="20201112 09:55:20.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.794" endtime="20201112 09:55:20.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.755" endtime="20201112 09:55:20.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.749" endtime="20201112 09:55:20.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:20.818" endtime="20201112 09:55:21.158"></status>
</kw>
<msg timestamp="20201112 09:55:21.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042762972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042780139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:20.814" endtime="20201112 09:55:21.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042762972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042780139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.168" endtime="20201112 09:55:21.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.188" endtime="20201112 09:55:21.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.807" endtime="20201112 09:55:21.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.802" endtime="20201112 09:55:21.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:21.205" level="INFO">${RESULT} = [{'time': 0.042780139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.716699999999849e-05, 'source_diff': 1.716699999999849e-05}, {'time': 0.042806292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:21.196" endtime="20201112 09:55:21.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:21.237" level="INFO">${ACCURACY} = {'diff': [1.716699999999849e-05, 1.6653000000005358e-05, 1.655500000000143e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.713899999999935e-05, 1.663899999999885e-05, 1.712499999999978e-05, 1.665...</msg>
<status status="PASS" starttime="20201112 09:55:21.207" endtime="20201112 09:55:21.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.248" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:55:21.245" endtime="20201112 09:55:21.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.253" level="INFO">VALUE: [1.716699999999849e-05, 1.6653000000005358e-05, 1.655500000000143e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.713899999999935e-05, 1.663899999999885e-05, 1.712499999999978e-05, 1.6653000000005358e-05, 1.715299999999892e-05, 1.7139000000006288e-05, 1.6637999999999376e-05, 1.6637999999999376e-05, 1.715299999999892e-05, 1.6639000000005788e-05, 1.663899999999885e-05, 1.6514000000002194e-05, 1.6611999999999183e-05, 1.713899999999935e-05, 1.662499999999928e-05, 1.715299999999892e-05, 1.712499999999978e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.6639000000005788e-05, 1.713899999999935e-05, 1.659700000000014e-05, 1.716699999999849e-05, 1.662499999999928e-05, 1.7167000000005428e-05, 1.662499999999928e-05, 1.7137999999999876e-05, 1.663899999999885e-05, 1.659700000000014e-05, 1.713899999999935e-05, 1.712499999999978e-05, 1.7207999999997725e-05, 1.6556000000000903e-05, 1.712499999999978e-05, 1.6681000000004498e-05, 1.6584000000000043e-05, 1.715299999999892e-05, 1.6639000000005788e-05, 1.712499999999978e-05, 1.7070000000000973e-05, 1.6542000000001333e-05, 1.708300000000107e-05, 1.658300000000057e-05, 1.713899999999935e-05, 1.659700000000014e-05]</msg>
<status status="PASS" starttime="20201112 09:55:21.250" endtime="20201112 09:55:21.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.238" endtime="20201112 09:55:21.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.263" endtime="20201112 09:55:21.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:21.272" endtime="20201112 09:55:21.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.267" endtime="20201112 09:55:21.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.258" endtime="20201112 09:55:21.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.745" endtime="20201112 09:55:21.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:20.743" endtime="20201112 09:55:21.298"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.321" endtime="20201112 09:55:21.341"></status>
</kw>
<msg timestamp="20201112 09:55:21.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.318" endtime="20201112 09:55:21.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.344" endtime="20201112 09:55:21.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.351" endtime="20201112 09:55:21.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.310" endtime="20201112 09:55:21.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.304" endtime="20201112 09:55:21.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.375" endtime="20201112 09:55:21.716"></status>
</kw>
<msg timestamp="20201112 09:55:21.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042850486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042868139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.371" endtime="20201112 09:55:21.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042850486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042868139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.726" endtime="20201112 09:55:21.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.746" endtime="20201112 09:55:21.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.364" endtime="20201112 09:55:21.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.359" endtime="20201112 09:55:21.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:21.764" level="INFO">${RESULT} = [{'time': 0.042868139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.765299999999942e-05, 'source_diff': 1.765299999999942e-05}, {'time': 0.042901528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:21.754" endtime="20201112 09:55:21.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:21.795" level="INFO">${ACCURACY} = {'diff': [1.765299999999942e-05, 1.82089999999982e-05, 1.7638000000000376e-05, 1.8179999999999585e-05, 1.8195000000005568e-05, 1.765299999999942e-05, 1.7722000000004734e-05, 1.7125000000006718e-05, 1....</msg>
<status status="PASS" starttime="20201112 09:55:21.766" endtime="20201112 09:55:21.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.806" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:55:21.804" endtime="20201112 09:55:21.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.812" level="INFO">VALUE: [1.765299999999942e-05, 1.82089999999982e-05, 1.7638000000000376e-05, 1.8179999999999585e-05, 1.8195000000005568e-05, 1.765299999999942e-05, 1.7722000000004734e-05, 1.7125000000006718e-05, 1.7679999999999085e-05, 1.8221999999998295e-05, 1.8250000000004374e-05, 1.763899999999985e-05, 1.8181000000005998e-05, 1.763899999999985e-05, 1.8235999999997865e-05, 1.8194000000006094e-05, 1.819499999999863e-05, 1.761100000000071e-05, 1.8207999999998725e-05, 1.7693999999998655e-05, 1.8221999999998295e-05, 1.8235999999997865e-05, 1.8193999999999155e-05, 1.8207999999998725e-05, 1.7694000000005594e-05, 1.8193999999999155e-05, 1.7695000000005068e-05, 1.7665999999999515e-05, 1.766699999999899e-05, 1.815299999999992e-05, 1.7707999999998225e-05, 1.765299999999942e-05, 1.82089999999982e-05, 1.82089999999982e-05, 1.7695000000005068e-05, 1.769499999999813e-05, 1.8221999999998295e-05, 1.7693999999998655e-05, 1.772299999999727e-05, 1.8208000000005664e-05, 1.7693999999998655e-05, 1.8207999999998725e-05, 1.7693999999998655e-05, 1.768099999999856e-05, 1.765299999999942e-05, 1.819499999999863e-05, 1.7665999999999515e-05, 1.8193999999999155e-05, 1.765299999999942e-05, 1.713899999999935e-05]</msg>
<status status="PASS" starttime="20201112 09:55:21.808" endtime="20201112 09:55:21.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.797" endtime="20201112 09:55:21.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.822" endtime="20201112 09:55:21.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:21.830" endtime="20201112 09:55:21.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.826" endtime="20201112 09:55:21.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.817" endtime="20201112 09:55:21.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.300" endtime="20201112 09:55:21.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.299" endtime="20201112 09:55:21.856"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.880" endtime="20201112 09:55:21.898"></status>
</kw>
<msg timestamp="20201112 09:55:21.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.876" endtime="20201112 09:55:21.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:21.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:21.901" endtime="20201112 09:55:21.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.908" endtime="20201112 09:55:21.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.869" endtime="20201112 09:55:21.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.863" endtime="20201112 09:55:21.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:21.932" endtime="20201112 09:55:22.272"></status>
</kw>
<msg timestamp="20201112 09:55:22.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043184069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043202806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:21.928" endtime="20201112 09:55:22.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043184069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043202806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:22.281" endtime="20201112 09:55:22.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.301" endtime="20201112 09:55:22.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.921" endtime="20201112 09:55:22.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.916" endtime="20201112 09:55:22.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:22.321" level="INFO">${RESULT} = [{'time': 0.043202806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8737000000004778e-05, 'source_diff': 1.8737000000004778e-05}, {'time': 0.043231153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:22.311" endtime="20201112 09:55:22.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:22.354" level="INFO">${ACCURACY} = {'diff': [1.8737000000004778e-05, 1.9249999999998435e-05, 1.8707999999999225e-05, 1.9249999999998435e-05, 1.9292000000004084e-05, 1.9263999999998005e-05, 1.9263999999998005e-05, 1.9320000000003223e-05...</msg>
<status status="PASS" starttime="20201112 09:55:22.323" endtime="20201112 09:55:22.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.365" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:55:22.363" endtime="20201112 09:55:22.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.371" level="INFO">VALUE: [1.8737000000004778e-05, 1.9249999999998435e-05, 1.8707999999999225e-05, 1.9249999999998435e-05, 1.9292000000004084e-05, 1.9263999999998005e-05, 1.9263999999998005e-05, 1.9320000000003223e-05, 1.8763999999997505e-05, 1.9249999999998435e-05, 1.8763999999997505e-05, 1.8680000000000085e-05, 1.9235999999998865e-05, 1.9263999999998005e-05, 1.8736000000005304e-05, 1.9249999999998435e-05, 1.8735999999998365e-05, 1.8750000000004874e-05, 1.881900000000325e-05, 1.9249999999998435e-05, 1.9235999999998865e-05, 1.8735999999998365e-05, 1.9235999999998865e-05, 1.931900000000375e-05, 1.8693999999999655e-05, 1.9249999999998435e-05, 1.9277999999997575e-05, 1.9263999999998005e-05, 1.869499999999913e-05, 1.919499999999963e-05, 1.8750000000004874e-05, 1.87089999999987e-05, 1.8750000000004874e-05, 1.8735999999998365e-05, 1.929099999999767e-05, 1.8763999999997505e-05, 1.9263999999998005e-05, 1.8721999999998795e-05, 1.87089999999987e-05, 1.8736000000005304e-05, 1.9249999999998435e-05, 1.9263999999998005e-05, 1.926300000000547e-05, 1.8235999999997865e-05, 1.9221999999999295e-05, 1.8721999999998795e-05, 1.8735999999998365e-05, 1.8763999999997505e-05, 1.8707999999999225e-05, 1.9263999999998005e-05]</msg>
<status status="PASS" starttime="20201112 09:55:22.368" endtime="20201112 09:55:22.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.356" endtime="20201112 09:55:22.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.389" endtime="20201112 09:55:22.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:22.397" endtime="20201112 09:55:22.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.393" endtime="20201112 09:55:22.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.384" endtime="20201112 09:55:22.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.858" endtime="20201112 09:55:22.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:21.857" endtime="20201112 09:55:22.423"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.446" endtime="20201112 09:55:22.465"></status>
</kw>
<msg timestamp="20201112 09:55:22.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:22.443" endtime="20201112 09:55:22.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:22.468" endtime="20201112 09:55:22.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.475" endtime="20201112 09:55:22.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.436" endtime="20201112 09:55:22.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.430" endtime="20201112 09:55:22.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.498" endtime="20201112 09:55:22.836"></status>
</kw>
<msg timestamp="20201112 09:55:22.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042672917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042692722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:22.495" endtime="20201112 09:55:22.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042672917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042692722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:22.846" endtime="20201112 09:55:22.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.866" endtime="20201112 09:55:22.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.488" endtime="20201112 09:55:22.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.483" endtime="20201112 09:55:22.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:22.884" level="INFO">${RESULT} = [{'time': 0.042692722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.980500000000468e-05, 'source_diff': 1.980500000000468e-05}, {'time': 0.042715875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:22.875" endtime="20201112 09:55:22.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:22.916" level="INFO">${ACCURACY} = {'diff': [1.980500000000468e-05, 1.987500000000253e-05, 2.0306000000004654e-05, 2.031899999999781e-05, 1.9749999999998935e-05, 1.9249999999998435e-05, 1.981900000000425e-05, 2.0305999999997715e-05, 1....</msg>
<status status="PASS" starttime="20201112 09:55:22.886" endtime="20201112 09:55:22.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.928" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:55:22.925" endtime="20201112 09:55:22.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:22.933" level="INFO">VALUE: [1.980500000000468e-05, 1.987500000000253e-05, 2.0306000000004654e-05, 2.031899999999781e-05, 1.9749999999998935e-05, 1.9249999999998435e-05, 1.981900000000425e-05, 2.0305999999997715e-05, 1.9709000000006638e-05, 1.9791999999997645e-05, 2.0333999999996855e-05, 1.980500000000468e-05, 1.9235999999998865e-05, 2.0319999999997285e-05, 2.031899999999781e-05, 2.0319999999997285e-05, 1.9263999999998005e-05, 2.0291999999998145e-05, 1.9763999999998505e-05, 1.9819999999996785e-05, 1.9763999999998505e-05, 2.030500000000518e-05, 1.9833999999996355e-05, 1.979099999999817e-05, 1.97089999999997e-05, 1.9264000000004944e-05, 1.9749999999998935e-05, 1.9805999999997215e-05, 2.0347999999996425e-05, 1.976299999999903e-05, 1.9763999999998505e-05, 2.030499999999824e-05, 2.034699999999695e-05, 1.97769999999986e-05, 1.9249999999998435e-05, 1.9735999999999365e-05, 1.926299999999853e-05, 1.9763999999998505e-05, 2.030499999999824e-05, 2.030499999999824e-05, 2.0277999999998575e-05, 1.9806000000004154e-05, 2.034699999999695e-05, 2.031900000000475e-05, 1.926299999999853e-05, 1.9791999999997645e-05, 1.9777999999998075e-05, 1.9806000000004154e-05, 2.031899999999781e-05, 2.0320000000004224e-05]</msg>
<status status="PASS" starttime="20201112 09:55:22.930" endtime="20201112 09:55:22.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.918" endtime="20201112 09:55:22.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:22.943" endtime="20201112 09:55:22.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:22.951" endtime="20201112 09:55:22.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.947" endtime="20201112 09:55:22.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.938" endtime="20201112 09:55:22.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.425" endtime="20201112 09:55:22.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.424" endtime="20201112 09:55:22.977"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.000" endtime="20201112 09:55:23.020"></status>
</kw>
<msg timestamp="20201112 09:55:23.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:22.997" endtime="20201112 09:55:23.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.024" endtime="20201112 09:55:23.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.030" endtime="20201112 09:55:23.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.990" endtime="20201112 09:55:23.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.984" endtime="20201112 09:55:23.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.054" endtime="20201112 09:55:23.396"></status>
</kw>
<msg timestamp="20201112 09:55:23.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043237306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043258125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.051" endtime="20201112 09:55:23.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043237306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043258125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.405" endtime="20201112 09:55:23.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.425" endtime="20201112 09:55:23.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.044" endtime="20201112 09:55:23.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.038" endtime="20201112 09:55:23.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:23.443" level="INFO">${RESULT} = [{'time': 0.043258125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.081899999999831e-05, 'source_diff': 2.081899999999831e-05}, {'time': 0.043292153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:23.434" endtime="20201112 09:55:23.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:23.475" level="INFO">${ACCURACY} = {'diff': [2.081899999999831e-05, 2.134699999999795e-05, 2.088899999999616e-05, 2.086100000000396e-05, 2.086100000000396e-05, 2.087499999999659e-05, 2.0819999999997785e-05, 2.083299999999788e-05, 2.083...</msg>
<status status="PASS" starttime="20201112 09:55:23.445" endtime="20201112 09:55:23.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.487" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:55:23.484" endtime="20201112 09:55:23.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.492" level="INFO">VALUE: [2.081899999999831e-05, 2.134699999999795e-05, 2.088899999999616e-05, 2.086100000000396e-05, 2.086100000000396e-05, 2.087499999999659e-05, 2.0819999999997785e-05, 2.083299999999788e-05, 2.083299999999788e-05, 2.086100000000396e-05, 2.131900000000575e-05, 2.0820000000004724e-05, 2.0320000000004224e-05, 2.080499999999874e-05, 2.087500000000353e-05, 2.086100000000396e-05, 2.136099999999752e-05, 2.030499999999824e-05, 2.081899999999831e-05, 2.084700000000439e-05, 2.031899999999781e-05, 2.086099999999702e-05, 2.087500000000353e-05, 2.1362000000003933e-05, 2.086099999999702e-05, 2.084699999999745e-05, 2.081899999999831e-05, 2.081899999999831e-05, 2.1443999999995467e-05, 2.086100000000396e-05, 2.0820000000004724e-05, 2.084700000000439e-05, 2.086100000000396e-05, 2.0833999999997355e-05, 2.084699999999745e-05, 2.140299999999623e-05, 2.031899999999781e-05, 2.13890000000036e-05, 2.0791999999998645e-05, 2.080500000000568e-05, 2.030499999999824e-05, 2.083300000000482e-05, 2.0320000000004224e-05, 2.0305999999997715e-05, 2.083299999999788e-05, 2.081899999999831e-05, 2.1361999999996995e-05, 2.141700000000274e-05, 2.13890000000036e-05, 2.08890000000031e-05]</msg>
<status status="PASS" starttime="20201112 09:55:23.489" endtime="20201112 09:55:23.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.477" endtime="20201112 09:55:23.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.502" endtime="20201112 09:55:23.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:23.510" endtime="20201112 09:55:23.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.506" endtime="20201112 09:55:23.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.497" endtime="20201112 09:55:23.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.979" endtime="20201112 09:55:23.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:22.978" endtime="20201112 09:55:23.536"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.559" endtime="20201112 09:55:23.578"></status>
</kw>
<msg timestamp="20201112 09:55:23.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.556" endtime="20201112 09:55:23.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.582" endtime="20201112 09:55:23.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.585" endtime="20201112 09:55:23.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.549" endtime="20201112 09:55:23.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.543" endtime="20201112 09:55:23.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.596" endtime="20201112 09:55:23.882"></status>
</kw>
<msg timestamp="20201112 09:55:23.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042692, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042713375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:23.595" endtime="20201112 09:55:23.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042692, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042713375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:23.886" endtime="20201112 09:55:23.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.895" endtime="20201112 09:55:23.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.591" endtime="20201112 09:55:23.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.589" endtime="20201112 09:55:23.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:23.903" level="INFO">${RESULT} = [{'time': 0.042713375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.137499999999709e-05, 'source_diff': 2.137499999999709e-05}, {'time': 0.042743861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:23.899" endtime="20201112 09:55:23.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:23.918" level="INFO">${ACCURACY} = {'diff': [2.137499999999709e-05, 2.2430000000003836e-05, 2.18890000000041e-05, 2.1986000000001615e-05, 2.187499999999759e-05, 2.241700000000374e-05, 2.243100000000331e-05, 2.1930000000003336e-05, 2.13...</msg>
<status status="PASS" starttime="20201112 09:55:23.904" endtime="20201112 09:55:23.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.923" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:55:23.922" endtime="20201112 09:55:23.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.926" level="INFO">VALUE: [2.137499999999709e-05, 2.2430000000003836e-05, 2.18890000000041e-05, 2.1986000000001615e-05, 2.187499999999759e-05, 2.241700000000374e-05, 2.243100000000331e-05, 2.1930000000003336e-05, 2.137500000000403e-05, 2.136099999999752e-05, 2.187499999999759e-05, 2.137500000000403e-05, 2.184699999999845e-05, 2.188899999999716e-05, 2.187499999999759e-05, 2.19169999999963e-05, 2.137500000000403e-05, 2.1361999999996995e-05, 2.1915999999996827e-05, 2.241700000000374e-05, 2.2415999999997327e-05, 2.190299999999673e-05, 2.136099999999752e-05, 2.137499999999709e-05, 2.1930000000003336e-05, 2.137499999999709e-05, 2.238899999999766e-05, 2.133299999999838e-05, 2.1387999999997187e-05, 2.2000000000001185e-05, 2.136099999999752e-05, 2.1887999999997687e-05, 2.18890000000041e-05, 2.243100000000331e-05, 2.191700000000324e-05, 2.190300000000367e-05, 2.137499999999709e-05, 2.191700000000324e-05, 2.186099999999802e-05, 2.24169999999968e-05, 2.1930000000003336e-05, 2.191700000000324e-05, 2.190300000000367e-05, 2.187499999999759e-05, 2.191700000000324e-05, 2.2416000000004266e-05, 2.2444000000003406e-05, 2.187500000000453e-05, 2.143100000000231e-05, 2.187499999999759e-05]</msg>
<status status="PASS" starttime="20201112 09:55:23.924" endtime="20201112 09:55:23.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.919" endtime="20201112 09:55:23.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.930" endtime="20201112 09:55:23.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:23.935" endtime="20201112 09:55:23.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.933" endtime="20201112 09:55:23.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.928" endtime="20201112 09:55:23.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.538" endtime="20201112 09:55:23.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.537" endtime="20201112 09:55:23.956"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.967" endtime="20201112 09:55:23.982"></status>
</kw>
<msg timestamp="20201112 09:55:23.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.965" endtime="20201112 09:55:23.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:23.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:23.984" endtime="20201112 09:55:23.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.987" endtime="20201112 09:55:23.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.962" endtime="20201112 09:55:23.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.959" endtime="20201112 09:55:23.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:23.998" endtime="20201112 09:55:24.285"></status>
</kw>
<msg timestamp="20201112 09:55:24.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025193097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025216042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:23.997" endtime="20201112 09:55:24.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025193097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025216042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:24.289" endtime="20201112 09:55:24.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.309" endtime="20201112 09:55:24.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.993" endtime="20201112 09:55:24.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.991" endtime="20201112 09:55:24.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:24.327" level="INFO">${RESULT} = [{'time': 0.025216042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.294499999999991e-05, 'source_diff': 2.294499999999991e-05}, {'time': 0.025247389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:24.317" endtime="20201112 09:55:24.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:24.361" level="INFO">${ACCURACY} = {'diff': [2.294499999999991e-05, 2.3485999999999646e-05, 2.297300000000252e-05, 2.237500000000156e-05, 2.2985999999999146e-05, 2.2916000000001296e-05, 2.244499999999941e-05, 2.2971999999999576e-05, 2....</msg>
<status status="PASS" starttime="20201112 09:55:24.329" endtime="20201112 09:55:24.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.372" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:55:24.370" endtime="20201112 09:55:24.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.378" level="INFO">VALUE: [2.294499999999991e-05, 2.3485999999999646e-05, 2.297300000000252e-05, 2.237500000000156e-05, 2.2985999999999146e-05, 2.2916000000001296e-05, 2.244499999999941e-05, 2.2971999999999576e-05, 2.2971999999999576e-05, 2.24030000000007e-05, 2.2430000000000366e-05, 2.293100000000034e-05, 2.3000000000002185e-05, 2.2430000000000366e-05, 2.243099999999984e-05, 2.294499999999991e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.2930000000000866e-05, 2.3485999999999646e-05, 2.243099999999984e-05, 2.2999999999998716e-05, 2.297299999999905e-05, 2.2971999999999576e-05, 2.2944000000000436e-05, 2.2986000000002615e-05, 2.2430000000000366e-05, 2.29169999999973e-05, 2.293100000000034e-05, 2.2958000000000006e-05, 2.297299999999905e-05, 2.293100000000034e-05, 2.2986000000002615e-05, 2.2986000000002615e-05, 2.3485999999999646e-05, 2.24030000000007e-05, 2.2457999999999506e-05, 2.2416000000000796e-05, 2.2930000000000866e-05, 2.3458000000000506e-05, 2.293100000000034e-05, 2.2971999999999576e-05, 2.2915999999997827e-05, 2.3485999999999646e-05, 2.3013999999998286e-05, 2.297300000000252e-05, 2.2958000000000006e-05, 2.2972000000003046e-05, 2.293100000000034e-05, 2.24030000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:55:24.374" endtime="20201112 09:55:24.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.363" endtime="20201112 09:55:24.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.387" endtime="20201112 09:55:24.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:24.396" endtime="20201112 09:55:24.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.392" endtime="20201112 09:55:24.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.383" endtime="20201112 09:55:24.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.957" endtime="20201112 09:55:24.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:23.956" endtime="20201112 09:55:24.422"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.445" endtime="20201112 09:55:24.465"></status>
</kw>
<msg timestamp="20201112 09:55:24.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:24.442" endtime="20201112 09:55:24.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:24.468" endtime="20201112 09:55:24.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.474" endtime="20201112 09:55:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.435" endtime="20201112 09:55:24.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.429" endtime="20201112 09:55:24.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.498" endtime="20201112 09:55:24.836"></status>
</kw>
<msg timestamp="20201112 09:55:24.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042743014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042777597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:24.495" endtime="20201112 09:55:24.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042743014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042777597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:24.845" endtime="20201112 09:55:24.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.865" endtime="20201112 09:55:24.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.488" endtime="20201112 09:55:24.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.483" endtime="20201112 09:55:24.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:24.883" level="INFO">${RESULT} = [{'time': 0.042777597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4582999999997754e-05, 'source_diff': 3.4582999999997754e-05}, {'time': 0.042826597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:24.873" endtime="20201112 09:55:24.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:24.914" level="INFO">${ACCURACY} = {'diff': [3.4582999999997754e-05, 3.488900000000322e-05, 3.5110999999997394e-05, 3.47779999999992e-05, 3.49580000000016e-05, 3.525000000000056e-05, 3.4445000000001e-05, 3.52779999999997e-05, 3.5096999...</msg>
<status status="PASS" starttime="20201112 09:55:24.885" endtime="20201112 09:55:24.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.927" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:55:24.923" endtime="20201112 09:55:24.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:24.933" level="INFO">VALUE: [3.4582999999997754e-05, 3.488900000000322e-05, 3.5110999999997394e-05, 3.47779999999992e-05, 3.49580000000016e-05, 3.525000000000056e-05, 3.4445000000001e-05, 3.52779999999997e-05, 3.5096999999997824e-05, 3.450000000000675e-05, 3.461100000000383e-05, 3.518100000000218e-05, 3.448600000000024e-05, 3.491700000000236e-05, 3.497300000000064e-05, 3.46250000000034e-05, 3.5124999999996964e-05, 3.497300000000064e-05, 3.455599999999809e-05, 3.525000000000056e-05, 3.4346999999997074e-05, 3.5054999999999115e-05, 3.497200000000117e-05, 3.497200000000117e-05, 3.449999999999981e-05, 3.4860999999997144e-05, 3.502799999999945e-05, 3.501399999999988e-05, 3.5040999999999545e-05, 3.447200000000067e-05, 3.438900000000272e-05, 3.5096999999997824e-05, 3.4582999999997754e-05, 3.4638999999996034e-05, 3.468100000000168e-05, 3.47779999999992e-05, 3.472200000000092e-05, 3.497200000000117e-05, 3.486100000000408e-05, 3.480600000000528e-05, 3.458400000000417e-05, 3.526400000000013e-05, 3.5152999999996104e-05, 3.4610999999996894e-05, 3.486100000000408e-05, 3.5318999999998935e-05, 3.451399999999938e-05, 3.5055000000006054e-05, 3.4526999999999475e-05, 3.5318999999998935e-05]</msg>
<status status="PASS" starttime="20201112 09:55:24.929" endtime="20201112 09:55:24.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.916" endtime="20201112 09:55:24.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:24.942" endtime="20201112 09:55:24.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:24.951" endtime="20201112 09:55:24.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.946" endtime="20201112 09:55:24.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.938" endtime="20201112 09:55:24.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.424" endtime="20201112 09:55:24.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.423" endtime="20201112 09:55:24.977"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.000" endtime="20201112 09:55:25.019"></status>
</kw>
<msg timestamp="20201112 09:55:25.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:24.997" endtime="20201112 09:55:25.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:25.023" endtime="20201112 09:55:25.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.029" endtime="20201112 09:55:25.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.989" endtime="20201112 09:55:25.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.983" endtime="20201112 09:55:25.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.053" endtime="20201112 09:55:25.392"></status>
</kw>
<msg timestamp="20201112 09:55:25.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042998653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043034403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.050" endtime="20201112 09:55:25.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042998653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043034403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.402" endtime="20201112 09:55:25.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.421" endtime="20201112 09:55:25.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.042" endtime="20201112 09:55:25.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.037" endtime="20201112 09:55:25.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:25.439" level="INFO">${RESULT} = [{'time': 0.043034403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.575000000000106e-05, 'source_diff': 3.575000000000106e-05}, {'time': 0.043072403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:25.430" endtime="20201112 09:55:25.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:25.471" level="INFO">${ACCURACY} = {'diff': [3.575000000000106e-05, 3.541700000000286e-05, 3.590300000000379e-05, 3.565300000000354e-05, 3.575000000000106e-05, 3.5888999999997284e-05, 3.6124999999997964e-05, 3.575000000000106e-05, 3.57...</msg>
<status status="PASS" starttime="20201112 09:55:25.441" endtime="20201112 09:55:25.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.482" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:55:25.480" endtime="20201112 09:55:25.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.488" level="INFO">VALUE: [3.575000000000106e-05, 3.541700000000286e-05, 3.590300000000379e-05, 3.565300000000354e-05, 3.575000000000106e-05, 3.5888999999997284e-05, 3.6124999999997964e-05, 3.575000000000106e-05, 3.573599999999455e-05, 3.573600000000149e-05, 3.579199999999977e-05, 3.536100000000458e-05, 3.601400000000088e-05, 3.57780000000002e-05, 3.536100000000458e-05, 3.622200000000242e-05, 3.580599999999934e-05, 3.602800000000045e-05, 3.5638999999997034e-05, 3.543100000000243e-05, 3.591599999999695e-05, 3.599999999999437e-05, 3.555599999999909e-05, 3.5360999999997644e-05, 3.563799999999756e-05, 3.626400000000113e-05, 3.5541000000000045e-05, 3.5554999999999615e-05, 3.6055000000000115e-05, 3.544400000000253e-05, 3.623600000000199e-05, 3.550000000000081e-05, 3.6318999999999935e-05, 3.575000000000106e-05, 3.609700000000576e-05, 3.5445000000002e-05, 3.540300000000329e-05, 3.601400000000088e-05, 3.6166999999996674e-05, 3.5430999999995494e-05, 3.547200000000167e-05, 3.576400000000063e-05, 3.570799999999541e-05, 3.561100000000483e-05, 3.555599999999909e-05, 3.593100000000293e-05, 3.624999999999462e-05, 3.5722999999994454e-05, 3.572300000000139e-05, 3.540199999999688e-05]</msg>
<status status="PASS" starttime="20201112 09:55:25.484" endtime="20201112 09:55:25.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.473" endtime="20201112 09:55:25.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.499" endtime="20201112 09:55:25.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:25.507" endtime="20201112 09:55:25.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.503" endtime="20201112 09:55:25.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.494" endtime="20201112 09:55:25.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.979" endtime="20201112 09:55:25.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:24.978" endtime="20201112 09:55:25.533"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.556" endtime="20201112 09:55:25.576"></status>
</kw>
<msg timestamp="20201112 09:55:25.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:25.553" endtime="20201112 09:55:25.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:25.580" endtime="20201112 09:55:25.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.586" endtime="20201112 09:55:25.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.546" endtime="20201112 09:55:25.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.540" endtime="20201112 09:55:25.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.610" endtime="20201112 09:55:25.947"></status>
</kw>
<msg timestamp="20201112 09:55:25.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042704833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042741458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.607" endtime="20201112 09:55:25.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:25.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042704833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042741458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:25.956" endtime="20201112 09:55:25.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:25.976" endtime="20201112 09:55:25.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.599" endtime="20201112 09:55:25.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.595" endtime="20201112 09:55:25.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:25.994" level="INFO">${RESULT} = [{'time': 0.042741458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.66250000000054e-05, 'source_diff': 3.66250000000054e-05}, {'time': 0.042789458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:25.984" endtime="20201112 09:55:25.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:26.025" level="INFO">${ACCURACY} = {'diff': [3.66250000000054e-05, 3.638900000000472e-05, 3.6874999999998714e-05, 3.6819000000000435e-05, 3.673600000000249e-05, 3.6360999999998644e-05, 3.718000000000471e-05, 3.7152999999998104e-05, 3.7...</msg>
<status status="PASS" starttime="20201112 09:55:25.996" endtime="20201112 09:55:26.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.036" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:55:26.034" endtime="20201112 09:55:26.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.042" level="INFO">VALUE: [3.66250000000054e-05, 3.638900000000472e-05, 3.6874999999998714e-05, 3.6819000000000435e-05, 3.673600000000249e-05, 3.6360999999998644e-05, 3.718000000000471e-05, 3.7152999999998104e-05, 3.7319000000000935e-05, 3.722200000000342e-05, 3.7152999999998104e-05, 3.6888999999998284e-05, 3.6610999999998894e-05, 3.679200000000077e-05, 3.6346999999999074e-05, 3.651400000000138e-05, 3.673600000000249e-05, 3.674999999999512e-05, 3.7124999999998964e-05, 3.680600000000034e-05, 3.718100000000418e-05, 3.720799999999691e-05, 3.683399999999948e-05, 3.708399999999973e-05, 3.7110999999999394e-05, 3.7305000000001365e-05, 3.692999999999752e-05, 3.667999999999727e-05, 3.650000000000181e-05, 3.6388999999997784e-05, 3.6360999999998644e-05, 3.673600000000249e-05, 3.673600000000249e-05, 3.6833000000000005e-05, 3.692999999999752e-05, 3.6930999999996994e-05, 3.654200000000052e-05, 3.663900000000497e-05, 3.6610999999998894e-05, 3.651400000000138e-05, 3.654200000000052e-05, 3.670800000000335e-05, 3.6458999999995634e-05, 3.697300000000264e-05, 3.641700000000386e-05, 3.722300000000289e-05, 3.691599999999795e-05, 3.6652999999997604e-05, 3.730600000000084e-05, 3.680600000000034e-05]</msg>
<status status="PASS" starttime="20201112 09:55:26.039" endtime="20201112 09:55:26.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.027" endtime="20201112 09:55:26.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.052" endtime="20201112 09:55:26.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:26.062" endtime="20201112 09:55:26.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.057" endtime="20201112 09:55:26.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.047" endtime="20201112 09:55:26.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.535" endtime="20201112 09:55:26.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:25.534" endtime="20201112 09:55:26.088"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.113" endtime="20201112 09:55:26.133"></status>
</kw>
<msg timestamp="20201112 09:55:26.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:26.108" endtime="20201112 09:55:26.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:26.136" endtime="20201112 09:55:26.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.143" endtime="20201112 09:55:26.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.100" endtime="20201112 09:55:26.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.094" endtime="20201112 09:55:26.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.166" endtime="20201112 09:55:26.505"></status>
</kw>
<msg timestamp="20201112 09:55:26.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044795833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044833819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:26.163" endtime="20201112 09:55:26.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044795833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044833819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:26.515" endtime="20201112 09:55:26.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.534" endtime="20201112 09:55:26.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.156" endtime="20201112 09:55:26.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.151" endtime="20201112 09:55:26.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:26.552" level="INFO">${RESULT} = [{'time': 0.044833819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.79859999999968e-05, 'source_diff': 3.79859999999968e-05}, {'time': 0.044877819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:26.543" endtime="20201112 09:55:26.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:26.583" level="INFO">${ACCURACY} = {'diff': [3.79859999999968e-05, 3.799999999999637e-05, 3.792999999999852e-05, 3.7569000000001185e-05, 3.79580000000046e-05, 3.769400000000478e-05, 3.7902999999998854e-05, 3.8040999999995606e-05, 3.790...</msg>
<status status="PASS" starttime="20201112 09:55:26.554" endtime="20201112 09:55:26.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.595" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:55:26.592" endtime="20201112 09:55:26.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.600" level="INFO">VALUE: [3.79859999999968e-05, 3.799999999999637e-05, 3.792999999999852e-05, 3.7569000000001185e-05, 3.79580000000046e-05, 3.769400000000478e-05, 3.7902999999998854e-05, 3.8040999999995606e-05, 3.7902999999998854e-05, 3.770800000000435e-05, 3.741700000000486e-05, 3.799999999999637e-05, 3.7610999999999895e-05, 3.834800000000055e-05, 3.7360999999999644e-05, 3.776399999999569e-05, 3.7888999999999284e-05, 3.77780000000022e-05, 3.752800000000195e-05, 3.757000000000066e-05, 3.805600000000159e-05, 3.784800000000005e-05, 3.804200000000202e-05, 3.74580000000041e-05, 3.751400000000238e-05, 3.7388999999998784e-05, 3.81659999999992e-05, 3.747200000000367e-05, 3.797200000000417e-05, 3.744400000000453e-05, 3.8097000000000825e-05, 3.8082999999994316e-05, 3.776400000000263e-05, 3.7847000000000575e-05, 3.795799999999766e-05, 3.822199999999748e-05, 3.8124999999999964e-05, 3.790199999999938e-05, 3.808400000000073e-05, 3.8152999999999104e-05, 3.749999999999587e-05, 3.822200000000442e-05, 3.8166999999998674e-05, 3.757000000000066e-05, 3.74859999999963e-05, 3.7445000000004e-05, 3.752800000000195e-05, 3.7388999999998784e-05, 3.754200000000152e-05, 3.734799999999955e-05]</msg>
<status status="PASS" starttime="20201112 09:55:26.597" endtime="20201112 09:55:26.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.585" endtime="20201112 09:55:26.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.610" endtime="20201112 09:55:26.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:26.618" endtime="20201112 09:55:26.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.614" endtime="20201112 09:55:26.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.605" endtime="20201112 09:55:26.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.090" endtime="20201112 09:55:26.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.089" endtime="20201112 09:55:26.648"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.671" endtime="20201112 09:55:26.691"></status>
</kw>
<msg timestamp="20201112 09:55:26.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:26.667" endtime="20201112 09:55:26.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:26.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:26.694" endtime="20201112 09:55:26.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.701" endtime="20201112 09:55:26.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.660" endtime="20201112 09:55:26.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.654" endtime="20201112 09:55:26.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:26.724" endtime="20201112 09:55:27.062"></status>
</kw>
<msg timestamp="20201112 09:55:27.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042893083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042931944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:26.721" endtime="20201112 09:55:27.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042893083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042931944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.072" endtime="20201112 09:55:27.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.091" endtime="20201112 09:55:27.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.714" endtime="20201112 09:55:27.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.709" endtime="20201112 09:55:27.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.109" level="INFO">${RESULT} = [{'time': 0.042931944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8861000000001145e-05, 'source_diff': 3.8861000000001145e-05}, {'time': 0.042974944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:27.100" endtime="20201112 09:55:27.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:27.140" level="INFO">${ACCURACY} = {'diff': [3.8861000000001145e-05, 3.9305000000003365e-05, 3.867999999999927e-05, 3.847200000000467e-05, 3.92780000000037e-05, 3.8541000000003045e-05, 3.922199999999848e-05, 3.844399999999859e-05, 3.89...</msg>
<status status="PASS" starttime="20201112 09:55:27.111" endtime="20201112 09:55:27.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.151" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:55:27.149" endtime="20201112 09:55:27.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.157" level="INFO">VALUE: [3.8861000000001145e-05, 3.9305000000003365e-05, 3.867999999999927e-05, 3.847200000000467e-05, 3.92780000000037e-05, 3.8541000000003045e-05, 3.922199999999848e-05, 3.844399999999859e-05, 3.8958999999998134e-05, 3.851399999999644e-05, 3.847199999999773e-05, 3.9166999999999674e-05, 3.925000000000456e-05, 3.926400000000413e-05, 3.8527000000003475e-05, 3.9153000000000104e-05, 3.8666999999999174e-05, 3.8611000000000895e-05, 3.90980000000013e-05, 3.901400000000388e-05, 3.9083000000002255e-05, 3.890200000000038e-05, 3.8875000000000715e-05, 3.8597000000001325e-05, 3.9041000000003545e-05, 3.9027000000003975e-05, 3.891599999999995e-05, 3.8902999999999854e-05, 3.8889000000000284e-05, 3.8333000000001505e-05, 3.8430999999998494e-05, 3.847199999999773e-05, 3.9125000000000965e-05, 3.8611000000000895e-05, 3.850000000000381e-05, 3.9139000000000534e-05, 3.857000000000166e-05, 3.926399999999719e-05, 3.9139000000000534e-05, 3.879200000000277e-05, 3.855600000000209e-05, 3.8347000000001075e-05, 3.9222999999997954e-05, 3.883400000000148e-05, 3.8375000000000214e-05, 3.874999999999712e-05, 3.8776999999996786e-05, 3.8527000000003475e-05, 3.869399999999884e-05, 3.9290999999996856e-05]</msg>
<status status="PASS" starttime="20201112 09:55:27.154" endtime="20201112 09:55:27.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.142" endtime="20201112 09:55:27.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.167" endtime="20201112 09:55:27.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:27.175" endtime="20201112 09:55:27.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.171" endtime="20201112 09:55:27.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.162" endtime="20201112 09:55:27.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.650" endtime="20201112 09:55:27.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:26.648" endtime="20201112 09:55:27.201"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.226" endtime="20201112 09:55:27.246"></status>
</kw>
<msg timestamp="20201112 09:55:27.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:27.223" endtime="20201112 09:55:27.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:27.249" endtime="20201112 09:55:27.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.256" endtime="20201112 09:55:27.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.215" endtime="20201112 09:55:27.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.208" endtime="20201112 09:55:27.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.279" endtime="20201112 09:55:27.601"></status>
</kw>
<msg timestamp="20201112 09:55:27.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04433475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:27.276" endtime="20201112 09:55:27.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04433475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:27.606" endtime="20201112 09:55:27.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.614" endtime="20201112 09:55:27.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.269" endtime="20201112 09:55:27.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.264" endtime="20201112 09:55:27.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:27.623" level="INFO">${RESULT} = [{'time': 0.04433475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.994400000000009e-05, 'source_diff': 3.994400000000009e-05}, {'time': 0.044378778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:27.618" endtime="20201112 09:55:27.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:27.637" level="INFO">${ACCURACY} = {'diff': [3.994400000000009e-05, 4.033400000000298e-05, 3.9388999999993846e-05, 3.9527000000004475e-05, 3.9361000000001645e-05, 4.03059999999969e-05, 3.9430999999999494e-05, 4.008400000000273e-05, 3.9...</msg>
<status status="PASS" starttime="20201112 09:55:27.624" endtime="20201112 09:55:27.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.642" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:55:27.641" endtime="20201112 09:55:27.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.645" level="INFO">VALUE: [3.994400000000009e-05, 4.033400000000298e-05, 3.9388999999993846e-05, 3.9527000000004475e-05, 3.9361000000001645e-05, 4.03059999999969e-05, 3.9430999999999494e-05, 4.008400000000273e-05, 3.980600000000334e-05, 3.9444999999999064e-05, 3.9818999999996496e-05, 3.933400000000198e-05, 4.0262999999998716e-05, 3.9374999999994276e-05, 3.949999999999787e-05, 3.945799999999916e-05, 3.9596999999995386e-05, 3.9611000000001895e-05, 4.019400000000034e-05, 4.0069000000003685e-05, 3.973600000000549e-05, 4.001399999999794e-05, 3.949999999999787e-05, 4.0153000000001104e-05, 4.001399999999794e-05, 3.9361000000001645e-05, 3.9888999999994346e-05, 3.954200000000352e-05, 3.976400000000463e-05, 3.9318999999995996e-05, 4.0110999999995456e-05, 3.9916999999993485e-05, 3.954199999999658e-05, 3.9472999999998204e-05, 3.955600000000309e-05, 3.945900000000557e-05, 3.968000000000027e-05, 3.99859999999988e-05, 3.9833000000003005e-05, 4.0040999999997606e-05, 3.949999999999787e-05, 3.9917000000000424e-05, 3.9403000000000354e-05, 3.947200000000567e-05, 3.995799999999966e-05, 4.001399999999794e-05, 3.94859999999983e-05, 3.984800000000205e-05, 3.952799999999701e-05, 3.9444999999999064e-05]</msg>
<status status="PASS" starttime="20201112 09:55:27.643" endtime="20201112 09:55:27.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.638" endtime="20201112 09:55:27.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.654" endtime="20201112 09:55:27.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:27.658" endtime="20201112 09:55:27.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.656" endtime="20201112 09:55:27.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.652" endtime="20201112 09:55:27.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.203" endtime="20201112 09:55:27.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.202" endtime="20201112 09:55:27.680"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.691" endtime="20201112 09:55:27.707"></status>
</kw>
<msg timestamp="20201112 09:55:27.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:27.689" endtime="20201112 09:55:27.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:27.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:27.709" endtime="20201112 09:55:27.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.712" endtime="20201112 09:55:27.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.686" endtime="20201112 09:55:27.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.683" endtime="20201112 09:55:27.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:27.724" endtime="20201112 09:55:28.010"></status>
</kw>
<msg timestamp="20201112 09:55:28.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025302917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025343403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:27.722" endtime="20201112 09:55:28.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025302917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025343403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.014" endtime="20201112 09:55:28.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.023" endtime="20201112 09:55:28.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.719" endtime="20201112 09:55:28.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.717" endtime="20201112 09:55:28.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:28.032" level="INFO">${RESULT} = [{'time': 0.025343403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04859999999993e-05, 'source_diff': 4.04859999999993e-05}, {'time': 0.025399403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:28.027" endtime="20201112 09:55:28.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:28.046" level="INFO">${ACCURACY} = {'diff': [4.04859999999993e-05, 4.0847000000000105e-05, 4.0624999999998995e-05, 4.123600000000005e-05, 4.0541000000001576e-05, 4.09859999999998e-05, 4.120800000000091e-05, 4.09859999999998e-05, 4.0401...</msg>
<status status="PASS" starttime="20201112 09:55:28.033" endtime="20201112 09:55:28.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.051" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:55:28.050" endtime="20201112 09:55:28.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.054" level="INFO">VALUE: [4.04859999999993e-05, 4.0847000000000105e-05, 4.0624999999998995e-05, 4.123600000000005e-05, 4.0541000000001576e-05, 4.09859999999998e-05, 4.120800000000091e-05, 4.09859999999998e-05, 4.040199999999841e-05, 4.0569000000000716e-05, 4.097200000000023e-05, 4.0374999999998745e-05, 4.1069000000001216e-05, 4.0653000000001605e-05, 4.126399999999919e-05, 4.1097000000000355e-05, 4.123600000000005e-05, 4.0638999999998565e-05, 4.076400000000216e-05, 4.0818999999997496e-05, 4.0458999999999634e-05, 4.0930999999997525e-05, 4.072199999999998e-05, 4.101399999999894e-05, 4.1290999999998856e-05, 4.082000000000044e-05, 4.0375000000002215e-05, 4.0403000000001354e-05, 4.132000000000094e-05, 4.033399999999951e-05, 4.1333000000001036e-05, 4.1055000000001646e-05, 4.092999999999805e-05, 4.052799999999801e-05, 4.11660000000022e-05, 4.115200000000263e-05, 4.092999999999805e-05, 4.049999999999887e-05, 4.0374999999998745e-05, 4.097200000000023e-05, 4.072199999999998e-05, 4.074999999999912e-05, 4.0931000000000994e-05, 4.072199999999998e-05, 4.04859999999993e-05, 4.0847000000000105e-05, 4.0445000000000064e-05, 4.130600000000137e-05, 4.0388999999998315e-05, 4.0624999999998995e-05]</msg>
<status status="PASS" starttime="20201112 09:55:28.052" endtime="20201112 09:55:28.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.046" endtime="20201112 09:55:28.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.058" endtime="20201112 09:55:28.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:28.062" endtime="20201112 09:55:28.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.060" endtime="20201112 09:55:28.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.056" endtime="20201112 09:55:28.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.681" endtime="20201112 09:55:28.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:27.680" endtime="20201112 09:55:28.084"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.095" endtime="20201112 09:55:28.112"></status>
</kw>
<msg timestamp="20201112 09:55:28.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:28.094" endtime="20201112 09:55:28.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:28.114" endtime="20201112 09:55:28.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.117" endtime="20201112 09:55:28.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.090" endtime="20201112 09:55:28.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.087" endtime="20201112 09:55:28.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.130" endtime="20201112 09:55:28.507"></status>
</kw>
<msg timestamp="20201112 09:55:28.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025934083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025976194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.128" endtime="20201112 09:55:28.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025934083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025976194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.518" endtime="20201112 09:55:28.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.538" endtime="20201112 09:55:28.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.123" endtime="20201112 09:55:28.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.121" endtime="20201112 09:55:28.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:28.557" level="INFO">${RESULT} = [{'time': 0.025976194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2111000000000925e-05, 'source_diff': 4.2111000000000925e-05}, {'time': 0.026032194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:28.547" endtime="20201112 09:55:28.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:28.594" level="INFO">${ACCURACY} = {'diff': [4.2111000000000925e-05, 4.168000000000227e-05, 4.168000000000227e-05, 4.1888999999999815e-05, 4.2332999999998566e-05, 4.176399999999969e-05, 4.1804999999998926e-05, 4.1346999999997136e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:55:28.559" endtime="20201112 09:55:28.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.606" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:55:28.604" endtime="20201112 09:55:28.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.612" level="INFO">VALUE: [4.2111000000000925e-05, 4.168000000000227e-05, 4.168000000000227e-05, 4.1888999999999815e-05, 4.2332999999998566e-05, 4.176399999999969e-05, 4.1804999999998926e-05, 4.1346999999997136e-05, 4.1333000000001036e-05, 4.197200000000123e-05, 4.147199999999726e-05, 4.220800000000191e-05, 4.1403000000002355e-05, 4.1888999999999815e-05, 4.197200000000123e-05, 4.1903000000002855e-05, 4.197200000000123e-05, 4.173600000000055e-05, 4.159800000000033e-05, 4.1431000000001494e-05, 4.166599999999923e-05, 4.208399999999779e-05, 4.2125000000000495e-05, 4.201300000000047e-05, 4.1597000000000856e-05, 4.144399999999812e-05, 4.2054999999999176e-05, 4.1666999999998705e-05, 4.226400000000019e-05, 4.2318999999998996e-05, 4.1653000000002605e-05, 4.151399999999944e-05, 4.1596999999997386e-05, 4.175000000000012e-05, 4.14860000000003e-05, 4.202799999999951e-05, 4.1847000000001106e-05, 4.1846999999997636e-05, 4.1417000000001924e-05, 4.154199999999858e-05, 4.14860000000003e-05, 4.1888999999999815e-05, 4.209800000000083e-05, 4.1610999999996956e-05, 4.2139000000000065e-05, 4.2318999999998996e-05, 4.2304999999999426e-05, 4.147200000000073e-05, 4.1860999999997206e-05, 4.1639000000003035e-05]</msg>
<status status="PASS" starttime="20201112 09:55:28.609" endtime="20201112 09:55:28.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.596" endtime="20201112 09:55:28.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.622" endtime="20201112 09:55:28.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:28.631" endtime="20201112 09:55:28.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.627" endtime="20201112 09:55:28.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.617" endtime="20201112 09:55:28.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.085" endtime="20201112 09:55:28.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.084" endtime="20201112 09:55:28.658"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.685" endtime="20201112 09:55:28.707"></status>
</kw>
<msg timestamp="20201112 09:55:28.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:28.681" endtime="20201112 09:55:28.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:28.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:28.711" endtime="20201112 09:55:28.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.717" endtime="20201112 09:55:28.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.673" endtime="20201112 09:55:28.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.666" endtime="20201112 09:55:28.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:28.742" endtime="20201112 09:55:29.119"></status>
</kw>
<msg timestamp="20201112 09:55:29.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047314278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047356736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:28.739" endtime="20201112 09:55:29.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047314278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047356736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.131" endtime="20201112 09:55:29.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.151" endtime="20201112 09:55:29.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.731" endtime="20201112 09:55:29.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.726" endtime="20201112 09:55:29.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:29.170" level="INFO">${RESULT} = [{'time': 0.047356736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.245800000000216e-05, 'source_diff': 4.245800000000216e-05}, {'time': 0.04741075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:55:29.160" endtime="20201112 09:55:29.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:29.203" level="INFO">${ACCURACY} = {'diff': [4.245800000000216e-05, 4.302800000000051e-05, 4.2903000000003855e-05, 4.304200000000008e-05, 4.2889000000004285e-05, 4.300000000000137e-05, 4.251400000000044e-05, 4.2389000000003785e-05, 4.2...</msg>
<status status="PASS" starttime="20201112 09:55:29.172" endtime="20201112 09:55:29.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.214" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:55:29.212" endtime="20201112 09:55:29.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.220" level="INFO">VALUE: [4.245800000000216e-05, 4.302800000000051e-05, 4.2903000000003855e-05, 4.304200000000008e-05, 4.2889000000004285e-05, 4.300000000000137e-05, 4.251400000000044e-05, 4.2389000000003785e-05, 4.2680999999995806e-05, 4.329200000000033e-05, 4.273600000000155e-05, 4.2388999999996846e-05, 4.3124999999998026e-05, 4.3124999999998026e-05, 4.298599999999486e-05, 4.2610999999997956e-05, 4.3068999999999746e-05, 4.327699999999435e-05, 4.3068999999999746e-05, 4.2889000000004285e-05, 4.2638999999997096e-05, 4.266599999999676e-05, 4.275000000000112e-05, 4.242999999999608e-05, 4.326400000000119e-05, 4.2888999999997346e-05, 4.281999999999897e-05, 4.2652999999996666e-05, 4.2888999999997346e-05, 4.327799999999382e-05, 4.2639000000004035e-05, 4.33059999999999e-05, 4.256999999999872e-05, 4.2667000000003175e-05, 4.2737000000001024e-05, 4.305599999999965e-05, 4.31660000000042e-05, 4.322200000000248e-05, 4.297200000000223e-05, 4.2582999999998816e-05, 4.2832999999999066e-05, 4.3318999999999996e-05, 4.3096999999998886e-05, 4.3055000000000176e-05, 4.2346999999998136e-05, 4.325000000000162e-05, 4.254199999999958e-05, 4.2930999999996056e-05, 4.256999999999872e-05, 4.2417000000002925e-05]</msg>
<status status="PASS" starttime="20201112 09:55:29.217" endtime="20201112 09:55:29.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.205" endtime="20201112 09:55:29.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.230" endtime="20201112 09:55:29.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:29.239" endtime="20201112 09:55:29.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.235" endtime="20201112 09:55:29.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.226" endtime="20201112 09:55:29.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.661" endtime="20201112 09:55:29.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:28.659" endtime="20201112 09:55:29.267"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.292" endtime="20201112 09:55:29.312"></status>
</kw>
<msg timestamp="20201112 09:55:29.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:29.288" endtime="20201112 09:55:29.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:29.316" endtime="20201112 09:55:29.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.322" endtime="20201112 09:55:29.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.280" endtime="20201112 09:55:29.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.274" endtime="20201112 09:55:29.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.347" endtime="20201112 09:55:29.720"></status>
</kw>
<msg timestamp="20201112 09:55:29.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045985903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046030167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.344" endtime="20201112 09:55:29.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045985903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046030167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.730" endtime="20201112 09:55:29.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.750" endtime="20201112 09:55:29.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.336" endtime="20201112 09:55:29.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.331" endtime="20201112 09:55:29.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:29.769" level="INFO">${RESULT} = [{'time': 0.046030167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.426399999999525e-05, 'source_diff': 4.426399999999525e-05}, {'time': 0.046083194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:29.759" endtime="20201112 09:55:29.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:29.806" level="INFO">${ACCURACY} = {'diff': [4.426399999999525e-05, 4.350000000000187e-05, 4.4222999999996015e-05, 4.348599999999536e-05, 4.3374999999998276e-05, 4.4319000000000996e-05, 4.376400000000169e-05, 4.3347000000006075e-05, 4....</msg>
<status status="PASS" starttime="20201112 09:55:29.773" endtime="20201112 09:55:29.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.818" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:55:29.815" endtime="20201112 09:55:29.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.823" level="INFO">VALUE: [4.426399999999525e-05, 4.350000000000187e-05, 4.4222999999996015e-05, 4.348599999999536e-05, 4.3374999999998276e-05, 4.4319000000000996e-05, 4.376400000000169e-05, 4.3347000000006075e-05, 4.425000000000262e-05, 4.376399999999475e-05, 4.4096999999999886e-05, 4.419400000000434e-05, 4.423599999999611e-05, 4.342999999999708e-05, 4.3430999999996556e-05, 4.3431000000003495e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.355600000000015e-05, 4.3846999999999636e-05, 4.4180999999997306e-05, 4.3902999999997916e-05, 4.3638999999998096e-05, 4.3444999999996126e-05, 4.397199999999629e-05, 4.3888999999998346e-05, 4.40269999999951e-05, 4.3555000000000677e-05, 4.430499999999449e-05, 4.4096999999999886e-05, 4.3610999999998956e-05, 4.423600000000305e-05, 4.4319000000000996e-05, 4.3596999999999386e-05, 4.347200000000273e-05, 4.4110999999999456e-05, 4.4152999999998166e-05, 4.3888999999998346e-05, 4.3332999999999566e-05, 4.394399999999715e-05, 4.3931000000003995e-05, 4.38060000000004e-05, 4.433400000000004e-05, 4.3987000000002274e-05, 4.3431000000003495e-05, 4.3541000000001107e-05, 4.3388999999997846e-05, 4.392999999999758e-05, 4.4110999999999456e-05, 4.369400000000384e-05]</msg>
<status status="PASS" starttime="20201112 09:55:29.820" endtime="20201112 09:55:29.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.808" endtime="20201112 09:55:29.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.834" endtime="20201112 09:55:29.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:29.842" endtime="20201112 09:55:29.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.838" endtime="20201112 09:55:29.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.829" endtime="20201112 09:55:29.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.270" endtime="20201112 09:55:29.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.268" endtime="20201112 09:55:29.870"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.895" endtime="20201112 09:55:29.915"></status>
</kw>
<msg timestamp="20201112 09:55:29.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:29.891" endtime="20201112 09:55:29.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:29.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:29.919" endtime="20201112 09:55:29.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.925" endtime="20201112 09:55:29.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.883" endtime="20201112 09:55:29.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.877" endtime="20201112 09:55:29.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:29.951" endtime="20201112 09:55:30.321"></status>
</kw>
<msg timestamp="20201112 09:55:30.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046089611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046134444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:29.947" endtime="20201112 09:55:30.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046089611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046134444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.331" endtime="20201112 09:55:30.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.352" endtime="20201112 09:55:30.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.939" endtime="20201112 09:55:30.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.934" endtime="20201112 09:55:30.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:30.372" level="INFO">${RESULT} = [{'time': 0.046134444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.483299999999413e-05, 'source_diff': 4.483299999999413e-05}, {'time': 0.0461835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:30.362" endtime="20201112 09:55:30.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:30.405" level="INFO">${ACCURACY} = {'diff': [4.483299999999413e-05, 4.475000000000312e-05, 4.523599999999711e-05, 4.4638999999999096e-05, 4.530499999999549e-05, 4.455499999999474e-05, 4.529099999999592e-05, 4.517999999999883e-05, 4.463...</msg>
<status status="PASS" starttime="20201112 09:55:30.374" endtime="20201112 09:55:30.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.417" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:55:30.415" endtime="20201112 09:55:30.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.424" level="INFO">VALUE: [4.483299999999413e-05, 4.475000000000312e-05, 4.523599999999711e-05, 4.4638999999999096e-05, 4.530499999999549e-05, 4.455499999999474e-05, 4.529099999999592e-05, 4.517999999999883e-05, 4.4638999999999096e-05, 4.450000000000287e-05, 4.5138999999999596e-05, 4.44860000000033e-05, 4.4347000000000136e-05, 4.473600000000355e-05, 4.498599999999686e-05, 4.533400000000104e-05, 4.502799999999557e-05, 4.5180999999998306e-05, 4.4374999999999276e-05, 4.479199999999489e-05, 4.4987000000003274e-05, 4.482000000000097e-05, 4.494399999999815e-05, 4.524999999999668e-05, 4.448599999999636e-05, 4.4638999999999096e-05, 4.4569000000001247e-05, 4.444399999999765e-05, 4.4638999999999096e-05, 4.517999999999883e-05, 4.447200000000373e-05, 4.4347000000000136e-05, 4.4652999999998666e-05, 4.475000000000312e-05, 4.4666999999998236e-05, 4.48060000000014e-05, 4.449999999999593e-05, 4.4930999999998056e-05, 4.447200000000373e-05, 4.4347000000000136e-05, 4.498599999999686e-05, 4.459799999999986e-05, 4.448599999999636e-05, 4.4388999999998846e-05, 4.484800000000011e-05, 4.473599999999661e-05, 4.502700000000304e-05, 4.473600000000355e-05, 4.505500000000218e-05, 4.447199999999679e-05]</msg>
<status status="PASS" starttime="20201112 09:55:30.420" endtime="20201112 09:55:30.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.407" endtime="20201112 09:55:30.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.434" endtime="20201112 09:55:30.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:30.443" endtime="20201112 09:55:30.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.438" endtime="20201112 09:55:30.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.429" endtime="20201112 09:55:30.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.873" endtime="20201112 09:55:30.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:29.871" endtime="20201112 09:55:30.471"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.495" endtime="20201112 09:55:30.516"></status>
</kw>
<msg timestamp="20201112 09:55:30.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:30.492" endtime="20201112 09:55:30.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:30.520" endtime="20201112 09:55:30.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.527" endtime="20201112 09:55:30.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.484" endtime="20201112 09:55:30.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.478" endtime="20201112 09:55:30.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.552" endtime="20201112 09:55:30.915"></status>
</kw>
<msg timestamp="20201112 09:55:30.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046250569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046296292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.548" endtime="20201112 09:55:30.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:30.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046250569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046296292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:30.925" endtime="20201112 09:55:30.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:30.944" endtime="20201112 09:55:30.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.540" endtime="20201112 09:55:30.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.535" endtime="20201112 09:55:30.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:30.963" level="INFO">${RESULT} = [{'time': 0.046296292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5723000000004455e-05, 'source_diff': 4.5723000000004455e-05}, {'time': 0.046353236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:30.954" endtime="20201112 09:55:30.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:30.993" level="INFO">${ACCURACY} = {'diff': [4.5723000000004455e-05, 4.5597000000001386e-05, 4.5333000000001566e-05, 4.5402999999999416e-05, 4.6319000000003e-05, 4.555600000000215e-05, 4.627799999999682e-05, 4.577799999999632e-05, 4.55...</msg>
<status status="PASS" starttime="20201112 09:55:30.965" endtime="20201112 09:55:30.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.004" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:55:31.002" endtime="20201112 09:55:31.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.010" level="INFO">VALUE: [4.5723000000004455e-05, 4.5597000000001386e-05, 4.5333000000001566e-05, 4.5402999999999416e-05, 4.6319000000003e-05, 4.555600000000215e-05, 4.627799999999682e-05, 4.577799999999632e-05, 4.555600000000215e-05, 4.606900000000275e-05, 4.6208999999998446e-05, 4.5625000000000526e-05, 4.5361000000000706e-05, 4.5680999999998806e-05, 4.5388999999999846e-05, 4.541599999999951e-05, 4.590200000000044e-05, 4.6111000000001456e-05, 4.615200000000069e-05, 4.599999999999743e-05, 4.577700000000379e-05, 4.626399999999725e-05, 4.608299999999538e-05, 4.6153000000000166e-05, 4.5333000000001566e-05, 4.548599999999736e-05, 4.6166999999999736e-05, 4.548599999999736e-05, 4.5958999999998196e-05, 4.597199999999829e-05, 4.5458999999997696e-05, 4.579199999999589e-05, 4.5361000000000706e-05, 4.5472999999997266e-05, 4.5902999999999916e-05, 4.61939999999994e-05, 4.533400000000104e-05, 4.615200000000069e-05, 4.5875000000000776e-05, 4.5861000000001206e-05, 4.5375000000000276e-05, 4.579099999999642e-05, 4.6111000000001456e-05, 4.548599999999736e-05, 4.630500000000343e-05, 4.5680999999998806e-05, 4.574999999999718e-05, 4.575000000000412e-05, 4.5416999999998986e-05, 4.605600000000265e-05]</msg>
<status status="PASS" starttime="20201112 09:55:31.007" endtime="20201112 09:55:31.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.995" endtime="20201112 09:55:31.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.019" endtime="20201112 09:55:31.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:31.028" endtime="20201112 09:55:31.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.023" endtime="20201112 09:55:31.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.015" endtime="20201112 09:55:31.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.473" endtime="20201112 09:55:31.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:30.472" endtime="20201112 09:55:31.053"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.076" endtime="20201112 09:55:31.096"></status>
</kw>
<msg timestamp="20201112 09:55:31.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:31.073" endtime="20201112 09:55:31.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:31.099" endtime="20201112 09:55:31.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.105" endtime="20201112 09:55:31.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.066" endtime="20201112 09:55:31.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.060" endtime="20201112 09:55:31.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.129" endtime="20201112 09:55:31.422"></status>
</kw>
<msg timestamp="20201112 09:55:31.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042025069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042072042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:31.125" endtime="20201112 09:55:31.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042025069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042072042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:31.426" endtime="20201112 09:55:31.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.435" endtime="20201112 09:55:31.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.118" endtime="20201112 09:55:31.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.114" endtime="20201112 09:55:31.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:31.445" level="INFO">${RESULT} = [{'time': 0.042072042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6972999999998766e-05, 'source_diff': 4.6972999999998766e-05}, {'time': 0.042130028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:31.441" endtime="20201112 09:55:31.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:31.459" level="INFO">${ACCURACY} = {'diff': [4.6972999999998766e-05, 4.723599999999911e-05, 4.698599999999886e-05, 4.7181000000000306e-05, 4.730599999999696e-05, 4.676399999999775e-05, 4.731999999999653e-05, 4.655600000000315e-05, 4.68...</msg>
<status status="PASS" starttime="20201112 09:55:31.447" endtime="20201112 09:55:31.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.465" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:55:31.464" endtime="20201112 09:55:31.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.467" level="INFO">VALUE: [4.6972999999998766e-05, 4.723599999999911e-05, 4.698599999999886e-05, 4.7181000000000306e-05, 4.730599999999696e-05, 4.676399999999775e-05, 4.731999999999653e-05, 4.655600000000315e-05, 4.6887999999994934e-05, 4.690200000000144e-05, 4.713800000000212e-05, 4.6429999999993143e-05, 4.6861000000002206e-05, 4.693000000000058e-05, 4.705499999999724e-05, 4.658399999999535e-05, 4.731899999999706e-05, 4.679200000000383e-05, 4.6847000000002637e-05, 4.644399999999965e-05, 4.6389000000000846e-05, 4.729200000000433e-05, 4.6403000000000416e-05, 4.68339999999956e-05, 4.6736999999998086e-05, 4.729099999999792e-05, 4.7208999999999446e-05, 4.715200000000169e-05, 4.6723000000005455e-05, 4.6625000000001526e-05, 4.677800000000426e-05, 4.645799999999922e-05, 4.647200000000573e-05, 4.673599999999861e-05, 4.645800000000616e-05, 4.627799999999682e-05, 4.695799999999972e-05, 4.668000000000033e-05, 4.7111000000002456e-05, 4.6389000000000846e-05, 4.6430999999999556e-05, 4.674999999999818e-05, 4.6903000000000916e-05, 4.698599999999886e-05, 4.676400000000469e-05, 4.68060000000034e-05, 4.705499999999724e-05, 4.6986999999998336e-05, 4.715299999999423e-05, 4.686199999999474e-05]</msg>
<status status="PASS" starttime="20201112 09:55:31.466" endtime="20201112 09:55:31.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.460" endtime="20201112 09:55:31.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.472" endtime="20201112 09:55:31.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:31.479" endtime="20201112 09:55:31.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.475" endtime="20201112 09:55:31.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.470" endtime="20201112 09:55:31.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.055" endtime="20201112 09:55:31.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.054" endtime="20201112 09:55:31.505"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.528" endtime="20201112 09:55:31.549"></status>
</kw>
<msg timestamp="20201112 09:55:31.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:31.525" endtime="20201112 09:55:31.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:31.552" endtime="20201112 09:55:31.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.558" endtime="20201112 09:55:31.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.517" endtime="20201112 09:55:31.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.512" endtime="20201112 09:55:31.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.582" endtime="20201112 09:55:31.919"></status>
</kw>
<msg timestamp="20201112 09:55:31.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042756556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042804847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:31.579" endtime="20201112 09:55:31.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:31.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042756556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042804847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:31.929" endtime="20201112 09:55:31.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:31.948" endtime="20201112 09:55:31.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.571" endtime="20201112 09:55:31.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.567" endtime="20201112 09:55:31.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:31.968" level="INFO">${RESULT} = [{'time': 0.042804847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.829099999999892e-05, 'source_diff': 4.829099999999892e-05}, {'time': 0.042858861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:31.958" endtime="20201112 09:55:31.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:31.999" level="INFO">${ACCURACY} = {'diff': [4.829099999999892e-05, 4.759699999999645e-05, 4.75139999999985e-05, 4.779199999999789e-05, 4.7347000000003137e-05, 4.808299999999738e-05, 4.784700000000364e-05, 4.8153000000002166e-05, 4.820...</msg>
<status status="PASS" starttime="20201112 09:55:31.970" endtime="20201112 09:55:31.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.010" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:55:32.008" endtime="20201112 09:55:32.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.016" level="INFO">VALUE: [4.829099999999892e-05, 4.759699999999645e-05, 4.75139999999985e-05, 4.779199999999789e-05, 4.7347000000003137e-05, 4.808299999999738e-05, 4.784700000000364e-05, 4.8153000000002166e-05, 4.820800000000097e-05, 4.78060000000044e-05, 4.8139000000002596e-05, 4.8139000000002596e-05, 4.7431000000000556e-05, 4.802799999999857e-05, 4.744499999999319e-05, 4.7889000000002346e-05, 4.815200000000269e-05, 4.801299999999953e-05, 4.756899999999731e-05, 4.8153000000002166e-05, 4.7929999999994644e-05, 4.766600000000176e-05, 4.7653000000001666e-05, 4.783299999999713e-05, 4.773599999999961e-05, 4.806900000000475e-05, 4.7903000000001916e-05, 4.749999999999893e-05, 4.8013999999999e-05, 4.751299999999903e-05, 4.8139000000002596e-05, 4.832000000000447e-05, 4.758399999999635e-05, 4.7472999999999266e-05, 4.8153000000002166e-05, 4.772200000000004e-05, 4.754199999999764e-05, 4.733299999999663e-05, 4.797200000000029e-05, 4.765200000000219e-05, 4.76940000000009e-05, 4.763899999999516e-05, 4.820800000000097e-05, 4.752800000000501e-05, 4.777799999999832e-05, 4.811099999999652e-05, 4.830599999999796e-05, 4.763899999999516e-05, 4.7361000000002706e-05, 4.826399999999925e-05]</msg>
<status status="PASS" starttime="20201112 09:55:32.013" endtime="20201112 09:55:32.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.001" endtime="20201112 09:55:32.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.025" endtime="20201112 09:55:32.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:32.034" endtime="20201112 09:55:32.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.029" endtime="20201112 09:55:32.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.021" endtime="20201112 09:55:32.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.507" endtime="20201112 09:55:32.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:31.506" endtime="20201112 09:55:32.060"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.083" endtime="20201112 09:55:32.103"></status>
</kw>
<msg timestamp="20201112 09:55:32.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:32.080" endtime="20201112 09:55:32.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:32.106" endtime="20201112 09:55:32.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.113" endtime="20201112 09:55:32.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.072" endtime="20201112 09:55:32.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.066" endtime="20201112 09:55:32.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.136" endtime="20201112 09:55:32.475"></status>
</kw>
<msg timestamp="20201112 09:55:32.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042799042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042847611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.133" endtime="20201112 09:55:32.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042799042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042847611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.485" endtime="20201112 09:55:32.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.504" endtime="20201112 09:55:32.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.126" endtime="20201112 09:55:32.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.121" endtime="20201112 09:55:32.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:32.524" level="INFO">${RESULT} = [{'time': 0.042847611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.856899999999831e-05, 'source_diff': 4.856899999999831e-05}, {'time': 0.042898611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:32.514" endtime="20201112 09:55:32.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:32.555" level="INFO">${ACCURACY} = {'diff': [4.856899999999831e-05, 4.875000000000018e-05, 4.845800000000122e-05, 4.862499999999659e-05, 4.877799999999932e-05, 4.8945000000001626e-05, 4.929099999999992e-05, 4.863899999999616e-05, 4.836...</msg>
<status status="PASS" starttime="20201112 09:55:32.526" endtime="20201112 09:55:32.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.566" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:55:32.563" endtime="20201112 09:55:32.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.571" level="INFO">VALUE: [4.856899999999831e-05, 4.875000000000018e-05, 4.845800000000122e-05, 4.862499999999659e-05, 4.877799999999932e-05, 4.8945000000001626e-05, 4.929099999999992e-05, 4.863899999999616e-05, 4.836099999999677e-05, 4.852799999999907e-05, 4.920899999999451e-05, 4.8695000000001376e-05, 4.855499999999874e-05, 4.927700000000035e-05, 4.880499999999899e-05, 4.900000000000043e-05, 4.855499999999874e-05, 4.875000000000018e-05, 4.854099999999917e-05, 4.8639000000003096e-05, 4.8431000000001556e-05, 4.884700000000464e-05, 4.8667000000002236e-05, 4.898600000000086e-05, 4.85139999999995e-05, 4.888899999999641e-05, 4.838899999999591e-05, 4.904199999999914e-05, 4.911099999999752e-05, 4.849999999999993e-05, 4.905499999999924e-05, 4.8931000000002056e-05, 4.908400000000479e-05, 4.856899999999831e-05, 4.9151999999996754e-05, 4.890200000000344e-05, 4.897200000000129e-05, 4.897200000000129e-05, 4.868000000000233e-05, 4.829099999999892e-05, 4.85139999999995e-05, 4.884700000000464e-05, 4.837499999999634e-05, 4.895800000000172e-05, 4.91669999999958e-05, 4.88060000000054e-05, 4.927799999999982e-05, 4.9167000000002736e-05, 4.904199999999914e-05, 4.879199999999889e-05]</msg>
<status status="PASS" starttime="20201112 09:55:32.568" endtime="20201112 09:55:32.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.556" endtime="20201112 09:55:32.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.581" endtime="20201112 09:55:32.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:32.589" endtime="20201112 09:55:32.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.585" endtime="20201112 09:55:32.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.576" endtime="20201112 09:55:32.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.062" endtime="20201112 09:55:32.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.061" endtime="20201112 09:55:32.616"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.639" endtime="20201112 09:55:32.659"></status>
</kw>
<msg timestamp="20201112 09:55:32.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:32.635" endtime="20201112 09:55:32.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:32.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:32.662" endtime="20201112 09:55:32.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.669" endtime="20201112 09:55:32.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.628" endtime="20201112 09:55:32.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.622" endtime="20201112 09:55:32.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:32.692" endtime="20201112 09:55:33.031"></status>
</kw>
<msg timestamp="20201112 09:55:33.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042606681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042656125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:32.689" endtime="20201112 09:55:33.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042606681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042656125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:33.041" endtime="20201112 09:55:33.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.060" endtime="20201112 09:55:33.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.682" endtime="20201112 09:55:33.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.677" endtime="20201112 09:55:33.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:33.080" level="INFO">${RESULT} = [{'time': 0.042656125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.944400000000265e-05, 'source_diff': 4.944400000000265e-05}, {'time': 0.042711125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:33.071" endtime="20201112 09:55:33.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:33.111" level="INFO">${ACCURACY} = {'diff': [4.944400000000265e-05, 4.983299999999913e-05, 4.998600000000186e-05, 5.013899999999766e-05, 4.9459000000001696e-05, 5.008399999999885e-05, 4.93469999999982e-05, 4.958299999999888e-05, 5.0055...</msg>
<status status="PASS" starttime="20201112 09:55:33.082" endtime="20201112 09:55:33.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.122" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:55:33.120" endtime="20201112 09:55:33.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.128" level="INFO">VALUE: [4.944400000000265e-05, 4.983299999999913e-05, 4.998600000000186e-05, 5.013899999999766e-05, 4.9459000000001696e-05, 5.008399999999885e-05, 4.93469999999982e-05, 4.958299999999888e-05, 5.005599999999971e-05, 4.970800000000247e-05, 4.9931000000003056e-05, 4.956899999999931e-05, 5.005500000000024e-05, 4.998600000000186e-05, 4.972200000000204e-05, 4.9721999999995103e-05, 4.998600000000186e-05, 5.0221999999995603e-05, 4.947200000000179e-05, 4.956899999999931e-05, 5.022200000000254e-05, 5.022200000000254e-05, 4.991699999999655e-05, 4.997200000000229e-05, 4.9959000000002196e-05, 4.951399999999356e-05, 5.004200000000014e-05, 5.011199999999799e-05, 4.970899999999501e-05, 4.990299999999698e-05, 5.008300000000632e-05, 4.955499999999974e-05, 4.933300000000557e-05, 4.9639000000004097e-05, 4.981899999999956e-05, 4.955499999999974e-05, 4.990299999999698e-05, 4.937499999999734e-05, 5.0193999999996464e-05, 5.0193999999996464e-05, 4.990299999999698e-05, 4.9889000000004347e-05, 4.9667000000003236e-05, 5.009699999999895e-05, 5.0207999999996034e-05, 5.0153000000004166e-05, 4.993099999999612e-05, 5.0207999999996034e-05, 4.9667000000003236e-05, 5.006999999999928e-05]</msg>
<status status="PASS" starttime="20201112 09:55:33.125" endtime="20201112 09:55:33.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.113" endtime="20201112 09:55:33.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.137" endtime="20201112 09:55:33.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:33.146" endtime="20201112 09:55:33.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.142" endtime="20201112 09:55:33.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.133" endtime="20201112 09:55:33.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.618" endtime="20201112 09:55:33.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:32.617" endtime="20201112 09:55:33.172"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.195" endtime="20201112 09:55:33.216"></status>
</kw>
<msg timestamp="20201112 09:55:33.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:33.192" endtime="20201112 09:55:33.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:33.219" endtime="20201112 09:55:33.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.225" endtime="20201112 09:55:33.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.184" endtime="20201112 09:55:33.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.178" endtime="20201112 09:55:33.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.249" endtime="20201112 09:55:33.587"></status>
</kw>
<msg timestamp="20201112 09:55:33.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042489319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042540194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:33.246" endtime="20201112 09:55:33.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042489319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042540194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:33.597" endtime="20201112 09:55:33.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.616" endtime="20201112 09:55:33.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.239" endtime="20201112 09:55:33.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.234" endtime="20201112 09:55:33.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:33.638" level="INFO">${RESULT} = [{'time': 0.042540194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.087500000000578e-05, 'source_diff': 5.087500000000578e-05}, {'time': 0.042595194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:33.628" endtime="20201112 09:55:33.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:33.669" level="INFO">${ACCURACY} = {'diff': [5.087500000000578e-05, 5.087500000000578e-05, 5.055500000000074e-05, 5.063899999999816e-05, 5.05140000000015e-05, 5.112499999999909e-05, 5.063899999999816e-05, 5.040299999999748e-05, 5.04299...</msg>
<status status="PASS" starttime="20201112 09:55:33.640" endtime="20201112 09:55:33.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.680" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:55:33.677" endtime="20201112 09:55:33.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.685" level="INFO">VALUE: [5.087500000000578e-05, 5.087500000000578e-05, 5.055500000000074e-05, 5.063899999999816e-05, 5.05140000000015e-05, 5.112499999999909e-05, 5.063899999999816e-05, 5.040299999999748e-05, 5.0429999999997144e-05, 5.1207999999997034e-05, 5.059699999999945e-05, 5.077800000000132e-05, 5.102800000000157e-05, 5.0485999999995423e-05, 5.03339999999991e-05, 5.073600000000261e-05, 5.0431000000003556e-05, 5.084799999999917e-05, 5.095899999999626e-05, 5.034799999999867e-05, 5.1165999999998324e-05, 5.054100000000117e-05, 5.0915999999998074e-05, 5.0429999999997144e-05, 5.055500000000074e-05, 5.0485999999995423e-05, 5.077800000000132e-05, 5.072200000000304e-05, 5.100000000000243e-05, 5.080600000000046e-05, 5.03469999999992e-05, 5.065299999999773e-05, 5.069499999999644e-05, 5.094499999999669e-05, 5.036099999999877e-05, 5.109799999999942e-05, 5.097299999999583e-05, 5.102699999999516e-05, 5.050000000000193e-05, 5.1165999999998324e-05, 5.073600000000261e-05, 5.086099999999927e-05, 5.03469999999992e-05, 5.0707999999996534e-05, 5.059699999999945e-05, 5.026400000000125e-05, 5.056999999999978e-05, 5.095800000000372e-05, 5.0417000000003986e-05, 5.0653000000004667e-05]</msg>
<status status="PASS" starttime="20201112 09:55:33.682" endtime="20201112 09:55:33.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.671" endtime="20201112 09:55:33.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.695" endtime="20201112 09:55:33.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:33.704" endtime="20201112 09:55:33.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.699" endtime="20201112 09:55:33.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.690" endtime="20201112 09:55:33.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.174" endtime="20201112 09:55:33.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.173" endtime="20201112 09:55:33.729"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.753" endtime="20201112 09:55:33.773"></status>
</kw>
<msg timestamp="20201112 09:55:33.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:33.749" endtime="20201112 09:55:33.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:33.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:33.776" endtime="20201112 09:55:33.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.783" endtime="20201112 09:55:33.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.742" endtime="20201112 09:55:33.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.736" endtime="20201112 09:55:33.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:33.806" endtime="20201112 09:55:34.145"></status>
</kw>
<msg timestamp="20201112 09:55:34.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042575667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042627181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:33.803" endtime="20201112 09:55:34.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042575667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042627181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.155" endtime="20201112 09:55:34.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.174" endtime="20201112 09:55:34.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.796" endtime="20201112 09:55:34.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.791" endtime="20201112 09:55:34.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:34.194" level="INFO">${RESULT} = [{'time': 0.042627181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15140000000025e-05, 'source_diff': 5.15140000000025e-05}, {'time': 0.042693194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:34.185" endtime="20201112 09:55:34.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:34.225" level="INFO">${ACCURACY} = {'diff': [5.15140000000025e-05, 5.209699999999401e-05, 5.195800000000472e-05, 5.176399999999581e-05, 5.138899999999891e-05, 5.165299999999873e-05, 5.204099999999573e-05, 5.198600000000386e-05, 5.16249...</msg>
<status status="PASS" starttime="20201112 09:55:34.196" endtime="20201112 09:55:34.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.236" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:55:34.234" endtime="20201112 09:55:34.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.242" level="INFO">VALUE: [5.15140000000025e-05, 5.209699999999401e-05, 5.195800000000472e-05, 5.176399999999581e-05, 5.138899999999891e-05, 5.165299999999873e-05, 5.204099999999573e-05, 5.198600000000386e-05, 5.162499999999959e-05, 5.191699999999855e-05, 5.2263999999996313e-05, 5.173600000000361e-05, 5.138899999999891e-05, 5.13470000000002e-05, 5.1915999999999074e-05, 5.157000000000078e-05, 5.173699999999615e-05, 5.182000000000103e-05, 5.2263999999996313e-05, 5.183300000000113e-05, 5.1943999999998214e-05, 5.18470000000007e-05, 5.213899999999966e-05, 5.163899999999916e-05, 5.2207999999998034e-05, 5.13470000000002e-05, 5.206900000000181e-05, 5.1679999999998394e-05, 5.1443999999997714e-05, 5.226400000000325e-05, 5.2014000000003e-05, 5.157000000000078e-05, 5.21669999999988e-05, 5.2207999999998034e-05, 5.1485999999996424e-05, 5.2179999999998894e-05, 5.154100000000217e-05, 5.147299999999633e-05, 5.201299999999659e-05, 5.150000000000293e-05, 5.136099999999977e-05, 5.1929999999998644e-05, 5.1693999999997964e-05, 5.209700000000095e-05, 5.155500000000174e-05, 5.161100000000002e-05, 5.213899999999966e-05, 5.231999999999459e-05, 5.165299999999873e-05, 5.144499999999719e-05]</msg>
<status status="PASS" starttime="20201112 09:55:34.239" endtime="20201112 09:55:34.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.227" endtime="20201112 09:55:34.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.252" endtime="20201112 09:55:34.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:34.260" endtime="20201112 09:55:34.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.256" endtime="20201112 09:55:34.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.247" endtime="20201112 09:55:34.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.732" endtime="20201112 09:55:34.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:33.730" endtime="20201112 09:55:34.286"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.309" endtime="20201112 09:55:34.330"></status>
</kw>
<msg timestamp="20201112 09:55:34.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:34.306" endtime="20201112 09:55:34.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:34.333" endtime="20201112 09:55:34.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.339" endtime="20201112 09:55:34.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.299" endtime="20201112 09:55:34.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.293" endtime="20201112 09:55:34.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.363" endtime="20201112 09:55:34.702"></status>
</kw>
<msg timestamp="20201112 09:55:34.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042972208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043025097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.360" endtime="20201112 09:55:34.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042972208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043025097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.712" endtime="20201112 09:55:34.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.721" endtime="20201112 09:55:34.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.352" endtime="20201112 09:55:34.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.348" endtime="20201112 09:55:34.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:34.730" level="INFO">${RESULT} = [{'time': 0.043025097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.288900000000041e-05, 'source_diff': 5.288900000000041e-05}, {'time': 0.043083083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:34.726" endtime="20201112 09:55:34.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:34.743" level="INFO">${ACCURACY} = {'diff': [5.288900000000041e-05, 5.2443999999998714e-05, 5.262500000000059e-05, 5.306999999999534e-05, 5.287500000000084e-05, 5.247200000000479e-05, 5.259699999999451e-05, 5.2693999999998964e-05, 5.23...</msg>
<status status="PASS" starttime="20201112 09:55:34.731" endtime="20201112 09:55:34.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.749" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:55:34.748" endtime="20201112 09:55:34.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.752" level="INFO">VALUE: [5.288900000000041e-05, 5.2443999999998714e-05, 5.262500000000059e-05, 5.306999999999534e-05, 5.287500000000084e-05, 5.247200000000479e-05, 5.259699999999451e-05, 5.2693999999998964e-05, 5.237500000000034e-05, 5.25140000000035e-05, 5.318099999999937e-05, 5.318099999999937e-05, 5.3277999999996883e-05, 5.2485999999997424e-05, 5.252799999999613e-05, 5.25140000000035e-05, 5.330600000000296e-05, 5.290299999999998e-05, 5.2471999999997854e-05, 5.273600000000461e-05, 5.230499999999555e-05, 5.2402000000000004e-05, 5.2971999999998354e-05, 5.233299999999469e-05, 5.288900000000041e-05, 5.280499999999605e-05, 5.286100000000127e-05, 5.286099999999433e-05, 5.265299999999973e-05, 5.313900000000066e-05, 5.319499999999894e-05, 5.315300000000023e-05, 5.331900000000306e-05, 5.33470000000022e-05, 5.236100000000077e-05, 5.277799999999638e-05, 5.3249999999997744e-05, 5.293099999999912e-05, 5.286100000000127e-05, 5.2499999999996994e-05, 5.283299999999519e-05, 5.238899999999991e-05, 5.306899999999587e-05, 5.275000000000418e-05, 5.25140000000035e-05, 5.305500000000324e-05, 5.311100000000152e-05, 5.255600000000221e-05, 5.25140000000035e-05, 5.2471999999997854e-05]</msg>
<status status="PASS" starttime="20201112 09:55:34.750" endtime="20201112 09:55:34.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.744" endtime="20201112 09:55:34.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.756" endtime="20201112 09:55:34.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:34.760" endtime="20201112 09:55:34.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.758" endtime="20201112 09:55:34.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.754" endtime="20201112 09:55:34.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.288" endtime="20201112 09:55:34.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.287" endtime="20201112 09:55:34.782"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.792" endtime="20201112 09:55:34.809"></status>
</kw>
<msg timestamp="20201112 09:55:34.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:34.791" endtime="20201112 09:55:34.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:34.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:34.811" endtime="20201112 09:55:34.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.814" endtime="20201112 09:55:34.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.787" endtime="20201112 09:55:34.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.785" endtime="20201112 09:55:34.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:34.825" endtime="20201112 09:55:35.112"></status>
</kw>
<msg timestamp="20201112 09:55:35.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025003292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:34.823" endtime="20201112 09:55:35.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025003292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.116" endtime="20201112 09:55:35.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.125" endtime="20201112 09:55:35.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.820" endtime="20201112 09:55:35.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.818" endtime="20201112 09:55:35.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:35.134" level="INFO">${RESULT} = [{'time': 0.025056819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.352700000000113e-05, 'source_diff': 5.352700000000113e-05}, {'time': 0.025112792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:35.130" endtime="20201112 09:55:35.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:35.147" level="INFO">${ACCURACY} = {'diff': [5.352700000000113e-05, 5.3749999999998244e-05, 5.390299999999751e-05, 5.35280000000006e-05, 5.401299999999859e-05, 5.401299999999859e-05, 5.413899999999819e-05, 5.4263999999998314e-05, 5.397...</msg>
<status status="PASS" starttime="20201112 09:55:35.135" endtime="20201112 09:55:35.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.153" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:55:35.152" endtime="20201112 09:55:35.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.155" level="INFO">VALUE: [5.352700000000113e-05, 5.3749999999998244e-05, 5.390299999999751e-05, 5.35280000000006e-05, 5.401299999999859e-05, 5.401299999999859e-05, 5.413899999999819e-05, 5.4263999999998314e-05, 5.3971999999999354e-05, 5.363900000000116e-05, 5.3693999999999964e-05, 5.430500000000102e-05, 5.4263999999998314e-05, 5.404200000000067e-05, 5.405600000000024e-05, 5.379199999999695e-05, 5.331999999999906e-05, 5.3735999999998674e-05, 5.351400000000103e-05, 5.388900000000141e-05, 5.345899999999876e-05, 5.372300000000205e-05, 5.391699999999708e-05, 5.402700000000163e-05, 5.390300000000098e-05, 5.430500000000102e-05, 5.387499999999837e-05, 5.376400000000128e-05, 5.3499999999997994e-05, 5.411099999999905e-05, 5.337500000000134e-05, 5.3999999999998494e-05, 5.4249999999998744e-05, 5.379200000000042e-05, 5.415300000000123e-05, 5.334699999999873e-05, 5.369499999999944e-05, 5.4249999999998744e-05, 5.415299999999776e-05, 5.33479999999982e-05, 5.426400000000178e-05, 5.359699999999898e-05, 5.3721999999999104e-05, 5.3416000000000574e-05, 5.3999999999998494e-05, 5.3735999999998674e-05, 5.333299999999916e-05, 5.3749999999998244e-05, 5.3485999999998424e-05, 5.365300000000073e-05]</msg>
<status status="PASS" starttime="20201112 09:55:35.154" endtime="20201112 09:55:35.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.148" endtime="20201112 09:55:35.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.160" endtime="20201112 09:55:35.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:35.164" endtime="20201112 09:55:35.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.162" endtime="20201112 09:55:35.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.158" endtime="20201112 09:55:35.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.783" endtime="20201112 09:55:35.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:34.782" endtime="20201112 09:55:35.185"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.196" endtime="20201112 09:55:35.214"></status>
</kw>
<msg timestamp="20201112 09:55:35.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:35.195" endtime="20201112 09:55:35.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:35.215" endtime="20201112 09:55:35.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.218" endtime="20201112 09:55:35.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.191" endtime="20201112 09:55:35.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.189" endtime="20201112 09:55:35.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.229" endtime="20201112 09:55:35.515"></status>
</kw>
<msg timestamp="20201112 09:55:35.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025046708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.228" endtime="20201112 09:55:35.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025046708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.520" endtime="20201112 09:55:35.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.528" endtime="20201112 09:55:35.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.224" endtime="20201112 09:55:35.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.222" endtime="20201112 09:55:35.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:35.539" level="INFO">${RESULT} = [{'time': 0.025046708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4471999999999854e-05, 'source_diff': 5.4471999999999854e-05}, {'time': 0.025114708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:35.534" endtime="20201112 09:55:35.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:35.553" level="INFO">${ACCURACY} = {'diff': [5.4471999999999854e-05, 5.452699999999866e-05, 5.4680000000001394e-05, 5.450000000000246e-05, 5.463900000000216e-05, 5.45549999999978e-05, 5.456899999999737e-05, 5.4763999999998814e-05, 5.52...</msg>
<status status="PASS" starttime="20201112 09:55:35.540" endtime="20201112 09:55:35.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.558" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:55:35.557" endtime="20201112 09:55:35.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.561" level="INFO">VALUE: [5.4471999999999854e-05, 5.452699999999866e-05, 5.4680000000001394e-05, 5.450000000000246e-05, 5.463900000000216e-05, 5.45549999999978e-05, 5.456899999999737e-05, 5.4763999999998814e-05, 5.529200000000192e-05, 5.519500000000094e-05, 5.515299999999876e-05, 5.4513999999998564e-05, 5.490300000000198e-05, 5.493100000000112e-05, 5.465300000000173e-05, 5.520900000000051e-05, 5.455600000000074e-05, 5.4652000000002254e-05, 5.4944000000001214e-05, 5.4930000000001644e-05, 5.487500000000284e-05, 5.5208000000001034e-05, 5.488899999999894e-05, 5.451400000000203e-05, 5.4763999999998814e-05, 5.484700000000023e-05, 5.461099999999955e-05, 5.463899999999869e-05, 5.4777999999998384e-05, 5.487499999999937e-05, 5.4972000000000354e-05, 5.4471999999999854e-05, 5.508400000000038e-05, 5.445899999999976e-05, 5.509799999999995e-05, 5.4513999999998564e-05, 5.5305999999998023e-05, 5.448600000000289e-05, 5.434699999999973e-05, 5.438899999999844e-05, 5.501400000000253e-05, 5.490300000000198e-05, 5.504099999999873e-05, 5.43609999999993e-05, 5.508300000000091e-05, 5.4513999999998564e-05, 5.484700000000023e-05, 5.5236000000000174e-05, 5.490300000000198e-05, 5.4985999999999924e-05]</msg>
<status status="PASS" starttime="20201112 09:55:35.560" endtime="20201112 09:55:35.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.554" endtime="20201112 09:55:35.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.566" endtime="20201112 09:55:35.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:35.570" endtime="20201112 09:55:35.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.568" endtime="20201112 09:55:35.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.564" endtime="20201112 09:55:35.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.187" endtime="20201112 09:55:35.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.186" endtime="20201112 09:55:35.591"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.602" endtime="20201112 09:55:35.620"></status>
</kw>
<msg timestamp="20201112 09:55:35.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:35.600" endtime="20201112 09:55:35.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:35.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:35.622" endtime="20201112 09:55:35.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.629" endtime="20201112 09:55:35.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.597" endtime="20201112 09:55:35.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.594" endtime="20201112 09:55:35.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:35.652" endtime="20201112 09:55:35.990"></status>
</kw>
<msg timestamp="20201112 09:55:35.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025454403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025509875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:35.649" endtime="20201112 09:55:35.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025454403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025509875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.000" endtime="20201112 09:55:36.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.019" endtime="20201112 09:55:36.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.642" endtime="20201112 09:55:36.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.637" endtime="20201112 09:55:36.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:36.039" level="INFO">${RESULT} = [{'time': 0.025509875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5472000000000854e-05, 'source_diff': 5.5472000000000854e-05}, {'time': 0.025579889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:36.029" endtime="20201112 09:55:36.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:36.069" level="INFO">${ACCURACY} = {'diff': [5.5472000000000854e-05, 5.582000000000156e-05, 5.609699999999801e-05, 5.607000000000181e-05, 5.6055999999998773e-05, 5.609800000000095e-05, 5.616699999999933e-05, 5.615299999999976e-05, 5.62...</msg>
<status status="PASS" starttime="20201112 09:55:36.041" endtime="20201112 09:55:36.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.081" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:55:36.078" endtime="20201112 09:55:36.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.086" level="INFO">VALUE: [5.5472000000000854e-05, 5.582000000000156e-05, 5.609699999999801e-05, 5.607000000000181e-05, 5.6055999999998773e-05, 5.609800000000095e-05, 5.616699999999933e-05, 5.615299999999976e-05, 5.6277999999999884e-05, 5.555600000000174e-05, 5.5722000000001104e-05, 5.5638000000000215e-05, 5.5651999999999785e-05, 5.5736000000000674e-05, 5.6277999999999884e-05, 5.559700000000098e-05, 5.5486000000000424e-05, 5.631900000000259e-05, 5.6236000000001174e-05, 5.609700000000148e-05, 5.5736000000000674e-05, 5.609700000000148e-05, 5.545900000000076e-05, 5.609700000000148e-05, 5.5388000000003434e-05, 5.55280000000026e-05, 5.613900000000019e-05, 5.563899999999969e-05, 5.536099999999683e-05, 5.6152000000000285e-05, 5.5972000000001354e-05, 5.584699999999776e-05, 5.5443999999998245e-05, 5.615299999999976e-05, 5.615299999999976e-05, 5.5930000000002644e-05, 5.5472000000000854e-05, 5.5722000000001104e-05, 5.6250000000000744e-05, 5.534700000000073e-05, 5.53610000000003e-05, 5.6264000000000314e-05, 5.540300000000248e-05, 5.613900000000019e-05, 5.584799999999723e-05, 5.588899999999994e-05, 5.533300000000116e-05, 5.5471999999997385e-05, 5.579099999999948e-05, 5.5943999999998745e-05]</msg>
<status status="PASS" starttime="20201112 09:55:36.083" endtime="20201112 09:55:36.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.071" endtime="20201112 09:55:36.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.096" endtime="20201112 09:55:36.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:36.105" endtime="20201112 09:55:36.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.100" endtime="20201112 09:55:36.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.091" endtime="20201112 09:55:36.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.592" endtime="20201112 09:55:36.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:35.592" endtime="20201112 09:55:36.131"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.154" endtime="20201112 09:55:36.174"></status>
</kw>
<msg timestamp="20201112 09:55:36.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:36.150" endtime="20201112 09:55:36.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:36.178" endtime="20201112 09:55:36.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.184" endtime="20201112 09:55:36.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.143" endtime="20201112 09:55:36.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.137" endtime="20201112 09:55:36.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.208" endtime="20201112 09:55:36.547"></status>
</kw>
<msg timestamp="20201112 09:55:36.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043123389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043180694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.204" endtime="20201112 09:55:36.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043123389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043180694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.557" endtime="20201112 09:55:36.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.577" endtime="20201112 09:55:36.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.197" endtime="20201112 09:55:36.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.192" endtime="20201112 09:55:36.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:36.597" level="INFO">${RESULT} = [{'time': 0.043180694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.730500000000055e-05, 'source_diff': 5.730500000000055e-05}, {'time': 0.043251708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:36.587" endtime="20201112 09:55:36.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:36.627" level="INFO">${ACCURACY} = {'diff': [5.730500000000055e-05, 5.711099999999858e-05, 5.663899999999722e-05, 5.6750000000001244e-05, 5.6680000000003394e-05, 5.66670000000033e-05, 5.708299999999944e-05, 5.6722000000002104e-05, 5.65...</msg>
<status status="PASS" starttime="20201112 09:55:36.599" endtime="20201112 09:55:36.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.639" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:55:36.636" endtime="20201112 09:55:36.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.644" level="INFO">VALUE: [5.730500000000055e-05, 5.711099999999858e-05, 5.663899999999722e-05, 5.6750000000001244e-05, 5.6680000000003394e-05, 5.66670000000033e-05, 5.708299999999944e-05, 5.6722000000002104e-05, 5.6514000000000564e-05, 5.6971999999995415e-05, 5.6764000000000814e-05, 5.711100000000552e-05, 5.7306000000000024e-05, 5.6528000000000134e-05, 5.693099999999618e-05, 5.697300000000183e-05, 5.6388000000004435e-05, 5.733299999999969e-05, 5.708299999999944e-05, 5.6680000000003394e-05, 5.6430000000003144e-05, 5.6541999999999704e-05, 5.7278000000000884e-05, 5.6735999999994735e-05, 5.7193999999996525e-05, 5.633299999999869e-05, 5.708299999999944e-05, 5.716699999999686e-05, 5.7221999999995665e-05, 5.670900000000201e-05, 5.7000000000001494e-05, 5.711199999999805e-05, 5.6486000000001424e-05, 5.647299999999439e-05, 5.677700000000091e-05, 5.727700000000141e-05, 5.733299999999969e-05, 5.6458000000002284e-05, 5.6513999999993625e-05, 5.7264000000001314e-05, 5.638899999999697e-05, 5.684699999999876e-05, 5.7028000000000634e-05, 5.6555999999999274e-05, 5.6486000000001424e-05, 5.659799999999798e-05, 5.6985999999994985e-05, 5.711100000000552e-05, 5.7263999999994375e-05, 5.6569999999998843e-05]</msg>
<status status="PASS" starttime="20201112 09:55:36.641" endtime="20201112 09:55:36.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.629" endtime="20201112 09:55:36.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.654" endtime="20201112 09:55:36.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:36.663" endtime="20201112 09:55:36.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.658" endtime="20201112 09:55:36.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.649" endtime="20201112 09:55:36.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.133" endtime="20201112 09:55:36.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.131" endtime="20201112 09:55:36.689"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.712" endtime="20201112 09:55:36.733"></status>
</kw>
<msg timestamp="20201112 09:55:36.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:36.708" endtime="20201112 09:55:36.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:36.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:36.736" endtime="20201112 09:55:36.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.743" endtime="20201112 09:55:36.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.701" endtime="20201112 09:55:36.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.695" endtime="20201112 09:55:36.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:36.766" endtime="20201112 09:55:37.104"></status>
</kw>
<msg timestamp="20201112 09:55:37.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043054806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043112764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:36.763" endtime="20201112 09:55:37.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043054806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043112764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.114" endtime="20201112 09:55:37.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.134" endtime="20201112 09:55:37.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.755" endtime="20201112 09:55:37.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.751" endtime="20201112 09:55:37.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:37.153" level="INFO">${RESULT} = [{'time': 0.043112764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7957999999996845e-05, 'source_diff': 5.7957999999996845e-05}, {'time': 0.04317575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:55:37.144" endtime="20201112 09:55:37.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:37.184" level="INFO">${ACCURACY} = {'diff': [5.7957999999996845e-05, 5.743099999999668e-05, 5.8056000000000774e-05, 5.811099999999958e-05, 5.7513999999994625e-05, 5.812499999999915e-05, 5.76949999999965e-05, 5.745900000000276e-05, 5.81...</msg>
<status status="PASS" starttime="20201112 09:55:37.155" endtime="20201112 09:55:37.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.195" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:55:37.193" endtime="20201112 09:55:37.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.201" level="INFO">VALUE: [5.7957999999996845e-05, 5.743099999999668e-05, 5.8056000000000774e-05, 5.811099999999958e-05, 5.7513999999994625e-05, 5.812499999999915e-05, 5.76949999999965e-05, 5.745900000000276e-05, 5.8137999999999246e-05, 5.797299999999589e-05, 5.7637999999998746e-05, 5.7471999999995915e-05, 5.7764000000001814e-05, 5.7694000000003964e-05, 5.781900000000062e-05, 5.781899999999368e-05, 5.7514000000001564e-05, 5.831900000000112e-05, 5.781900000000062e-05, 5.8070000000000344e-05, 5.744500000000319e-05, 5.7556000000000274e-05, 5.7499999999995055e-05, 5.73470000000062e-05, 5.8042000000001204e-05, 5.812499999999915e-05, 5.811199999999905e-05, 5.8306000000001024e-05, 5.776300000000234e-05, 5.78749999999989e-05, 5.8221999999996665e-05, 5.7929999999997706e-05, 5.741699999999711e-05, 5.734699999999926e-05, 5.759699999999951e-05, 5.7957999999996845e-05, 5.8207999999997095e-05, 5.7986000000002924e-05, 5.813899999999872e-05, 5.8042000000001204e-05, 5.8083999999999913e-05, 5.7764000000001814e-05, 5.811199999999905e-05, 5.8014000000002064e-05, 5.8250000000002744e-05, 5.7708000000003534e-05, 5.830500000000155e-05, 5.8151999999998816e-05, 5.733299999999969e-05, 5.7471999999995915e-05]</msg>
<status status="PASS" starttime="20201112 09:55:37.198" endtime="20201112 09:55:37.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.186" endtime="20201112 09:55:37.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.211" endtime="20201112 09:55:37.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:37.219" endtime="20201112 09:55:37.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.215" endtime="20201112 09:55:37.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.206" endtime="20201112 09:55:37.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.691" endtime="20201112 09:55:37.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:36.690" endtime="20201112 09:55:37.245"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.268" endtime="20201112 09:55:37.290"></status>
</kw>
<msg timestamp="20201112 09:55:37.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:37.265" endtime="20201112 09:55:37.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:37.293" endtime="20201112 09:55:37.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.300" endtime="20201112 09:55:37.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.258" endtime="20201112 09:55:37.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.252" endtime="20201112 09:55:37.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.324" endtime="20201112 09:55:37.663"></status>
</kw>
<msg timestamp="20201112 09:55:37.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043237917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043297167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.320" endtime="20201112 09:55:37.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043237917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043297167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.673" endtime="20201112 09:55:37.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.692" endtime="20201112 09:55:37.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.313" endtime="20201112 09:55:37.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.308" endtime="20201112 09:55:37.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:37.714" level="INFO">${RESULT} = [{'time': 0.043297167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9249999999996805e-05, 'source_diff': 5.9249999999996805e-05}, {'time': 0.043358167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:55:37.704" endtime="20201112 09:55:37.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:37.744" level="INFO">${ACCURACY} = {'diff': [5.9249999999996805e-05, 5.8764000000002814e-05, 5.888899999999947e-05, 5.8347999999999733e-05, 5.8735999999996735e-05, 5.92629999999969e-05, 5.8958000000004784e-05, 5.8514000000002564e-05, 5...</msg>
<status status="PASS" starttime="20201112 09:55:37.716" endtime="20201112 09:55:37.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.756" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:55:37.753" endtime="20201112 09:55:37.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.761" level="INFO">VALUE: [5.9249999999996805e-05, 5.8764000000002814e-05, 5.888899999999947e-05, 5.8347999999999733e-05, 5.8735999999996735e-05, 5.92629999999969e-05, 5.8958000000004784e-05, 5.8514000000002564e-05, 5.8943999999998276e-05, 5.854100000000223e-05, 5.890299999999904e-05, 5.8792000000001954e-05, 5.890299999999904e-05, 5.9291999999995515e-05, 5.9264000000003314e-05, 5.9278000000002884e-05, 5.8736000000003674e-05, 5.918099999999843e-05, 5.90550000000023e-05, 5.86949999999975e-05, 5.911100000000058e-05, 5.8514000000002564e-05, 5.836099999999983e-05, 5.8736000000003674e-05, 5.8957999999997845e-05, 5.9306000000002024e-05, 5.8528000000002134e-05, 5.913899999999972e-05, 5.9291999999995515e-05, 5.868100000000487e-05, 5.836099999999983e-05, 5.9306000000002024e-05, 5.9264000000003314e-05, 5.9055999999994835e-05, 5.861100000000008e-05, 5.8542000000001704e-05, 5.861199999999955e-05, 5.8848000000000233e-05, 5.8930000000005645e-05, 5.880500000000205e-05, 5.877699999999597e-05, 5.862499999999965e-05, 5.8778000000002384e-05, 5.879099999999554e-05, 5.931899999999518e-05, 5.886100000000033e-05, 5.88749999999999e-05, 5.9278000000002884e-05, 5.919500000000494e-05, 5.8499999999996055e-05]</msg>
<status status="PASS" starttime="20201112 09:55:37.758" endtime="20201112 09:55:37.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.746" endtime="20201112 09:55:37.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.771" endtime="20201112 09:55:37.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:37.779" endtime="20201112 09:55:37.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.775" endtime="20201112 09:55:37.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.766" endtime="20201112 09:55:37.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.247" endtime="20201112 09:55:37.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.246" endtime="20201112 09:55:37.805"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.828" endtime="20201112 09:55:37.850"></status>
</kw>
<msg timestamp="20201112 09:55:37.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:37.825" endtime="20201112 09:55:37.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:37.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:37.853" endtime="20201112 09:55:37.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.860" endtime="20201112 09:55:37.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.818" endtime="20201112 09:55:37.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.812" endtime="20201112 09:55:37.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:37.884" endtime="20201112 09:55:38.221"></status>
</kw>
<msg timestamp="20201112 09:55:38.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042719139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042778944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:37.880" endtime="20201112 09:55:38.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042719139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042778944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.231" endtime="20201112 09:55:38.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.250" endtime="20201112 09:55:38.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.873" endtime="20201112 09:55:38.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.868" endtime="20201112 09:55:38.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:38.269" level="INFO">${RESULT} = [{'time': 0.042778944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.980499999999611e-05, 'source_diff': 5.980499999999611e-05}, {'time': 0.042844958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:38.260" endtime="20201112 09:55:38.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:38.300" level="INFO">${ACCURACY} = {'diff': [5.980499999999611e-05, 5.980500000000305e-05, 5.9500000000003994e-05, 5.940299999999954e-05, 6.030499999999661e-05, 6.013900000000072e-05, 5.980500000000305e-05, 6.0236000000005174e-05, 5.95...</msg>
<status status="PASS" starttime="20201112 09:55:38.272" endtime="20201112 09:55:38.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.312" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:55:38.309" endtime="20201112 09:55:38.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.317" level="INFO">VALUE: [5.980499999999611e-05, 5.980500000000305e-05, 5.9500000000003994e-05, 5.940299999999954e-05, 6.030499999999661e-05, 6.013900000000072e-05, 5.980500000000305e-05, 6.0236000000005174e-05, 5.9570000000001844e-05, 5.968099999999893e-05, 6.016699999999986e-05, 5.9971999999998415e-05, 5.9348000000000734e-05, 5.997300000000483e-05, 6.013900000000072e-05, 6.008300000000244e-05, 6.002700000000416e-05, 5.990300000000004e-05, 5.977699999999697e-05, 6.034699999999532e-05, 6.0179999999999956e-05, 5.947299999999739e-05, 5.963900000000022e-05, 5.9541999999995765e-05, 5.9556000000002274e-05, 5.994499999999875e-05, 5.9320000000001594e-05, 5.986100000000133e-05, 5.9334000000001164e-05, 5.994500000000569e-05, 5.9362000000000303e-05, 5.98750000000009e-05, 5.972299999999764e-05, 5.9486000000004424e-05, 5.9707999999998596e-05, 5.9679999999999456e-05, 5.9693999999999026e-05, 6.029100000000398e-05, 5.965299999999979e-05, 6.013900000000072e-05, 5.984700000000176e-05, 6.0306000000003024e-05, 5.9805999999995585e-05, 5.9721999999998165e-05, 5.9584000000001414e-05, 5.9542000000002704e-05, 5.9555999999995335e-05, 5.9862000000000803e-05, 6.030499999999661e-05, 5.9694000000005965e-05]</msg>
<status status="PASS" starttime="20201112 09:55:38.314" endtime="20201112 09:55:38.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.302" endtime="20201112 09:55:38.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.333" endtime="20201112 09:55:38.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:38.342" endtime="20201112 09:55:38.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.337" endtime="20201112 09:55:38.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.328" endtime="20201112 09:55:38.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.807" endtime="20201112 09:55:38.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:37.806" endtime="20201112 09:55:38.368"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.391" endtime="20201112 09:55:38.412"></status>
</kw>
<msg timestamp="20201112 09:55:38.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:38.387" endtime="20201112 09:55:38.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:38.415" endtime="20201112 09:55:38.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.422" endtime="20201112 09:55:38.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.380" endtime="20201112 09:55:38.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.374" endtime="20201112 09:55:38.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.446" endtime="20201112 09:55:38.784"></status>
</kw>
<msg timestamp="20201112 09:55:38.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042811333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042871778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.442" endtime="20201112 09:55:38.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042811333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042871778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:38.794" endtime="20201112 09:55:38.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.813" endtime="20201112 09:55:38.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.435" endtime="20201112 09:55:38.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.430" endtime="20201112 09:55:38.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:38.833" level="INFO">${RESULT} = [{'time': 0.042871778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.044499999999925e-05, 'source_diff': 6.044499999999925e-05}, {'time': 0.042944806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:38.823" endtime="20201112 09:55:38.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:38.861" level="INFO">${ACCURACY} = {'diff': [6.044499999999925e-05, 6.03750000000014e-05, 6.0555999999996335e-05, 6.111100000000258e-05, 6.122199999999967e-05, 6.056899999999643e-05, 6.106900000000387e-05, 6.133300000000369e-05, 6.1235...</msg>
<status status="PASS" starttime="20201112 09:55:38.835" endtime="20201112 09:55:38.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.867" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:55:38.866" endtime="20201112 09:55:38.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.869" level="INFO">VALUE: [6.044499999999925e-05, 6.03750000000014e-05, 6.0555999999996335e-05, 6.111100000000258e-05, 6.122199999999967e-05, 6.056899999999643e-05, 6.106900000000387e-05, 6.133300000000369e-05, 6.123599999999924e-05, 6.065300000000079e-05, 6.112499999999521e-05, 6.0764000000004814e-05, 6.126399999999838e-05, 6.109700000000301e-05, 6.122199999999967e-05, 6.104199999999727e-05, 6.13200000000036e-05, 6.043099999999968e-05, 6.111100000000258e-05, 6.072299999999864e-05, 6.0320000000002594e-05, 6.0999999999998555e-05, 6.0471999999998916e-05, 6.109700000000301e-05, 6.0514000000004564e-05, 6.12499999999988e-05, 6.0680000000000456e-05, 6.056900000000337e-05, 6.0694000000000026e-05, 6.056900000000337e-05, 6.0499999999998055e-05, 6.0430000000000206e-05, 6.111099999999564e-05, 6.065300000000079e-05, 6.127800000000488e-05, 6.0612000000001554e-05, 6.04870000000049e-05, 6.036100000000183e-05, 6.127699999999847e-05, 6.0707999999999596e-05, 6.0430000000000206e-05, 6.079099999999754e-05, 6.116600000000139e-05, 6.079099999999754e-05, 6.0778000000004384e-05, 6.0763999999997875e-05, 6.0514000000004564e-05, 6.1013999999998125e-05, 6.127800000000488e-05, 6.130599999999709e-05]</msg>
<status status="PASS" starttime="20201112 09:55:38.868" endtime="20201112 09:55:38.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.862" endtime="20201112 09:55:38.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.874" endtime="20201112 09:55:38.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:38.878" endtime="20201112 09:55:38.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.876" endtime="20201112 09:55:38.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.872" endtime="20201112 09:55:38.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.370" endtime="20201112 09:55:38.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.369" endtime="20201112 09:55:38.899"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.910" endtime="20201112 09:55:38.927"></status>
</kw>
<msg timestamp="20201112 09:55:38.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:38.909" endtime="20201112 09:55:38.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:38.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:38.929" endtime="20201112 09:55:38.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.932" endtime="20201112 09:55:38.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.905" endtime="20201112 09:55:38.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.903" endtime="20201112 09:55:38.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:38.943" endtime="20201112 09:55:39.260"></status>
</kw>
<msg timestamp="20201112 09:55:39.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025200194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02526225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:38.942" endtime="20201112 09:55:39.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025200194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02526225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:39.270" endtime="20201112 09:55:39.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.289" endtime="20201112 09:55:39.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.938" endtime="20201112 09:55:39.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.936" endtime="20201112 09:55:39.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:39.308" level="INFO">${RESULT} = [{'time': 0.02526225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.20560000000013e-05, 'source_diff': 6.20560000000013e-05}, {'time': 0.025335333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:55:39.299" endtime="20201112 09:55:39.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:39.339" level="INFO">${ACCURACY} = {'diff': [6.20560000000013e-05, 6.230500000000208e-05, 6.159700000000004e-05, 6.134699999999979e-05, 6.16950000000005e-05, 6.211100000000011e-05, 6.17499999999993e-05, 6.177800000000191e-05, 6.1638999...</msg>
<status status="PASS" starttime="20201112 09:55:39.311" endtime="20201112 09:55:39.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.351" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:55:39.348" endtime="20201112 09:55:39.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.356" level="INFO">VALUE: [6.20560000000013e-05, 6.230500000000208e-05, 6.159700000000004e-05, 6.134699999999979e-05, 6.16950000000005e-05, 6.211100000000011e-05, 6.17499999999993e-05, 6.177800000000191e-05, 6.163899999999875e-05, 6.223600000000024e-05, 6.167999999999799e-05, 6.226399999999938e-05, 6.161099999999961e-05, 6.190300000000204e-05, 6.209700000000054e-05, 6.167999999999799e-05, 6.222200000000067e-05, 6.186099999999986e-05, 6.166599999999842e-05, 6.177799999999845e-05, 6.177799999999845e-05, 6.163900000000222e-05, 6.20829999999975e-05, 6.197299999999989e-05, 6.150000000000252e-05, 6.165199999999885e-05, 6.141599999999817e-05, 6.19439999999978e-05, 6.226399999999938e-05, 6.141600000000164e-05, 6.231899999999818e-05, 6.211100000000011e-05, 6.22499999999998e-05, 6.20140000000026e-05, 6.158399999999994e-05, 6.15140000000021e-05, 6.205599999999784e-05, 6.2195000000001e-05, 6.193100000000118e-05, 6.209800000000001e-05, 6.216599999999892e-05, 6.149999999999906e-05, 6.195800000000085e-05, 6.198599999999999e-05, 6.181899999999768e-05, 6.144400000000078e-05, 6.226399999999938e-05, 6.159799999999951e-05, 6.172200000000017e-05, 6.168100000000093e-05]</msg>
<status status="PASS" starttime="20201112 09:55:39.353" endtime="20201112 09:55:39.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.341" endtime="20201112 09:55:39.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.366" endtime="20201112 09:55:39.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:39.374" endtime="20201112 09:55:39.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.370" endtime="20201112 09:55:39.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.361" endtime="20201112 09:55:39.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.900" endtime="20201112 09:55:39.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:38.900" endtime="20201112 09:55:39.400"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.423" endtime="20201112 09:55:39.444"></status>
</kw>
<msg timestamp="20201112 09:55:39.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:39.420" endtime="20201112 09:55:39.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:39.448" endtime="20201112 09:55:39.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.454" endtime="20201112 09:55:39.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.413" endtime="20201112 09:55:39.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.407" endtime="20201112 09:55:39.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.478" endtime="20201112 09:55:39.816"></status>
</kw>
<msg timestamp="20201112 09:55:39.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042986306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043049292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:39.475" endtime="20201112 09:55:39.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042986306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043049292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:39.825" endtime="20201112 09:55:39.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.844" endtime="20201112 09:55:39.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.467" endtime="20201112 09:55:39.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.463" endtime="20201112 09:55:39.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:39.866" level="INFO">${RESULT} = [{'time': 0.043049292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.298600000000099e-05, 'source_diff': 6.298600000000099e-05}, {'time': 0.043127292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:39.857" endtime="20201112 09:55:39.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:39.897" level="INFO">${ACCURACY} = {'diff': [6.298600000000099e-05, 6.305599999999884e-05, 6.254199999999877e-05, 6.269399999999509e-05, 6.23880000000035e-05, 6.247200000000092e-05, 6.319399999999559e-05, 6.268100000000193e-05, 6.30140...</msg>
<status status="PASS" starttime="20201112 09:55:39.868" endtime="20201112 09:55:39.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.908" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:55:39.906" endtime="20201112 09:55:39.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:39.914" level="INFO">VALUE: [6.298600000000099e-05, 6.305599999999884e-05, 6.254199999999877e-05, 6.269399999999509e-05, 6.23880000000035e-05, 6.247200000000092e-05, 6.319399999999559e-05, 6.268100000000193e-05, 6.301400000000013e-05, 6.256900000000537e-05, 6.247200000000092e-05, 6.311099999999764e-05, 6.254199999999877e-05, 6.244500000000125e-05, 6.272200000000117e-05, 6.326400000000038e-05, 6.309699999999807e-05, 6.309799999999754e-05, 6.257000000000484e-05, 6.244400000000178e-05, 6.234699999999732e-05, 6.247200000000092e-05, 6.32500000000008e-05, 6.311100000000458e-05, 6.329199999999952e-05, 6.259699999999757e-05, 6.326400000000038e-05, 6.311100000000458e-05, 6.241699999999517e-05, 6.315299999999635e-05, 6.309699999999807e-05, 6.311100000000458e-05, 6.247199999999398e-05, 6.236099999999689e-05, 6.279099999999954e-05, 6.270900000000107e-05, 6.269400000000203e-05, 6.251399999999963e-05, 6.234700000000426e-05, 6.270799999999466e-05, 6.297200000000142e-05, 6.272200000000117e-05, 6.238899999999603e-05, 6.32080000000021e-05, 6.330599999999909e-05, 6.276399999999988e-05, 6.245800000000135e-05, 6.330599999999909e-05, 6.244499999999431e-05, 6.290300000000304e-05]</msg>
<status status="PASS" starttime="20201112 09:55:39.911" endtime="20201112 09:55:39.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.899" endtime="20201112 09:55:39.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.924" endtime="20201112 09:55:39.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:39.933" endtime="20201112 09:55:39.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.928" endtime="20201112 09:55:39.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.919" endtime="20201112 09:55:39.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.402" endtime="20201112 09:55:39.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.401" endtime="20201112 09:55:39.958"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:39.982" endtime="20201112 09:55:40.003"></status>
</kw>
<msg timestamp="20201112 09:55:40.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:39.978" endtime="20201112 09:55:40.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:40.006" endtime="20201112 09:55:40.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.012" endtime="20201112 09:55:40.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.971" endtime="20201112 09:55:40.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.965" endtime="20201112 09:55:40.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.036" endtime="20201112 09:55:40.374"></status>
</kw>
<msg timestamp="20201112 09:55:40.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043045639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043109292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.033" endtime="20201112 09:55:40.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043045639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043109292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.384" endtime="20201112 09:55:40.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.403" endtime="20201112 09:55:40.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.025" endtime="20201112 09:55:40.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.021" endtime="20201112 09:55:40.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:40.423" level="INFO">${RESULT} = [{'time': 0.043109292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.365300000000379e-05, 'source_diff': 6.365300000000379e-05}, {'time': 0.043188292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:40.414" endtime="20201112 09:55:40.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:40.454" level="INFO">${ACCURACY} = {'diff': [6.365300000000379e-05, 6.429200000000052e-05, 6.401400000000113e-05, 6.357000000000584e-05, 6.355599999999934e-05, 6.397200000000242e-05, 6.356899999999943e-05, 6.361099999999814e-05, 6.3665...</msg>
<status status="PASS" starttime="20201112 09:55:40.425" endtime="20201112 09:55:40.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.465" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:55:40.463" endtime="20201112 09:55:40.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.471" level="INFO">VALUE: [6.365300000000379e-05, 6.429200000000052e-05, 6.401400000000113e-05, 6.357000000000584e-05, 6.355599999999934e-05, 6.397200000000242e-05, 6.356899999999943e-05, 6.361099999999814e-05, 6.366599999999695e-05, 6.376400000000088e-05, 6.401399999999419e-05, 6.381899999999968e-05, 6.394399999999634e-05, 6.334699999999832e-05, 6.369399999999609e-05, 6.343100000000268e-05, 6.431999999999966e-05, 6.411099999999864e-05, 6.416700000000386e-05, 6.370900000000207e-05, 6.416599999999745e-05, 6.423700000000171e-05, 6.395899999999538e-05, 6.404100000000079e-05, 6.369400000000303e-05, 6.35699999999989e-05, 6.368000000000346e-05, 6.401400000000113e-05, 6.419400000000353e-05, 6.381899999999968e-05, 6.398600000000199e-05, 6.348600000000149e-05, 6.384699999999882e-05, 6.40699999999994e-05, 6.340199999999713e-05, 6.397300000000189e-05, 6.38620000000048e-05, 6.416700000000386e-05, 6.365299999999685e-05, 6.416599999999745e-05, 6.398599999999505e-05, 6.363899999999728e-05, 6.356899999999943e-05, 6.39159999999972e-05, 6.331899999999918e-05, 6.409699999999907e-05, 6.388899999999753e-05, 6.39029999999971e-05, 6.413899999999778e-05, 6.426400000000138e-05]</msg>
<status status="PASS" starttime="20201112 09:55:40.467" endtime="20201112 09:55:40.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.456" endtime="20201112 09:55:40.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.480" endtime="20201112 09:55:40.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:40.489" endtime="20201112 09:55:40.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.484" endtime="20201112 09:55:40.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.476" endtime="20201112 09:55:40.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.961" endtime="20201112 09:55:40.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:39.959" endtime="20201112 09:55:40.515"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.538" endtime="20201112 09:55:40.559"></status>
</kw>
<msg timestamp="20201112 09:55:40.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:40.535" endtime="20201112 09:55:40.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:40.562" endtime="20201112 09:55:40.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.569" endtime="20201112 09:55:40.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.527" endtime="20201112 09:55:40.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.521" endtime="20201112 09:55:40.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.593" endtime="20201112 09:55:40.932"></status>
</kw>
<msg timestamp="20201112 09:55:40.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042673444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042738389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.589" endtime="20201112 09:55:40.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:40.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042673444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042738389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:40.941" endtime="20201112 09:55:40.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:40.961" endtime="20201112 09:55:40.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.582" endtime="20201112 09:55:40.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.577" endtime="20201112 09:55:40.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:40.980" level="INFO">${RESULT} = [{'time': 0.042738389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.494500000000375e-05, 'source_diff': 6.494500000000375e-05}, {'time': 0.042814375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:40.971" endtime="20201112 09:55:40.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:41.011" level="INFO">${ACCURACY} = {'diff': [6.494500000000375e-05, 6.495800000000385e-05, 6.495799999999691e-05, 6.5195000000004e-05, 6.513899999999878e-05, 6.441700000000411e-05, 6.47500000000023e-05, 6.533400000000023e-05, 6.5014000...</msg>
<status status="PASS" starttime="20201112 09:55:40.982" endtime="20201112 09:55:41.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.022" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:55:41.020" endtime="20201112 09:55:41.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.028" level="INFO">VALUE: [6.494500000000375e-05, 6.495800000000385e-05, 6.495799999999691e-05, 6.5195000000004e-05, 6.513899999999878e-05, 6.441700000000411e-05, 6.47500000000023e-05, 6.533400000000023e-05, 6.501400000000213e-05, 6.469499999999656e-05, 6.476400000000188e-05, 6.436099999999889e-05, 6.520799999999716e-05, 6.444399999999684e-05, 6.501399999999519e-05, 6.50280000000017e-05, 6.472200000000317e-05, 6.483300000000025e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.486099999999939e-05, 6.518000000000496e-05, 6.530600000000109e-05, 6.445900000000282e-05, 6.526399999999544e-05, 6.45280000000012e-05, 6.483399999999973e-05, 6.513899999999878e-05, 6.494400000000428e-05, 6.459699999999957e-05, 6.472199999999623e-05, 6.495800000000385e-05, 6.465299999999785e-05, 6.476399999999494e-05, 6.524999999999587e-05, 6.456900000000043e-05, 6.470900000000307e-05, 6.468100000000393e-05, 6.47500000000023e-05, 6.52359999999963e-05, 6.501399999999519e-05, 6.529100000000204e-05, 6.488900000000547e-05, 6.501400000000213e-05, 6.517999999999802e-05, 6.49029999999981e-05, 6.461099999999914e-05, 6.445800000000335e-05, 6.456900000000043e-05, 6.493099999999724e-05]</msg>
<status status="PASS" starttime="20201112 09:55:41.025" endtime="20201112 09:55:41.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.013" endtime="20201112 09:55:41.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.037" endtime="20201112 09:55:41.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:41.046" endtime="20201112 09:55:41.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.042" endtime="20201112 09:55:41.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.033" endtime="20201112 09:55:41.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.517" endtime="20201112 09:55:41.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:40.516" endtime="20201112 09:55:41.072"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.095" endtime="20201112 09:55:41.117"></status>
</kw>
<msg timestamp="20201112 09:55:41.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:41.092" endtime="20201112 09:55:41.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:41.120" endtime="20201112 09:55:41.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.127" endtime="20201112 09:55:41.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.085" endtime="20201112 09:55:41.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.079" endtime="20201112 09:55:41.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.150" endtime="20201112 09:55:41.488"></status>
</kw>
<msg timestamp="20201112 09:55:41.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042892958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042958931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.147" endtime="20201112 09:55:41.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042892958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042958931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.498" endtime="20201112 09:55:41.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.517" endtime="20201112 09:55:41.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.140" endtime="20201112 09:55:41.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.135" endtime="20201112 09:55:41.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:41.537" level="INFO">${RESULT} = [{'time': 0.042958931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.597299999999695e-05, 'source_diff': 6.597299999999695e-05}, {'time': 0.043036931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:41.528" endtime="20201112 09:55:41.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:41.568" level="INFO">${ACCURACY} = {'diff': [6.597299999999695e-05, 6.576400000000288e-05, 6.57779999999955e-05, 6.595800000000485e-05, 6.619399999999859e-05, 6.588900000000647e-05, 6.595800000000485e-05, 6.573600000000374e-05, 6.63050...</msg>
<status status="PASS" starttime="20201112 09:55:41.539" endtime="20201112 09:55:41.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.579" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:55:41.577" endtime="20201112 09:55:41.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.585" level="INFO">VALUE: [6.597299999999695e-05, 6.576400000000288e-05, 6.57779999999955e-05, 6.595800000000485e-05, 6.619399999999859e-05, 6.588900000000647e-05, 6.595800000000485e-05, 6.573600000000374e-05, 6.630500000000261e-05, 6.538899999999903e-05, 6.55700000000009e-05, 6.632000000000166e-05, 6.570899999999713e-05, 6.594499999999781e-05, 6.611100000000064e-05, 6.630600000000209e-05, 6.561100000000014e-05, 6.544500000000425e-05, 6.588899999999953e-05, 6.619400000000553e-05, 6.550000000000306e-05, 6.576399999999594e-05, 6.630500000000261e-05, 6.576399999999594e-05, 6.620899999999763e-05, 6.57080000000046e-05, 6.62500000000038e-05, 6.555600000000134e-05, 6.598599999999705e-05, 6.59029999999991e-05, 6.612500000000021e-05, 6.547300000000339e-05, 6.601400000000313e-05, 6.594499999999781e-05, 6.620900000000457e-05, 6.534700000000032e-05, 6.600000000000356e-05, 6.622199999999773e-05, 6.536099999999989e-05, 6.594499999999781e-05, 6.57500000000033e-05, 6.579200000000202e-05, 6.616699999999892e-05, 6.544499999999731e-05, 6.615299999999935e-05, 6.622199999999773e-05, 6.620899999999763e-05, 6.601299999999671e-05, 6.580500000000211e-05, 6.559800000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:55:41.581" endtime="20201112 09:55:41.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.570" endtime="20201112 09:55:41.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.594" endtime="20201112 09:55:41.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:41.603" endtime="20201112 09:55:41.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.598" endtime="20201112 09:55:41.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.590" endtime="20201112 09:55:41.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.074" endtime="20201112 09:55:41.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.073" endtime="20201112 09:55:41.629"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.652" endtime="20201112 09:55:41.673"></status>
</kw>
<msg timestamp="20201112 09:55:41.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:41.648" endtime="20201112 09:55:41.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:41.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:41.677" endtime="20201112 09:55:41.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.683" endtime="20201112 09:55:41.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.641" endtime="20201112 09:55:41.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.635" endtime="20201112 09:55:41.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:41.707" endtime="20201112 09:55:42.047"></status>
</kw>
<msg timestamp="20201112 09:55:42.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042696569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042763431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:41.703" endtime="20201112 09:55:42.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042696569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042763431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.057" endtime="20201112 09:55:42.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.076" endtime="20201112 09:55:42.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.696" endtime="20201112 09:55:42.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.691" endtime="20201112 09:55:42.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:42.098" level="INFO">${RESULT} = [{'time': 0.042763431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.686200000000087e-05, 'source_diff': 6.686200000000087e-05}, {'time': 0.042838431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:42.088" endtime="20201112 09:55:42.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:42.128" level="INFO">${ACCURACY} = {'diff': [6.686200000000087e-05, 6.713900000000078e-05, 6.720799999999916e-05, 6.730500000000361e-05, 6.69030000000001e-05, 6.665299999999985e-05, 6.644400000000578e-05, 6.651399999999669e-05, 6.65000...</msg>
<status status="PASS" starttime="20201112 09:55:42.100" endtime="20201112 09:55:42.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.140" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:55:42.137" endtime="20201112 09:55:42.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.145" level="INFO">VALUE: [6.686200000000087e-05, 6.713900000000078e-05, 6.720799999999916e-05, 6.730500000000361e-05, 6.69030000000001e-05, 6.665299999999985e-05, 6.644400000000578e-05, 6.651399999999669e-05, 6.650000000000406e-05, 6.72359999999983e-05, 6.679200000000302e-05, 6.672199999999823e-05, 6.711100000000164e-05, 6.726399999999744e-05, 6.722300000000514e-05, 6.726399999999744e-05, 6.67909999999966e-05, 6.702700000000422e-05, 6.654100000000329e-05, 6.69030000000001e-05, 6.709700000000207e-05, 6.711100000000164e-05, 6.679100000000354e-05, 6.647199999999798e-05, 6.668099999999899e-05, 6.669399999999909e-05, 6.694499999999881e-05, 6.733399999999529e-05, 6.682000000000216e-05, 6.718099999999949e-05, 6.658400000000148e-05, 6.686199999999393e-05, 6.709800000000155e-05, 6.667999999999952e-05, 6.719399999999959e-05, 6.701400000000413e-05, 6.711100000000164e-05, 6.697199999999848e-05, 6.718000000000002e-05, 6.656900000000243e-05, 6.661100000000114e-05, 6.711100000000164e-05, 6.656999999999497e-05, 6.668099999999899e-05, 6.716699999999992e-05, 6.704200000000327e-05, 6.665200000000038e-05, 6.730500000000361e-05, 6.705500000000336e-05, 6.636100000000089e-05]</msg>
<status status="PASS" starttime="20201112 09:55:42.142" endtime="20201112 09:55:42.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.130" endtime="20201112 09:55:42.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.155" endtime="20201112 09:55:42.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:42.163" endtime="20201112 09:55:42.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.159" endtime="20201112 09:55:42.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.150" endtime="20201112 09:55:42.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.631" endtime="20201112 09:55:42.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:41.629" endtime="20201112 09:55:42.189"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.212" endtime="20201112 09:55:42.234"></status>
</kw>
<msg timestamp="20201112 09:55:42.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:42.209" endtime="20201112 09:55:42.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:42.237" endtime="20201112 09:55:42.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.244" endtime="20201112 09:55:42.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.202" endtime="20201112 09:55:42.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.196" endtime="20201112 09:55:42.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.268" endtime="20201112 09:55:42.558"></status>
</kw>
<msg timestamp="20201112 09:55:42.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042608653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042676042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.264" endtime="20201112 09:55:42.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042608653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042676042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.563" endtime="20201112 09:55:42.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.571" endtime="20201112 09:55:42.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.257" endtime="20201112 09:55:42.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.252" endtime="20201112 09:55:42.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:42.581" level="INFO">${RESULT} = [{'time': 0.042676042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.738899999999409e-05, 'source_diff': 6.738899999999409e-05}, {'time': 0.042754069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:42.576" endtime="20201112 09:55:42.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:42.594" level="INFO">${ACCURACY} = {'diff': [6.738899999999409e-05, 6.788800000000206e-05, 6.813900000000178e-05, 6.737500000000146e-05, 6.805499999999742e-05, 6.737500000000146e-05, 6.802699999999828e-05, 6.749999999999812e-05, 6.8278...</msg>
<status status="PASS" starttime="20201112 09:55:42.582" endtime="20201112 09:55:42.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.600" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:55:42.598" endtime="20201112 09:55:42.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.602" level="INFO">VALUE: [6.738899999999409e-05, 6.788800000000206e-05, 6.813900000000178e-05, 6.737500000000146e-05, 6.805499999999742e-05, 6.737500000000146e-05, 6.802699999999828e-05, 6.749999999999812e-05, 6.827800000000495e-05, 6.752799999999726e-05, 6.804199999999733e-05, 6.831899999999724e-05, 6.804199999999733e-05, 6.758400000000248e-05, 6.737500000000146e-05, 6.82359999999993e-05, 6.812499999999527e-05, 6.801399999999819e-05, 6.801399999999819e-05, 6.762500000000171e-05, 6.747199999999898e-05, 6.82909999999981e-05, 6.736100000000189e-05, 6.794400000000034e-05, 6.754099999999735e-05, 6.769400000000009e-05, 6.747199999999898e-05, 6.797199999999948e-05, 6.786099999999545e-05, 6.758399999999554e-05, 6.736100000000189e-05, 6.812499999999527e-05, 6.777800000000445e-05, 6.75559999999964e-05, 6.74030000000006e-05, 6.790199999999469e-05, 6.798599999999905e-05, 6.822199999999973e-05, 6.833299999999681e-05, 6.776399999999794e-05, 6.750000000000506e-05, 6.747199999999898e-05, 6.813900000000178e-05, 6.812499999999527e-05, 6.763900000000128e-05, 6.756999999999597e-05, 6.780599999999665e-05, 6.79030000000011e-05, 6.774999999999837e-05, 6.826400000000538e-05]</msg>
<status status="PASS" starttime="20201112 09:55:42.601" endtime="20201112 09:55:42.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.595" endtime="20201112 09:55:42.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.607" endtime="20201112 09:55:42.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:42.611" endtime="20201112 09:55:42.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.609" endtime="20201112 09:55:42.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.605" endtime="20201112 09:55:42.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.191" endtime="20201112 09:55:42.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.190" endtime="20201112 09:55:42.632"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.643" endtime="20201112 09:55:42.661"></status>
</kw>
<msg timestamp="20201112 09:55:42.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:42.642" endtime="20201112 09:55:42.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:42.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:42.663" endtime="20201112 09:55:42.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.666" endtime="20201112 09:55:42.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.638" endtime="20201112 09:55:42.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.635" endtime="20201112 09:55:42.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:42.677" endtime="20201112 09:55:42.991"></status>
</kw>
<msg timestamp="20201112 09:55:42.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025291736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025360875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:42.676" endtime="20201112 09:55:42.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025291736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025360875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.001" endtime="20201112 09:55:43.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.020" endtime="20201112 09:55:43.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.672" endtime="20201112 09:55:43.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.670" endtime="20201112 09:55:43.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:43.040" level="INFO">${RESULT} = [{'time': 0.025360875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.913900000000278e-05, 'source_diff': 6.913900000000278e-05}, {'time': 0.025435889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:43.031" endtime="20201112 09:55:43.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:43.071" level="INFO">${ACCURACY} = {'diff': [6.913900000000278e-05, 6.882000000000069e-05, 6.872200000000023e-05, 6.8584e-05, 6.927800000000248e-05, 6.851400000000216e-05, 6.868100000000099e-05, 6.890199999999916e-05, 6.926299999999996...</msg>
<status status="PASS" starttime="20201112 09:55:43.042" endtime="20201112 09:55:43.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.082" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:55:43.079" endtime="20201112 09:55:43.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.087" level="INFO">VALUE: [6.913900000000278e-05, 6.882000000000069e-05, 6.872200000000023e-05, 6.8584e-05, 6.927800000000248e-05, 6.851400000000216e-05, 6.868100000000099e-05, 6.890199999999916e-05, 6.926299999999996e-05, 6.858300000000053e-05, 6.879199999999808e-05, 6.904199999999833e-05, 6.888899999999906e-05, 6.926399999999944e-05, 6.911100000000017e-05, 6.869400000000109e-05, 6.836099999999942e-05, 6.85559999999974e-05, 6.915299999999888e-05, 6.894500000000081e-05, 6.897299999999995e-05, 6.902799999999876e-05, 6.883400000000026e-05, 6.926299999999996e-05, 6.927699999999953e-05, 6.926399999999944e-05, 6.848599999999955e-05, 6.930499999999867e-05, 6.884700000000035e-05, 6.930599999999815e-05, 6.893100000000124e-05, 6.913899999999931e-05, 6.883300000000078e-05, 6.880600000000112e-05, 6.862499999999924e-05, 6.868100000000099e-05, 6.894400000000134e-05, 6.83480000000028e-05, 6.874999999999937e-05, 6.917999999999855e-05, 6.887499999999949e-05, 6.911100000000017e-05, 6.90970000000006e-05, 6.843000000000127e-05, 6.861099999999967e-05, 6.884700000000035e-05, 6.907000000000094e-05, 6.906999999999747e-05, 6.897200000000048e-05, 6.911100000000017e-05]</msg>
<status status="PASS" starttime="20201112 09:55:43.084" endtime="20201112 09:55:43.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.073" endtime="20201112 09:55:43.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.097" endtime="20201112 09:55:43.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:43.106" endtime="20201112 09:55:43.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.101" endtime="20201112 09:55:43.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.093" endtime="20201112 09:55:43.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.633" endtime="20201112 09:55:43.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:42.633" endtime="20201112 09:55:43.132"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.155" endtime="20201112 09:55:43.177"></status>
</kw>
<msg timestamp="20201112 09:55:43.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:43.151" endtime="20201112 09:55:43.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:43.181" endtime="20201112 09:55:43.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.187" endtime="20201112 09:55:43.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.144" endtime="20201112 09:55:43.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.138" endtime="20201112 09:55:43.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.211" endtime="20201112 09:55:43.551"></status>
</kw>
<msg timestamp="20201112 09:55:43.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042887389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042957472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.207" endtime="20201112 09:55:43.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042887389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042957472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.560" endtime="20201112 09:55:43.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.579" endtime="20201112 09:55:43.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.200" endtime="20201112 09:55:43.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.195" endtime="20201112 09:55:43.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:43.599" level="INFO">${RESULT} = [{'time': 0.042957472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.008299999999856e-05, 'source_diff': 7.008299999999856e-05}, {'time': 0.0430385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:43.590" endtime="20201112 09:55:43.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:43.630" level="INFO">${ACCURACY} = {'diff': [7.008299999999856e-05, 6.962500000000371e-05, 6.952799999999926e-05, 7.023599999999436e-05, 6.958400000000448e-05, 6.956999999999797e-05, 7.015300000000335e-05, 7.030499999999967e-05, 6.9638...</msg>
<status status="PASS" starttime="20201112 09:55:43.601" endtime="20201112 09:55:43.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.641" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:55:43.638" endtime="20201112 09:55:43.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.646" level="INFO">VALUE: [7.008299999999856e-05, 6.962500000000371e-05, 6.952799999999926e-05, 7.023599999999436e-05, 6.958400000000448e-05, 6.956999999999797e-05, 7.015300000000335e-05, 7.030499999999967e-05, 6.963899999999634e-05, 6.990299999999616e-05, 6.956899999999849e-05, 6.984700000000482e-05, 7.009699999999813e-05, 7.031899999999924e-05, 6.995800000000191e-05, 6.979199999999908e-05, 6.990299999999616e-05, 7.01109999999977e-05, 7.026400000000044e-05, 7.002799999999976e-05, 7.009699999999813e-05, 6.984700000000482e-05, 6.97230000000007e-05, 6.969500000000156e-05, 6.99309999999953e-05, 6.975000000000037e-05, 7.018000000000302e-05, 7.015200000000388e-05, 6.955499999999892e-05, 6.948599999999361e-05, 6.995800000000191e-05, 6.947200000000098e-05, 6.984700000000482e-05, 6.995800000000191e-05, 6.934699999999738e-05, 6.975000000000037e-05, 6.976300000000046e-05, 6.966700000000242e-05, 6.95559999999984e-05, 6.94030000000026e-05, 7.022299999999426e-05, 6.961100000000414e-05, 6.940200000000313e-05, 7.025000000000087e-05, 7.00830000000055e-05, 6.97360000000008e-05, 6.955499999999892e-05, 7.031899999999924e-05, 6.959699999999763e-05, 7.009699999999813e-05]</msg>
<status status="PASS" starttime="20201112 09:55:43.643" endtime="20201112 09:55:43.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.631" endtime="20201112 09:55:43.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.657" endtime="20201112 09:55:43.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:43.665" endtime="20201112 09:55:43.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.661" endtime="20201112 09:55:43.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.652" endtime="20201112 09:55:43.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.134" endtime="20201112 09:55:43.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.132" endtime="20201112 09:55:43.691"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.715" endtime="20201112 09:55:43.736"></status>
</kw>
<msg timestamp="20201112 09:55:43.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:43.711" endtime="20201112 09:55:43.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:43.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:43.739" endtime="20201112 09:55:43.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.746" endtime="20201112 09:55:43.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.704" endtime="20201112 09:55:43.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.698" endtime="20201112 09:55:43.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:43.770" endtime="20201112 09:55:44.107"></status>
</kw>
<msg timestamp="20201112 09:55:44.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042670375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042740861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:43.766" endtime="20201112 09:55:44.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042670375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042740861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:44.117" endtime="20201112 09:55:44.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.136" endtime="20201112 09:55:44.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.759" endtime="20201112 09:55:44.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.754" endtime="20201112 09:55:44.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:44.158" level="INFO">${RESULT} = [{'time': 0.042740861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.048599999999461e-05, 'source_diff': 7.048599999999461e-05}, {'time': 0.042825917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:44.149" endtime="20201112 09:55:44.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:44.188" level="INFO">${ACCURACY} = {'diff': [7.048599999999461e-05, 7.072299999999476e-05, 7.034699999999838e-05, 7.098600000000205e-05, 7.112500000000521e-05, 7.097200000000248e-05, 7.119499999999612e-05, 7.097299999999501e-05, 7.1110...</msg>
<status status="PASS" starttime="20201112 09:55:44.160" endtime="20201112 09:55:44.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.200" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:55:44.197" endtime="20201112 09:55:44.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.205" level="INFO">VALUE: [7.048599999999461e-05, 7.072299999999476e-05, 7.034699999999838e-05, 7.098600000000205e-05, 7.112500000000521e-05, 7.097200000000248e-05, 7.119499999999612e-05, 7.097299999999501e-05, 7.11109999999987e-05, 7.058400000000548e-05, 7.083299999999931e-05, 7.076400000000094e-05, 7.051400000000069e-05, 7.133299999999981e-05, 7.054199999999983e-05, 7.123599999999536e-05, 7.13189999999933e-05, 7.076400000000094e-05, 7.09030000000041e-05, 7.115299999999741e-05, 7.080599999999965e-05, 7.074999999999443e-05, 7.062499999999777e-05, 7.12230000000022e-05, 7.081899999999974e-05, 7.104100000000085e-05, 7.112499999999827e-05, 7.104199999999339e-05, 7.125000000000187e-05, 7.049999999999418e-05, 7.112499999999827e-05, 7.091699999999673e-05, 7.102799999999382e-05, 7.130600000000015e-05, 7.109699999999913e-05, 7.036099999999795e-05, 7.062499999999777e-05, 7.082000000000616e-05, 7.044400000000284e-05, 7.109699999999913e-05, 7.087500000000496e-05, 7.104100000000085e-05, 7.124999999999493e-05, 7.136099999999895e-05, 7.131900000000024e-05, 7.054199999999983e-05, 7.108399999999904e-05, 7.051400000000069e-05, 7.062499999999777e-05, 7.080599999999965e-05]</msg>
<status status="PASS" starttime="20201112 09:55:44.202" endtime="20201112 09:55:44.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.190" endtime="20201112 09:55:44.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.215" endtime="20201112 09:55:44.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:44.224" endtime="20201112 09:55:44.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.219" endtime="20201112 09:55:44.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.210" endtime="20201112 09:55:44.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.693" endtime="20201112 09:55:44.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:43.692" endtime="20201112 09:55:44.250"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.273" endtime="20201112 09:55:44.295"></status>
</kw>
<msg timestamp="20201112 09:55:44.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:44.269" endtime="20201112 09:55:44.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:44.298" endtime="20201112 09:55:44.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.304" endtime="20201112 09:55:44.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.262" endtime="20201112 09:55:44.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.256" endtime="20201112 09:55:44.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.328" endtime="20201112 09:55:44.668"></status>
</kw>
<msg timestamp="20201112 09:55:44.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043207, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043278597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:44.325" endtime="20201112 09:55:44.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043207, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043278597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:55:44.677" endtime="20201112 09:55:44.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.696" endtime="20201112 09:55:44.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.317" endtime="20201112 09:55:44.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.313" endtime="20201112 09:55:44.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:44.716" level="INFO">${RESULT} = [{'time': 0.043278597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.159699999999963e-05, 'source_diff': 7.159699999999963e-05}, {'time': 0.043365583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:44.707" endtime="20201112 09:55:44.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:44.747" level="INFO">${ACCURACY} = {'diff': [7.159699999999963e-05, 7.181900000000074e-05, 7.19439999999974e-05, 7.217999999999808e-05, 7.184699999999988e-05, 7.147200000000298e-05, 7.159699999999963e-05, 7.177800000000151e-05, 7.17360...</msg>
<status status="PASS" starttime="20201112 09:55:44.718" endtime="20201112 09:55:44.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.758" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:55:44.756" endtime="20201112 09:55:44.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.764" level="INFO">VALUE: [7.159699999999963e-05, 7.181900000000074e-05, 7.19439999999974e-05, 7.217999999999808e-05, 7.184699999999988e-05, 7.147200000000298e-05, 7.159699999999963e-05, 7.177800000000151e-05, 7.17360000000028e-05, 7.165299999999791e-05, 7.177800000000151e-05, 7.22230000000032e-05, 7.20560000000009e-05, 7.137499999999852e-05, 7.17360000000028e-05, 7.21109999999997e-05, 7.209700000000013e-05, 7.19309999999973e-05, 7.170799999999672e-05, 7.173599999999586e-05, 7.206999999999353e-05, 7.194500000000381e-05, 7.226400000000244e-05, 7.212499999999927e-05, 7.152800000000126e-05, 7.194500000000381e-05, 7.22910000000021e-05, 7.19309999999973e-05, 7.233300000000081e-05, 7.202700000000228e-05, 7.197199999999654e-05, 7.151400000000169e-05, 7.167999999999758e-05, 7.151400000000169e-05, 7.165299999999791e-05, 7.168099999999705e-05, 7.202800000000176e-05, 7.232000000000072e-05, 7.155500000000092e-05, 7.223700000000277e-05, 7.212499999999927e-05, 7.186099999999945e-05, 7.137499999999852e-05, 7.170800000000366e-05, 7.22769999999956e-05, 7.227799999999507e-05, 7.170799999999672e-05, 7.20560000000009e-05, 7.197199999999654e-05, 7.19030000000051e-05]</msg>
<status status="PASS" starttime="20201112 09:55:44.760" endtime="20201112 09:55:44.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.749" endtime="20201112 09:55:44.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.773" endtime="20201112 09:55:44.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:44.782" endtime="20201112 09:55:44.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.777" endtime="20201112 09:55:44.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.769" endtime="20201112 09:55:44.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.252" endtime="20201112 09:55:44.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.251" endtime="20201112 09:55:44.808"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.833" endtime="20201112 09:55:44.856"></status>
</kw>
<msg timestamp="20201112 09:55:44.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:44.829" endtime="20201112 09:55:44.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:44.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:44.859" endtime="20201112 09:55:44.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.865" endtime="20201112 09:55:44.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.821" endtime="20201112 09:55:44.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.815" endtime="20201112 09:55:44.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:44.889" endtime="20201112 09:55:45.226"></status>
</kw>
<msg timestamp="20201112 09:55:45.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044689139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044762125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:44.886" endtime="20201112 09:55:45.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044689139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044762125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.236" endtime="20201112 09:55:45.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.255" endtime="20201112 09:55:45.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.879" endtime="20201112 09:55:45.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.874" endtime="20201112 09:55:45.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:45.274" level="INFO">${RESULT} = [{'time': 0.044762125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.298599999999711e-05, 'source_diff': 7.298599999999711e-05}, {'time': 0.044846125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:45.265" endtime="20201112 09:55:45.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:45.305" level="INFO">${ACCURACY} = {'diff': [7.298599999999711e-05, 7.26110000000002e-05, 7.330599999999521e-05, 7.329199999999564e-05, 7.259800000000011e-05, 7.268099999999805e-05, 7.290299999999916e-05, 7.247299999999651e-05, 7.26390...</msg>
<status status="PASS" starttime="20201112 09:55:45.277" endtime="20201112 09:55:45.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.317" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:55:45.314" endtime="20201112 09:55:45.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.322" level="INFO">VALUE: [7.298599999999711e-05, 7.26110000000002e-05, 7.330599999999521e-05, 7.329199999999564e-05, 7.259800000000011e-05, 7.268099999999805e-05, 7.290299999999916e-05, 7.247299999999651e-05, 7.263900000000628e-05, 7.265199999999944e-05, 7.32769999999966e-05, 7.317999999999908e-05, 7.258300000000106e-05, 7.306899999999505e-05, 7.313899999999984e-05, 7.291699999999873e-05, 7.251399999999575e-05, 7.241699999999823e-05, 7.257000000000097e-05, 7.247299999999651e-05, 7.274999999999643e-05, 7.32639999999965e-05, 7.298600000000405e-05, 7.32769999999966e-05, 7.255499999999498e-05, 7.240199999999919e-05, 7.305500000000242e-05, 7.301400000000319e-05, 7.27360000000038e-05, 7.234700000000038e-05, 7.251399999999575e-05, 7.288899999999959e-05, 7.252799999999532e-05, 7.315299999999941e-05, 7.252800000000226e-05, 7.263900000000628e-05, 7.275000000000337e-05, 7.283300000000131e-05, 7.287500000000002e-05, 7.262499999999977e-05, 7.275000000000337e-05, 7.319399999999865e-05, 7.330600000000215e-05, 7.30969999999942e-05, 7.298600000000405e-05, 7.31110000000007e-05, 7.295799999999797e-05, 7.286099999999351e-05, 7.238899999999909e-05, 7.313899999999984e-05]</msg>
<status status="PASS" starttime="20201112 09:55:45.319" endtime="20201112 09:55:45.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.307" endtime="20201112 09:55:45.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.332" endtime="20201112 09:55:45.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:45.340" endtime="20201112 09:55:45.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.336" endtime="20201112 09:55:45.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.327" endtime="20201112 09:55:45.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.811" endtime="20201112 09:55:45.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:44.809" endtime="20201112 09:55:45.366"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.389" endtime="20201112 09:55:45.411"></status>
</kw>
<msg timestamp="20201112 09:55:45.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:45.386" endtime="20201112 09:55:45.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:45.414" endtime="20201112 09:55:45.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.420" endtime="20201112 09:55:45.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.379" endtime="20201112 09:55:45.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.373" endtime="20201112 09:55:45.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.444" endtime="20201112 09:55:45.783"></status>
</kw>
<msg timestamp="20201112 09:55:45.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042663875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042737333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.441" endtime="20201112 09:55:45.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042663875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042737333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:45.792" endtime="20201112 09:55:45.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.811" endtime="20201112 09:55:45.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.433" endtime="20201112 09:55:45.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.429" endtime="20201112 09:55:45.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:45.831" level="INFO">${RESULT} = [{'time': 0.042737333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.345800000000541e-05, 'source_diff': 7.345800000000541e-05}, {'time': 0.042814306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:45.822" endtime="20201112 09:55:45.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:45.863" level="INFO">${ACCURACY} = {'diff': [7.345800000000541e-05, 7.415300000000041e-05, 7.368000000000652e-05, 7.422199999999879e-05, 7.397199999999854e-05, 7.408300000000256e-05, 7.399999999999768e-05, 7.390300000000016e-05, 7.3417...</msg>
<status status="PASS" starttime="20201112 09:55:45.833" endtime="20201112 09:55:45.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.874" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:55:45.872" endtime="20201112 09:55:45.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.880" level="INFO">VALUE: [7.345800000000541e-05, 7.415300000000041e-05, 7.368000000000652e-05, 7.422199999999879e-05, 7.397199999999854e-05, 7.408300000000256e-05, 7.399999999999768e-05, 7.390300000000016e-05, 7.341700000000617e-05, 7.427800000000401e-05, 7.334700000000138e-05, 7.405599999999596e-05, 7.407000000000247e-05, 7.391699999999973e-05, 7.387500000000102e-05, 7.400000000000462e-05, 7.334800000000086e-05, 7.415200000000094e-05, 7.397199999999854e-05, 7.423599999999836e-05, 7.41110000000017e-05, 7.399999999999768e-05, 7.398599999999811e-05, 7.405500000000342e-05, 7.337500000000052e-05, 7.377800000000351e-05, 7.430599999999621e-05, 7.377800000000351e-05, 7.357000000000197e-05, 7.422299999999826e-05, 7.352800000000326e-05, 7.36110000000012e-05, 7.363900000000034e-05, 7.390200000000069e-05, 7.424999999999793e-05, 7.331900000000224e-05, 7.409700000000213e-05, 7.404199999999639e-05, 7.433300000000281e-05, 7.334699999999444e-05, 7.419499999999912e-05, 7.432000000000272e-05, 7.430599999999621e-05, 7.423700000000477e-05, 7.390300000000016e-05, 7.336099999999401e-05, 7.338800000000062e-05, 7.34439999999989e-05, 7.416699999999998e-05, 7.43189999999963e-05]</msg>
<status status="PASS" starttime="20201112 09:55:45.876" endtime="20201112 09:55:45.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.865" endtime="20201112 09:55:45.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.889" endtime="20201112 09:55:45.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:45.898" endtime="20201112 09:55:45.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.893" endtime="20201112 09:55:45.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.885" endtime="20201112 09:55:45.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.368" endtime="20201112 09:55:45.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.367" endtime="20201112 09:55:45.924"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.947" endtime="20201112 09:55:45.969"></status>
</kw>
<msg timestamp="20201112 09:55:45.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:45.944" endtime="20201112 09:55:45.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:45.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:45.973" endtime="20201112 09:55:45.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:45.979" endtime="20201112 09:55:45.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.937" endtime="20201112 09:55:45.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.931" endtime="20201112 09:55:45.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.003" endtime="20201112 09:55:46.297"></status>
</kw>
<msg timestamp="20201112 09:55:46.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043238958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043313319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:46.000" endtime="20201112 09:55:46.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043238958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043313319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:46.302" endtime="20201112 09:55:46.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.310" endtime="20201112 09:55:46.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.992" endtime="20201112 09:55:46.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.987" endtime="20201112 09:55:46.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:46.320" level="INFO">${RESULT} = [{'time': 0.043313319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.436100000000195e-05, 'source_diff': 7.436100000000195e-05}, {'time': 0.043394333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:46.316" endtime="20201112 09:55:46.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:46.334" level="INFO">${ACCURACY} = {'diff': [7.436100000000195e-05, 7.523599999999936e-05, 7.436100000000195e-05, 7.434700000000238e-05, 7.473599999999886e-05, 7.49440000000004e-05, 7.475000000000537e-05, 7.448599999999861e-05, 7.47779...</msg>
<status status="PASS" starttime="20201112 09:55:46.321" endtime="20201112 09:55:46.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.339" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:55:46.338" endtime="20201112 09:55:46.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.342" level="INFO">VALUE: [7.436100000000195e-05, 7.523599999999936e-05, 7.436100000000195e-05, 7.434700000000238e-05, 7.473599999999886e-05, 7.49440000000004e-05, 7.475000000000537e-05, 7.448599999999861e-05, 7.477799999999757e-05, 7.507000000000347e-05, 7.506999999999653e-05, 7.465300000000091e-05, 7.52230000000062e-05, 7.438800000000162e-05, 7.440200000000119e-05, 7.433300000000281e-05, 7.483299999999637e-05, 7.504200000000433e-05, 7.516700000000098e-05, 7.451399999999775e-05, 7.44309999999998e-05, 7.515300000000141e-05, 7.480600000000365e-05, 7.4763999999998e-05, 7.502799999999782e-05, 7.473699999999833e-05, 7.513799999999543e-05, 7.440200000000119e-05, 7.525000000000587e-05, 7.493000000000083e-05, 7.465300000000091e-05, 7.49310000000003e-05, 7.436100000000195e-05, 7.515300000000141e-05, 7.474999999999843e-05, 7.473599999999886e-05, 7.483299999999637e-05, 7.52639999999985e-05, 7.515300000000141e-05, 7.477799999999757e-05, 7.513800000000237e-05, 7.49440000000004e-05, 7.506899999999705e-05, 7.518099999999361e-05, 7.506899999999705e-05, 7.498599999999911e-05, 7.50969999999962e-05, 7.527799999999807e-05, 7.45560000000034e-05, 7.519500000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:55:46.340" endtime="20201112 09:55:46.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.335" endtime="20201112 09:55:46.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.346" endtime="20201112 09:55:46.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:46.350" endtime="20201112 09:55:46.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.348" endtime="20201112 09:55:46.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.344" endtime="20201112 09:55:46.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.926" endtime="20201112 09:55:46.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:45.925" endtime="20201112 09:55:46.372"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.383" endtime="20201112 09:55:46.401"></status>
</kw>
<msg timestamp="20201112 09:55:46.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:46.381" endtime="20201112 09:55:46.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:46.403" endtime="20201112 09:55:46.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.406" endtime="20201112 09:55:46.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.377" endtime="20201112 09:55:46.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.375" endtime="20201112 09:55:46.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.417" endtime="20201112 09:55:46.703"></status>
</kw>
<msg timestamp="20201112 09:55:46.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:46.415" endtime="20201112 09:55:46.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:46.707" endtime="20201112 09:55:46.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.715" endtime="20201112 09:55:46.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.412" endtime="20201112 09:55:46.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.409" endtime="20201112 09:55:46.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:46.725" level="INFO">${RESULT} = [{'time': 0.025038972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.549999999999918e-05, 'source_diff': 7.549999999999918e-05}, {'time': 0.025125889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:46.720" endtime="20201112 09:55:46.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:46.738" level="INFO">${ACCURACY} = {'diff': [7.549999999999918e-05, 7.559700000000016e-05, 7.630600000000168e-05, 7.627799999999907e-05, 7.605600000000143e-05, 7.584799999999989e-05, 7.556899999999755e-05, 7.62769999999996e-05, 7.54720...</msg>
<status status="PASS" starttime="20201112 09:55:46.726" endtime="20201112 09:55:46.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.744" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:55:46.743" endtime="20201112 09:55:46.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.746" level="INFO">VALUE: [7.549999999999918e-05, 7.559700000000016e-05, 7.630600000000168e-05, 7.627799999999907e-05, 7.605600000000143e-05, 7.584799999999989e-05, 7.556899999999755e-05, 7.62769999999996e-05, 7.547200000000004e-05, 7.587499999999955e-05, 7.567999999999811e-05, 7.574999999999943e-05, 7.538899999999862e-05, 7.54310000000008e-05, 7.556900000000102e-05, 7.58890000000026e-05, 7.599999999999968e-05, 7.612500000000327e-05, 7.536199999999896e-05, 7.547299999999951e-05, 7.579100000000213e-05, 7.576299999999953e-05, 7.62769999999996e-05, 7.561099999999973e-05, 7.629099999999917e-05, 7.545800000000047e-05, 7.588899999999912e-05, 7.568100000000105e-05, 7.572200000000029e-05, 7.536099999999948e-05, 7.556999999999703e-05, 7.570800000000072e-05, 7.577799999999857e-05, 7.619400000000165e-05, 7.60969999999972e-05, 7.631900000000177e-05, 7.543000000000133e-05, 7.62639999999995e-05, 7.570800000000072e-05, 7.622200000000079e-05, 7.599999999999968e-05, 7.618100000000155e-05, 7.580600000000118e-05, 7.591699999999826e-05, 7.623600000000036e-05, 7.601399999999925e-05, 7.569400000000115e-05, 7.611100000000023e-05, 7.602699999999935e-05, 7.619399999999818e-05]</msg>
<status status="PASS" starttime="20201112 09:55:46.745" endtime="20201112 09:55:46.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.739" endtime="20201112 09:55:46.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.751" endtime="20201112 09:55:46.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:46.755" endtime="20201112 09:55:46.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.753" endtime="20201112 09:55:46.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.749" endtime="20201112 09:55:46.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.373" endtime="20201112 09:55:46.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.372" endtime="20201112 09:55:46.776"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.787" endtime="20201112 09:55:46.806"></status>
</kw>
<msg timestamp="20201112 09:55:46.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:46.786" endtime="20201112 09:55:46.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:46.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:46.808" endtime="20201112 09:55:46.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.811" endtime="20201112 09:55:46.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.782" endtime="20201112 09:55:46.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.779" endtime="20201112 09:55:46.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:46.822" endtime="20201112 09:55:47.136"></status>
</kw>
<msg timestamp="20201112 09:55:47.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02524075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025317153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:46.820" endtime="20201112 09:55:47.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02524075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025317153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:55:47.146" endtime="20201112 09:55:47.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.165" endtime="20201112 09:55:47.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.817" endtime="20201112 09:55:47.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.815" endtime="20201112 09:55:47.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:47.184" level="INFO">${RESULT} = [{'time': 0.025317153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.64029999999992e-05, 'source_diff': 7.64029999999992e-05}, {'time': 0.025399125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:47.175" endtime="20201112 09:55:47.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:47.215" level="INFO">${ACCURACY} = {'diff': [7.64029999999992e-05, 7.705600000000243e-05, 7.688900000000012e-05, 7.670899999999772e-05, 7.650000000000018e-05, 7.684800000000089e-05, 7.67770000000001e-05, 7.642999999999886e-05, 7.684700...</msg>
<status status="PASS" starttime="20201112 09:55:47.186" endtime="20201112 09:55:47.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.226" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:55:47.224" endtime="20201112 09:55:47.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.232" level="INFO">VALUE: [7.64029999999992e-05, 7.705600000000243e-05, 7.688900000000012e-05, 7.670899999999772e-05, 7.650000000000018e-05, 7.684800000000089e-05, 7.67770000000001e-05, 7.642999999999886e-05, 7.684700000000141e-05, 7.634700000000091e-05, 7.651399999999975e-05, 7.645800000000147e-05, 7.636100000000048e-05, 7.718099999999908e-05, 7.727800000000007e-05, 7.688900000000012e-05, 7.69029999999997e-05, 7.644399999999843e-05, 7.65839999999976e-05, 7.64449999999979e-05, 7.659800000000064e-05, 7.64310000000018e-05, 7.69440000000024e-05, 7.727800000000007e-05, 7.711099999999776e-05, 7.725000000000093e-05, 7.672200000000129e-05, 7.688900000000012e-05, 7.634700000000091e-05, 7.731999999999878e-05, 7.69029999999997e-05, 7.64029999999992e-05, 7.727800000000007e-05, 7.719499999999865e-05, 7.668099999999858e-05, 7.641599999999929e-05, 7.730499999999974e-05, 7.726399999999703e-05, 7.715299999999994e-05, 7.702799999999982e-05, 7.663899999999987e-05, 7.70969999999982e-05, 7.663899999999987e-05, 7.697199999999807e-05, 7.70969999999982e-05, 7.725000000000093e-05, 7.677799999999957e-05, 7.677800000000304e-05, 7.722199999999832e-05, 7.705499999999949e-05]</msg>
<status status="PASS" starttime="20201112 09:55:47.229" endtime="20201112 09:55:47.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.217" endtime="20201112 09:55:47.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.242" endtime="20201112 09:55:47.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:47.250" endtime="20201112 09:55:47.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.246" endtime="20201112 09:55:47.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.237" endtime="20201112 09:55:47.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.777" endtime="20201112 09:55:47.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:46.777" endtime="20201112 09:55:47.276"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.299" endtime="20201112 09:55:47.322"></status>
</kw>
<msg timestamp="20201112 09:55:47.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.296" endtime="20201112 09:55:47.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.325" endtime="20201112 09:55:47.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.331" endtime="20201112 09:55:47.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.289" endtime="20201112 09:55:47.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.283" endtime="20201112 09:55:47.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.355" endtime="20201112 09:55:47.692"></status>
</kw>
<msg timestamp="20201112 09:55:47.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042833222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0429115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:55:47.352" endtime="20201112 09:55:47.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042833222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0429115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:55:47.701" endtime="20201112 09:55:47.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.720" endtime="20201112 09:55:47.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.345" endtime="20201112 09:55:47.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.340" endtime="20201112 09:55:47.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:47.740" level="INFO">${RESULT} = [{'time': 0.0429115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.827800000000107e-05, 'source_diff': 7.827800000000107e-05}, {'time': 0.042991514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:47.731" endtime="20201112 09:55:47.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:47.771" level="INFO">${ACCURACY} = {'diff': [7.827800000000107e-05, 7.734699999999844e-05, 7.798600000000211e-05, 7.805599999999996e-05, 7.823599999999542e-05, 7.752700000000085e-05, 7.740200000000419e-05, 7.82770000000016e-05, 7.81519...</msg>
<status status="PASS" starttime="20201112 09:55:47.742" endtime="20201112 09:55:47.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.782" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:55:47.779" endtime="20201112 09:55:47.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.787" level="INFO">VALUE: [7.827800000000107e-05, 7.734699999999844e-05, 7.798600000000211e-05, 7.805599999999996e-05, 7.823599999999542e-05, 7.752700000000085e-05, 7.740200000000419e-05, 7.82770000000016e-05, 7.8151999999998e-05, 7.748600000000161e-05, 7.798600000000211e-05, 7.770800000000272e-05, 7.783299999999937e-05, 7.743099999999586e-05, 7.755599999999946e-05, 7.788899999999765e-05, 7.791700000000373e-05, 7.75969999999987e-05, 7.819500000000312e-05, 7.811099999999876e-05, 7.776299999999459e-05, 7.806900000000006e-05, 7.7764000000001e-05, 7.758299999999912e-05, 7.772199999999535e-05, 7.76110000000052e-05, 7.766700000000348e-05, 7.79169999999968e-05, 7.75839999999986e-05, 7.800000000000168e-05, 7.794500000000287e-05, 7.815299999999747e-05, 7.801399999999431e-05, 7.7764000000001e-05, 7.804100000000092e-05, 7.830500000000074e-05, 7.808299999999962e-05, 7.815300000000441e-05, 7.808299999999962e-05, 7.762499999999783e-05, 7.74440000000029e-05, 7.74310000000028e-05, 7.827800000000107e-05, 7.784699999999894e-05, 7.770900000000219e-05, 7.825000000000193e-05, 7.770800000000272e-05, 7.800000000000168e-05, 7.793000000000383e-05, 7.804200000000039e-05]</msg>
<status status="PASS" starttime="20201112 09:55:47.784" endtime="20201112 09:55:47.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.772" endtime="20201112 09:55:47.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.797" endtime="20201112 09:55:47.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:47.806" endtime="20201112 09:55:47.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.801" endtime="20201112 09:55:47.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.792" endtime="20201112 09:55:47.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.278" endtime="20201112 09:55:47.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.277" endtime="20201112 09:55:47.831"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.855" endtime="20201112 09:55:47.876"></status>
</kw>
<msg timestamp="20201112 09:55:47.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.851" endtime="20201112 09:55:47.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:47.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:47.880" endtime="20201112 09:55:47.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.886" endtime="20201112 09:55:47.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.844" endtime="20201112 09:55:47.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.838" endtime="20201112 09:55:47.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:47.912" endtime="20201112 09:55:48.260"></status>
</kw>
<msg timestamp="20201112 09:55:48.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042587306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042666139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:47.908" endtime="20201112 09:55:48.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042587306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042666139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.272" endtime="20201112 09:55:48.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.292" endtime="20201112 09:55:48.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.901" endtime="20201112 09:55:48.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.896" endtime="20201112 09:55:48.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:48.315" level="INFO">${RESULT} = [{'time': 0.042666139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.883300000000037e-05, 'source_diff': 7.883300000000037e-05}, {'time': 0.042749181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:48.305" endtime="20201112 09:55:48.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:48.347" level="INFO">${ACCURACY} = {'diff': [7.883300000000037e-05, 7.89169999999978e-05, 7.887499999999908e-05, 7.865299999999797e-05, 7.890300000000516e-05, 7.872299999999582e-05, 7.901400000000225e-05, 7.872300000000276e-05, 7.82910...</msg>
<status status="PASS" starttime="20201112 09:55:48.317" endtime="20201112 09:55:48.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.359" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:55:48.357" endtime="20201112 09:55:48.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.365" level="INFO">VALUE: [7.883300000000037e-05, 7.89169999999978e-05, 7.887499999999908e-05, 7.865299999999797e-05, 7.890300000000516e-05, 7.872299999999582e-05, 7.901400000000225e-05, 7.872300000000276e-05, 7.829100000000117e-05, 7.856900000000056e-05, 7.865299999999797e-05, 7.900000000000268e-05, 7.895799999999703e-05, 7.915299999999847e-05, 7.902800000000182e-05, 7.882000000000028e-05, 7.915299999999847e-05, 7.859799999999917e-05, 7.924999999999599e-05, 7.916599999999857e-05, 7.891599999999832e-05, 7.845799999999653e-05, 7.844399999999696e-05, 7.902799999999488e-05, 7.900000000000268e-05, 7.844399999999696e-05, 7.911099999999976e-05, 7.888899999999865e-05, 7.911099999999976e-05, 7.858300000000012e-05, 7.888899999999865e-05, 7.863900000000534e-05, 7.874999999999549e-05, 7.894399999999746e-05, 7.834699999999944e-05, 7.843000000000433e-05, 7.92640000000025e-05, 7.91389999999989e-05, 7.886099999999951e-05, 7.872199999999635e-05, 7.872200000000329e-05, 7.880600000000071e-05, 7.905600000000096e-05, 7.888899999999865e-05, 7.840299999999772e-05, 7.905499999999455e-05, 7.844500000000337e-05, 7.844399999999696e-05, 7.911099999999976e-05, 7.886099999999951e-05]</msg>
<status status="PASS" starttime="20201112 09:55:48.362" endtime="20201112 09:55:48.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.349" endtime="20201112 09:55:48.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.375" endtime="20201112 09:55:48.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:48.384" endtime="20201112 09:55:48.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.379" endtime="20201112 09:55:48.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.371" endtime="20201112 09:55:48.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.834" endtime="20201112 09:55:48.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:47.832" endtime="20201112 09:55:48.412"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.438" endtime="20201112 09:55:48.461"></status>
</kw>
<msg timestamp="20201112 09:55:48.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:48.434" endtime="20201112 09:55:48.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:48.466" endtime="20201112 09:55:48.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.474" endtime="20201112 09:55:48.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.425" endtime="20201112 09:55:48.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.419" endtime="20201112 09:55:48.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.499" endtime="20201112 09:55:48.862"></status>
</kw>
<msg timestamp="20201112 09:55:48.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047825292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047905514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.495" endtime="20201112 09:55:48.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047825292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047905514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:48.873" endtime="20201112 09:55:48.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.894" endtime="20201112 09:55:48.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.487" endtime="20201112 09:55:48.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.482" endtime="20201112 09:55:48.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:48.916" level="INFO">${RESULT} = [{'time': 0.047905514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.022200000000479e-05, 'source_diff': 8.022200000000479e-05}, {'time': 0.047992528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:48.906" endtime="20201112 09:55:48.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:48.949" level="INFO">${ACCURACY} = {'diff': [8.022200000000479e-05, 7.998599999999717e-05, 7.982000000000128e-05, 8.032000000000178e-05, 7.959800000000017e-05, 7.998599999999717e-05, 7.951299999999634e-05, 8.034700000000145e-05, 7.9569...</msg>
<status status="PASS" starttime="20201112 09:55:48.918" endtime="20201112 09:55:48.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.962" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:55:48.959" endtime="20201112 09:55:48.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:48.968" level="INFO">VALUE: [8.022200000000479e-05, 7.998599999999717e-05, 7.982000000000128e-05, 8.032000000000178e-05, 7.959800000000017e-05, 7.998599999999717e-05, 7.951299999999634e-05, 8.034700000000145e-05, 7.956900000000156e-05, 7.948599999999667e-05, 7.952800000000232e-05, 7.930600000000121e-05, 7.934700000000044e-05, 7.99169999999988e-05, 8.017999999999914e-05, 7.973599999999692e-05, 7.947299999999657e-05, 7.951400000000275e-05, 7.990199999999975e-05, 8.018099999999861e-05, 7.967999999999864e-05, 7.940299999999872e-05, 7.988899999999965e-05, 8.023599999999742e-05, 7.955600000000146e-05, 7.997200000000454e-05, 7.951400000000275e-05, 7.993099999999836e-05, 8.005599999999502e-05, 7.94169999999983e-05, 8.016599999999957e-05, 8.03190000000023e-05, 7.976300000000353e-05, 7.995799999999803e-05, 7.987500000000008e-05, 8.005499999999555e-05, 7.98190000000018e-05, 7.956900000000156e-05, 8.000000000000368e-05, 8.016699999999904e-05, 8.011100000000076e-05, 8.019499999999818e-05, 7.940299999999872e-05, 7.961199999999974e-05, 7.970899999999725e-05, 7.933299999999394e-05, 8.018099999999861e-05, 8.016699999999904e-05, 7.940299999999872e-05, 7.994399999999846e-05]</msg>
<status status="PASS" starttime="20201112 09:55:48.964" endtime="20201112 09:55:48.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.951" endtime="20201112 09:55:48.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:48.978" endtime="20201112 09:55:48.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:48.987" endtime="20201112 09:55:49.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.983" endtime="20201112 09:55:49.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.973" endtime="20201112 09:55:49.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.414" endtime="20201112 09:55:49.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:48.413" endtime="20201112 09:55:49.014"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.039" endtime="20201112 09:55:49.061"></status>
</kw>
<msg timestamp="20201112 09:55:49.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:49.035" endtime="20201112 09:55:49.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:49.066" endtime="20201112 09:55:49.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.072" endtime="20201112 09:55:49.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.027" endtime="20201112 09:55:49.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.021" endtime="20201112 09:55:49.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.097" endtime="20201112 09:55:49.453"></status>
</kw>
<msg timestamp="20201112 09:55:49.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044901417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044982097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:49.094" endtime="20201112 09:55:49.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044901417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044982097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:49.463" endtime="20201112 09:55:49.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.482" endtime="20201112 09:55:49.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.086" endtime="20201112 09:55:49.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.081" endtime="20201112 09:55:49.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:49.501" level="INFO">${RESULT} = [{'time': 0.044982097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.067999999999964e-05, 'source_diff': 8.067999999999964e-05}, {'time': 0.045071083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:49.492" endtime="20201112 09:55:49.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:49.532" level="INFO">${ACCURACY} = {'diff': [8.067999999999964e-05, 8.11390000000009e-05, 8.077799999999663e-05, 8.070799999999878e-05, 8.118000000000014e-05, 8.127799999999713e-05, 8.116700000000004e-05, 8.126399999999756e-05, 8.13749...</msg>
<status status="PASS" starttime="20201112 09:55:49.504" endtime="20201112 09:55:49.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.543" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:55:49.541" endtime="20201112 09:55:49.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.549" level="INFO">VALUE: [8.067999999999964e-05, 8.11390000000009e-05, 8.077799999999663e-05, 8.070799999999878e-05, 8.118000000000014e-05, 8.127799999999713e-05, 8.116700000000004e-05, 8.126399999999756e-05, 8.137499999999465e-05, 8.112500000000133e-05, 8.130600000000321e-05, 8.088900000000065e-05, 8.0846999999995e-05, 8.075000000000443e-05, 8.090300000000022e-05, 8.11390000000009e-05, 8.106900000000306e-05, 8.09719999999986e-05, 8.047200000000504e-05, 8.123599999999842e-05, 8.12919999999967e-05, 8.061100000000126e-05, 8.119499999999918e-05, 8.069499999999868e-05, 8.097299999999807e-05, 8.04719999999981e-05, 8.029099999999623e-05, 8.083300000000238e-05, 8.048599999999767e-05, 8.034700000000145e-05, 8.037500000000058e-05, 8.126399999999756e-05, 8.077800000000357e-05, 8.049999999999724e-05, 8.059800000000117e-05, 8.081999999999534e-05, 8.116700000000004e-05, 8.068100000000605e-05, 8.044399999999896e-05, 8.105499999999655e-05, 8.090300000000022e-05, 8.088900000000065e-05, 8.123599999999842e-05, 8.088900000000065e-05, 8.102799999999688e-05, 8.06390000000004e-05, 8.111100000000177e-05, 8.102799999999688e-05, 8.06390000000004e-05, 8.131999999999584e-05]</msg>
<status status="PASS" starttime="20201112 09:55:49.546" endtime="20201112 09:55:49.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.534" endtime="20201112 09:55:49.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.559" endtime="20201112 09:55:49.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:49.567" endtime="20201112 09:55:49.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.563" endtime="20201112 09:55:49.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.554" endtime="20201112 09:55:49.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.017" endtime="20201112 09:55:49.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.015" endtime="20201112 09:55:49.594"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.617" endtime="20201112 09:55:49.638"></status>
</kw>
<msg timestamp="20201112 09:55:49.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:49.613" endtime="20201112 09:55:49.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:49.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:49.642" endtime="20201112 09:55:49.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.648" endtime="20201112 09:55:49.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.606" endtime="20201112 09:55:49.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.600" endtime="20201112 09:55:49.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:49.673" endtime="20201112 09:55:50.023"></status>
</kw>
<msg timestamp="20201112 09:55:50.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043047861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:49.669" endtime="20201112 09:55:50.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043047861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.033" endtime="20201112 09:55:50.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.052" endtime="20201112 09:55:50.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.661" endtime="20201112 09:55:50.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.656" endtime="20201112 09:55:50.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.072" level="INFO">${RESULT} = [{'time': 0.043130097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.223599999999942e-05, 'source_diff': 8.223599999999942e-05}, {'time': 0.043226139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:50.063" endtime="20201112 09:55:50.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:50.103" level="INFO">${ACCURACY} = {'diff': [8.223599999999942e-05, 8.152799999999738e-05, 8.190300000000122e-05, 8.193000000000089e-05, 8.186100000000252e-05, 8.161100000000227e-05, 8.151400000000475e-05, 8.154199999999695e-05, 8.2319...</msg>
<status status="PASS" starttime="20201112 09:55:50.074" endtime="20201112 09:55:50.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.114" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:55:50.112" endtime="20201112 09:55:50.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.120" level="INFO">VALUE: [8.223599999999942e-05, 8.152799999999738e-05, 8.190300000000122e-05, 8.193000000000089e-05, 8.186100000000252e-05, 8.161100000000227e-05, 8.151400000000475e-05, 8.154199999999695e-05, 8.231999999999684e-05, 8.181999999999634e-05, 8.161100000000227e-05, 8.188800000000218e-05, 8.181899999999687e-05, 8.20970000000032e-05, 8.194400000000046e-05, 8.179200000000414e-05, 8.169400000000021e-05, 8.216700000000104e-05, 8.22919999999977e-05, 8.177800000000457e-05, 8.21390000000019e-05, 8.161099999999533e-05, 8.199999999999874e-05, 8.137500000000158e-05, 8.227699999999866e-05, 8.204099999999798e-05, 8.156900000000356e-05, 8.13049999999968e-05, 8.152799999999738e-05, 8.219400000000071e-05, 8.155600000000346e-05, 8.204199999999745e-05, 8.149999999999824e-05, 8.152799999999738e-05, 8.148599999999867e-05, 8.201400000000525e-05, 8.19719999999996e-05, 8.224999999999899e-05, 8.143099999999986e-05, 8.198599999999917e-05, 8.151399999999781e-05, 8.206899999999712e-05, 8.144399999999996e-05, 8.211100000000277e-05, 8.169499999999968e-05, 8.172199999999935e-05, 8.194499999999993e-05, 8.197299999999907e-05, 8.226299999999909e-05, 8.184700000000295e-05]</msg>
<status status="PASS" starttime="20201112 09:55:50.116" endtime="20201112 09:55:50.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.105" endtime="20201112 09:55:50.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.129" endtime="20201112 09:55:50.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:50.138" endtime="20201112 09:55:50.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.133" endtime="20201112 09:55:50.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.125" endtime="20201112 09:55:50.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.596" endtime="20201112 09:55:50.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:49.594" endtime="20201112 09:55:50.164"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.187" endtime="20201112 09:55:50.207"></status>
</kw>
<msg timestamp="20201112 09:55:50.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:50.184" endtime="20201112 09:55:50.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:50.208" endtime="20201112 09:55:50.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.212" endtime="20201112 09:55:50.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.176" endtime="20201112 09:55:50.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.171" endtime="20201112 09:55:50.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.223" endtime="20201112 09:55:50.513"></status>
</kw>
<msg timestamp="20201112 09:55:50.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0429515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043034542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:55:50.221" endtime="20201112 09:55:50.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0429515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043034542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:55:50.523" endtime="20201112 09:55:50.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.542" endtime="20201112 09:55:50.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.218" endtime="20201112 09:55:50.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.215" endtime="20201112 09:55:50.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:50.563" level="INFO">${RESULT} = [{'time': 0.043034542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.304200000000539e-05, 'source_diff': 8.304200000000539e-05}, {'time': 0.043128542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:50.554" endtime="20201112 09:55:50.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:50.594" level="INFO">${ACCURACY} = {'diff': [8.304200000000539e-05, 8.323600000000042e-05, 8.308299999999769e-05, 8.29590000000005e-05, 8.2846999999997e-05, 8.302699999999941e-05, 8.320800000000128e-05, 8.261099999999633e-05, 8.2958000...</msg>
<status status="PASS" starttime="20201112 09:55:50.565" endtime="20201112 09:55:50.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.605" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:55:50.603" endtime="20201112 09:55:50.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.610" level="INFO">VALUE: [8.304200000000539e-05, 8.323600000000042e-05, 8.308299999999769e-05, 8.29590000000005e-05, 8.2846999999997e-05, 8.302699999999941e-05, 8.320800000000128e-05, 8.261099999999633e-05, 8.295800000000103e-05, 8.236099999999608e-05, 8.236099999999608e-05, 8.31249999999964e-05, 8.281999999999734e-05, 8.273599999999992e-05, 8.238899999999522e-05, 8.227799999999813e-05, 8.240200000000225e-05, 8.326399999999956e-05, 8.268000000000164e-05, 8.256899999999762e-05, 8.286100000000352e-05, 8.330600000000521e-05, 8.281899999999787e-05, 8.280599999999777e-05, 8.301399999999931e-05, 8.240300000000172e-05, 8.248699999999914e-05, 8.302799999999888e-05, 8.247299999999957e-05, 8.293000000000189e-05, 8.265199999999556e-05, 8.298600000000017e-05, 8.319400000000171e-05, 8.249999999999924e-05, 8.299999999999974e-05, 8.304199999999845e-05, 8.331999999999784e-05, 8.27919999999982e-05, 8.30840000000041e-05, 8.286099999999658e-05, 8.324999999999999e-05, 8.240199999999531e-05, 8.288800000000318e-05, 8.26390000000024e-05, 8.236099999999608e-05, 8.315299999999554e-05, 8.327799999999913e-05, 8.270800000000078e-05, 8.288899999999572e-05, 8.326399999999956e-05]</msg>
<status status="PASS" starttime="20201112 09:55:50.607" endtime="20201112 09:55:50.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.596" endtime="20201112 09:55:50.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.620" endtime="20201112 09:55:50.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:50.628" endtime="20201112 09:55:50.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.624" endtime="20201112 09:55:50.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.616" endtime="20201112 09:55:50.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.166" endtime="20201112 09:55:50.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.165" endtime="20201112 09:55:50.654"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.678" endtime="20201112 09:55:50.700"></status>
</kw>
<msg timestamp="20201112 09:55:50.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:50.674" endtime="20201112 09:55:50.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:50.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:50.703" endtime="20201112 09:55:50.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.710" endtime="20201112 09:55:50.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.667" endtime="20201112 09:55:50.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.661" endtime="20201112 09:55:50.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:50.733" endtime="20201112 09:55:51.072"></status>
</kw>
<msg timestamp="20201112 09:55:51.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042740069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042823806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:50.730" endtime="20201112 09:55:51.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042740069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042823806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:51.082" endtime="20201112 09:55:51.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.101" endtime="20201112 09:55:51.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.723" endtime="20201112 09:55:51.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.718" endtime="20201112 09:55:51.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:51.120" level="INFO">${RESULT} = [{'time': 0.042823806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.37370000000004e-05, 'source_diff': 8.37370000000004e-05}, {'time': 0.042919819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:51.111" endtime="20201112 09:55:51.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:51.151" level="INFO">${ACCURACY} = {'diff': [8.37370000000004e-05, 8.419399999999577e-05, 8.415199999999706e-05, 8.352799999999938e-05, 8.388900000000366e-05, 8.387499999999715e-05, 8.397199999999466e-05, 8.404199999999945e-05, 8.36390...</msg>
<status status="PASS" starttime="20201112 09:55:51.123" endtime="20201112 09:55:51.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.163" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:55:51.160" endtime="20201112 09:55:51.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.168" level="INFO">VALUE: [8.37370000000004e-05, 8.419399999999577e-05, 8.415199999999706e-05, 8.352799999999938e-05, 8.388900000000366e-05, 8.387499999999715e-05, 8.397199999999466e-05, 8.404199999999945e-05, 8.36390000000034e-05, 8.382000000000528e-05, 8.391699999999586e-05, 8.388900000000366e-05, 8.39999999999938e-05, 8.377700000000016e-05, 8.420799999999534e-05, 8.356899999999862e-05, 8.408300000000563e-05, 8.375000000000049e-05, 8.338900000000316e-05, 8.388800000000418e-05, 8.373599999999398e-05, 8.413899999999697e-05, 8.368099999999518e-05, 8.348600000000067e-05, 8.427800000000013e-05, 8.372200000000135e-05, 8.376300000000059e-05, 8.387500000000409e-05, 8.39720000000016e-05, 8.393000000000289e-05, 8.372200000000135e-05, 8.405599999999902e-05, 8.368100000000211e-05, 8.336099999999708e-05, 8.390299999999629e-05, 8.363799999999699e-05, 8.405599999999902e-05, 8.401300000000084e-05, 8.368000000000264e-05, 8.38049999999993e-05, 8.388900000000366e-05, 8.416700000000304e-05, 8.426400000000056e-05, 8.333300000000488e-05, 8.423600000000142e-05, 8.387500000000409e-05, 8.401400000000031e-05, 8.359699999999776e-05, 8.42919999999997e-05, 8.357000000000503e-05]</msg>
<status status="PASS" starttime="20201112 09:55:51.165" endtime="20201112 09:55:51.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.153" endtime="20201112 09:55:51.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.178" endtime="20201112 09:55:51.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:51.186" endtime="20201112 09:55:51.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.182" endtime="20201112 09:55:51.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.173" endtime="20201112 09:55:51.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.657" endtime="20201112 09:55:51.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:50.655" endtime="20201112 09:55:51.212"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.235" endtime="20201112 09:55:51.258"></status>
</kw>
<msg timestamp="20201112 09:55:51.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:51.232" endtime="20201112 09:55:51.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:51.261" endtime="20201112 09:55:51.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.267" endtime="20201112 09:55:51.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.224" endtime="20201112 09:55:51.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.219" endtime="20201112 09:55:51.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.291" endtime="20201112 09:55:51.629"></status>
</kw>
<msg timestamp="20201112 09:55:51.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042724875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042809194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:51.288" endtime="20201112 09:55:51.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042724875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042809194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:51.638" endtime="20201112 09:55:51.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.658" endtime="20201112 09:55:51.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.281" endtime="20201112 09:55:51.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.276" endtime="20201112 09:55:51.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:51.677" level="INFO">${RESULT} = [{'time': 0.042809194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.431899999999937e-05, 'source_diff': 8.431899999999937e-05}, {'time': 0.042908208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:51.668" endtime="20201112 09:55:51.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:51.708" level="INFO">${ACCURACY} = {'diff': [8.431899999999937e-05, 8.511100000000577e-05, 8.523600000000242e-05, 8.469399999999627e-05, 8.495800000000303e-05, 8.491699999999686e-05, 8.465299999999704e-05, 8.536099999999908e-05, 8.5319...</msg>
<status status="PASS" starttime="20201112 09:55:51.679" endtime="20201112 09:55:51.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.719" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:55:51.717" endtime="20201112 09:55:51.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.725" level="INFO">VALUE: [8.431899999999937e-05, 8.511100000000577e-05, 8.523600000000242e-05, 8.469399999999627e-05, 8.495800000000303e-05, 8.491699999999686e-05, 8.465299999999704e-05, 8.536099999999908e-05, 8.531999999999984e-05, 8.444399999999602e-05, 8.46249999999979e-05, 8.463800000000493e-05, 8.515199999999806e-05, 8.523600000000242e-05, 8.519400000000371e-05, 8.452800000000038e-05, 8.44720000000021e-05, 8.51390000000049e-05, 8.469500000000268e-05, 8.515299999999754e-05, 8.531999999999984e-05, 8.487499999999815e-05, 8.477800000000063e-05, 8.509699999999926e-05, 8.452699999999397e-05, 8.466599999999713e-05, 8.519399999999677e-05, 8.465299999999704e-05, 8.527800000000113e-05, 8.495799999999609e-05, 8.49170000000038e-05, 8.438899999999722e-05, 8.470800000000278e-05, 8.530600000000027e-05, 8.477800000000063e-05, 8.46249999999979e-05, 8.486099999999858e-05, 8.516599999999763e-05, 8.440199999999731e-05, 8.522199999999591e-05, 8.455500000000005e-05, 8.477800000000063e-05, 8.506900000000012e-05, 8.477800000000063e-05, 8.480599999999977e-05, 8.512500000000534e-05, 8.469400000000321e-05, 8.450000000000124e-05, 8.504200000000045e-05, 8.513899999999797e-05]</msg>
<status status="PASS" starttime="20201112 09:55:51.722" endtime="20201112 09:55:51.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.710" endtime="20201112 09:55:51.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.735" endtime="20201112 09:55:51.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:51.743" endtime="20201112 09:55:51.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.739" endtime="20201112 09:55:51.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.730" endtime="20201112 09:55:51.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.214" endtime="20201112 09:55:51.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.213" endtime="20201112 09:55:51.769"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.792" endtime="20201112 09:55:51.814"></status>
</kw>
<msg timestamp="20201112 09:55:51.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:51.789" endtime="20201112 09:55:51.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:51.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:51.818" endtime="20201112 09:55:51.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.824" endtime="20201112 09:55:51.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.782" endtime="20201112 09:55:51.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.776" endtime="20201112 09:55:51.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:51.848" endtime="20201112 09:55:52.186"></status>
</kw>
<msg timestamp="20201112 09:55:52.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042568847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042654819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:51.844" endtime="20201112 09:55:52.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042568847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042654819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.196" endtime="20201112 09:55:52.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.215" endtime="20201112 09:55:52.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.837" endtime="20201112 09:55:52.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.832" endtime="20201112 09:55:52.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:52.234" level="INFO">${RESULT} = [{'time': 0.042654819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.597199999999666e-05, 'source_diff': 8.597199999999666e-05}, {'time': 0.042755819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:52.225" endtime="20201112 09:55:52.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:52.265" level="INFO">${ACCURACY} = {'diff': [8.597199999999666e-05, 8.583300000000044e-05, 8.558300000000019e-05, 8.569399999999727e-05, 8.536099999999908e-05, 8.580599999999383e-05, 8.591699999999786e-05, 8.58329999999935e-05, 8.62779...</msg>
<status status="PASS" starttime="20201112 09:55:52.236" endtime="20201112 09:55:52.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.276" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:55:52.274" endtime="20201112 09:55:52.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.282" level="INFO">VALUE: [8.597199999999666e-05, 8.583300000000044e-05, 8.558300000000019e-05, 8.569399999999727e-05, 8.536099999999908e-05, 8.580599999999383e-05, 8.591699999999786e-05, 8.58329999999935e-05, 8.627799999999519e-05, 8.594500000000393e-05, 8.623600000000342e-05, 8.5459000000003e-05, 8.601400000000231e-05, 8.572299999999589e-05, 8.588899999999872e-05, 8.555500000000105e-05, 8.59999999999958e-05, 8.58050000000013e-05, 8.53469999999995e-05, 8.558300000000019e-05, 8.590300000000523e-05, 8.543100000000386e-05, 8.577800000000163e-05, 8.559799999999923e-05, 8.615299999999854e-05, 8.620900000000375e-05, 8.566599999999813e-05, 8.556900000000062e-05, 8.558399999999966e-05, 8.5847e-05, 8.633300000000094e-05, 8.540300000000473e-05, 8.61249999999994e-05, 8.61249999999994e-05, 8.576400000000206e-05, 8.615299999999854e-05, 8.534799999999898e-05, 8.611099999999983e-05, 8.586100000000652e-05, 8.620799999999734e-05, 8.576400000000206e-05, 8.591599999999838e-05, 8.631900000000137e-05, 8.556900000000062e-05, 8.623600000000342e-05, 8.632000000000084e-05, 8.577800000000163e-05, 8.543000000000439e-05, 8.601400000000231e-05, 8.595799999999709e-05]</msg>
<status status="PASS" starttime="20201112 09:55:52.279" endtime="20201112 09:55:52.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.267" endtime="20201112 09:55:52.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.292" endtime="20201112 09:55:52.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:52.300" endtime="20201112 09:55:52.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.296" endtime="20201112 09:55:52.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.287" endtime="20201112 09:55:52.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.771" endtime="20201112 09:55:52.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:51.770" endtime="20201112 09:55:52.326"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.349" endtime="20201112 09:55:52.371"></status>
</kw>
<msg timestamp="20201112 09:55:52.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:52.346" endtime="20201112 09:55:52.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:52.375" endtime="20201112 09:55:52.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.381" endtime="20201112 09:55:52.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.339" endtime="20201112 09:55:52.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.333" endtime="20201112 09:55:52.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.405" endtime="20201112 09:55:52.742"></status>
</kw>
<msg timestamp="20201112 09:55:52.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042913472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043000528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.401" endtime="20201112 09:55:52.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042913472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043000528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.752" endtime="20201112 09:55:52.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.771" endtime="20201112 09:55:52.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.394" endtime="20201112 09:55:52.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.389" endtime="20201112 09:55:52.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:52.792" level="INFO">${RESULT} = [{'time': 0.043000528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.705600000000202e-05, 'source_diff': 8.705600000000202e-05}, {'time': 0.043094542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:52.783" endtime="20201112 09:55:52.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:52.823" level="INFO">${ACCURACY} = {'diff': [8.705600000000202e-05, 8.698599999999723e-05, 8.677800000000263e-05, 8.719499999999825e-05, 8.655500000000205e-05, 8.687500000000015e-05, 8.676400000000306e-05, 8.719400000000571e-05, 8.7250...</msg>
<status status="PASS" starttime="20201112 09:55:52.794" endtime="20201112 09:55:52.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.834" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:55:52.832" endtime="20201112 09:55:52.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.839" level="INFO">VALUE: [8.705600000000202e-05, 8.698599999999723e-05, 8.677800000000263e-05, 8.719499999999825e-05, 8.655500000000205e-05, 8.687500000000015e-05, 8.676400000000306e-05, 8.719400000000571e-05, 8.725000000000399e-05, 8.630599999999433e-05, 8.644400000000496e-05, 8.6847000000001e-05, 8.698600000000417e-05, 8.705600000000202e-05, 8.690299999999929e-05, 8.650000000000324e-05, 8.659700000000076e-05, 8.708300000000169e-05, 8.691599999999938e-05, 8.708300000000169e-05, 8.669399999999827e-05, 8.726399999999662e-05, 8.71669999999991e-05, 8.690299999999929e-05, 8.680599999999483e-05, 8.722299999999739e-05, 8.71120000000003e-05, 8.643100000000487e-05, 8.63199999999939e-05, 8.663799999999999e-05, 8.670799999999784e-05, 8.73050000000028e-05, 8.654100000000248e-05, 8.687500000000015e-05, 8.733400000000141e-05, 8.72920000000027e-05, 8.670899999999732e-05, 8.658400000000066e-05, 8.706999999999465e-05, 8.652800000000238e-05, 8.670899999999732e-05, 8.694399999999852e-05, 8.727800000000313e-05, 8.683300000000144e-05, 8.651400000000281e-05, 8.63470000000005e-05, 8.63470000000005e-05, 8.73199999999949e-05, 8.677800000000263e-05, 8.702799999999594e-05]</msg>
<status status="PASS" starttime="20201112 09:55:52.836" endtime="20201112 09:55:52.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.825" endtime="20201112 09:55:52.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.849" endtime="20201112 09:55:52.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:52.857" endtime="20201112 09:55:52.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.853" endtime="20201112 09:55:52.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.844" endtime="20201112 09:55:52.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.328" endtime="20201112 09:55:52.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.327" endtime="20201112 09:55:52.883"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.907" endtime="20201112 09:55:52.929"></status>
</kw>
<msg timestamp="20201112 09:55:52.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:52.904" endtime="20201112 09:55:52.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:52.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:52.932" endtime="20201112 09:55:52.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.938" endtime="20201112 09:55:52.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.896" endtime="20201112 09:55:52.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.890" endtime="20201112 09:55:52.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:52.962" endtime="20201112 09:55:53.301"></status>
</kw>
<msg timestamp="20201112 09:55:53.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043036514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043124722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:52.959" endtime="20201112 09:55:53.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043036514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043124722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.311" endtime="20201112 09:55:53.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.330" endtime="20201112 09:55:53.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.952" endtime="20201112 09:55:53.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.947" endtime="20201112 09:55:53.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:53.349" level="INFO">${RESULT} = [{'time': 0.043124722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.820799999999934e-05, 'source_diff': 8.820799999999934e-05}, {'time': 0.043227722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:53.340" endtime="20201112 09:55:53.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:53.380" level="INFO">${ACCURACY} = {'diff': [8.820799999999934e-05, 8.786100000000158e-05, 8.773599999999798e-05, 8.820799999999934e-05, 8.808300000000269e-05, 8.786099999999464e-05, 8.81250000000014e-05, 8.740299999999979e-05, 8.81390...</msg>
<status status="PASS" starttime="20201112 09:55:53.352" endtime="20201112 09:55:53.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.392" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:55:53.389" endtime="20201112 09:55:53.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.397" level="INFO">VALUE: [8.820799999999934e-05, 8.786100000000158e-05, 8.773599999999798e-05, 8.820799999999934e-05, 8.808300000000269e-05, 8.786099999999464e-05, 8.81250000000014e-05, 8.740299999999979e-05, 8.813900000000097e-05, 8.76120000000008e-05, 8.823599999999848e-05, 8.822200000000585e-05, 8.816600000000063e-05, 8.784700000000201e-05, 8.748599999999773e-05, 8.834700000000251e-05, 8.827799999999719e-05, 8.777800000000363e-05, 8.736100000000108e-05, 8.827800000000413e-05, 8.795899999999857e-05, 8.736200000000055e-05, 8.780499999999636e-05, 8.78050000000033e-05, 8.755499999999611e-05, 8.738900000000022e-05, 8.752799999999644e-05, 8.776399999999712e-05, 8.761100000000133e-05, 8.743100000000587e-05, 8.830599999999633e-05, 8.754099999999654e-05, 8.783400000000191e-05, 8.769500000000569e-05, 8.751300000000434e-05, 8.776300000000459e-05, 8.823599999999848e-05, 8.73470000000015e-05, 8.792999999999995e-05, 8.823599999999848e-05, 8.765300000000004e-05, 8.827800000000413e-05, 8.798599999999823e-05, 8.770899999999832e-05, 8.815300000000054e-05, 8.773699999999746e-05, 8.76799999999997e-05, 8.740200000000031e-05, 8.787500000000115e-05, 8.769499999999875e-05]</msg>
<status status="PASS" starttime="20201112 09:55:53.394" endtime="20201112 09:55:53.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.382" endtime="20201112 09:55:53.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.407" endtime="20201112 09:55:53.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:53.415" endtime="20201112 09:55:53.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.411" endtime="20201112 09:55:53.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.402" endtime="20201112 09:55:53.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.886" endtime="20201112 09:55:53.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:52.884" endtime="20201112 09:55:53.441"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.464" endtime="20201112 09:55:53.487"></status>
</kw>
<msg timestamp="20201112 09:55:53.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:53.461" endtime="20201112 09:55:53.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:53.490" endtime="20201112 09:55:53.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.497" endtime="20201112 09:55:53.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.453" endtime="20201112 09:55:53.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.447" endtime="20201112 09:55:53.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.521" endtime="20201112 09:55:53.831"></status>
</kw>
<msg timestamp="20201112 09:55:53.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042808278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042897444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.517" endtime="20201112 09:55:53.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042808278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042897444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.835" endtime="20201112 09:55:53.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.844" endtime="20201112 09:55:53.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.510" endtime="20201112 09:55:53.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.505" endtime="20201112 09:55:53.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:53.853" level="INFO">${RESULT} = [{'time': 0.042897444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916600000000163e-05, 'source_diff': 8.916600000000163e-05}, {'time': 0.042995444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:53.849" endtime="20201112 09:55:53.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:53.867" level="INFO">${ACCURACY} = {'diff': [8.916600000000163e-05, 8.909700000000326e-05, 8.913900000000197e-05, 8.858299999999625e-05, 8.877800000000463e-05, 8.8945e-05, 8.86670000000006e-05, 8.91670000000011e-05, 8.904200000000445e-...</msg>
<status status="PASS" starttime="20201112 09:55:53.854" endtime="20201112 09:55:53.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.872" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:55:53.871" endtime="20201112 09:55:53.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.875" level="INFO">VALUE: [8.916600000000163e-05, 8.909700000000326e-05, 8.913900000000197e-05, 8.858299999999625e-05, 8.877800000000463e-05, 8.8945e-05, 8.86670000000006e-05, 8.91670000000011e-05, 8.904200000000445e-05, 8.852800000000438e-05, 8.887500000000215e-05, 8.848599999999873e-05, 8.909699999999632e-05, 8.88050000000043e-05, 8.847199999999916e-05, 8.91250000000024e-05, 8.922199999999991e-05, 8.89999999999988e-05, 8.886100000000258e-05, 8.847199999999916e-05, 8.895899999999957e-05, 8.8945e-05, 8.9332999999997e-05, 8.924999999999905e-05, 8.88050000000043e-05, 8.843000000000045e-05, 8.918100000000068e-05, 8.872199999999941e-05, 8.861100000000233e-05, 8.872199999999941e-05, 8.852799999999744e-05, 8.877799999999769e-05, 8.908399999999622e-05, 8.876399999999812e-05, 8.84869999999982e-05, 8.880499999999736e-05, 8.85129999999984e-05, 8.911100000000283e-05, 8.854200000000395e-05, 8.851399999999787e-05, 8.881900000000387e-05, 8.856900000000362e-05, 8.91670000000011e-05, 8.933400000000341e-05, 8.837500000000165e-05, 8.877799999999769e-05, 8.847299999999864e-05, 8.911099999999589e-05, 8.927699999999872e-05, 8.924999999999905e-05]</msg>
<status status="PASS" starttime="20201112 09:55:53.873" endtime="20201112 09:55:53.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.867" endtime="20201112 09:55:53.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.879" endtime="20201112 09:55:53.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:53.883" endtime="20201112 09:55:53.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.881" endtime="20201112 09:55:53.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.877" endtime="20201112 09:55:53.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.443" endtime="20201112 09:55:53.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.442" endtime="20201112 09:55:53.905"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.915" endtime="20201112 09:55:53.935"></status>
</kw>
<msg timestamp="20201112 09:55:53.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:53.914" endtime="20201112 09:55:53.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:53.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:53.936" endtime="20201112 09:55:53.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.939" endtime="20201112 09:55:53.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.910" endtime="20201112 09:55:53.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.908" endtime="20201112 09:55:53.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:53.951" endtime="20201112 09:55:54.262"></status>
</kw>
<msg timestamp="20201112 09:55:54.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024986625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:53.949" endtime="20201112 09:55:54.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024986625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.271" endtime="20201112 09:55:54.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.290" endtime="20201112 09:55:54.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.945" endtime="20201112 09:55:54.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.943" endtime="20201112 09:55:54.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:54.310" level="INFO">${RESULT} = [{'time': 0.024986625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.938899999999875e-05, 'source_diff': 8.938899999999875e-05}, {'time': 0.025085583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:54.301" endtime="20201112 09:55:54.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:54.341" level="INFO">${ACCURACY} = {'diff': [8.938899999999875e-05, 9.033300000000147e-05, 8.977699999999922e-05, 9.034799999999704e-05, 8.99999999999998e-05, 9.027799999999919e-05, 9.023599999999701e-05, 8.938899999999875e-05, 8.97220...</msg>
<status status="PASS" starttime="20201112 09:55:54.312" endtime="20201112 09:55:54.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.352" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:55:54.350" endtime="20201112 09:55:54.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.358" level="INFO">VALUE: [8.938899999999875e-05, 9.033300000000147e-05, 8.977699999999922e-05, 9.034799999999704e-05, 8.99999999999998e-05, 9.027799999999919e-05, 9.023599999999701e-05, 8.938899999999875e-05, 8.972200000000041e-05, 8.987499999999968e-05, 9.032000000000137e-05, 8.938900000000222e-05, 9.004200000000198e-05, 8.94450000000005e-05, 8.943000000000145e-05, 8.944400000000102e-05, 9.020799999999787e-05, 9.002799999999894e-05, 8.974999999999955e-05, 8.937499999999918e-05, 8.986100000000011e-05, 9.016699999999864e-05, 9.005600000000155e-05, 8.972199999999694e-05, 8.99999999999998e-05, 8.948599999999973e-05, 9.011100000000036e-05, 9.015299999999907e-05, 8.98329999999975e-05, 8.967999999999823e-05, 8.947200000000016e-05, 9.001400000000284e-05, 8.94450000000005e-05, 8.990299999999882e-05, 9.000000000000327e-05, 9.031899999999843e-05, 8.986100000000011e-05, 9.026300000000015e-05, 9.01389999999995e-05, 8.997200000000066e-05, 8.986100000000011e-05, 8.991699999999839e-05, 9.015299999999907e-05, 8.958400000000019e-05, 9.016699999999864e-05, 8.987499999999968e-05, 9.034700000000104e-05, 9.011100000000036e-05, 8.984700000000054e-05, 8.962499999999943e-05]</msg>
<status status="PASS" starttime="20201112 09:55:54.354" endtime="20201112 09:55:54.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.343" endtime="20201112 09:55:54.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.374" endtime="20201112 09:55:54.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:54.382" endtime="20201112 09:55:54.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.378" endtime="20201112 09:55:54.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.369" endtime="20201112 09:55:54.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.906" endtime="20201112 09:55:54.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:53.905" endtime="20201112 09:55:54.408"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.432" endtime="20201112 09:55:54.453"></status>
</kw>
<msg timestamp="20201112 09:55:54.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:54.428" endtime="20201112 09:55:54.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:54.457" endtime="20201112 09:55:54.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.463" endtime="20201112 09:55:54.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.421" endtime="20201112 09:55:54.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.415" endtime="20201112 09:55:54.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.487" endtime="20201112 09:55:54.824"></status>
</kw>
<msg timestamp="20201112 09:55:54.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042746014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042837139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.484" endtime="20201112 09:55:54.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042746014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042837139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:54.833" endtime="20201112 09:55:54.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.853" endtime="20201112 09:55:54.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.476" endtime="20201112 09:55:54.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.472" endtime="20201112 09:55:54.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:54.874" level="INFO">${RESULT} = [{'time': 0.042837139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.11250000000044e-05, 'source_diff': 9.11250000000044e-05}, {'time': 0.042932139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:54.865" endtime="20201112 09:55:54.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:54.905" level="INFO">${ACCURACY} = {'diff': [9.11250000000044e-05, 9.109699999999832e-05, 9.034699999999757e-05, 9.127800000000019e-05, 9.119499999999531e-05, 9.0332999999998e-05, 9.094400000000252e-05, 9.126400000000062e-05, 9.1069000...</msg>
<status status="PASS" starttime="20201112 09:55:54.876" endtime="20201112 09:55:54.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.916" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:55:54.914" endtime="20201112 09:55:54.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:54.922" level="INFO">VALUE: [9.11250000000044e-05, 9.109699999999832e-05, 9.034699999999757e-05, 9.127800000000019e-05, 9.119499999999531e-05, 9.0332999999998e-05, 9.094400000000252e-05, 9.126400000000062e-05, 9.106900000000612e-05, 9.122200000000191e-05, 9.072199999999447e-05, 9.098600000000123e-05, 9.101400000000037e-05, 9.0945000000002e-05, 9.048600000000073e-05, 9.125000000000105e-05, 9.073600000000098e-05, 9.036100000000408e-05, 9.086099999999764e-05, 9.051399999999987e-05, 9.072200000000141e-05, 9.069399999999533e-05, 9.102799999999994e-05, 9.055599999999858e-05, 9.093099999999549e-05, 9.093099999999549e-05, 9.041699999999542e-05, 9.034799999999704e-05, 9.095900000000157e-05, 9.131899999999943e-05, 9.084700000000501e-05, 9.11250000000044e-05, 9.058299999999825e-05, 9.077799999999969e-05, 9.043100000000193e-05, 9.130599999999933e-05, 9.072200000000141e-05, 9.069499999999481e-05, 9.108400000000516e-05, 9.075000000000055e-05, 9.112499999999746e-05, 9.040300000000279e-05, 9.094399999999558e-05, 9.104199999999951e-05, 9.122200000000191e-05, 9.133300000000594e-05, 9.070800000000184e-05, 9.13199999999989e-05, 9.109699999999832e-05, 9.036100000000408e-05]</msg>
<status status="PASS" starttime="20201112 09:55:54.918" endtime="20201112 09:55:54.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.907" endtime="20201112 09:55:54.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.931" endtime="20201112 09:55:54.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:54.940" endtime="20201112 09:55:54.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.935" endtime="20201112 09:55:54.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.927" endtime="20201112 09:55:54.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.411" endtime="20201112 09:55:54.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.409" endtime="20201112 09:55:54.966"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:54.989" endtime="20201112 09:55:55.012"></status>
</kw>
<msg timestamp="20201112 09:55:55.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:54.986" endtime="20201112 09:55:55.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:55.015" endtime="20201112 09:55:55.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.021" endtime="20201112 09:55:55.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.979" endtime="20201112 09:55:55.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.973" endtime="20201112 09:55:55.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.045" endtime="20201112 09:55:55.384"></status>
</kw>
<msg timestamp="20201112 09:55:55.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043067597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.042" endtime="20201112 09:55:55.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042976097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043067597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.394" endtime="20201112 09:55:55.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.413" endtime="20201112 09:55:55.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.034" endtime="20201112 09:55:55.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.030" endtime="20201112 09:55:55.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:55.432" level="INFO">${RESULT} = [{'time': 0.043067597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.15000000000013e-05, 'source_diff': 9.15000000000013e-05}, {'time': 0.043164653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:55:55.423" endtime="20201112 09:55:55.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:55.463" level="INFO">${ACCURACY} = {'diff': [9.15000000000013e-05, 9.169499999999581e-05, 9.193099999999649e-05, 9.213900000000497e-05, 9.136099999999814e-05, 9.156999999999915e-05, 9.169500000000275e-05, 9.157000000000609e-05, 9.16530...</msg>
<status status="PASS" starttime="20201112 09:55:55.435" endtime="20201112 09:55:55.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.475" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:55:55.472" endtime="20201112 09:55:55.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.480" level="INFO">VALUE: [9.15000000000013e-05, 9.169499999999581e-05, 9.193099999999649e-05, 9.213900000000497e-05, 9.136099999999814e-05, 9.156999999999915e-05, 9.169500000000275e-05, 9.157000000000609e-05, 9.165300000000404e-05, 9.231900000000043e-05, 9.184699999999907e-05, 9.134699999999857e-05, 9.158299999999925e-05, 9.140300000000379e-05, 9.21529999999976e-05, 9.206999999999965e-05, 9.14859999999948e-05, 9.151400000000087e-05, 9.190299999999735e-05, 9.19859999999953e-05, 9.172200000000241e-05, 9.227700000000172e-05, 9.21529999999976e-05, 9.217999999999726e-05, 9.138900000000422e-05, 9.223600000000248e-05, 9.168099999999624e-05, 9.180599999999983e-05, 9.193100000000343e-05, 9.187499999999821e-05, 9.177800000000069e-05, 9.152699999999403e-05, 9.177700000000122e-05, 9.175000000000155e-05, 9.21670000000041e-05, 9.15000000000013e-05, 9.204200000000051e-05, 9.206900000000018e-05, 9.227800000000119e-05, 9.212499999999846e-05, 9.205600000000008e-05, 9.186099999999864e-05, 9.2333e-05, 9.148600000000173e-05, 9.184700000000601e-05, 9.16529999999971e-05, 9.159700000000576e-05, 9.144400000000302e-05, 9.136100000000508e-05, 9.201400000000137e-05]</msg>
<status status="PASS" starttime="20201112 09:55:55.477" endtime="20201112 09:55:55.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.465" endtime="20201112 09:55:55.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.490" endtime="20201112 09:55:55.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:55.498" endtime="20201112 09:55:55.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.494" endtime="20201112 09:55:55.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.485" endtime="20201112 09:55:55.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.968" endtime="20201112 09:55:55.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:54.967" endtime="20201112 09:55:55.524"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.547" endtime="20201112 09:55:55.570"></status>
</kw>
<msg timestamp="20201112 09:55:55.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:55.544" endtime="20201112 09:55:55.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:55.573" endtime="20201112 09:55:55.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.580" endtime="20201112 09:55:55.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.536" endtime="20201112 09:55:55.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.531" endtime="20201112 09:55:55.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.604" endtime="20201112 09:55:55.941"></status>
</kw>
<msg timestamp="20201112 09:55:55.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042759389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042851917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.600" endtime="20201112 09:55:55.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:55.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042759389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042851917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:55.951" endtime="20201112 09:55:55.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:55.970" endtime="20201112 09:55:55.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.593" endtime="20201112 09:55:55.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.588" endtime="20201112 09:55:55.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:55.990" level="INFO">${RESULT} = [{'time': 0.042851917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.252800000000144e-05, 'source_diff': 9.252800000000144e-05}, {'time': 0.042953944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:55.981" endtime="20201112 09:55:55.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:56.021" level="INFO">${ACCURACY} = {'diff': [9.252800000000144e-05, 9.291599999999844e-05, 9.265199999999862e-05, 9.280500000000136e-05, 9.319399999999783e-05, 9.267999999999776e-05, 9.284700000000007e-05, 9.252800000000144e-05, 9.2819...</msg>
<status status="PASS" starttime="20201112 09:55:55.992" endtime="20201112 09:55:56.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.032" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:55:56.030" endtime="20201112 09:55:56.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.038" level="INFO">VALUE: [9.252800000000144e-05, 9.291599999999844e-05, 9.265199999999862e-05, 9.280500000000136e-05, 9.319399999999783e-05, 9.267999999999776e-05, 9.284700000000007e-05, 9.252800000000144e-05, 9.281999999999346e-05, 9.291700000000486e-05, 9.266700000000461e-05, 9.256999999999321e-05, 9.306900000000118e-05, 9.294399999999758e-05, 9.306900000000118e-05, 9.290199999999887e-05, 9.248600000000273e-05, 9.276400000000212e-05, 9.306899999999424e-05, 9.28330000000005e-05, 9.305600000000108e-05, 9.245900000000307e-05, 9.334699999999363e-05, 9.330600000000133e-05, 9.330600000000133e-05, 9.248600000000273e-05, 9.312499999999946e-05, 9.284700000000007e-05, 9.322200000000391e-05, 9.301399999999543e-05, 9.290299999999835e-05, 9.280600000000083e-05, 9.295800000000409e-05, 9.305499999999467e-05, 9.236099999999914e-05, 9.292999999999801e-05, 9.293000000000495e-05, 9.313799999999955e-05, 9.317999999999826e-05, 9.323600000000348e-05, 9.3333000000001e-05, 9.25279999999945e-05, 9.319499999999731e-05, 9.28200000000004e-05, 9.280600000000083e-05, 9.269500000000375e-05, 9.291699999999792e-05, 9.280600000000083e-05, 9.277699999999528e-05, 9.290199999999887e-05]</msg>
<status status="PASS" starttime="20201112 09:55:56.034" endtime="20201112 09:55:56.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.023" endtime="20201112 09:55:56.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.047" endtime="20201112 09:55:56.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:56.056" endtime="20201112 09:55:56.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.051" endtime="20201112 09:55:56.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.043" endtime="20201112 09:55:56.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.526" endtime="20201112 09:55:56.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:55.525" endtime="20201112 09:55:56.082"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.105" endtime="20201112 09:55:56.127"></status>
</kw>
<msg timestamp="20201112 09:55:56.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:56.102" endtime="20201112 09:55:56.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:56.131" endtime="20201112 09:55:56.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.137" endtime="20201112 09:55:56.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.094" endtime="20201112 09:55:56.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.088" endtime="20201112 09:55:56.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.163" endtime="20201112 09:55:56.500"></status>
</kw>
<msg timestamp="20201112 09:55:56.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043243764, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:55:56.159" endtime="20201112 09:55:56.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043243764, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:55:56.509" endtime="20201112 09:55:56.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.529" endtime="20201112 09:55:56.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.151" endtime="20201112 09:55:56.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.146" endtime="20201112 09:55:56.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:56.548" level="INFO">${RESULT} = [{'time': 0.043243764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.376399999999618e-05, 'source_diff': 9.376399999999618e-05}, {'time': 0.043342778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:56.539" endtime="20201112 09:55:56.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:56.579" level="INFO">${ACCURACY} = {'diff': [9.376399999999618e-05, 9.422199999999797e-05, 9.361100000000039e-05, 9.3945000000005e-05, 9.38880000000003e-05, 9.342999999999851e-05, 9.351399999999593e-05, 9.395899999999763e-05, 9.3388999...</msg>
<status status="PASS" starttime="20201112 09:55:56.550" endtime="20201112 09:55:56.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.590" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:55:56.588" endtime="20201112 09:55:56.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.596" level="INFO">VALUE: [9.376399999999618e-05, 9.422199999999797e-05, 9.361100000000039e-05, 9.3945000000005e-05, 9.38880000000003e-05, 9.342999999999851e-05, 9.351399999999593e-05, 9.395899999999763e-05, 9.338899999999928e-05, 9.413900000000003e-05, 9.38200000000014e-05, 9.413900000000003e-05, 9.387500000000021e-05, 9.34859999999968e-05, 9.373699999999652e-05, 9.334800000000004e-05, 9.344399999999808e-05, 9.399999999999686e-05, 9.377800000000269e-05, 9.356900000000168e-05, 9.38059999999949e-05, 9.369399999999833e-05, 9.336100000000014e-05, 9.4027999999996e-05, 9.340299999999885e-05, 9.38880000000003e-05, 9.368099999999824e-05, 9.356899999999474e-05, 9.356900000000168e-05, 9.388899999999978e-05, 9.358300000000125e-05, 9.397200000000466e-05, 9.345800000000459e-05, 9.412500000000046e-05, 9.35000000000033e-05, 9.357000000000115e-05, 9.42079999999984e-05, 9.394399999999858e-05, 9.369399999999833e-05, 9.355499999999517e-05, 9.365199999999962e-05, 9.4333000000002e-05, 9.349999999999636e-05, 9.431900000000243e-05, 9.406999999999471e-05, 9.430600000000233e-05, 9.418099999999874e-05, 9.36529999999991e-05, 9.334800000000004e-05, 9.415200000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:55:56.592" endtime="20201112 09:55:56.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.581" endtime="20201112 09:55:56.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.605" endtime="20201112 09:55:56.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:56.614" endtime="20201112 09:55:56.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.609" endtime="20201112 09:55:56.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.601" endtime="20201112 09:55:56.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.084" endtime="20201112 09:55:56.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.083" endtime="20201112 09:55:56.640"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.663" endtime="20201112 09:55:56.685"></status>
</kw>
<msg timestamp="20201112 09:55:56.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:56.659" endtime="20201112 09:55:56.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:56.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:56.689" endtime="20201112 09:55:56.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.695" endtime="20201112 09:55:56.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.652" endtime="20201112 09:55:56.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.646" endtime="20201112 09:55:56.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:56.719" endtime="20201112 09:55:57.057"></status>
</kw>
<msg timestamp="20201112 09:55:57.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043143958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043238861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:56.716" endtime="20201112 09:55:57.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043143958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043238861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.067" endtime="20201112 09:55:57.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.086" endtime="20201112 09:55:57.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.708" endtime="20201112 09:55:57.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.703" endtime="20201112 09:55:57.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:57.107" level="INFO">${RESULT} = [{'time': 0.043238861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.490300000000035e-05, 'source_diff': 9.490300000000035e-05}, {'time': 0.043348861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:57.098" endtime="20201112 09:55:57.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:57.138" level="INFO">${ACCURACY} = {'diff': [9.490300000000035e-05, 9.522199999999897e-05, 9.473600000000498e-05, 9.437500000000071e-05, 9.486100000000164e-05, 9.523599999999854e-05, 9.49859999999983e-05, 9.447300000000464e-05, 9.46799...</msg>
<status status="PASS" starttime="20201112 09:55:57.110" endtime="20201112 09:55:57.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.149" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:55:57.147" endtime="20201112 09:55:57.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.155" level="INFO">VALUE: [9.490300000000035e-05, 9.522199999999897e-05, 9.473600000000498e-05, 9.437500000000071e-05, 9.486100000000164e-05, 9.523599999999854e-05, 9.49859999999983e-05, 9.447300000000464e-05, 9.467999999999976e-05, 9.487499999999427e-05, 9.470800000000584e-05, 9.441699999999942e-05, 9.469399999999933e-05, 9.475000000000455e-05, 9.483399999999503e-05, 9.438900000000028e-05, 9.4945000000006e-05, 9.470900000000532e-05, 9.472200000000541e-05, 9.440200000000037e-05, 9.444399999999908e-05, 9.50409999999971e-05, 9.473600000000498e-05, 9.527800000000419e-05, 9.436100000000114e-05, 9.47079999999989e-05, 9.511100000000189e-05, 9.506999999999571e-05, 9.519499999999931e-05, 9.438900000000028e-05, 9.505499999999667e-05, 9.518000000000026e-05, 9.519399999999983e-05, 9.451399999999693e-05, 9.494399999999958e-05, 9.475000000000455e-05, 9.511100000000189e-05, 9.523599999999854e-05, 9.44859999999978e-05, 9.533400000000247e-05, 9.454200000000301e-05, 9.527699999999778e-05, 9.499999999999786e-05, 9.486100000000164e-05, 9.511100000000189e-05, 9.495799999999915e-05, 9.505500000000361e-05, 9.436100000000114e-05, 9.502699999999753e-05, 9.504200000000351e-05]</msg>
<status status="PASS" starttime="20201112 09:55:57.152" endtime="20201112 09:55:57.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.140" endtime="20201112 09:55:57.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.165" endtime="20201112 09:55:57.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:57.174" endtime="20201112 09:55:57.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.169" endtime="20201112 09:55:57.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.160" endtime="20201112 09:55:57.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.642" endtime="20201112 09:55:57.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:56.641" endtime="20201112 09:55:57.201"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.224" endtime="20201112 09:55:57.246"></status>
</kw>
<msg timestamp="20201112 09:55:57.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:57.221" endtime="20201112 09:55:57.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:57.250" endtime="20201112 09:55:57.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.256" endtime="20201112 09:55:57.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.213" endtime="20201112 09:55:57.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.207" endtime="20201112 09:55:57.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.280" endtime="20201112 09:55:57.578"></status>
</kw>
<msg timestamp="20201112 09:55:57.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043317389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043412778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.277" endtime="20201112 09:55:57.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043317389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043412778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.582" endtime="20201112 09:55:57.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.591" endtime="20201112 09:55:57.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.269" endtime="20201112 09:55:57.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.265" endtime="20201112 09:55:57.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:57.600" level="INFO">${RESULT} = [{'time': 0.043412778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.538900000000128e-05, 'source_diff': 9.538900000000128e-05}, {'time': 0.043523778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:57.596" endtime="20201112 09:55:57.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:57.613" level="INFO">${ACCURACY} = {'diff': [9.538900000000128e-05, 9.6027999999998e-05, 9.544499999999956e-05, 9.561199999999492e-05, 9.549999999999836e-05, 9.573600000000598e-05, 9.611099999999595e-05, 9.593000000000101e-05, 9.627800...</msg>
<status status="PASS" starttime="20201112 09:55:57.601" endtime="20201112 09:55:57.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.619" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:55:57.618" endtime="20201112 09:55:57.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.621" level="INFO">VALUE: [9.538900000000128e-05, 9.6027999999998e-05, 9.544499999999956e-05, 9.561199999999492e-05, 9.549999999999836e-05, 9.573600000000598e-05, 9.611099999999595e-05, 9.593000000000101e-05, 9.627800000000519e-05, 9.569400000000033e-05, 9.586100000000264e-05, 9.609799999999585e-05, 9.595899999999963e-05, 9.60000000000058e-05, 9.545899999999913e-05, 9.599999999999886e-05, 9.631899999999749e-05, 9.555499999999717e-05, 9.576400000000512e-05, 9.631900000000443e-05, 9.619400000000083e-05, 9.56530000000011e-05, 9.593100000000049e-05, 9.569499999999981e-05, 9.613900000000203e-05, 9.558400000000272e-05, 9.556900000000368e-05, 9.59859999999993e-05, 9.552699999999803e-05, 9.626399999999868e-05, 9.555599999999664e-05, 9.58330000000035e-05, 9.612500000000246e-05, 9.56530000000011e-05, 9.548600000000573e-05, 9.555600000000358e-05, 9.565299999999416e-05, 9.61530000000016e-05, 9.595800000000015e-05, 9.624999999999911e-05, 9.601399999999843e-05, 9.55000000000053e-05, 9.58330000000035e-05, 9.573599999999904e-05, 9.580600000000383e-05, 9.555599999999664e-05, 9.54859999999988e-05, 9.533400000000247e-05, 9.604100000000504e-05, 9.561100000000239e-05]</msg>
<status status="PASS" starttime="20201112 09:55:57.620" endtime="20201112 09:55:57.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.614" endtime="20201112 09:55:57.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.626" endtime="20201112 09:55:57.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:57.630" endtime="20201112 09:55:57.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.628" endtime="20201112 09:55:57.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.624" endtime="20201112 09:55:57.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.203" endtime="20201112 09:55:57.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.202" endtime="20201112 09:55:57.652"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.662" endtime="20201112 09:55:57.683"></status>
</kw>
<msg timestamp="20201112 09:55:57.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:57.661" endtime="20201112 09:55:57.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:57.684" endtime="20201112 09:55:57.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.687" endtime="20201112 09:55:57.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.657" endtime="20201112 09:55:57.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.655" endtime="20201112 09:55:57.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.698" endtime="20201112 09:55:57.984"></status>
</kw>
<msg timestamp="20201112 09:55:57.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025493083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025590236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.697" endtime="20201112 09:55:57.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:57.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025493083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025590236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:57.988" endtime="20201112 09:55:57.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:57.996" endtime="20201112 09:55:57.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.693" endtime="20201112 09:55:58.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.691" endtime="20201112 09:55:58.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:58.006" level="INFO">${RESULT} = [{'time': 0.025590236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.715299999999913e-05, 'source_diff': 9.715299999999913e-05}, {'time': 0.025694236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:58.002" endtime="20201112 09:55:58.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:58.019" level="INFO">${ACCURACY} = {'diff': [9.715299999999913e-05, 9.654199999999807e-05, 9.698599999999682e-05, 9.713899999999956e-05, 9.712499999999999e-05, 9.652800000000197e-05, 9.643100000000099e-05, 9.676400000000265e-05, 9.7138...</msg>
<status status="PASS" starttime="20201112 09:55:58.007" endtime="20201112 09:55:58.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.025" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:55:58.024" endtime="20201112 09:55:58.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.027" level="INFO">VALUE: [9.715299999999913e-05, 9.654199999999807e-05, 9.698599999999682e-05, 9.713899999999956e-05, 9.712499999999999e-05, 9.652800000000197e-05, 9.643100000000099e-05, 9.676400000000265e-05, 9.713800000000009e-05, 9.679100000000232e-05, 9.69860000000003e-05, 9.673600000000004e-05, 9.686100000000017e-05, 9.713900000000303e-05, 9.726399999999968e-05, 9.668099999999777e-05, 9.723600000000054e-05, 9.681899999999799e-05, 9.723600000000054e-05, 9.693000000000201e-05, 9.695800000000115e-05, 9.687499999999974e-05, 9.705499999999867e-05, 9.64859999999998e-05, 9.682000000000093e-05, 9.723600000000054e-05, 9.69860000000003e-05, 9.66530000000021e-05, 9.709700000000085e-05, 9.656900000000121e-05, 9.69860000000003e-05, 9.708299999999781e-05, 9.715299999999913e-05, 9.726400000000315e-05, 9.688900000000278e-05, 9.659700000000035e-05, 9.707000000000118e-05, 9.669500000000081e-05, 9.691599999999898e-05, 9.673699999999952e-05, 9.654200000000154e-05, 9.720799999999793e-05, 9.644399999999761e-05, 9.687499999999974e-05, 9.691700000000192e-05, 9.676399999999918e-05, 9.713800000000009e-05, 9.694500000000106e-05, 9.661099999999992e-05, 9.727800000000272e-05]</msg>
<status status="PASS" starttime="20201112 09:55:58.026" endtime="20201112 09:55:58.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.020" endtime="20201112 09:55:58.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.032" endtime="20201112 09:55:58.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:58.036" endtime="20201112 09:55:58.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.034" endtime="20201112 09:55:58.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.030" endtime="20201112 09:55:58.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.653" endtime="20201112 09:55:58.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:57.652" endtime="20201112 09:55:58.057"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.068" endtime="20201112 09:55:58.088"></status>
</kw>
<msg timestamp="20201112 09:55:58.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:58.067" endtime="20201112 09:55:58.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:58.089" endtime="20201112 09:55:58.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.092" endtime="20201112 09:55:58.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.063" endtime="20201112 09:55:58.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.060" endtime="20201112 09:55:58.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.103" endtime="20201112 09:55:58.409"></status>
</kw>
<msg timestamp="20201112 09:55:58.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024957542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.102" endtime="20201112 09:55:58.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024957542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.419" endtime="20201112 09:55:58.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.438" endtime="20201112 09:55:58.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.098" endtime="20201112 09:55:58.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.096" endtime="20201112 09:55:58.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:58.458" level="INFO">${RESULT} = [{'time': 0.025055333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.779099999999985e-05, 'source_diff': 9.779099999999985e-05}, {'time': 0.025163333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:58.449" endtime="20201112 09:55:58.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:58.489" level="INFO">${ACCURACY} = {'diff': [9.779099999999985e-05, 9.784699999999813e-05, 9.813900000000056e-05, 9.797200000000172e-05, 9.836100000000167e-05, 9.819500000000231e-05, 9.806999999999871e-05, 9.783300000000203e-05, 9.8222...</msg>
<status status="PASS" starttime="20201112 09:55:58.460" endtime="20201112 09:55:58.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.500" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:55:58.498" endtime="20201112 09:55:58.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.505" level="INFO">VALUE: [9.779099999999985e-05, 9.784699999999813e-05, 9.813900000000056e-05, 9.797200000000172e-05, 9.836100000000167e-05, 9.819500000000231e-05, 9.806999999999871e-05, 9.783300000000203e-05, 9.822299999999798e-05, 9.78479999999976e-05, 9.752700000000003e-05, 9.794399999999912e-05, 9.808299999999881e-05, 9.756900000000221e-05, 9.737500000000024e-05, 9.790299999999988e-05, 9.740299999999938e-05, 9.736100000000067e-05, 9.7721999999998e-05, 9.801399999999696e-05, 9.800000000000086e-05, 9.748599999999732e-05, 9.811100000000142e-05, 9.813900000000056e-05, 9.81799999999998e-05, 9.748599999999732e-05, 9.78059999999989e-05, 9.755600000000211e-05, 9.779099999999985e-05, 9.745900000000113e-05, 9.768100000000224e-05, 9.741599999999948e-05, 9.829100000000035e-05, 9.765299999999963e-05, 9.794499999999859e-05, 9.827800000000025e-05, 9.788900000000031e-05, 9.823600000000154e-05, 9.750000000000036e-05, 9.813899999999709e-05, 9.818099999999927e-05, 9.773699999999705e-05, 9.826300000000121e-05, 9.792999999999955e-05, 9.823599999999807e-05, 9.74860000000008e-05, 9.79860000000013e-05, 9.823599999999807e-05, 9.790299999999988e-05, 9.804199999999957e-05]</msg>
<status status="PASS" starttime="20201112 09:55:58.502" endtime="20201112 09:55:58.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.491" endtime="20201112 09:55:58.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.515" endtime="20201112 09:55:58.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:58.524" endtime="20201112 09:55:58.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.519" endtime="20201112 09:55:58.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.511" endtime="20201112 09:55:58.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.058" endtime="20201112 09:55:58.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.058" endtime="20201112 09:55:58.550"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.573" endtime="20201112 09:55:58.596"></status>
</kw>
<msg timestamp="20201112 09:55:58.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:58.570" endtime="20201112 09:55:58.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:58.599" endtime="20201112 09:55:58.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.606" endtime="20201112 09:55:58.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.563" endtime="20201112 09:55:58.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.557" endtime="20201112 09:55:58.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.630" endtime="20201112 09:55:58.967"></status>
</kw>
<msg timestamp="20201112 09:55:58.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043182333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043280972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.626" endtime="20201112 09:55:58.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:58.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043182333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043280972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:58.977" endtime="20201112 09:55:58.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:58.996" endtime="20201112 09:55:59.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.619" endtime="20201112 09:55:59.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.614" endtime="20201112 09:55:59.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:59.017" level="INFO">${RESULT} = [{'time': 0.043280972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.863899999999759e-05, 'source_diff': 9.863899999999759e-05}, {'time': 0.043384972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:59.008" endtime="20201112 09:55:59.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:59.048" level="INFO">${ACCURACY} = {'diff': [9.863899999999759e-05, 9.88609999999987e-05, 9.894400000000358e-05, 9.931999999999996e-05, 9.85280000000005e-05, 9.926400000000168e-05, 9.837500000000471e-05, 9.869499999999587e-05, 9.847300...</msg>
<status status="PASS" starttime="20201112 09:55:59.019" endtime="20201112 09:55:59.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.059" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:55:59.057" endtime="20201112 09:55:59.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.065" level="INFO">VALUE: [9.863899999999759e-05, 9.88609999999987e-05, 9.894400000000358e-05, 9.931999999999996e-05, 9.85280000000005e-05, 9.926400000000168e-05, 9.837500000000471e-05, 9.869499999999587e-05, 9.84730000000017e-05, 9.847199999999529e-05, 9.85410000000006e-05, 9.911100000000589e-05, 9.927800000000125e-05, 9.888900000000478e-05, 9.898599999999536e-05, 9.931999999999996e-05, 9.85280000000005e-05, 9.88609999999987e-05, 9.89730000000022e-05, 9.92080000000034e-05, 9.866599999999726e-05, 9.887500000000521e-05, 9.838899999999734e-05, 9.9028000000001e-05, 9.866699999999673e-05, 9.88059999999999e-05, 9.922199999999604e-05, 9.89860000000023e-05, 9.88059999999999e-05, 9.85280000000005e-05, 9.876400000000118e-05, 9.89159999999975e-05, 9.925000000000211e-05, 9.83609999999982e-05, 9.894399999999665e-05, 9.897200000000272e-05, 9.894500000000306e-05, 9.840300000000385e-05, 9.883399999999903e-05, 9.908399999999928e-05, 9.851400000000093e-05, 9.879200000000032e-05, 9.88880000000053e-05, 9.850000000000136e-05, 9.841700000000342e-05, 9.89860000000023e-05, 9.847200000000222e-05, 9.897199999999579e-05, 9.870799999999597e-05, 9.83479999999981e-05]</msg>
<status status="PASS" starttime="20201112 09:55:59.062" endtime="20201112 09:55:59.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.050" endtime="20201112 09:55:59.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.075" endtime="20201112 09:55:59.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:59.083" endtime="20201112 09:55:59.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.079" endtime="20201112 09:55:59.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.070" endtime="20201112 09:55:59.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.552" endtime="20201112 09:55:59.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:58.551" endtime="20201112 09:55:59.109"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.133" endtime="20201112 09:55:59.155"></status>
</kw>
<msg timestamp="20201112 09:55:59.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:59.129" endtime="20201112 09:55:59.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:59.159" endtime="20201112 09:55:59.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.165" endtime="20201112 09:55:59.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.122" endtime="20201112 09:55:59.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.116" endtime="20201112 09:55:59.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.189" endtime="20201112 09:55:59.528"></status>
</kw>
<msg timestamp="20201112 09:55:59.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043562431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043662056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:59.186" endtime="20201112 09:55:59.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043562431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043662056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:59.537" endtime="20201112 09:55:59.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.556" endtime="20201112 09:55:59.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.178" endtime="20201112 09:55:59.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.174" endtime="20201112 09:55:59.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:55:59.576" level="INFO">${RESULT} = [{'time': 0.043662056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.962499999999902e-05, 'source_diff': 9.962499999999902e-05}, {'time': 0.043770069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:55:59.567" endtime="20201112 09:55:59.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:55:59.607" level="INFO">${ACCURACY} = {'diff': [9.962499999999902e-05, 9.972200000000347e-05, 9.93609999999992e-05, 0.00010006900000000124, 9.95410000000016e-05, 0.000100028000000002, 0.00010009700000000038, 9.982000000000046e-05, 0.00010...</msg>
<status status="PASS" starttime="20201112 09:55:59.578" endtime="20201112 09:55:59.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.618" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:55:59.615" endtime="20201112 09:55:59.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.623" level="INFO">VALUE: [9.962499999999902e-05, 9.972200000000347e-05, 9.93609999999992e-05, 0.00010006900000000124, 9.95410000000016e-05, 0.000100028000000002, 0.00010009700000000038, 9.982000000000046e-05, 0.00010011099999999995, 0.00010015299999999866, 0.00010004200000000157, 9.990199999999894e-05, 9.947200000000322e-05, 0.00010033300000000106, 0.00010011099999999995, 9.957000000000021e-05, 0.0001000139999999955, 0.0001001809999999978, 0.00010016699999999823, 0.00010031900000000149, 0.00010032000000000096, 0.00010016599999999876, 9.956900000000074e-05, 9.98609999999997e-05, 0.00010029200000000182, 0.0001000139999999955, 9.997200000000372e-05, 9.975000000000261e-05, 9.972199999999654e-05, 9.994499999999712e-05, 9.969500000000381e-05, 9.957000000000021e-05, 9.98479999999996e-05, 0.00010002700000000253, 9.975000000000261e-05, 9.983299999999362e-05, 0.00010002799999999507, 9.99860000000033e-05, 9.93609999999992e-05, 0.00010032000000000096, 9.941600000000494e-05, 9.943099999999705e-05, 9.945799999999672e-05, 9.956900000000074e-05, 9.972199999999654e-05, 9.959699999999988e-05, 0.00010037499999999977, 9.988899999999884e-05, 0.00010013799999999962, 9.97359999999961e-05]</msg>
<status status="PASS" starttime="20201112 09:55:59.620" endtime="20201112 09:55:59.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.608" endtime="20201112 09:55:59.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.641" endtime="20201112 09:55:59.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:55:59.650" endtime="20201112 09:55:59.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.645" endtime="20201112 09:55:59.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.637" endtime="20201112 09:55:59.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.111" endtime="20201112 09:55:59.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.110" endtime="20201112 09:55:59.676"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.699" endtime="20201112 09:55:59.722"></status>
</kw>
<msg timestamp="20201112 09:55:59.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:59.696" endtime="20201112 09:55:59.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:55:59.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:55:59.725" endtime="20201112 09:55:59.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.731" endtime="20201112 09:55:59.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.688" endtime="20201112 09:55:59.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.682" endtime="20201112 09:55:59.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:55:59.755" endtime="20201112 09:56:00.094"></status>
</kw>
<msg timestamp="20201112 09:56:00.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042691139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042791514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:55:59.752" endtime="20201112 09:56:00.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042691139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042791514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.104" endtime="20201112 09:56:00.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.123" endtime="20201112 09:56:00.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.744" endtime="20201112 09:56:00.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.740" endtime="20201112 09:56:00.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:00.142" level="INFO">${RESULT} = [{'time': 0.042791514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010037499999999977, 'source_diff': 0.00010037499999999977}, {'time': 0.042899569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:00.133" endtime="20201112 09:56:00.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:00.172" level="INFO">${ACCURACY} = {'diff': [0.00010037499999999977, 0.00010081899999999505, 0.00010072299999999701, 0.00010116699999999923, 0.0001009730000000042, 0.00010108300000000181, 0.00010070799999999797, 0.00010083300000000156,...</msg>
<status status="PASS" starttime="20201112 09:56:00.144" endtime="20201112 09:56:00.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.183" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:56:00.181" endtime="20201112 09:56:00.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.189" level="INFO">VALUE: [0.00010037499999999977, 0.00010081899999999505, 0.00010072299999999701, 0.00010116699999999923, 0.0001009730000000042, 0.00010108300000000181, 0.00010070799999999797, 0.00010083300000000156, 0.00010113900000000009, 0.00010088899999999984, 0.00010087500000000027, 0.00010112500000000052, 0.0001011809999999988, 0.00010069500000000481, 0.00010069499999999787, 0.00010052700000000303, 0.0001010689999999953, 0.00010126399999999675, 0.00010105499999999573, 0.00010054200000000207, 0.0001003610000000002, 0.00010093000000000601, 0.00010102799999999607, 0.0001003610000000002, 0.0001009730000000042, 0.00010043099999999805, 0.00010115200000000019, 0.00010056900000000174, 0.00010115299999999966, 0.00010100000000000386, 0.00010127800000000325, 0.00010120799999999847, 0.00010129200000000282, 0.00010127800000000325, 0.00010082000000000146, 0.00010057000000000121, 0.00010084699999999419, 0.0001012359999999976, 0.00010062500000000002, 0.0001006939999999984, 0.00010091699999999898, 0.0001003610000000002, 0.00010119499999999837, 0.00010083400000000103, 0.00010112500000000052, 0.00010063899999999959, 0.00010105600000000214, 0.00010077700000000328, 0.00010045800000000465, 0.00010117999999999933]</msg>
<status status="PASS" starttime="20201112 09:56:00.186" endtime="20201112 09:56:00.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.174" endtime="20201112 09:56:00.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.199" endtime="20201112 09:56:00.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:00.207" endtime="20201112 09:56:00.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.203" endtime="20201112 09:56:00.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.194" endtime="20201112 09:56:00.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.678" endtime="20201112 09:56:00.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:59.677" endtime="20201112 09:56:00.233"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.257" endtime="20201112 09:56:00.281"></status>
</kw>
<msg timestamp="20201112 09:56:00.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:00.253" endtime="20201112 09:56:00.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:00.284" endtime="20201112 09:56:00.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.291" endtime="20201112 09:56:00.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.245" endtime="20201112 09:56:00.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.240" endtime="20201112 09:56:00.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.315" endtime="20201112 09:56:00.653"></status>
</kw>
<msg timestamp="20201112 09:56:00.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043798111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043900417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.311" endtime="20201112 09:56:00.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043798111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043900417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.663" endtime="20201112 09:56:00.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.681" endtime="20201112 09:56:00.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.304" endtime="20201112 09:56:00.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.299" endtime="20201112 09:56:00.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:00.700" level="INFO">${RESULT} = [{'time': 0.043900417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010230599999999646, 'source_diff': 0.00010230599999999646}, {'time': 0.044014431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:00.691" endtime="20201112 09:56:00.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:00.731" level="INFO">${ACCURACY} = {'diff': [0.00010230599999999646, 0.0001013480000000011, 0.00010230499999999698, 0.00010230499999999698, 0.00010177799999999682, 0.00010148599999999786, 0.00010173600000000504, 0.00010198599999999836,...</msg>
<status status="PASS" starttime="20201112 09:56:00.702" endtime="20201112 09:56:00.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.742" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:56:00.740" endtime="20201112 09:56:00.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.747" level="INFO">VALUE: [0.00010230599999999646, 0.0001013480000000011, 0.00010230499999999698, 0.00010230499999999698, 0.00010177799999999682, 0.00010148599999999786, 0.00010173600000000504, 0.00010198599999999836, 0.00010195900000000563, 0.00010220899999999894, 0.00010194499999999912, 0.00010144500000000556, 0.00010197199999999879, 0.00010144399999999915, 0.00010147199999999829, 0.00010208299999999587, 0.00010204200000000357, 0.00010195799999999922, 0.00010202799999999707, 0.00010197200000000572, 0.00010143100000000599, 0.00010136200000000067, 0.00010165200000000069, 0.00010181899999999605, 0.00010176400000000418, 0.00010176399999999725, 0.00010169400000000633, 0.0001023060000000034, 0.00010197199999999879, 0.00010208400000000228, 0.00010193099999999955, 0.00010231900000000349, 0.00010208300000000281, 0.00010187500000000127, 0.00010161100000000145, 0.00010231900000000349, 0.00010142999999999958, 0.00010224999999999818, 0.00010143099999999905, 0.00010154200000000307, 0.00010215300000000066, 0.00010158399999999485, 0.00010165300000000016, 0.00010198599999999836, 0.00010163799999999418, 0.00010184699999999519, 0.00010213900000000109, 0.0001022359999999986, 0.0001015280000000035, 0.00010162500000000102]</msg>
<status status="PASS" starttime="20201112 09:56:00.744" endtime="20201112 09:56:00.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.733" endtime="20201112 09:56:00.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.757" endtime="20201112 09:56:00.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:00.766" endtime="20201112 09:56:00.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.761" endtime="20201112 09:56:00.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.753" endtime="20201112 09:56:00.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.235" endtime="20201112 09:56:00.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.234" endtime="20201112 09:56:00.792"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.815" endtime="20201112 09:56:00.838"></status>
</kw>
<msg timestamp="20201112 09:56:00.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:00.811" endtime="20201112 09:56:00.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:00.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:00.841" endtime="20201112 09:56:00.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.848" endtime="20201112 09:56:00.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.804" endtime="20201112 09:56:00.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.798" endtime="20201112 09:56:00.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:00.872" endtime="20201112 09:56:01.209"></status>
</kw>
<msg timestamp="20201112 09:56:01.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042672167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042775236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:00.868" endtime="20201112 09:56:01.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042672167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042775236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.218" endtime="20201112 09:56:01.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.237" endtime="20201112 09:56:01.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.861" endtime="20201112 09:56:01.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.856" endtime="20201112 09:56:01.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:01.258" level="INFO">${RESULT} = [{'time': 0.042775236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010306900000000424, 'source_diff': 0.00010306900000000424}, {'time': 0.042886236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:01.249" endtime="20201112 09:56:01.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:01.289" level="INFO">${ACCURACY} = {'diff': [0.00010306900000000424, 0.00010309700000000338, 0.00010270799999999997, 0.00010272199999999954, 0.00010290200000000194, 0.00010237500000000177, 0.00010247199999999929, 0.00010293099999999361...</msg>
<status status="PASS" starttime="20201112 09:56:01.261" endtime="20201112 09:56:01.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.301" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:56:01.298" endtime="20201112 09:56:01.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.306" level="INFO">VALUE: [0.00010306900000000424, 0.00010309700000000338, 0.00010270799999999997, 0.00010272199999999954, 0.00010290200000000194, 0.00010237500000000177, 0.00010247199999999929, 0.00010293099999999361, 0.00010270799999999997, 0.00010324999999999918, 0.00010309800000000285, 0.00010279200000000432, 0.00010245799999999972, 0.00010279199999999739, 0.00010313900000000209, 0.0001030559999999972, 0.00010259699999999594, 0.00010255600000000364, 0.00010315199999999525, 0.00010262500000000202, 0.00010304199999999764, 0.0001031940000000009, 0.00010270799999999997, 0.0001023610000000022, 0.00010334699999999669, 0.0001025280000000045, 0.0001023339999999956, 0.00010269499999999987, 0.00010324999999999918, 0.00010263900000000159, 0.0001030689999999973, 0.00010284700000000313, 0.0001032359999999996, 0.00010286099999999576, 0.00010259700000000288, 0.00010261099999999551, 0.00010234799999999517, 0.00010238900000000134, 0.00010247299999999876, 0.00010266600000000126, 0.00010334699999999669, 0.00010275000000000561, 0.00010277799999999782, 0.00010266700000000073, 0.0001025559999999967, 0.00010309699999999644, 0.00010240299999999397, 0.00010269499999999987, 0.00010327800000000525, 0.00010265200000000169]</msg>
<status status="PASS" starttime="20201112 09:56:01.303" endtime="20201112 09:56:01.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.291" endtime="20201112 09:56:01.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.317" endtime="20201112 09:56:01.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:01.325" endtime="20201112 09:56:01.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.321" endtime="20201112 09:56:01.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.312" endtime="20201112 09:56:01.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.794" endtime="20201112 09:56:01.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:00.792" endtime="20201112 09:56:01.351"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.375" endtime="20201112 09:56:01.397"></status>
</kw>
<msg timestamp="20201112 09:56:01.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:01.371" endtime="20201112 09:56:01.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:01.401" endtime="20201112 09:56:01.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.407" endtime="20201112 09:56:01.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.364" endtime="20201112 09:56:01.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.358" endtime="20201112 09:56:01.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.431" endtime="20201112 09:56:01.729"></status>
</kw>
<msg timestamp="20201112 09:56:01.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042705986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042809569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.427" endtime="20201112 09:56:01.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042705986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042809569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.739" endtime="20201112 09:56:01.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.759" endtime="20201112 09:56:01.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.420" endtime="20201112 09:56:01.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.415" endtime="20201112 09:56:01.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:01.779" level="INFO">${RESULT} = [{'time': 0.042809569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010358299999999737, 'source_diff': 0.00010358299999999737}, {'time': 0.042916583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:01.770" endtime="20201112 09:56:01.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:01.811" level="INFO">${ACCURACY} = {'diff': [0.00010358299999999737, 0.000103513999999999, 0.0001042360000000006, 0.00010348599999999986, 0.00010362499999999608, 0.00010362500000000302, 0.00010398600000000036, 0.00010354199999999814, 0...</msg>
<status status="PASS" starttime="20201112 09:56:01.782" endtime="20201112 09:56:01.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.823" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:56:01.821" endtime="20201112 09:56:01.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.829" level="INFO">VALUE: [0.00010358299999999737, 0.000103513999999999, 0.0001042360000000006, 0.00010348599999999986, 0.00010362499999999608, 0.00010362500000000302, 0.00010398600000000036, 0.00010354199999999814, 0.0001043339999999976, 0.0001042360000000006, 0.00010431899999999855, 0.00010419399999999496, 0.00010377799999999882, 0.00010337499999999583, 0.00010372200000000054, 0.00010344400000000115, 0.00010356999999999728, 0.00010369500000000087, 0.00010356999999999728, 0.00010411099999999701, 0.00010373699999999958, 0.00010352699999999909, 0.00010373599999999317, 0.00010348599999999986, 0.00010430499999999898, 0.00010416699999999529, 0.00010395800000000122, 0.00010379200000000532, 0.00010382000000000446, 0.00010415300000000266, 0.00010344500000000062, 0.00010415199999999625, 0.0001036940000000014, 0.00010370800000000097, 0.00010386099999999676, 0.000103513999999999, 0.00010427799999999932, 0.00010358299999999737, 0.00010370900000000044, 0.00010408400000000428, 0.0001037360000000001, 0.00010386099999999676, 0.000103901999999996, 0.00010433299999999812, 0.0001040139999999995, 0.00010416700000000223, 0.00010349999999999943, 0.00010397300000000026, 0.00010390299999999547, 0.00010369500000000087]</msg>
<status status="PASS" starttime="20201112 09:56:01.826" endtime="20201112 09:56:01.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.813" endtime="20201112 09:56:01.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.839" endtime="20201112 09:56:01.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:01.848" endtime="20201112 09:56:01.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.844" endtime="20201112 09:56:01.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.834" endtime="20201112 09:56:01.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.354" endtime="20201112 09:56:01.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.352" endtime="20201112 09:56:01.875"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.900" endtime="20201112 09:56:01.924"></status>
</kw>
<msg timestamp="20201112 09:56:01.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:01.896" endtime="20201112 09:56:01.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:01.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:01.927" endtime="20201112 09:56:01.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.934" endtime="20201112 09:56:01.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.888" endtime="20201112 09:56:01.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.882" endtime="20201112 09:56:01.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:01.959" endtime="20201112 09:56:02.315"></status>
</kw>
<msg timestamp="20201112 09:56:02.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044806083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044911056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:01.956" endtime="20201112 09:56:02.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044806083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044911056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:02.329" endtime="20201112 09:56:02.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.348" endtime="20201112 09:56:02.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.948" endtime="20201112 09:56:02.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.943" endtime="20201112 09:56:02.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:02.368" level="INFO">${RESULT} = [{'time': 0.044911056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010497300000000126, 'source_diff': 0.00010497300000000126}, {'time': 0.045025056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:02.359" endtime="20201112 09:56:02.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:02.398" level="INFO">${ACCURACY} = {'diff': [0.00010497300000000126, 0.00010469500000000187, 0.00010469399999999546, 0.0001048889999999969, 0.00010493000000000308, 0.00010463899999999665, 0.0001050689999999993, 0.00010440300000000291, ...</msg>
<status status="PASS" starttime="20201112 09:56:02.370" endtime="20201112 09:56:02.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.409" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:56:02.407" endtime="20201112 09:56:02.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.415" level="INFO">VALUE: [0.00010497300000000126, 0.00010469500000000187, 0.00010469399999999546, 0.0001048889999999969, 0.00010493000000000308, 0.00010463899999999665, 0.0001050689999999993, 0.00010440300000000291, 0.00010519499999999543, 0.00010456999999999828, 0.00010465300000000316, 0.0001045559999999987, 0.0001050689999999993, 0.00010470800000000197, 0.00010462499999999708, 0.00010493000000000308, 0.00010511099999999801, 0.00010454199999999914, 0.00010526400000000075, 0.00010497200000000179, 0.00010458399999999785, 0.00010475000000000068, 0.00010441599999999607, 0.00010536099999999826, 0.00010527700000000084, 0.00010481900000000599, 0.00010484700000000513, 0.00010443100000000205, 0.0001047360000000011, 0.00010501399999999356, 0.00010448600000000086, 0.00010479199999999939, 0.00010455499999999923, 0.00010473599999999417, 0.0001049160000000035, 0.00010484700000000513, 0.00010450000000000043, 0.00010466700000000273, 0.0001045559999999987, 0.0001043889999999964, 0.00010527800000000032, 0.0001048610000000047, 0.00010484700000000513, 0.00010500000000000093, 0.00010477700000000034, 0.00010440299999999597, 0.00010491700000000298, 0.00010495800000000222, 0.00010513899999999715, 0.0001050140000000005]</msg>
<status status="PASS" starttime="20201112 09:56:02.411" endtime="20201112 09:56:02.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.400" endtime="20201112 09:56:02.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.424" endtime="20201112 09:56:02.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:02.433" endtime="20201112 09:56:02.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.428" endtime="20201112 09:56:02.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.420" endtime="20201112 09:56:02.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.877" endtime="20201112 09:56:02.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:01.876" endtime="20201112 09:56:02.459"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.482" endtime="20201112 09:56:02.505"></status>
</kw>
<msg timestamp="20201112 09:56:02.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:02.479" endtime="20201112 09:56:02.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:02.508" endtime="20201112 09:56:02.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.515" endtime="20201112 09:56:02.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.471" endtime="20201112 09:56:02.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.465" endtime="20201112 09:56:02.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.538" endtime="20201112 09:56:02.877"></status>
</kw>
<msg timestamp="20201112 09:56:02.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043187431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:02.535" endtime="20201112 09:56:02.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043081681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043187431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:02.886" endtime="20201112 09:56:02.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.905" endtime="20201112 09:56:02.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.528" endtime="20201112 09:56:02.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.523" endtime="20201112 09:56:02.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:02.924" level="INFO">${RESULT} = [{'time': 0.043187431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010575000000000168, 'source_diff': 0.00010575000000000168}, {'time': 0.043299444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:02.915" endtime="20201112 09:56:02.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:02.954" level="INFO">${ACCURACY} = {'diff': [0.00010575000000000168, 0.0001054019999999975, 0.0001060690000000003, 0.00010604200000000064, 0.00010547200000000229, 0.0001055689999999998, 0.00010608299999999987, 0.00010602799999999413, 0...</msg>
<status status="PASS" starttime="20201112 09:56:02.926" endtime="20201112 09:56:02.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.965" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:56:02.963" endtime="20201112 09:56:02.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:02.971" level="INFO">VALUE: [0.00010575000000000168, 0.0001054019999999975, 0.0001060690000000003, 0.00010604200000000064, 0.00010547200000000229, 0.0001055689999999998, 0.00010608299999999987, 0.00010602799999999413, 0.00010569499999999593, 0.0001057360000000021, 0.0001058480000000056, 0.0001054019999999975, 0.00010573599999999517, 0.00010616699999999729, 0.00010537499999999783, 0.00010631899999999361, 0.0001056810000000033, 0.00010548600000000186, 0.0001058889999999979, 0.0001053610000000052, 0.00010606999999999978, 0.00010631900000000055, 0.00010630500000000098, 0.00010613899999999815, 0.0001055559999999997, 0.00010572200000000254, 0.00010548600000000186, 0.00010534700000000563, 0.00010534699999999869, 0.00010537500000000477, 0.00010606999999999978, 0.00010592999999999714, 0.00010542999999999664, 0.00010625000000000218, 0.00010604099999999422, 0.00010626399999999481, 0.00010565300000000416, 0.00010561099999999851, 0.00010629100000000141, 0.0001057360000000021, 0.00010623700000000208, 0.00010604100000000116, 0.00010561099999999851, 0.00010550000000000143, 0.00010550000000000143, 0.00010554200000000014, 0.00010618099999999686, 0.00010590299999999747, 0.00010632000000000003, 0.00010604200000000064]</msg>
<status status="PASS" starttime="20201112 09:56:02.968" endtime="20201112 09:56:02.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.956" endtime="20201112 09:56:02.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:02.981" endtime="20201112 09:56:02.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:02.989" endtime="20201112 09:56:03.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.985" endtime="20201112 09:56:03.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.976" endtime="20201112 09:56:03.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.461" endtime="20201112 09:56:03.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:02.460" endtime="20201112 09:56:03.015"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.038" endtime="20201112 09:56:03.061"></status>
</kw>
<msg timestamp="20201112 09:56:03.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:03.035" endtime="20201112 09:56:03.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:03.065" endtime="20201112 09:56:03.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.071" endtime="20201112 09:56:03.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.028" endtime="20201112 09:56:03.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.022" endtime="20201112 09:56:03.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.095" endtime="20201112 09:56:03.435"></status>
</kw>
<msg timestamp="20201112 09:56:03.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0430885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:03.092" endtime="20201112 09:56:03.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0430885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:56:03.444" endtime="20201112 09:56:03.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.463" endtime="20201112 09:56:03.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.084" endtime="20201112 09:56:03.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.079" endtime="20201112 09:56:03.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:03.484" level="INFO">${RESULT} = [{'time': 0.0430885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010686099999999976, 'source_diff': 0.00010686099999999976}, {'time': 0.043198458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:03.475" endtime="20201112 09:56:03.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:03.514" level="INFO">${ACCURACY} = {'diff': [0.00010686099999999976, 0.00010652700000000209, 0.00010698699999999589, 0.00010640299999999797, 0.00010734700000000069, 0.00010634699999999969, 0.00010694499999999718, 0.00010634799999999917...</msg>
<status status="PASS" starttime="20201112 09:56:03.486" endtime="20201112 09:56:03.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.525" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:56:03.523" endtime="20201112 09:56:03.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.531" level="INFO">VALUE: [0.00010686099999999976, 0.00010652700000000209, 0.00010698699999999589, 0.00010640299999999797, 0.00010734700000000069, 0.00010634699999999969, 0.00010694499999999718, 0.00010634799999999917, 0.00010711200000000642, 0.00010647300000000276, 0.00010693000000000508, 0.00010693000000000508, 0.00010670799999999703, 0.00010648599999999592, 0.00010675000000000268, 0.00010680600000000096, 0.00010695899999999675, 0.00010652800000000157, 0.00010669500000000387, 0.00010668099999999736, 0.00010717999999999839, 0.00010698600000000336, 0.0001072219999999971, 0.00010644399999999721, 0.00010670799999999703, 0.00010680600000000096, 0.00010669499999999693, 0.00010657000000000028, 0.00010679099999999497, 0.00010658399999999985, 0.00010648600000000286, 0.00010650000000000243, 0.00010666699999999779, 0.00010672200000000354, 0.00010668099999999736, 0.00010682000000000053, 0.00010663900000000559, 0.00010654200000000114, 0.00010676400000000225, 0.00010659700000000688, 0.00010655500000000123, 0.00010698599999999642, 0.00010667999999999789, 0.0001066940000000044, 0.00010669399999999746, 0.00010681900000000105, 0.00010656999999999334, 0.00010713799999999968, 0.00010637499999999883, 0.00010636099999999926]</msg>
<status status="PASS" starttime="20201112 09:56:03.528" endtime="20201112 09:56:03.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.516" endtime="20201112 09:56:03.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.541" endtime="20201112 09:56:03.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:03.549" endtime="20201112 09:56:03.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.545" endtime="20201112 09:56:03.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.536" endtime="20201112 09:56:03.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.017" endtime="20201112 09:56:03.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.016" endtime="20201112 09:56:03.575"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.598" endtime="20201112 09:56:03.621"></status>
</kw>
<msg timestamp="20201112 09:56:03.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:03.595" endtime="20201112 09:56:03.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:03.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:03.625" endtime="20201112 09:56:03.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.631" endtime="20201112 09:56:03.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.587" endtime="20201112 09:56:03.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.582" endtime="20201112 09:56:03.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:03.655" endtime="20201112 09:56:03.995"></status>
</kw>
<msg timestamp="20201112 09:56:04.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042694347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042801778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:03.652" endtime="20201112 09:56:04.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042694347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042801778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.005" endtime="20201112 09:56:04.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.023" endtime="20201112 09:56:04.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.644" endtime="20201112 09:56:04.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.639" endtime="20201112 09:56:04.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:04.042" level="INFO">${RESULT} = [{'time': 0.042801778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010743099999999811, 'source_diff': 0.00010743099999999811}, {'time': 0.042915778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:04.033" endtime="20201112 09:56:04.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:04.072" level="INFO">${ACCURACY} = {'diff': [0.00010743099999999811, 0.00010804200000000264, 0.00010824999999999724, 0.0001078889999999999, 0.00010772300000000401, 0.00010811100000000101, 0.00010823599999999767, 0.00010787500000000033,...</msg>
<status status="PASS" starttime="20201112 09:56:04.044" endtime="20201112 09:56:04.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.083" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:56:04.080" endtime="20201112 09:56:04.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.088" level="INFO">VALUE: [0.00010743099999999811, 0.00010804200000000264, 0.00010824999999999724, 0.0001078889999999999, 0.00010772300000000401, 0.00010811100000000101, 0.00010823599999999767, 0.00010787500000000033, 0.00010811100000000101, 0.0001078889999999999, 0.00010777800000000282, 0.00010811100000000101, 0.00010808400000000135, 0.00010769500000000487, 0.00010751399999999606, 0.0001081940000000059, 0.00010833300000000212, 0.00010826400000000375, 0.00010827800000000332, 0.00010752800000000257, 0.0001080969999999945, 0.00010775000000000368, 0.00010833399999999466, 0.00010738799999999993, 0.00010754099999999572, 0.0001078340000000011, 0.00010815200000000025, 0.00010827700000000384, 0.00010748600000000386, 0.00010766699999999879, 0.00010812500000000058, 0.00010769499999999793, 0.00010795899999999775, 0.00010758400000000085, 0.00010757000000000128, 0.0001077089999999975, 0.0001075690000000018, 0.00010827700000000384, 0.00010766599999999932, 0.00010799999999999699, 0.00010830600000000246, 0.00010757000000000128, 0.00010787500000000033, 0.00010779200000000239, 0.00010773700000000358, 0.00010811100000000101, 0.00010745799999999778, 0.00010762500000000008, 0.00010812500000000058, 0.00010747200000000429]</msg>
<status status="PASS" starttime="20201112 09:56:04.085" endtime="20201112 09:56:04.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.074" endtime="20201112 09:56:04.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.098" endtime="20201112 09:56:04.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:04.106" endtime="20201112 09:56:04.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.102" endtime="20201112 09:56:04.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.093" endtime="20201112 09:56:04.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.577" endtime="20201112 09:56:04.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:03.576" endtime="20201112 09:56:04.132"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.154" endtime="20201112 09:56:04.178"></status>
</kw>
<msg timestamp="20201112 09:56:04.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:04.151" endtime="20201112 09:56:04.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:04.181" endtime="20201112 09:56:04.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.187" endtime="20201112 09:56:04.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.144" endtime="20201112 09:56:04.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.138" endtime="20201112 09:56:04.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.211" endtime="20201112 09:56:04.553"></status>
</kw>
<msg timestamp="20201112 09:56:04.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042057917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.207" endtime="20201112 09:56:04.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042057917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.563" endtime="20201112 09:56:04.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.581" endtime="20201112 09:56:04.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.200" endtime="20201112 09:56:04.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.195" endtime="20201112 09:56:04.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:04.600" level="INFO">${RESULT} = [{'time': 0.042057917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010887500000000133, 'source_diff': 0.00010887500000000133}, {'time': 0.042174931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:04.592" endtime="20201112 09:56:04.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:04.631" level="INFO">${ACCURACY} = {'diff': [0.00010887500000000133, 0.00010873699999999764, 0.00010883299999999568, 0.00010870799999999903, 0.00010861099999999457, 0.00010837500000000083, 0.0001090690000000033, 0.00010852800000000357,...</msg>
<status status="PASS" starttime="20201112 09:56:04.603" endtime="20201112 09:56:04.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.642" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:56:04.640" endtime="20201112 09:56:04.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.648" level="INFO">VALUE: [0.00010887500000000133, 0.00010873699999999764, 0.00010883299999999568, 0.00010870799999999903, 0.00010861099999999457, 0.00010837500000000083, 0.0001090690000000033, 0.00010852800000000357, 0.00010930600000000346, 0.0001092219999999991, 0.00010908300000000287, 0.00010911200000000149, 0.00010916600000000082, 0.00010894399999999971, 0.00010841699999999954, 0.00010890300000000047, 0.00010880600000000296, 0.00010876399999999731, 0.0001087769999999974, 0.00010852800000000357, 0.00010886200000000124, 0.00010854099999999672, 0.00010879099999999697, 0.00010852799999999663, 0.00010931900000000355, 0.00010840299999999997, 0.00010881899999999611, 0.00010884700000000219, 0.00010890300000000047, 0.00010877800000000382, 0.00010926400000000475, 0.00010848599999999792, 0.00010887500000000133, 0.00010894399999999971, 0.00010898600000000536, 0.00010933300000000312, 0.00010868099999999936, 0.00010918099999999986, 0.00010894499999999918, 0.00010883299999999568, 0.00010872300000000501, 0.0001084020000000005, 0.00010931900000000355, 0.00010913900000000115, 0.00010852799999999663, 0.00010887499999999439, 0.00010929200000000389, 0.00010852800000000357, 0.00010927799999999738, 0.00010908399999999541]</msg>
<status status="PASS" starttime="20201112 09:56:04.645" endtime="20201112 09:56:04.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.633" endtime="20201112 09:56:04.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.664" endtime="20201112 09:56:04.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:04.673" endtime="20201112 09:56:04.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.668" endtime="20201112 09:56:04.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.659" endtime="20201112 09:56:04.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.134" endtime="20201112 09:56:04.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.133" endtime="20201112 09:56:04.699"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.722" endtime="20201112 09:56:04.746"></status>
</kw>
<msg timestamp="20201112 09:56:04.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:04.719" endtime="20201112 09:56:04.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:04.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:04.749" endtime="20201112 09:56:04.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.756" endtime="20201112 09:56:04.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.712" endtime="20201112 09:56:04.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.705" endtime="20201112 09:56:04.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:04.779" endtime="20201112 09:56:05.118"></status>
</kw>
<msg timestamp="20201112 09:56:05.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043204778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043314667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:04.776" endtime="20201112 09:56:05.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043204778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043314667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.122" endtime="20201112 09:56:05.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.130" endtime="20201112 09:56:05.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.769" endtime="20201112 09:56:05.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.764" endtime="20201112 09:56:05.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:05.139" level="INFO">${RESULT} = [{'time': 0.043314667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001098890000000019, 'source_diff': 0.0001098890000000019}, {'time': 0.043433667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:56:05.135" endtime="20201112 09:56:05.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:05.153" level="INFO">${ACCURACY} = {'diff': [0.0001098890000000019, 0.0001098340000000031, 0.00011027799999999838, 0.0001100969999999965, 0.00010947199999999935, 0.00010999999999999899, 0.00011030499999999804, 0.0001098890000000019, 0....</msg>
<status status="PASS" starttime="20201112 09:56:05.140" endtime="20201112 09:56:05.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.158" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:56:05.157" endtime="20201112 09:56:05.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.161" level="INFO">VALUE: [0.0001098890000000019, 0.0001098340000000031, 0.00011027799999999838, 0.0001100969999999965, 0.00010947199999999935, 0.00010999999999999899, 0.00011030499999999804, 0.0001098890000000019, 0.00010979200000000439, 0.00010948599999999892, 0.00010940300000000097, 0.00010961099999999557, 0.00010969499999999993, 0.00010961100000000251, 0.00011025000000000618, 0.00010947199999999935, 0.00010994400000000071, 0.00010993000000000114, 0.00010984700000000319, 0.00010962499999999514, 0.00011022299999999957, 0.0001100419999999977, 0.00010934800000000217, 0.00010943100000000011, 0.00010968000000000089, 0.00011018100000000086, 0.00010969400000000046, 0.0001100560000000042, 0.00010973599999999917, 0.0001098340000000031, 0.000110209, 0.00011023699999999914, 0.00010973599999999917, 0.00010954100000000466, 0.00010973599999999917, 0.00011001399999999856, 0.0001099169999999941, 0.00010991700000000104, 0.00010955599999999677, 0.00010988899999999496, 0.00011015299999999478, 0.00010948699999999839, 0.0001095690000000038, 0.00010969400000000046, 0.00010986099999999582, 0.00010940299999999403, 0.00011011100000000301, 0.00010934700000000269, 0.00010951399999999806, 0.00010997199999999985]</msg>
<status status="PASS" starttime="20201112 09:56:05.159" endtime="20201112 09:56:05.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.154" endtime="20201112 09:56:05.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.165" endtime="20201112 09:56:05.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:05.169" endtime="20201112 09:56:05.189"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.167" endtime="20201112 09:56:05.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.163" endtime="20201112 09:56:05.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.701" endtime="20201112 09:56:05.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:04.700" endtime="20201112 09:56:05.191"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.202" endtime="20201112 09:56:05.222"></status>
</kw>
<msg timestamp="20201112 09:56:05.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:05.200" endtime="20201112 09:56:05.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:05.224" endtime="20201112 09:56:05.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.227" endtime="20201112 09:56:05.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.197" endtime="20201112 09:56:05.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.194" endtime="20201112 09:56:05.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.238" endtime="20201112 09:56:05.538"></status>
</kw>
<msg timestamp="20201112 09:56:05.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025449903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025560569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.236" endtime="20201112 09:56:05.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025449903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025560569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.547" endtime="20201112 09:56:05.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.566" endtime="20201112 09:56:05.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.233" endtime="20201112 09:56:05.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.231" endtime="20201112 09:56:05.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:05.587" level="INFO">${RESULT} = [{'time': 0.025560569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011066600000000232, 'source_diff': 0.00011066600000000232}, {'time': 0.025676597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:05.578" endtime="20201112 09:56:05.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:05.617" level="INFO">${ACCURACY} = {'diff': [0.00011066600000000232, 0.00011106899999999836, 0.00011131899999999861, 0.00011051400000000253, 0.0001104029999999985, 0.00011098599999999695, 0.00011077799999999888, 0.00011102799999999913,...</msg>
<status status="PASS" starttime="20201112 09:56:05.589" endtime="20201112 09:56:05.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.629" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:56:05.626" endtime="20201112 09:56:05.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.634" level="INFO">VALUE: [0.00011066600000000232, 0.00011106899999999836, 0.00011131899999999861, 0.00011051400000000253, 0.0001104029999999985, 0.00011098599999999695, 0.00011077799999999888, 0.00011102799999999913, 0.00011076399999999931, 0.00011101300000000008, 0.0001110830000000014, 0.00011067999999999842, 0.00011086100000000029, 0.00011077799999999888, 0.00011056899999999786, 0.00011048599999999992, 0.00011095800000000128, 0.00011108399999999741, 0.00011101399999999956, 0.00011049999999999949, 0.00011134700000000122, 0.00011115199999999978, 0.00011061100000000004, 0.00011036099999999979, 0.00011048599999999992, 0.00011123600000000067, 0.00011061100000000004, 0.00011065299999999875, 0.00011133299999999818, 0.00011081899999999811, 0.00011094399999999824, 0.00011067999999999842, 0.00011111100000000054, 0.00011131900000000208, 0.00011101400000000303, 0.00011083299999999768, 0.0001107220000000006, 0.00011131999999999809, 0.00011119499999999796, 0.00011084699999999725, 0.00011119400000000196, 0.00011131899999999861, 0.00011076399999999931, 0.0001110280000000026, 0.00011084700000000072, 0.00011097200000000085, 0.0001110280000000026, 0.0001103890000000024, 0.00011077700000000287, 0.00011123600000000067]</msg>
<status status="PASS" starttime="20201112 09:56:05.631" endtime="20201112 09:56:05.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.619" endtime="20201112 09:56:05.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.644" endtime="20201112 09:56:05.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:05.653" endtime="20201112 09:56:05.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.648" endtime="20201112 09:56:05.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.639" endtime="20201112 09:56:05.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.192" endtime="20201112 09:56:05.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.191" endtime="20201112 09:56:05.679"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.702" endtime="20201112 09:56:05.726"></status>
</kw>
<msg timestamp="20201112 09:56:05.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:05.699" endtime="20201112 09:56:05.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:05.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:05.729" endtime="20201112 09:56:05.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.736" endtime="20201112 09:56:05.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.691" endtime="20201112 09:56:05.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.685" endtime="20201112 09:56:05.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:05.760" endtime="20201112 09:56:06.108"></status>
</kw>
<msg timestamp="20201112 09:56:06.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043481069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043592986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:05.756" endtime="20201112 09:56:06.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043481069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043592986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.117" endtime="20201112 09:56:06.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.136" endtime="20201112 09:56:06.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.749" endtime="20201112 09:56:06.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.744" endtime="20201112 09:56:06.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:06.155" level="INFO">${RESULT} = [{'time': 0.043592986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011191700000000304, 'source_diff': 0.00011191700000000304}, {'time': 0.043708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:56:06.146" endtime="20201112 09:56:06.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:06.186" level="INFO">${ACCURACY} = {'diff': [0.00011191700000000304, 0.00011213899999999721, 0.00011208399999999841, 0.00011218099999999592, 0.00011168100000000236, 0.00011181999999999859, 0.00011211099999999807, 0.0001120419999999997,...</msg>
<status status="PASS" starttime="20201112 09:56:06.157" endtime="20201112 09:56:06.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.197" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:56:06.195" endtime="20201112 09:56:06.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.202" level="INFO">VALUE: [0.00011191700000000304, 0.00011213899999999721, 0.00011208399999999841, 0.00011218099999999592, 0.00011168100000000236, 0.00011181999999999859, 0.00011211099999999807, 0.0001120419999999997, 0.00011181900000000605, 0.0001119299999999962, 0.00011200000000000099, 0.00011231899999999961, 0.00011143099999999517, 0.00011161200000000399, 0.00011215300000000372, 0.00011200000000000099, 0.0001115549999999993, 0.00011137500000000383, 0.00011213899999999721, 0.00011152799999999963, 0.00011201400000000056, 0.00011191700000000304, 0.00011163899999999671, 0.00011202800000000013, 0.00011148700000000039, 0.00011170800000000203, 0.00011218000000000339, 0.00011227800000000038, 0.0001122220000000021, 0.00011186100000000476, 0.00011163899999999671, 0.00011223600000000167, 0.00011225000000000124, 0.00011219499999999549, 0.00011197300000000132, 0.00011198600000000142, 0.0001115549999999993, 0.00011175000000000074, 0.00011137499999999689, 0.00011156899999999886, 0.00011183399999999816, 0.0001122499999999943, 0.00011223600000000167, 0.00011179199999999945, 0.00011226400000000081, 0.00011151300000000058, 0.00011194400000000271, 0.0001118890000000039, 0.00011173599999999423, 0.00011220800000000253]</msg>
<status status="PASS" starttime="20201112 09:56:06.199" endtime="20201112 09:56:06.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.188" endtime="20201112 09:56:06.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.212" endtime="20201112 09:56:06.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:06.221" endtime="20201112 09:56:06.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.216" endtime="20201112 09:56:06.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.207" endtime="20201112 09:56:06.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.681" endtime="20201112 09:56:06.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:05.680" endtime="20201112 09:56:06.247"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.270" endtime="20201112 09:56:06.294"></status>
</kw>
<msg timestamp="20201112 09:56:06.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:06.267" endtime="20201112 09:56:06.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:06.298" endtime="20201112 09:56:06.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.304" endtime="20201112 09:56:06.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.259" endtime="20201112 09:56:06.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.253" endtime="20201112 09:56:06.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.328" endtime="20201112 09:56:06.667"></status>
</kw>
<msg timestamp="20201112 09:56:06.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043253597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043366181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.325" endtime="20201112 09:56:06.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043253597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043366181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.677" endtime="20201112 09:56:06.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.695" endtime="20201112 09:56:06.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.317" endtime="20201112 09:56:06.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.312" endtime="20201112 09:56:06.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:06.715" level="INFO">${RESULT} = [{'time': 0.043366181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011258399999999891, 'source_diff': 0.00011258399999999891}, {'time': 0.043484208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:06.706" endtime="20201112 09:56:06.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:06.745" level="INFO">${ACCURACY} = {'diff': [0.00011258399999999891, 0.0001132220000000031, 0.000112902000000005, 0.0001127499999999948, 0.00011252799999999369, 0.00011301399999999462, 0.00011276400000000131, 0.00011299999999999505, 0....</msg>
<status status="PASS" starttime="20201112 09:56:06.717" endtime="20201112 09:56:06.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.756" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:56:06.754" endtime="20201112 09:56:06.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.762" level="INFO">VALUE: [0.00011258399999999891, 0.0001132220000000031, 0.000112902000000005, 0.0001127499999999948, 0.00011252799999999369, 0.00011301399999999462, 0.00011276400000000131, 0.00011299999999999505, 0.00011286099999999882, 0.00011294499999999624, 0.00011297299999999538, 0.00011248599999999498, 0.0001128890000000049, 0.00011236100000000526, 0.00011319399999999702, 0.00011297199999999591, 0.00011263900000000465, 0.00011329200000000095, 0.00011268100000000336, 0.00011248700000000139, 0.00011333300000000018, 0.00011261100000000551, 0.00011277800000000088, 0.00011315299999999778, 0.0001124169999999966, 0.00011320799999999659, 0.00011275000000000174, 0.00011243099999999617, 0.00011306999999999984, 0.00011248700000000139, 0.0001132770000000019, 0.00011306900000000036, 0.00011277800000000088, 0.00011265299999999728, 0.00011277800000000088, 0.000112596999999999, 0.00011323599999999573, 0.00011315299999999778, 0.00011294499999999624, 0.00011302700000000165, 0.00011277800000000088, 0.0001123890000000044, 0.00011332000000000009, 0.00011281999999999959, 0.00011318099999999692, 0.00011263799999999824, 0.0001132220000000031, 0.00011295900000000275, 0.00011308299999999993, 0.00011252700000000115]</msg>
<status status="PASS" starttime="20201112 09:56:06.759" endtime="20201112 09:56:06.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.747" endtime="20201112 09:56:06.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.772" endtime="20201112 09:56:06.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:06.780" endtime="20201112 09:56:06.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.775" endtime="20201112 09:56:06.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.767" endtime="20201112 09:56:06.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.249" endtime="20201112 09:56:06.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.248" endtime="20201112 09:56:06.806"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.830" endtime="20201112 09:56:06.853"></status>
</kw>
<msg timestamp="20201112 09:56:06.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:06.826" endtime="20201112 09:56:06.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:06.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:06.857" endtime="20201112 09:56:06.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.863" endtime="20201112 09:56:06.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.819" endtime="20201112 09:56:06.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.813" endtime="20201112 09:56:06.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:06.887" endtime="20201112 09:56:07.228"></status>
</kw>
<msg timestamp="20201112 09:56:07.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042968278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043082542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:06.884" endtime="20201112 09:56:07.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042968278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043082542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:07.238" endtime="20201112 09:56:07.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.257" endtime="20201112 09:56:07.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.877" endtime="20201112 09:56:07.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.872" endtime="20201112 09:56:07.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:07.276" level="INFO">${RESULT} = [{'time': 0.043082542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011426400000000281, 'source_diff': 0.00011426400000000281}, {'time': 0.043202542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:07.267" endtime="20201112 09:56:07.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:07.306" level="INFO">${ACCURACY} = {'diff': [0.00011426400000000281, 0.00011423599999999673, 0.00011384799999999973, 0.0001140420000000017, 0.00011347199999999641, 0.00011427799999999544, 0.00011356900000000086, 0.00011393099999999767,...</msg>
<status status="PASS" starttime="20201112 09:56:07.278" endtime="20201112 09:56:07.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.318" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:56:07.315" endtime="20201112 09:56:07.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.323" level="INFO">VALUE: [0.00011426400000000281, 0.00011423599999999673, 0.00011384799999999973, 0.0001140420000000017, 0.00011347199999999641, 0.00011427799999999544, 0.00011356900000000086, 0.00011393099999999767, 0.00011402800000000213, 0.00011340300000000497, 0.00011348599999999598, 0.00011393099999999767, 0.00011347300000000282, 0.00011361099999999957, 0.0001142770000000029, 0.00011356900000000086, 0.00011390299999999853, 0.0001138749999999994, 0.00011393099999999767, 0.00011394499999999724, 0.0001139169999999981, 0.00011338899999999846, 0.0001137220000000036, 0.00011415199999999931, 0.00011370799999999709, 0.00011355499999999435, 0.00011409699999999356, 0.00011344399999999727, 0.00011376400000000231, 0.0001139169999999981, 0.0001138619999999993, 0.00011341599999999813, 0.00011395800000000428, 0.00011415199999999931, 0.00011358300000000043, 0.00011417999999999845, 0.00011390299999999853, 0.0001140970000000005, 0.00011358399999999991, 0.00011351400000000206, 0.00011395800000000428, 0.00011415299999999878, 0.00011390199999999906, 0.00011348600000000292, 0.00011412499999999964, 0.00011356900000000086, 0.00011351400000000206, 0.00011395900000000375, 0.00011427800000000238, 0.00011384799999999973]</msg>
<status status="PASS" starttime="20201112 09:56:07.320" endtime="20201112 09:56:07.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.308" endtime="20201112 09:56:07.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.333" endtime="20201112 09:56:07.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:07.342" endtime="20201112 09:56:07.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.337" endtime="20201112 09:56:07.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.328" endtime="20201112 09:56:07.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.808" endtime="20201112 09:56:07.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:06.807" endtime="20201112 09:56:07.367"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.391" endtime="20201112 09:56:07.414"></status>
</kw>
<msg timestamp="20201112 09:56:07.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:07.387" endtime="20201112 09:56:07.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:07.418" endtime="20201112 09:56:07.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.424" endtime="20201112 09:56:07.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.380" endtime="20201112 09:56:07.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.374" endtime="20201112 09:56:07.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.448" endtime="20201112 09:56:07.788"></status>
</kw>
<msg timestamp="20201112 09:56:07.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04281575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042930431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:07.445" endtime="20201112 09:56:07.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04281575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042930431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:07.797" endtime="20201112 09:56:07.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.816" endtime="20201112 09:56:07.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.437" endtime="20201112 09:56:07.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.433" endtime="20201112 09:56:07.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:07.837" level="INFO">${RESULT} = [{'time': 0.042930431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011468099999999842, 'source_diff': 0.00011468099999999842}, {'time': 0.043060472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:07.828" endtime="20201112 09:56:07.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:07.868" level="INFO">${ACCURACY} = {'diff': [0.00011468099999999842, 0.00011490299999999953, 0.00011436100000000032, 0.00011445799999999784, 0.0001147220000000046, 0.00011531900000000261, 0.00011516699999999935, 0.00011488899999999996,...</msg>
<status status="PASS" starttime="20201112 09:56:07.839" endtime="20201112 09:56:07.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.879" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:56:07.877" endtime="20201112 09:56:07.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.884" level="INFO">VALUE: [0.00011468099999999842, 0.00011490299999999953, 0.00011436100000000032, 0.00011445799999999784, 0.0001147220000000046, 0.00011531900000000261, 0.00011516699999999935, 0.00011488899999999996, 0.00011526400000000381, 0.00011526400000000381, 0.00011516699999999935, 0.00011440299999999903, 0.00011477699999999647, 0.00011526399999999687, 0.00011490299999999953, 0.00011461100000000057, 0.00011477799999999594, 0.00011484700000000125, 0.0001148750000000004, 0.00011451400000000306, 0.00011466599999999938, 0.00011481900000000211, 0.00011436100000000032, 0.00011465299999999928, 0.00011445800000000478, 0.00011476399999999637, 0.00011448600000000392, 0.00011486100000000082, 0.00011473599999999723, 0.00011490299999999953, 0.00011456900000000186, 0.00011461100000000057, 0.0001150550000000028, 0.00011520799999999859, 0.00011502799999999619, 0.00011473700000000364, 0.00011494499999999824, 0.00011473600000000417, 0.00011465300000000622, 0.00011456899999999492, 0.00011517999999999945, 0.00011523599999999773, 0.00011515299999999978, 0.00011513900000000021, 0.00011466699999999885, 0.0001147499999999968, 0.00011515299999999978, 0.00011519400000000596, 0.00011448700000000339, 0.000114597000000001]</msg>
<status status="PASS" starttime="20201112 09:56:07.881" endtime="20201112 09:56:07.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.870" endtime="20201112 09:56:07.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.894" endtime="20201112 09:56:07.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:07.903" endtime="20201112 09:56:07.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.898" endtime="20201112 09:56:07.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.889" endtime="20201112 09:56:07.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.370" endtime="20201112 09:56:07.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.368" endtime="20201112 09:56:07.929"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.953" endtime="20201112 09:56:07.977"></status>
</kw>
<msg timestamp="20201112 09:56:07.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:07.949" endtime="20201112 09:56:07.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:07.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:07.981" endtime="20201112 09:56:07.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:07.987" endtime="20201112 09:56:07.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.942" endtime="20201112 09:56:07.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.936" endtime="20201112 09:56:07.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.011" endtime="20201112 09:56:08.368"></status>
</kw>
<msg timestamp="20201112 09:56:08.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042886556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043002597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.008" endtime="20201112 09:56:08.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042886556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043002597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:08.378" endtime="20201112 09:56:08.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.396" endtime="20201112 09:56:08.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.000" endtime="20201112 09:56:08.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.995" endtime="20201112 09:56:08.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:08.415" level="INFO">${RESULT} = [{'time': 0.043002597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011604099999999729, 'source_diff': 0.00011604099999999729}, {'time': 0.043128597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:56:08.406" endtime="20201112 09:56:08.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:56:08.447" level="INFO">${ACCURACY} = {'diff': [0.00011604099999999729, 0.00011584699999999531, 0.00011540300000000003, 0.00011532000000000209, 0.00011593099999999967, 0.00011569499999999899, 0.00011569499999999899, 0.00011627799999999744...</msg>
<status status="PASS" starttime="20201112 09:56:08.418" endtime="20201112 09:56:08.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.458" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:56:08.455" endtime="20201112 09:56:08.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.463" level="INFO">VALUE: [0.00011604099999999729, 0.00011584699999999531, 0.00011540300000000003, 0.00011532000000000209, 0.00011593099999999967, 0.00011569499999999899, 0.00011569499999999899, 0.00011627799999999744, 0.0001153750000000009, 0.00011581900000000311, 0.0001160550000000038, 0.0001163049999999971, 0.00011626399999999787, 0.00011536100000000132, 0.00011619499999999949, 0.0001154299999999997, 0.00011541600000000013, 0.0001160970000000025, 0.00011573599999999823, 0.00011598599999999848, 0.00011552799999999669, 0.00011554199999999626, 0.00011626399999999787, 0.00011615199999999437, 0.00011568099999999942, 0.00011595799999999934, 0.00011619499999999949, 0.00011536100000000132, 0.00011554199999999626, 0.00011615300000000078, 0.00011566699999999985, 0.00011626399999999787, 0.00011543099999999917, 0.00011612500000000164, 0.00011598699999999795, 0.00011548699999999745, 0.00011583299999999574, 0.00011579100000000397, 0.00011597199999999891, 0.0001162499999999983, 0.00011563900000000071, 0.00011577800000000388, 0.00011536100000000132, 0.00011611100000000207, 0.00011601399999999762, 0.00011594399999999977, 0.0001157499999999978, 0.00011619400000000002, 0.00011611100000000207, 0.0001159170000000001]</msg>
<status status="PASS" starttime="20201112 09:56:08.460" endtime="20201112 09:56:08.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.448" endtime="20201112 09:56:08.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:08.473" endtime="20201112 09:56:08.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:08.481" endtime="20201112 09:56:08.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.476" endtime="20201112 09:56:08.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.468" endtime="20201112 09:56:08.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.931" endtime="20201112 09:56:08.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:07.930" endtime="20201112 09:56:08.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:55:14.962" endtime="20201112 09:56:08.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:08.520" endtime="20201112 09:56:08.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.515" endtime="20201112 09:56:08.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.513" endtime="20201112 09:56:08.545"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:55:14.828" endtime="20201112 09:56:08.546" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:54:18.759" endtime="20201112 09:56:08.556"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:56:08.697" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:56:08.713" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:56:10.644" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:56:08.694" endtime="20201112 09:56:10.646"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:56:10.651" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:56:10.648" endtime="20201112 09:56:10.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.691" endtime="20201112 09:56:10.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:10.658" endtime="20201112 09:56:11.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:10.655" endtime="20201112 09:56:11.071"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.100" endtime="20201112 09:56:11.126"></status>
</kw>
<msg timestamp="20201112 09:56:11.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tes...</msg>
<status status="PASS" starttime="20201112 09:56:11.097" endtime="20201112 09:56:11.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.134" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tes...</msg>
<status status="PASS" starttime="20201112 09:56:11.130" endtime="20201112 09:56:11.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.141" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:56:11.136" endtime="20201112 09:56:11.142"></status>
</kw>
<status status="FAIL" starttime="20201112 09:56:11.090" endtime="20201112 09:56:11.143"></status>
</kw>
<status status="FAIL" starttime="20201112 09:56:11.085" endtime="20201112 09:56:11.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.082" endtime="20201112 09:56:11.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:56:11.154" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:56:11.152" endtime="20201112 09:56:11.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.148" endtime="20201112 09:56:11.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.080" endtime="20201112 09:56:11.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.079" endtime="20201112 09:56:11.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.158" endtime="20201112 09:56:11.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.076" endtime="20201112 09:56:11.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.165" endtime="20201112 09:56:11.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.072" endtime="20201112 09:56:11.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:08.687" endtime="20201112 09:56:11.171"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:11.186" endtime="20201112 09:56:11.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.182" endtime="20201112 09:56:11.211"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.245" endtime="20201112 09:56:11.266"></status>
</kw>
<msg timestamp="20201112 09:56:11.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:11.241" endtime="20201112 09:56:11.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:56:11.269" endtime="20201112 09:56:11.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:56:11.280" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:56:11.276" endtime="20201112 09:56:11.281"></status>
</kw>
<status status="FAIL" starttime="20201112 09:56:11.234" endtime="20201112 09:56:11.283"></status>
</kw>
<status status="FAIL" starttime="20201112 09:56:11.227" endtime="20201112 09:56:11.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.225" endtime="20201112 09:56:11.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:56:11.293" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:56:11.292" endtime="20201112 09:56:11.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.287" endtime="20201112 09:56:11.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.223" endtime="20201112 09:56:11.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.221" endtime="20201112 09:56:11.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.297" endtime="20201112 09:56:11.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.217" endtime="20201112 09:56:11.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.212" endtime="20201112 09:56:11.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.179" endtime="20201112 09:56:11.304"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:11.312" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:11.334" endtime="20201112 09:56:13.432"></status>
</kw>
<msg timestamp="20201112 09:56:13.433" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 774047, 'wakeups': [784056, 794056, 804056, 814056, 824056, 834056, 84...</msg>
<status status="PASS" starttime="20201112 09:56:11.330" endtime="20201112 09:56:13.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.436" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 774047, 'wakeups': [784056, 794056, 804056, 814056, 824056, 834056, 84...</msg>
<status status="PASS" starttime="20201112 09:56:13.434" endtime="20201112 09:56:13.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.437" endtime="20201112 09:56:13.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.323" endtime="20201112 09:56:13.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.317" endtime="20201112 09:56:13.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.444" level="INFO">${RESULT} = {'start-time': 774047, 'wakeups': [784056, 794056, 804056, 814056, 824056, 834056, 844056, 854056, 864056, 874056, 884056, 894056, 904056, 914056, 924056, 934056, 944056, 954056, 964056, 974056, 98405...</msg>
<status status="PASS" starttime="20201112 09:56:13.442" endtime="20201112 09:56:13.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.449" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:13.448" endtime="20201112 09:56:13.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.451" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:13.450" endtime="20201112 09:56:13.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.445" endtime="20201112 09:56:13.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.457" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:13.456" endtime="20201112 09:56:13.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.459" level="INFO">VALUE: 774047</msg>
<status status="PASS" starttime="20201112 09:56:13.458" endtime="20201112 09:56:13.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.453" endtime="20201112 09:56:13.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.465" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:13.464" endtime="20201112 09:56:13.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.468" level="INFO">VALUE: [784056, 794056, 804056, 814056, 824056, 834056, 844056, 854056, 864056, 874056, 884056, 894056, 904056, 914056, 924056, 934056, 944056, 954056, 964056, 974056, 984056, 994056, 1004056, 1014056, 1024056, 1034056, 1044056, 1054056, 1064056, 1074056, 1084056, 1094056, 1104056, 1114056, 1124056, 1134056, 1144056, 1154056, 1164056, 1174056, 1184056, 1194056, 1204056, 1214056, 1224056, 1234056, 1244056, 1254056, 1264056, 1274056, 1284056, 1294056, 1304056, 1314056, 1324056, 1334056, 1344056, 1354056, 1364056, 1374056, 1384056, 1394056, 1404056, 1414056, 1424056, 1434056, 1444056, 1454056, 1464056, 1474056, 1484056, 1494056, 1504056, 1514056, 1524056, 1534056, 1544056, 1554056, 1564056, 1574056, 1584056, 1594056, 1604056, 1614056, 1624056, 1634056, 1644056, 1654056, 1664056, 1674056, 1684056, 1694056, 1704056, 1714056, 1724056, 1734056, 1744056, 1754056, 1764056, 1774056]</msg>
<status status="PASS" starttime="20201112 09:56:13.466" endtime="20201112 09:56:13.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.461" endtime="20201112 09:56:13.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.477" endtime="20201112 09:56:13.795"></status>
</kw>
<msg timestamp="20201112 09:56:13.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139577931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.149587778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.475" endtime="20201112 09:56:13.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139577931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.149587778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:13.803" endtime="20201112 09:56:13.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.821" endtime="20201112 09:56:13.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.472" endtime="20201112 09:56:13.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.469" endtime="20201112 09:56:13.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:13.886" level="INFO">${RESULT} = {'diff': [0, 0.010009847000000016, 0.010001138999999992, 0.010001014000000003, 0.010001152000000013, 0.010000999999999982, 0.010001209000000011, 0.010000958000000004, 0.010001152999999985, 0.010001082...</msg>
<status status="PASS" starttime="20201112 09:56:13.830" endtime="20201112 09:56:13.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.897" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:13.895" endtime="20201112 09:56:13.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.902" level="INFO">VALUE: 0.139577931</msg>
<status status="PASS" starttime="20201112 09:56:13.900" endtime="20201112 09:56:13.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.888" endtime="20201112 09:56:13.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.916" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:13.913" endtime="20201112 09:56:13.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:13.920" level="INFO">VALUE: [0.149587778, 0.159588917, 0.169589931, 0.179591083, 0.189592083, 0.199593292, 0.20959425, 0.219595403, 0.229596486, 0.239597556, 0.249598569, 0.259599736, 0.269600736, 0.279601917, 0.289602903, 0.299604056, 0.309605069, 0.319606292, 0.329607208, 0.339608361, 0.349609375, 0.359610542, 0.369611542, 0.379612708, 0.389613722, 0.399614875, 0.409615861, 0.419617042, 0.429618028, 0.439619167, 0.449620181, 0.459621347, 0.469622347, 0.4796235, 0.489624514, 0.499625653, 0.509626667, 0.519627819, 0.529628833, 0.539629986, 0.549631014, 0.559632139, 0.569633181, 0.579634306, 0.589635333, 0.5996365, 0.609637486, 0.619638639, 0.629639639, 0.639640806, 0.649641819, 0.659642958, 0.669643972, 0.679645125, 0.689646194, 0.699647292, 0.709648292, 0.719649458, 0.729650458, 0.739651625, 0.749652625, 0.759653778, 0.769654792, 0.779655986, 0.789656958, 0.799658111, 0.809659125, 0.819660278, 0.829661278, 0.839662417, 0.849663431, 0.859664597, 0.869665611, 0.879666806, 0.889667764, 0.899668903, 0.909669917, 0.919671069, 0.929672083, 0.93967325, 0.94967425, 0.959675458, 0.969676417, 0.979677556, 0.989678625, 0.999679722, 1.00968075, 1.019681889, 1.029682903, 1.039684056, 1.049685069, 1.059686222, 1.069687222, 1.079688389, 1.089689403, 1.099690542, 1.109691556, 1.119692708, 1.129693708, 1.139694903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:13.918" endtime="20201112 09:56:13.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.906" endtime="20201112 09:56:13.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.929" endtime="20201112 09:56:13.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:13.938" endtime="20201112 09:56:13.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.934" endtime="20201112 09:56:13.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.925" endtime="20201112 09:56:13.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.313" endtime="20201112 09:56:13.964"></status>
</kw>
<msg timestamp="20201112 09:56:13.964" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:13.986" endtime="20201112 09:56:16.096"></status>
</kw>
<msg timestamp="20201112 09:56:16.097" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3424115, 'wakeups': [3434123, 3444124, 3454124, 3464124, 3474124, 3484...</msg>
<status status="PASS" starttime="20201112 09:56:13.982" endtime="20201112 09:56:16.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.104" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3424115, 'wakeups': [3434123, 3444124, 3454124, 3464124, 3474124, 3484...</msg>
<status status="PASS" starttime="20201112 09:56:16.099" endtime="20201112 09:56:16.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.106" endtime="20201112 09:56:16.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.975" endtime="20201112 09:56:16.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.969" endtime="20201112 09:56:16.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:16.120" level="INFO">${RESULT} = {'start-time': 3424115, 'wakeups': [3434123, 3444124, 3454124, 3464124, 3474124, 3484124, 3494124, 3504124, 3514124, 3524124, 3534124, 3544124, 3554124, 3564124, 3574124, 3584124, 3594124, 3604124, 36...</msg>
<status status="PASS" starttime="20201112 09:56:16.115" endtime="20201112 09:56:16.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.130" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:16.128" endtime="20201112 09:56:16.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.134" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:16.132" endtime="20201112 09:56:16.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.122" endtime="20201112 09:56:16.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.148" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:16.146" endtime="20201112 09:56:16.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.152" level="INFO">VALUE: 3424115</msg>
<status status="PASS" starttime="20201112 09:56:16.150" endtime="20201112 09:56:16.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.138" endtime="20201112 09:56:16.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.165" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:16.163" endtime="20201112 09:56:16.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.170" level="INFO">VALUE: [3434123, 3444124, 3454124, 3464124, 3474124, 3484124, 3494124, 3504124, 3514124, 3524124, 3534124, 3544124, 3554124, 3564124, 3574124, 3584124, 3594124, 3604124, 3614124, 3624124, 3634124, 3644124, 3654124, 3664124, 3674124, 3684124, 3694124, 3704124, 3714124, 3724124, 3734124, 3744124, 3754124, 3764124, 3774124, 3784124, 3794124, 3804124, 3814124, 3824124, 3834124, 3844124, 3854124, 3864124, 3874124, 3884124, 3894124, 3904124, 3914124, 3924124, 3934124, 3944124, 3954124, 3964124, 3974124, 3984124, 3994124, 4004124, 4014124, 4024124, 4034124, 4044124, 4054124, 4064124, 4074124, 4084124, 4094124, 4104124, 4114124, 4124124, 4134124, 4144124, 4154124, 4164124, 4174124, 4184124, 4194124, 4204124, 4214124, 4224124, 4234124, 4244124, 4254124, 4264124, 4274124, 4284124, 4294124, 4304124, 4314124, 4324124, 4334124, 4344124, 4354124, 4364124, 4374124, 4384124, 4394124, 4404124, 4414124, 4424124]</msg>
<status status="PASS" starttime="20201112 09:56:16.167" endtime="20201112 09:56:16.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.156" endtime="20201112 09:56:16.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.191" endtime="20201112 09:56:16.537"></status>
</kw>
<msg timestamp="20201112 09:56:16.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038777528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048787028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.188" endtime="20201112 09:56:16.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038777528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048787028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:16.546" endtime="20201112 09:56:16.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.564" endtime="20201112 09:56:16.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.181" endtime="20201112 09:56:16.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.174" endtime="20201112 09:56:16.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:16.626" level="INFO">${RESULT} = {'diff': [0, 0.010009500000000005, 0.010002153, 0.010001012999999996, 0.010001152999999999, 0.010001014000000003, 0.010001152999999999, 0.010001027999999995, 0.010001139000000006, 0.01000101299999999,...</msg>
<status status="PASS" starttime="20201112 09:56:16.572" endtime="20201112 09:56:16.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.637" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:16.635" endtime="20201112 09:56:16.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.641" level="INFO">VALUE: 0.038777528</msg>
<status status="PASS" starttime="20201112 09:56:16.639" endtime="20201112 09:56:16.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.628" endtime="20201112 09:56:16.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.655" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:16.653" endtime="20201112 09:56:16.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:16.660" level="INFO">VALUE: [0.048787028, 0.058789181, 0.068790194, 0.078791347, 0.088792361, 0.098793514, 0.108794542, 0.118795681, 0.128796694, 0.138797847, 0.148798861, 0.158800014, 0.168801042, 0.178802208, 0.188803208, 0.198804403, 0.208805375, 0.218806542, 0.228807556, 0.238808694, 0.248809722, 0.258810861, 0.268811875, 0.278813028, 0.288814042, 0.298815194, 0.308816236, 0.318817389, 0.328818403, 0.338819542, 0.348820569, 0.358821708, 0.368822722, 0.378823875, 0.388824889, 0.398826042, 0.408827056, 0.418828264, 0.428829236, 0.438830403, 0.448831403, 0.458832569, 0.468833569, 0.478834722, 0.488835764, 0.498836889, 0.508837903, 0.518839069, 0.528840125, 0.538841278, 0.548842278, 0.558843403, 0.568844431, 0.578845569, 0.588846583, 0.59884775, 0.608848764, 0.618849917, 0.628850931, 0.638852083, 0.648853153, 0.658854264, 0.668855264, 0.678856486, 0.688857444, 0.698858597, 0.708859625, 0.718860778, 0.728861792, 0.738862931, 0.748863944, 0.758865111, 0.768866125, 0.778867278, 0.788868306, 0.798869444, 0.808870458, 0.818871625, 0.828872653, 0.838873806, 0.848874792, 0.858875944, 0.868876972, 0.878878153, 0.888879153, 0.898880292, 0.908881306, 0.918882458, 0.928883472, 0.938884625, 0.948885639, 0.958886833, 0.968887847, 0.978889028, 0.988889986, 0.998891139, 1.008892167, 1.018893319, 1.028894347, 1.038895486] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:16.657" endtime="20201112 09:56:16.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.645" endtime="20201112 09:56:16.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.676" endtime="20201112 09:56:16.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:16.684" endtime="20201112 09:56:16.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.680" endtime="20201112 09:56:16.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.671" endtime="20201112 09:56:16.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:13.966" endtime="20201112 09:56:16.710"></status>
</kw>
<msg timestamp="20201112 09:56:16.710" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:16.733" endtime="20201112 09:56:18.839"></status>
</kw>
<msg timestamp="20201112 09:56:18.840" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6171812, 'wakeups': [6181821, 6191821, 6201821, 6211821, 6221821, 6231...</msg>
<status status="PASS" starttime="20201112 09:56:16.730" endtime="20201112 09:56:18.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6171812, 'wakeups': [6181821, 6191821, 6201821, 6211821, 6221821, 6231...</msg>
<status status="PASS" starttime="20201112 09:56:18.841" endtime="20201112 09:56:18.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.844" endtime="20201112 09:56:18.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.722" endtime="20201112 09:56:18.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.715" endtime="20201112 09:56:18.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:18.850" level="INFO">${RESULT} = {'start-time': 6171812, 'wakeups': [6181821, 6191821, 6201821, 6211821, 6221821, 6231821, 6241821, 6251821, 6261821, 6271821, 6281821, 6291821, 6301821, 6311821, 6321821, 6331821, 6341821, 6351821, 63...</msg>
<status status="PASS" starttime="20201112 09:56:18.848" endtime="20201112 09:56:18.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.855" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:18.854" endtime="20201112 09:56:18.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.857" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:18.856" endtime="20201112 09:56:18.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.851" endtime="20201112 09:56:18.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.863" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:18.862" endtime="20201112 09:56:18.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.866" level="INFO">VALUE: 6171812</msg>
<status status="PASS" starttime="20201112 09:56:18.865" endtime="20201112 09:56:18.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.859" endtime="20201112 09:56:18.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.872" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:18.870" endtime="20201112 09:56:18.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:18.874" level="INFO">VALUE: [6181821, 6191821, 6201821, 6211821, 6221821, 6231821, 6241821, 6251821, 6261821, 6271821, 6281821, 6291821, 6301821, 6311821, 6321821, 6331821, 6341821, 6351821, 6361821, 6371821, 6381821, 6391821, 6401821, 6411821, 6421821, 6431821, 6441821, 6451821, 6461821, 6471821, 6481821, 6491821, 6501821, 6511821, 6521821, 6531821, 6541821, 6551821, 6561821, 6571821, 6581821, 6591821, 6601821, 6611821, 6621821, 6631821, 6641821, 6651821, 6661821, 6671821, 6681821, 6691821, 6701821, 6711821, 6721821, 6731821, 6741821, 6751821, 6761821, 6771821, 6781821, 6791821, 6801821, 6811821, 6821821, 6831821, 6841821, 6851821, 6861821, 6871821, 6881821, 6891821, 6901821, 6911821, 6921821, 6931821, 6941821, 6951821, 6961821, 6971821, 6981821, 6991821, 7001821, 7011821, 7021821, 7031821, 7041821, 7051821, 7061821, 7071821, 7081821, 7091821, 7101821, 7111821, 7121821, 7131821, 7141821, 7151821, 7161821, 7171821]</msg>
<status status="PASS" starttime="20201112 09:56:18.873" endtime="20201112 09:56:18.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.867" endtime="20201112 09:56:18.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:18.883" endtime="20201112 09:56:19.222"></status>
</kw>
<msg timestamp="20201112 09:56:19.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040440667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050450819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:18.882" endtime="20201112 09:56:19.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040440667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050450819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:19.231" endtime="20201112 09:56:19.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.248" endtime="20201112 09:56:19.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.878" endtime="20201112 09:56:19.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:18.876" endtime="20201112 09:56:19.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:19.313" level="INFO">${RESULT} = {'diff': [0, 0.010010152000000001, 0.010001152999999999, 0.010001013999999996, 0.010001167000000005, 0.010000986000000003, 0.010001152999999999, 0.010001026999999996, 0.010001139000000006, 0.010001013...</msg>
<status status="PASS" starttime="20201112 09:56:19.257" endtime="20201112 09:56:19.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.324" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:56:19.322" endtime="20201112 09:56:19.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.329" level="INFO">VALUE: 0.040440667</msg>
<status status="PASS" starttime="20201112 09:56:19.326" endtime="20201112 09:56:19.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.315" endtime="20201112 09:56:19.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.342" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:19.340" endtime="20201112 09:56:19.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:19.347" level="INFO">VALUE: [0.050450819, 0.060451972, 0.070452986, 0.080454153, 0.090455139, 0.100456292, 0.110457319, 0.120458458, 0.130459472, 0.140460625, 0.150461667, 0.160462792, 0.170463806, 0.180464958, 0.190465972, 0.200467139, 0.210468167, 0.220469292, 0.230470292, 0.240471444, 0.250472486, 0.260473639, 0.270474625, 0.280475778, 0.290476792, 0.300477944, 0.310478958, 0.320480111, 0.330481139, 0.340482278, 0.350483347, 0.360484444, 0.370485458, 0.380486611, 0.390487625, 0.400488833, 0.410489806, 0.420490958, 0.430492, 0.440493125, 0.450494194, 0.460495278, 0.470496306, 0.480497444, 0.490498458, 0.500499611, 0.510500639, 0.520501778, 0.530502806, 0.540503944, 0.550504958, 0.560506111, 0.570507139, 0.580508278, 0.590509292, 0.600510444, 0.610511458, 0.620512625, 0.630513625, 0.640514847, 0.650515792, 0.660516944, 0.670517972, 0.680519125, 0.690520125, 0.700521292, 0.710522292, 0.720523458, 0.730524458, 0.740525611, 0.750526625, 0.760527806, 0.770528806, 0.780529944, 0.790530972, 0.800532125, 0.810533125, 0.820534306, 0.830535292, 0.840536486, 0.850537472, 0.860538625, 0.870539639, 0.880540806, 0.890541806, 0.900542958, 0.910543986, 0.920545125, 0.930546139, 0.940547292, 0.950548306, 0.960549472, 0.970550472, 0.980551625, 0.990552653, 1.000553847, 1.010554819, 1.020555958, 1.030556986, 1.040558125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:19.345" endtime="20201112 09:56:19.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.332" endtime="20201112 09:56:19.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.356" endtime="20201112 09:56:19.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:19.364" endtime="20201112 09:56:19.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.360" endtime="20201112 09:56:19.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.351" endtime="20201112 09:56:19.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:16.712" endtime="20201112 09:56:19.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.309" endtime="20201112 09:56:19.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.307" endtime="20201112 09:56:19.391"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:19.397" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:19.419" endtime="20201112 09:56:21.529"></status>
</kw>
<msg timestamp="20201112 09:56:21.531" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8857378, 'wakeups': [8867394, 8877393, 8887393, 8897393, 8907393, 8917...</msg>
<status status="PASS" starttime="20201112 09:56:19.415" endtime="20201112 09:56:21.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.537" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8857378, 'wakeups': [8867394, 8877393, 8887393, 8897393, 8907393, 8917...</msg>
<status status="PASS" starttime="20201112 09:56:21.533" endtime="20201112 09:56:21.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.540" endtime="20201112 09:56:21.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.407" endtime="20201112 09:56:21.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.402" endtime="20201112 09:56:21.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:21.553" level="INFO">${RESULT} = {'start-time': 8857378, 'wakeups': [8867394, 8877393, 8887393, 8897393, 8907393, 8917393, 8927393, 8937393, 8947393, 8957393, 8967393, 8977393, 8987393, 8997393, 9007393, 9017393, 9027393, 9037393, 90...</msg>
<status status="PASS" starttime="20201112 09:56:21.548" endtime="20201112 09:56:21.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.563" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:21.561" endtime="20201112 09:56:21.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.568" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:21.566" endtime="20201112 09:56:21.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.555" endtime="20201112 09:56:21.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.581" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:21.578" endtime="20201112 09:56:21.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.585" level="INFO">VALUE: 8857378</msg>
<status status="PASS" starttime="20201112 09:56:21.583" endtime="20201112 09:56:21.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.572" endtime="20201112 09:56:21.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.600" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:21.597" endtime="20201112 09:56:21.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.605" level="INFO">VALUE: [8867394, 8877393, 8887393, 8897393, 8907393, 8917393, 8927393, 8937393, 8947393, 8957393, 8967393, 8977393, 8987393, 8997393, 9007393, 9017393, 9027393, 9037393, 9047393, 9057393, 9067393, 9077393, 9087393, 9097393, 9107393, 9117393, 9127393, 9137393, 9147393, 9157393, 9167393, 9177393, 9187393, 9197393, 9207393, 9217393, 9227393, 9237393, 9247393, 9257393, 9267393, 9277393, 9287393, 9297393, 9307393, 9317393, 9327393, 9337393, 9347393, 9357393, 9367393, 9377393, 9387393, 9397393, 9407393, 9417393, 9427393, 9437393, 9447393, 9457393, 9467393, 9477393, 9487393, 9497393, 9507393, 9517393, 9527393, 9537393, 9547393, 9557393, 9567393, 9577393, 9587393, 9597393, 9607393, 9617393, 9627393, 9637393, 9647393, 9657393, 9667393, 9677393, 9687393, 9697393, 9707393, 9717393, 9727393, 9737393, 9747393, 9757393, 9767393, 9777393, 9787393, 9797393, 9807393, 9817393, 9827393, 9837393, 9847393, 9857393]</msg>
<status status="PASS" starttime="20201112 09:56:21.602" endtime="20201112 09:56:21.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.589" endtime="20201112 09:56:21.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.624" endtime="20201112 09:56:21.964"></status>
</kw>
<msg timestamp="20201112 09:56:21.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045735597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055753569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.621" endtime="20201112 09:56:21.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:21.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045735597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055753569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:21.968" endtime="20201112 09:56:21.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:21.976" endtime="20201112 09:56:21.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.613" endtime="20201112 09:56:21.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:21.609" endtime="20201112 09:56:21.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:22.009" level="INFO">${RESULT} = {'diff': [0, 0.010017972, 0.010000152999999998, 0.010001042000000002, 0.010001125, 0.010001014000000003, 0.010001193999999991, 0.010000986000000003, 0.010001139000000006, 0.010001014000000003, 0.01000...</msg>
<status status="PASS" starttime="20201112 09:56:21.986" endtime="20201112 09:56:22.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.015" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:22.014" endtime="20201112 09:56:22.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.017" level="INFO">VALUE: 0.045735597</msg>
<status status="PASS" starttime="20201112 09:56:22.016" endtime="20201112 09:56:22.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.010" endtime="20201112 09:56:22.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.023" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:22.022" endtime="20201112 09:56:22.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:22.026" level="INFO">VALUE: [0.055753569, 0.065753722, 0.075754764, 0.085755889, 0.095756903, 0.105758097, 0.115759083, 0.125760222, 0.135761236, 0.145762389, 0.155763389, 0.165764556, 0.175765556, 0.185766722, 0.195767722, 0.205768875, 0.215769889, 0.225771056, 0.235772056, 0.245773208, 0.255774222, 0.265775375, 0.275776403, 0.285777542, 0.295778556, 0.305779708, 0.315780708, 0.325781875, 0.335782875, 0.345784028, 0.355785042, 0.365786194, 0.375787222, 0.385788375, 0.395789375, 0.405790542, 0.415791542, 0.425792694, 0.435793736, 0.445794861, 0.455795889, 0.465797028, 0.475798042, 0.485799194, 0.495800208, 0.505801361, 0.515802389, 0.525803528, 0.535804569, 0.545805708, 0.555806722, 0.565807861, 0.575808889, 0.585810028, 0.595811042, 0.605812208, 0.615813208, 0.625814375, 0.635815444, 0.645816528, 0.655817542, 0.665818694, 0.675819708, 0.685820861, 0.695821875, 0.705823028, 0.715824056, 0.725825208, 0.735826208, 0.745827361, 0.755828389, 0.765829528, 0.775830597, 0.785831764, 0.795832708, 0.805833861, 0.815834875, 0.825836028, 0.835837056, 0.845838194, 0.855839222, 0.865840361, 0.875841375, 0.885842528, 0.895843556, 0.905844764, 0.915845722, 0.925846861, 0.935847931, 0.945849042, 0.955850042, 0.965851194, 0.975852208, 0.985853375, 0.995854375, 1.005855528, 1.015856556, 1.025857694, 1.035858708, 1.045859875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:22.025" endtime="20201112 09:56:22.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.019" endtime="20201112 09:56:22.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.030" endtime="20201112 09:56:22.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:22.034" endtime="20201112 09:56:22.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.032" endtime="20201112 09:56:22.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.028" endtime="20201112 09:56:22.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.398" endtime="20201112 09:56:22.055"></status>
</kw>
<msg timestamp="20201112 09:56:22.055" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:22.066" endtime="20201112 09:56:24.166"></status>
</kw>
<msg timestamp="20201112 09:56:24.167" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11502315, 'wakeups': [11512330, 11522330, 11532330, 11542330, 11552330...</msg>
<status status="PASS" starttime="20201112 09:56:22.064" endtime="20201112 09:56:24.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.170" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11502315, 'wakeups': [11512330, 11522330, 11532330, 11542330, 11552330...</msg>
<status status="PASS" starttime="20201112 09:56:24.168" endtime="20201112 09:56:24.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.171" endtime="20201112 09:56:24.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.061" endtime="20201112 09:56:24.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.058" endtime="20201112 09:56:24.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:24.177" level="INFO">${RESULT} = {'start-time': 11502315, 'wakeups': [11512330, 11522330, 11532330, 11542330, 11552330, 11562330, 11572330, 11582330, 11592330, 11602330, 11612330, 11622330, 11632330, 11642330, 11652330, 11662330, 116...</msg>
<status status="PASS" starttime="20201112 09:56:24.175" endtime="20201112 09:56:24.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.183" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:24.182" endtime="20201112 09:56:24.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.185" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:24.184" endtime="20201112 09:56:24.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.178" endtime="20201112 09:56:24.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.191" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:24.190" endtime="20201112 09:56:24.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.193" level="INFO">VALUE: 11502315</msg>
<status status="PASS" starttime="20201112 09:56:24.192" endtime="20201112 09:56:24.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.187" endtime="20201112 09:56:24.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.199" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:24.198" endtime="20201112 09:56:24.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.202" level="INFO">VALUE: [11512330, 11522330, 11532330, 11542330, 11552330, 11562330, 11572330, 11582330, 11592330, 11602330, 11612330, 11622330, 11632330, 11642330, 11652330, 11662330, 11672330, 11682330, 11692330, 11702330, 11712330, 11722330, 11732330, 11742330, 11752330, 11762330, 11772330, 11782330, 11792330, 11802330, 11812330, 11822330, 11832330, 11842330, 11852330, 11862330, 11872330, 11882330, 11892330, 11902330, 11912330, 11922330, 11932330, 11942330, 11952330, 11962330, 11972330, 11982330, 11992330, 12002330, 12012330, 12022330, 12032330, 12042330, 12052330, 12062330, 12072330, 12082330, 12092330, 12102330, 12112330, 12122330, 12132330, 12142330, 12152330, 12162330, 12172330, 12182330, 12192330, 12202330, 12212330, 12222330, 12232330, 12242330, 12252330, 12262330, 12272330, 12282330, 12292330, 12302330, 12312330, 12322330, 12332330, 12342330, 12352330, 12362330, 12372330, 12382330, 12392330, 12402330, 12412330, 12422330, 12432330, 12442330, 12452330, 12462330, 12472330, 12482330, 12492330, 12502330]</msg>
<status status="PASS" starttime="20201112 09:56:24.201" endtime="20201112 09:56:24.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.195" endtime="20201112 09:56:24.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.211" endtime="20201112 09:56:24.502"></status>
</kw>
<msg timestamp="20201112 09:56:24.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:24.209" endtime="20201112 09:56:24.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:24.506" endtime="20201112 09:56:24.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.514" endtime="20201112 09:56:24.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.206" endtime="20201112 09:56:24.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.204" endtime="20201112 09:56:24.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:24.543" level="INFO">${RESULT} = {'diff': [0, 0.010017388999999998, 0.010001181000000005, 0.010000985999999996, 0.010001139, 0.010001014000000003, 0.010001166000000006, 0.010001013999999989, 0.010001167000000005, 0.010000971999999997...</msg>
<status status="PASS" starttime="20201112 09:56:24.519" endtime="20201112 09:56:24.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.548" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:24.547" endtime="20201112 09:56:24.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.550" level="INFO">VALUE: 0.021933222</msg>
<status status="PASS" starttime="20201112 09:56:24.549" endtime="20201112 09:56:24.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.544" endtime="20201112 09:56:24.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.557" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:24.556" endtime="20201112 09:56:24.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:24.559" level="INFO">VALUE: [0.031950611, 0.041951792, 0.051952778, 0.061953917, 0.071954931, 0.081956097, 0.091957111, 0.101958278, 0.11195925, 0.121960444, 0.131961431, 0.141962569, 0.151963583, 0.16196475, 0.171965764, 0.181966889, 0.191967917, 0.201969056, 0.211970111, 0.221971222, 0.23197225, 0.241973389, 0.251974403, 0.261975542, 0.271976556, 0.281977764, 0.291978722, 0.301979875, 0.311980889, 0.321982042, 0.331983042, 0.341984208, 0.351985208, 0.361986361, 0.371987375, 0.381988542, 0.391989556, 0.401990708, 0.411991764, 0.421992875, 0.431993861, 0.441995014, 0.451996028, 0.461997208, 0.471998208, 0.481999347, 0.492000361, 0.502001514, 0.512002528, 0.522003681, 0.532004694, 0.542005847, 0.552006847, 0.562008, 0.572009028, 0.582010167, 0.592011181, 0.602012347, 0.612013361, 0.622014556, 0.632015514, 0.642016681, 0.652017681, 0.662018833, 0.672019847, 0.682021014, 0.692022014, 0.702023181, 0.712024181, 0.722025333, 0.732026333, 0.742027486, 0.7520285, 0.762029653, 0.772030681, 0.782031819, 0.792032833, 0.802034, 0.812035028, 0.822036153, 0.832037181, 0.842038333, 0.852039347, 0.8620405, 0.872041514, 0.882042667, 0.892043653, 0.902044819, 0.912045819, 0.922046986, 0.932047986, 0.942049153, 0.952050222, 0.962051306, 0.972052319, 0.982053486, 0.992054486, 1.002055667, 1.012056653, 1.022057806] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:24.558" endtime="20201112 09:56:24.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.552" endtime="20201112 09:56:24.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.564" endtime="20201112 09:56:24.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:24.568" endtime="20201112 09:56:24.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.566" endtime="20201112 09:56:24.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.562" endtime="20201112 09:56:24.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:22.056" endtime="20201112 09:56:24.589"></status>
</kw>
<msg timestamp="20201112 09:56:24.589" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:24.599" endtime="20201112 09:56:26.708"></status>
</kw>
<msg timestamp="20201112 09:56:26.709" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14036257, 'wakeups': [14046273, 14056272, 14066272, 14076272, 14086272...</msg>
<status status="PASS" starttime="20201112 09:56:24.598" endtime="20201112 09:56:26.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.712" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14036257, 'wakeups': [14046273, 14056272, 14066272, 14076272, 14086272...</msg>
<status status="PASS" starttime="20201112 09:56:26.710" endtime="20201112 09:56:26.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.713" endtime="20201112 09:56:26.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.594" endtime="20201112 09:56:26.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.592" endtime="20201112 09:56:26.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:26.721" level="INFO">${RESULT} = {'start-time': 14036257, 'wakeups': [14046273, 14056272, 14066272, 14076272, 14086272, 14096272, 14106272, 14116272, 14126272, 14136272, 14146272, 14156272, 14166272, 14176272, 14186272, 14196272, 142...</msg>
<status status="PASS" starttime="20201112 09:56:26.717" endtime="20201112 09:56:26.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.726" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:26.725" endtime="20201112 09:56:26.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.728" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:26.727" endtime="20201112 09:56:26.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.722" endtime="20201112 09:56:26.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.734" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:26.733" endtime="20201112 09:56:26.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.736" level="INFO">VALUE: 14036257</msg>
<status status="PASS" starttime="20201112 09:56:26.735" endtime="20201112 09:56:26.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.729" endtime="20201112 09:56:26.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.742" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:26.741" endtime="20201112 09:56:26.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:26.745" level="INFO">VALUE: [14046273, 14056272, 14066272, 14076272, 14086272, 14096272, 14106272, 14116272, 14126272, 14136272, 14146272, 14156272, 14166272, 14176272, 14186272, 14196272, 14206272, 14216272, 14226272, 14236272, 14246272, 14256272, 14266272, 14276272, 14286272, 14296272, 14306272, 14316272, 14326272, 14336272, 14346272, 14356272, 14366272, 14376272, 14386272, 14396272, 14406272, 14416272, 14426272, 14436272, 14446272, 14456272, 14466272, 14476272, 14486272, 14496272, 14506272, 14516272, 14526272, 14536272, 14546272, 14556272, 14566272, 14576272, 14586272, 14596272, 14606272, 14616272, 14626272, 14636272, 14646272, 14656272, 14666272, 14676272, 14686272, 14696272, 14706272, 14716272, 14726272, 14736272, 14746272, 14756272, 14766272, 14776272, 14786272, 14796272, 14806272, 14816272, 14826272, 14836272, 14846272, 14856272, 14866272, 14876272, 14886272, 14896272, 14906272, 14916272, 14926272, 14936272, 14946272, 14956272, 14966272, 14976272, 14986272, 14996272, 15006272, 15016272, 15026272, 15036272]</msg>
<status status="PASS" starttime="20201112 09:56:26.743" endtime="20201112 09:56:26.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.738" endtime="20201112 09:56:26.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:26.754" endtime="20201112 09:56:27.045"></status>
</kw>
<msg timestamp="20201112 09:56:27.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03213175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:26.752" endtime="20201112 09:56:27.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03213175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:27.049" endtime="20201112 09:56:27.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.056" endtime="20201112 09:56:27.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.749" endtime="20201112 09:56:27.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:26.747" endtime="20201112 09:56:27.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:27.085" level="INFO">${RESULT} = {'diff': [0, 0.010017722, 0.010000166999999997, 0.010001014000000003, 0.010001138, 0.010000999999999996, 0.010001167000000005, 0.010000999999999996, 0.010001152999999999, 0.01000100000000001, 0.010001...</msg>
<status status="PASS" starttime="20201112 09:56:27.061" endtime="20201112 09:56:27.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.090" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:56:27.089" endtime="20201112 09:56:27.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.092" level="INFO">VALUE: 0.022114028</msg>
<status status="PASS" starttime="20201112 09:56:27.091" endtime="20201112 09:56:27.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.086" endtime="20201112 09:56:27.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.099" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:27.098" endtime="20201112 09:56:27.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:27.101" level="INFO">VALUE: [0.03213175, 0.042131917, 0.052132931, 0.062134069, 0.072135069, 0.082136236, 0.092137236, 0.102138389, 0.112139389, 0.122140542, 0.132141556, 0.142142708, 0.152143722, 0.162144875, 0.172145917, 0.182147028, 0.192148042, 0.202149194, 0.212150208, 0.222151403, 0.232152361, 0.242153514, 0.252154528, 0.262155694, 0.272156694, 0.282157861, 0.292158861, 0.302160042, 0.312161042, 0.322162208, 0.332163181, 0.342164347, 0.352165347, 0.3621665, 0.372167514, 0.382168667, 0.392169667, 0.402170819, 0.412171833, 0.422173014, 0.432174, 0.442175153, 0.452176167, 0.462177319, 0.472178333, 0.4821795, 0.492180486, 0.502181639, 0.512182653, 0.522183806, 0.532184819, 0.542185986, 0.552187014, 0.562188139, 0.572189167, 0.582190347, 0.592191319, 0.602192472, 0.612193514, 0.622194625, 0.632195653, 0.642196792, 0.652197806, 0.662198958, 0.672199986, 0.682201125, 0.692202139, 0.702203306, 0.712204306, 0.722205472, 0.732206472, 0.742207611, 0.752208653, 0.762209792, 0.772210806, 0.782211944, 0.792212958, 0.802214125, 0.812215125, 0.822216292, 0.832217306, 0.842218444, 0.852219458, 0.862220611, 0.872221611, 0.882222792, 0.892223778, 0.902224944, 0.912226028, 0.922227111, 0.932228125, 0.942229278, 0.952230278, 0.962231431, 0.972232458, 0.982233653, 0.992234611, 1.002235792, 1.012236806, 1.022237958] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:27.100" endtime="20201112 09:56:27.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.094" endtime="20201112 09:56:27.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.110" endtime="20201112 09:56:27.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:27.118" endtime="20201112 09:56:27.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.114" endtime="20201112 09:56:27.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.105" endtime="20201112 09:56:27.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:24.590" endtime="20201112 09:56:27.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.394" endtime="20201112 09:56:27.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:19.392" endtime="20201112 09:56:27.151"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:27.157" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:27.179" endtime="20201112 09:56:29.299"></status>
</kw>
<msg timestamp="20201112 09:56:29.300" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16617208, 'wakeups': [16627234, 16637232, 16647232, 16657232, 16667232...</msg>
<status status="PASS" starttime="20201112 09:56:27.175" endtime="20201112 09:56:29.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.307" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16617208, 'wakeups': [16627234, 16637232, 16647232, 16657232, 16667232...</msg>
<status status="PASS" starttime="20201112 09:56:29.303" endtime="20201112 09:56:29.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.310" endtime="20201112 09:56:29.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.168" endtime="20201112 09:56:29.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.163" endtime="20201112 09:56:29.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:29.323" level="INFO">${RESULT} = {'start-time': 16617208, 'wakeups': [16627234, 16637232, 16647232, 16657232, 16667232, 16677232, 16687232, 16697232, 16707232, 16717232, 16727232, 16737232, 16747232, 16757232, 16767232, 16777232, 167...</msg>
<status status="PASS" starttime="20201112 09:56:29.318" endtime="20201112 09:56:29.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.333" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:29.331" endtime="20201112 09:56:29.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.338" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:29.336" endtime="20201112 09:56:29.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.325" endtime="20201112 09:56:29.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.351" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:56:29.348" endtime="20201112 09:56:29.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.355" level="INFO">VALUE: 16617208</msg>
<status status="PASS" starttime="20201112 09:56:29.353" endtime="20201112 09:56:29.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.342" endtime="20201112 09:56:29.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.368" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:29.366" endtime="20201112 09:56:29.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.373" level="INFO">VALUE: [16627234, 16637232, 16647232, 16657232, 16667232, 16677232, 16687232, 16697232, 16707232, 16717232, 16727232, 16737232, 16747232, 16757232, 16767232, 16777232, 16787232, 16797232, 16807232, 16817232, 16827232, 16837232, 16847232, 16857232, 16867232, 16877232, 16887232, 16897232, 16907232, 16917232, 16927232, 16937232, 16947232, 16957232, 16967232, 16977232, 16987232, 16997232, 17007232, 17017232, 17027232, 17037232, 17047232, 17057232, 17067232, 17077232, 17087232, 17097232, 17107232, 17117232, 17127232, 17137232, 17147232, 17157232, 17167232, 17177232, 17187232, 17197232, 17207232, 17217232, 17227232, 17237232, 17247232, 17257232, 17267232, 17277232, 17287232, 17297232, 17307232, 17317232, 17327232, 17337232, 17347232, 17357232, 17367232, 17377232, 17387232, 17397232, 17407232, 17417232, 17427232, 17437232, 17447232, 17457232, 17467232, 17477232, 17487232, 17497232, 17507232, 17517232, 17527232, 17537232, 17547232, 17557232, 17567232, 17577232, 17587232, 17597232, 17607232, 17617232]</msg>
<status status="PASS" starttime="20201112 09:56:29.371" endtime="20201112 09:56:29.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.359" endtime="20201112 09:56:29.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.396" endtime="20201112 09:56:29.740"></status>
</kw>
<msg timestamp="20201112 09:56:29.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051972569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06199975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:29.391" endtime="20201112 09:56:29.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051972569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06199975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:56:29.749" endtime="20201112 09:56:29.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.767" endtime="20201112 09:56:29.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.382" endtime="20201112 09:56:29.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.377" endtime="20201112 09:56:29.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:29.829" level="INFO">${RESULT} = {'diff': [0, 0.010027180999999996, 0.010000110999999999, 0.010001014000000003, 0.010001138999999992, 0.01000100000000001, 0.010001152999999999, 0.010001082999999994, 0.010001083000000008, 0.0100010560...</msg>
<status status="PASS" starttime="20201112 09:56:29.776" endtime="20201112 09:56:29.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.840" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:56:29.838" endtime="20201112 09:56:29.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.845" level="INFO">VALUE: 0.051972569</msg>
<status status="PASS" starttime="20201112 09:56:29.842" endtime="20201112 09:56:29.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.831" endtime="20201112 09:56:29.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.858" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:29.856" endtime="20201112 09:56:29.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:29.863" level="INFO">VALUE: [0.06199975, 0.071999861, 0.082000875, 0.092002014, 0.102003014, 0.112004167, 0.12200525, 0.132006333, 0.142007389, 0.152008486, 0.1620095, 0.172010708, 0.182011653, 0.192012806, 0.202013875, 0.212014986, 0.222015972, 0.232017125, 0.242018139, 0.252019292, 0.262020306, 0.272021458, 0.282022458, 0.292023611, 0.302024625, 0.312025792, 0.322026792, 0.332027944, 0.342028958, 0.352030097, 0.362031097, 0.372032306, 0.382033264, 0.392034417, 0.402035417, 0.412036583, 0.422037597, 0.432038764, 0.442039764, 0.452040903, 0.462041903, 0.472043069, 0.482044083, 0.492045236, 0.50204625, 0.512047417, 0.522048389, 0.532049597, 0.542050556, 0.552051708, 0.562052722, 0.572053861, 0.582054875, 0.592056042, 0.602057042, 0.612058236, 0.622059208, 0.632060375, 0.642061361, 0.652062514, 0.662063528, 0.672064681, 0.682065736, 0.692066847, 0.702067861, 0.712069, 0.722070014, 0.732071167, 0.742072181, 0.752073361, 0.762074347, 0.7720755, 0.7820765, 0.792077653, 0.802078681, 0.812079833, 0.822080833, 0.832081972, 0.842082986, 0.852084139, 0.862085153, 0.872086306, 0.882087306, 0.892088472, 0.902089472, 0.912090639, 0.922091708, 0.932092792, 0.942093819, 0.952094944, 0.962095958, 0.972097111, 0.982098125, 0.992099278, 1.002100306, 1.012101431, 1.022102444, 1.032103597, 1.042104611, 1.052105764] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:29.861" endtime="20201112 09:56:29.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.848" endtime="20201112 09:56:29.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.872" endtime="20201112 09:56:29.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:29.881" endtime="20201112 09:56:29.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.876" endtime="20201112 09:56:29.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.868" endtime="20201112 09:56:29.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.159" endtime="20201112 09:56:29.907"></status>
</kw>
<msg timestamp="20201112 09:56:29.907" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:29.931" endtime="20201112 09:56:32.033"></status>
</kw>
<msg timestamp="20201112 09:56:32.033" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19369395, 'wakeups': [19379420, 19389419, 19399419, 19409419, 19419419...</msg>
<status status="PASS" starttime="20201112 09:56:29.928" endtime="20201112 09:56:32.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.037" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19369395, 'wakeups': [19379420, 19389419, 19399419, 19409419, 19419419...</msg>
<status status="PASS" starttime="20201112 09:56:32.034" endtime="20201112 09:56:32.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.038" endtime="20201112 09:56:32.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.918" endtime="20201112 09:56:32.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.912" endtime="20201112 09:56:32.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:32.045" level="INFO">${RESULT} = {'start-time': 19369395, 'wakeups': [19379420, 19389419, 19399419, 19409419, 19419419, 19429419, 19439419, 19449419, 19459419, 19469419, 19479419, 19489419, 19499419, 19509419, 19519419, 19529419, 195...</msg>
<status status="PASS" starttime="20201112 09:56:32.042" endtime="20201112 09:56:32.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.049" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:32.048" endtime="20201112 09:56:32.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.052" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:32.051" endtime="20201112 09:56:32.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.045" endtime="20201112 09:56:32.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.058" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:56:32.056" endtime="20201112 09:56:32.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.060" level="INFO">VALUE: 19369395</msg>
<status status="PASS" starttime="20201112 09:56:32.059" endtime="20201112 09:56:32.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.053" endtime="20201112 09:56:32.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.066" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:32.065" endtime="20201112 09:56:32.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.068" level="INFO">VALUE: [19379420, 19389419, 19399419, 19409419, 19419419, 19429419, 19439419, 19449419, 19459419, 19469419, 19479419, 19489419, 19499419, 19509419, 19519419, 19529419, 19539419, 19549419, 19559419, 19569419, 19579419, 19589419, 19599419, 19609419, 19619419, 19629419, 19639419, 19649419, 19659419, 19669419, 19679419, 19689419, 19699419, 19709419, 19719419, 19729419, 19739419, 19749419, 19759419, 19769419, 19779419, 19789419, 19799419, 19809419, 19819419, 19829419, 19839419, 19849419, 19859419, 19869419, 19879419, 19889419, 19899419, 19909419, 19919419, 19929419, 19939419, 19949419, 19959419, 19969419, 19979419, 19989419, 19999419, 20009419, 20019419, 20029419, 20039419, 20049419, 20059419, 20069419, 20079419, 20089419, 20099419, 20109419, 20119419, 20129419, 20139419, 20149419, 20159419, 20169419, 20179419, 20189419, 20199419, 20209419, 20219419, 20229419, 20239419, 20249419, 20259419, 20269419, 20279419, 20289419, 20299419, 20309419, 20319419, 20329419, 20339419, 20349419, 20359419, 20369419]</msg>
<status status="PASS" starttime="20201112 09:56:32.067" endtime="20201112 09:56:32.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.062" endtime="20201112 09:56:32.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.077" endtime="20201112 09:56:32.392"></status>
</kw>
<msg timestamp="20201112 09:56:32.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041491097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051517625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:32.076" endtime="20201112 09:56:32.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041491097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051517625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:32.401" endtime="20201112 09:56:32.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.418" endtime="20201112 09:56:32.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.072" endtime="20201112 09:56:32.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.070" endtime="20201112 09:56:32.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:32.482" level="INFO">${RESULT} = {'diff': [0, 0.010026528, 0.010001069000000001, 0.010001014000000003, 0.010001152999999999, 0.010001014000000003, 0.010001138999999992, 0.010001042000000002, 0.010001125, 0.010000999999999996, 0.01000...</msg>
<status status="PASS" starttime="20201112 09:56:32.427" endtime="20201112 09:56:32.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.500" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:56:32.497" endtime="20201112 09:56:32.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.504" level="INFO">VALUE: 0.041491097</msg>
<status status="PASS" starttime="20201112 09:56:32.502" endtime="20201112 09:56:32.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.491" endtime="20201112 09:56:32.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.518" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:32.516" endtime="20201112 09:56:32.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:32.523" level="INFO">VALUE: [0.051517625, 0.061518694, 0.071519708, 0.081520861, 0.091521875, 0.101523014, 0.111524056, 0.121525181, 0.131526181, 0.141527333, 0.151528333, 0.161529486, 0.1715305, 0.181531653, 0.191532653, 0.201533806, 0.211534819, 0.221535986, 0.231536972, 0.241538139, 0.251539139, 0.261540333, 0.271541306, 0.281542458, 0.291543472, 0.301544611, 0.311545611, 0.321546764, 0.331547764, 0.341548931, 0.351549931, 0.361551083, 0.371552083, 0.381553236, 0.391554292, 0.401555403, 0.411556403, 0.421557569, 0.431558583, 0.441559778, 0.451560722, 0.461561875, 0.471562889, 0.481564042, 0.491565069, 0.501566222, 0.511567208, 0.521568375, 0.531569375, 0.541570514, 0.551571528, 0.561572681, 0.571573708, 0.581574875, 0.591575847, 0.601577, 0.611578042, 0.621579181, 0.631580167, 0.641581319, 0.651582347, 0.661583542, 0.671584514, 0.681585653, 0.691586653, 0.701587806, 0.711588847, 0.721589972, 0.731590972, 0.741592125, 0.751593139, 0.761594292, 0.771595306, 0.781596528, 0.791597458, 0.801598625, 0.811599625, 0.821600778, 0.831601847, 0.841602931, 0.851603958, 0.861605111, 0.871606139, 0.881607264, 0.891608264, 0.901609417, 0.911610431, 0.921611569, 0.931612597, 0.94161375, 0.95161475, 0.961615917, 0.971616917, 0.981618056, 0.991619069, 1.001620236, 1.011621222, 1.021622389, 1.031623403, 1.041624542] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:32.520" endtime="20201112 09:56:32.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.508" endtime="20201112 09:56:32.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.532" endtime="20201112 09:56:32.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:32.540" endtime="20201112 09:56:32.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.536" endtime="20201112 09:56:32.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.527" endtime="20201112 09:56:32.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:29.908" endtime="20201112 09:56:32.566"></status>
</kw>
<msg timestamp="20201112 09:56:32.566" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:32.588" endtime="20201112 09:56:34.708"></status>
</kw>
<msg timestamp="20201112 09:56:34.709" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22026092, 'wakeups': [22036118, 22046116, 22056116, 22066116, 22076116...</msg>
<status status="PASS" starttime="20201112 09:56:32.584" endtime="20201112 09:56:34.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.716" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22026092, 'wakeups': [22036118, 22046116, 22056116, 22066116, 22076116...</msg>
<status status="PASS" starttime="20201112 09:56:34.711" endtime="20201112 09:56:34.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.718" endtime="20201112 09:56:34.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.577" endtime="20201112 09:56:34.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.572" endtime="20201112 09:56:34.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:34.732" level="INFO">${RESULT} = {'start-time': 22026092, 'wakeups': [22036118, 22046116, 22056116, 22066116, 22076116, 22086116, 22096116, 22106116, 22116116, 22126116, 22136116, 22146116, 22156116, 22166116, 22176116, 22186116, 221...</msg>
<status status="PASS" starttime="20201112 09:56:34.727" endtime="20201112 09:56:34.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.742" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:34.740" endtime="20201112 09:56:34.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.747" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:34.744" endtime="20201112 09:56:34.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.734" endtime="20201112 09:56:34.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.760" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:56:34.758" endtime="20201112 09:56:34.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.765" level="INFO">VALUE: 22026092</msg>
<status status="PASS" starttime="20201112 09:56:34.762" endtime="20201112 09:56:34.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.751" endtime="20201112 09:56:34.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.777" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:34.775" endtime="20201112 09:56:34.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:34.782" level="INFO">VALUE: [22036118, 22046116, 22056116, 22066116, 22076116, 22086116, 22096116, 22106116, 22116116, 22126116, 22136116, 22146116, 22156116, 22166116, 22176116, 22186116, 22196116, 22206116, 22216116, 22226116, 22236116, 22246116, 22256116, 22266116, 22276116, 22286116, 22296116, 22306116, 22316116, 22326116, 22336116, 22346116, 22356116, 22366116, 22376116, 22386116, 22396116, 22406116, 22416116, 22426116, 22436116, 22446116, 22456116, 22466116, 22476116, 22486116, 22496116, 22506116, 22516116, 22526116, 22536116, 22546116, 22556116, 22566116, 22576116, 22586116, 22596116, 22606116, 22616116, 22626116, 22636116, 22646116, 22656116, 22666116, 22676116, 22686116, 22696116, 22706116, 22716116, 22726116, 22736116, 22746116, 22756116, 22766116, 22776116, 22786116, 22796116, 22806116, 22816116, 22826116, 22836116, 22846116, 22856116, 22866116, 22876116, 22886116, 22896116, 22906116, 22916116, 22926116, 22936116, 22946116, 22956116, 22966116, 22976116, 22986116, 22996116, 23006116, 23016116, 23026116]</msg>
<status status="PASS" starttime="20201112 09:56:34.780" endtime="20201112 09:56:34.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.768" endtime="20201112 09:56:34.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:34.804" endtime="20201112 09:56:35.149"></status>
</kw>
<msg timestamp="20201112 09:56:35.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038759403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048786583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:34.801" endtime="20201112 09:56:35.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038759403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048786583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:35.158" endtime="20201112 09:56:35.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.176" endtime="20201112 09:56:35.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.793" endtime="20201112 09:56:35.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:34.786" endtime="20201112 09:56:35.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:35.238" level="INFO">${RESULT} = {'diff': [0, 0.010027180000000004, 0.010000152999999998, 0.010001000000000003, 0.010001152999999999, 0.010000986000000003, 0.010001152999999999, 0.010001014000000003, 0.010001152, 0.010001013999999989...</msg>
<status status="PASS" starttime="20201112 09:56:35.185" endtime="20201112 09:56:35.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.249" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:56:35.246" endtime="20201112 09:56:35.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.253" level="INFO">VALUE: 0.038759403</msg>
<status status="PASS" starttime="20201112 09:56:35.251" endtime="20201112 09:56:35.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.240" endtime="20201112 09:56:35.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.267" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:35.265" endtime="20201112 09:56:35.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:35.272" level="INFO">VALUE: [0.048786583, 0.058786736, 0.068787736, 0.078788889, 0.088789875, 0.098791028, 0.108792042, 0.118793194, 0.128794208, 0.138795375, 0.148796375, 0.158797597, 0.168798542, 0.178799708, 0.188800708, 0.198801861, 0.208802889, 0.218804056, 0.228805056, 0.238806208, 0.248807222, 0.258808389, 0.268809389, 0.278810542, 0.288811569, 0.298812708, 0.308813722, 0.318814889, 0.328815917, 0.338817097, 0.348818069, 0.358819222, 0.368820236, 0.378821403, 0.388822417, 0.398823625, 0.408824569, 0.418825722, 0.42882675, 0.438827917, 0.448828944, 0.458830069, 0.468831083, 0.47883225, 0.488833264, 0.498834403, 0.508835431, 0.518836583, 0.528837597, 0.53883875, 0.548839778, 0.558840917, 0.568841931, 0.578843181, 0.588844111, 0.598845333, 0.608846361, 0.618847431, 0.628848458, 0.638849597, 0.648850653, 0.658851819, 0.668852792, 0.678853944, 0.688854958, 0.698856111, 0.708857125, 0.718858306, 0.728859319, 0.738860514, 0.748861472, 0.758862639, 0.768863653, 0.778864806, 0.788865819, 0.798866972, 0.808868, 0.818869139, 0.828870153, 0.838871306, 0.848872333, 0.858873486, 0.868874514, 0.878875667, 0.888876667, 0.898877833, 0.908878861, 0.91888, 0.928881014, 0.938882167, 0.948883181, 0.958884375, 0.968885347, 0.9788865, 0.988887528, 0.998888681, 1.008889708, 1.018890861, 1.028891875, 1.038893014] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:35.270" endtime="20201112 09:56:35.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.257" endtime="20201112 09:56:35.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.282" endtime="20201112 09:56:35.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:35.291" endtime="20201112 09:56:35.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.287" endtime="20201112 09:56:35.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.277" endtime="20201112 09:56:35.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:32.568" endtime="20201112 09:56:35.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.154" endtime="20201112 09:56:35.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:27.152" endtime="20201112 09:56:35.314"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:35.317" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:35.328" endtime="20201112 09:56:37.434"></status>
</kw>
<msg timestamp="20201112 09:56:37.434" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24765149, 'wakeups': [24775184, 24785184, 24795184, 24805184, 24815184...</msg>
<status status="PASS" starttime="20201112 09:56:35.327" endtime="20201112 09:56:37.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.437" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 24765149, 'wakeups': [24775184, 24785184, 24795184, 24805184, 24815184...</msg>
<status status="PASS" starttime="20201112 09:56:37.435" endtime="20201112 09:56:37.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.438" endtime="20201112 09:56:37.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.322" endtime="20201112 09:56:37.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.320" endtime="20201112 09:56:37.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:37.445" level="INFO">${RESULT} = {'start-time': 24765149, 'wakeups': [24775184, 24785184, 24795184, 24805184, 24815184, 24825184, 24835184, 24845184, 24855184, 24865184, 24875184, 24885184, 24895184, 24905184, 24915184, 24925184, 249...</msg>
<status status="PASS" starttime="20201112 09:56:37.443" endtime="20201112 09:56:37.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.450" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:37.449" endtime="20201112 09:56:37.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.452" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:37.451" endtime="20201112 09:56:37.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.446" endtime="20201112 09:56:37.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.458" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:56:37.457" endtime="20201112 09:56:37.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.460" level="INFO">VALUE: 24765149</msg>
<status status="PASS" starttime="20201112 09:56:37.459" endtime="20201112 09:56:37.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.454" endtime="20201112 09:56:37.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.466" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:37.465" endtime="20201112 09:56:37.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.469" level="INFO">VALUE: [24775184, 24785184, 24795184, 24805184, 24815184, 24825184, 24835184, 24845184, 24855184, 24865184, 24875184, 24885184, 24895184, 24905184, 24915184, 24925184, 24935184, 24945184, 24955184, 24965184, 24975184, 24985184, 24995184, 25005184, 25015184, 25025184, 25035184, 25045184, 25055184, 25065184, 25075184, 25085184, 25095184, 25105184, 25115184, 25125184, 25135184, 25145184, 25155184, 25165184, 25175184, 25185184, 25195184, 25205184, 25215184, 25225184, 25235184, 25245184, 25255184, 25265184, 25275184, 25285184, 25295184, 25305184, 25315184, 25325184, 25335184, 25345184, 25355184, 25365184, 25375184, 25385184, 25395184, 25405184, 25415184, 25425184, 25435184, 25445184, 25455184, 25465184, 25475184, 25485184, 25495184, 25505184, 25515184, 25525184, 25535184, 25545184, 25555184, 25565184, 25575184, 25585184, 25595184, 25605184, 25615184, 25625184, 25635184, 25645184, 25655184, 25665184, 25675184, 25685184, 25695184, 25705184, 25715184, 25725184, 25735184, 25745184, 25755184, 25765184]</msg>
<status status="PASS" starttime="20201112 09:56:37.467" endtime="20201112 09:56:37.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.462" endtime="20201112 09:56:37.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.478" endtime="20201112 09:56:37.769"></status>
</kw>
<msg timestamp="20201112 09:56:37.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026562014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036599111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:37.477" endtime="20201112 09:56:37.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026562014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036599111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:37.773" endtime="20201112 09:56:37.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.781" endtime="20201112 09:56:37.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.473" endtime="20201112 09:56:37.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.471" endtime="20201112 09:56:37.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:37.809" level="INFO">${RESULT} = {'diff': [0, 0.010037096999999998, 0.010000917000000005, 0.010000971999999997, 0.010001152999999999, 0.010001014000000003, 0.010001166000000006, 0.010000999999999996, 0.010001152999999999, 0.010001055...</msg>
<status status="PASS" starttime="20201112 09:56:37.785" endtime="20201112 09:56:37.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.814" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:56:37.813" endtime="20201112 09:56:37.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.817" level="INFO">VALUE: 0.026562014</msg>
<status status="PASS" starttime="20201112 09:56:37.816" endtime="20201112 09:56:37.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.810" endtime="20201112 09:56:37.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.823" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:37.822" endtime="20201112 09:56:37.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:37.825" level="INFO">VALUE: [0.036599111, 0.046600028, 0.056601, 0.066602153, 0.076603167, 0.086604333, 0.096605333, 0.106606486, 0.116607542, 0.126608653, 0.136609667, 0.146610819, 0.156611833, 0.166613014, 0.176614014, 0.186615153, 0.196616181, 0.206617319, 0.216618347, 0.2266195, 0.236620514, 0.246621667, 0.25662275, 0.266623833, 0.276624847, 0.286626, 0.296627014, 0.306628181, 0.316629181, 0.326630389, 0.336631347, 0.3466325, 0.356633514, 0.366634681, 0.376635708, 0.386636861, 0.396637861, 0.406639028, 0.416640028, 0.426641181, 0.436642194, 0.446643361, 0.456644361, 0.466645528, 0.476646542, 0.486647694, 0.496648708, 0.506649861, 0.516650875, 0.526652042, 0.536653042, 0.546654264, 0.556655222, 0.566656389, 0.576657389, 0.586658569, 0.596659556, 0.606660708, 0.61666175, 0.626662889, 0.636663931, 0.646665056, 0.656666083, 0.666667292, 0.676668236, 0.686669444, 0.696670417, 0.706671569, 0.716672583, 0.726673736, 0.736674764, 0.746675944, 0.756676931, 0.766678097, 0.776679097, 0.786680264, 0.796681278, 0.806682431, 0.816683431, 0.826684597, 0.836685625, 0.846686806, 0.856687792, 0.866688944, 0.876689944, 0.886691097, 0.896692125, 0.906693278, 0.916694292, 0.926695486, 0.936696458, 0.946697625, 0.956698639, 0.966699792, 0.976700819, 0.986701958, 0.996702972, 1.006704139, 1.016705208, 1.026706306] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:37.824" endtime="20201112 09:56:37.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.818" endtime="20201112 09:56:37.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.830" endtime="20201112 09:56:37.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:37.834" endtime="20201112 09:56:37.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.832" endtime="20201112 09:56:37.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.827" endtime="20201112 09:56:37.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.318" endtime="20201112 09:56:37.855"></status>
</kw>
<msg timestamp="20201112 09:56:37.855" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:37.865" endtime="20201112 09:56:39.984"></status>
</kw>
<msg timestamp="20201112 09:56:39.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27308599, 'wakeups': [27318634, 27328634, 27338634, 27348634, 27358634...</msg>
<status status="PASS" starttime="20201112 09:56:37.864" endtime="20201112 09:56:39.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:39.988" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 27308599, 'wakeups': [27318634, 27328634, 27338634, 27348634, 27358634...</msg>
<status status="PASS" starttime="20201112 09:56:39.986" endtime="20201112 09:56:39.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:39.989" endtime="20201112 09:56:39.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.860" endtime="20201112 09:56:39.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.857" endtime="20201112 09:56:39.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:39.995" level="INFO">${RESULT} = {'start-time': 27308599, 'wakeups': [27318634, 27328634, 27338634, 27348634, 27358634, 27368634, 27378634, 27388634, 27398634, 27408634, 27418634, 27428634, 27438634, 27448634, 27458634, 27468634, 274...</msg>
<status status="PASS" starttime="20201112 09:56:39.993" endtime="20201112 09:56:39.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.000" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:39.999" endtime="20201112 09:56:40.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.003" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:40.001" endtime="20201112 09:56:40.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:39.996" endtime="20201112 09:56:40.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.008" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:56:40.007" endtime="20201112 09:56:40.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.011" level="INFO">VALUE: 27308599</msg>
<status status="PASS" starttime="20201112 09:56:40.010" endtime="20201112 09:56:40.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.004" endtime="20201112 09:56:40.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.018" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:40.016" endtime="20201112 09:56:40.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.020" level="INFO">VALUE: [27318634, 27328634, 27338634, 27348634, 27358634, 27368634, 27378634, 27388634, 27398634, 27408634, 27418634, 27428634, 27438634, 27448634, 27458634, 27468634, 27478634, 27488634, 27498634, 27508634, 27518634, 27528634, 27538634, 27548634, 27558634, 27568634, 27578634, 27588634, 27598634, 27608634, 27618634, 27628634, 27638634, 27648634, 27658634, 27668634, 27678634, 27688634, 27698634, 27708634, 27718634, 27728634, 27738634, 27748634, 27758634, 27768634, 27778634, 27788634, 27798634, 27808634, 27818634, 27828634, 27838634, 27848634, 27858634, 27868634, 27878634, 27888634, 27898634, 27908634, 27918634, 27928634, 27938634, 27948634, 27958634, 27968634, 27978634, 27988634, 27998634, 28008634, 28018634, 28028634, 28038634, 28048634, 28058634, 28068634, 28078634, 28088634, 28098634, 28108634, 28118634, 28128634, 28138634, 28148634, 28158634, 28168634, 28178634, 28188634, 28198634, 28208634, 28218634, 28228634, 28238634, 28248634, 28258634, 28268634, 28278634, 28288634, 28298634, 28308634]</msg>
<status status="PASS" starttime="20201112 09:56:40.019" endtime="20201112 09:56:40.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.012" endtime="20201112 09:56:40.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.029" endtime="20201112 09:56:40.322"></status>
</kw>
<msg timestamp="20201112 09:56:40.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028835583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038872611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:40.028" endtime="20201112 09:56:40.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028835583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038872611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:40.326" endtime="20201112 09:56:40.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.334" endtime="20201112 09:56:40.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.024" endtime="20201112 09:56:40.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.022" endtime="20201112 09:56:40.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:40.362" level="INFO">${RESULT} = {'diff': [0, 0.010037028, 0.010000957999999997, 0.010001000000000003, 0.010001152999999999, 0.010001014000000003, 0.010001152999999999, 0.010001014000000003, 0.010001152999999999, 0.010001013000000003...</msg>
<status status="PASS" starttime="20201112 09:56:40.338" endtime="20201112 09:56:40.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.367" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:56:40.366" endtime="20201112 09:56:40.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.369" level="INFO">VALUE: 0.028835583</msg>
<status status="PASS" starttime="20201112 09:56:40.368" endtime="20201112 09:56:40.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.362" endtime="20201112 09:56:40.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.375" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:40.374" endtime="20201112 09:56:40.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:40.378" level="INFO">VALUE: [0.038872611, 0.048873569, 0.058874569, 0.068875722, 0.078876736, 0.088877889, 0.098878903, 0.108880056, 0.118881069, 0.128882222, 0.13888325, 0.148884458, 0.158885403, 0.168886556, 0.178887569, 0.188888722, 0.198889736, 0.208890889, 0.218891917, 0.228893069, 0.238894111, 0.248895236, 0.258896236, 0.268897389, 0.278898403, 0.288899569, 0.298900597, 0.308901708, 0.31890275, 0.328903889, 0.338904889, 0.348906069, 0.358907056, 0.368908236, 0.378909236, 0.388910389, 0.398911403, 0.408912569, 0.418913569, 0.428914736, 0.438915736, 0.448916889, 0.458917903, 0.468919056, 0.478920139, 0.488921222, 0.498922236, 0.508923403, 0.518924403, 0.528925569, 0.538926597, 0.548927736, 0.558928764, 0.568929958, 0.578930917, 0.588932069, 0.598933069, 0.608934236, 0.618935236, 0.628936403, 0.638937458, 0.648938556, 0.658939569, 0.668940764, 0.678941736, 0.688942917, 0.698943917, 0.708945069, 0.718946083, 0.728947236, 0.73894825, 0.748949403, 0.758950431, 0.768951611, 0.778952583, 0.788953736, 0.79895475, 0.808955903, 0.818956917, 0.828958069, 0.838959083, 0.84896025, 0.858961278, 0.868962403, 0.878963431, 0.888964597, 0.898965583, 0.908966792, 0.918967764, 0.928968931, 0.938969931, 0.948971097, 0.958972097, 0.96897325, 0.978974264, 0.988975417, 0.998976431, 1.008977597, 1.018978653, 1.028979819] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:40.377" endtime="20201112 09:56:40.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.371" endtime="20201112 09:56:40.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.382" endtime="20201112 09:56:40.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:40.386" endtime="20201112 09:56:40.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.384" endtime="20201112 09:56:40.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.380" endtime="20201112 09:56:40.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:37.856" endtime="20201112 09:56:40.407"></status>
</kw>
<msg timestamp="20201112 09:56:40.407" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:40.418" endtime="20201112 09:56:42.535"></status>
</kw>
<msg timestamp="20201112 09:56:42.536" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29853912, 'wakeups': [29863948, 29873947, 29883947, 29893947, 29903947...</msg>
<status status="PASS" starttime="20201112 09:56:40.416" endtime="20201112 09:56:42.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.539" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29853912, 'wakeups': [29863948, 29873947, 29883947, 29893947, 29903947...</msg>
<status status="PASS" starttime="20201112 09:56:42.537" endtime="20201112 09:56:42.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:42.540" endtime="20201112 09:56:42.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.413" endtime="20201112 09:56:42.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.410" endtime="20201112 09:56:42.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:42.546" level="INFO">${RESULT} = {'start-time': 29853912, 'wakeups': [29863948, 29873947, 29883947, 29893947, 29903947, 29913947, 29923947, 29933947, 29943947, 29953947, 29963947, 29973947, 29983947, 29993947, 30003947, 30013947, 300...</msg>
<status status="PASS" starttime="20201112 09:56:42.544" endtime="20201112 09:56:42.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.552" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:42.550" endtime="20201112 09:56:42.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.554" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:42.553" endtime="20201112 09:56:42.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.547" endtime="20201112 09:56:42.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.560" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:56:42.558" endtime="20201112 09:56:42.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.562" level="INFO">VALUE: 29853912</msg>
<status status="PASS" starttime="20201112 09:56:42.561" endtime="20201112 09:56:42.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.555" endtime="20201112 09:56:42.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.568" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:42.567" endtime="20201112 09:56:42.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.570" level="INFO">VALUE: [29863948, 29873947, 29883947, 29893947, 29903947, 29913947, 29923947, 29933947, 29943947, 29953947, 29963947, 29973947, 29983947, 29993947, 30003947, 30013947, 30023947, 30033947, 30043947, 30053947, 30063947, 30073947, 30083947, 30093947, 30103947, 30113947, 30123947, 30133947, 30143947, 30153947, 30163947, 30173947, 30183947, 30193947, 30203947, 30213947, 30223947, 30233947, 30243947, 30253947, 30263947, 30273947, 30283947, 30293947, 30303947, 30313947, 30323947, 30333947, 30343947, 30353947, 30363947, 30373947, 30383947, 30393947, 30403947, 30413947, 30423947, 30433947, 30443947, 30453947, 30463947, 30473947, 30483947, 30493947, 30503947, 30513947, 30523947, 30533947, 30543947, 30553947, 30563947, 30573947, 30583947, 30593947, 30603947, 30613947, 30623947, 30633947, 30643947, 30653947, 30663947, 30673947, 30683947, 30693947, 30703947, 30713947, 30723947, 30733947, 30743947, 30753947, 30763947, 30773947, 30783947, 30793947, 30803947, 30813947, 30823947, 30833947, 30843947, 30853947]</msg>
<status status="PASS" starttime="20201112 09:56:42.569" endtime="20201112 09:56:42.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.564" endtime="20201112 09:56:42.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:42.579" endtime="20201112 09:56:42.872"></status>
</kw>
<msg timestamp="20201112 09:56:42.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031840097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:42.578" endtime="20201112 09:56:42.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031840097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:42.876" endtime="20201112 09:56:42.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:42.884" endtime="20201112 09:56:42.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.574" endtime="20201112 09:56:42.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.572" endtime="20201112 09:56:42.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:42.913" level="INFO">${RESULT} = {'diff': [0, 0.010037693999999996, 0.009999889000000005, 0.010001082999999994, 0.010001084, 0.010001014000000003, 0.010001166000000006, 0.010000999999999996, 0.010001152999999999, 0.010001027999999995...</msg>
<status status="PASS" starttime="20201112 09:56:42.889" endtime="20201112 09:56:42.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.918" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:56:42.917" endtime="20201112 09:56:42.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.920" level="INFO">VALUE: 0.021802403</msg>
<status status="PASS" starttime="20201112 09:56:42.919" endtime="20201112 09:56:42.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.914" endtime="20201112 09:56:42.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.927" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:42.926" endtime="20201112 09:56:42.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:42.935" level="INFO">VALUE: [0.031840097, 0.041839986, 0.051841069, 0.061842153, 0.071843167, 0.081844333, 0.091845333, 0.101846486, 0.111847514, 0.121848667, 0.131849667, 0.141850819, 0.151851819, 0.161852986, 0.171853986, 0.181855139, 0.191856181, 0.201857319, 0.211858319, 0.221859472, 0.231860486, 0.241861639, 0.251862653, 0.261863819, 0.271864819, 0.281866028, 0.291866986, 0.301868139, 0.311869139, 0.321870292, 0.331871319, 0.341872458, 0.351873528, 0.361874639, 0.371875639, 0.381876792, 0.391877806, 0.401878972, 0.411880014, 0.421881125, 0.431882153, 0.441883306, 0.451884306, 0.461885472, 0.471886472, 0.481887653, 0.491888639, 0.501889792, 0.511890819, 0.521891958, 0.531892986, 0.541894139, 0.551895153, 0.561896292, 0.571897306, 0.581898472, 0.591899472, 0.601900625, 0.611901639, 0.621902792, 0.631903819, 0.641904986, 0.651905972, 0.661907139, 0.671908139, 0.681909292, 0.691910319, 0.701911458, 0.711912514, 0.721913667, 0.731914639, 0.741915792, 0.751916833, 0.761917958, 0.771918972, 0.781920194, 0.791921153, 0.801922306, 0.811923306, 0.821924458, 0.831925472, 0.841926625, 0.851927639, 0.861928792, 0.871929806, 0.881930972, 0.891931972, 0.901933153, 0.911934153, 0.921935292, 0.931936306, 0.941937472, 0.951938472, 0.961939639, 0.971940639, 0.981941792, 0.991942889, 1.001943972, 1.011944972, 1.021946125] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:42.928" endtime="20201112 09:56:42.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.922" endtime="20201112 09:56:42.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:42.940" endtime="20201112 09:56:42.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:42.944" endtime="20201112 09:56:42.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.942" endtime="20201112 09:56:42.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.937" endtime="20201112 09:56:42.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:40.408" endtime="20201112 09:56:42.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.315" endtime="20201112 09:56:42.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:35.315" endtime="20201112 09:56:42.967"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:42.973" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:42.995" endtime="20201112 09:56:45.115"></status>
</kw>
<msg timestamp="20201112 09:56:45.116" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32432748, 'wakeups': [32442796, 32452794, 32462794, 32472794, 32482794...</msg>
<status status="PASS" starttime="20201112 09:56:42.991" endtime="20201112 09:56:45.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.123" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32432748, 'wakeups': [32442796, 32452794, 32462794, 32472794, 32482794...</msg>
<status status="PASS" starttime="20201112 09:56:45.119" endtime="20201112 09:56:45.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:45.126" endtime="20201112 09:56:45.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.984" endtime="20201112 09:56:45.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.978" endtime="20201112 09:56:45.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:45.141" level="INFO">${RESULT} = {'start-time': 32432748, 'wakeups': [32442796, 32452794, 32462794, 32472794, 32482794, 32492794, 32502794, 32512794, 32522794, 32532794, 32542794, 32552794, 32562794, 32572794, 32582794, 32592794, 326...</msg>
<status status="PASS" starttime="20201112 09:56:45.136" endtime="20201112 09:56:45.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.151" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:45.149" endtime="20201112 09:56:45.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.156" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:45.154" endtime="20201112 09:56:45.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.143" endtime="20201112 09:56:45.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.168" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:45.166" endtime="20201112 09:56:45.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.173" level="INFO">VALUE: 32432748</msg>
<status status="PASS" starttime="20201112 09:56:45.171" endtime="20201112 09:56:45.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.160" endtime="20201112 09:56:45.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.186" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:45.184" endtime="20201112 09:56:45.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.191" level="INFO">VALUE: [32442796, 32452794, 32462794, 32472794, 32482794, 32492794, 32502794, 32512794, 32522794, 32532794, 32542794, 32552794, 32562794, 32572794, 32582794, 32592794, 32602794, 32612794, 32622794, 32632794, 32642794, 32652794, 32662794, 32672794, 32682794, 32692794, 32702794, 32712794, 32722794, 32732794, 32742794, 32752794, 32762794, 32772794, 32782794, 32792794, 32802794, 32812794, 32822794, 32832794, 32842794, 32852794, 32862794, 32872794, 32882794, 32892794, 32902794, 32912794, 32922794, 32932794, 32942794, 32952794, 32962794, 32972794, 32982794, 32992794, 33002794, 33012794, 33022794, 33032794, 33042794, 33052794, 33062794, 33072794, 33082794, 33092794, 33102794, 33112794, 33122794, 33132794, 33142794, 33152794, 33162794, 33172794, 33182794, 33192794, 33202794, 33212794, 33222794, 33232794, 33242794, 33252794, 33262794, 33272794, 33282794, 33292794, 33302794, 33312794, 33322794, 33332794, 33342794, 33352794, 33362794, 33372794, 33382794, 33392794, 33402794, 33412794, 33422794, 33432794]</msg>
<status status="PASS" starttime="20201112 09:56:45.189" endtime="20201112 09:56:45.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.177" endtime="20201112 09:56:45.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:45.211" endtime="20201112 09:56:45.556"></status>
</kw>
<msg timestamp="20201112 09:56:45.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042862542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052911917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:45.207" endtime="20201112 09:56:45.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042862542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052911917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:45.565" endtime="20201112 09:56:45.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:45.582" endtime="20201112 09:56:45.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.200" endtime="20201112 09:56:45.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.195" endtime="20201112 09:56:45.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:45.647" level="INFO">${RESULT} = {'diff': [0, 0.010049375000000006, 0.009999526999999994, 0.010000987000000003, 0.010001152, 0.010001055999999994, 0.010001111000000007, 0.010001027999999995, 0.010001139000000006, 0.01000102700000001,...</msg>
<status status="PASS" starttime="20201112 09:56:45.592" endtime="20201112 09:56:45.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.658" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:45.656" endtime="20201112 09:56:45.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.663" level="INFO">VALUE: 0.042862542</msg>
<status status="PASS" starttime="20201112 09:56:45.660" endtime="20201112 09:56:45.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.649" endtime="20201112 09:56:45.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.677" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:45.674" endtime="20201112 09:56:45.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:45.681" level="INFO">VALUE: [0.052911917, 0.062911444, 0.072912431, 0.082913583, 0.092914639, 0.10291575, 0.112916778, 0.122917917, 0.132918944, 0.142920083, 0.152921097, 0.162922236, 0.17292325, 0.182924403, 0.192925417, 0.202926583, 0.212927597, 0.222928736, 0.23292975, 0.242930889, 0.252931958, 0.262933056, 0.272934069, 0.282935236, 0.29293625, 0.302937389, 0.312938403, 0.322939556, 0.332940611, 0.342941708, 0.352942722, 0.362943875, 0.372944889, 0.382946056, 0.392947056, 0.402948208, 0.412949236, 0.422950375, 0.432951403, 0.442952542, 0.452953569, 0.462954722, 0.472955736, 0.482956875, 0.492957875, 0.502959028, 0.512960042, 0.522961194, 0.532962222, 0.542963375, 0.552964375, 0.562965528, 0.572966556, 0.582967694, 0.592968722, 0.602969861, 0.612970875, 0.622972028, 0.632973042, 0.642974194, 0.65297525, 0.662976375, 0.672977389, 0.682978569, 0.692979556, 0.702980736, 0.712981736, 0.722982875, 0.732983889, 0.742985042, 0.752986028, 0.76298725, 0.772988208, 0.782989375, 0.792990361, 0.802991514, 0.812992556, 0.822993681, 0.832994708, 0.842995847, 0.852996875, 0.862998028, 0.872999028, 0.883000181, 0.893001194, 0.903002347, 0.913003389, 0.923004514, 0.933005528, 0.943006681, 0.953007694, 0.963008861, 0.973009861, 0.983011028, 0.993012042, 1.003013194, 1.013014194, 1.023015375, 1.033016361, 1.043017528] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:45.679" endtime="20201112 09:56:45.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.666" endtime="20201112 09:56:45.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:45.690" endtime="20201112 09:56:45.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:45.699" endtime="20201112 09:56:45.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.695" endtime="20201112 09:56:45.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.686" endtime="20201112 09:56:45.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.975" endtime="20201112 09:56:45.725"></status>
</kw>
<msg timestamp="20201112 09:56:45.726" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:45.747" endtime="20201112 09:56:47.855"></status>
</kw>
<msg timestamp="20201112 09:56:47.855" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35185056, 'wakeups': [35195104, 35205102, 35215102, 35225102, 35235102...</msg>
<status status="PASS" starttime="20201112 09:56:45.744" endtime="20201112 09:56:47.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.858" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35185056, 'wakeups': [35195104, 35205102, 35215102, 35225102, 35235102...</msg>
<status status="PASS" starttime="20201112 09:56:47.856" endtime="20201112 09:56:47.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:47.860" endtime="20201112 09:56:47.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.736" endtime="20201112 09:56:47.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.731" endtime="20201112 09:56:47.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:47.866" level="INFO">${RESULT} = {'start-time': 35185056, 'wakeups': [35195104, 35205102, 35215102, 35225102, 35235102, 35245102, 35255102, 35265102, 35275102, 35285102, 35295102, 35305102, 35315102, 35325102, 35335102, 35345102, 353...</msg>
<status status="PASS" starttime="20201112 09:56:47.864" endtime="20201112 09:56:47.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.871" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:47.870" endtime="20201112 09:56:47.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.873" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:47.872" endtime="20201112 09:56:47.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.867" endtime="20201112 09:56:47.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.879" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:47.878" endtime="20201112 09:56:47.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.881" level="INFO">VALUE: 35185056</msg>
<status status="PASS" starttime="20201112 09:56:47.880" endtime="20201112 09:56:47.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.875" endtime="20201112 09:56:47.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.887" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:47.886" endtime="20201112 09:56:47.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:47.889" level="INFO">VALUE: [35195104, 35205102, 35215102, 35225102, 35235102, 35245102, 35255102, 35265102, 35275102, 35285102, 35295102, 35305102, 35315102, 35325102, 35335102, 35345102, 35355102, 35365102, 35375102, 35385102, 35395102, 35405102, 35415102, 35425102, 35435102, 35445102, 35455102, 35465102, 35475102, 35485102, 35495102, 35505102, 35515102, 35525102, 35535102, 35545102, 35555102, 35565102, 35575102, 35585102, 35595102, 35605102, 35615102, 35625102, 35635102, 35645102, 35655102, 35665102, 35675102, 35685102, 35695102, 35705102, 35715102, 35725102, 35735102, 35745102, 35755102, 35765102, 35775102, 35785102, 35795102, 35805102, 35815102, 35825102, 35835102, 35845102, 35855102, 35865102, 35875102, 35885102, 35895102, 35905102, 35915102, 35925102, 35935102, 35945102, 35955102, 35965102, 35975102, 35985102, 35995102, 36005102, 36015102, 36025102, 36035102, 36045102, 36055102, 36065102, 36075102, 36085102, 36095102, 36105102, 36115102, 36125102, 36135102, 36145102, 36155102, 36165102, 36175102, 36185102]</msg>
<status status="PASS" starttime="20201112 09:56:47.888" endtime="20201112 09:56:47.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.883" endtime="20201112 09:56:47.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:47.900" endtime="20201112 09:56:48.209"></status>
</kw>
<msg timestamp="20201112 09:56:48.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038820597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048869972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:47.898" endtime="20201112 09:56:48.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:48.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038820597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048869972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:48.218" endtime="20201112 09:56:48.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:48.235" endtime="20201112 09:56:48.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.895" endtime="20201112 09:56:48.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:47.891" endtime="20201112 09:56:48.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:48.300" level="INFO">${RESULT} = {'diff': [0, 0.010049375, 0.009999500000000001, 0.010001013999999996, 0.010001139000000006, 0.010001014000000003, 0.010001152999999999, 0.010001014000000003, 0.010001165999999992, 0.010000986000000017...</msg>
<status status="PASS" starttime="20201112 09:56:48.244" endtime="20201112 09:56:48.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:48.312" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:48.309" endtime="20201112 09:56:48.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:48.316" level="INFO">VALUE: 0.038820597</msg>
<status status="PASS" starttime="20201112 09:56:48.314" endtime="20201112 09:56:48.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:48.302" endtime="20201112 09:56:48.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:48.330" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:48.327" endtime="20201112 09:56:48.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:48.335" level="INFO">VALUE: [0.048869972, 0.058869472, 0.068870486, 0.078871625, 0.088872639, 0.098873792, 0.108874806, 0.118875972, 0.128876958, 0.138878181, 0.148879125, 0.158880292, 0.168881306, 0.178882458, 0.188883458, 0.198884597, 0.208885611, 0.218886778, 0.228887778, 0.238888944, 0.248889944, 0.258891097, 0.268892097, 0.278893319, 0.288894264, 0.298895417, 0.308896431, 0.318897583, 0.328898611, 0.338899792, 0.34890075, 0.358901903, 0.368902917, 0.378904083, 0.388905083, 0.39890625, 0.408907264, 0.418908417, 0.428909417, 0.438910597, 0.448911583, 0.458912722, 0.468913764, 0.478914889, 0.488915903, 0.498917056, 0.508918111, 0.51891925, 0.528920236, 0.538921389, 0.548922403, 0.558923556, 0.568924556, 0.578925722, 0.588926722, 0.598927875, 0.608928903, 0.618930056, 0.628931056, 0.638932236, 0.648933236, 0.658934375, 0.668935389, 0.678936542, 0.688937569, 0.698938708, 0.708939736, 0.718940875, 0.728941889, 0.738943056, 0.748944056, 0.758945194, 0.768946222, 0.778947361, 0.788948444, 0.798949528, 0.808950542, 0.818951694, 0.828952778, 0.838953861, 0.848954889, 0.858956042, 0.868957042, 0.878958208, 0.888959208, 0.898960361, 0.908961375, 0.918962583, 0.928963528, 0.938964681, 0.948965694, 0.958966847, 0.968967861, 0.978969028, 0.988970042, 0.998971181, 1.008972236, 1.018973347, 1.028974375, 1.038975514] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:48.332" endtime="20201112 09:56:48.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:48.320" endtime="20201112 09:56:48.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:48.344" endtime="20201112 09:56:48.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:48.352" endtime="20201112 09:56:48.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:48.348" endtime="20201112 09:56:48.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:48.339" endtime="20201112 09:56:48.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:45.727" endtime="20201112 09:56:48.378"></status>
</kw>
<msg timestamp="20201112 09:56:48.379" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:48.402" endtime="20201112 09:56:50.521"></status>
</kw>
<msg timestamp="20201112 09:56:50.523" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 37839743, 'wakeups': [37849790, 37859789, 37869789, 37879789, 37889789...</msg>
<status status="PASS" starttime="20201112 09:56:48.398" endtime="20201112 09:56:50.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.530" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 37839743, 'wakeups': [37849790, 37859789, 37869789, 37879789, 37889789...</msg>
<status status="PASS" starttime="20201112 09:56:50.525" endtime="20201112 09:56:50.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:50.533" endtime="20201112 09:56:50.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:48.389" endtime="20201112 09:56:50.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:48.384" endtime="20201112 09:56:50.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:50.546" level="INFO">${RESULT} = {'start-time': 37839743, 'wakeups': [37849790, 37859789, 37869789, 37879789, 37889789, 37899789, 37909789, 37919789, 37929789, 37939789, 37949789, 37959789, 37969789, 37979789, 37989789, 37999789, 380...</msg>
<status status="PASS" starttime="20201112 09:56:50.542" endtime="20201112 09:56:50.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.556" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:50.554" endtime="20201112 09:56:50.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.561" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:50.559" endtime="20201112 09:56:50.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.548" endtime="20201112 09:56:50.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.574" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:50.571" endtime="20201112 09:56:50.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.578" level="INFO">VALUE: 37839743</msg>
<status status="PASS" starttime="20201112 09:56:50.576" endtime="20201112 09:56:50.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.565" endtime="20201112 09:56:50.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.591" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:50.588" endtime="20201112 09:56:50.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.596" level="INFO">VALUE: [37849790, 37859789, 37869789, 37879789, 37889789, 37899789, 37909789, 37919789, 37929789, 37939789, 37949789, 37959789, 37969789, 37979789, 37989789, 37999789, 38009789, 38019789, 38029789, 38039789, 38049789, 38059789, 38069789, 38079789, 38089789, 38099789, 38109789, 38119789, 38129789, 38139789, 38149789, 38159789, 38169789, 38179789, 38189789, 38199789, 38209789, 38219789, 38229789, 38239789, 38249789, 38259789, 38269789, 38279789, 38289789, 38299789, 38309789, 38319789, 38329789, 38339789, 38349789, 38359789, 38369789, 38379789, 38389789, 38399789, 38409789, 38419789, 38429789, 38439789, 38449789, 38459789, 38469789, 38479789, 38489789, 38499789, 38509789, 38519789, 38529789, 38539789, 38549789, 38559789, 38569789, 38579789, 38589789, 38599789, 38609789, 38619789, 38629789, 38639789, 38649789, 38659789, 38669789, 38679789, 38689789, 38699789, 38709789, 38719789, 38729789, 38739789, 38749789, 38759789, 38769789, 38779789, 38789789, 38799789, 38809789, 38819789, 38829789, 38839789]</msg>
<status status="PASS" starttime="20201112 09:56:50.593" endtime="20201112 09:56:50.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.582" endtime="20201112 09:56:50.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:50.615" endtime="20201112 09:56:50.961"></status>
</kw>
<msg timestamp="20201112 09:56:50.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040547903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050596597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:50.612" endtime="20201112 09:56:50.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:50.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040547903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050596597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:50.970" endtime="20201112 09:56:50.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:50.987" endtime="20201112 09:56:50.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.604" endtime="20201112 09:56:50.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:50.599" endtime="20201112 09:56:50.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:51.051" level="INFO">${RESULT} = {'diff': [0, 0.010048693999999997, 0.010000500000000002, 0.010001014000000003, 0.010001152999999999, 0.010001014000000003, 0.010001152999999999, 0.01000101299999999, 0.010001139000000006, 0.0100010139...</msg>
<status status="PASS" starttime="20201112 09:56:50.996" endtime="20201112 09:56:51.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:51.063" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:56:51.060" endtime="20201112 09:56:51.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:51.067" level="INFO">VALUE: 0.040547903</msg>
<status status="PASS" starttime="20201112 09:56:51.065" endtime="20201112 09:56:51.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.054" endtime="20201112 09:56:51.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:51.081" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:51.079" endtime="20201112 09:56:51.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:51.086" level="INFO">VALUE: [0.050596597, 0.060597097, 0.070598111, 0.080599264, 0.090600278, 0.100601431, 0.110602444, 0.120603583, 0.130604597, 0.140605764, 0.150606764, 0.160607903, 0.170608917, 0.180610069, 0.190611083, 0.200612222, 0.210613236, 0.220614389, 0.230615417, 0.240616556, 0.250617556, 0.260618792, 0.270619722, 0.280620875, 0.290621903, 0.300623042, 0.310624042, 0.320625208, 0.330626222, 0.340627361, 0.350628361, 0.360629514, 0.370630528, 0.380631708, 0.390632736, 0.400633861, 0.410634861, 0.420636014, 0.430637028, 0.440638222, 0.450639181, 0.460640333, 0.470641347, 0.4806425, 0.490643514, 0.500644653, 0.510645667, 0.520646819, 0.530647847, 0.540649042, 0.550649986, 0.560651139, 0.570652181, 0.580653319, 0.590654333, 0.600655472, 0.610656472, 0.620657625, 0.630658708, 0.640659819, 0.650660806, 0.660661972, 0.670662986, 0.680664181, 0.690665181, 0.700666278, 0.710667292, 0.720668444, 0.730669472, 0.740670611, 0.750671625, 0.760672819, 0.770673792, 0.780674931, 0.790675944, 0.800677097, 0.810678111, 0.820679264, 0.830680278, 0.840681444, 0.850682431, 0.860683583, 0.870684611, 0.88068575, 0.890686764, 0.900687931, 0.910688931, 0.920690083, 0.930691097, 0.940692236, 0.950693264, 0.960694431, 0.970695431, 0.980696583, 0.990697597, 1.000698736, 1.010699736, 1.020700889, 1.030701903, 1.040703069] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:51.083" endtime="20201112 09:56:51.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.071" endtime="20201112 09:56:51.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:51.095" endtime="20201112 09:56:51.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:51.103" endtime="20201112 09:56:51.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.099" endtime="20201112 09:56:51.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.090" endtime="20201112 09:56:51.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:48.380" endtime="20201112 09:56:51.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.970" endtime="20201112 09:56:51.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:42.968" endtime="20201112 09:56:51.130"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:51.136" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:51.158" endtime="20201112 09:56:53.266"></status>
</kw>
<msg timestamp="20201112 09:56:53.266" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 40595561, 'wakeups': [40605621, 40615620, 40625620, 40635620, 40645620...</msg>
<status status="PASS" starttime="20201112 09:56:51.154" endtime="20201112 09:56:53.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.270" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 40595561, 'wakeups': [40605621, 40615620, 40625620, 40635620, 40645620...</msg>
<status status="PASS" starttime="20201112 09:56:53.268" endtime="20201112 09:56:53.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.271" endtime="20201112 09:56:53.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.147" endtime="20201112 09:56:53.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.141" endtime="20201112 09:56:53.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:53.277" level="INFO">${RESULT} = {'start-time': 40595561, 'wakeups': [40605621, 40615620, 40625620, 40635620, 40645620, 40655620, 40665620, 40675620, 40685620, 40695620, 40705620, 40715620, 40725620, 40735620, 40745620, 40755620, 407...</msg>
<status status="PASS" starttime="20201112 09:56:53.275" endtime="20201112 09:56:53.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.290" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:53.281" endtime="20201112 09:56:53.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.292" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:53.291" endtime="20201112 09:56:53.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.278" endtime="20201112 09:56:53.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.298" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:53.297" endtime="20201112 09:56:53.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.301" level="INFO">VALUE: 40595561</msg>
<status status="PASS" starttime="20201112 09:56:53.299" endtime="20201112 09:56:53.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.294" endtime="20201112 09:56:53.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.307" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:53.305" endtime="20201112 09:56:53.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.309" level="INFO">VALUE: [40605621, 40615620, 40625620, 40635620, 40645620, 40655620, 40665620, 40675620, 40685620, 40695620, 40705620, 40715620, 40725620, 40735620, 40745620, 40755620, 40765620, 40775620, 40785620, 40795620, 40805620, 40815620, 40825620, 40835620, 40845620, 40855620, 40865620, 40875620, 40885620, 40895620, 40905620, 40915620, 40925620, 40935620, 40945620, 40955620, 40965620, 40975620, 40985620, 40995620, 41005620, 41015620, 41025620, 41035620, 41045620, 41055620, 41065620, 41075620, 41085620, 41095620, 41105620, 41115620, 41125620, 41135620, 41145620, 41155620, 41165620, 41175620, 41185620, 41195620, 41205620, 41215620, 41225620, 41235620, 41245620, 41255620, 41265620, 41275620, 41285620, 41295620, 41305620, 41315620, 41325620, 41335620, 41345620, 41355620, 41365620, 41375620, 41385620, 41395620, 41405620, 41415620, 41425620, 41435620, 41445620, 41455620, 41465620, 41475620, 41485620, 41495620, 41505620, 41515620, 41525620, 41535620, 41545620, 41555620, 41565620, 41575620, 41585620, 41595620]</msg>
<status status="PASS" starttime="20201112 09:56:53.308" endtime="20201112 09:56:53.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.302" endtime="20201112 09:56:53.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.319" endtime="20201112 09:56:53.610"></status>
</kw>
<msg timestamp="20201112 09:56:53.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045601208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055662847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:53.318" endtime="20201112 09:56:53.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045601208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055662847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:53.614" endtime="20201112 09:56:53.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.622" endtime="20201112 09:56:53.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.314" endtime="20201112 09:56:53.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.312" endtime="20201112 09:56:53.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:53.650" level="INFO">${RESULT} = {'diff': [0, 0.010061639000000004, 0.010000652999999998, 0.010001014000000003, 0.010001138999999992, 0.010001014000000003, 0.010001152, 0.01000100000000001, 0.01000119499999999, 0.010000971999999997, ...</msg>
<status status="PASS" starttime="20201112 09:56:53.626" endtime="20201112 09:56:53.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.655" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:53.654" endtime="20201112 09:56:53.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.657" level="INFO">VALUE: 0.045601208</msg>
<status status="PASS" starttime="20201112 09:56:53.656" endtime="20201112 09:56:53.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.651" endtime="20201112 09:56:53.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.664" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:53.663" endtime="20201112 09:56:53.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:53.666" level="INFO">VALUE: [0.055662847, 0.0656635, 0.075664514, 0.085665653, 0.095666667, 0.105667819, 0.115668819, 0.125670014, 0.135670986, 0.145672125, 0.155673139, 0.165674306, 0.175675319, 0.185676458, 0.195677458, 0.205678611, 0.215679681, 0.225680764, 0.235681778, 0.245682944, 0.255683931, 0.265685083, 0.275686097, 0.28568725, 0.295688278, 0.305689417, 0.315690417, 0.325691569, 0.335692569, 0.345693736, 0.355694736, 0.365695903, 0.375696917, 0.385698042, 0.395699056, 0.405700222, 0.415701222, 0.425702361, 0.435703444, 0.445704528, 0.455705556, 0.465706722, 0.475707694, 0.485708903, 0.495709861, 0.505711028, 0.515712014, 0.525713167, 0.535714181, 0.545715333, 0.555716333, 0.565717486, 0.5757185, 0.585719653, 0.595720667, 0.605721819, 0.615722819, 0.625723986, 0.635724986, 0.645726139, 0.655727153, 0.665728319, 0.675729306, 0.685730514, 0.695731472, 0.705732611, 0.715733625, 0.725734792, 0.735735833, 0.745736944, 0.755737944, 0.765739097, 0.775740111, 0.785741264, 0.795742292, 0.805743444, 0.815744458, 0.825745583, 0.835746611, 0.84574775, 0.855748778, 0.865749903, 0.875750917, 0.885752083, 0.895753097, 0.905754236, 0.915755236, 0.925756389, 0.935757458, 0.945758556, 0.955759569, 0.965760722, 0.975761736, 0.985762903, 0.995763889, 1.005765042, 1.015766042, 1.025767208, 1.035768208, 1.045769375] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:53.665" endtime="20201112 09:56:53.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.659" endtime="20201112 09:56:53.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.671" endtime="20201112 09:56:53.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:53.675" endtime="20201112 09:56:53.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.673" endtime="20201112 09:56:53.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.669" endtime="20201112 09:56:53.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.137" endtime="20201112 09:56:53.696"></status>
</kw>
<msg timestamp="20201112 09:56:53.696" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:53.707" endtime="20201112 09:56:55.818"></status>
</kw>
<msg timestamp="20201112 09:56:55.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43143751, 'wakeups': [43153812, 43163810, 43173810, 43183810, 43193810...</msg>
<status status="PASS" starttime="20201112 09:56:53.706" endtime="20201112 09:56:55.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.822" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43143751, 'wakeups': [43153812, 43163810, 43173810, 43183810, 43193810...</msg>
<status status="PASS" starttime="20201112 09:56:55.820" endtime="20201112 09:56:55.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:55.823" endtime="20201112 09:56:55.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.702" endtime="20201112 09:56:55.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.699" endtime="20201112 09:56:55.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:55.829" level="INFO">${RESULT} = {'start-time': 43143751, 'wakeups': [43153812, 43163810, 43173810, 43183810, 43193810, 43203810, 43213810, 43223810, 43233810, 43243810, 43253810, 43263810, 43273810, 43283810, 43293810, 43303810, 433...</msg>
<status status="PASS" starttime="20201112 09:56:55.827" endtime="20201112 09:56:55.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.834" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:55.833" endtime="20201112 09:56:55.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.836" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:55.835" endtime="20201112 09:56:55.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.830" endtime="20201112 09:56:55.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.842" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:55.841" endtime="20201112 09:56:55.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.844" level="INFO">VALUE: 43143751</msg>
<status status="PASS" starttime="20201112 09:56:55.843" endtime="20201112 09:56:55.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.838" endtime="20201112 09:56:55.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.851" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:55.849" endtime="20201112 09:56:55.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:55.853" level="INFO">VALUE: [43153812, 43163810, 43173810, 43183810, 43193810, 43203810, 43213810, 43223810, 43233810, 43243810, 43253810, 43263810, 43273810, 43283810, 43293810, 43303810, 43313810, 43323810, 43333810, 43343810, 43353810, 43363810, 43373810, 43383810, 43393810, 43403810, 43413810, 43423810, 43433810, 43443810, 43453810, 43463810, 43473810, 43483810, 43493810, 43503810, 43513810, 43523810, 43533810, 43543810, 43553810, 43563810, 43573810, 43583810, 43593810, 43603810, 43613810, 43623810, 43633810, 43643810, 43653810, 43663810, 43673810, 43683810, 43693810, 43703810, 43713810, 43723810, 43733810, 43743810, 43753810, 43763810, 43773810, 43783810, 43793810, 43803810, 43813810, 43823810, 43833810, 43843810, 43853810, 43863810, 43873810, 43883810, 43893810, 43903810, 43913810, 43923810, 43933810, 43943810, 43953810, 43963810, 43973810, 43983810, 43993810, 44003810, 44013810, 44023810, 44033810, 44043810, 44053810, 44063810, 44073810, 44083810, 44093810, 44103810, 44113810, 44123810, 44133810, 44143810]</msg>
<status status="PASS" starttime="20201112 09:56:55.852" endtime="20201112 09:56:55.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.846" endtime="20201112 09:56:55.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:55.862" endtime="20201112 09:56:56.200"></status>
</kw>
<msg timestamp="20201112 09:56:56.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032859333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:55.861" endtime="20201112 09:56:56.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:56.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032859333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:56.209" endtime="20201112 09:56:56.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:56.226" endtime="20201112 09:56:56.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.857" endtime="20201112 09:56:56.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:55.855" endtime="20201112 09:56:56.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:56.291" level="INFO">${RESULT} = {'diff': [0, 0.010062054999999997, 0.009999639000000005, 0.010000999999999996, 0.010001153000000006, 0.010001042000000002, 0.010001125, 0.010001026999999996, 0.010001152999999999, 0.010001014000000003...</msg>
<status status="PASS" starttime="20201112 09:56:56.235" endtime="20201112 09:56:56.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:56.302" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:56.299" endtime="20201112 09:56:56.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:56.306" level="INFO">VALUE: 0.022797278</msg>
<status status="PASS" starttime="20201112 09:56:56.304" endtime="20201112 09:56:56.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.293" endtime="20201112 09:56:56.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:56.320" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:56.318" endtime="20201112 09:56:56.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:56.325" level="INFO">VALUE: [0.032859333, 0.042858972, 0.052859972, 0.062861125, 0.072862167, 0.082863292, 0.092864319, 0.102865472, 0.112866486, 0.122867639, 0.132868667, 0.142869806, 0.152870819, 0.162871972, 0.172872986, 0.182874153, 0.192875167, 0.202876306, 0.212877319, 0.222878486, 0.232879486, 0.242880639, 0.252881653, 0.262882819, 0.272883833, 0.282885028, 0.292886, 0.302887194, 0.312888167, 0.322889319, 0.332890333, 0.3428915, 0.352892542, 0.362893694, 0.372894708, 0.382895833, 0.392896847, 0.402898, 0.412899014, 0.422900167, 0.432901194, 0.442902333, 0.452903361, 0.4629045, 0.472905514, 0.482906681, 0.492907681, 0.502908847, 0.512909861, 0.522911083, 0.532912056, 0.542913181, 0.552914194, 0.562915347, 0.572916375, 0.582917528, 0.592918569, 0.602919708, 0.612920708, 0.622921861, 0.632922875, 0.642924056, 0.652925056, 0.662926194, 0.672927222, 0.682928375, 0.692929389, 0.702930542, 0.712931569, 0.722932708, 0.732933736, 0.742934875, 0.752935889, 0.762937042, 0.772938056, 0.782939222, 0.79294025, 0.802941389, 0.812942403, 0.822943583, 0.832944569, 0.842945764, 0.852946736, 0.862947889, 0.872948903, 0.882950069, 0.892951083, 0.902952236, 0.91295325, 0.922954417, 0.932955417, 0.942956625, 0.952957597, 0.962958806, 0.97295975, 0.982960903, 0.992961917, 1.002963069, 1.012964111, 1.022965236] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:56.322" endtime="20201112 09:56:56.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.310" endtime="20201112 09:56:56.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:56.334" endtime="20201112 09:56:56.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:56.342" endtime="20201112 09:56:56.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.338" endtime="20201112 09:56:56.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.329" endtime="20201112 09:56:56.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:53.697" endtime="20201112 09:56:56.368"></status>
</kw>
<msg timestamp="20201112 09:56:56.368" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:56.390" endtime="20201112 09:56:58.511"></status>
</kw>
<msg timestamp="20201112 09:56:58.512" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45827454, 'wakeups': [45837515, 45847513, 45857513, 45867513, 45877513...</msg>
<status status="PASS" starttime="20201112 09:56:56.386" endtime="20201112 09:56:58.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.526" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45827454, 'wakeups': [45837515, 45847513, 45857513, 45867513, 45877513...</msg>
<status status="PASS" starttime="20201112 09:56:58.521" endtime="20201112 09:56:58.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.528" endtime="20201112 09:56:58.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.379" endtime="20201112 09:56:58.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.373" endtime="20201112 09:56:58.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:58.542" level="INFO">${RESULT} = {'start-time': 45827454, 'wakeups': [45837515, 45847513, 45857513, 45867513, 45877513, 45887513, 45897513, 45907513, 45917513, 45927513, 45937513, 45947513, 45957513, 45967513, 45977513, 45987513, 459...</msg>
<status status="PASS" starttime="20201112 09:56:58.537" endtime="20201112 09:56:58.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.552" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:56:58.550" endtime="20201112 09:56:58.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.557" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:56:58.555" endtime="20201112 09:56:58.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.544" endtime="20201112 09:56:58.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.569" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:58.567" endtime="20201112 09:56:58.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.574" level="INFO">VALUE: 45827454</msg>
<status status="PASS" starttime="20201112 09:56:58.572" endtime="20201112 09:56:58.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.561" endtime="20201112 09:56:58.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.587" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:58.585" endtime="20201112 09:56:58.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.592" level="INFO">VALUE: [45837515, 45847513, 45857513, 45867513, 45877513, 45887513, 45897513, 45907513, 45917513, 45927513, 45937513, 45947513, 45957513, 45967513, 45977513, 45987513, 45997513, 46007513, 46017513, 46027513, 46037513, 46047513, 46057513, 46067513, 46077513, 46087513, 46097513, 46107513, 46117513, 46127513, 46137513, 46147513, 46157513, 46167513, 46177513, 46187513, 46197513, 46207513, 46217513, 46227513, 46237513, 46247513, 46257513, 46267513, 46277513, 46287513, 46297513, 46307513, 46317513, 46327513, 46337513, 46347513, 46357513, 46367513, 46377513, 46387513, 46397513, 46407513, 46417513, 46427513, 46437513, 46447513, 46457513, 46467513, 46477513, 46487513, 46497513, 46507513, 46517513, 46527513, 46537513, 46547513, 46557513, 46567513, 46577513, 46587513, 46597513, 46607513, 46617513, 46627513, 46637513, 46647513, 46657513, 46667513, 46677513, 46687513, 46697513, 46707513, 46717513, 46727513, 46737513, 46747513, 46757513, 46767513, 46777513, 46787513, 46797513, 46807513, 46817513, 46827513]</msg>
<status status="PASS" starttime="20201112 09:56:58.589" endtime="20201112 09:56:58.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.578" endtime="20201112 09:56:58.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.613" endtime="20201112 09:56:58.956"></status>
</kw>
<msg timestamp="20201112 09:56:58.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038803333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048865611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:58.610" endtime="20201112 09:56:58.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:56:58.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038803333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048865611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:56:58.960" endtime="20201112 09:56:58.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:58.969" endtime="20201112 09:56:58.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.603" endtime="20201112 09:56:58.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.598" endtime="20201112 09:56:58.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:56:58.997" level="INFO">${RESULT} = {'diff': [0, 0.010062278000000001, 0.009999735999999995, 0.010001027999999995, 0.010001194000000005, 0.010000959000000004, 0.010001222000000004, 0.010000943999999998, 0.010001166999999991, 0.010001000...</msg>
<status status="PASS" starttime="20201112 09:56:58.973" endtime="20201112 09:56:58.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:59.003" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:56:59.001" endtime="20201112 09:56:59.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:59.005" level="INFO">VALUE: 0.038803333</msg>
<status status="PASS" starttime="20201112 09:56:59.004" endtime="20201112 09:56:59.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:58.998" endtime="20201112 09:56:59.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:56:59.011" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:56:59.010" endtime="20201112 09:56:59.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:56:59.014" level="INFO">VALUE: [0.048865611, 0.058865347, 0.068866375, 0.078867569, 0.088868528, 0.09886975, 0.108870694, 0.118871861, 0.128872861, 0.138874014, 0.148875056, 0.158876167, 0.168877181, 0.178878333, 0.188879417, 0.198880514, 0.208881514, 0.218882667, 0.228883694, 0.238884847, 0.248885847, 0.258887, 0.268888014, 0.278889167, 0.288890181, 0.298891333, 0.308892361, 0.3188935, 0.328894528, 0.338895667, 0.348896694, 0.358897847, 0.368898861, 0.378900028, 0.388901069, 0.398902181, 0.408903181, 0.418904333, 0.428905347, 0.4389065, 0.448907514, 0.458908667, 0.468909681, 0.478910833, 0.488911861, 0.498913, 0.508914028, 0.518915167, 0.528916194, 0.538917361, 0.548918347, 0.5589195, 0.568920528, 0.578921681, 0.588922681, 0.598923861, 0.608924847, 0.618926, 0.628927014, 0.638928167, 0.648929181, 0.658930361, 0.668931403, 0.678932556, 0.688933514, 0.698934736, 0.708935708, 0.718936847, 0.728937861, 0.738939028, 0.748940042, 0.758941194, 0.768942194, 0.778943375, 0.788944361, 0.798945514, 0.808946528, 0.818947681, 0.828948708, 0.838949875, 0.848950861, 0.858952014, 0.868953028, 0.878954181, 0.888955194, 0.898956361, 0.908957375, 0.918958542, 0.928959528, 0.938960681, 0.948961694, 0.958962861, 0.968963875, 0.978965014, 0.988966042, 0.998967194, 1.008968208, 1.018969361, 1.028970403, 1.038971528] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:56:59.012" endtime="20201112 09:56:59.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:59.006" endtime="20201112 09:56:59.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:59.018" endtime="20201112 09:56:59.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:56:59.022" endtime="20201112 09:56:59.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:59.020" endtime="20201112 09:56:59.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:59.015" endtime="20201112 09:56:59.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:56.370" endtime="20201112 09:56:59.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.133" endtime="20201112 09:56:59.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:51.131" endtime="20201112 09:56:59.047"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:56:59.053" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:56:59.076" endtime="20201112 09:57:01.196"></status>
</kw>
<msg timestamp="20201112 09:57:01.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48513765, 'wakeups': [48523840, 48533839, 48543839, 48553839, 48563839...</msg>
<status status="PASS" starttime="20201112 09:56:59.073" endtime="20201112 09:57:01.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.204" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48513765, 'wakeups': [48523840, 48533839, 48543839, 48553839, 48563839...</msg>
<status status="PASS" starttime="20201112 09:57:01.200" endtime="20201112 09:57:01.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.207" endtime="20201112 09:57:01.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:59.065" endtime="20201112 09:57:01.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:59.058" endtime="20201112 09:57:01.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:01.220" level="INFO">${RESULT} = {'start-time': 48513765, 'wakeups': [48523840, 48533839, 48543839, 48553839, 48563839, 48573839, 48583839, 48593839, 48603839, 48613839, 48623839, 48633839, 48643839, 48653839, 48663839, 48673839, 486...</msg>
<status status="PASS" starttime="20201112 09:57:01.215" endtime="20201112 09:57:01.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.231" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:01.229" endtime="20201112 09:57:01.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.236" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:01.234" endtime="20201112 09:57:01.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.223" endtime="20201112 09:57:01.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.248" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:01.246" endtime="20201112 09:57:01.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.253" level="INFO">VALUE: 48513765</msg>
<status status="PASS" starttime="20201112 09:57:01.251" endtime="20201112 09:57:01.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.239" endtime="20201112 09:57:01.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.266" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:01.263" endtime="20201112 09:57:01.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.271" level="INFO">VALUE: [48523840, 48533839, 48543839, 48553839, 48563839, 48573839, 48583839, 48593839, 48603839, 48613839, 48623839, 48633839, 48643839, 48653839, 48663839, 48673839, 48683839, 48693839, 48703839, 48713839, 48723839, 48733839, 48743839, 48753839, 48763839, 48773839, 48783839, 48793839, 48803839, 48813839, 48823839, 48833839, 48843839, 48853839, 48863839, 48873839, 48883839, 48893839, 48903839, 48913839, 48923839, 48933839, 48943839, 48953839, 48963839, 48973839, 48983839, 48993839, 49003839, 49013839, 49023839, 49033839, 49043839, 49053839, 49063839, 49073839, 49083839, 49093839, 49103839, 49113839, 49123839, 49133839, 49143839, 49153839, 49163839, 49173839, 49183839, 49193839, 49203839, 49213839, 49223839, 49233839, 49243839, 49253839, 49263839, 49273839, 49283839, 49293839, 49303839, 49313839, 49323839, 49333839, 49343839, 49353839, 49363839, 49373839, 49383839, 49393839, 49403839, 49413839, 49423839, 49433839, 49443839, 49453839, 49463839, 49473839, 49483839, 49493839, 49503839, 49513839]</msg>
<status status="PASS" starttime="20201112 09:57:01.268" endtime="20201112 09:57:01.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.257" endtime="20201112 09:57:01.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.290" endtime="20201112 09:57:01.637"></status>
</kw>
<msg timestamp="20201112 09:57:01.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046125847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056202278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:01.287" endtime="20201112 09:57:01.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046125847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056202278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:01.646" endtime="20201112 09:57:01.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.663" endtime="20201112 09:57:01.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.280" endtime="20201112 09:57:01.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.275" endtime="20201112 09:57:01.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:01.727" level="INFO">${RESULT} = {'diff': [0, 0.010076431000000004, 0.010000264000000002, 0.010001026999999996, 0.010001139000000006, 0.010001013999999989, 0.010001139000000006, 0.010001082999999994, 0.010001084000000007, 0.010001027...</msg>
<status status="PASS" starttime="20201112 09:57:01.672" endtime="20201112 09:57:01.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.741" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:01.737" endtime="20201112 09:57:01.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.746" level="INFO">VALUE: 0.046125847</msg>
<status status="PASS" starttime="20201112 09:57:01.743" endtime="20201112 09:57:01.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.730" endtime="20201112 09:57:01.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.762" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:01.759" endtime="20201112 09:57:01.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:01.768" level="INFO">VALUE: [0.056202278, 0.066202542, 0.076203569, 0.086204708, 0.096205722, 0.106206861, 0.116207944, 0.126209028, 0.136210056, 0.146211194, 0.156212208, 0.166213375, 0.176214375, 0.186215528, 0.196216542, 0.206217681, 0.216218708, 0.226219847, 0.236220861, 0.246222014, 0.256223028, 0.266224194, 0.276225194, 0.286226347, 0.296227361, 0.306228583, 0.316229528, 0.326230694, 0.336231708, 0.346232833, 0.356233847, 0.366235028, 0.376236028, 0.386237181, 0.396238181, 0.406239347, 0.416240347, 0.4262415, 0.436242528, 0.446243667, 0.456244694, 0.466245847, 0.476246861, 0.486248014, 0.496249028, 0.506250167, 0.516251194, 0.526252319, 0.536253333, 0.5462545, 0.5562555, 0.566256653, 0.576257667, 0.586258833, 0.596259833, 0.606261, 0.616262014, 0.626263153, 0.636264167, 0.646265319, 0.656266333, 0.666267486, 0.676268514, 0.686269681, 0.696270667, 0.706271819, 0.716272861, 0.726273986, 0.736275, 0.746276153, 0.756277167, 0.766278347, 0.776279347, 0.786280486, 0.7962815, 0.806282667, 0.816283667, 0.826284819, 0.836285861, 0.846287, 0.856288, 0.866289153, 0.876290167, 0.886291319, 0.896292333, 0.906293486, 0.9162945, 0.926295653, 0.93629675, 0.946297819, 0.956298833, 0.966299986, 0.976301, 0.986302153, 0.996303181, 1.006304333, 1.016305333, 1.0263065, 1.0363075, 1.046308653] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:01.766" endtime="20201112 09:57:01.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.750" endtime="20201112 09:57:01.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.780" endtime="20201112 09:57:01.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:01.789" endtime="20201112 09:57:01.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.784" endtime="20201112 09:57:01.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.774" endtime="20201112 09:57:01.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:59.054" endtime="20201112 09:57:01.818"></status>
</kw>
<msg timestamp="20201112 09:57:01.819" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:01.844" endtime="20201112 09:57:03.965"></status>
</kw>
<msg timestamp="20201112 09:57:03.967" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51282583, 'wakeups': [51292658, 51302657, 51312657, 51322657, 51332657...</msg>
<status status="PASS" starttime="20201112 09:57:01.840" endtime="20201112 09:57:03.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.974" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51282583, 'wakeups': [51292658, 51302657, 51312657, 51322657, 51332657...</msg>
<status status="PASS" starttime="20201112 09:57:03.969" endtime="20201112 09:57:03.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:03.976" endtime="20201112 09:57:03.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.831" endtime="20201112 09:57:03.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.825" endtime="20201112 09:57:03.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:03.984" level="INFO">${RESULT} = {'start-time': 51282583, 'wakeups': [51292658, 51302657, 51312657, 51322657, 51332657, 51342657, 51352657, 51362657, 51372657, 51382657, 51392657, 51402657, 51412657, 51422657, 51432657, 51442657, 514...</msg>
<status status="PASS" starttime="20201112 09:57:03.982" endtime="20201112 09:57:03.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.989" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:03.988" endtime="20201112 09:57:03.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.991" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:03.990" endtime="20201112 09:57:03.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.985" endtime="20201112 09:57:03.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.997" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:03.996" endtime="20201112 09:57:03.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:03.999" level="INFO">VALUE: 51282583</msg>
<status status="PASS" starttime="20201112 09:57:03.998" endtime="20201112 09:57:04.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:03.993" endtime="20201112 09:57:04.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.005" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:04.004" endtime="20201112 09:57:04.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.015" level="INFO">VALUE: [51292658, 51302657, 51312657, 51322657, 51332657, 51342657, 51352657, 51362657, 51372657, 51382657, 51392657, 51402657, 51412657, 51422657, 51432657, 51442657, 51452657, 51462657, 51472657, 51482657, 51492657, 51502657, 51512657, 51522657, 51532657, 51542657, 51552657, 51562657, 51572657, 51582657, 51592657, 51602657, 51612657, 51622657, 51632657, 51642657, 51652657, 51662657, 51672657, 51682657, 51692657, 51702657, 51712657, 51722657, 51732657, 51742657, 51752657, 51762657, 51772657, 51782657, 51792657, 51802657, 51812657, 51822657, 51832657, 51842657, 51852657, 51862657, 51872657, 51882657, 51892657, 51902657, 51912657, 51922657, 51932657, 51942657, 51952657, 51962657, 51972657, 51982657, 51992657, 52002657, 52012657, 52022657, 52032657, 52042657, 52052657, 52062657, 52072657, 52082657, 52092657, 52102657, 52112657, 52122657, 52132657, 52142657, 52152657, 52162657, 52172657, 52182657, 52192657, 52202657, 52212657, 52222657, 52232657, 52242657, 52252657, 52262657, 52272657, 52282657]</msg>
<status status="PASS" starttime="20201112 09:57:04.013" endtime="20201112 09:57:04.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.001" endtime="20201112 09:57:04.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:04.024" endtime="20201112 09:57:04.338"></status>
</kw>
<msg timestamp="20201112 09:57:04.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045655278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055731694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:04.023" endtime="20201112 09:57:04.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045655278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055731694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:04.347" endtime="20201112 09:57:04.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:04.364" endtime="20201112 09:57:04.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.019" endtime="20201112 09:57:04.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.017" endtime="20201112 09:57:04.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:04.426" level="INFO">${RESULT} = {'diff': [0, 0.010076415999999998, 0.010000263999999995, 0.010001014000000003, 0.010001167000000005, 0.010001014000000003, 0.010001138999999992, 0.010001014000000003, 0.010001152, 0.01000100000000001,...</msg>
<status status="PASS" starttime="20201112 09:57:04.373" endtime="20201112 09:57:04.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.437" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:04.435" endtime="20201112 09:57:04.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.442" level="INFO">VALUE: 0.045655278</msg>
<status status="PASS" starttime="20201112 09:57:04.440" endtime="20201112 09:57:04.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.428" endtime="20201112 09:57:04.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.456" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:04.453" endtime="20201112 09:57:04.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:04.461" level="INFO">VALUE: [0.055731694, 0.065731958, 0.075732972, 0.085734139, 0.095735153, 0.105736292, 0.115737306, 0.125738458, 0.135739458, 0.145740611, 0.155741625, 0.165742764, 0.175743833, 0.185744986, 0.195745944, 0.205747139, 0.215748111, 0.22574925, 0.235750278, 0.245751431, 0.2557525, 0.265753597, 0.275754583, 0.28575575, 0.29575675, 0.305757903, 0.315758931, 0.325760069, 0.335761097, 0.345762278, 0.355763236, 0.365764389, 0.375765403, 0.385766569, 0.395767583, 0.405768708, 0.415769736, 0.425770903, 0.435771889, 0.445773042, 0.455774056, 0.465775222, 0.475776264, 0.485777361, 0.495778375, 0.505779556, 0.515780556, 0.525781708, 0.535782708, 0.545783861, 0.555784889, 0.565786042, 0.575787042, 0.585788181, 0.595789194, 0.605790347, 0.615791361, 0.625792528, 0.635793528, 0.645794681, 0.655795694, 0.665796847, 0.675797847, 0.685799, 0.695800014, 0.705801167, 0.715802181, 0.725803375, 0.735804347, 0.7458055, 0.755806514, 0.765807694, 0.775808681, 0.785809819, 0.795810833, 0.805811986, 0.815813, 0.825814167, 0.835815167, 0.845816319, 0.855817333, 0.8658185, 0.875819486, 0.885820639, 0.895821653, 0.905822833, 0.915823819, 0.925824972, 0.935825986, 0.945827139, 0.955828236, 0.965829292, 0.975830333, 0.985831458, 0.995832486, 1.005833625, 1.015834639, 1.025835792, 1.035836819, 1.045837986] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:04.458" endtime="20201112 09:57:04.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.446" endtime="20201112 09:57:04.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:04.470" endtime="20201112 09:57:04.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:04.478" endtime="20201112 09:57:04.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.474" endtime="20201112 09:57:04.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.465" endtime="20201112 09:57:04.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:01.820" endtime="20201112 09:57:04.507"></status>
</kw>
<msg timestamp="20201112 09:57:04.507" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:04.529" endtime="20201112 09:57:06.648"></status>
</kw>
<msg timestamp="20201112 09:57:06.650" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53966771, 'wakeups': [53976846, 53986845, 53996845, 54006845, 54016845...</msg>
<status status="PASS" starttime="20201112 09:57:04.525" endtime="20201112 09:57:06.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.657" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53966771, 'wakeups': [53976846, 53986845, 53996845, 54006845, 54016845...</msg>
<status status="PASS" starttime="20201112 09:57:06.652" endtime="20201112 09:57:06.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:06.659" endtime="20201112 09:57:06.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.518" endtime="20201112 09:57:06.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.513" endtime="20201112 09:57:06.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:06.672" level="INFO">${RESULT} = {'start-time': 53966771, 'wakeups': [53976846, 53986845, 53996845, 54006845, 54016845, 54026845, 54036845, 54046845, 54056845, 54066845, 54076845, 54086845, 54096845, 54106845, 54116845, 54126845, 541...</msg>
<status status="PASS" starttime="20201112 09:57:06.668" endtime="20201112 09:57:06.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.683" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:06.681" endtime="20201112 09:57:06.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.687" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:06.685" endtime="20201112 09:57:06.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.674" endtime="20201112 09:57:06.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.700" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:06.698" endtime="20201112 09:57:06.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.705" level="INFO">VALUE: 53966771</msg>
<status status="PASS" starttime="20201112 09:57:06.702" endtime="20201112 09:57:06.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.691" endtime="20201112 09:57:06.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.717" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:06.715" endtime="20201112 09:57:06.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:06.722" level="INFO">VALUE: [53976846, 53986845, 53996845, 54006845, 54016845, 54026845, 54036845, 54046845, 54056845, 54066845, 54076845, 54086845, 54096845, 54106845, 54116845, 54126845, 54136845, 54146845, 54156845, 54166845, 54176845, 54186845, 54196845, 54206845, 54216845, 54226845, 54236845, 54246845, 54256845, 54266845, 54276845, 54286845, 54296845, 54306845, 54316845, 54326845, 54336845, 54346845, 54356845, 54366845, 54376845, 54386845, 54396845, 54406845, 54416845, 54426845, 54436845, 54446845, 54456845, 54466845, 54476845, 54486845, 54496845, 54506845, 54516845, 54526845, 54536845, 54546845, 54556845, 54566845, 54576845, 54586845, 54596845, 54606845, 54616845, 54626845, 54636845, 54646845, 54656845, 54666845, 54676845, 54686845, 54696845, 54706845, 54716845, 54726845, 54736845, 54746845, 54756845, 54766845, 54776845, 54786845, 54796845, 54806845, 54816845, 54826845, 54836845, 54846845, 54856845, 54866845, 54876845, 54886845, 54896845, 54906845, 54916845, 54926845, 54936845, 54946845, 54956845, 54966845]</msg>
<status status="PASS" starttime="20201112 09:57:06.719" endtime="20201112 09:57:06.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.708" endtime="20201112 09:57:06.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:06.741" endtime="20201112 09:57:07.087"></status>
</kw>
<msg timestamp="20201112 09:57:07.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039774944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049851375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:06.738" endtime="20201112 09:57:07.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039774944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049851375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:07.096" endtime="20201112 09:57:07.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.114" endtime="20201112 09:57:07.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.731" endtime="20201112 09:57:07.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:06.726" endtime="20201112 09:57:07.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:07.177" level="INFO">${RESULT} = {'diff': [0, 0.010076431000000004, 0.010000277999999994, 0.010001000000000003, 0.010001152999999999, 0.010001013000000003, 0.010001166999999991, 0.01000100000000001, 0.010001166999999991, 0.0100009860...</msg>
<status status="PASS" starttime="20201112 09:57:07.124" endtime="20201112 09:57:07.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.189" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:57:07.186" endtime="20201112 09:57:07.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.194" level="INFO">VALUE: 0.039774944</msg>
<status status="PASS" starttime="20201112 09:57:07.191" endtime="20201112 09:57:07.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.179" endtime="20201112 09:57:07.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.208" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:07.206" endtime="20201112 09:57:07.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:07.213" level="INFO">VALUE: [0.049851375, 0.059851653, 0.069852653, 0.079853806, 0.089854819, 0.099855986, 0.109856986, 0.119858153, 0.129859139, 0.139860292, 0.149861306, 0.159862458, 0.169863514, 0.179864653, 0.189865639, 0.199866778, 0.209867792, 0.219868944, 0.229869972, 0.239871139, 0.249872111, 0.259873278, 0.269874278, 0.279875444, 0.289876444, 0.299877611, 0.309878625, 0.319879833, 0.329880806, 0.339881917, 0.349882931, 0.359884069, 0.369885083, 0.379886292, 0.389887264, 0.399888403, 0.409889417, 0.419890569, 0.429891569, 0.439892736, 0.449893736, 0.459894889, 0.469895903, 0.479897056, 0.489898069, 0.499899222, 0.509900292, 0.519901375, 0.529902403, 0.539903542, 0.549904569, 0.559905708, 0.569906722, 0.579907889, 0.589908917, 0.599910042, 0.609911042, 0.619912222, 0.629913222, 0.639914417, 0.649915375, 0.659916528, 0.669917542, 0.679918708, 0.689919722, 0.699920903, 0.709921861, 0.719923083, 0.729924028, 0.739925181, 0.749926194, 0.759927375, 0.769928361, 0.779929514, 0.789930528, 0.799931681, 0.809932681, 0.819933833, 0.829934847, 0.839936014, 0.849937014, 0.859938222, 0.869939181, 0.879940333, 0.889941375, 0.899942569, 0.9099435, 0.919944681, 0.929945667, 0.939946819, 0.949947847, 0.959949, 0.969950014, 0.979951153, 0.989952181, 0.999953333, 1.009954347, 1.019955472, 1.029956486, 1.039957639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:07.211" endtime="20201112 09:57:07.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.198" endtime="20201112 09:57:07.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.223" endtime="20201112 09:57:07.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:07.231" endtime="20201112 09:57:07.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.227" endtime="20201112 09:57:07.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.218" endtime="20201112 09:57:07.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:04.509" endtime="20201112 09:57:07.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:59.050" endtime="20201112 09:57:07.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:59.048" endtime="20201112 09:57:07.253"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:07.256" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:07.266" endtime="20201112 09:57:09.385"></status>
</kw>
<msg timestamp="20201112 09:57:09.387" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56702205, 'wakeups': [56712296, 56722294, 56732294, 56742294, 56752294...</msg>
<status status="PASS" starttime="20201112 09:57:07.265" endtime="20201112 09:57:09.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.408" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56702205, 'wakeups': [56712296, 56722294, 56732294, 56742294, 56752294...</msg>
<status status="PASS" starttime="20201112 09:57:09.389" endtime="20201112 09:57:09.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:09.409" endtime="20201112 09:57:09.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.261" endtime="20201112 09:57:09.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.258" endtime="20201112 09:57:09.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:09.417" level="INFO">${RESULT} = {'start-time': 56702205, 'wakeups': [56712296, 56722294, 56732294, 56742294, 56752294, 56762294, 56772294, 56782294, 56792294, 56802294, 56812294, 56822294, 56832294, 56842294, 56852294, 56862294, 568...</msg>
<status status="PASS" starttime="20201112 09:57:09.414" endtime="20201112 09:57:09.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.422" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:09.421" endtime="20201112 09:57:09.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.424" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:09.423" endtime="20201112 09:57:09.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.418" endtime="20201112 09:57:09.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.430" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:09.429" endtime="20201112 09:57:09.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.432" level="INFO">VALUE: 56702205</msg>
<status status="PASS" starttime="20201112 09:57:09.431" endtime="20201112 09:57:09.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.426" endtime="20201112 09:57:09.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.438" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:09.437" endtime="20201112 09:57:09.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.440" level="INFO">VALUE: [56712296, 56722294, 56732294, 56742294, 56752294, 56762294, 56772294, 56782294, 56792294, 56802294, 56812294, 56822294, 56832294, 56842294, 56852294, 56862294, 56872294, 56882294, 56892294, 56902294, 56912294, 56922294, 56932294, 56942294, 56952294, 56962294, 56972294, 56982294, 56992294, 57002294, 57012294, 57022294, 57032294, 57042294, 57052294, 57062294, 57072294, 57082294, 57092294, 57102294, 57112294, 57122294, 57132294, 57142294, 57152294, 57162294, 57172294, 57182294, 57192294, 57202294, 57212294, 57222294, 57232294, 57242294, 57252294, 57262294, 57272294, 57282294, 57292294, 57302294, 57312294, 57322294, 57332294, 57342294, 57352294, 57362294, 57372294, 57382294, 57392294, 57402294, 57412294, 57422294, 57432294, 57442294, 57452294, 57462294, 57472294, 57482294, 57492294, 57502294, 57512294, 57522294, 57532294, 57542294, 57552294, 57562294, 57572294, 57582294, 57592294, 57602294, 57612294, 57622294, 57632294, 57642294, 57652294, 57662294, 57672294, 57682294, 57692294, 57702294]</msg>
<status status="PASS" starttime="20201112 09:57:09.439" endtime="20201112 09:57:09.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.434" endtime="20201112 09:57:09.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:09.449" endtime="20201112 09:57:09.741"></status>
</kw>
<msg timestamp="20201112 09:57:09.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025021917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035113917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:09.448" endtime="20201112 09:57:09.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025021917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035113917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:09.745" endtime="20201112 09:57:09.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:09.753" endtime="20201112 09:57:09.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.444" endtime="20201112 09:57:09.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.442" endtime="20201112 09:57:09.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:09.814" level="INFO">${RESULT} = {'diff': [0, 0.010092, 0.009999929999999997, 0.010001000000000003, 0.010001221999999997, 0.010000959000000004, 0.010001138999999992, 0.01000100000000001, 0.010001152, 0.010001042000000002, 0.010001138...</msg>
<status status="PASS" starttime="20201112 09:57:09.759" endtime="20201112 09:57:09.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.825" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:09.823" endtime="20201112 09:57:09.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.830" level="INFO">VALUE: 0.025021917</msg>
<status status="PASS" starttime="20201112 09:57:09.828" endtime="20201112 09:57:09.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.816" endtime="20201112 09:57:09.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.844" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:09.841" endtime="20201112 09:57:09.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:09.848" level="INFO">VALUE: [0.035113917, 0.045113847, 0.055114847, 0.065116069, 0.075117028, 0.085118167, 0.095119167, 0.105120319, 0.115121361, 0.1251225, 0.135123514, 0.145124653, 0.155125653, 0.165126792, 0.175127819, 0.185128958, 0.195129958, 0.205131111, 0.215132125, 0.225133292, 0.235134292, 0.245135431, 0.255136486, 0.265137597, 0.275138611, 0.28513975, 0.295140764, 0.305141944, 0.315142931, 0.325144069, 0.335145097, 0.345146264, 0.35514725, 0.365148389, 0.375149417, 0.385150556, 0.395151556, 0.405152736, 0.415153722, 0.425154889, 0.435155889, 0.445157028, 0.455158042, 0.465159194, 0.475160222, 0.485161375, 0.495162417, 0.505163542, 0.515164542, 0.525165681, 0.535166708, 0.545167833, 0.555168875, 0.565170042, 0.575171056, 0.585172181, 0.595173181, 0.605174333, 0.615175347, 0.6251765, 0.6351775, 0.645178653, 0.655179653, 0.665180806, 0.675181889, 0.685182986, 0.695184, 0.705185139, 0.715186139, 0.725187292, 0.735188306, 0.745189458, 0.755190486, 0.765191611, 0.775192625, 0.785193819, 0.795194806, 0.805195944, 0.815196958, 0.825198097, 0.835199111, 0.845200278, 0.855201292, 0.865202444, 0.875203431, 0.885204597, 0.895205625, 0.905206764, 0.915207792, 0.925208917, 0.935209931, 0.945211083, 0.955212083, 0.96521325, 0.97521425, 0.985215403, 0.995216403, 1.005217597, 1.015218583, 1.025219722] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:09.846" endtime="20201112 09:57:09.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.834" endtime="20201112 09:57:09.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:09.858" endtime="20201112 09:57:09.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:09.866" endtime="20201112 09:57:09.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.862" endtime="20201112 09:57:09.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.853" endtime="20201112 09:57:09.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.257" endtime="20201112 09:57:09.892"></status>
</kw>
<msg timestamp="20201112 09:57:09.893" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:09.914" endtime="20201112 09:57:12.034"></status>
</kw>
<msg timestamp="20201112 09:57:12.036" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59351406, 'wakeups': [59361497, 59371495, 59381495, 59391495, 59401495...</msg>
<status status="PASS" starttime="20201112 09:57:09.910" endtime="20201112 09:57:12.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.043" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59351406, 'wakeups': [59361497, 59371495, 59381495, 59391495, 59401495...</msg>
<status status="PASS" starttime="20201112 09:57:12.038" endtime="20201112 09:57:12.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.045" endtime="20201112 09:57:12.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.903" endtime="20201112 09:57:12.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.898" endtime="20201112 09:57:12.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:12.058" level="INFO">${RESULT} = {'start-time': 59351406, 'wakeups': [59361497, 59371495, 59381495, 59391495, 59401495, 59411495, 59421495, 59431495, 59441495, 59451495, 59461495, 59471495, 59481495, 59491495, 59501495, 59511495, 595...</msg>
<status status="PASS" starttime="20201112 09:57:12.054" endtime="20201112 09:57:12.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.069" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:12.066" endtime="20201112 09:57:12.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.073" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:12.071" endtime="20201112 09:57:12.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.060" endtime="20201112 09:57:12.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.086" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:12.084" endtime="20201112 09:57:12.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.091" level="INFO">VALUE: 59351406</msg>
<status status="PASS" starttime="20201112 09:57:12.089" endtime="20201112 09:57:12.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.078" endtime="20201112 09:57:12.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.104" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:12.101" endtime="20201112 09:57:12.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.109" level="INFO">VALUE: [59361497, 59371495, 59381495, 59391495, 59401495, 59411495, 59421495, 59431495, 59441495, 59451495, 59461495, 59471495, 59481495, 59491495, 59501495, 59511495, 59521495, 59531495, 59541495, 59551495, 59561495, 59571495, 59581495, 59591495, 59601495, 59611495, 59621495, 59631495, 59641495, 59651495, 59661495, 59671495, 59681495, 59691495, 59701495, 59711495, 59721495, 59731495, 59741495, 59751495, 59761495, 59771495, 59781495, 59791495, 59801495, 59811495, 59821495, 59831495, 59841495, 59851495, 59861495, 59871495, 59881495, 59891495, 59901495, 59911495, 59921495, 59931495, 59941495, 59951495, 59961495, 59971495, 59981495, 59991495, 60001495, 60011495, 60021495, 60031495, 60041495, 60051495, 60061495, 60071495, 60081495, 60091495, 60101495, 60111495, 60121495, 60131495, 60141495, 60151495, 60161495, 60171495, 60181495, 60191495, 60201495, 60211495, 60221495, 60231495, 60241495, 60251495, 60261495, 60271495, 60281495, 60291495, 60301495, 60311495, 60321495, 60331495, 60341495, 60351495]</msg>
<status status="PASS" starttime="20201112 09:57:12.106" endtime="20201112 09:57:12.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.095" endtime="20201112 09:57:12.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.131" endtime="20201112 09:57:12.476"></status>
</kw>
<msg timestamp="20201112 09:57:12.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038597764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048690069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:12.128" endtime="20201112 09:57:12.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038597764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048690069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:12.485" endtime="20201112 09:57:12.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.503" endtime="20201112 09:57:12.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.121" endtime="20201112 09:57:12.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.116" endtime="20201112 09:57:12.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:12.565" level="INFO">${RESULT} = {'diff': [0, 0.010092305000000003, 0.009999972999999995, 0.010000986000000003, 0.010001165999999992, 0.010001028000000009, 0.010001166999999991, 0.01000100000000001, 0.010001138999999992, 0.0100010279...</msg>
<status status="PASS" starttime="20201112 09:57:12.511" endtime="20201112 09:57:12.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.575" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:12.573" endtime="20201112 09:57:12.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.580" level="INFO">VALUE: 0.038597764</msg>
<status status="PASS" starttime="20201112 09:57:12.578" endtime="20201112 09:57:12.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.566" endtime="20201112 09:57:12.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.594" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:12.591" endtime="20201112 09:57:12.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:12.598" level="INFO">VALUE: [0.048690069, 0.058690042, 0.068691028, 0.078692194, 0.088693222, 0.098694389, 0.108695389, 0.118696528, 0.128697556, 0.138698708, 0.14869975, 0.158700861, 0.168701903, 0.178703056, 0.188704056, 0.198705264, 0.208706222, 0.218707375, 0.228708389, 0.238709556, 0.248710625, 0.258711722, 0.268712736, 0.278713903, 0.288714903, 0.298716069, 0.308717083, 0.318718236, 0.328719236, 0.338720403, 0.348721417, 0.358722569, 0.368723597, 0.378724736, 0.38872575, 0.398726903, 0.408727917, 0.418729069, 0.428730083, 0.43873125, 0.448732264, 0.458733417, 0.468734458, 0.478735583, 0.488736597, 0.49873775, 0.508738861, 0.518739958, 0.528740944, 0.538742139, 0.548743111, 0.558744264, 0.568745361, 0.578746444, 0.588747472, 0.598748611, 0.608749625, 0.618750792, 0.628751792, 0.638752944, 0.648753986, 0.658755125, 0.668756153, 0.678757306, 0.688758347, 0.698759472, 0.708760472, 0.718761625, 0.728762667, 0.738763806, 0.748764819, 0.758765972, 0.768766986, 0.778768153, 0.788769153, 0.798770319, 0.808771333, 0.8187725, 0.8287735, 0.838774667, 0.848775722, 0.858776833, 0.868777833, 0.878779056, 0.888780097, 0.898781181, 0.908782181, 0.918783333, 0.928784361, 0.938785514, 0.948786514, 0.958787667, 0.968788681, 0.978789847, 0.988790861, 0.998792042, 1.008793028, 1.018794194, 1.028795194, 1.038796347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:12.596" endtime="20201112 09:57:12.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.584" endtime="20201112 09:57:12.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.608" endtime="20201112 09:57:12.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:12.617" endtime="20201112 09:57:12.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.612" endtime="20201112 09:57:12.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.604" endtime="20201112 09:57:12.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:09.894" endtime="20201112 09:57:12.643"></status>
</kw>
<msg timestamp="20201112 09:57:12.644" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:12.665" endtime="20201112 09:57:14.786"></status>
</kw>
<msg timestamp="20201112 09:57:14.787" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62102969, 'wakeups': [62113060, 62123058, 62133058, 62143058, 62153058...</msg>
<status status="PASS" starttime="20201112 09:57:12.662" endtime="20201112 09:57:14.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:14.794" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62102969, 'wakeups': [62113060, 62123058, 62133058, 62143058, 62153058...</msg>
<status status="PASS" starttime="20201112 09:57:14.790" endtime="20201112 09:57:14.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:14.797" endtime="20201112 09:57:14.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.655" endtime="20201112 09:57:14.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.649" endtime="20201112 09:57:14.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:14.806" level="INFO">${RESULT} = {'start-time': 62102969, 'wakeups': [62113060, 62123058, 62133058, 62143058, 62153058, 62163058, 62173058, 62183058, 62193058, 62203058, 62213058, 62223058, 62233058, 62243058, 62253058, 62263058, 622...</msg>
<status status="PASS" starttime="20201112 09:57:14.803" endtime="20201112 09:57:14.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:14.811" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:14.809" endtime="20201112 09:57:14.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:14.813" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:14.812" endtime="20201112 09:57:14.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:14.807" endtime="20201112 09:57:14.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:14.819" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:14.818" endtime="20201112 09:57:14.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:14.821" level="INFO">VALUE: 62102969</msg>
<status status="PASS" starttime="20201112 09:57:14.820" endtime="20201112 09:57:14.821"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:14.814" endtime="20201112 09:57:14.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:14.827" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:14.826" endtime="20201112 09:57:14.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:14.829" level="INFO">VALUE: [62113060, 62123058, 62133058, 62143058, 62153058, 62163058, 62173058, 62183058, 62193058, 62203058, 62213058, 62223058, 62233058, 62243058, 62253058, 62263058, 62273058, 62283058, 62293058, 62303058, 62313058, 62323058, 62333058, 62343058, 62353058, 62363058, 62373058, 62383058, 62393058, 62403058, 62413058, 62423058, 62433058, 62443058, 62453058, 62463058, 62473058, 62483058, 62493058, 62503058, 62513058, 62523058, 62533058, 62543058, 62553058, 62563058, 62573058, 62583058, 62593058, 62603058, 62613058, 62623058, 62633058, 62643058, 62653058, 62663058, 62673058, 62683058, 62693058, 62703058, 62713058, 62723058, 62733058, 62743058, 62753058, 62763058, 62773058, 62783058, 62793058, 62803058, 62813058, 62823058, 62833058, 62843058, 62853058, 62863058, 62873058, 62883058, 62893058, 62903058, 62913058, 62923058, 62933058, 62943058, 62953058, 62963058, 62973058, 62983058, 62993058, 63003058, 63013058, 63023058, 63033058, 63043058, 63053058, 63063058, 63073058, 63083058, 63093058, 63103058]</msg>
<status status="PASS" starttime="20201112 09:57:14.828" endtime="20201112 09:57:14.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:14.823" endtime="20201112 09:57:14.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:14.844" endtime="20201112 09:57:15.137"></status>
</kw>
<msg timestamp="20201112 09:57:15.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038724792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048817444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:14.842" endtime="20201112 09:57:15.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038724792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048817444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:15.141" endtime="20201112 09:57:15.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:15.148" endtime="20201112 09:57:15.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:14.839" endtime="20201112 09:57:15.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:14.831" endtime="20201112 09:57:15.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:15.176" level="INFO">${RESULT} = {'diff': [0, 0.010092652, 0.010000014000000002, 0.010000944999999997, 0.010001152999999999, 0.010001013000000003, 0.010001152999999999, 0.010001014000000003, 0.010001152999999999, 0.010001013999999989...</msg>
<status status="PASS" starttime="20201112 09:57:15.153" endtime="20201112 09:57:15.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.182" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:57:15.180" endtime="20201112 09:57:15.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.184" level="INFO">VALUE: 0.038724792</msg>
<status status="PASS" starttime="20201112 09:57:15.183" endtime="20201112 09:57:15.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.177" endtime="20201112 09:57:15.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.190" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:15.189" endtime="20201112 09:57:15.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:15.192" level="INFO">VALUE: [0.048817444, 0.058817458, 0.068818403, 0.078819556, 0.088820569, 0.098821722, 0.108822736, 0.118823889, 0.128824903, 0.138826069, 0.148827056, 0.158828208, 0.168829264, 0.178830375, 0.188831389, 0.198832542, 0.208833569, 0.218834708, 0.22883575, 0.238836875, 0.248837889, 0.258839042, 0.268840069, 0.278841208, 0.288842222, 0.298843375, 0.308844389, 0.318845556, 0.328846542, 0.338847708, 0.348848778, 0.358849861, 0.368850875, 0.378852042, 0.388853056, 0.398854208, 0.408855208, 0.418856361, 0.428857375, 0.438858542, 0.448859583, 0.458860694, 0.468861722, 0.478862861, 0.488863903, 0.498865042, 0.508866056, 0.518867194, 0.52886825, 0.538869403, 0.548870389, 0.558871528, 0.568872542, 0.578873694, 0.588874764, 0.598875861, 0.608876889, 0.618878028, 0.628879056, 0.638880194, 0.648881208, 0.658882361, 0.668883375, 0.678884528, 0.688885542, 0.698886722, 0.708887708, 0.718888903, 0.728889889, 0.738891028, 0.748892042, 0.758893208, 0.768894222, 0.778895375, 0.788896389, 0.798897569, 0.808898569, 0.818899722, 0.828900736, 0.838901958, 0.848902917, 0.858904042, 0.868905056, 0.878906208, 0.888907222, 0.898908389, 0.908909472, 0.918910542, 0.928911556, 0.938912708, 0.948913736, 0.958914875, 0.968915889, 0.978917056, 0.988918056, 0.998919208, 1.008920236, 1.018921389, 1.028922389, 1.038923542] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:15.191" endtime="20201112 09:57:15.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.185" endtime="20201112 09:57:15.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:15.197" endtime="20201112 09:57:15.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:15.201" endtime="20201112 09:57:15.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.198" endtime="20201112 09:57:15.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.194" endtime="20201112 09:57:15.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:12.645" endtime="20201112 09:57:15.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.254" endtime="20201112 09:57:15.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:07.254" endtime="20201112 09:57:15.222"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:15.225" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:15.235" endtime="20201112 09:57:17.355"></status>
</kw>
<msg timestamp="20201112 09:57:17.356" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64671405, 'wakeups': [64681512, 64691508, 64701508, 64711508, 64721508...</msg>
<status status="PASS" starttime="20201112 09:57:15.233" endtime="20201112 09:57:17.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.360" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64671405, 'wakeups': [64681512, 64691508, 64701508, 64711508, 64721508...</msg>
<status status="PASS" starttime="20201112 09:57:17.358" endtime="20201112 09:57:17.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:17.361" endtime="20201112 09:57:17.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.230" endtime="20201112 09:57:17.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.227" endtime="20201112 09:57:17.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:17.368" level="INFO">${RESULT} = {'start-time': 64671405, 'wakeups': [64681512, 64691508, 64701508, 64711508, 64721508, 64731508, 64741508, 64751508, 64761508, 64771508, 64781508, 64791508, 64801508, 64811508, 64821508, 64831508, 648...</msg>
<status status="PASS" starttime="20201112 09:57:17.366" endtime="20201112 09:57:17.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.373" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:17.372" endtime="20201112 09:57:17.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.375" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:17.374" endtime="20201112 09:57:17.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.369" endtime="20201112 09:57:17.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.381" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:17.380" endtime="20201112 09:57:17.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.384" level="INFO">VALUE: 64671405</msg>
<status status="PASS" starttime="20201112 09:57:17.382" endtime="20201112 09:57:17.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.377" endtime="20201112 09:57:17.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.389" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:17.388" endtime="20201112 09:57:17.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.392" level="INFO">VALUE: [64681512, 64691508, 64701508, 64711508, 64721508, 64731508, 64741508, 64751508, 64761508, 64771508, 64781508, 64791508, 64801508, 64811508, 64821508, 64831508, 64841508, 64851508, 64861508, 64871508, 64881508, 64891508, 64901508, 64911508, 64921508, 64931508, 64941508, 64951508, 64961508, 64971508, 64981508, 64991508, 65001508, 65011508, 65021508, 65031508, 65041508, 65051508, 65061508, 65071508, 65081508, 65091508, 65101508, 65111508, 65121508, 65131508, 65141508, 65151508, 65161508, 65171508, 65181508, 65191508, 65201508, 65211508, 65221508, 65231508, 65241508, 65251508, 65261508, 65271508, 65281508, 65291508, 65301508, 65311508, 65321508, 65331508, 65341508, 65351508, 65361508, 65371508, 65381508, 65391508, 65401508, 65411508, 65421508, 65431508, 65441508, 65451508, 65461508, 65471508, 65481508, 65491508, 65501508, 65511508, 65521508, 65531508, 65541508, 65551508, 65561508, 65571508, 65581508, 65591508, 65601508, 65611508, 65621508, 65631508, 65641508, 65651508, 65661508, 65671508]</msg>
<status status="PASS" starttime="20201112 09:57:17.391" endtime="20201112 09:57:17.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.385" endtime="20201112 09:57:17.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:17.401" endtime="20201112 09:57:17.722"></status>
</kw>
<msg timestamp="20201112 09:57:17.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025212556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03532175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:57:17.399" endtime="20201112 09:57:17.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025212556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03532175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:57:17.731" endtime="20201112 09:57:17.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:17.748" endtime="20201112 09:57:17.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.396" endtime="20201112 09:57:17.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.394" endtime="20201112 09:57:17.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:17.813" level="INFO">${RESULT} = {'diff': [0, 0.010109193999999998, 0.009996597000000003, 0.010000971999999997, 0.010001153000000006, 0.010001014000000003, 0.01000122199999999, 0.010000959000000004, 0.010001152, 0.01000107, 0.0100010...</msg>
<status status="PASS" starttime="20201112 09:57:17.757" endtime="20201112 09:57:17.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.824" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:17.822" endtime="20201112 09:57:17.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.829" level="INFO">VALUE: 0.025212556</msg>
<status status="PASS" starttime="20201112 09:57:17.827" endtime="20201112 09:57:17.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.815" endtime="20201112 09:57:17.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.842" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:17.840" endtime="20201112 09:57:17.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:17.847" level="INFO">VALUE: [0.03532175, 0.045318347, 0.055319319, 0.065320472, 0.075321486, 0.085322708, 0.095323667, 0.105324819, 0.115325889, 0.125326958, 0.135327986, 0.145329139, 0.155330139, 0.165331292, 0.175332306, 0.185333472, 0.195334528, 0.205335625, 0.215336639, 0.225337792, 0.235338792, 0.245339944, 0.255340972, 0.265342111, 0.275343139, 0.285344292, 0.295345278, 0.305346458, 0.315347444, 0.325348597, 0.335349611, 0.345350764, 0.355351778, 0.365352931, 0.375354014, 0.385355097, 0.395356125, 0.405357278, 0.415358319, 0.425359444, 0.435360431, 0.445361583, 0.455362611, 0.46536375, 0.475364778, 0.485365917, 0.495366931, 0.505368111, 0.515369111, 0.52537025, 0.535371292, 0.545372417, 0.555373431, 0.565374583, 0.575375597, 0.58537675, 0.595377764, 0.605378917, 0.615379931, 0.625381083, 0.635382083, 0.645383236, 0.655384264, 0.665385403, 0.675386417, 0.685387583, 0.695388597, 0.70538975, 0.71539075, 0.725391958, 0.735392917, 0.745394069, 0.755395125, 0.765396236, 0.775397264, 0.785398403, 0.795399417, 0.805400569, 0.815401583, 0.825402736, 0.835403764, 0.845404903, 0.855405931, 0.865407069, 0.875408083, 0.885409236, 0.895410278, 0.905411403, 0.915412472, 0.925413583, 0.935414597, 0.94541575, 0.95541675, 0.965417917, 0.975418903, 0.985420083, 0.995421069, 1.005422222, 1.015423236, 1.025424389] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:17.845" endtime="20201112 09:57:17.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.833" endtime="20201112 09:57:17.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:17.856" endtime="20201112 09:57:17.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:17.865" endtime="20201112 09:57:17.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.860" endtime="20201112 09:57:17.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.852" endtime="20201112 09:57:17.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.226" endtime="20201112 09:57:17.890"></status>
</kw>
<msg timestamp="20201112 09:57:17.891" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:17.912" endtime="20201112 09:57:20.032"></status>
</kw>
<msg timestamp="20201112 09:57:20.034" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67349604, 'wakeups': [67359711, 67369707, 67379707, 67389707, 67399707...</msg>
<status status="PASS" starttime="20201112 09:57:17.909" endtime="20201112 09:57:20.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.041" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67349604, 'wakeups': [67359711, 67369707, 67379707, 67389707, 67399707...</msg>
<status status="PASS" starttime="20201112 09:57:20.036" endtime="20201112 09:57:20.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:20.043" endtime="20201112 09:57:20.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.901" endtime="20201112 09:57:20.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.896" endtime="20201112 09:57:20.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:20.056" level="INFO">${RESULT} = {'start-time': 67349604, 'wakeups': [67359711, 67369707, 67379707, 67389707, 67399707, 67409707, 67419707, 67429707, 67439707, 67449707, 67459707, 67469707, 67479707, 67489707, 67499707, 67509707, 675...</msg>
<status status="PASS" starttime="20201112 09:57:20.051" endtime="20201112 09:57:20.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.067" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:20.065" endtime="20201112 09:57:20.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.072" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:20.070" endtime="20201112 09:57:20.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.058" endtime="20201112 09:57:20.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.085" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:20.082" endtime="20201112 09:57:20.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.089" level="INFO">VALUE: 67349604</msg>
<status status="PASS" starttime="20201112 09:57:20.087" endtime="20201112 09:57:20.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.076" endtime="20201112 09:57:20.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.102" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:20.100" endtime="20201112 09:57:20.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.107" level="INFO">VALUE: [67359711, 67369707, 67379707, 67389707, 67399707, 67409707, 67419707, 67429707, 67439707, 67449707, 67459707, 67469707, 67479707, 67489707, 67499707, 67509707, 67519707, 67529707, 67539707, 67549707, 67559707, 67569707, 67579707, 67589707, 67599707, 67609707, 67619707, 67629707, 67639707, 67649707, 67659707, 67669707, 67679707, 67689707, 67699707, 67709707, 67719707, 67729707, 67739707, 67749707, 67759707, 67769707, 67779707, 67789707, 67799707, 67809707, 67819707, 67829707, 67839707, 67849707, 67859707, 67869707, 67879707, 67889707, 67899707, 67909707, 67919707, 67929707, 67939707, 67949707, 67959707, 67969707, 67979707, 67989707, 67999707, 68009707, 68019707, 68029707, 68039707, 68049707, 68059707, 68069707, 68079707, 68089707, 68099707, 68109707, 68119707, 68129707, 68139707, 68149707, 68159707, 68169707, 68179707, 68189707, 68199707, 68209707, 68219707, 68229707, 68239707, 68249707, 68259707, 68269707, 68279707, 68289707, 68299707, 68309707, 68319707, 68329707, 68339707, 68349707]</msg>
<status status="PASS" starttime="20201112 09:57:20.104" endtime="20201112 09:57:20.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.093" endtime="20201112 09:57:20.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:20.128" endtime="20201112 09:57:20.475"></status>
</kw>
<msg timestamp="20201112 09:57:20.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038613833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048722736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:20.125" endtime="20201112 09:57:20.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038613833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048722736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:20.484" endtime="20201112 09:57:20.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:20.501" endtime="20201112 09:57:20.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.117" endtime="20201112 09:57:20.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.111" endtime="20201112 09:57:20.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:20.563" level="INFO">${RESULT} = {'diff': [0, 0.010108903000000002, 0.009996527999999998, 0.010001000000000003, 0.010001152999999999, 0.010001014000000003, 0.010001152, 0.010001055999999994, 0.010001111000000007, 0.010001027999999981...</msg>
<status status="PASS" starttime="20201112 09:57:20.509" endtime="20201112 09:57:20.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.573" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:20.572" endtime="20201112 09:57:20.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.576" level="INFO">VALUE: 0.038613833</msg>
<status status="PASS" starttime="20201112 09:57:20.574" endtime="20201112 09:57:20.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.565" endtime="20201112 09:57:20.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.583" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:20.581" endtime="20201112 09:57:20.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:20.585" level="INFO">VALUE: [0.048722736, 0.058719264, 0.068720264, 0.078721417, 0.088722431, 0.098723583, 0.108724639, 0.11872575, 0.128726778, 0.138727903, 0.148728917, 0.158730083, 0.168731083, 0.178732236, 0.188733236, 0.198734389, 0.208735472, 0.218736556, 0.228737569, 0.238738736, 0.248739736, 0.258740889, 0.268741889, 0.278743056, 0.288744056, 0.298745208, 0.308746222, 0.318747375, 0.328748403, 0.338749542, 0.348750583, 0.358751694, 0.368752708, 0.378753861, 0.388754889, 0.398756028, 0.408757042, 0.418758208, 0.428759208, 0.438760361, 0.448761389, 0.458762528, 0.468763528, 0.478764694, 0.488765694, 0.498766847, 0.508767861, 0.518769014, 0.528770028, 0.538771181, 0.548772194, 0.558773361, 0.568774361, 0.578775528, 0.588776514, 0.598777681, 0.608778694, 0.618779847, 0.628780847, 0.638782056, 0.648783042, 0.658784181, 0.668785181, 0.678786347, 0.688787347, 0.698788528, 0.708789597, 0.718790667, 0.728791667, 0.738792819, 0.748793833, 0.758794986, 0.768796014, 0.778797167, 0.788798222, 0.798799319, 0.808800333, 0.818801486, 0.828802583, 0.838803667, 0.848804667, 0.858805819, 0.868806861, 0.878808, 0.888809, 0.898810167, 0.908811153, 0.918812306, 0.928813333, 0.938814472, 0.9488155, 0.958816639, 0.968817653, 0.978818806, 0.988819819, 0.998820972, 1.008821986, 1.018823194, 1.028824153, 1.038825306] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:20.584" endtime="20201112 09:57:20.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.578" endtime="20201112 09:57:20.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:20.589" endtime="20201112 09:57:20.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:20.594" endtime="20201112 09:57:20.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.591" endtime="20201112 09:57:20.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.587" endtime="20201112 09:57:20.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:17.892" endtime="20201112 09:57:20.615"></status>
</kw>
<msg timestamp="20201112 09:57:20.615" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:20.626" endtime="20201112 09:57:22.745"></status>
</kw>
<msg timestamp="20201112 09:57:22.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70061664, 'wakeups': [70071771, 70081767, 70091767, 70101767, 70111767...</msg>
<status status="PASS" starttime="20201112 09:57:20.624" endtime="20201112 09:57:22.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:22.753" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70061664, 'wakeups': [70071771, 70081767, 70091767, 70101767, 70111767...</msg>
<status status="PASS" starttime="20201112 09:57:22.748" endtime="20201112 09:57:22.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:22.755" endtime="20201112 09:57:22.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.620" endtime="20201112 09:57:22.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.617" endtime="20201112 09:57:22.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:22.769" level="INFO">${RESULT} = {'start-time': 70061664, 'wakeups': [70071771, 70081767, 70091767, 70101767, 70111767, 70121767, 70131767, 70141767, 70151767, 70161767, 70171767, 70181767, 70191767, 70201767, 70211767, 70221767, 702...</msg>
<status status="PASS" starttime="20201112 09:57:22.764" endtime="20201112 09:57:22.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:22.779" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:22.777" endtime="20201112 09:57:22.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:22.784" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:22.782" endtime="20201112 09:57:22.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:22.771" endtime="20201112 09:57:22.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:22.796" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:22.794" endtime="20201112 09:57:22.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:22.801" level="INFO">VALUE: 70061664</msg>
<status status="PASS" starttime="20201112 09:57:22.799" endtime="20201112 09:57:22.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:22.788" endtime="20201112 09:57:22.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:22.814" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:22.811" endtime="20201112 09:57:22.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:22.819" level="INFO">VALUE: [70071771, 70081767, 70091767, 70101767, 70111767, 70121767, 70131767, 70141767, 70151767, 70161767, 70171767, 70181767, 70191767, 70201767, 70211767, 70221767, 70231767, 70241767, 70251767, 70261767, 70271767, 70281767, 70291767, 70301767, 70311767, 70321767, 70331767, 70341767, 70351767, 70361767, 70371767, 70381767, 70391767, 70401767, 70411767, 70421767, 70431767, 70441767, 70451767, 70461767, 70471767, 70481767, 70491767, 70501767, 70511767, 70521767, 70531767, 70541767, 70551767, 70561767, 70571767, 70581767, 70591767, 70601767, 70611767, 70621767, 70631767, 70641767, 70651767, 70661767, 70671767, 70681767, 70691767, 70701767, 70711767, 70721767, 70731767, 70741767, 70751767, 70761767, 70771767, 70781767, 70791767, 70801767, 70811767, 70821767, 70831767, 70841767, 70851767, 70861767, 70871767, 70881767, 70891767, 70901767, 70911767, 70921767, 70931767, 70941767, 70951767, 70961767, 70971767, 70981767, 70991767, 71001767, 71011767, 71021767, 71031767, 71041767, 71051767, 71061767]</msg>
<status status="PASS" starttime="20201112 09:57:22.817" endtime="20201112 09:57:22.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:22.805" endtime="20201112 09:57:22.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:22.839" endtime="20201112 09:57:23.185"></status>
</kw>
<msg timestamp="20201112 09:57:23.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022672764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032781625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:22.835" endtime="20201112 09:57:23.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022672764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032781625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:23.194" endtime="20201112 09:57:23.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:23.211" endtime="20201112 09:57:23.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:22.828" endtime="20201112 09:57:23.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:22.823" endtime="20201112 09:57:23.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:23.276" level="INFO">${RESULT} = {'diff': [0, 0.010108861, 0.009996555999999997, 0.010001013000000003, 0.010001138999999992, 0.010001042000000002, 0.010001125, 0.01000100000000001, 0.010001152999999999, 0.010001027999999995, 0.010001...</msg>
<status status="PASS" starttime="20201112 09:57:23.220" endtime="20201112 09:57:23.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.287" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:57:23.284" endtime="20201112 09:57:23.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.291" level="INFO">VALUE: 0.022672764</msg>
<status status="PASS" starttime="20201112 09:57:23.289" endtime="20201112 09:57:23.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.278" endtime="20201112 09:57:23.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.305" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:23.303" endtime="20201112 09:57:23.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:23.310" level="INFO">VALUE: [0.032781625, 0.042778181, 0.052779194, 0.062780333, 0.072781375, 0.0827825, 0.0927835, 0.102784653, 0.112785681, 0.122786819, 0.132787819, 0.142788972, 0.152789986, 0.162791167, 0.172792167, 0.182793319, 0.192794306, 0.202795458, 0.212796486, 0.222797694, 0.232798639, 0.242799792, 0.252800792, 0.262801944, 0.272802958, 0.282804111, 0.292805139, 0.302806264, 0.312807319, 0.322808431, 0.332809458, 0.342810611, 0.352811625, 0.362812764, 0.372813778, 0.382814931, 0.392815944, 0.402817097, 0.412818097, 0.42281925, 0.43282025, 0.442821417, 0.452822431, 0.462823569, 0.472824597, 0.48282575, 0.49282675, 0.502827903, 0.512828903, 0.522830056, 0.532831125, 0.54283225, 0.55283325, 0.562834389, 0.572835389, 0.582836542, 0.592837569, 0.602838708, 0.612839736, 0.622840875, 0.632841889, 0.642843056, 0.652844125, 0.662845194, 0.672846222, 0.682847361, 0.692848375, 0.702849528, 0.712850556, 0.722851694, 0.732852708, 0.742853889, 0.752854861, 0.762856028, 0.772857028, 0.782858194, 0.792859194, 0.802860361, 0.812861361, 0.822862514, 0.832863514, 0.842864667, 0.852865681, 0.862866833, 0.872867847, 0.882869, 0.892870028, 0.902871236, 0.912872194, 0.922873347, 0.932874333, 0.9428755, 0.952876514, 0.962877653, 0.972878667, 0.982879833, 0.992880833, 1.002881986, 1.012882986, 1.022884139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:23.307" endtime="20201112 09:57:23.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.295" endtime="20201112 09:57:23.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:23.319" endtime="20201112 09:57:23.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:23.327" endtime="20201112 09:57:23.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.323" endtime="20201112 09:57:23.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.314" endtime="20201112 09:57:23.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:20.616" endtime="20201112 09:57:23.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.224" endtime="20201112 09:57:23.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:15.223" endtime="20201112 09:57:23.354"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:57:23.360" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:23.381" endtime="20201112 09:57:25.502"></status>
</kw>
<msg timestamp="20201112 09:57:25.503" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72818845, 'wakeups': [72828971, 72838968, 72848968, 72858968, 728689...</msg>
<status status="PASS" starttime="20201112 09:57:23.378" endtime="20201112 09:57:25.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.510" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72818845, 'wakeups': [72828971, 72838968, 72848968, 72858968, 728689...</msg>
<status status="PASS" starttime="20201112 09:57:25.506" endtime="20201112 09:57:25.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:25.513" endtime="20201112 09:57:25.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.371" endtime="20201112 09:57:25.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.365" endtime="20201112 09:57:25.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:25.525" level="INFO">${RESULT} = {'start-time': 72818845, 'wakeups': [72828971, 72838968, 72848968, 72858968, 72868968, 72878968, 72888968, 72898968, 72908968, 72918968, 72928968, 72938968, 72948968, 72958968, 72968968, 72978968, 729...</msg>
<status status="PASS" starttime="20201112 09:57:25.521" endtime="20201112 09:57:25.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.530" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:25.529" endtime="20201112 09:57:25.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.532" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:25.531" endtime="20201112 09:57:25.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:25.526" endtime="20201112 09:57:25.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.538" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:25.537" endtime="20201112 09:57:25.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.540" level="INFO">VALUE: 72818845</msg>
<status status="PASS" starttime="20201112 09:57:25.539" endtime="20201112 09:57:25.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:25.534" endtime="20201112 09:57:25.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.547" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:25.546" endtime="20201112 09:57:25.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.550" level="INFO">VALUE: [72828971, 72838968, 72848968, 72858968, 72868968, 72878968, 72888968, 72898968, 72908968, 72918968, 72928968, 72938968, 72948968, 72958968, 72968968, 72978968, 72988968, 72998968, 73008968, 73018968, 73028968, 73038968, 73048968, 73058968, 73068968, 73078968, 73088968, 73098968, 73108968, 73118968, 73128968, 73138968, 73148968, 73158968, 73168968, 73178968, 73188968, 73198968, 73208968, 73218968, 73228968, 73238968, 73248968, 73258968, 73268968, 73278968, 73288968, 73298968, 73308968, 73318968, 73328968, 73338968, 73348968, 73358968, 73368968, 73378968, 73388968, 73398968, 73408968, 73418968, 73428968, 73438968, 73448968, 73458968, 73468968, 73478968, 73488968, 73498968, 73508968, 73518968, 73528968, 73538968, 73548968, 73558968, 73568968, 73578968, 73588968, 73598968, 73608968, 73618968, 73628968, 73638968, 73648968, 73658968, 73668968, 73678968, 73688968, 73698968, 73708968, 73718968, 73728968, 73738968, 73748968, 73758968, 73768968, 73778968, 73788968, 73798968, 73808968, 73818968]</msg>
<status status="PASS" starttime="20201112 09:57:25.548" endtime="20201112 09:57:25.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:25.542" endtime="20201112 09:57:25.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:25.566" endtime="20201112 09:57:25.881"></status>
</kw>
<msg timestamp="20201112 09:57:25.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045631375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055758875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:25.557" endtime="20201112 09:57:25.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045631375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055758875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:25.890" endtime="20201112 09:57:25.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:25.907" endtime="20201112 09:57:25.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:25.554" endtime="20201112 09:57:25.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:25.552" endtime="20201112 09:57:25.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:25.969" level="INFO">${RESULT} = {'diff': [0, 0.010127499999999998, 0.009998611000000004, 0.010001014000000003, 0.010001152999999999, 0.010001013999999989, 0.010001139000000006, 0.010001026999999996, 0.010001139000000006, 0.010001014...</msg>
<status status="PASS" starttime="20201112 09:57:25.916" endtime="20201112 09:57:25.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.980" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:25.978" endtime="20201112 09:57:25.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.985" level="INFO">VALUE: 0.045631375</msg>
<status status="PASS" starttime="20201112 09:57:25.983" endtime="20201112 09:57:25.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:25.971" endtime="20201112 09:57:25.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:25.998" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:25.996" endtime="20201112 09:57:25.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:26.003" level="INFO">VALUE: [0.055758875, 0.065757486, 0.0757585, 0.085759653, 0.095760667, 0.105761806, 0.115762833, 0.125763972, 0.135764986, 0.145766181, 0.155767139, 0.165768278, 0.175769306, 0.185770444, 0.195771458, 0.205772611, 0.215773639, 0.225774792, 0.235775833, 0.245776944, 0.255778, 0.265779125, 0.275780097, 0.28578125, 0.29578225, 0.305783417, 0.3157845, 0.325785569, 0.335786583, 0.345787764, 0.355788736, 0.365789903, 0.375790903, 0.385792056, 0.395793069, 0.405794208, 0.415795222, 0.425796375, 0.435797403, 0.445798556, 0.455799542, 0.465800708, 0.475801778, 0.485802875, 0.495803903, 0.505805014, 0.515806028, 0.525807181, 0.53580825, 0.545809361, 0.555810375, 0.5658115, 0.575812528, 0.585813681, 0.595814694, 0.605815833, 0.615816847, 0.625817986, 0.635819, 0.645820153, 0.655821167, 0.665822319, 0.675823375, 0.685824486, 0.6958255, 0.705826653, 0.715827653, 0.725828806, 0.735829847, 0.745830972, 0.755831972, 0.765833181, 0.775834153, 0.785835292, 0.795836347, 0.805837458, 0.815838472, 0.825839611, 0.835840625, 0.845841778, 0.855842792, 0.865843944, 0.875844972, 0.885846111, 0.895847111, 0.905848264, 0.915849278, 0.925850431, 0.935851444, 0.945852597, 0.955853597, 0.965854764, 0.975855764, 0.985856917, 0.995857931, 1.005859083, 1.015860125, 1.02586125, 1.03586225, 1.045863403] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:26.001" endtime="20201112 09:57:26.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:25.988" endtime="20201112 09:57:26.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:26.012" endtime="20201112 09:57:26.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:26.022" endtime="20201112 09:57:26.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.017" endtime="20201112 09:57:26.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.008" endtime="20201112 09:57:26.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.361" endtime="20201112 09:57:26.048"></status>
</kw>
<msg timestamp="20201112 09:57:26.048" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:26.070" endtime="20201112 09:57:28.190"></status>
</kw>
<msg timestamp="20201112 09:57:28.192" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75507280, 'wakeups': [75517405, 75527403, 75537403, 75547403, 755574...</msg>
<status status="PASS" starttime="20201112 09:57:26.066" endtime="20201112 09:57:28.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.199" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75507280, 'wakeups': [75517405, 75527403, 75537403, 75547403, 755574...</msg>
<status status="PASS" starttime="20201112 09:57:28.194" endtime="20201112 09:57:28.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:28.202" endtime="20201112 09:57:28.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.059" endtime="20201112 09:57:28.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.054" endtime="20201112 09:57:28.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:28.215" level="INFO">${RESULT} = {'start-time': 75507280, 'wakeups': [75517405, 75527403, 75537403, 75547403, 75557403, 75567403, 75577403, 75587403, 75597403, 75607403, 75617403, 75627403, 75637403, 75647403, 75657403, 75667403, 756...</msg>
<status status="PASS" starttime="20201112 09:57:28.210" endtime="20201112 09:57:28.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.225" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:28.223" endtime="20201112 09:57:28.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.230" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:28.227" endtime="20201112 09:57:28.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.216" endtime="20201112 09:57:28.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.242" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:28.240" endtime="20201112 09:57:28.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.247" level="INFO">VALUE: 75507280</msg>
<status status="PASS" starttime="20201112 09:57:28.245" endtime="20201112 09:57:28.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.233" endtime="20201112 09:57:28.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.260" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:28.257" endtime="20201112 09:57:28.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.265" level="INFO">VALUE: [75517405, 75527403, 75537403, 75547403, 75557403, 75567403, 75577403, 75587403, 75597403, 75607403, 75617403, 75627403, 75637403, 75647403, 75657403, 75667403, 75677403, 75687403, 75697403, 75707403, 75717403, 75727403, 75737403, 75747403, 75757403, 75767403, 75777403, 75787403, 75797403, 75807403, 75817403, 75827403, 75837403, 75847403, 75857403, 75867403, 75877403, 75887403, 75897403, 75907403, 75917403, 75927403, 75937403, 75947403, 75957403, 75967403, 75977403, 75987403, 75997403, 76007403, 76017403, 76027403, 76037403, 76047403, 76057403, 76067403, 76077403, 76087403, 76097403, 76107403, 76117403, 76127403, 76137403, 76147403, 76157403, 76167403, 76177403, 76187403, 76197403, 76207403, 76217403, 76227403, 76237403, 76247403, 76257403, 76267403, 76277403, 76287403, 76297403, 76307403, 76317403, 76327403, 76337403, 76347403, 76357403, 76367403, 76377403, 76387403, 76397403, 76407403, 76417403, 76427403, 76437403, 76447403, 76457403, 76467403, 76477403, 76487403, 76497403, 76507403]</msg>
<status status="PASS" starttime="20201112 09:57:28.262" endtime="20201112 09:57:28.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.250" endtime="20201112 09:57:28.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:28.287" endtime="20201112 09:57:28.634"></status>
</kw>
<msg timestamp="20201112 09:57:28.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038718347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048845236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:28.284" endtime="20201112 09:57:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038718347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048845236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:28.643" endtime="20201112 09:57:28.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:28.661" endtime="20201112 09:57:28.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.275" endtime="20201112 09:57:28.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.269" endtime="20201112 09:57:28.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:28.726" level="INFO">${RESULT} = {'diff': [0, 0.010126889, 0.009999624999999998, 0.010000999999999996, 0.010001153000000013, 0.010001013999999989, 0.010001152999999999, 0.010001055000000009, 0.010001082999999994, 0.010001028000000009...</msg>
<status status="PASS" starttime="20201112 09:57:28.671" endtime="20201112 09:57:28.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.738" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:28.735" endtime="20201112 09:57:28.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.742" level="INFO">VALUE: 0.038718347</msg>
<status status="PASS" starttime="20201112 09:57:28.740" endtime="20201112 09:57:28.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.729" endtime="20201112 09:57:28.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.756" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:28.754" endtime="20201112 09:57:28.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:28.761" level="INFO">VALUE: [0.048845236, 0.058844861, 0.068845861, 0.078847014, 0.088848028, 0.098849181, 0.108850236, 0.118851319, 0.128852347, 0.138853486, 0.1488545, 0.158855653, 0.168856667, 0.178857806, 0.188858806, 0.198859958, 0.208861042, 0.218862181, 0.228863125, 0.238864292, 0.248865306, 0.258866444, 0.268867444, 0.278868597, 0.288869611, 0.298870764, 0.308871764, 0.318872986, 0.328873931, 0.338875167, 0.348876097, 0.358877236, 0.36887825, 0.378879444, 0.388880403, 0.398881569, 0.408882569, 0.418883722, 0.42888475, 0.438885875, 0.448886889, 0.458888042, 0.468889056, 0.478890208, 0.488891208, 0.498892361, 0.508893375, 0.518894542, 0.528895528, 0.538896681, 0.548897708, 0.558898861, 0.568899861, 0.578901014, 0.588902014, 0.598903181, 0.608904181, 0.618905333, 0.628906347, 0.638907514, 0.648908514, 0.658909667, 0.668910667, 0.678911819, 0.688912819, 0.698913972, 0.708915, 0.718916139, 0.728917167, 0.738918292, 0.748919306, 0.758920458, 0.768921486, 0.778922625, 0.788923625, 0.798924778, 0.808925792, 0.818926944, 0.828927958, 0.838929111, 0.848930125, 0.858931264, 0.868932278, 0.878933431, 0.888934431, 0.898935597, 0.908936611, 0.918937819, 0.928938778, 0.938939917, 0.948940931, 0.958942097, 0.968943083, 0.978944236, 0.988945236, 0.998946389, 1.008947417, 1.018948611, 1.028949583, 1.038950722] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:28.758" endtime="20201112 09:57:28.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.746" endtime="20201112 09:57:28.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:28.770" endtime="20201112 09:57:28.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:28.778" endtime="20201112 09:57:28.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.774" endtime="20201112 09:57:28.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.765" endtime="20201112 09:57:28.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:26.050" endtime="20201112 09:57:28.804"></status>
</kw>
<msg timestamp="20201112 09:57:28.805" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:28.827" endtime="20201112 09:57:30.948"></status>
</kw>
<msg timestamp="20201112 09:57:30.949" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78264725, 'wakeups': [78274851, 78284848, 78294848, 78304848, 783148...</msg>
<status status="PASS" starttime="20201112 09:57:28.824" endtime="20201112 09:57:30.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:30.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78264725, 'wakeups': [78274851, 78284848, 78294848, 78304848, 783148...</msg>
<status status="PASS" starttime="20201112 09:57:30.952" endtime="20201112 09:57:30.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:30.959" endtime="20201112 09:57:30.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.816" endtime="20201112 09:57:30.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.810" endtime="20201112 09:57:30.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:30.973" level="INFO">${RESULT} = {'start-time': 78264725, 'wakeups': [78274851, 78284848, 78294848, 78304848, 78314848, 78324848, 78334848, 78344848, 78354848, 78364848, 78374848, 78384848, 78394848, 78404848, 78414848, 78424848, 784...</msg>
<status status="PASS" starttime="20201112 09:57:30.967" endtime="20201112 09:57:30.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:30.984" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:57:30.982" endtime="20201112 09:57:30.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:30.988" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:57:30.986" endtime="20201112 09:57:30.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:30.975" endtime="20201112 09:57:30.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.002" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:30.999" endtime="20201112 09:57:31.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.006" level="INFO">VALUE: 78264725</msg>
<status status="PASS" starttime="20201112 09:57:31.004" endtime="20201112 09:57:31.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:30.993" endtime="20201112 09:57:31.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.019" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:31.017" endtime="20201112 09:57:31.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.024" level="INFO">VALUE: [78274851, 78284848, 78294848, 78304848, 78314848, 78324848, 78334848, 78344848, 78354848, 78364848, 78374848, 78384848, 78394848, 78404848, 78414848, 78424848, 78434848, 78444848, 78454848, 78464848, 78474848, 78484848, 78494848, 78504848, 78514848, 78524848, 78534848, 78544848, 78554848, 78564848, 78574848, 78584848, 78594848, 78604848, 78614848, 78624848, 78634848, 78644848, 78654848, 78664848, 78674848, 78684848, 78694848, 78704848, 78714848, 78724848, 78734848, 78744848, 78754848, 78764848, 78774848, 78784848, 78794848, 78804848, 78814848, 78824848, 78834848, 78844848, 78854848, 78864848, 78874848, 78884848, 78894848, 78904848, 78914848, 78924848, 78934848, 78944848, 78954848, 78964848, 78974848, 78984848, 78994848, 79004848, 79014848, 79024848, 79034848, 79044848, 79054848, 79064848, 79074848, 79084848, 79094848, 79104848, 79114848, 79124848, 79134848, 79144848, 79154848, 79164848, 79174848, 79184848, 79194848, 79204848, 79214848, 79224848, 79234848, 79244848, 79254848, 79264848]</msg>
<status status="PASS" starttime="20201112 09:57:31.021" endtime="20201112 09:57:31.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.010" endtime="20201112 09:57:31.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:31.043" endtime="20201112 09:57:31.388"></status>
</kw>
<msg timestamp="20201112 09:57:31.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040425403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050552681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:31.040" endtime="20201112 09:57:31.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040425403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050552681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:57:31.396" endtime="20201112 09:57:31.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:31.404" endtime="20201112 09:57:31.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.033" endtime="20201112 09:57:31.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.028" endtime="20201112 09:57:31.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:57:31.431" level="INFO">${RESULT} = {'diff': [0, 0.010127278000000003, 0.009998624999999997, 0.010001054999999995, 0.010001125, 0.01000100000000001, 0.010001166999999991, 0.010001028000000009, 0.010001137999999993, 0.010000999999999996,...</msg>
<status status="PASS" starttime="20201112 09:57:31.408" endtime="20201112 09:57:31.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.437" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:57:31.436" endtime="20201112 09:57:31.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.439" level="INFO">VALUE: 0.040425403</msg>
<status status="PASS" starttime="20201112 09:57:31.438" endtime="20201112 09:57:31.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.432" endtime="20201112 09:57:31.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.445" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:57:31.444" endtime="20201112 09:57:31.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:57:31.448" level="INFO">VALUE: [0.050552681, 0.060551306, 0.070552361, 0.080553486, 0.090554486, 0.100555653, 0.110556681, 0.120557819, 0.130558819, 0.140559972, 0.150560986, 0.160562153, 0.170563153, 0.180564319, 0.190565347, 0.200566472, 0.210567486, 0.220568681, 0.230569653, 0.240570806, 0.250571819, 0.260572972, 0.270573986, 0.280575139, 0.290576153, 0.300577306, 0.310578319, 0.3205795, 0.330580486, 0.340581639, 0.350582653, 0.360583806, 0.370584819, 0.380585986, 0.390587014, 0.400588153, 0.410589167, 0.420590319, 0.430591333, 0.4405925, 0.4505935, 0.460594681, 0.470595667, 0.480596833, 0.490597889, 0.500599, 0.5106, 0.520601153, 0.530602167, 0.540603403, 0.550604347, 0.5606055, 0.570606514, 0.580607667, 0.590608681, 0.600609833, 0.610610931, 0.620612, 0.630613014, 0.640614167, 0.650615194, 0.660616361, 0.670617375, 0.680618514, 0.690619528, 0.700620708, 0.710621694, 0.720622861, 0.730623861, 0.740625028, 0.750626042, 0.760627194, 0.770628222, 0.780629375, 0.790630375, 0.800631528, 0.810632597, 0.820633708, 0.830634708, 0.840635875, 0.850636889, 0.860638042, 0.870639056, 0.880640208, 0.890641222, 0.900642375, 0.910643389, 0.920644542, 0.930645556, 0.940646708, 0.950647722, 0.960648875, 0.970649917, 0.980651056, 0.990652097, 1.000653236, 1.01065425, 1.020655431, 1.030656403, 1.040657556] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:57:31.447" endtime="20201112 09:57:31.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.441" endtime="20201112 09:57:31.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:57:31.452" endtime="20201112 09:57:31.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:57:31.456" endtime="20201112 09:57:31.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.454" endtime="20201112 09:57:31.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:31.450" endtime="20201112 09:57:31.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:28.806" endtime="20201112 09:57:31.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.357" endtime="20201112 09:57:31.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:57:23.355" endtime="20201112 09:57:31.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:56:11.305" endtime="20201112 09:57:31.478"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201112 09:56:11.172" endtime="20201112 09:57:31.479" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:56:08.579" endtime="20201112 09:57:31.483"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201112 09:53:45.776" endtime="20201112 09:57:31.508"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
